Text,POS,Dep,IsSent,startP,endP,wordDep,posDep,Extracts,NewExtracts,parNum,AllExtracts,AExtracts,ExPOS,NNExtracts,NRExtracts,ExPO,NNRExtracts,ExP,NNNRExtracts,Exx,WVG,Polarity,Sent,SentPol,SentESE,NewSentPol,LexSentPol,LSentPol,LLSentPol,ComSentPol
asked the Secretary of State for Northern Ireland what progress has been made with obtaining the extradition of alleged terrorists from the Republic of Ireland; and what resort has been had to the criminal jurisdiction legislation.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN NorthernNNP IrelandNNP whatWP progressNN hasVBZ beenVBN madeVBN withIN obtainingVBG theDT extraditionNN ofIN allegedJJ terroristsNNS fromIN theDT RepublicNNP ofIN IrelandNNP ;: andCC whatWP resortNN hasVBZ beenVBN hadVBN toTO theDT criminalJJ jurisdictionNN legislationNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) nsubjpass(made-13, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Ireland-8, for-6) compound(Ireland-8, Northern-7) nmod:for(made-13, Ireland-8) det(progress-10, what-9) nsubjpass(made-13, progress-10) aux(made-13, has-11) auxpass(made-13, been-12) ccomp(asked-1, made-13) mark(obtaining-15, with-14) advcl(made-13, obtaining-15) det(extradition-17, the-16) dobj(obtaining-15, extradition-17) case(terrorists-20, of-18) amod(terrorists-20, alleged-19) nmod:of(extradition-17, terrorists-20) case(Republic-23, from-21) det(Republic-23, the-22) nmod:from(extradition-17, Republic-23) case(Ireland-25, of-24) nmod:of(Republic-23, Ireland-25) punct(asked-1, ;-26) cc(asked-1, and-27) det(resort-29, what-28) nsubjpass(had-32, resort-29) aux(had-32, has-30) auxpass(had-32, been-31) conj:and(asked-1, had-32) case(legislation-37, to-33) det(legislation-37, the-34) amod(legislation-37, criminal-35) compound(legislation-37, jurisdiction-36) nmod:to(had-32, legislation-37) punct(asked-1, .-38)",0,1,1,"root(ROOT, asked) det(Secretary, the) nsbjpass(made, Secretary) case(State, of) nmod:of(Secretary, State) case(Ireland, for) compond(Ireland, Northern) nmod:for(made, Ireland) det(progress, what) nsbjpass(made, progress) ax(made, has) axpass(made, been) ccomp(asked, made) mark(obtaining, with) advcl(made, obtaining) det(extradition, the) dobj(obtaining, extradition) case(terrorists, of) amod(terrorists, alleged) nmod:of(extradition, terrorists) case(Repblic, from) det(Repblic, the) nmod:from(extradition, Repblic) case(Ireland, of) nmod:of(Repblic, Ireland) pnct(asked, ;) cc(asked, and) det(resort, what) nsbjpass(had, resort) ax(had, has) axpass(had, been) conj:and(asked, had) case(legislation, to) det(legislation, the) amod(legislation, criminal) compond(legislation, jrisdiction) nmod:to(had, legislation) pnct(asked, .)","root(,) det(NNP,DT) nsbjpass(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) compond(NNP,NNP) nmod:for(VBN,NNP) det(NN,WP) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) ccomp(VBN,VBN) mark(VBG,IN) advcl(VBN,VBG) det(NN,DT) dobj(VBG,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) case(NNP,IN) det(NNP,DT) nmod:from(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NNP,:) cc(:,CC) det(NN,WP) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) conj:and(VBN,VBN) case(NN,TO) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:to(VBN,NN) pnct(NN,NN)","[Secretary, asked, State, Ireland, obtaining, progress, made]","[Secretary, asked, State, Ireland, obtaining, progress, made]",1,[ ],[ ],NNP_Secretary VBN_asked NNP_State NNP_Ireland VBG_obtaining NN_progress VBN_made ,"[Secretary, asked, State, Ireland, obtaining, progress, made]","[Secretary, asked, State, Ireland, obtaining, progress, made]",NNP_Secretary VBN_asked NNP_State NNP_Ireland VBG_obtaining NN_progress VBN_made ,"[Secretary, asked, State, Ireland, obtaining, progress, made]",NNP_Secretary VBN_asked NNP_State NNP_Ireland VBG_obtaining NN_progress VBN_made ,"[Secretary, asked, State, Ireland, obtaining, progress, made]",NNP_Secretary VBN_asked NNP_State NNP_Ireland VBG_obtaining NN_progress VBN_made ,-3,0,2,1,1,1,1,1,1,2
I have frequently made clear most recently in my discussions on 5 October with Ministers of the Irish Republic the Government's concern that those who commit terrorist crimes in Northern Ireland and flee to the Republic should be brought to justice.,IPRP haveVBP frequentlyRB madeVBN clearJJ mostRBS recentlyRB inIN myPRP$ discussionsNNS onIN 5CD OctoberNNP withIN MinistersNNP ofIN theDT IrishNNP RepublicNNP theDT GovernmentNNP 'sPOS concernNN thatIN thoseDT whoWP commitVBP terroristJJ crimesNNS inIN NorthernNNP IrelandNNP andCC fleeNN toTO theDT RepublicNNP shouldMD beVB broughtVBN toTO justiceNN ,"root(ROOT-0, made-4) nsubj(made-4, I-1) aux(made-4, have-2) advmod(made-4, frequently-3) xcomp(made-4, clear-5) advmod(recently-7, most-6) advmod(clear-5, recently-7) case(discussions-10, in-8) nmod:poss(discussions-10, my-9) nmod:in(made-4, discussions-10) case(October-13, on-11) nummod(October-13, 5-12) nmod:on(discussions-10, October-13) case(Ministers-15, with-14) nmod:with(discussions-10, Ministers-15) case(Republic-19, of-16) det(Republic-19, the-17) amod(Republic-19, Irish-18) nmod:of(Ministers-15, Republic-19) det(Government-21, the-20) nmod:poss(concern-23, Government-21) case(Government-21, 's-22) dep(Republic-19, concern-23) mark(brought-40, that-24) nsubjpass(brought-40, those-25) nsubj(commit-27, who-26) nsubj(flee-34, who-26) acl:relcl(those-25, commit-27) amod(crimes-29, terrorist-28) dobj(commit-27, crimes-29) case(Ireland-32, in-30) amod(Ireland-32, Northern-31) nmod:in(commit-27, Ireland-32) cc(commit-27, and-33) acl:relcl(those-25, flee-34) conj:and(commit-27, flee-34) case(Republic-37, to-35) det(Republic-37, the-36) nmod:to(flee-34, Republic-37) aux(brought-40, should-38) auxpass(brought-40, be-39) ccomp(concern-23, brought-40) case(justice-42, to-41) nmod:to(brought-40, justice-42) punct(made-4, .-43)",0,1,0,"root(ROOT, made) nsbj(made, I) ax(made, have) advmod(made, freqently) xcomp(made, clear) advmod(recently, most) advmod(clear, recently) case(discssions, in) nmod:poss(discssions, my) nmod:in(made, discssions) case(October, on) nmmod(October, 5) nmod:on(discssions, October) case(Ministers, with) nmod:with(discssions, Ministers) case(Repblic, of) det(Repblic, the) amod(Repblic, Irish) nmod:of(Ministers, Repblic) det(Government, the) nmod:poss(concern, Government) ""case(Government, s)"", dep(Repblic, concern) mark(broght, that) nsbjpass(broght, those) nsbj(commit, who) nsbj(flee, who) acl:relcl(those, commit) amod(crimes, terrorist) dobj(commit, crimes) case(Ireland, in) amod(Ireland, Northern) nmod:in(commit, Ireland) cc(commit, and) acl:relcl(those, flee) conj:and(commit, flee) case(Repblic, to) det(Repblic, the) nmod:to(flee, Repblic) ax(broght, shold) axpass(broght, be) ccomp(concern, broght) case(jstice, to) nmod:to(broght, jstice) pnct(made, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) xcomp(VBN,JJ) advmod(RB,RBS) advmod(JJ,RB) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:in(VBN,NNS) case(NNP,IN) nmmod(NNP,CD) nmod:on(NNS,NNP) case(NNP,IN) nmod:with(NNS,NNP) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:of(NNP,NNP) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) dep(NNP,NN) mark(VBN,IN) nsbjpass(VBN,DT) nsbj(VBP,WP) nsbj(NN,WP) acl:relcl(DT,VBP) amod(NNS,JJ) dobj(VBP,NNS) case(NNP,IN) amod(NNP,NNP) nmod:in(VBP,NNP) cc(VBP,CC) acl:relcl(DT,NN) conj:and(VBP,NN) case(NNP,TO) det(NNP,DT) nmod:to(NN,NNP) ax(VBN,MD) axpass(VBN,VB) ccomp(NN,VBN) case(NN,TO) nmod:to(VBN,NN) pnct(VBN,VBN)","[Government, Republic, concern, brought]","[Government, Republic, concern, brought]",2,"[Government, Republic, concern, brought]","[Government, Republic, concern, brought]",NNP_Government NNP_Republic NN_concern VBN_brought ,"[Government, Republic, concern, brought]","[Government, Republic, concern, brought]",NNP_Government NNP_Republic NN_concern VBN_brought ,"[Government, Republic, concern, brought]",NNP_Government NNP_Republic NN_concern VBN_brought ,"[Government, Republic, concern, brought]",NNP_Government NNP_Republic NN_concern VBN_brought ,-3,0,2,2,1,2,2,2,2,2
Extradition procedures have  in practice proved ineffective because the Irish High Court has found cause not to grant extradition for offences which are claimed to be political or to be associated with political offences.,ExtraditionNN proceduresNNS haveVBP inIN practiceNN provedVBD ineffectiveJJ becauseIN theDT IrishNNP HighNNP CourtNNP hasVBZ foundVBN causeRB notRB toTO grantVB extraditionNN forIN offencesNNS whichWDT areVBP claimedVBN toTO beVB politicalJJ orCC toTO beVB associatedVBN withIN politicalJJ offencesNNS ,"root(ROOT-0, have-3) compound(procedures-2, Extradition-1) nsubj(have-3, procedures-2) punct(proved-7, ,-4) case(practice-6, in-5) nmod:in(proved-7, practice-6) ccomp(have-3, proved-7) xcomp(proved-7, ineffective-8) mark(found-15, because-9) det(Court-13, the-10) compound(Court-13, Irish-11) compound(Court-13, High-12) nsubj(found-15, Court-13) aux(found-15, has-14) advcl(proved-7, found-15) dobj(found-15, cause-16) neg(grant-19, not-17) mark(grant-19, to-18) acl(cause-16, grant-19) dobj(grant-19, extradition-20) case(offences-22, for-21) nmod:for(grant-19, offences-22) nsubjpass(claimed-25, which-23) auxpass(claimed-25, are-24) acl:relcl(offences-22, claimed-25) mark(political-28, to-26) cop(political-28, be-27) xcomp(claimed-25, political-28) cc(political-28, or-29) mark(associated-32, to-30) auxpass(associated-32, be-31) xcomp(claimed-25, associated-32) conj:or(political-28, associated-32) case(offences-35, with-33) amod(offences-35, political-34) nmod:with(associated-32, offences-35) punct(have-3, .-36)",0,0,0,"root(ROOT, have) compond(procedres, Extradition) nsbj(have, procedres) pnct(proved, ,) case(practice, in) nmod:in(proved, practice) ccomp(have, proved) xcomp(proved, ineffective) mark(fond, becase) det(Cort, the) compond(Cort, Irish) compond(Cort, High) nsbj(fond, Cort) ax(fond, has) advcl(proved, fond) dobj(fond, case) neg(grant, not) mark(grant, to) acl(case, grant) dobj(grant, extradition) case(offences, for) nmod:for(grant, offences) nsbjpass(claimed, which) axpass(claimed, are) acl:relcl(offences, claimed) mark(political, to) cop(political, be) xcomp(claimed, political) cc(political, or) mark(associated, to) axpass(associated, be) xcomp(claimed, associated) conj:or(political, associated) case(offences, with) amod(offences, political) nmod:with(associated, offences) pnct(have, .)","root(,VBP) compond(NNS,NN) nsbj(VBP,NNS) pnct(VBD,VBD) case(NN,IN) nmod:in(VBD,NN) ccomp(VBP,VBD) xcomp(VBD,JJ) mark(VBN,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) advcl(VBD,VBN) dobj(VBN,RB) neg(VB,RB) mark(VB,TO) acl(RB,VB) dobj(VB,NN) case(NNS,IN) nmod:for(VB,NNS) nsbjpass(VBN,WDT) axpass(VBN,VBP) acl:relcl(NNS,VBN) mark(JJ,TO) cop(JJ,VB) xcomp(VBN,JJ) cc(JJ,CC) mark(VBN,TO) axpass(VBN,VB) xcomp(VBN,VBN) conj:or(JJ,VBN) case(NNS,IN) amod(NNS,JJ) nmod:with(VBN,NNS) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Evidence gathered by the RUC concerning persons who are alleged to have committed terrorist offences in Northern Ireland  but who are now known to be in the Irish Republic  has recently been made available to the Garda.,EvidenceNN gatheredVBN byIN theDT RUCNNP concerningVBG personsNNS whoWP areVBP allegedVBN toTO haveVB committedVBN terroristJJ offencesNNS inIN NorthernNNP IrelandNNP butCC whoWP areVBP nowRB knownVBN toTO beVB inIN theDT IrishNNP RepublicNNP hasVBZ recentlyRB beenVBN madeVBN availableJJ toTO theDT GardaNNP ,"root(ROOT-0, Evidence-1) acl(Evidence-1, gathered-2) case(RUC-5, by-3) det(RUC-5, the-4) nmod:by(gathered-2, RUC-5) case(persons-7, concerning-6) nmod:concerning(RUC-5, persons-7) nsubjpass(alleged-10, who-8) auxpass(alleged-10, are-9) acl:relcl(persons-7, alleged-10) mark(committed-13, to-11) aux(committed-13, have-12) xcomp(alleged-10, committed-13) amod(offences-15, terrorist-14) dobj(committed-13, offences-15) case(Ireland-18, in-16) amod(Ireland-18, Northern-17) nmod:in(committed-13, Ireland-18) punct(Evidence-1, ,-19) cc(Evidence-1, but-20) nsubjpass(known-24, who-21) auxpass(known-24, are-22) advmod(known-24, now-23) conj:but(Evidence-1, known-24) mark(Republic-30, to-25) cop(Republic-30, be-26) case(Republic-30, in-27) det(Republic-30, the-28) amod(Republic-30, Irish-29) xcomp(known-24, Republic-30) punct(known-24, ,-31) aux(made-35, has-32) advmod(made-35, recently-33) auxpass(made-35, been-34) parataxis(known-24, made-35) xcomp(made-35, available-36) case(Garda-39, to-37) det(Garda-39, the-38) nmod:to(available-36, Garda-39) punct(Evidence-1, .-40)",0,0,0,"root(ROOT, Evidence) acl(Evidence, gathered) case(RUC, by) det(RUC, the) nmod:by(gathered, RUC) case(persons, concerning) nmod:concerning(RUC, persons) nsbjpass(alleged, who) axpass(alleged, are) acl:relcl(persons, alleged) mark(committed, to) ax(committed, have) xcomp(alleged, committed) amod(offences, terrorist) dobj(committed, offences) case(Ireland, in) amod(Ireland, Northern) nmod:in(committed, Ireland) pnct(Evidence, ,) cc(Evidence, bt) nsbjpass(known, who) axpass(known, are) advmod(known, now) conj:bt(Evidence, known) mark(Repblic, to) cop(Repblic, be) case(Repblic, in) det(Repblic, the) amod(Repblic, Irish) xcomp(known, Repblic) pnct(known, ,) ax(made, has) advmod(made, recently) axpass(made, been) parataxis(known, made) xcomp(made, available) case(Garda, to) det(Garda, the) nmod:to(available, Garda) pnct(Evidence, .)","root(,NN) acl(NN,VBN) case(NNP,IN) det(NNP,DT) nmod:by(VBN,NNP) case(NNS,VBG) nmod:concerning(NNP,NNS) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(NNS,VBN) mark(VBN,TO) ax(VBN,VB) xcomp(VBN,VBN) amod(NNS,JJ) dobj(VBN,NNS) case(NNP,IN) amod(NNP,NNP) nmod:in(VBN,NNP) pnct(NN,NN) cc(NN,CC) nsbjpass(VBN,WP) axpass(VBN,VBP) advmod(VBN,RB) conj:bt(NN,VBN) mark(NNP,TO) cop(NNP,VB) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) xcomp(VBN,NNP) pnct(VBN,VBN) ax(VBN,VBZ) advmod(VBN,RB) axpass(VBN,VBN) parataxis(VBN,VBN) xcomp(VBN,JJ) case(NNP,TO) det(NNP,DT) nmod:to(JJ,NNP) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We hope this will enable the Garda to bring prosecutions under the extra territorial criminal jurisdiction legislation  which allows terrorist suspects to be brought to trial in one jurisdiction for specified offences committed in the other after 1 June 1976.,WePRP hopeVBP thisDT willMD enableVB theDT GardaNNP toTO bringVB prosecutionsNNS underIN theDT extraJJ territorialJJ criminalJJ jurisdictionNN legislationNN whichWDT allowsVBZ terroristNN suspectsNNS toTO beVB broughtVBN toTO trialNN inIN oneCD jurisdictionNN forIN specifiedJJ offencesNNS committedVBN inIN theDT otherJJ afterIN 1CD JuneNNP 1976CD ,"root(ROOT-0, hope-2) nsubj(hope-2, We-1) nsubj(enable-5, this-3) aux(enable-5, will-4) ccomp(hope-2, enable-5) det(Garda-7, the-6) dobj(enable-5, Garda-7) mark(bring-9, to-8) xcomp(enable-5, bring-9) dobj(bring-9, prosecutions-10) case(legislation-17, under-11) det(legislation-17, the-12) amod(legislation-17, extra-13) amod(legislation-17, territorial-14) amod(legislation-17, criminal-15) compound(legislation-17, jurisdiction-16) nmod:under(bring-9, legislation-17) punct(legislation-17, ,-18) nsubj(allows-20, which-19) acl:relcl(legislation-17, allows-20) amod(suspects-22, terrorist-21) dobj(allows-20, suspects-22) mark(brought-25, to-23) auxpass(brought-25, be-24) xcomp(allows-20, brought-25) case(trial-27, to-26) nmod:to(brought-25, trial-27) case(jurisdiction-30, in-28) nummod(jurisdiction-30, one-29) nmod:in(brought-25, jurisdiction-30) case(offences-33, for-31) amod(offences-33, specified-32) nmod:for(brought-25, offences-33) acl(offences-33, committed-34) case(other-37, in-35) det(other-37, the-36) nmod:in(committed-34, other-37) case(June-40, after-38) nummod(June-40, 1-39) nmod:after(committed-34, June-40) nummod(June-40, 1976-41) punct(hope-2, .-42)",0,0,0,"root(ROOT, hope) nsbj(hope, We) nsbj(enable, this) ax(enable, will) ccomp(hope, enable) det(Garda, the) dobj(enable, Garda) mark(bring, to) xcomp(enable, bring) dobj(bring, prosections) case(legislation, nder) det(legislation, the) amod(legislation, extra) amod(legislation, territorial) amod(legislation, criminal) compond(legislation, jrisdiction) nmod:nder(bring, legislation) pnct(legislation, ,) nsbj(allows, which) acl:relcl(legislation, allows) amod(sspects, terrorist) dobj(allows, sspects) mark(broght, to) axpass(broght, be) xcomp(allows, broght) case(trial, to) nmod:to(broght, trial) case(jrisdiction, in) nmmod(jrisdiction, one) nmod:in(broght, jrisdiction) case(offences, for) amod(offences, specified) nmod:for(broght, offences) acl(offences, committed) case(other, in) det(other, the) nmod:in(committed, other) case(Jne, after) nmmod(Jne, 1) nmod:after(committed, Jne) nmmod(Jne, 1976) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) nsbj(VB,DT) ax(VB,MD) ccomp(VBP,VB) det(NNP,DT) dobj(VB,NNP) mark(VB,TO) xcomp(VB,VB) dobj(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) amod(NN,JJ) compond(NN,NN) nmod:nder(VB,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) amod(NNS,NN) dobj(VBZ,NNS) mark(VBN,TO) axpass(VBN,VB) xcomp(VBZ,VBN) case(NN,TO) nmod:to(VBN,NN) case(NN,IN) nmmod(NN,CD) nmod:in(VBN,NN) case(NNS,IN) amod(NNS,JJ) nmod:for(VBN,NNS) acl(NNS,VBN) case(JJ,IN) det(JJ,DT) nmod:in(VBN,JJ) case(NNP,IN) nmmod(NNP,CD) nmod:after(VBN,NNP) nmmod(NNP,CD) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is solely for the responsible authorities in the Republic to determine whether charges should be brought  as would be the case in this country in similar circumstances.,ItPRP isVBZ solelyRB forIN theDT responsibleJJ authoritiesNNS inIN theDT RepublicNNP toTO determineVB whetherIN chargesNNS shouldMD beVB broughtVBN asRB wouldMD beVB theDT caseNN inIN thisDT countryNN inIN similarJJ circumstancesNNS ,"root(ROOT-0, authorities-7) nsubj(authorities-7, It-1) cop(authorities-7, is-2) advmod(authorities-7, solely-3) case(authorities-7, for-4) det(authorities-7, the-5) amod(authorities-7, responsible-6) case(Republic-10, in-8) det(Republic-10, the-9) nmod:in(authorities-7, Republic-10) mark(determine-12, to-11) acl(authorities-7, determine-12) mark(brought-17, whether-13) nsubjpass(brought-17, charges-14) aux(brought-17, should-15) auxpass(brought-17, be-16) ccomp(determine-12, brought-17) punct(brought-17, ,-18) mark(case-23, as-19) aux(case-23, would-20) cop(case-23, be-21) det(case-23, the-22) advcl(brought-17, case-23) case(country-26, in-24) det(country-26, this-25) nmod:in(case-23, country-26) case(circumstances-29, in-27) amod(circumstances-29, similar-28) nmod:in(case-23, circumstances-29) punct(authorities-7, .-30)",0,0,0,"root(ROOT, athorities) nsbj(athorities, It) cop(athorities, is) advmod(athorities, solely) case(athorities, for) det(athorities, the) amod(athorities, responsible) case(Repblic, in) det(Repblic, the) nmod:in(athorities, Repblic) mark(determine, to) acl(athorities, determine) mark(broght, whether) nsbjpass(broght, charges) ax(broght, shold) axpass(broght, be) ccomp(determine, broght) pnct(broght, ,) mark(case, as) ax(case, wold) cop(case, be) det(case, the) advcl(broght, case) case(contry, in) det(contry, this) nmod:in(case, contry) case(circmstances, in) amod(circmstances, similar) nmod:in(case, circmstances) pnct(athorities, .)","root(,NNS) nsbj(NNS,PRP) cop(NNS,VBZ) advmod(NNS,RB) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) case(NNP,IN) det(NNP,DT) nmod:in(NNS,NNP) mark(VB,TO) acl(NNS,VB) mark(VBN,IN) nsbjpass(VBN,NNS) ax(VBN,MD) axpass(VBN,VB) ccomp(VB,VBN) pnct(VBN,VBN) mark(NN,RB) ax(NN,MD) cop(NN,VB) det(NN,DT) advcl(VBN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(NN,NNS) pnct(NNS,NNS)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  I remind hon. Members that I agreed with Irish Ministers on 5 October on the importance of making further use of the extra territorial legislation.,HoweverRB IPRP remindVBP honJJ MembersNNS thatIN IPRP agreedVBD withIN IrishJJ MinistersNNS onIN 5CD OctoberNNP onIN theDT importanceNN ofIN makingVBG furtherJJ useNN ofIN theDT extraJJ territorialJJ legislationNN ,"root(ROOT-0, remind-4) advmod(remind-4, However-1) punct(remind-4, ,-2) nsubj(remind-4, I-3) compound(Members-6, hon.-5) dobj(remind-4, Members-6) mark(agreed-9, that-7) nsubj(agreed-9, I-8) ccomp(remind-4, agreed-9) case(Ministers-12, with-10) amod(Ministers-12, Irish-11) nmod:with(agreed-9, Ministers-12) case(October-15, on-13) nummod(October-15, 5-14) nmod:on(agreed-9, October-15) case(importance-18, on-16) det(importance-18, the-17) nmod:on(agreed-9, importance-18) mark(making-20, of-19) acl(importance-18, making-20) amod(use-22, further-21) dobj(making-20, use-22) case(legislation-27, of-23) det(legislation-27, the-24) amod(legislation-27, extra-25) amod(legislation-27, territorial-26) nmod:of(use-22, legislation-27) punct(remind-4, .-28)",0,0,0,"root(ROOT, remind) advmod(remind, However) pnct(remind, ,) nsbj(remind, I) compond(Members, hon.) dobj(remind, Members) mark(agreed, that) nsbj(agreed, I) ccomp(remind, agreed) case(Ministers, with) amod(Ministers, Irish) nmod:with(agreed, Ministers) case(October, on) nmmod(October, 5) nmod:on(agreed, October) case(importance, on) det(importance, the) nmod:on(agreed, importance) mark(making, of) acl(importance, making) amod(se, frther) dobj(making, se) case(legislation, of) det(legislation, the) amod(legislation, extra) amod(legislation, territorial) nmod:of(se, legislation) pnct(remind, .)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) nsbj(VBP,PRP) compond(NNS,NNS) dobj(VBP,NNS) mark(VBD,IN) nsbj(VBD,PRP) ccomp(VBP,VBD) case(NNS,IN) amod(NNS,JJ) nmod:with(VBD,NNS) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) case(NN,IN) det(NN,DT) nmod:on(VBD,NN) mark(VBG,IN) acl(NN,VBG) amod(NN,JJ) dobj(VBG,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:of(NN,NN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the Secretary of State really expect this legislation to be effective?,DoesVBZ theDT SecretaryNNP ofIN StateNNP reallyRB expectVB thisDT legislationNN toTO beVB effectiveJJ ,"root(ROOT-0, expect-7) aux(expect-7, Does-1) det(Secretary-3, the-2) nsubj(expect-7, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) advmod(expect-7, really-6) det(legislation-9, this-8) dobj(expect-7, legislation-9) mark(effective-12, to-10) cop(effective-12, be-11) xcomp(expect-7, effective-12) punct(expect-7, ?-13)",0,1,0,"root(ROOT, expect) ax(expect, Does) det(Secretary, the) nsbj(expect, Secretary) case(State, of) nmod:of(Secretary, State) advmod(expect, really) det(legislation, this) dobj(expect, legislation) mark(effective, to) cop(effective, be) xcomp(expect, effective) pnct(expect, ?)","root(,VB) ax(VB,VBZ) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) advmod(VB,RB) det(NN,DT) dobj(VB,NN) mark(JJ,TO) cop(JJ,VB) xcomp(VB,JJ) pnct(VB,VB)","[expect, Secretary, ROOT, State, really, effective, legislation]","[expect, Secretary, ROOT, State, really, effective, legislation]",3,[ ],[ ],VB_expect NNP_Secretary NNP_State RB_really JJ_effective NN_legislation ,"[expect, Secretary, ROOT, State, really, effective, legislation]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is he aware that there is no provision in international law which prohibits extradition of such persons from the Irish Republic?,IsVBZ hePRP awareJJ thatIN thereEX isVBZ noDT provisionNN inIN internationalJJ lawNN whichWDT prohibitsVBZ extraditionNN ofIN suchJJ personsNNS fromIN theDT IrishNNP RepublicNNP ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) mark(is-6, that-4) expl(is-6, there-5) ccomp(aware-3, is-6) neg(provision-8, no-7) nsubj(is-6, provision-8) case(law-11, in-9) amod(law-11, international-10) nmod:in(provision-8, law-11) nsubj(prohibits-13, which-12) acl:relcl(provision-8, prohibits-13) dobj(prohibits-13, extradition-14) case(persons-17, of-15) amod(persons-17, such-16) nmod:of(extradition-14, persons-17) case(Republic-21, from-18) det(Republic-21, the-19) amod(Republic-21, Irish-20) nmod:from(extradition-14, Republic-21) punct(aware-3, ?-22)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) mark(is, that) expl(is, there) ccomp(aware, is) neg(provision, no) nsbj(is, provision) case(law, in) amod(law, international) nmod:in(provision, law) nsbj(prohibits, which) acl:relcl(provision, prohibits) dobj(prohibits, extradition) case(persons, of) amod(persons, sch) nmod:of(extradition, persons) case(Repblic, from) det(Repblic, the) amod(Repblic, Irish) nmod:from(extradition, Repblic) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) mark(VBZ,IN) expl(VBZ,EX) ccomp(JJ,VBZ) neg(NN,DT) nsbj(VBZ,NN) case(NN,IN) amod(NN,JJ) nmod:in(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) dobj(VBZ,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:from(NN,NNP) pnct(JJ,JJ)","[he, ROOT, aware, is]","[he, ROOT, aware, is]",3,"[he, ROOT, aware, is]",[ ],PRP_he JJ_aware VBZ_is ,"[he, ROOT, aware, is]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The fault lies entirely with the Irish Republic.,TheDT faultNN liesVBZ entirelyRB withIN theDT IrishNNP RepublicNNP ,"root(ROOT-0, lies-3) det(fault-2, The-1) nsubj(lies-3, fault-2) advmod(lies-3, entirely-4) case(Republic-8, with-5) det(Republic-8, the-6) amod(Republic-8, Irish-7) nmod:with(lies-3, Republic-8) punct(lies-3, .-9)",0,0,0,"root(ROOT, lies) det(falt, The) nsbj(lies, falt) advmod(lies, entirely) case(Repblic, with) det(Repblic, the) amod(Repblic, Irish) nmod:with(lies, Repblic) pnct(lies, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) advmod(VBZ,RB) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:with(VBZ,NNP) pnct(VBZ,VBZ)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It would not be appropriate for me to comment on the decisions taken by the courts of another country  but I must say that I think the legislation will prove effective.,ItPRP wouldMD notRB beVB appropriateJJ forIN mePRP toTO commentVB onIN theDT decisionsNNS takenVBN byIN theDT courtsNNS ofIN anotherDT countryNN butCC IPRP mustMD sayVB thatIN IPRP thinkVBP theDT legislationNN willMD proveVB effectiveJJ ,"root(ROOT-0, appropriate-5) nsubj(appropriate-5, It-1) aux(appropriate-5, would-2) neg(appropriate-5, not-3) cop(appropriate-5, be-4) mark(comment-9, for-6) nsubj(comment-9, me-7) mark(comment-9, to-8) advcl(appropriate-5, comment-9) case(decisions-12, on-10) det(decisions-12, the-11) nmod:on(comment-9, decisions-12) acl(decisions-12, taken-13) case(courts-16, by-14) det(courts-16, the-15) nmod:by(taken-13, courts-16) case(country-19, of-17) det(country-19, another-18) nmod:of(courts-16, country-19) punct(appropriate-5, ,-20) cc(appropriate-5, but-21) nsubj(say-24, I-22) aux(say-24, must-23) conj:but(appropriate-5, say-24) mark(think-27, that-25) nsubj(think-27, I-26) ccomp(say-24, think-27) det(legislation-29, the-28) nsubj(prove-31, legislation-29) aux(prove-31, will-30) ccomp(think-27, prove-31) xcomp(prove-31, effective-32) punct(appropriate-5, .-33)",0,0,0,"root(ROOT, appropriate) nsbj(appropriate, It) ax(appropriate, wold) neg(appropriate, not) cop(appropriate, be) mark(comment, for) nsbj(comment, me) mark(comment, to) advcl(appropriate, comment) case(decisions, on) det(decisions, the) nmod:on(comment, decisions) acl(decisions, taken) case(corts, by) det(corts, the) nmod:by(taken, corts) case(contry, of) det(contry, another) nmod:of(corts, contry) pnct(appropriate, ,) cc(appropriate, bt) nsbj(say, I) ax(say, mst) conj:bt(appropriate, say) mark(think, that) nsbj(think, I) ccomp(say, think) det(legislation, the) nsbj(prove, legislation) ax(prove, will) ccomp(think, prove) xcomp(prove, effective) pnct(appropriate, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) neg(JJ,RB) cop(JJ,VB) mark(VB,IN) nsbj(VB,PRP) mark(VB,TO) advcl(JJ,VB) case(NNS,IN) det(NNS,DT) nmod:on(VB,NNS) acl(NNS,VBN) case(NNS,IN) det(NNS,DT) nmod:by(VBN,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(JJ,JJ) cc(JJ,CC) nsbj(VB,PRP) ax(VB,MD) conj:bt(JJ,VB) mark(VBP,IN) nsbj(VBP,PRP) ccomp(VB,VBP) det(NN,DT) nsbj(VB,NN) ax(VB,MD) ccomp(VBP,VB) xcomp(VB,JJ) pnct(JJ,JJ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Irish Ministers whom I met on 5 October  including the Minister of Justice  agreed that the fuller use of the extra territorial legislation was a step forward of which we should make better use.,TheDT IrishJJ MinistersNNP whomWP IPRP metVBD onIN 5CD OctoberNNP includingVBG theDT MinisterNNP ofIN JusticeNNP agreedVBD thatIN theDT fullerNN useNN ofIN theDT extraJJ territorialJJ legislationNN wasVBD aDT stepNN forwardNN ofIN whichWDT wePRP shouldMD makeVB betterJJR useNN ,"root(ROOT-0, agreed-17) det(Ministers-3, The-1) amod(Ministers-3, Irish-2) nsubj(agreed-17, Ministers-3) dobj(met-6, whom-4) nsubj(met-6, I-5) acl:relcl(Ministers-3, met-6) case(October-9, on-7) nummod(October-9, 5-8) nmod:on(met-6, October-9) punct(Ministers-3, ,-10) case(Minister-13, including-11) det(Minister-13, the-12) nmod:including(Ministers-3, Minister-13) case(Justice-15, of-14) nmod:of(Minister-13, Justice-15) punct(Ministers-3, ,-16) mark(step-29, that-18) det(use-21, the-19) amod(use-21, fuller-20) nsubj(step-29, use-21) case(legislation-26, of-22) det(legislation-26, the-23) amod(legislation-26, extra-24) amod(legislation-26, territorial-25) nmod:of(use-21, legislation-26) cop(step-29, was-27) det(step-29, a-28) ccomp(agreed-17, step-29) advmod(step-29, forward-30) case(which-32, of-31) nmod:of(make-35, which-32) nsubj(make-35, we-33) aux(make-35, should-34) acl:relcl(forward-30, make-35) amod(use-37, better-36) dobj(make-35, use-37) punct(agreed-17, .-38)",0,0,0,"root(ROOT, agreed) det(Ministers, The) amod(Ministers, Irish) nsbj(agreed, Ministers) dobj(met, whom) nsbj(met, I) acl:relcl(Ministers, met) case(October, on) nmmod(October, 5) nmod:on(met, October) pnct(Ministers, ,) case(Minister, inclding) det(Minister, the) nmod:inclding(Ministers, Minister) case(Jstice, of) nmod:of(Minister, Jstice) pnct(Ministers, ,) mark(step, that) det(se, the) amod(se, fller) nsbj(step, se) case(legislation, of) det(legislation, the) amod(legislation, extra) amod(legislation, territorial) nmod:of(se, legislation) cop(step, was) det(step, a) ccomp(agreed, step) advmod(step, forward) case(which, of) nmod:of(make, which) nsbj(make, we) ax(make, shold) acl:relcl(forward, make) amod(se, better) dobj(make, se) pnct(agreed, .)","root(,VBD) det(NNP,DT) amod(NNP,JJ) nsbj(VBD,NNP) dobj(VBD,WP) nsbj(VBD,PRP) acl:relcl(NNP,VBD) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) pnct(NNP,NNP) case(NNP,VBG) det(NNP,DT) nmod:inclding(NNP,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NNP,NNP) mark(NN,IN) det(NN,DT) amod(NN,NN) nsbj(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:of(NN,NN) cop(NN,VBD) det(NN,DT) ccomp(VBD,NN) advmod(NN,NN) case(WDT,IN) nmod:of(VB,WDT) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) amod(NN,JJR) dobj(VB,NN) pnct(VBD,VBD)","[Justice, Minister]",[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Since the Irish Foreign Minister himself asserted when in opposition  in line with the erudite article in The Daily Telegraph  that there is no constitutional objection to extradition  does my right hon. Friend not agree that consistency in this matter would be as welcome as the progress made in cross border co operation?,SinceIN theDT IrishNNP ForeignNNP MinisterNNP himselfPRP assertedVBD whenWRB inIN OppositionNN inIN lineNN withIN theDT eruditeJJ articleNN inIN TheDT DailyNNP TelegraphNNP thatIN thereEX isVBZ noDT constitutionalJJ objectionNN toTO extraditionNN doesVBZ myPRP$ rightJJ honNN FriendNNP notRB agreeVB thatIN consistencyNN inIN thisDT matterNN wouldMD beVB asRB welcomeJJ asIN theDT progressNN madeVBN inIN crossNN borderNN coNN operationNN ,"root(ROOT-0, asserted-7) mark(asserted-7, Since-1) det(Minister-5, the-2) compound(Minister-5, Irish-3) compound(Minister-5, Foreign-4) nsubj(asserted-7, Minister-5) nsubj(asserted-7, himself-6) advmod(agree-38, when-8) case(Opposition-10, in-9) nmod:in(agree-38, Opposition-10) punct(Opposition-10, ,-11) case(line-13, in-12) nmod:in(Opposition-10, line-13) case(article-17, with-14) det(article-17, the-15) amod(article-17, erudite-16) nmod:with(line-13, article-17) case(Telegraph-21, in-18) det(Telegraph-21, The-19) compound(Telegraph-21, Daily-20) nmod:in(article-17, Telegraph-21) punct(Opposition-10, ,-22) mark(is-25, that-23) expl(is-25, there-24) acl:relcl(Opposition-10, is-25) neg(objection-28, no-26) amod(objection-28, constitutional-27) nsubj(is-25, objection-28) case(extradition-30, to-29) nmod:to(objection-28, extradition-30) punct(Opposition-10, ,-31) aux(agree-38, does-32) nmod:poss(Friend-36, my-33) amod(Friend-36, right-34) compound(Friend-36, hon.-35) nsubj(agree-38, Friend-36) neg(agree-38, not-37) ccomp(asserted-7, agree-38) mark(welcome-47, that-39) nsubj(welcome-47, consistency-40) case(matter-43, in-41) det(matter-43, this-42) nmod:in(consistency-40, matter-43) aux(welcome-47, would-44) cop(welcome-47, be-45) mark(welcome-47, as-46) ccomp(agree-38, welcome-47) advmod(welcome-47, as-48) det(progress-50, the-49) dep(as-48, progress-50) acl(progress-50, made-51) case(operation-56, in-52) amod(operation-56, cross-53) compound(operation-56, border-54) compound(operation-56, co-55) nmod:in(made-51, operation-56) punct(asserted-7, ?-57)",0,0,0,"root(ROOT, asserted) mark(asserted, Since) det(Minister, the) compond(Minister, Irish) compond(Minister, Foreign) nsbj(asserted, Minister) nsbj(asserted, himself) advmod(agree, when) case(Opposition, in) nmod:in(agree, Opposition) pnct(Opposition, ,) case(line, in) nmod:in(Opposition, line) case(article, with) det(article, the) amod(article, erdite) nmod:with(line, article) case(Telegraph, in) det(Telegraph, The) compond(Telegraph, Daily) nmod:in(article, Telegraph) pnct(Opposition, ,) mark(is, that) expl(is, there) acl:relcl(Opposition, is) neg(objection, no) amod(objection, constittional) nsbj(is, objection) case(extradition, to) nmod:to(objection, extradition) pnct(Opposition, ,) ax(agree, does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(agree, Friend) neg(agree, not) ccomp(asserted, agree) mark(welcome, that) nsbj(welcome, consistency) case(matter, in) det(matter, this) nmod:in(consistency, matter) ax(welcome, wold) cop(welcome, be) mark(welcome, as) ccomp(agree, welcome) advmod(welcome, as) det(progress, the) dep(as, progress) acl(progress, made) case(operation, in) amod(operation, cross) compond(operation, border) compond(operation, co) nmod:in(made, operation) pnct(asserted, ?)","root(,VBD) mark(VBD,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nsbj(VBD,NNP) nsbj(VBD,PRP) advmod(VB,WRB) case(NNP,IN) nmod:in(VB,NNP) pnct(NNP,NNP) case(NN,IN) nmod:in(NNP,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) pnct(NNP,NNP) mark(VBZ,IN) expl(VBZ,EX) acl:relcl(NNP,VBZ) neg(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NN,TO) nmod:to(NN,NN) pnct(NNP,NNP) ax(VB,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VB,NNP) neg(VB,RB) ccomp(VBD,VB) mark(JJ,IN) nsbj(JJ,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) ax(JJ,MD) cop(JJ,VB) mark(JJ,IN) ccomp(VB,JJ) advmod(JJ,IN) det(NN,DT) dep(IN,NN) acl(NN,VBN) case(NN,IN) amod(NN,NN) compond(NN,NN) compond(NN,NN) nmod:in(VBN,NN) pnct(VBD,VBD)","[ , when, article, consistency, agree, right, made, line, Opposition, as, progress, ROOT, himself, operation, not, asserted, there, Friend, welcome, Minister, is, my, objection]","[ , when, article, consistency, agree, made, line, Opposition, as, progress, ROOT, himself, operation, not, asserted, there, Friend, welcome, Minister, is, my, objection]",5,"[ , when, consistency, agree, article, line, Opposition, as, progress, himself, operation, not, made, asserted, there, welcome, Minister, is, ROOT, objection]","[ , when, consistency, agree, article, line, Opposition, as, progress, himself, operation, not, made, asserted, there, welcome, Minister, is, ROOT, objection]",WRB_when NN_article NN_consistency VB_agree VBN_made NN_line NNP_Opposition RB_as NN_progress PRP_himself NN_operation RB_not VBD_asserted EX_there NNP_Friend JJ_welcome NNP_Minister VBZ_is PRP$_my NN_objection ,"[ , when, article, consistency, agree, made, line, Opposition, as, progress, ROOT, himself, operation, not, asserted, there, Friend, welcome, Minister, is, my, objection]","[ , when, article, consistency, agree, made, line, Opposition, as, progress, ROOT, himself, operation, not, asserted, there, Friend, welcome, Minister, is, my, objection]",WRB_when NN_article NN_consistency VB_agree VBN_made NN_line NNP_Opposition RB_as NN_progress PRP_himself NN_operation RB_not VBD_asserted EX_there NNP_Friend JJ_welcome NNP_Minister VBZ_is PRP$_my NN_objection ,"[ , when, article, consistency, agree, made, line, Opposition, as, progress, ROOT, himself, operation, not, asserted, there, Friend, welcome, Minister, is, my, objection]",WRB_when NN_article NN_consistency VB_agree VBN_made NN_line NNP_Opposition RB_as NN_progress PRP_himself NN_operation RB_not VBD_asserted EX_there NNP_Friend JJ_welcome NNP_Minister VBZ_is PRP$_my NN_objection ,[ ],[ ],-3,0,1,2,1,2,2,0,1,1
Does he expect the Dublin Government to sign the European Convention?,DoesVBZ hePRP expectVB theDT DublinNNP GovernmentNNP toTO signVB theDT EuropeanNNP ConventionNNP ,"root(ROOT-0, expect-3) aux(expect-3, Does-1) nsubj(expect-3, he-2) det(Government-6, the-4) compound(Government-6, Dublin-5) dobj(expect-3, Government-6) mark(sign-8, to-7) xcomp(expect-3, sign-8) det(Convention-11, the-9) amod(Convention-11, European-10) dobj(sign-8, Convention-11) punct(expect-3, ?-12)",0,0,1,"root(ROOT, expect) ax(expect, Does) nsbj(expect, he) det(Government, the) compond(Government, Dblin) dobj(expect, Government) mark(sign, to) xcomp(expect, sign) det(Convention, the) amod(Convention, Eropean) dobj(sign, Convention) pnct(expect, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) mark(VB,TO) xcomp(VB,VB) det(NNP,DT) amod(NNP,NNP) dobj(VB,NNP) pnct(VB,VB)","[he, ROOT, sign, Government, expect]","[he, ROOT, sign, Government, expect]",5,"[ROOT, sign, Government, expect]","[ROOT, sign, Government, expect]",PRP_he VB_sign NNP_Government VB_expect ,"[he, ROOT, sign, Government, expect]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
On the first part of my hon. Friend's question  I should be in even greater difficulty if I were to involve myself in legal arguments.,OnIN theDT firstJJ partNN ofIN myPRP$ honNN FriendNNP 'sPOS questionNN IPRP shouldMD beVB inIN evenRB greaterJJR difficultyNN ifIN IPRP wereVBD toTO involveVB myselfPRP inIN legalJJ argumentsNNS ,"root(ROOT-0, difficulty-18) case(part-4, On-1) det(part-4, the-2) amod(part-4, first-3) nmod:on(difficulty-18, part-4) case(question-10, of-5) nmod:poss(Friend-8, my-6) compound(Friend-8, hon.-7) nmod:poss(question-10, Friend-8) case(Friend-8, 's-9) nmod:of(part-4, question-10) punct(difficulty-18, ,-11) nsubj(difficulty-18, I-12) aux(difficulty-18, should-13) cop(difficulty-18, be-14) case(difficulty-18, in-15) advmod(greater-17, even-16) amod(difficulty-18, greater-17) mark(were-21, if-19) nsubj(were-21, I-20) dep(difficulty-18, were-21) mark(involve-23, to-22) xcomp(were-21, involve-23) dobj(involve-23, myself-24) case(arguments-27, in-25) amod(arguments-27, legal-26) nmod:in(involve-23, arguments-27) punct(difficulty-18, .-28)",0,0,0,"root(ROOT, difficlty) case(part, On) det(part, the) amod(part, first) nmod:on(difficlty, part) case(qestion, of) nmod:poss(Friend, my) compond(Friend, hon.) nmod:poss(qestion, Friend) ""case(Friend, s)"", nmod:of(part, qestion) pnct(difficlty, ,) nsbj(difficlty, I) ax(difficlty, shold) cop(difficlty, be) case(difficlty, in) advmod(greater, even) amod(difficlty, greater) mark(were, if) nsbj(were, I) dep(difficlty, were) mark(involve, to) xcomp(were, involve) dobj(involve, myself) case(argments, in) amod(argments, legal) nmod:in(involve, argments) pnct(difficlty, .)","root(,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(NN,NN) case(NN,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) pnct(NN,NN) nsbj(NN,PRP) ax(NN,MD) cop(NN,VB) case(NN,IN) advmod(JJR,RB) amod(NN,JJR) mark(VBD,IN) nsbj(VBD,PRP) dep(NN,VBD) mark(VB,TO) xcomp(VBD,VB) dobj(VB,PRP) case(NNS,IN) amod(NNS,JJ) nmod:in(VB,NNS) pnct(NN,NN)","[part, Friend, question, my]","[part, Friend, question, my]",6,"[part, Friend, question, my]","[part, Friend, question, my]",NN_part NNP_Friend NN_question PRP$_my ,"[part, Friend, question, my]","[part, Friend, question, my]",NN_part NNP_Friend NN_question PRP$_my ,"[part, Friend, question, my]",NN_part NNP_Friend NN_question PRP$_my ,"[part, Friend, question, my]",NN_part NNP_Friend NN_question PRP$_my ,-3,0,1,0,0,0,0,0,0,0
On the second part  I understand that the Dublin Government have indicated that they wish to sign the European protocol and I hope that they will.,OnIN theDT secondJJ partNN IPRP understandVBP thatIN theDT DublinNNP GovernmentNNP haveVBP indicatedVBN thatIN theyPRP wishVBP toTO signVB theDT EuropeanNNP protocolNN andCC IPRP hopeVBP thatIN theyPRP willMD ,"root(ROOT-0, understand-7) case(part-4, On-1) det(part-4, the-2) amod(part-4, second-3) nmod:on(understand-7, part-4) punct(understand-7, ,-5) nsubj(understand-7, I-6) mark(indicated-13, that-8) det(Government-11, the-9) compound(Government-11, Dublin-10) nsubj(indicated-13, Government-11) aux(indicated-13, have-12) ccomp(understand-7, indicated-13) mark(wish-16, that-14) nsubj(wish-16, they-15) ccomp(indicated-13, wish-16) mark(sign-18, to-17) xcomp(wish-16, sign-18) det(protocol-21, the-19) amod(protocol-21, European-20) dobj(sign-18, protocol-21) cc(sign-18, and-22) nsubj(hope-24, I-23) xcomp(wish-16, hope-24) conj:and(sign-18, hope-24) mark(will-27, that-25) nsubj(will-27, they-26) ccomp(hope-24, will-27) punct(understand-7, .-28)",0,0,0,"root(ROOT, nderstand) case(part, On) det(part, the) amod(part, second) nmod:on(nderstand, part) pnct(nderstand, ,) nsbj(nderstand, I) mark(indicated, that) det(Government, the) compond(Government, Dblin) nsbj(indicated, Government) ax(indicated, have) ccomp(nderstand, indicated) mark(wish, that) nsbj(wish, they) ccomp(indicated, wish) mark(sign, to) xcomp(wish, sign) det(protocol, the) amod(protocol, Eropean) dobj(sign, protocol) cc(sign, and) nsbj(hope, I) xcomp(wish, hope) conj:and(sign, hope) mark(will, that) nsbj(will, they) ccomp(hope, will) pnct(nderstand, .)","root(,VBP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VBP,NN) pnct(VBP,VBP) nsbj(VBP,PRP) mark(VBN,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBP) ccomp(VBP,VBN) mark(VBP,IN) nsbj(VBP,PRP) ccomp(VBN,VBP) mark(VB,TO) xcomp(VBP,VB) det(NN,DT) amod(NN,NNP) dobj(VB,NN) cc(VB,CC) nsbj(VBP,PRP) xcomp(VBP,VBP) conj:and(VB,VBP) mark(MD,IN) nsbj(MD,PRP) ccomp(VBP,MD) pnct(VBP,VBP)","[Government, wish, understand, indicated]",[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Minister will be aware that the Criminal Jurisdiction Act is the last remnant of the Sunningdale agreement and that it has been an Act of Parliament in Britain and Ireland since 1975.,TheDT MinisterNNP willMD beVB awareJJ thatIN theDT CriminalNNP JurisdictionNNP ActNNP isVBZ theDT lastJJ remnantNN ofIN theDT SunningdaleNNP agreementNN andCC thatIN itPRP hasVBZ beenVBN anDT ActNNP ofIN ParliamentNNP inIN BritainNNP andCC IrelandNNP sinceIN 1975CD ,"root(ROOT-0, aware-5) det(Minister-2, The-1) nsubj(aware-5, Minister-2) aux(aware-5, will-3) cop(aware-5, be-4) mark(remnant-14, that-6) det(Act-10, the-7) compound(Act-10, Criminal-8) compound(Act-10, Jurisdiction-9) nsubj(remnant-14, Act-10) cop(remnant-14, is-11) det(remnant-14, the-12) amod(remnant-14, last-13) ccomp(aware-5, remnant-14) case(agreement-18, of-15) det(agreement-18, the-16) compound(agreement-18, Sunningdale-17) nmod:of(remnant-14, agreement-18) cc(remnant-14, and-19) mark(Act-25, that-20) nsubj(Act-25, it-21) aux(Act-25, has-22) cop(Act-25, been-23) det(Act-25, an-24) ccomp(aware-5, Act-25) conj:and(remnant-14, Act-25) case(Parliament-27, of-26) nmod:of(Act-25, Parliament-27) case(Britain-29, in-28) nmod:in(Act-25, Britain-29) cc(Britain-29, and-30) nmod:in(Act-25, Ireland-31) conj:and(Britain-29, Ireland-31) case(1975-33, since-32) nmod:since(Act-25, 1975-33) punct(aware-5, .-34)",0,1,0,"root(ROOT, aware) det(Minister, The) nsbj(aware, Minister) ax(aware, will) cop(aware, be) mark(remnant, that) det(Act, the) compond(Act, Criminal) compond(Act, Jrisdiction) nsbj(remnant, Act) cop(remnant, is) det(remnant, the) amod(remnant, last) ccomp(aware, remnant) case(agreement, of) det(agreement, the) compond(agreement, Snningdale) nmod:of(remnant, agreement) cc(remnant, and) mark(Act, that) nsbj(Act, it) ax(Act, has) cop(Act, been) det(Act, an) ccomp(aware, Act) conj:and(remnant, Act) case(Parliament, of) nmod:of(Act, Parliament) case(Britain, in) nmod:in(Act, Britain) cc(Britain, and) nmod:in(Act, Ireland) conj:and(Britain, Ireland) case(1975, since) nmod:since(Act, 1975) pnct(aware, .)","root(,JJ) det(NNP,DT) nsbj(JJ,NNP) ax(JJ,MD) cop(JJ,VB) mark(NN,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nsbj(NN,NNP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(JJ,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:of(NN,NN) cc(NN,CC) mark(NNP,IN) nsbj(NNP,PRP) ax(NNP,VBZ) cop(NNP,VBN) det(NNP,DT) ccomp(JJ,NNP) conj:and(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:in(NNP,NNP) cc(NNP,CC) nmod:in(NNP,NNP) conj:and(NNP,NNP) case(CD,IN) nmod:since(NNP,CD) pnct(JJ,JJ)","[Act, ROOT, aware, remnant, Minister]","[Act, ROOT, aware, remnant, Minister]",7,[ ],[ ],NNP_Act JJ_aware NN_remnant NNP_Minister ,"[Act, ROOT, aware, remnant, Minister]","[Act, ROOT, aware, remnant, Minister]",NNP_Act JJ_aware NN_remnant NNP_Minister ,"[Act, ROOT, aware, remnant, Minister]",NNP_Act JJ_aware NN_remnant NNP_Minister ,"[Act, ROOT, aware, remnant, Minister]",NNP_Act JJ_aware NN_remnant NNP_Minister ,-3,0,2,0,0,0,0,0,0,0
Why is it that it is only recently that the RUC in Northern Ireland has made evidence available to the Garda?,WhyWRB isVBZ itPRP thatIN itPRP isVBZ onlyRB recentlyRB thatIN theDT RUCNNP inIN NorthernNNP IrelandNNP hasVBZ madeVBN evidenceNN availableJJ toTO theDT GardaNNP ,"root(ROOT-0, Why-1) dep(Why-1, is-2) nsubj(is-2, it-3) mark(recently-8, that-4) nsubj(recently-8, it-5) cop(recently-8, is-6) advmod(recently-8, only-7) dep(it-3, recently-8) mark(made-16, that-9) det(RUC-11, the-10) nsubj(made-16, RUC-11) case(Ireland-14, in-12) compound(Ireland-14, Northern-13) nmod:in(RUC-11, Ireland-14) aux(made-16, has-15) ccomp(recently-8, made-16) dobj(made-16, evidence-17) amod(evidence-17, available-18) case(Garda-21, to-19) det(Garda-21, the-20) nmod:to(available-18, Garda-21) punct(is-2, ?-22)",0,0,0,"root(ROOT, Why) dep(Why, is) nsbj(is, it) mark(recently, that) nsbj(recently, it) cop(recently, is) advmod(recently, only) dep(it, recently) mark(made, that) det(RUC, the) nsbj(made, RUC) case(Ireland, in) compond(Ireland, Northern) nmod:in(RUC, Ireland) ax(made, has) ccomp(recently, made) dobj(made, evidence) amod(evidence, available) case(Garda, to) det(Garda, the) nmod:to(available, Garda) pnct(is, ?)","root(,WRB) dep(WRB,VBZ) nsbj(VBZ,PRP) mark(RB,IN) nsbj(RB,PRP) cop(RB,VBZ) advmod(RB,RB) dep(PRP,RB) mark(VBN,IN) det(NNP,DT) nsbj(VBN,NNP) case(NNP,IN) compond(NNP,NNP) nmod:in(NNP,NNP) ax(VBN,VBZ) ccomp(RB,VBN) dobj(VBN,NN) amod(NN,JJ) case(NNP,TO) det(NNP,DT) nmod:to(JJ,NNP) pnct(VBZ,VBZ)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Why did it not do so in 1976  1977  last year and earlier this year?,WhyWRB didVBD itPRP notRB doVB soRB inIN 1976CD 1977CD lastJJ yearNN andCC earlierRBR thisDT yearNN ,"root(ROOT-0, do-5) advmod(do-5, Why-1) aux(do-5, did-2) nsubj(do-5, it-3) neg(do-5, not-4) advmod(1976-8, so-6) case(1976-8, in-7) nmod:in(do-5, 1976-8) punct(1976-8, ,-9) appos(1976-8, 1977-10) punct(1976-8, ,-11) amod(year-13, last-12) appos(1976-8, year-13) cc(year-13, and-14) advmod(year-17, earlier-15) det(year-17, this-16) appos(1976-8, year-17) conj:and(year-13, year-17) punct(do-5, ?-18)",0,0,0,"root(ROOT, do) advmod(do, Why) ax(do, did) nsbj(do, it) neg(do, not) advmod(1976, so) case(1976, in) nmod:in(do, 1976) pnct(1976, ,) appos(1976, 1977) pnct(1976, ,) amod(year, last) appos(1976, year) cc(year, and) advmod(year, earlier) det(year, this) appos(1976, year) conj:and(year, year) pnct(do, ?)","root(,VB) advmod(VB,WRB) ax(VB,VBD) nsbj(VB,PRP) neg(VB,RB) advmod(CD,RB) case(CD,IN) nmod:in(VB,CD) pnct(CD,CD) appos(CD,CD) pnct(CD,CD) amod(NN,JJ) appos(CD,NN) cc(NN,CC) advmod(NN,RBR) det(NN,DT) appos(CD,NN) conj:and(NN,NN) pnct(VB,VB)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
How many people in the Republic does the RUC wish to apprehend?,HowWRB manyJJ peopleNNS inIN theDT RepublicNNP doesVBZ theDT RUCNNP wishNN toTO apprehendVB ,"root(ROOT-0, people-3) advmod(many-2, How-1) amod(people-3, many-2) case(Republic-6, in-4) det(Republic-6, the-5) nmod:in(people-3, Republic-6) dep(people-3, does-7) det(wish-10, the-8) compound(wish-10, RUC-9) dobj(does-7, wish-10) mark(apprehend-12, to-11) acl(wish-10, apprehend-12) punct(people-3, ?-13)",0,0,1,"root(ROOT, people) advmod(many, How) amod(people, many) case(Repblic, in) det(Repblic, the) nmod:in(people, Repblic) dep(people, does) det(wish, the) compond(wish, RUC) dobj(does, wish) mark(apprehend, to) acl(wish, apprehend) pnct(people, ?)","root(,NNS) advmod(JJ,WRB) amod(NNS,JJ) case(NNP,IN) det(NNP,DT) nmod:in(NNS,NNP) dep(NNS,VBZ) det(NN,DT) compond(NN,NNP) dobj(VBZ,NN) mark(VB,TO) acl(NN,VB) pnct(NNS,NNS)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I referred to recent cases in which evidence has been gathered and sent to the Republic.,IPRP referredVBD toTO recentJJ casesNNS inIN whichWDT evidenceNN hasVBZ beenVBN gatheredVBN andCC sentVBN toTO theDT RepublicNNP ,"root(ROOT-0, referred-2) nsubj(referred-2, I-1) case(cases-5, to-3) amod(cases-5, recent-4) nmod:to(referred-2, cases-5) case(which-7, in-6) nmod:in(gathered-11, which-7) nsubjpass(gathered-11, evidence-8) nsubjpass(sent-13, evidence-8) aux(gathered-11, has-9) auxpass(gathered-11, been-10) acl:relcl(cases-5, gathered-11) cc(gathered-11, and-12) acl:relcl(cases-5, sent-13) conj:and(gathered-11, sent-13) case(Republic-16, to-14) det(Republic-16, the-15) nmod:to(sent-13, Republic-16) punct(referred-2, .-17)",0,1,0,"root(ROOT, referred) nsbj(referred, I) case(cases, to) amod(cases, recent) nmod:to(referred, cases) case(which, in) nmod:in(gathered, which) nsbjpass(gathered, evidence) nsbjpass(sent, evidence) ax(gathered, has) axpass(gathered, been) acl:relcl(cases, gathered) cc(gathered, and) acl:relcl(cases, sent) conj:and(gathered, sent) case(Repblic, to) det(Repblic, the) nmod:to(sent, Repblic) pnct(referred, .)","root(,VBD) nsbj(VBD,PRP) case(NNS,TO) amod(NNS,JJ) nmod:to(VBD,NNS) case(WDT,IN) nmod:in(VBN,WDT) nsbjpass(VBN,NN) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) acl:relcl(NNS,VBN) cc(VBN,CC) acl:relcl(NNS,VBN) conj:and(VBN,VBN) case(NNP,TO) det(NNP,DT) nmod:to(VBN,NNP) pnct(VBD,VBD)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
They are not isolated.,TheyPRP areVBP notRB isolatedJJ ,"root(ROOT-0, isolated-4) nsubjpass(isolated-4, They-1) auxpass(isolated-4, are-2) neg(isolated-4, not-3) punct(isolated-4, .-5)",0,0,0,"root(ROOT, isolated) nsbjpass(isolated, They) axpass(isolated, are) neg(isolated, not) pnct(isolated, .)","root(,JJ) nsbjpass(JJ,PRP) axpass(JJ,VBP) neg(JJ,RB) pnct(JJ,JJ)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It has been done before.,ItPRP hasVBZ beenVBN doneVBN beforeIN ,"root(ROOT-0, done-4) nsubjpass(done-4, It-1) aux(done-4, has-2) auxpass(done-4, been-3) advmod(done-4, before-5) punct(done-4, .-6)",0,0,0,"root(ROOT, done) nsbjpass(done, It) ax(done, has) axpass(done, been) advmod(done, before) pnct(done, .)","root(,VBN) nsbjpass(VBN,PRP) ax(VBN,VBZ) axpass(VBN,VBN) advmod(VBN,IN) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I mentioned those cases because  following our meeting and the collection of the evidence  we are asking the Irish authorities to proceed with prosecutions.,IPRP mentionedVBD thoseDT casesNNS becauseIN followingVBG ourPRP$ meetingNN andCC theDT collectionNN ofIN theDT evidenceNN wePRP areVBP askingVBG theDT IrishJJ authoritiesNNS toTO proceedVB withIN prosecutionsNNS ,"root(ROOT-0, mentioned-2) nsubj(mentioned-2, I-1) det(cases-4, those-3) dobj(mentioned-2, cases-4) mark(asking-19, because-5) punct(asking-19, ,-6) case(meeting-9, following-7) nmod:poss(meeting-9, our-8) nmod:following(asking-19, meeting-9) cc(meeting-9, and-10) det(collection-12, the-11) conj:and(meeting-9, collection-12) nmod:following(asking-19, collection-12) case(evidence-15, of-13) det(evidence-15, the-14) nmod:of(collection-12, evidence-15) punct(asking-19, ,-16) nsubj(asking-19, we-17) aux(asking-19, are-18) advcl(mentioned-2, asking-19) det(authorities-22, the-20) amod(authorities-22, Irish-21) dobj(asking-19, authorities-22) mark(proceed-24, to-23) xcomp(asking-19, proceed-24) case(prosecutions-26, with-25) nmod:with(proceed-24, prosecutions-26) punct(mentioned-2, .-27)",0,0,0,"root(ROOT, mentioned) nsbj(mentioned, I) det(cases, those) dobj(mentioned, cases) mark(asking, becase) pnct(asking, ,) case(meeting, following) nmod:poss(meeting, or) nmod:following(asking, meeting) cc(meeting, and) det(collection, the) conj:and(meeting, collection) nmod:following(asking, collection) case(evidence, of) det(evidence, the) nmod:of(collection, evidence) pnct(asking, ,) nsbj(asking, we) ax(asking, are) advcl(mentioned, asking) det(athorities, the) amod(athorities, Irish) dobj(asking, athorities) mark(proceed, to) xcomp(asking, proceed) case(prosections, with) nmod:with(proceed, prosections) pnct(mentioned, .)","root(,VBD) nsbj(VBD,PRP) det(NNS,DT) dobj(VBD,NNS) mark(VBG,IN) pnct(VBG,VBG) case(NN,VBG) nmod:poss(NN,PRP$) nmod:following(VBG,NN) cc(NN,CC) det(NN,DT) conj:and(NN,NN) nmod:following(VBG,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBG,VBG) nsbj(VBG,PRP) ax(VBG,VBP) advcl(VBD,VBG) det(NNS,DT) amod(NNS,JJ) dobj(VBG,NNS) mark(VB,TO) xcomp(VBG,VB) case(NNS,IN) nmod:with(VB,NNS) pnct(VBD,VBD)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I hope that we shall succeed.,IPRP hopeVBP thatIN wePRP shallMD succeedVB ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(succeed-6, that-3) nsubj(succeed-6, we-4) aux(succeed-6, shall-5) ccomp(hope-2, succeed-6) punct(hope-2, .-7)",0,0,0,"root(ROOT, hope) nsbj(hope, I) mark(scceed, that) nsbj(scceed, we) ax(scceed, shall) ccomp(hope, scceed) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBP,VB) pnct(VBP,VBP)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Without notice  I cannot give the hon. Gentleman the number of people thought to be in the Irish Republic who are wanted by the RUC.,WithoutIN noticeNN IPRP canMD notRB giveVB theDT honNN GentlemanNNP theDT numberNN ofIN peopleNNS thoughtVBN toTO beVB inIN theDT IrishNNP RepublicNNP whoWP areVBP wantedVBN byIN theDT RUCNNP ,"root(ROOT-0, give-7) case(notice-2, Without-1) nmod:without(give-7, notice-2) punct(give-7, ,-3) nsubj(give-7, I-4) aux(give-7, can-5) neg(give-7, not-6) det(Gentleman-10, the-8) compound(Gentleman-10, hon.-9) iobj(give-7, Gentleman-10) det(number-12, the-11) nsubj(thought-15, number-12) case(people-14, of-13) nmod:of(number-12, people-14) ccomp(give-7, thought-15) mark(Republic-21, to-16) cop(Republic-21, be-17) case(Republic-21, in-18) det(Republic-21, the-19) amod(Republic-21, Irish-20) xcomp(thought-15, Republic-21) nsubjpass(wanted-24, who-22) auxpass(wanted-24, are-23) acl:relcl(Republic-21, wanted-24) case(RUC-27, by-25) det(RUC-27, the-26) nmod:agent(wanted-24, RUC-27) punct(give-7, .-28)",0,0,0,"root(ROOT, give) case(notice, Withot) nmod:withot(give, notice) pnct(give, ,) nsbj(give, I) ax(give, can) neg(give, not) det(Gentleman, the) compond(Gentleman, hon.) iobj(give, Gentleman) det(nmber, the) nsbj(thoght, nmber) case(people, of) nmod:of(nmber, people) ccomp(give, thoght) mark(Repblic, to) cop(Repblic, be) case(Repblic, in) det(Repblic, the) amod(Repblic, Irish) xcomp(thoght, Repblic) nsbjpass(wanted, who) axpass(wanted, are) acl:relcl(Repblic, wanted) case(RUC, by) det(RUC, the) nmod:agent(wanted, RUC) pnct(give, .)","root(,VB) case(NN,IN) nmod:withot(VB,NN) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) det(NNP,DT) compond(NNP,NNP) iobj(VB,NNP) det(NN,DT) nsbj(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) ccomp(VB,VBN) mark(NNP,TO) cop(NNP,VB) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) xcomp(VBN,NNP) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(NNP,VBN) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) pnct(VB,VB)","[thought, I, not, notice, give, Gentleman, ROOT]","[thought, I, not, notice, give, Gentleman, ROOT]",8,"[thought, I, not, notice, give, Gentleman, ROOT]","[thought, I, not, notice, give, Gentleman, ROOT]",VBN_thought PRP_I RB_not NN_notice VB_give NNP_Gentleman ,"[thought, I, not, notice, give, Gentleman, ROOT]","[thought, I, not, notice, give, Gentleman, ROOT]",VBN_thought PRP_I RB_not NN_notice VB_give NNP_Gentleman ,"[thought, I, not, notice, give, Gentleman, ROOT]",VBN_thought PRP_I RB_not NN_notice VB_give NNP_Gentleman ,"[thought, I, not, notice, give, Gentleman, ROOT]",VBN_thought PRP_I RB_not NN_notice VB_give NNP_Gentleman ,-3,0,2,2,1,2,0,0,0,2
Will the Secretary of State accept that extradition is consequential on firm evidence being provided to the Eire courts and that the Act to which he has referred does not allow policemen to go in person to the courts to provide that evidence?,WillMD theDT SecretaryNNP ofIN StateNNP acceptVBD thatDT extraditionNN isVBZ consequentialJJ onIN firmNN evidenceNN beingVBG providedVBN toTO theDT EireNNP courtsNNS andCC thatIN theDT ActNNP toTO whichWDT hePRP hasVBZ referredVBN doesVBZ notRB allowVB policemenNNS toTO goVB inIN personNN toTO theDT courtsNNS toTO provideVB thatDT evidenceNN ,"root(ROOT-0, accept-6) aux(accept-6, Will-1) det(Secretary-3, the-2) nsubj(accept-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(consequential-10, that-7) nsubj(consequential-10, extradition-8) cop(consequential-10, is-9) ccomp(accept-6, consequential-10) case(evidence-13, on-11) amod(evidence-13, firm-12) nmod:on(consequential-10, evidence-13) auxpass(provided-15, being-14) acl(evidence-13, provided-15) case(courts-19, to-16) det(courts-19, the-17) compound(courts-19, Eire-18) nmod:to(provided-15, courts-19) cc(consequential-10, and-20) mark(allow-31, that-21) det(Act-23, the-22) nsubj(allow-31, Act-23) case(which-25, to-24) nmod:to(referred-28, which-25) nsubj(referred-28, he-26) aux(referred-28, has-27) acl:relcl(Act-23, referred-28) aux(allow-31, does-29) neg(allow-31, not-30) ccomp(accept-6, allow-31) conj:and(consequential-10, allow-31) dobj(allow-31, policemen-32) mark(go-34, to-33) xcomp(allow-31, go-34) case(person-36, in-35) nmod:in(go-34, person-36) case(courts-39, to-37) det(courts-39, the-38) nmod:to(go-34, courts-39) mark(provide-41, to-40) xcomp(go-34, provide-41) det(evidence-43, that-42) dobj(provide-41, evidence-43) punct(accept-6, ?-44)",0,1,0,"root(ROOT, accept) ax(accept, Will) det(Secretary, the) nsbj(accept, Secretary) case(State, of) nmod:of(Secretary, State) mark(conseqential, that) nsbj(conseqential, extradition) cop(conseqential, is) ccomp(accept, conseqential) case(evidence, on) amod(evidence, firm) nmod:on(conseqential, evidence) axpass(provided, being) acl(evidence, provided) case(corts, to) det(corts, the) compond(corts, Eire) nmod:to(provided, corts) cc(conseqential, and) mark(allow, that) det(Act, the) nsbj(allow, Act) case(which, to) nmod:to(referred, which) nsbj(referred, he) ax(referred, has) acl:relcl(Act, referred) ax(allow, does) neg(allow, not) ccomp(accept, allow) conj:and(conseqential, allow) dobj(allow, policemen) mark(go, to) xcomp(allow, go) case(person, in) nmod:in(go, person) case(corts, to) det(corts, the) nmod:to(go, corts) mark(provide, to) xcomp(go, provide) det(evidence, that) dobj(provide, evidence) pnct(accept, ?)","root(,VBD) ax(VBD,MD) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(JJ,DT) nsbj(JJ,NN) cop(JJ,VBZ) ccomp(VBD,JJ) case(NN,IN) amod(NN,NN) nmod:on(JJ,NN) axpass(VBN,VBG) acl(NN,VBN) case(NNS,TO) det(NNS,DT) compond(NNS,NNP) nmod:to(VBN,NNS) cc(JJ,CC) mark(VB,DT) det(NNP,DT) nsbj(VB,NNP) case(WDT,TO) nmod:to(VBN,WDT) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NNP,VBN) ax(VB,VBZ) neg(VB,RB) ccomp(VBD,VB) conj:and(JJ,VB) dobj(VB,NNS) mark(VB,TO) xcomp(VB,VB) case(NN,IN) nmod:in(VB,NN) case(NNS,TO) det(NNS,DT) nmod:to(VB,NNS) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) pnct(VBD,VBD)","[accept, he, State, referred, allow, consequential, Act, which, ROOT, Secretary]","[accept, he, State, referred, allow, consequential, Act, which, ROOT, Secretary]",9,[ ],[ ],VBD_accept PRP_he NNP_State VBD_referred VB_allow JJ_consequential NNP_Act WDT_which NNP_Secretary ,"[accept, he, State, referred, allow, consequential, Act, which, ROOT, Secretary]","[accept, he, State, referred, allow, consequential, Act, which, ROOT, Secretary]",VBD_accept PRP_he NNP_State VBD_referred VB_allow JJ_consequential NNP_Act WDT_which NNP_Secretary ,"[accept, he, State, referred, allow, consequential, Act, which, ROOT, Secretary]",VBD_accept PRP_he NNP_State VBD_referred VB_allow JJ_consequential NNP_Act WDT_which NNP_Secretary ,"[accept, he, State, referred, allow, consequential, Act, which, ROOT, Secretary]",VBD_accept PRP_he NNP_State VBD_referred VB_allow JJ_consequential NNP_Act WDT_which NNP_Secretary ,-3,0,2,0,0,0,0,0,0,0
Will he demand that the RUC should be admitted to the Eire courts and that the criminals who are indicted there should be extradited to Northern Ireland?,WillMD hePRP demandVB thatIN theDT RUCNNP shouldMD beVB admittedVBN toTO theDT EireNNP courtsNNS andCC thatIN theDT criminalsNNS whoWP areVBP indictedVBN thereEX shouldMD beVB extraditedVBN toTO NorthernNNP IrelandNNP ,"root(ROOT-0, demand-3) aux(demand-3, Will-1) nsubj(demand-3, he-2) mark(admitted-9, that-4) det(RUC-6, the-5) nsubjpass(admitted-9, RUC-6) aux(admitted-9, should-7) auxpass(admitted-9, be-8) ccomp(demand-3, admitted-9) case(courts-13, to-10) det(courts-13, the-11) compound(courts-13, Eire-12) nmod:to(admitted-9, courts-13) cc(admitted-9, and-14) ccomp(demand-3, that-15) conj:and(admitted-9, that-15) det(criminals-17, the-16) root(that-15, criminals-17) nsubjpass(indicted-20, who-18) auxpass(indicted-20, are-19) acl:relcl(criminals-17, indicted-20) expl(extradited-24, there-21) aux(extradited-24, should-22) auxpass(extradited-24, be-23) ccomp(indicted-20, extradited-24) case(Ireland-27, to-25) compound(Ireland-27, Northern-26) nmod:to(extradited-24, Ireland-27) punct(criminals-17, ?-28)",0,0,0,"root(ROOT, demand) ax(demand, Will) nsbj(demand, he) mark(admitted, that) det(RUC, the) nsbjpass(admitted, RUC) ax(admitted, shold) axpass(admitted, be) ccomp(demand, admitted) case(corts, to) det(corts, the) compond(corts, Eire) nmod:to(admitted, corts) cc(admitted, and) ccomp(demand, that) conj:and(admitted, that) det(criminals, the) root(that, criminals) nsbjpass(indicted, who) axpass(indicted, are) acl:relcl(criminals, indicted) expl(extradited, there) ax(extradited, shold) axpass(extradited, be) ccomp(indicted, extradited) case(Ireland, to) compond(Ireland, Northern) nmod:to(extradited, Ireland) pnct(criminals, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) mark(VBN,IN) det(NNP,DT) nsbjpass(VBN,NNP) ax(VBN,MD) axpass(VBN,VB) ccomp(VB,VBN) case(NNS,TO) det(NNS,DT) compond(NNS,NNP) nmod:to(VBN,NNS) cc(VBN,CC) ccomp(VB,IN) conj:and(VBN,IN) det(NNS,DT) root(IN,NNS) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(NNS,VBN) expl(VBN,EX) ax(VBN,MD) axpass(VBN,VB) ccomp(VBN,VBN) case(NNP,TO) compond(NNP,NNP) nmod:to(VBN,NNP) pnct(NNS,NNS)","[he, ROOT, that, admitted, demand]","[he, ROOT, that, admitted, demand]",9,[ ],[ ],PRP_he IN_that VBN_admitted VB_demand ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I believe that to be an incorrect statement.,IPRP believeVBP thatIN toTO beVB anDT incorrectJJ statementNN ,"root(ROOT-0, believe-2) nsubj(believe-2, I-1) mark(statement-8, that-3) mark(statement-8, to-4) cop(statement-8, be-5) det(statement-8, an-6) amod(statement-8, incorrect-7) ccomp(believe-2, statement-8) punct(believe-2, .-9)",0,0,0,"root(ROOT, believe) nsbj(believe, I) mark(statement, that) mark(statement, to) cop(statement, be) det(statement, an) amod(statement, incorrect) ccomp(believe, statement) pnct(believe, .)","root(,VBP) nsbj(VBP,PRP) mark(NN,IN) mark(NN,TO) cop(NN,VB) det(NN,DT) amod(NN,JJ) ccomp(VBP,NN) pnct(VBP,VBP)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Has my right hon. Friend had any discussions with the Eire Government about the possibility of security forces in Ulster entering the territory of southern Ireland when it is clear to those security forces that a terrorist has been on Northern Ireland territory and has subsequently escaped to southern Ireland territory?,HasNNP myPRP$ rightJJ honNN FriendNNP hadVBD anyDT discussionsNNS withIN theDT EireNNP GovernmentNNP aboutIN theDT possibilityNN ofIN securityNN forcesNNS inIN UlsterNNP enteringVBG theDT territoryNN ofIN southernJJ IrelandNNP whenWRB itPRP isVBZ clearJJ toTO thoseDT securityNN forcesNNS thatIN aDT terroristNN hasVBZ beenVBN onIN NorthernNNP IrelandNNP territoryNN andCC hasVBZ subsequentlyRB escapedVBN toTO southernJJ IrelandNNP territoryNN ,"root(ROOT-0, had-6) aux(had-6, Has-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(had-6, Friend-5) det(discussions-8, any-7) dobj(had-6, discussions-8) case(Government-12, with-9) det(Government-12, the-10) compound(Government-12, Eire-11) nmod:with(discussions-8, Government-12) case(possibility-15, about-13) det(possibility-15, the-14) nmod:about(discussions-8, possibility-15) case(forces-18, of-16) compound(forces-18, security-17) nmod:of(possibility-15, forces-18) case(Ulster-20, in-19) nmod:in(forces-18, Ulster-20) acl(Ulster-20, entering-21) det(territory-23, the-22) dobj(entering-21, territory-23) case(Ireland-26, of-24) amod(Ireland-26, southern-25) nmod:of(territory-23, Ireland-26) advmod(clear-30, when-27) nsubj(clear-30, it-28) cop(clear-30, is-29) advcl(had-6, clear-30) case(forces-34, to-31) det(forces-34, those-32) compound(forces-34, security-33) nmod:to(clear-30, forces-34) mark(territory-43, that-35) det(terrorist-37, a-36) nsubj(territory-43, terrorist-37) nsubj(escaped-47, terrorist-37) aux(territory-43, has-38) cop(territory-43, been-39) case(territory-43, on-40) amod(territory-43, Northern-41) compound(territory-43, Ireland-42) dep(forces-34, territory-43) cc(territory-43, and-44) aux(escaped-47, has-45) advmod(escaped-47, subsequently-46) dep(forces-34, escaped-47) conj:and(territory-43, escaped-47) case(territory-51, to-48) amod(territory-51, southern-49) compound(territory-51, Ireland-50) nmod:to(escaped-47, territory-51) punct(had-6, ?-52)",0,1,1,"root(ROOT, had) ax(had, Has) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(had, Friend) det(discssions, any) dobj(had, discssions) case(Government, with) det(Government, the) compond(Government, Eire) nmod:with(discssions, Government) case(possibility, abot) det(possibility, the) nmod:abot(discssions, possibility) case(forces, of) compond(forces, secrity) nmod:of(possibility, forces) case(Ulster, in) nmod:in(forces, Ulster) acl(Ulster, entering) det(territory, the) dobj(entering, territory) case(Ireland, of) amod(Ireland, sothern) nmod:of(territory, Ireland) advmod(clear, when) nsbj(clear, it) cop(clear, is) advcl(had, clear) case(forces, to) det(forces, those) compond(forces, secrity) nmod:to(clear, forces) mark(territory, that) det(terrorist, a) nsbj(territory, terrorist) nsbj(escaped, terrorist) ax(territory, has) cop(territory, been) case(territory, on) amod(territory, Northern) compond(territory, Ireland) dep(forces, territory) cc(territory, and) ax(escaped, has) advmod(escaped, sbseqently) dep(forces, escaped) conj:and(territory, escaped) case(territory, to) amod(territory, sothern) compond(territory, Ireland) nmod:to(escaped, territory) pnct(had, ?)","root(,VBD) ax(VBD,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) det(NNS,DT) dobj(VBD,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:with(NNS,NNP) case(NN,IN) det(NN,DT) nmod:abot(NNS,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) case(NNP,IN) nmod:in(NNS,NNP) acl(NNP,VBG) det(NN,DT) dobj(VBG,NN) case(NNP,IN) amod(NNP,JJ) nmod:of(NN,NNP) advmod(JJ,WRB) nsbj(JJ,PRP) cop(JJ,VBZ) advcl(VBD,JJ) case(NNS,TO) det(NNS,DT) compond(NNS,NN) nmod:to(JJ,NNS) mark(NN,IN) det(NN,DT) nsbj(NN,NN) nsbj(VBN,NN) ax(NN,VBZ) cop(NN,VBN) case(NN,IN) amod(NN,NNP) compond(NN,NNP) dep(NNS,NN) cc(NN,CC) ax(VBN,VBZ) advmod(VBN,RB) dep(NNS,VBN) conj:and(NN,VBN) case(NN,TO) amod(NN,JJ) compond(NN,NNP) nmod:to(VBN,NN) pnct(VBD,VBD)","[clear, right, Friend, Government, had, discussions, ROOT, my, possibility]","[clear, discussions, Friend, Government, had, ROOT, my, possibility]",11,"[discussions, Government, had, possibility]","[discussions, Government, had, possibility]",JJ_clear NNS_discussions NNP_Friend NNP_Government VBN_had PRP$_my NN_possibility ,"[clear, discussions, Friend, Government, had, ROOT, my, possibility]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
My hon. Friend may have seen that the discussions that I had with Ministers of the Republic on 5 October resulted in a communiqué issued by both Governments in which we confirmed that we have made a number of arrangements which we believe will considerably increase the effectiveness of our joint effort against terrorism.,MyPRP$ honNN FriendNNP mayMD haveVB seenVBN thatIN theDT discussionsNNS thatIN IPRP hadVBD withIN MinistersNNS ofIN theDT RepublicNNP onIN 5CD OctoberNNP resultedVBD inIN aDT communiquéNN issuedVBN byIN bothDT GovernmentsNNP inIN whichWDT wePRP confirmedVBD thatIN wePRP haveVBP madeVBN aDT numberNN ofIN arrangementsNNS whichWDT wePRP believeVBP willMD considerablyRB increaseVB theDT effectivenessNN ofIN ourPRP$ jointJJ effortNN againstIN terrorismNN ,"root(ROOT-0, seen-6) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(seen-6, Friend-3) aux(seen-6, may-4) aux(seen-6, have-5) xcomp(seen-6, that-7) det(discussions-9, the-8) dep(that-7, discussions-9) mark(had-12, that-10) nsubj(had-12, I-11) acl:relcl(discussions-9, had-12) case(Ministers-14, with-13) nmod:with(had-12, Ministers-14) case(Republic-17, of-15) det(Republic-17, the-16) nmod:of(Ministers-14, Republic-17) case(October-20, on-18) nummod(October-20, 5-19) nmod:on(had-12, October-20) dep(had-12, resulted-21) case(communiqué-24, in-22) det(communiqué-24, a-23) nmod:in(resulted-21, communiqué-24) acl(communiqué-24, issued-25) case(Governments-28, by-26) det(Governments-28, both-27) nmod:by(issued-25, Governments-28) case(which-30, in-29) nmod:in(confirmed-32, which-30) nsubj(confirmed-32, we-31) ccomp(issued-25, confirmed-32) mark(made-36, that-33) nsubj(made-36, we-34) aux(made-36, have-35) ccomp(confirmed-32, made-36) det(number-38, a-37) dobj(made-36, number-38) case(arrangements-40, of-39) nmod:of(number-38, arrangements-40) dobj(believe-43, which-41) nsubj(believe-43, we-42) acl:relcl(arrangements-40, believe-43) aux(increase-46, will-44) advmod(increase-46, considerably-45) ccomp(believe-43, increase-46) det(effectiveness-48, the-47) dobj(increase-46, effectiveness-48) case(effort-52, of-49) nmod:poss(effort-52, our-50) amod(effort-52, joint-51) nmod:of(effectiveness-48, effort-52) case(terrorism-54, against-53) nmod:against(effort-52, terrorism-54) punct(seen-6, .-55)",0,0,0,"root(ROOT, seen) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(seen, Friend) ax(seen, may) ax(seen, have) xcomp(seen, that) det(discssions, the) dep(that, discssions) mark(had, that) nsbj(had, I) acl:relcl(discssions, had) case(Ministers, with) nmod:with(had, Ministers) case(Repblic, of) det(Repblic, the) nmod:of(Ministers, Repblic) case(October, on) nmmod(October, 5) nmod:on(had, October) dep(had, reslted) case(commniq\xe9, in) det(commniq\xe9, a) nmod:in(reslted, commniq\xe9) acl(commniq\xe9, issed) case(Governments, by) det(Governments, both) nmod:by(issed, Governments) case(which, in) nmod:in(confirmed, which) nsbj(confirmed, we) ccomp(issed, confirmed) mark(made, that) nsbj(made, we) ax(made, have) ccomp(confirmed, made) det(nmber, a) dobj(made, nmber) case(arrangements, of) nmod:of(nmber, arrangements) dobj(believe, which) nsbj(believe, we) acl:relcl(arrangements, believe) ax(increase, will) advmod(increase, considerably) ccomp(believe, increase) det(effectiveness, the) dobj(increase, effectiveness) case(effort, of) nmod:poss(effort, or) amod(effort, joint) nmod:of(effectiveness, effort) case(terrorism, against) nmod:against(effort, terrorism) pnct(seen, .)","root(,VBN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,MD) ax(VBN,VBP) xcomp(VBN,IN) det(NNS,DT) dep(IN,NNS) mark(VBD,IN) nsbj(VBD,PRP) acl:relcl(NNS,VBD) case(NNS,IN) nmod:with(VBD,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) dep(VBD,VBD) case(VBD,IN) det(IN,DT) nmod:in(VBD,VBD) acl(VBD,VBN) case(NNP,IN) det(NNP,DT) nmod:by(VBN,NNP) case(WDT,IN) nmod:in(VBD,WDT) nsbj(VBD,PRP) ccomp(VBN,VBD) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(VBD,VBN) det(NN,DT) dobj(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) dobj(VBP,WDT) nsbj(VBP,PRP) acl:relcl(NNS,VBP) ax(VB,MD) advmod(VB,RB) ccomp(VBP,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) nmod:against(NN,NN) pnct(VBN,VBN)","[My, ROOT, Friend, that, seen]","[My, ROOT, Friend, that, seen]",12,[ ],[ ],PRP$_My NNP_Friend IN_that VBN_seen ,"[My, ROOT, Friend, that, seen]","[My, ROOT, Friend, that, seen]",PRP$_My NNP_Friend IN_that VBN_seen ,"[My, ROOT, Friend, that, seen]",PRP$_My NNP_Friend IN_that VBN_seen ,"[My, ROOT, Friend, that, seen]",PRP$_My NNP_Friend IN_that VBN_seen ,-3,0,2,0,0,0,0,0,0,0
However  we agreed at the same time that we would not make those arrangements public.,HoweverRB wePRP agreedVBD atIN theDT sameJJ timeNN thatIN wePRP wouldMD notRB makeVB thoseDT arrangementsNNS publicJJ ,"root(ROOT-0, agreed-4) advmod(agreed-4, However-1) punct(agreed-4, ,-2) nsubj(agreed-4, we-3) case(time-8, at-5) det(time-8, the-6) amod(time-8, same-7) nmod:at(agreed-4, time-8) mark(make-13, that-9) nsubj(make-13, we-10) aux(make-13, would-11) neg(make-13, not-12) ccomp(agreed-4, make-13) det(arrangements-15, those-14) nsubj(public-16, arrangements-15) xcomp(make-13, public-16) punct(agreed-4, .-17)",0,0,0,"root(ROOT, agreed) advmod(agreed, However) pnct(agreed, ,) nsbj(agreed, we) case(time, at) det(time, the) amod(time, same) nmod:at(agreed, time) mark(make, that) nsbj(make, we) ax(make, wold) neg(make, not) ccomp(agreed, make) det(arrangements, those) nsbj(pblic, arrangements) xcomp(make, pblic) pnct(agreed, .)","root(,VBD) advmod(VBD,RB) pnct(VBD,VBD) nsbj(VBD,PRP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:at(VBD,NN) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) ccomp(VBD,VB) det(NNS,DT) nsbj(JJ,NNS) xcomp(VB,JJ) pnct(VBD,VBD)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The House will readily understand why we are not making public precisely what we are doing.,TheDT HouseNNP willMD readilyRB understandVB whyWRB wePRP areVBP notRB makingVBG publicJJ preciselyRB whatWP wePRP areVBP doingVBG ,"root(ROOT-0, understand-5) det(House-2, The-1) nsubj(understand-5, House-2) aux(understand-5, will-3) advmod(understand-5, readily-4) advmod(making-10, why-6) nsubj(making-10, we-7) aux(making-10, are-8) neg(making-10, not-9) advcl(understand-5, making-10) xcomp(making-10, public-11) advmod(doing-16, precisely-12) dobj(doing-16, what-13) nsubj(doing-16, we-14) aux(doing-16, are-15) advcl(public-11, doing-16) punct(understand-5, .-17)",0,0,0,"root(ROOT, nderstand) det(Hose, The) nsbj(nderstand, Hose) ax(nderstand, will) advmod(nderstand, readily) advmod(making, why) nsbj(making, we) ax(making, are) neg(making, not) advcl(nderstand, making) xcomp(making, pblic) advmod(doing, precisely) dobj(doing, what) nsbj(doing, we) ax(doing, are) advcl(pblic, doing) pnct(nderstand, .)","root(,VB) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) advmod(VB,RB) advmod(VBG,WRB) nsbj(VBG,PRP) ax(VBG,VBP) neg(VBG,RB) advcl(VB,VBG) xcomp(VBG,JJ) advmod(VBG,RB) dobj(VBG,WP) nsbj(VBG,PRP) ax(VBG,VBP) advcl(JJ,VBG) pnct(VB,VB)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Anybody  including the Provisional IRA  can buy Hansard.,AnybodyNN includingVBG theDT ProvisionalNNP IRANNP canMD buyVB HansardNNP ,"root(ROOT-0, buy-9) nsubj(buy-9, Anybody-1) punct(Anybody-1, ,-2) case(IRA-6, including-3) det(IRA-6, the-4) amod(IRA-6, Provisional-5) nmod:including(Anybody-1, IRA-6) punct(Anybody-1, ,-7) aux(buy-9, can-8) dobj(buy-9, Hansard-10) punct(buy-9, .-11)",0,0,0,"root(ROOT, by) nsbj(by, Anybody) pnct(Anybody, ,) case(IRA, inclding) det(IRA, the) amod(IRA, Provisional) nmod:inclding(Anybody, IRA) pnct(Anybody, ,) ax(by, can) dobj(by, Hansard) pnct(by, .)","root(,VB) nsbj(VB,NN) pnct(NN,NN) case(NNP,VBG) det(NNP,DT) amod(NNP,NNP) nmod:inclding(NN,NNP) pnct(NN,NN) ax(VB,MD) dobj(VB,NNP) pnct(VB,VB)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I shall  therefore  not go into details in the House.,IPRP shallMD thereforeRB notRB goVB intoIN detailsNNS inIN theDT HouseNNP ,"root(ROOT-0, go-7) nsubj(go-7, I-1) aux(go-7, shall-2) punct(go-7, ,-3) advmod(go-7, therefore-4) punct(go-7, ,-5) neg(go-7, not-6) case(details-9, into-8) nmod:into(go-7, details-9) case(House-12, in-10) det(House-12, the-11) nmod:in(details-9, House-12) punct(go-7, .-13)",0,0,0,"root(ROOT, go) nsbj(go, I) ax(go, shall) pnct(go, ,) advmod(go, therefore) pnct(go, ,) neg(go, not) case(details, into) nmod:into(go, details) case(Hose, in) det(Hose, the) nmod:in(details, Hose) pnct(go, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) pnct(VB,VB) advmod(VB,RB) pnct(VB,VB) neg(VB,RB) case(NNS,IN) nmod:into(VB,NNS) case(NNP,IN) det(NNP,DT) nmod:in(NNS,NNP) pnct(VB,VB)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
May I press the right hon. Gentleman to tell the House how many cases under the Act have been passed to the Government of the Irish Republic  and to report to the House when the results of that action and whether the requests resulted in prosecution come to hand?,MayNNP IPRP pressVBP theDT rightJJ honNN GentlemanNNP toTO tellVB theDT HouseNNP howWRB manyJJ casesNNS underIN theDT ActNNP haveVBP beenVBN passedVBN toTO theDT GovernmentNNP ofIN theDT IrishNNP RepublicNNP andCC toTO reportVB toTO theDT HouseNNP whenWRB theDT resultsNNS ofIN thatDT actionNN andCC whetherIN theDT requestsNNS resultedVBD inIN prosecutionNN comeNN toTO handNN ,"root(ROOT-0, May-1) nsubj(press-3, I-2) acl:relcl(May-1, press-3) det(Gentleman-7, the-4) amod(Gentleman-7, right-5) compound(Gentleman-7, hon.-6) dobj(press-3, Gentleman-7) mark(tell-9, to-8) advcl(press-3, tell-9) det(House-11, the-10) dobj(tell-9, House-11) advmod(many-13, how-12) amod(cases-14, many-13) nsubjpass(passed-20, cases-14) case(Act-17, under-15) det(Act-17, the-16) nmod:under(cases-14, Act-17) aux(passed-20, have-18) auxpass(passed-20, been-19) ccomp(tell-9, passed-20) case(Government-23, to-21) det(Government-23, the-22) nmod:to(passed-20, Government-23) case(Republic-27, of-24) det(Republic-27, the-25) amod(Republic-27, Irish-26) nmod:of(Government-23, Republic-27) punct(May-1, ,-28) cc(May-1, and-29) mark(report-31, to-30) conj:and(May-1, report-31) case(House-34, to-32) det(House-34, the-33) nmod:to(report-31, House-34) advmod(report-31, when-35) det(results-37, the-36) dep(when-35, results-37) case(action-40, of-38) det(action-40, that-39) nmod:of(results-37, action-40) cc(results-37, and-41) mark(resulted-45, whether-42) det(requests-44, the-43) nsubj(resulted-45, requests-44) dep(when-35, resulted-45) conj:and(results-37, resulted-45) case(prosecution-47, in-46) nmod:in(resulted-45, prosecution-47) acl(prosecution-47, come-48) mark(hand-50, to-49) xcomp(come-48, hand-50) punct(results-37, ?-51)",0,0,0,"root(ROOT, May) nsbj(press, I) acl:relcl(May, press) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) dobj(press, Gentleman) mark(tell, to) advcl(press, tell) det(Hose, the) dobj(tell, Hose) advmod(many, how) amod(cases, many) nsbjpass(passed, cases) case(Act, nder) det(Act, the) nmod:nder(cases, Act) ax(passed, have) axpass(passed, been) ccomp(tell, passed) case(Government, to) det(Government, the) nmod:to(passed, Government) case(Repblic, of) det(Repblic, the) amod(Repblic, Irish) nmod:of(Government, Repblic) pnct(May, ,) cc(May, and) mark(report, to) conj:and(May, report) case(Hose, to) det(Hose, the) nmod:to(report, Hose) advmod(report, when) det(reslts, the) dep(when, reslts) case(action, of) det(action, that) nmod:of(reslts, action) cc(reslts, and) mark(reslted, whether) det(reqests, the) nsbj(reslted, reqests) dep(when, reslted) conj:and(reslts, reslted) case(prosection, in) nmod:in(reslted, prosection) acl(prosection, come) mark(hand, to) xcomp(come, hand) pnct(reslts, ?)","root(,NNP) nsbj(VBP,PRP) acl:relcl(NNP,VBP) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) dobj(VBP,NNP) mark(VB,TO) advcl(VBP,VB) det(NNP,DT) dobj(VB,NNP) advmod(JJ,WRB) amod(NNS,JJ) nsbjpass(VBN,NNS) case(NNP,IN) det(NNP,DT) nmod:nder(NNS,NNP) ax(VBN,VBP) axpass(VBN,VBN) ccomp(VB,VBN) case(NNP,TO) det(NNP,DT) nmod:to(VBN,NNP) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:of(NNP,NNP) pnct(NNP,NNP) cc(NNP,CC) mark(VB,TO) conj:and(NNP,VB) case(NNP,TO) det(NNP,DT) nmod:to(VB,NNP) advmod(VB,WRB) det(NNS,DT) dep(WRB,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) cc(NNS,CC) mark(VBD,IN) det(NNS,DT) nsbj(VBD,NNS) dep(WRB,VBD) conj:and(NNS,VBD) case(NN,IN) nmod:in(VBD,NN) acl(NN,NN) mark(NN,TO) xcomp(NN,NN) pnct(NNS,NNS)","[May, tell, right, Irish, I, passed, Republic, Government, Gentleman, press]","[May, Gentleman, tell, Irish, I, passed, Republic, Government, press]",13,"[May, Gentleman, tell, Irish, I, passed, Republic, Government, press]","[May, Gentleman, tell, Irish, I, passed, Republic, Government, press]",NNP_May NNP_Gentleman VB_tell NNP_Irish PRP_I VBN_passed NNP_Republic NNP_Government VBP_press ,"[May, Gentleman, tell, Irish, I, passed, Republic, Government, press]","[May, Gentleman, tell, Irish, I, passed, Republic, Government, press]",NNP_May NNP_Gentleman VB_tell NNP_Irish PRP_I VBN_passed NNP_Republic NNP_Government VBP_press ,"[May, Gentleman, tell, Irish, I, passed, Republic, Government, press]",NNP_May NNP_Gentleman VB_tell NNP_Irish PRP_I VBN_passed NNP_Republic NNP_Government VBP_press ,"[May, Gentleman, tell, Irish, I, passed, Republic, Government, press]",NNP_May NNP_Gentleman VB_tell NNP_Irish PRP_I VBN_passed NNP_Republic NNP_Government VBP_press ,-3,0,2,0,0,0,0,0,0,0
Since the major obstacle to extradition is the ability of those against whom extradition is sought to raise a political defence  does not the answer lie in the ratification by the Irish Republic Government of the European convention on terrorism?,SinceIN theDT majorJJ obstacleNN toTO extraditionNN isVBZ theDT abilityNN ofIN thoseDT againstIN whomWP extraditionNN isVBZ soughtVBN toTO raiseVB aDT politicalJJ defenceNN doesVBZ notRB theDT answerNN lieNN inIN theDT ratificationNN byIN theDT IrishNNP RepublicNNP GovernmentNNP ofIN theDT EuropeanNNP conventionNN onIN terrorismNN ,"root(ROOT-0, lie-27) mark(ability-9, Since-1) det(obstacle-4, the-2) amod(obstacle-4, major-3) nsubj(ability-9, obstacle-4) case(extradition-6, to-5) nmod:to(obstacle-4, extradition-6) cop(ability-9, is-7) det(ability-9, the-8) advcl(lie-27, ability-9) case(those-11, of-10) nmod:of(ability-9, those-11) mark(sought-16, against-12) dobj(sought-16, whom-13) nsubjpass(sought-16, extradition-14) auxpass(sought-16, is-15) acl(ability-9, sought-16) mark(raise-18, to-17) xcomp(sought-16, raise-18) det(defence-21, a-19) amod(defence-21, political-20) dobj(raise-18, defence-21) punct(lie-27, ,-22) aux(lie-27, does-23) neg(answer-26, not-24) det(answer-26, the-25) nsubj(lie-27, answer-26) case(ratification-30, in-28) det(ratification-30, the-29) nmod:in(lie-27, ratification-30) case(Government-35, by-31) det(Government-35, the-32) amod(Government-35, Irish-33) compound(Government-35, Republic-34) nmod:by(ratification-30, Government-35) case(convention-39, of-36) det(convention-39, the-37) amod(convention-39, European-38) nmod:of(Government-35, convention-39) case(terrorism-41, on-40) nmod:on(ratification-30, terrorism-41) punct(lie-27, ?-42)",0,0,0,"root(ROOT, lie) mark(ability, Since) det(obstacle, the) amod(obstacle, major) nsbj(ability, obstacle) case(extradition, to) nmod:to(obstacle, extradition) cop(ability, is) det(ability, the) advcl(lie, ability) case(those, of) nmod:of(ability, those) mark(soght, against) dobj(soght, whom) nsbjpass(soght, extradition) axpass(soght, is) acl(ability, soght) mark(raise, to) xcomp(soght, raise) det(defence, a) amod(defence, political) dobj(raise, defence) pnct(lie, ,) ax(lie, does) neg(answer, not) det(answer, the) nsbj(lie, answer) case(ratification, in) det(ratification, the) nmod:in(lie, ratification) case(Government, by) det(Government, the) amod(Government, Irish) compond(Government, Repblic) nmod:by(ratification, Government) case(convention, of) det(convention, the) amod(convention, Eropean) nmod:of(Government, convention) case(terrorism, on) nmod:on(ratification, terrorism) pnct(lie, ?)","root(,NN) mark(NN,IN) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) case(NN,TO) nmod:to(NN,NN) cop(NN,VBZ) det(NN,DT) advcl(NN,NN) case(DT,IN) nmod:of(NN,DT) mark(VBN,IN) dobj(VBN,WP) nsbjpass(VBN,NN) axpass(VBN,VBZ) acl(NN,VBN) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(NN,NN) ax(NN,VBZ) neg(NN,RB) det(NN,DT) nsbj(NN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) compond(NNP,NNP) nmod:by(NN,NNP) case(NN,IN) det(NN,DT) amod(NN,NNP) nmod:of(NNP,NN) case(NN,IN) nmod:on(NN,NN) pnct(NN,NN)","[European, convention, terrorism, ratification, lie, Irish, Government]",[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If the Irish Government were to ratify that convention  as we have done  the difficulties would disappear.,IfIN theDT IrishJJ GovernmentNNP wereVBD toTO ratifyVB thatDT conventionNN asIN wePRP haveVBP doneVBN theDT difficultiesNNS wouldMD disappearVB ,"root(ROOT-0, disappear-19) mark(were-5, If-1) det(Government-4, the-2) amod(Government-4, Irish-3) nsubj(were-5, Government-4) advcl(disappear-19, were-5) mark(ratify-7, to-6) xcomp(were-5, ratify-7) det(convention-9, that-8) dobj(ratify-7, convention-9) punct(disappear-19, ,-10) mark(done-14, as-11) nsubj(done-14, we-12) aux(done-14, have-13) advcl(disappear-19, done-14) punct(disappear-19, ,-15) det(difficulties-17, the-16) nsubj(disappear-19, difficulties-17) aux(disappear-19, would-18) punct(disappear-19, .-20)",0,0,0,"root(ROOT, disappear) mark(were, If) det(Government, the) amod(Government, Irish) nsbj(were, Government) advcl(disappear, were) mark(ratify, to) xcomp(were, ratify) det(convention, that) dobj(ratify, convention) pnct(disappear, ,) mark(done, as) nsbj(done, we) ax(done, have) advcl(disappear, done) pnct(disappear, ,) det(difficlties, the) nsbj(disappear, difficlties) ax(disappear, wold) pnct(disappear, .)","root(,VB) mark(VBD,IN) det(NNP,DT) amod(NNP,JJ) nsbj(VBD,NNP) advcl(VB,VBD) mark(VB,TO) xcomp(VBD,VB) det(NN,DT) dobj(VB,NN) pnct(VB,VB) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) advcl(VB,VBN) pnct(VB,VB) det(NNS,DT) nsbj(VB,NNS) ax(VB,MD) pnct(VB,VB)","[were, Irish, ratify, disappear, Government]",[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I cannot tell the hon. Gentleman how many applications for extradition have been made recently unless he accepts the period since 1971 as being recent enough.,IPRP canMD notRB tellVB theDT honNN GentlemanNNP howWRB manyJJ applicationsNNS forIN extraditionNN haveVBP beenVBN madeVBN recentlyRB unlessIN hePRP acceptsVBZ theDT periodNN sinceIN 1971CD asIN beingVBG recentJJ enoughRB ,"root(ROOT-0, tell-4) nsubj(tell-4, I-1) aux(tell-4, can-2) neg(tell-4, not-3) det(Gentleman-7, the-5) compound(Gentleman-7, hon.-6) dobj(tell-4, Gentleman-7) advmod(many-9, how-8) amod(applications-10, many-9) nsubjpass(made-15, applications-10) case(extradition-12, for-11) nmod:for(applications-10, extradition-12) aux(made-15, have-13) auxpass(made-15, been-14) ccomp(tell-4, made-15) advmod(made-15, recently-16) mark(accepts-19, unless-17) nsubj(accepts-19, he-18) advcl(made-15, accepts-19) det(period-21, the-20) dobj(accepts-19, period-21) case(1971-23, since-22) nmod:since(accepts-19, 1971-23) mark(enough-27, as-24) cop(enough-27, being-25) amod(enough-27, recent-26) advcl(accepts-19, enough-27) punct(tell-4, .-28)",0,0,0,"root(ROOT, tell) nsbj(tell, I) ax(tell, can) neg(tell, not) det(Gentleman, the) compond(Gentleman, hon.) dobj(tell, Gentleman) advmod(many, how) amod(applications, many) nsbjpass(made, applications) case(extradition, for) nmod:for(applications, extradition) ax(made, have) axpass(made, been) ccomp(tell, made) advmod(made, recently) mark(accepts, nless) nsbj(accepts, he) advcl(made, accepts) det(period, the) dobj(accepts, period) case(1971, since) nmod:since(accepts, 1971) mark(enogh, as) cop(enogh, being) amod(enogh, recent) advcl(accepts, enogh) pnct(tell, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) advmod(JJ,WRB) amod(NNS,JJ) nsbjpass(VBN,NNS) case(NN,IN) nmod:for(NNS,NN) ax(VBN,VBP) axpass(VBN,VBN) ccomp(VB,VBN) advmod(VBN,RB) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VBN,VBZ) det(NN,DT) dobj(VBZ,NN) case(CD,IN) nmod:since(VBZ,CD) mark(RB,IN) cop(RB,VBG) amod(RB,JJ) advcl(VBZ,RB) pnct(VB,VB)","[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]","[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]",14,"[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]","[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]",VB_tell PRP_he RB_not NN_period VBZ_accepts PRP_I CD_1971 VBN_made NNP_Gentleman RB_enough ,"[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]","[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]",VB_tell PRP_he RB_not NN_period VBZ_accepts PRP_I CD_1971 VBN_made NNP_Gentleman RB_enough ,"[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]",VB_tell PRP_he RB_not NN_period VBZ_accepts PRP_I CD_1971 VBN_made NNP_Gentleman RB_enough ,"[tell, he, not, period, accepts, I, 1971, ROOT, made, Gentleman, enough]",VB_tell PRP_he RB_not NN_period VBZ_accepts PRP_I CD_1971 VBN_made NNP_Gentleman RB_enough ,-3,0,1,2,1,2,1,1,1,1
In that time  75 warrants have been sent to the Republic for people who are suspected of committing terrorist offences and only one person has been returned to Northern Ireland.,InIN thatDT timeNN 75CD warrantsNNS haveVBP beenVBN sentVBN toTO theDT RepublicNNP forIN peopleNNS whoWP areVBP suspectedVBN ofIN committingVBG terroristJJ offencesNNS andCC onlyRB oneCD personNN hasVBZ beenVBN returnedVBN toTO NorthernNNP IrelandNNP ,"root(ROOT-0, sent-9) case(time-3, In-1) det(time-3, that-2) nmod:in(sent-9, time-3) punct(sent-9, ,-4) nummod(warrants-6, 75-5) nsubjpass(sent-9, warrants-6) aux(sent-9, have-7) auxpass(sent-9, been-8) case(Republic-12, to-10) det(Republic-12, the-11) nmod:to(sent-9, Republic-12) case(people-14, for-13) nmod:for(sent-9, people-14) nsubjpass(suspected-17, who-15) auxpass(suspected-17, are-16) acl:relcl(people-14, suspected-17) mark(committing-19, of-18) advcl(suspected-17, committing-19) amod(offences-21, terrorist-20) dobj(committing-19, offences-21) cc(committing-19, and-22) advmod(person-25, only-23) nummod(person-25, one-24) nsubjpass(returned-28, person-25) aux(returned-28, has-26) auxpass(returned-28, been-27) advcl(suspected-17, returned-28) conj:and(committing-19, returned-28) case(Ireland-31, to-29) compound(Ireland-31, Northern-30) nmod:to(returned-28, Ireland-31) punct(sent-9, .-32)",0,0,0,"root(ROOT, sent) case(time, In) det(time, that) nmod:in(sent, time) pnct(sent, ,) nmmod(warrants, 75) nsbjpass(sent, warrants) ax(sent, have) axpass(sent, been) case(Repblic, to) det(Repblic, the) nmod:to(sent, Repblic) case(people, for) nmod:for(sent, people) nsbjpass(sspected, who) axpass(sspected, are) acl:relcl(people, sspected) mark(committing, of) advcl(sspected, committing) amod(offences, terrorist) dobj(committing, offences) cc(committing, and) advmod(person, only) nmmod(person, one) nsbjpass(retrned, person) ax(retrned, has) axpass(retrned, been) advcl(sspected, retrned) conj:and(committing, retrned) case(Ireland, to) compond(Ireland, Northern) nmod:to(retrned, Ireland) pnct(sent, .)","root(,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) pnct(VBN,VBN) nmmod(NNS,CD) nsbjpass(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBN) case(NNP,TO) det(NNP,DT) nmod:to(VBN,NNP) case(NNS,IN) nmod:for(VBN,NNS) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(NNS,VBN) mark(VBG,IN) advcl(VBN,VBG) amod(NNS,JJ) dobj(VBG,NNS) cc(VBG,CC) advmod(NN,RB) nmmod(NN,CD) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) advcl(VBN,VBN) conj:and(VBG,VBN) case(NNP,TO) compond(NNP,NNP) nmod:to(VBN,NNP) pnct(VBN,VBN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In the same period  152 warrants have been sent to the Republic for the extradition of persons suspected of non terrorist offences and 52 people have been returned to the Province.,InIN theDT sameJJ periodNN 152CD warrantsNNS haveVBP beenVBN sentVBN toTO theDT RepublicNNP forIN theDT extraditionNN ofIN personsNNS suspectedVBN ofIN nonJJ terroristJJ offencesNNS andCC 52CD peopleNNS haveVBP beenVBN returnedVBN toTO theDT ProvinceNN ,"root(ROOT-0, sent-10) case(period-4, In-1) det(period-4, the-2) amod(period-4, same-3) nmod:in(sent-10, period-4) punct(sent-10, ,-5) nummod(warrants-7, 152-6) nsubjpass(sent-10, warrants-7) aux(sent-10, have-8) auxpass(sent-10, been-9) case(Republic-13, to-11) det(Republic-13, the-12) nmod:to(sent-10, Republic-13) case(extradition-16, for-14) det(extradition-16, the-15) nmod:for(sent-10, extradition-16) case(persons-18, of-17) nmod:of(extradition-16, persons-18) acl(persons-18, suspected-19) case(offences-23, of-20) amod(offences-23, non-21) amod(offences-23, terrorist-22) nmod:of(suspected-19, offences-23) cc(offences-23, and-24) nummod(people-26, 52-25) nmod:of(suspected-19, people-26) conj:and(offences-23, people-26) aux(returned-29, have-27) auxpass(returned-29, been-28) ccomp(sent-10, returned-29) case(Province-32, to-30) det(Province-32, the-31) nmod:to(returned-29, Province-32) punct(sent-10, .-33)",0,0,0,"root(ROOT, sent) case(period, In) det(period, the) amod(period, same) nmod:in(sent, period) pnct(sent, ,) nmmod(warrants, 152) nsbjpass(sent, warrants) ax(sent, have) axpass(sent, been) case(Repblic, to) det(Repblic, the) nmod:to(sent, Repblic) case(extradition, for) det(extradition, the) nmod:for(sent, extradition) case(persons, of) nmod:of(extradition, persons) acl(persons, sspected) case(offences, of) amod(offences, non) amod(offences, terrorist) nmod:of(sspected, offences) cc(offences, and) nmmod(people, 52) nmod:of(sspected, people) conj:and(offences, people) ax(retrned, have) axpass(retrned, been) ccomp(sent, retrned) case(Province, to) det(Province, the) nmod:to(retrned, Province) pnct(sent, .)","root(,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VBN,NN) pnct(VBN,VBN) nmmod(NNS,CD) nsbjpass(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBN) case(NNP,TO) det(NNP,DT) nmod:to(VBN,NNP) case(NN,IN) det(NN,DT) nmod:for(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) acl(NNS,VBN) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:of(VBN,NNS) cc(NNS,CC) nmmod(NNS,CD) nmod:of(VBN,NNS) conj:and(NNS,NNS) ax(VBN,VBP) axpass(VBN,VBN) ccomp(VBN,VBN) case(NN,TO) det(NN,DT) nmod:to(VBN,NN) pnct(VBN,VBN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Chancellor of the Exchequer if he is satisfied with the progress of the economy.,askedVBN theDT ChancellorNNP ofIN theDT ExchequerNNP ifIN hePRP isVBZ satisfiedJJ withIN theDT progressNN ofIN theDT economyNN ,"root(ROOT-0, asked-1) det(Chancellor-3, the-2) dobj(asked-1, Chancellor-3) case(Exchequer-6, of-4) det(Exchequer-6, the-5) nmod:of(Chancellor-3, Exchequer-6) mark(satisfied-10, if-7) nsubjpass(satisfied-10, he-8) auxpass(satisfied-10, is-9) advcl(asked-1, satisfied-10) case(progress-13, with-11) det(progress-13, the-12) nmod:with(satisfied-10, progress-13) case(economy-16, of-14) det(economy-16, the-15) nmod:of(progress-13, economy-16) punct(asked-1, .-17)",0,1,1,"root(ROOT, asked) det(Chancellor, the) dobj(asked, Chancellor) case(Excheqer, of) det(Excheqer, the) nmod:of(Chancellor, Excheqer) mark(satisfied, if) nsbjpass(satisfied, he) axpass(satisfied, is) advcl(asked, satisfied) case(progress, with) det(progress, the) nmod:with(satisfied, progress) case(economy, of) det(economy, the) nmod:of(progress, economy) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) mark(JJ,IN) nsbjpass(JJ,PRP) axpass(JJ,VBZ) advcl(VBN,JJ) case(NN,IN) det(NN,DT) nmod:with(JJ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBN,VBN)","[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]","[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]",1,"[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]","[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]",PRP_he NNP_Chancellor NNP_Exchequer VBN_asked NN_progress JJ_satisfied ,"[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]","[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]",PRP_he NNP_Chancellor NNP_Exchequer VBN_asked NN_progress JJ_satisfied ,"[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]",PRP_he NNP_Chancellor NNP_Exchequer VBN_asked NN_progress JJ_satisfied ,"[he, Chancellor, Exchequer, asked, progress, satisfied, ROOT]",PRP_he NNP_Chancellor NNP_Exchequer VBN_asked NN_progress JJ_satisfied ,-3,0,2,1,1,1,1,1,1,2
Of course not.,OfIN courseNN notRB ,"root(ROOT-0, course-2) case(course-2, Of-1) advmod(course-2, not-3) punct(course-2, .-4)",0,1,0,"root(ROOT, corse) case(corse, Of) advmod(corse, not) pnct(corse, .)","root(,NN) case(NN,IN) advmod(NN,RB) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It will take time [Interruption.],ItPRP willMD takeVB timeNN [JJ InterruptionNNP ]NN ,"root(ROOT-0, take-3) nsubj(take-3, It-1) aux(take-3, will-2) dobj(take-3, time-4) punct(Interruption-6, -LSB--5) dep(time-4, Interruption-6) punct(Interruption-6, .-7) punct(take-3, -RSB--8)",0,0,0,"root(ROOT, take) nsbj(take, It) ax(take, will) dobj(take, time) pnct(Interrption, ) dep(time, Interrption) pnct(Interrption, .) pnct(take, )","root(,VB) nsbj(VB,PRP) ax(VB,MD) dobj(VB,NN) pnct(NNP,) dep(NN,NNP) pnct(NNP,NNP) pnct(VB,)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Opposition Members are readily amused.,OppositionNN MembersNNS areVBP readilyRB amusedVBN ,"root(ROOT-0, amused-5) compound(Members-2, Opposition-1) nsubjpass(amused-5, Members-2) auxpass(amused-5, are-3) advmod(amused-5, readily-4) punct(amused-5, .-6)",0,0,0,"root(ROOT, amsed) compond(Members, Opposition) nsbjpass(amsed, Members) axpass(amsed, are) advmod(amsed, readily) pnct(amsed, .)","root(,VBN) compond(NNS,NN) nsbjpass(VBN,NNS) axpass(VBN,VBP) advmod(VBN,RB) pnct(VBN,VBN)","[Members, amused]",[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It will take time  as the House should understand  for our policies to check the long run decline of the economy.,ItPRP willMD takeVB timeNN asIN theDT HouseNNP shouldMD understandVB forIN ourPRP$ policiesNNS toTO checkVB theDT longJJ runNN declineNN ofIN theDT economyNN ,"root(ROOT-0, take-3) nsubj(take-3, It-1) aux(take-3, will-2) dobj(take-3, time-4) punct(take-3, ,-5) mark(understand-10, as-6) det(House-8, the-7) nsubj(understand-10, House-8) aux(understand-10, should-9) advcl(take-3, understand-10) punct(take-3, ,-11) case(policies-14, for-12) nmod:poss(policies-14, our-13) nmod:for(take-3, policies-14) mark(check-16, to-15) acl(policies-14, check-16) det(decline-20, the-17) amod(decline-20, long-18) compound(decline-20, run-19) dobj(check-16, decline-20) case(economy-23, of-21) det(economy-23, the-22) nmod:of(decline-20, economy-23) punct(take-3, .-24)",0,0,0,"root(ROOT, take) nsbj(take, It) ax(take, will) dobj(take, time) pnct(take, ,) mark(nderstand, as) det(Hose, the) nsbj(nderstand, Hose) ax(nderstand, shold) advcl(take, nderstand) pnct(take, ,) case(policies, for) nmod:poss(policies, or) nmod:for(take, policies) mark(check, to) acl(policies, check) det(decline, the) amod(decline, long) compond(decline, rn) dobj(check, decline) case(economy, of) det(economy, the) nmod:of(decline, economy) pnct(take, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) dobj(VB,NN) pnct(VB,VB) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) advcl(VB,VB) pnct(VB,VB) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:for(VB,NNS) mark(VB,TO) acl(NNS,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VB,VB)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
First  there has been the big fall in the number of notified vacancies that has occurred for the second month running.,FirstRB thereEX hasVBZ beenVBN theDT bigJJ fallNN inIN theDT numberNN ofIN notifiedJJ vacanciesNNS thatWDT hasVBZ occurredVBN forIN theDT secondJJ monthNN runningVBG ,"root(ROOT-0, fall-8) advmod(fall-8, First-1) punct(fall-8, ,-2) expl(fall-8, there-3) aux(fall-8, has-4) cop(fall-8, been-5) det(fall-8, the-6) amod(fall-8, big-7) case(number-11, in-9) det(number-11, the-10) nmod:in(fall-8, number-11) case(vacancies-14, of-12) amod(vacancies-14, notified-13) nmod:of(number-11, vacancies-14) nsubj(occurred-17, that-15) aux(occurred-17, has-16) acl:relcl(vacancies-14, occurred-17) case(month-21, for-18) det(month-21, the-19) amod(month-21, second-20) nmod:for(occurred-17, month-21) acl(month-21, running-22) punct(fall-8, .-23)",0,0,0,"root(ROOT, fall) advmod(fall, First) pnct(fall, ,) expl(fall, there) ax(fall, has) cop(fall, been) det(fall, the) amod(fall, big) case(nmber, in) det(nmber, the) nmod:in(fall, nmber) case(vacancies, of) amod(vacancies, notified) nmod:of(nmber, vacancies) nsbj(occrred, that) ax(occrred, has) acl:relcl(vacancies, occrred) case(month, for) det(month, the) amod(month, second) nmod:for(occrred, month) acl(month, rnning) pnct(fall, .)","root(,NN) advmod(NN,RB) pnct(NN,NN) expl(NN,EX) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) amod(NN,JJ) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) nsbj(VBN,WDT) ax(VBN,VBZ) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(VBN,NN) acl(NN,VBG) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Secondly  there has been a big fall in the index of long term indicators.,SecondlyRB thereEX hasVBZ beenVBN aDT bigJJ fallNN inIN theDT indexNN ofIN longJJ termNN indicatorsNNS ,"root(ROOT-0, fall-8) advmod(fall-8, Secondly-1) punct(fall-8, ,-2) expl(fall-8, there-3) aux(fall-8, has-4) cop(fall-8, been-5) det(fall-8, a-6) amod(fall-8, big-7) case(index-11, in-9) det(index-11, the-10) nmod:in(fall-8, index-11) case(indicators-15, of-12) amod(indicators-15, long-13) compound(indicators-15, term-14) nmod:of(index-11, indicators-15) punct(fall-8, .-16)",0,0,0,"root(ROOT, fall) advmod(fall, Secondly) pnct(fall, ,) expl(fall, there) ax(fall, has) cop(fall, been) det(fall, a) amod(fall, big) case(index, in) det(index, the) nmod:in(fall, index) case(indicators, of) amod(indicators, long) compond(indicators, term) nmod:of(index, indicators) pnct(fall, .)","root(,NN) advmod(NN,RB) pnct(NN,NN) expl(NN,EX) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) amod(NN,JJ) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is it not time that we had a U turn?,IsVBZ itPRP notRB timeNN thatIN wePRP hadVBD aDT UNNP turnNN ,"root(ROOT-0, time-4) cop(time-4, Is-1) nsubj(time-4, it-2) neg(time-4, not-3) mark(had-7, that-5) nsubj(had-7, we-6) ccomp(time-4, had-7) det(U-9, a-8) nsubj(turn-10, U-9) ccomp(had-7, turn-10) punct(time-4, ?-11)",0,0,0,"root(ROOT, time) cop(time, Is) nsbj(time, it) neg(time, not) mark(had, that) nsbj(had, we) ccomp(time, had) det(U, a) nsbj(trn, U) ccomp(had, trn) pnct(time, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) mark(VBD,IN) nsbj(VBD,PRP) ccomp(NN,VBD) det(NNP,DT) nsbj(NN,NNP) ccomp(VBD,NN) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he deal specifically with the two points that I have mentioned?,WillMD hePRP dealVB specificallyRB withIN theDT twoCD pointsNNS thatIN IPRP haveVBP mentionedVBN ,"root(ROOT-0, deal-3) aux(deal-3, Will-1) nsubj(deal-3, he-2) advmod(deal-3, specifically-4) case(points-8, with-5) det(points-8, the-6) nummod(points-8, two-7) nmod:with(deal-3, points-8) dobj(mentioned-12, that-9) nsubj(mentioned-12, I-10) aux(mentioned-12, have-11) acl:relcl(points-8, mentioned-12) punct(deal-3, ?-13)",0,0,1,"root(ROOT, deal) ax(deal, Will) nsbj(deal, he) advmod(deal, specifically) case(points, with) det(points, the) nmmod(points, two) nmod:with(deal, points) dobj(mentioned, that) nsbj(mentioned, I) ax(mentioned, have) acl:relcl(points, mentioned) pnct(deal, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) advmod(VB,RB) case(NNS,IN) det(NNS,DT) nmmod(NNS,CD) nmod:with(VB,NNS) dobj(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) acl:relcl(NNS,VBN) pnct(VB,VB)","[he, ROOT, specifically, deal, points]","[he, ROOT, specifically, deal, points]",3,[ ],[ ],PRP_he RB_specifically VB_deal NNS_points ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Of course it is right that a reduction in the number of notified vacancies and a downturn in the long term indicators are manifestations of the continuing decline in the economy.,OfIN courseNN itPRP isVBZ rightJJ thatIN aDT reductionNN inIN theDT numberNN ofIN notifiedJJ vacanciesNNS andCC aDT downturnNN inIN theDT longJJ termNN indicatorsNNS areVBP manifestationsNNS ofIN theDT continuingVBG declineNN inIN theDT economyNN ,"root(ROOT-0, right-5) case(course-2, Of-1) nmod:of(right-5, course-2) nsubj(right-5, it-3) cop(right-5, is-4) mark(manifestations-24, that-6) det(reduction-8, a-7) nsubj(manifestations-24, reduction-8) case(number-11, in-9) det(number-11, the-10) nmod:in(reduction-8, number-11) case(vacancies-14, of-12) amod(vacancies-14, notified-13) nmod:of(number-11, vacancies-14) cc(vacancies-14, and-15) det(downturn-17, a-16) nmod:of(number-11, downturn-17) conj:and(vacancies-14, downturn-17) case(indicators-22, in-18) det(indicators-22, the-19) amod(indicators-22, long-20) compound(indicators-22, term-21) nmod:in(downturn-17, indicators-22) cop(manifestations-24, are-23) ccomp(right-5, manifestations-24) case(decline-28, of-25) det(decline-28, the-26) amod(decline-28, continuing-27) nmod:of(manifestations-24, decline-28) case(economy-31, in-29) det(economy-31, the-30) nmod:in(decline-28, economy-31) punct(right-5, .-32)",0,1,0,"root(ROOT, right) case(corse, Of) nmod:of(right, corse) nsbj(right, it) cop(right, is) mark(manifestations, that) det(redction, a) nsbj(manifestations, redction) case(nmber, in) det(nmber, the) nmod:in(redction, nmber) case(vacancies, of) amod(vacancies, notified) nmod:of(nmber, vacancies) cc(vacancies, and) det(downtrn, a) nmod:of(nmber, downtrn) conj:and(vacancies, downtrn) case(indicators, in) det(indicators, the) amod(indicators, long) compond(indicators, term) nmod:in(downtrn, indicators) cop(manifestations, are) ccomp(right, manifestations) case(decline, of) det(decline, the) amod(decline, contining) nmod:of(manifestations, decline) case(economy, in) det(economy, the) nmod:in(decline, economy) pnct(right, .)","root(,JJ) case(NN,IN) nmod:of(JJ,NN) nsbj(JJ,PRP) cop(JJ,VBZ) mark(NNS,IN) det(NN,DT) nsbj(NNS,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) cc(NNS,CC) det(NN,DT) nmod:of(NN,NN) conj:and(NNS,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) compond(NNS,NN) nmod:in(NN,NNS) cop(NNS,VBP) ccomp(JJ,NNS) case(NN,IN) det(NN,DT) amod(NN,VBG) nmod:of(NNS,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(JJ,JJ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
There are many causes for that  and many of those are of long standing.,ThereEX areVBP manyJJ causesNNS forIN thatDT andCC manyJJ ofIN thoseDT areVBP ofIN longJJ standingNN ,"root(ROOT-0, are-2) expl(are-2, There-1) amod(causes-4, many-3) nsubj(are-2, causes-4) case(that-6, for-5) nmod:for(causes-4, that-6) punct(are-2, ,-7) cc(are-2, and-8) nsubj(standing-15, many-9) case(those-11, of-10) nmod:of(many-9, those-11) cop(standing-15, are-12) case(standing-15, of-13) amod(standing-15, long-14) conj:and(are-2, standing-15) punct(are-2, .-16)",0,0,0,"root(ROOT, are) expl(are, There) amod(cases, many) nsbj(are, cases) case(that, for) nmod:for(cases, that) pnct(are, ,) cc(are, and) nsbj(standing, many) case(those, of) nmod:of(many, those) cop(standing, are) case(standing, of) amod(standing, long) conj:and(are, standing) pnct(are, .)","root(,VBP) expl(VBP,EX) amod(NNS,JJ) nsbj(VBP,NNS) case(DT,IN) nmod:for(NNS,DT) pnct(VBP,VBP) cc(VBP,CC) nsbj(NN,JJ) case(DT,IN) nmod:of(JJ,DT) cop(NN,VBP) case(NN,IN) amod(NN,JJ) conj:and(VBP,NN) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
A most recent cause is the doubling of oil prices in the last 12 months.,ADT mostRBS recentJJ causeNN isVBZ theDT doublingNN ofIN oilNN pricesNNS inIN theDT lastJJ 12CD monthsNNS ,"root(ROOT-0, doubling-7) det(cause-4, A-1) advmod(recent-3, most-2) amod(cause-4, recent-3) nsubj(doubling-7, cause-4) cop(doubling-7, is-5) det(doubling-7, the-6) case(prices-10, of-8) compound(prices-10, oil-9) nmod:of(doubling-7, prices-10) case(months-15, in-11) det(months-15, the-12) amod(months-15, last-13) nummod(months-15, 12-14) nmod:in(doubling-7, months-15) punct(doubling-7, .-16)",0,0,0,"root(ROOT, dobling) det(case, A) advmod(recent, most) amod(case, recent) nsbj(dobling, case) cop(dobling, is) det(dobling, the) case(prices, of) compond(prices, oil) nmod:of(dobling, prices) case(months, in) det(months, the) amod(months, last) nmmod(months, 12) nmod:in(dobling, months) pnct(dobling, .)","root(,NN) det(NN,DT) advmod(JJ,RBS) amod(NN,JJ) nsbj(NN,NN) cop(NN,VBZ) det(NN,DT) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:in(NN,NNS) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That will have effected a reduction of around 3 per cent.,ThatDT willMD haveVB effectedVBN aDT reductionNN ofIN aroundIN 3CD perIN centNN ,"root(ROOT-0, effected-4) nsubj(effected-4, That-1) aux(effected-4, will-2) aux(effected-4, have-3) det(reduction-6, a-5) dobj(effected-4, reduction-6) case(3-9, of-7) advmod(3-9, around-8) nmod:of(reduction-6, 3-9) case(cent-11, per-10) nmod:per(3-9, cent-11) punct(effected-4, .-12)",0,0,0,"root(ROOT, effected) nsbj(effected, That) ax(effected, will) ax(effected, have) det(redction, a) dobj(effected, redction) case(3, of) advmod(3, arond) nmod:of(redction, 3) case(cent, per) nmod:per(3, cent) pnct(effected, .)","root(,VBN) nsbj(VBN,DT) ax(VBN,MD) ax(VBN,VB) det(NN,DT) dobj(VBN,NN) case(CD,IN) advmod(CD,IN) nmod:of(NN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
in the likely growth of our economy.,inIN theDT likelyJJ growthNN ofIN ourPRP$ economyNN ,"root(ROOT-0, growth-4) case(growth-4, in-1) det(growth-4, the-2) amod(growth-4, likely-3) case(economy-7, of-5) nmod:poss(economy-7, our-6) nmod:of(growth-4, economy-7) punct(growth-4, .-8)",0,0,0,"root(ROOT, growth) case(growth, in) det(growth, the) amod(growth, likely) case(economy, of) nmod:poss(economy, or) nmod:of(growth, economy) pnct(growth, .)","root(,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
There is no way that we  by the management of our economy  can  by injecting additional demand  manufacture additional job vacancies.,ThereEX isVBZ noDT wayNN thatIN wePRP byIN theDT managementNN ofIN ourPRP$ economyNN canMD byIN injectingVBG additionalJJ demandNN manufactureNN additionalJJ jobNN vacanciesNNS ,"root(ROOT-0, is-2) expl(is-2, There-1) neg(way-4, no-3) nsubj(is-2, way-4) mark(vacancies-25, that-5) nsubj(vacancies-25, we-6) punct(vacancies-25, ,-7) case(management-10, by-8) det(management-10, the-9) nmod:by(vacancies-25, management-10) case(economy-13, of-11) nmod:poss(economy-13, our-12) nmod:of(management-10, economy-13) punct(vacancies-25, ,-14) aux(vacancies-25, can-15) punct(vacancies-25, ,-16) mark(injecting-18, by-17) advcl(vacancies-25, injecting-18) amod(demand-20, additional-19) dobj(injecting-18, demand-20) punct(vacancies-25, ,-21) compound(vacancies-25, manufacture-22) amod(vacancies-25, additional-23) compound(vacancies-25, job-24) ccomp(way-4, vacancies-25) punct(is-2, .-26)",0,0,0,"root(ROOT, is) expl(is, There) neg(way, no) nsbj(is, way) mark(vacancies, that) nsbj(vacancies, we) pnct(vacancies, ,) case(management, by) det(management, the) nmod:by(vacancies, management) case(economy, of) nmod:poss(economy, or) nmod:of(management, economy) pnct(vacancies, ,) ax(vacancies, can) pnct(vacancies, ,) mark(injecting, by) advcl(vacancies, injecting) amod(demand, additional) dobj(injecting, demand) pnct(vacancies, ,) compond(vacancies, manfactre) amod(vacancies, additional) compond(vacancies, job) ccomp(way, vacancies) pnct(is, .)","root(,VBZ) expl(VBZ,EX) neg(NN,DT) nsbj(VBZ,NN) mark(NNS,IN) nsbj(NNS,PRP) pnct(NNS,NNS) case(NN,IN) det(NN,DT) nmod:by(NNS,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(NNS,NNS) ax(NNS,MD) pnct(NNS,NNS) mark(VBG,IN) advcl(NNS,VBG) amod(NN,JJ) dobj(VBG,NN) pnct(NNS,NNS) compond(NNS,NN) amod(NNS,JJ) compond(NNS,NN) ccomp(NN,NNS) pnct(VBZ,VBZ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
They have to be manufactured by the skill and success of both sides of British industry.,TheyPRP haveVBP toTO beVB manufacturedVBN byIN theDT skillNN andCC successNN ofIN bothDT sidesNNS ofIN BritishJJ industryNN ,"root(ROOT-0, have-2) nsubj(have-2, They-1) mark(manufactured-5, to-3) auxpass(manufactured-5, be-4) xcomp(have-2, manufactured-5) case(skill-8, by-6) det(skill-8, the-7) nmod:agent(manufactured-5, skill-8) cc(skill-8, and-9) nmod:agent(manufactured-5, success-10) conj:and(skill-8, success-10) case(sides-13, of-11) det(sides-13, both-12) nmod:of(skill-8, sides-13) case(industry-16, of-14) amod(industry-16, British-15) nmod:of(sides-13, industry-16) punct(have-2, .-17)",0,0,1,"root(ROOT, have) nsbj(have, They) mark(manfactred, to) axpass(manfactred, be) xcomp(have, manfactred) case(skill, by) det(skill, the) nmod:agent(manfactred, skill) cc(skill, and) nmod:agent(manfactred, sccess) conj:and(skill, sccess) case(sides, of) det(sides, both) nmod:of(skill, sides) case(indstry, of) amod(indstry, British) nmod:of(sides, indstry) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) mark(VBN,TO) axpass(VBN,VB) xcomp(VBP,VBN) case(NN,IN) det(NN,DT) nmod:agent(VBN,NN) cc(NN,CC) nmod:agent(VBN,NN) conj:and(NN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Has my right hon. and learned Friend made any systematic studies or analyses of the probable effects of import controls on the economy?,HasNNP myPRP$ rightJJ honNN andCC learnedVBD FriendNNP madeVBD anyDT systematicJJ studiesNNS orCC analysesNNS ofIN theDT probableJJ effectsNNS ofIN importNN controlsNNS onIN theDT economyNN ,"root(ROOT-0, Has-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) nsubj(Has-1, hon.-4) cc(hon.-4, and-5) dep(made-8, learned-6) nsubj(made-8, Friend-7) nsubj(Has-1, made-8) conj:and(hon.-4, made-8) det(studies-11, any-9) amod(studies-11, systematic-10) dobj(made-8, studies-11) cc(studies-11, or-12) dobj(made-8, analyses-13) conj:or(studies-11, analyses-13) case(effects-17, of-14) det(effects-17, the-15) amod(effects-17, probable-16) nmod:of(analyses-13, effects-17) case(controls-20, of-18) compound(controls-20, import-19) nmod:of(effects-17, controls-20) case(economy-23, on-21) det(economy-23, the-22) nmod:on(effects-17, economy-23) punct(Has-1, ?-24)",0,1,1,"root(ROOT, Has) nmod:poss(hon., my) amod(hon., right) nsbj(Has, hon.) cc(hon., and) dep(made, learned) nsbj(made, Friend) nsbj(Has, made) conj:and(hon., made) det(stdies, any) amod(stdies, systematic) dobj(made, stdies) cc(stdies, or) dobj(made, analyses) conj:or(stdies, analyses) case(effects, of) det(effects, the) amod(effects, probable) nmod:of(analyses, effects) case(controls, of) compond(controls, import) nmod:of(effects, controls) case(economy, on) det(economy, the) nmod:on(effects, economy) pnct(Has, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(PRP$,JJ) nsbj(NNP,NNP) cc(NNP,CC) dep(VBD,VBD) nsbj(VBD,NNP) nsbj(NNP,VBD) conj:and(VBD,VBD) det(NNS,DT) amod(NNS,JJ) dobj(VBD,NNS) cc(NNS,CC) dobj(VBD,NNS) conj:or(NNS,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(NNS,NNS) case(NNS,IN) compond(NNS,NN) nmod:of(NNS,NNS) case(NN,IN) det(NN,DT) nmod:on(NNS,NN) pnct(NNP,NNP)","[Friend, learned, studies, made, analyses, Has]","[Friend, learned, studies, made, analyses, Has]",5,"[Friend, learned, studies, made, analyses, Has]","[Friend, learned, studies, made, analyses, Has]",NNP_Friend VBD_learned NNS_studies VBN_made NNS_analyses NNP_Has ,"[Friend, learned, studies, made, analyses, Has]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The question of import controls is a matter that has been frequently canvassed by my hon. Friend and others.,TheDT questionNN ofIN importNN controlsNNS isVBZ aDT matterNN thatWDT hasVBZ beenVBN frequentlyRB canvassedVBN byIN myPRP$ honNN FriendNNP andCC othersNNS ,"root(ROOT-0, matter-8) det(question-2, The-1) nsubj(matter-8, question-2) case(controls-5, of-3) compound(controls-5, import-4) nmod:of(question-2, controls-5) cop(matter-8, is-6) det(matter-8, a-7) nsubjpass(canvassed-13, that-9) aux(canvassed-13, has-10) auxpass(canvassed-13, been-11) advmod(canvassed-13, frequently-12) acl:relcl(matter-8, canvassed-13) case(Friend-17, by-14) nmod:poss(Friend-17, my-15) compound(Friend-17, hon.-16) nmod:agent(canvassed-13, Friend-17) cc(Friend-17, and-18) nmod:agent(canvassed-13, others-19) conj:and(Friend-17, others-19) punct(matter-8, .-20)",0,1,0,"root(ROOT, matter) det(qestion, The) nsbj(matter, qestion) case(controls, of) compond(controls, import) nmod:of(qestion, controls) cop(matter, is) det(matter, a) nsbjpass(canvassed, that) ax(canvassed, has) axpass(canvassed, been) advmod(canvassed, freqently) acl:relcl(matter, canvassed) case(Friend, by) nmod:poss(Friend, my) compond(Friend, hon.) nmod:agent(canvassed, Friend) cc(Friend, and) nmod:agent(canvassed, others) conj:and(Friend, others) pnct(matter, .)","root(,NN) det(NN,DT) nsbj(NN,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) cop(NN,VBZ) det(NN,DT) nsbjpass(VBN,WDT) ax(VBN,VBZ) axpass(VBN,VBN) advmod(VBN,RB) acl:relcl(NN,VBN) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:agent(VBN,NNP) cc(NNP,CC) nmod:agent(VBN,NNS) conj:and(NNP,NNS) pnct(NN,NN)","[canvassed, Friend, matter, and, my, others, that, frequently]","[canvassed, Friend, matter, and, my, others, that, frequently]",6,"[canvassed, Friend, matter, and, my, others, that, frequently]","[canvassed, Friend, matter, and, my, others, that, frequently]",VBN_canvassed NNP_Friend NN_matter CC_and PRP$_my NNS_others IN_that RB_frequently ,"[canvassed, Friend, matter, and, my, others, that, frequently]","[canvassed, Friend, matter, and, my, others, that, frequently]",VBN_canvassed NNP_Friend NN_matter CC_and PRP$_my NNS_others IN_that RB_frequently ,"[canvassed, Friend, matter, and, my, others, that, frequently]",VBN_canvassed NNP_Friend NN_matter CC_and PRP$_my NNS_others IN_that RB_frequently ,"[canvassed, Friend, matter, and, my, others, that, frequently]",VBN_canvassed NNP_Friend NN_matter CC_and PRP$_my NNS_others IN_that RB_frequently ,-3,0,2,0,0,0,2,0,0,0
The conclusion arrived at by successive Administrations if one addresses one's mind to it as a central recommendation is that it is likely to be counter productive  to lead to retaliatory action and that for Britain  with such a large dependence on international trade  it is least likely to be a successful prescription.,TheDT conclusionNN arrivedVBN atIN byIN successiveJJ AdministrationsNNS ifIN oneCD addressesVBZ oneCD 'sPOS mindNN toTO itPRP asIN aDT centralJJ recommendationNN isVBZ thatIN itPRP isVBZ likelyJJ toTO beVB counterRB productiveJJ toTO leadVB toTO retaliatoryJJ actionNN andCC thatIN forIN BritainNNP withIN suchPDT aDT largeJJ dependenceNN onIN internationalJJ tradeNN itPRP isVBZ leastRBR likelyJJ toTO beVB aDT successfulJJ prescriptionNN ,"root(ROOT-0, arrived-3) det(conclusion-2, The-1) nsubj(arrived-3, conclusion-2) case(Administrations-7, at-4) case(Administrations-7, by-5) amod(Administrations-7, successive-6) nmod:by(arrived-3, Administrations-7) advmod(arrived-3, if-8) nummod(addresses-10, one-9) dep(if-8, addresses-10) nmod:poss(mind-13, one-11) case(one-11, 's-12) nsubj(is-20, mind-13) case(it-15, to-14) nmod:to(mind-13, it-15) case(recommendation-19, as-16) det(recommendation-19, a-17) amod(recommendation-19, central-18) nmod:as(mind-13, recommendation-19) acl:relcl(addresses-10, is-20) mark(likely-24, that-21) nsubj(likely-24, it-22) cop(likely-24, is-23) ccomp(is-20, likely-24) mark(productive-28, to-25) cop(productive-28, be-26) amod(productive-28, counter-27) xcomp(likely-24, productive-28) punct(likely-24, ,-29) mark(lead-31, to-30) xcomp(likely-24, lead-31) case(action-34, to-32) amod(action-34, retaliatory-33) nmod:to(lead-31, action-34) cc(lead-31, and-35) mark(likely-52, that-36) case(Britain-38, for-37) nmod:for(likely-52, Britain-38) punct(Britain-38, ,-39) case(dependence-44, with-40) det:predet(dependence-44, such-41) det(dependence-44, a-42) amod(dependence-44, large-43) nmod:with(Britain-38, dependence-44) case(trade-47, on-45) amod(trade-47, international-46) nmod:on(dependence-44, trade-47) punct(Britain-38, ,-48) nsubj(likely-52, it-49) cop(likely-52, is-50) advmod(likely-52, least-51) xcomp(likely-24, likely-52) conj:and(lead-31, likely-52) mark(prescription-57, to-53) cop(prescription-57, be-54) det(prescription-57, a-55) amod(prescription-57, successful-56) xcomp(likely-52, prescription-57) punct(arrived-3, .-58)",0,0,0,"root(ROOT, arrived) det(conclsion, The) nsbj(arrived, conclsion) case(Administrations, at) case(Administrations, by) amod(Administrations, sccessive) nmod:by(arrived, Administrations) advmod(arrived, if) nmmod(addresses, one) dep(if, addresses) nmod:poss(mind, one) ""case(one, s)"", nsbj(is, mind) case(it, to) nmod:to(mind, it) case(recommendation, as) det(recommendation, a) amod(recommendation, central) nmod:as(mind, recommendation) acl:relcl(addresses, is) mark(likely, that) nsbj(likely, it) cop(likely, is) ccomp(is, likely) mark(prodctive, to) cop(prodctive, be) amod(prodctive, conter) xcomp(likely, prodctive) pnct(likely, ,) mark(lead, to) xcomp(likely, lead) case(action, to) amod(action, retaliatory) nmod:to(lead, action) cc(lead, and) mark(likely, that) case(Britain, for) nmod:for(likely, Britain) pnct(Britain, ,) case(dependence, with) det:predet(dependence, sch) det(dependence, a) amod(dependence, large) nmod:with(Britain, dependence) case(trade, on) amod(trade, international) nmod:on(dependence, trade) pnct(Britain, ,) nsbj(likely, it) cop(likely, is) advmod(likely, least) xcomp(likely, likely) conj:and(lead, likely) mark(prescription, to) cop(prescription, be) det(prescription, a) amod(prescription, sccessfl) xcomp(likely, prescription) pnct(arrived, .)","root(,VBN) det(NN,DT) nsbj(VBN,NN) case(NNS,IN) case(NNS,IN) amod(NNS,JJ) nmod:by(VBN,NNS) advmod(VBN,IN) nmmod(VBZ,CD) dep(IN,VBZ) nmod:poss(NN,CD) case(CD,POS) nsbj(VBZ,NN) case(PRP,TO) nmod:to(NN,PRP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:as(NN,NN) acl:relcl(VBZ,VBZ) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) ccomp(VBZ,JJ) mark(JJ,TO) cop(JJ,VB) amod(JJ,RB) xcomp(JJ,JJ) pnct(JJ,JJ) mark(VB,TO) xcomp(JJ,VB) case(NN,TO) amod(NN,JJ) nmod:to(VB,NN) cc(VB,CC) mark(JJ,IN) case(NNP,IN) nmod:for(JJ,NNP) pnct(NNP,NNP) case(NN,IN) det:predet(NN,PDT) det(NN,DT) amod(NN,JJ) nmod:with(NNP,NN) case(NN,IN) amod(NN,JJ) nmod:on(NN,NN) pnct(NNP,NNP) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RBR) xcomp(JJ,JJ) conj:and(VB,JJ) mark(NN,TO) cop(NN,VB) det(NN,DT) amod(NN,JJ) xcomp(JJ,NN) pnct(VBN,VBN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Without the consequences of the substantial reductions in personal taxation  especially at middle and higher levels  morale in industry would be a great deal worse than it is today.,WithoutIN theDT consequencesNNS ofIN theDT substantialJJ reductionsNNS inIN personalJJ taxationNN especiallyRB atIN middleJJ andCC higherJJR levelsNNS moraleRBR inIN industryNN wouldMD beVB aDT greatJJ dealNN worseJJR thanIN itPRP isVBZ todayNN ,"root(ROOT-0, deal-26) case(consequences-3, Without-1) det(consequences-3, the-2) nmod:without(deal-26, consequences-3) case(reductions-7, of-4) det(reductions-7, the-5) amod(reductions-7, substantial-6) nmod:of(consequences-3, reductions-7) case(taxation-10, in-8) amod(taxation-10, personal-9) nmod:in(reductions-7, taxation-10) punct(deal-26, ,-11) advmod(middle-14, especially-12) case(middle-14, at-13) advcl:at(deal-26, middle-14) cc(middle-14, and-15) amod(levels-17, higher-16) conj:and(middle-14, levels-17) advcl:at(deal-26, levels-17) punct(deal-26, ,-18) nsubj(deal-26, morale-19) case(industry-21, in-20) nmod:in(morale-19, industry-21) aux(deal-26, would-22) cop(deal-26, be-23) det(deal-26, a-24) amod(deal-26, great-25) amod(deal-26, worse-27) mark(today-31, than-28) nsubj(today-31, it-29) cop(today-31, is-30) advcl(worse-27, today-31) punct(deal-26, .-32)",0,0,0,"root(ROOT, deal) case(conseqences, Withot) det(conseqences, the) nmod:withot(deal, conseqences) case(redctions, of) det(redctions, the) amod(redctions, sbstantial) nmod:of(conseqences, redctions) case(taxation, in) amod(taxation, personal) nmod:in(redctions, taxation) pnct(deal, ,) advmod(middle, especially) case(middle, at) advcl:at(deal, middle) cc(middle, and) amod(levels, higher) conj:and(middle, levels) advcl:at(deal, levels) pnct(deal, ,) nsbj(deal, morale) case(indstry, in) nmod:in(morale, indstry) ax(deal, wold) cop(deal, be) det(deal, a) amod(deal, great) amod(deal, worse) mark(today, than) nsbj(today, it) cop(today, is) advcl(worse, today) pnct(deal, .)","root(,NN) case(NNS,IN) det(NNS,DT) nmod:withot(NN,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(NNS,NNS) case(NN,IN) amod(NN,JJ) nmod:in(NNS,NN) pnct(NN,NN) advmod(JJ,RB) case(JJ,IN) advcl:at(NN,JJ) cc(JJ,CC) amod(NNS,JJR) conj:and(JJ,NNS) advcl:at(NN,NNS) pnct(NN,NN) nsbj(NN,RBR) case(NN,IN) nmod:in(RBR,NN) ax(NN,MD) cop(NN,VB) det(NN,DT) amod(NN,JJ) amod(NN,JJR) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) advcl(JJR,NN) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my right hon. and learned Friend accept that there is a danger of economic progress being impeded by an exchange rate that is endangering many export orders and bringing about a position where we are losing our domestic market share?,DoesNNP myPRP$ rightNN honNN andCC learnedVBD FriendNNP acceptVBD thatIN thereEX isVBZ aDT dangerNN ofIN economicJJ progressNN beingVBG impededVBN byIN anDT exchangeNN rateNN thatWDT isVBZ endangeringVBG manyJJ exportNN ordersNNS andCC bringingVBG aboutIN aDT positionNN whereWRB wePRP areVBP losingVBG ourPRP$ domesticJJ marketNN shareNN ,"root(ROOT-0, Does-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) dobj(Does-1, hon.-4) cc(Does-1, and-5) conj:and(Does-1, learned-6) nsubj(accept-8, Friend-7) ccomp(learned-6, accept-8) mark(is-11, that-9) expl(is-11, there-10) ccomp(accept-8, is-11) det(danger-13, a-12) nsubjpass(impeded-18, danger-13) case(progress-16, of-14) amod(progress-16, economic-15) nmod:of(danger-13, progress-16) auxpass(impeded-18, being-17) ccomp(is-11, impeded-18) case(rate-22, by-19) det(rate-22, an-20) compound(rate-22, exchange-21) nmod:agent(impeded-18, rate-22) nsubj(endangering-25, that-23) nsubj(bringing-30, that-23) aux(endangering-25, is-24) acl:relcl(rate-22, endangering-25) amod(orders-28, many-26) compound(orders-28, export-27) dobj(endangering-25, orders-28) cc(endangering-25, and-29) acl:relcl(rate-22, bringing-30) conj:and(endangering-25, bringing-30) case(position-33, about-31) det(position-33, a-32) nmod:about(bringing-30, position-33) advmod(losing-37, where-34) nsubj(losing-37, we-35) aux(losing-37, are-36) acl:relcl(position-33, losing-37) nmod:poss(share-41, our-38) amod(share-41, domestic-39) compound(share-41, market-40) dobj(losing-37, share-41) punct(Does-1, ?-42)",0,1,1,"root(ROOT, Does) nmod:poss(hon., my) amod(hon., right) dobj(Does, hon.) cc(Does, and) conj:and(Does, learned) nsbj(accept, Friend) ccomp(learned, accept) mark(is, that) expl(is, there) ccomp(accept, is) det(danger, a) nsbjpass(impeded, danger) case(progress, of) amod(progress, economic) nmod:of(danger, progress) axpass(impeded, being) ccomp(is, impeded) case(rate, by) det(rate, an) compond(rate, exchange) nmod:agent(impeded, rate) nsbj(endangering, that) nsbj(bringing, that) ax(endangering, is) acl:relcl(rate, endangering) amod(orders, many) compond(orders, export) dobj(endangering, orders) cc(endangering, and) acl:relcl(rate, bringing) conj:and(endangering, bringing) case(position, abot) det(position, a) nmod:abot(bringing, position) advmod(losing, where) nsbj(losing, we) ax(losing, are) acl:relcl(position, losing) nmod:poss(share, or) amod(share, domestic) compond(share, market) dobj(losing, share) pnct(Does, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(PRP$,NN) dobj(NNP,NNP) cc(NNP,CC) conj:and(NNP,VBD) nsbj(VBD,NNP) ccomp(VBD,VBD) mark(VBZ,WDT) expl(VBZ,EX) ccomp(VBD,VBZ) det(NN,DT) nsbjpass(VBN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) axpass(VBN,VBG) ccomp(VBZ,VBN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:agent(VBN,NN) nsbj(VBG,WDT) nsbj(VBG,WDT) ax(VBG,VBZ) acl:relcl(NN,VBG) amod(NNS,JJ) compond(NNS,NN) dobj(VBG,NNS) cc(VBG,CC) acl:relcl(NN,VBG) conj:and(VBG,VBG) case(NN,IN) det(NN,DT) nmod:abot(VBG,NN) advmod(VBG,WRB) nsbj(VBG,PRP) ax(VBG,VBP) acl:relcl(NN,VBG) nmod:poss(NN,PRP$) amod(NN,JJ) compond(NN,NN) dobj(VBG,NN) pnct(NNP,NNP)","[Friend, learned, is, accept]","[Friend, learned, is, accept]",9,"[Friend, learned, is, accept]","[Friend, learned, is, accept]",NNP_Friend VBD_learned VBZ_is VBD_accept ,"[Friend, learned, is, accept]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The exchange rate can have a number of effects on the competitiveness of our goods and services.,TheDT exchangeNN rateNN canMD haveVB aDT numberNN ofIN effectsNNS onIN theDT competitivenessNN ofIN ourPRP$ goodsNNS andCC servicesNNS ,"root(ROOT-0, have-5) det(rate-3, The-1) compound(rate-3, exchange-2) nsubj(have-5, rate-3) aux(have-5, can-4) det(number-7, a-6) dobj(have-5, number-7) case(effects-9, of-8) nmod:of(number-7, effects-9) case(competitiveness-12, on-10) det(competitiveness-12, the-11) nmod:on(effects-9, competitiveness-12) case(goods-15, of-13) nmod:poss(goods-15, our-14) nmod:of(competitiveness-12, goods-15) cc(goods-15, and-16) nmod:of(competitiveness-12, services-17) conj:and(goods-15, services-17) punct(have-5, .-18)",0,1,0,"root(ROOT, have) det(rate, The) compond(rate, exchange) nsbj(have, rate) ax(have, can) det(nmber, a) dobj(have, nmber) case(effects, of) nmod:of(nmber, effects) case(competitiveness, on) det(competitiveness, the) nmod:on(effects, competitiveness) case(goods, of) nmod:poss(goods, or) nmod:of(competitiveness, goods) cc(goods, and) nmod:of(competitiveness, services) conj:and(goods, services) pnct(have, .)","root(,VB) det(NN,DT) compond(NN,NN) nsbj(VB,NN) ax(VB,MD) det(NN,DT) dobj(VB,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) nmod:on(NNS,NN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:of(NN,NNS) cc(NNS,CC) nmod:of(NN,NNS) conj:and(NNS,NNS) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The matter raised by my hon. Friend is one of the factors  but not the only one  that justifies our decision to abolish the remaining aspects of exchange controls.,TheDT matterNN raisedVBN byIN myPRP$ honNN FriendNNP isVBZ oneCD ofIN theDT factorsNNS butCC notRB theDT onlyJJ oneNN thatWDT justifiesVBZ ourPRP$ decisionNN toTO abolishVB theDT remainingVBG aspectsNNS ofIN exchangeNN controlsNNS ,"root(ROOT-0, one-9) det(matter-2, The-1) nsubj(one-9, matter-2) acl(matter-2, raised-3) case(Friend-7, by-4) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) nmod:by(raised-3, Friend-7) cop(one-9, is-8) case(factors-12, of-10) det(factors-12, the-11) nmod:of(one-9, factors-12) punct(one-9, ,-13) cc(one-9, but-14) neg(one-18, not-15) det(one-18, the-16) amod(one-18, only-17) conj:but(one-9, one-18) punct(one-18, ,-19) nsubj(justifies-21, that-20) acl:relcl(one-18, justifies-21) nmod:poss(decision-23, our-22) dobj(justifies-21, decision-23) mark(abolish-25, to-24) acl(decision-23, abolish-25) det(aspects-28, the-26) amod(aspects-28, remaining-27) dobj(abolish-25, aspects-28) case(controls-31, of-29) compound(controls-31, exchange-30) nmod:of(aspects-28, controls-31) punct(one-9, .-32)",0,0,0,"root(ROOT, one) det(matter, The) nsbj(one, matter) acl(matter, raised) case(Friend, by) nmod:poss(Friend, my) compond(Friend, hon.) nmod:by(raised, Friend) cop(one, is) case(factors, of) det(factors, the) nmod:of(one, factors) pnct(one, ,) cc(one, bt) neg(one, not) det(one, the) amod(one, only) conj:bt(one, one) pnct(one, ,) nsbj(jstifies, that) acl:relcl(one, jstifies) nmod:poss(decision, or) dobj(jstifies, decision) mark(abolish, to) acl(decision, abolish) det(aspects, the) amod(aspects, remaining) dobj(abolish, aspects) case(controls, of) compond(controls, exchange) nmod:of(aspects, controls) pnct(one, .)","root(,NN) det(NN,DT) nsbj(NN,NN) acl(NN,VBN) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:by(VBN,NNP) cop(NN,VBZ) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(NN,NN) cc(NN,CC) neg(NN,RB) det(NN,DT) amod(NN,JJ) conj:bt(NN,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) nmod:poss(NN,PRP$) dobj(VBZ,NN) mark(VB,TO) acl(NN,VB) det(NNS,DT) amod(NNS,VBG) dobj(VB,NNS) case(NNS,IN) compond(NNS,NN) nmod:of(NNS,NNS) pnct(NN,NN)","[Friend, raised, matter, my]","[Friend, raised, matter, my]",10,"[Friend, raised, matter, my]","[Friend, raised, matter, my]",NNP_Friend VBN_raised NN_matter PRP$_my ,"[Friend, raised, matter, my]","[Friend, raised, matter, my]",NNP_Friend VBN_raised NN_matter PRP$_my ,"[Friend, raised, matter, my]",NNP_Friend VBN_raised NN_matter PRP$_my ,"[Friend, raised, matter, my]",NNP_Friend VBN_raised NN_matter PRP$_my ,-3,0,2,0,0,0,0,0,0,0
Why are we to face three years of unparalleled austerity when these are the first three years in British history when we are completely independent in terms of our major source of energy and when the increase in oil prices will bring us immense benefits  both in revenue and the balance of payments  which none of our competitors will enjoy?,WhyWRB areVBP wePRP toTO faceVB threeCD yearsNNS ofIN unparalleledJJ austerityNN whenWRB theseDT areVBP theDT firstJJ threeCD yearsNNS inIN BritishJJ historyNN whenWRB wePRP areVBP completelyRB independentJJ inIN termsNNS ofIN ourPRP$ majorJJ sourceNN ofIN energyNN andCC whenWRB theDT increaseNN inIN oilNN pricesNNS willMD bringVB usPRP immenseJJ benefitsNNS bothDT inIN revenueNN andCC theDT balanceNN ofIN paymentsNNS whichWDT noneNN ofIN ourPRP$ competitorsNNS willMD enjoyVB ,"root(ROOT-0, face-5) advmod(face-5, Why-1) aux(face-5, are-2) nsubj(face-5, we-3) mark(face-5, to-4) nummod(years-7, three-6) dobj(face-5, years-7) case(austerity-10, of-8) amod(austerity-10, unparalleled-9) nmod:of(years-7, austerity-10) advmod(years-17, when-11) nsubj(years-17, these-12) cop(years-17, are-13) det(years-17, the-14) amod(years-17, first-15) nummod(years-17, three-16) advcl(face-5, years-17) case(history-20, in-18) amod(history-20, British-19) nmod:in(years-17, history-20) advmod(independent-25, when-21) nsubj(independent-25, we-22) cop(independent-25, are-23) advmod(independent-25, completely-24) advcl(years-17, independent-25) case(terms-27, in-26) nmod:in(independent-25, terms-27) case(source-31, of-28) nmod:poss(source-31, our-29) amod(source-31, major-30) nmod:of(terms-27, source-31) case(energy-33, of-32) nmod:of(source-31, energy-33) cc(energy-33, and-34) advmod(bring-42, when-35) det(increase-37, the-36) nsubj(bring-42, increase-37) case(prices-40, in-38) compound(prices-40, oil-39) nmod:in(increase-37, prices-40) aux(bring-42, will-41) nmod:of(source-31, bring-42) conj:and(energy-33, bring-42) iobj(bring-42, us-43) amod(benefits-45, immense-44) dobj(bring-42, benefits-45) punct(bring-42, ,-46) cc:preconj(revenue-49, both-47) case(revenue-49, in-48) root(,-46, revenue-49) cc(revenue-49, and-50) det(balance-52, the-51) root(,-46, balance-52) conj:and(revenue-49, balance-52) case(payments-54, of-53) nmod:of(balance-52, payments-54) punct(payments-54, ,-55) dobj(enjoy-62, which-56) nsubj(enjoy-62, none-57) case(competitors-60, of-58) nmod:poss(competitors-60, our-59) nmod:of(none-57, competitors-60) aux(enjoy-62, will-61) acl:relcl(payments-54, enjoy-62) punct(revenue-49, ?-63)",0,0,0,"root(ROOT, face) advmod(face, Why) ax(face, are) nsbj(face, we) mark(face, to) nmmod(years, three) dobj(face, years) case(asterity, of) amod(asterity, nparalleled) nmod:of(years, asterity) advmod(years, when) nsbj(years, these) cop(years, are) det(years, the) amod(years, first) nmmod(years, three) advcl(face, years) case(history, in) amod(history, British) nmod:in(years, history) advmod(independent, when) nsbj(independent, we) cop(independent, are) advmod(independent, completely) advcl(years, independent) case(terms, in) nmod:in(independent, terms) case(sorce, of) nmod:poss(sorce, or) amod(sorce, major) nmod:of(terms, sorce) case(energy, of) nmod:of(sorce, energy) cc(energy, and) advmod(bring, when) det(increase, the) nsbj(bring, increase) case(prices, in) compond(prices, oil) nmod:in(increase, prices) ax(bring, will) nmod:of(sorce, bring) conj:and(energy, bring) iobj(bring, s) amod(benefits, immense) dobj(bring, benefits) pnct(bring, ,) cc:preconj(revene, both) case(revene, in) root(,, revene) cc(revene, and) det(balance, the) root(,, balance) conj:and(revene, balance) case(payments, of) nmod:of(balance, payments) pnct(payments, ,) dobj(enjoy, which) nsbj(enjoy, none) case(competitors, of) nmod:poss(competitors, or) nmod:of(none, competitors) ax(enjoy, will) acl:relcl(payments, enjoy) pnct(revene, ?)","root(,VB) advmod(VB,WRB) ax(VB,VBP) nsbj(VB,PRP) mark(VB,TO) nmmod(NNS,CD) dobj(VB,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) advmod(NNS,WRB) nsbj(NNS,DT) cop(NNS,VBP) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) advcl(VB,NNS) case(NN,IN) amod(NN,JJ) nmod:in(NNS,NN) advmod(JJ,WRB) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RB) advcl(NNS,JJ) case(NNS,IN) nmod:in(JJ,NNS) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:of(NNS,NN) case(NN,IN) nmod:of(NN,NN) cc(NN,CC) advmod(VB,WRB) det(NN,DT) nsbj(VB,NN) case(NNS,IN) compond(NNS,NN) nmod:in(NN,NNS) ax(VB,MD) nmod:of(NN,VB) conj:and(NN,VB) iobj(VB,PRP) amod(NNS,JJ) dobj(VB,NNS) pnct(VB,VB) cc:preconj(NN,DT) case(NN,IN) root(ININNN) cc(NN,CC) det(NN,DT) root(DTDTNN) conj:and(NN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(NNS,NNS) dobj(VB,WDT) nsbj(VB,NN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:of(NN,NNS) ax(VB,MD) acl:relcl(NNS,VB) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
He must know that the increase in oil prices world wide although it has some effect on us in a helpful direction  for the reasons that I have already stated retards and depresses the market  in which we have to sell as much as any other country.,HePRP 630CD mustMD knowVB thatIN theDT increaseNN inIN oilNN pricesNNS worldNN wideJJ althoughIN itPRP hasVBZ someDT effectNN onIN usPRP inIN aDT helpfulJJ directionNN forIN theDT reasonsNNS thatIN IPRP haveVBP alreadyRB statedVBN retardsNNS andCC depressesVBZ theDT marketNN inIN whichWDT wePRP haveVBP toTO sellVB asRB muchRB asIN anyDT otherJJ countryNN ,"root(ROOT-0, know-4) nsubj(know-4, He-1) nsubj(know-4, 630-2) aux(know-4, must-3) dobj(know-4, that-5) det(increase-7, the-6) dep(that-5, increase-7) case(wide-12, in-8) compound(wide-12, oil-9) compound(wide-12, prices-10) compound(wide-12, world-11) nmod:in(increase-7, wide-12) mark(has-15, although-13) nsubj(has-15, it-14) advcl(increase-7, has-15) det(effect-17, some-16) dobj(has-15, effect-17) case(us-19, on-18) nmod:on(effect-17, us-19) case(direction-23, in-20) det(direction-23, a-21) amod(direction-23, helpful-22) nmod:in(has-15, direction-23) punct(has-15, ,-24) case(reasons-27, for-25) det(reasons-27, the-26) nmod:for(has-15, reasons-27) mark(stated-32, that-28) nsubj(stated-32, I-29) nsubj(depresses-35, I-29) aux(stated-32, have-30) advmod(stated-32, already-31) ccomp(reasons-27, stated-32) dobj(stated-32, retards-33) cc(stated-32, and-34) ccomp(reasons-27, depresses-35) conj:and(stated-32, depresses-35) det(market-37, the-36) dobj(depresses-35, market-37) punct(stated-32, ,-38) case(which-40, in-39) nmod:in(have-42, which-40) nsubj(have-42, we-41) ccomp(stated-32, have-42) mark(sell-44, to-43) xcomp(have-42, sell-44) advmod(much-46, as-45) dobj(sell-44, much-46) case(country-50, as-47) det(country-50, any-48) amod(country-50, other-49) nmod:as(much-46, country-50) punct(know-4, .-51)",0,0,0,"root(ROOT, know) nsbj(know, He) nsbj(know, 630) ax(know, mst) dobj(know, that) det(increase, the) dep(that, increase) case(wide, in) compond(wide, oil) compond(wide, prices) compond(wide, world) nmod:in(increase, wide) mark(has, althogh) nsbj(has, it) advcl(increase, has) det(effect, some) dobj(has, effect) case(s, on) nmod:on(effect, s) case(direction, in) det(direction, a) amod(direction, helpfl) nmod:in(has, direction) pnct(has, ,) case(reasons, for) det(reasons, the) nmod:for(has, reasons) mark(stated, that) nsbj(stated, I) nsbj(depresses, I) ax(stated, have) advmod(stated, already) ccomp(reasons, stated) dobj(stated, retards) cc(stated, and) ccomp(reasons, depresses) conj:and(stated, depresses) det(market, the) dobj(depresses, market) pnct(stated, ,) case(which, in) nmod:in(have, which) nsbj(have, we) ccomp(stated, have) mark(sell, to) xcomp(have, sell) advmod(mch, as) dobj(sell, mch) case(contry, as) det(contry, any) amod(contry, other) nmod:as(mch, contry) pnct(know, .)","root(,VB) nsbj(VB,PRP) nsbj(VB,CD) ax(VB,MD) dobj(VB,IN) det(NN,DT) dep(IN,NN) case(JJ,IN) compond(JJ,NN) compond(JJ,NNS) compond(JJ,NN) nmod:in(NN,JJ) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(NN,VBZ) det(NN,DT) dobj(VBZ,NN) case(PRP,IN) nmod:on(NN,PRP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VBZ,NN) pnct(VBZ,VBZ) case(NNS,IN) det(NNS,DT) nmod:for(VBZ,NNS) mark(VBN,IN) nsbj(VBN,PRP) nsbj(VBZ,PRP) ax(VBN,VBP) advmod(VBN,RB) ccomp(NNS,VBN) dobj(VBN,NNS) cc(VBN,CC) ccomp(NNS,VBZ) conj:and(VBN,VBZ) det(NN,DT) dobj(VBZ,NN) pnct(VBN,VBN) case(WDT,IN) nmod:in(VBP,WDT) nsbj(VBP,PRP) ccomp(VBN,VBP) mark(VB,TO) xcomp(VBP,VB) advmod(RB,IN) dobj(VB,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:as(RB,NN) pnct(VB,VB)","[know, ROOT, He, 630, that]","[know, ROOT, He, 630, that]",12,[ ],[ ],VB_know PRP_He CD_630 IN_that ,"[know, ROOT, He, 630, that]","[know, ROOT, He, 630, that]",VB_know PRP_He CD_630 IN_that ,"[know, ROOT, He, 630, that]",VB_know PRP_He CD_630 IN_that ,"[know, ROOT, He, 630, that]",VB_know PRP_He CD_630 IN_that ,-3,0,2,0,0,0,0,0,0,0
In the campaign that we fought at the last election we made it entirely clear to the country that we were facing economic conditions more serious than at any time since the end of the war.,InIN theDT campaignNN thatIN wePRP foughtVBD atIN theDT lastJJ electionNN wePRP madeVBD itPRP entirelyRB clearJJ toTO theDT countryNN thatIN wePRP wereVBD facingVBG economicJJ conditionsNNS moreRBR seriousJJ thanIN atIN anyDT timeNN sinceIN theDT endNN ofIN theDT warNN ,"root(ROOT-0, campaign-3) case(campaign-3, In-1) det(campaign-3, the-2) dobj(fought-6, that-4) nsubj(fought-6, we-5) acl:relcl(campaign-3, fought-6) case(election-10, at-7) det(election-10, the-8) amod(election-10, last-9) nmod:at(fought-6, election-10) nsubj(made-12, we-11) ccomp(fought-6, made-12) dobj(made-12, it-13) advmod(clear-15, entirely-14) xcomp(made-12, clear-15) case(country-18, to-16) det(country-18, the-17) nmod:to(clear-15, country-18) mark(facing-22, that-19) nsubj(facing-22, we-20) aux(facing-22, were-21) ccomp(clear-15, facing-22) amod(conditions-24, economic-23) dobj(facing-22, conditions-24) advmod(serious-26, more-25) amod(conditions-24, serious-26) case(time-30, than-27) case(time-30, at-28) det(time-30, any-29) nmod:at(serious-26, time-30) case(end-33, since-31) det(end-33, the-32) nmod:since(serious-26, end-33) case(war-36, of-34) det(war-36, the-35) nmod:of(end-33, war-36) punct(campaign-3, .-37)",0,0,0,"root(ROOT, campaign) case(campaign, In) det(campaign, the) dobj(foght, that) nsbj(foght, we) acl:relcl(campaign, foght) case(election, at) det(election, the) amod(election, last) nmod:at(foght, election) nsbj(made, we) ccomp(foght, made) dobj(made, it) advmod(clear, entirely) xcomp(made, clear) case(contry, to) det(contry, the) nmod:to(clear, contry) mark(facing, that) nsbj(facing, we) ax(facing, were) ccomp(clear, facing) amod(conditions, economic) dobj(facing, conditions) advmod(serios, more) amod(conditions, serios) case(time, than) case(time, at) det(time, any) nmod:at(serios, time) case(end, since) det(end, the) nmod:since(serios, end) case(war, of) det(war, the) nmod:of(end, war) pnct(campaign, .)","root(,NN) case(NN,IN) det(NN,DT) dobj(VBD,IN) nsbj(VBD,PRP) acl:relcl(NN,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:at(VBD,NN) nsbj(VBD,PRP) ccomp(VBD,VBD) dobj(VBD,PRP) advmod(JJ,RB) xcomp(VBD,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBD) ccomp(JJ,VBG) amod(NNS,JJ) dobj(VBG,NNS) advmod(JJ,RBR) amod(NNS,JJ) case(NN,IN) case(NN,IN) det(NN,DT) nmod:at(JJ,NN) case(NN,IN) det(NN,DT) nmod:since(JJ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for the Environment what representations he has received advocating a reform of the domestic rating system; and if he will make a statement.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN theDT EnvironmentNNP whatWP representationsVBZ hePRP hasVBZ receivedVBN advocatingVBG aDT reformNN ofIN theDT domesticJJ ratingNN systemNN ;: andCC ifIN hePRP willMD makeVB aDT statementNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Environment-8, for-6) det(Environment-8, the-7) nmod:for(asked-1, Environment-8) det(representations-10, what-9) dobj(received-13, representations-10) nsubj(received-13, he-11) aux(received-13, has-12) acl:relcl(Environment-8, received-13) xcomp(received-13, advocating-14) det(reform-16, a-15) dobj(advocating-14, reform-16) case(system-21, of-17) det(system-21, the-18) amod(system-21, domestic-19) compound(system-21, rating-20) nmod:of(reform-16, system-21) punct(asked-1, ;-22) cc(asked-1, and-23) mark(make-27, if-24) nsubj(make-27, he-25) aux(make-27, will-26) conj:and(asked-1, make-27) det(statement-29, a-28) dobj(make-27, statement-29) punct(asked-1, .-30)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Environment, for) det(Environment, the) nmod:for(asked, Environment) det(representations, what) dobj(received, representations) nsbj(received, he) ax(received, has) acl:relcl(Environment, received) xcomp(received, advocating) det(reform, a) dobj(advocating, reform) case(system, of) det(system, the) amod(system, domestic) compond(system, rating) nmod:of(reform, system) pnct(asked, ;) cc(asked, and) mark(make, if) nsbj(make, he) ax(make, will) conj:and(asked, make) det(statement, a) dobj(make, statement) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) det(NNP,DT) nmod:for(VBN,NNP) det(VBZ,WP) dobj(VBN,VBZ) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NNP,VBN) xcomp(VBN,VBG) det(NN,DT) dobj(VBG,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) pnct(VBN,:) cc(VBN,CC) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) conj:and(VBN,VB) det(NN,DT) dobj(VB,NN) pnct(VBN,VBN)","[Environment, he, make, received, he, State, and, statement, Secretary, representations, ROOT, asked, advocating]","[Environment, he, make, received, he, State, and, statement, Secretary, representations, ROOT, asked, advocating]",1,"[Environment, Secretary, ROOT, asked, State, and]","[Environment, Secretary, ROOT, asked, State, and]",NNP_Environment PRP_he VB_make VBN_received PRP_he NNP_State CC_and NN_statement NNP_Secretary VBZ_representations VBN_asked VBG_advocating ,"[Environment, he, make, received, he, State, and, statement, Secretary, representations, ROOT, asked, advocating]","[Environment, he, make, received, he, State, and, statement, Secretary, representations, ROOT, asked, advocating]",NNP_Environment PRP_he VB_make VBN_received PRP_he NNP_State CC_and NN_statement NNP_Secretary VBZ_representations VBN_asked VBG_advocating ,"[Environment, he, make, received, he, State, and, statement, Secretary, representations, ROOT, asked, advocating]",NNP_Environment PRP_he VB_make VBN_received PRP_he NNP_State CC_and NN_statement NNP_Secretary VBZ_representations VBN_asked VBG_advocating ,"[Environment, he, make, received, he, State, and, statement, Secretary, representations, ROOT, asked, advocating]",NNP_Environment PRP_he VB_make VBN_received PRP_he NNP_State CC_and NN_statement NNP_Secretary VBZ_representations VBN_asked VBG_advocating ,-3,0,2,0,0,0,0,0,0,0
I have received about 900 letters this year from individuals and local groups  plus a handful of letters from national organisations.,IPRP haveVBP receivedVBN aboutIN 900CD lettersNNS thisDT yearNN fromIN individualsNNS andCC localJJ groupsNNS plusCC aDT handfulNN ofIN lettersNNS fromIN nationalJJ organisationsNNS ,"root(ROOT-0, received-3) nsubj(received-3, I-1) aux(received-3, have-2) advmod(900-5, about-4) nummod(letters-6, 900-5) dobj(received-3, letters-6) det(year-8, this-7) nmod:tmod(received-3, year-8) case(individuals-10, from-9) nmod:from(received-3, individuals-10) cc(individuals-10, and-11) amod(groups-13, local-12) nmod:from(received-3, groups-13) conj:and(individuals-10, groups-13) punct(received-3, ,-14) cc(received-3, plus-15) det(handful-17, a-16) conj:plus(received-3, handful-17) case(letters-19, of-18) nmod:of(handful-17, letters-19) case(organisations-22, from-20) amod(organisations-22, national-21) nmod:from(handful-17, organisations-22) punct(received-3, .-23)",0,0,0,"root(ROOT, received) nsbj(received, I) ax(received, have) advmod(900, abot) nmmod(letters, 900) dobj(received, letters) det(year, this) nmod:tmod(received, year) case(individals, from) nmod:from(received, individals) cc(individals, and) amod(grops, local) nmod:from(received, grops) conj:and(individals, grops) pnct(received, ,) cc(received, pls) det(handfl, a) conj:pls(received, handfl) case(letters, of) nmod:of(handfl, letters) case(organisations, from) amod(organisations, national) nmod:from(handfl, organisations) pnct(received, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(CD,IN) nmmod(NNS,CD) dobj(VBN,NNS) det(NN,DT) nmod:tmod(VBN,NN) case(NNS,IN) nmod:from(VBN,NNS) cc(NNS,CC) amod(NNS,JJ) nmod:from(VBN,NNS) conj:and(NNS,NNS) pnct(VBN,VBN) cc(VBN,CC) det(NN,DT) conj:pls(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:from(NN,NNS) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We are reviewing all main options to domestic rates but  as we made clear in the manifesto  reduction of income tax must be a higher priority.,WePRP areVBP reviewingVBG allDT mainJJ optionsNNS toTO domesticJJ ratesNNS butCC asIN wePRP madeVBD clearJJ inIN theDT manifestoJJ reductionNN ofIN incomeNN taxNN mustMD beVB aDT higherJJR priorityNN ,"root(ROOT-0, reviewing-3) nsubj(reviewing-3, We-1) aux(reviewing-3, are-2) det(options-6, all-4) amod(options-6, main-5) dobj(reviewing-3, options-6) case(rates-9, to-7) amod(rates-9, domestic-8) nmod:to(reviewing-3, rates-9) cc(rates-9, but-10) punct(made-14, ,-11) mark(made-14, as-12) nsubj(made-14, we-13) nmod:to(reviewing-3, made-14) conj:but(rates-9, made-14) xcomp(made-14, clear-15) case(manifesto-18, in-16) det(manifesto-18, the-17) nmod:in(clear-15, manifesto-18) punct(made-14, ,-19) nsubj(priority-28, reduction-20) case(tax-23, of-21) compound(tax-23, income-22) nmod:of(reduction-20, tax-23) aux(priority-28, must-24) cop(priority-28, be-25) det(priority-28, a-26) amod(priority-28, higher-27) parataxis(made-14, priority-28) punct(reviewing-3, .-29)",0,0,0,"root(ROOT, reviewing) nsbj(reviewing, We) ax(reviewing, are) det(options, all) amod(options, main) dobj(reviewing, options) case(rates, to) amod(rates, domestic) nmod:to(reviewing, rates) cc(rates, bt) pnct(made, ,) mark(made, as) nsbj(made, we) nmod:to(reviewing, made) conj:bt(rates, made) xcomp(made, clear) case(manifesto, in) det(manifesto, the) nmod:in(clear, manifesto) pnct(made, ,) nsbj(priority, redction) case(tax, of) compond(tax, income) nmod:of(redction, tax) ax(priority, mst) cop(priority, be) det(priority, a) amod(priority, higher) parataxis(made, priority) pnct(reviewing, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) det(NNS,DT) amod(NNS,JJ) dobj(VBG,NNS) case(NNS,TO) amod(NNS,JJ) nmod:to(VBG,NNS) cc(NNS,CC) pnct(VBD,VBD) mark(VBD,IN) nsbj(VBD,PRP) nmod:to(VBG,VBD) conj:bt(NNS,VBD) xcomp(VBD,JJ) case(JJ,IN) det(JJ,DT) nmod:in(JJ,JJ) pnct(VBD,VBD) nsbj(NN,NN) case(NN,IN) compond(NN,NN) nmod:of(NN,NN) ax(NN,MD) cop(NN,VB) det(NN,DT) amod(NN,JJR) parataxis(VBD,NN) pnct(VBG,VBG)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will my right hon. Friend confirm that the Government intend to introduce legislation to reform the domestic rating system?,WillMD myPRP$ rightJJ honNN FriendNNP confirmNN thatIN theDT GovernmentNNP intendNN toTO introduceVB legislationNN toTO reformVB theDT domesticJJ ratingNN systemNN ,"root(ROOT-0, confirm-6) aux(confirm-6, Will-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(confirm-6, Friend-5) mark(intend-10, that-7) det(Government-9, the-8) nsubj(intend-10, Government-9) ccomp(confirm-6, intend-10) mark(introduce-12, to-11) xcomp(intend-10, introduce-12) dobj(introduce-12, legislation-13) mark(reform-15, to-14) advcl(introduce-12, reform-15) det(system-19, the-16) amod(system-19, domestic-17) compound(system-19, rating-18) dobj(reform-15, system-19) punct(confirm-6, ?-20)",0,1,0,"root(ROOT, confirm) ax(confirm, Will) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(confirm, Friend) mark(intend, that) det(Government, the) nsbj(intend, Government) ccomp(confirm, intend) mark(introdce, to) xcomp(intend, introdce) dobj(introdce, legislation) mark(reform, to) advcl(introdce, reform) det(system, the) amod(system, domestic) compond(system, rating) dobj(reform, system) pnct(confirm, ?)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) mark(NN,IN) det(NNP,DT) nsbj(NN,NNP) ccomp(NN,NN) mark(VB,TO) xcomp(NN,VB) dobj(VB,NN) mark(VB,TO) advcl(VB,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) pnct(NN,NN)","[right, Government, Friend, my, introduce, intend, confirm, ROOT]","[Friend, my, introduce, ROOT, confirm, intend, Government]",3,"[confirm, intend, Government, introduce]","[confirm, intend, Government, introduce]",NNP_Friend PRP$_my VB_introduce NN_confirm NN_intend NNP_Government ,"[Friend, my, introduce, ROOT, confirm, intend, Government]","[Friend, my, introduce, ROOT, confirm, intend, Government]",NNP_Friend PRP$_my VB_introduce NN_confirm NN_intend NNP_Government ,"[Friend, my, introduce, ROOT, confirm, intend, Government]",NNP_Friend PRP$_my VB_introduce NN_confirm NN_intend NNP_Government ,"[Friend, my, introduce, ROOT, confirm, intend, Government]",NNP_Friend PRP$_my VB_introduce NN_confirm NN_intend NNP_Government ,-3,0,1,1,1,0,0,0,0,0
Will not he agree that at a time of high inflation the iniquities of the present system which is based on rateable values are increasingly apparent  and particularly affect those on low or fixed incomes?,WillMD notRB hePRP agreeVB thatIN atIN aDT timeNN ofIN highJJ inflationNN theDT iniquitiesNNS ofIN theDT presentJJ systemNN whichWDT isVBZ basedVBN onIN rateableJJ valuesNNS areVBP increasinglyRB apparentJJ andCC particularlyRB affectVBP thoseDT onIN lowJJ orCC fixedVBN incomesNNS ,"root(ROOT-0, agree-4) aux(agree-4, Will-1) neg(agree-4, not-2) nsubj(agree-4, he-3) mark(apparent-26, that-5) case(time-8, at-6) det(time-8, a-7) nmod:at(apparent-26, time-8) case(inflation-11, of-9) amod(inflation-11, high-10) nmod:of(time-8, inflation-11) det(iniquities-13, the-12) nsubj(apparent-26, iniquities-13) nsubj(affect-30, iniquities-13) case(system-17, of-14) det(system-17, the-15) amod(system-17, present-16) nmod:of(iniquities-13, system-17) nsubjpass(based-20, which-18) auxpass(based-20, is-19) acl:relcl(system-17, based-20) case(values-23, on-21) amod(values-23, rateable-22) nmod:on(based-20, values-23) cop(apparent-26, are-24) advmod(apparent-26, increasingly-25) ccomp(agree-4, apparent-26) punct(apparent-26, ,-27) cc(apparent-26, and-28) advmod(affect-30, particularly-29) ccomp(agree-4, affect-30) conj:and(apparent-26, affect-30) dobj(affect-30, those-31) case(incomes-36, on-32) amod(incomes-36, low-33) cc(low-33, or-34) conj:or(low-33, fixed-35) amod(incomes-36, fixed-35) nmod:on(those-31, incomes-36) punct(agree-4, ?-37)",0,0,0,"root(ROOT, agree) ax(agree, Will) neg(agree, not) nsbj(agree, he) mark(apparent, that) case(time, at) det(time, a) nmod:at(apparent, time) case(inflation, of) amod(inflation, high) nmod:of(time, inflation) det(iniqities, the) nsbj(apparent, iniqities) nsbj(affect, iniqities) case(system, of) det(system, the) amod(system, present) nmod:of(iniqities, system) nsbjpass(based, which) axpass(based, is) acl:relcl(system, based) case(vales, on) amod(vales, rateable) nmod:on(based, vales) cop(apparent, are) advmod(apparent, increasingly) ccomp(agree, apparent) pnct(apparent, ,) cc(apparent, and) advmod(affect, particlarly) ccomp(agree, affect) conj:and(apparent, affect) dobj(affect, those) case(incomes, on) amod(incomes, low) cc(low, or) conj:or(low, fixed) amod(incomes, fixed) nmod:on(those, incomes) pnct(agree, ?)","root(,VB) ax(VB,MD) neg(VB,RB) nsbj(VB,PRP) mark(JJ,IN) case(NN,IN) det(NN,DT) nmod:at(JJ,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) det(NNS,DT) nsbj(JJ,NNS) nsbj(VBP,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl:relcl(NN,VBN) case(NNS,IN) amod(NNS,JJ) nmod:on(VBN,NNS) cop(JJ,VBP) advmod(JJ,RB) ccomp(VB,JJ) pnct(JJ,JJ) cc(JJ,CC) advmod(VBP,RB) ccomp(VB,VBP) conj:and(JJ,VBP) dobj(VBP,DT) case(NNS,IN) amod(NNS,JJ) cc(JJ,CC) conj:or(JJ,VBN) amod(NNS,VBN) nmod:on(DT,NNS) pnct(VB,VB)","[affect, not, apparent, he, agree, ROOT]","[affect, not, apparent, he, agree, ROOT]",3,[ ],[ ],VBP_affect RB_not JJ_apparent PRP_he VB_agree ,"[affect, not, apparent, he, agree, ROOT]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I agree that the incidence of this form of taxation at a time of high inflation primarily harms those who pay domestic rates.,IPRP agreeVBP thatIN theDT incidenceNN ofIN thisDT formNN ofIN taxationNN atIN aDT timeNN ofIN highJJ inflationNN primarilyRB harmsNNS thoseDT whoWP payVBP domesticJJ ratesNNS ,"root(ROOT-0, agree-2) nsubj(agree-2, I-1) dobj(agree-2, that-3) det(incidence-5, the-4) dep(that-3, incidence-5) case(form-8, of-6) det(form-8, this-7) nmod:of(incidence-5, form-8) case(taxation-10, of-9) nmod:of(form-8, taxation-10) case(time-13, at-11) det(time-13, a-12) nmod:at(incidence-5, time-13) case(inflation-16, of-14) amod(inflation-16, high-15) nmod:of(time-13, inflation-16) advmod(harms-18, primarily-17) acl(time-13, harms-18) dobj(harms-18, those-19) nsubj(pay-21, who-20) acl:relcl(those-19, pay-21) amod(rates-23, domestic-22) dobj(pay-21, rates-23) punct(agree-2, .-24)",0,1,0,"root(ROOT, agree) nsbj(agree, I) dobj(agree, that) det(incidence, the) dep(that, incidence) case(form, of) det(form, this) nmod:of(incidence, form) case(taxation, of) nmod:of(form, taxation) case(time, at) det(time, a) nmod:at(incidence, time) case(inflation, of) amod(inflation, high) nmod:of(time, inflation) advmod(harms, primarily) acl(time, harms) dobj(harms, those) nsbj(pay, who) acl:relcl(those, pay) amod(rates, domestic) dobj(pay, rates) pnct(agree, .)","root(,VBP) nsbj(VBP,PRP) dobj(VBP,IN) det(NN,DT) dep(IN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:at(NN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) advmod(NNS,RB) acl(NN,NNS) dobj(NNS,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) amod(NNS,JJ) dobj(VBP,NNS) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I confirm that the long term abolition of domestic rates remains a priority.,IPRP confirmVBP thatIN theDT longJJ termNN abolitionNN ofIN domesticJJ ratesNNS remainsVBZ aDT priorityNN ,"root(ROOT-0, confirm-2) nsubj(confirm-2, I-1) mark(remains-11, that-3) det(abolition-7, the-4) amod(abolition-7, long-5) compound(abolition-7, term-6) nsubj(remains-11, abolition-7) case(rates-10, of-8) amod(rates-10, domestic-9) nmod:of(abolition-7, rates-10) ccomp(confirm-2, remains-11) det(priority-13, a-12) dobj(remains-11, priority-13) punct(confirm-2, .-14)",0,0,0,"root(ROOT, confirm) nsbj(confirm, I) mark(remains, that) det(abolition, the) amod(abolition, long) compond(abolition, term) nsbj(remains, abolition) case(rates, of) amod(rates, domestic) nmod:of(abolition, rates) ccomp(confirm, remains) det(priority, a) dobj(remains, priority) pnct(confirm, .)","root(,VBP) nsbj(VBP,PRP) mark(VBZ,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nsbj(VBZ,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) ccomp(VBP,VBZ) det(NN,DT) dobj(VBZ,NN) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  we should have to substitute £2.7 billion of revenue a year.,HoweverRB wePRP shouldMD haveVB toTO substituteVB £27NNP billionCD ofIN revenueNN aDT yearNN ,"root(ROOT-0, have-5) advmod(have-5, However-1) punct(have-5, ,-2) nsubj(have-5, we-3) aux(have-5, should-4) mark(substitute-7, to-6) xcomp(have-5, substitute-7) compound(billion-10, #-8) compound(billion-10, 2.7-9) dobj(substitute-7, billion-10) case(revenue-12, of-11) nmod:of(billion-10, revenue-12) det(year-14, a-13) nmod:npmod(billion-10, year-14) punct(have-5, .-15)",0,0,0,"root(ROOT, have) advmod(have, However) pnct(have, ,) nsbj(have, we) ax(have, shold) mark(sbstitte, to) xcomp(have, sbstitte) compond(billion, #) compond(billion, 2.7) dobj(sbstitte, billion) case(revene, of) nmod:of(billion, revene) det(year, a) nmod:npmod(billion, year) pnct(have, .)","root(,VB) advmod(VB,RB) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) mark(VB,TO) xcomp(VB,VB) compond(CD,CD) compond(CD,CD) dobj(VB,CD) case(NN,IN) nmod:of(CD,NN) det(NN,DT) nmod:npmod(CD,NN) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That could not be done without a thorough review of all the options  which we are now carrying out.,ThatDT couldMD notRB beVB doneVBN withoutIN aDT thoroughJJ reviewNN ofIN allPDT theDT optionsNNS whichWDT wePRP areVBP nowRB carryingVBG outRP ,"root(ROOT-0, done-5) nsubjpass(done-5, That-1) aux(done-5, could-2) neg(done-5, not-3) auxpass(done-5, be-4) case(review-9, without-6) det(review-9, a-7) amod(review-9, thorough-8) nmod:without(done-5, review-9) case(options-13, of-10) det:predet(options-13, all-11) det(options-13, the-12) nmod:of(review-9, options-13) punct(review-9, ,-14) dobj(carrying-19, which-15) nsubj(carrying-19, we-16) aux(carrying-19, are-17) advmod(carrying-19, now-18) acl:relcl(review-9, carrying-19) compound:prt(carrying-19, out-20) punct(done-5, .-21)",0,0,0,"root(ROOT, done) nsbjpass(done, That) ax(done, cold) neg(done, not) axpass(done, be) case(review, withot) det(review, a) amod(review, thorogh) nmod:withot(done, review) case(options, of) det:predet(options, all) det(options, the) nmod:of(review, options) pnct(review, ,) dobj(carrying, which) nsbj(carrying, we) ax(carrying, are) advmod(carrying, now) acl:relcl(review, carrying) compond:prt(carrying, ot) pnct(done, .)","root(,VBN) nsbjpass(VBN,DT) ax(VBN,MD) neg(VBN,RB) axpass(VBN,VB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:withot(VBN,NN) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:of(NN,NNS) pnct(NN,NN) dobj(VBG,WDT) nsbj(VBG,PRP) ax(VBG,VBP) advmod(VBG,RB) acl:relcl(NN,VBG) compond:prt(VBG,RP) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does not the Secretary of State agree that it is easier to point to faults in the present rating system than to find a viable alternative?,DoesVBZ notRB theDT SecretaryNNP ofIN StateNNP agreeVBP thatIN itPRP isVBZ easierJJR toTO pointVB toTO faultsNNS inIN theDT presentJJ ratingNN systemNN thanIN toTO findVB aDT viableJJ alternativeNN ,"root(ROOT-0, agree-7) aux(agree-7, Does-1) neg(Secretary-4, not-2) det(Secretary-4, the-3) nsubj(agree-7, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) mark(easier-11, that-8) nsubj(easier-11, it-9) cop(easier-11, is-10) ccomp(agree-7, easier-11) mark(point-13, to-12) xcomp(easier-11, point-13) case(faults-15, to-14) nmod:to(point-13, faults-15) case(system-20, in-16) det(system-20, the-17) amod(system-20, present-18) compound(system-20, rating-19) nmod:in(faults-15, system-20) mark(find-23, than-21) mark(find-23, to-22) acl(faults-15, find-23) det(alternative-26, a-24) amod(alternative-26, viable-25) dobj(find-23, alternative-26) punct(agree-7, ?-27)",0,1,1,"root(ROOT, agree) ax(agree, Does) neg(Secretary, not) det(Secretary, the) nsbj(agree, Secretary) case(State, of) nmod:of(Secretary, State) mark(easier, that) nsbj(easier, it) cop(easier, is) ccomp(agree, easier) mark(point, to) xcomp(easier, point) case(falts, to) nmod:to(point, falts) case(system, in) det(system, the) amod(system, present) compond(system, rating) nmod:in(falts, system) mark(find, than) mark(find, to) acl(falts, find) det(alternative, a) amod(alternative, viable) dobj(find, alternative) pnct(agree, ?)","root(,VBP) ax(VBP,VBZ) neg(NNP,RB) det(NNP,DT) nsbj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(JJR,IN) nsbj(JJR,PRP) cop(JJR,VBZ) ccomp(VBP,JJR) mark(VB,TO) xcomp(JJR,VB) case(NNS,TO) nmod:to(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:in(NNS,NN) mark(VB,IN) mark(VB,TO) acl(NNS,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(VBP,VBP)","[Secretary, not, easier, State, agree, ROOT]","[Secretary, not, easier, State, agree, ROOT]",5,[ ],[ ],NNP_Secretary RB_not JJR_easier NNP_State VB_agree ,"[Secretary, not, easier, State, agree, ROOT]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I agree that it is easy to point to the faults in the present system.,IPRP agreeVBP thatIN itPRP isVBZ easyJJ toTO pointVB toTO theDT faultsNNS inIN theDT presentJJ systemNN ,"root(ROOT-0, agree-2) nsubj(agree-2, I-1) mark(easy-6, that-3) nsubj(easy-6, it-4) cop(easy-6, is-5) ccomp(agree-2, easy-6) mark(point-8, to-7) xcomp(easy-6, point-8) case(faults-11, to-9) det(faults-11, the-10) nmod:to(point-8, faults-11) case(system-15, in-12) det(system-15, the-13) amod(system-15, present-14) nmod:in(faults-11, system-15) punct(agree-2, .-16)",0,1,0,"root(ROOT, agree) nsbj(agree, I) mark(easy, that) nsbj(easy, it) cop(easy, is) ccomp(agree, easy) mark(point, to) xcomp(easy, point) case(falts, to) det(falts, the) nmod:to(point, falts) case(system, in) det(system, the) amod(system, present) nmod:in(falts, system) pnct(agree, .)","root(,VBP) nsbj(VBP,PRP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) ccomp(VBP,JJ) mark(VB,TO) xcomp(JJ,VB) case(NNS,TO) det(NNS,DT) nmod:to(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NNS,NN) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is difficult to make judgments about a viable alternative.,ItPRP isVBZ difficultJJ toTO makeVB judgmentsNNS aboutIN aDT viableJJ alternativeNN ,"root(ROOT-0, difficult-3) nsubj(difficult-3, It-1) cop(difficult-3, is-2) mark(make-5, to-4) xcomp(difficult-3, make-5) dobj(make-5, judgments-6) case(alternative-10, about-7) det(alternative-10, a-8) amod(alternative-10, viable-9) nmod:about(judgments-6, alternative-10) punct(difficult-3, .-11)",0,0,0,"root(ROOT, difficlt) nsbj(difficlt, It) cop(difficlt, is) mark(make, to) xcomp(difficlt, make) dobj(make, jdgments) case(alternative, abot) det(alternative, a) amod(alternative, viable) nmod:abot(jdgments, alternative) pnct(difficlt, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:abot(NNS,NN) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is one reason why those who have looked at this issue over the years have found it so difficult.,ThatDT isVBZ oneCD reasonNN whyWRB thoseDT whoWP haveVBP lookedVBN atIN thisDT issueNN overIN theDT yearsNNS haveVBP foundVBN itPRP soRB difficultJJ ,"root(ROOT-0, reason-4) nsubj(reason-4, That-1) cop(reason-4, is-2) nummod(reason-4, one-3) advmod(found-17, why-5) nsubj(found-17, those-6) nsubj(looked-9, who-7) aux(looked-9, have-8) acl:relcl(those-6, looked-9) case(issue-12, at-10) det(issue-12, this-11) nmod:at(looked-9, issue-12) case(years-15, over-13) det(years-15, the-14) nmod:over(looked-9, years-15) aux(found-17, have-16) acl:relcl(reason-4, found-17) dobj(found-17, it-18) advmod(difficult-20, so-19) advmod(found-17, difficult-20) punct(reason-4, .-21)",0,0,0,"root(ROOT, reason) nsbj(reason, That) cop(reason, is) nmmod(reason, one) advmod(fond, why) nsbj(fond, those) nsbj(looked, who) ax(looked, have) acl:relcl(those, looked) case(isse, at) det(isse, this) nmod:at(looked, isse) case(years, over) det(years, the) nmod:over(looked, years) ax(fond, have) acl:relcl(reason, fond) dobj(fond, it) advmod(difficlt, so) advmod(fond, difficlt) pnct(reason, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) nmmod(NN,CD) advmod(VBN,WRB) nsbj(VBN,DT) nsbj(VBN,WP) ax(VBN,VBP) acl:relcl(DT,VBN) case(NN,IN) det(NN,DT) nmod:at(VBN,NN) case(NNS,IN) det(NNS,DT) nmod:over(VBN,NNS) ax(VBN,VBP) acl:relcl(NN,VBN) dobj(VBN,PRP) advmod(JJ,RB) advmod(VBN,JJ) pnct(NN,NN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We are having another look at all the options.,WePRP areVBP havingVBG anotherDT lookNN atIN allPDT theDT optionsNNS ,"root(ROOT-0, having-3) nsubj(having-3, We-1) aux(having-3, are-2) det(look-5, another-4) dobj(having-3, look-5) case(options-9, at-6) det:predet(options-9, all-7) det(options-9, the-8) nmod:at(look-5, options-9) punct(having-3, .-10)",0,0,0,"root(ROOT, having) nsbj(having, We) ax(having, are) det(look, another) dobj(having, look) case(options, at) det:predet(options, all) det(options, the) nmod:at(look, options) pnct(having, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) det(NN,DT) dobj(VBG,NN) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:at(NN,NNS) pnct(VBG,VBG)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I shall keep the House informed of any conclusions.,IPRP shallMD keepVB theDT HouseNNP informedNN ofIN anyDT conclusionsNNS ,"root(ROOT-0, keep-3) nsubj(keep-3, I-1) aux(keep-3, shall-2) det(House-5, the-4) nsubj(informed-6, House-5) xcomp(keep-3, informed-6) case(conclusions-9, of-7) det(conclusions-9, any-8) nmod:of(informed-6, conclusions-9) punct(keep-3, .-10)",0,0,1,"root(ROOT, keep) nsbj(keep, I) ax(keep, shall) det(Hose, the) nsbj(informed, Hose) xcomp(keep, informed) case(conclsions, of) det(conclsions, any) nmod:of(informed, conclsions) pnct(keep, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NNP,DT) nsbj(NN,NNP) xcomp(VB,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will my right hon. Friend bear in mind that the higher the rates the greater the unfairness to many people?,WillMD myPRP$ rightJJ honNN FriendNNP bearNN inIN mindNN thatIN theDT higherJJR theDT ratesNNS theDT greaterJJR theDT unfairnessNN toTO manyJJ peopleNNS ,"root(ROOT-0, Will-1) nmod:poss(bear-6, my-2) amod(bear-6, right-3) compound(bear-6, hon.-4) compound(bear-6, Friend-5) dobj(Will-1, bear-6) case(mind-8, in-7) nmod:in(bear-6, mind-8) dep(bear-6, that-9) det(higher-11, the-10) amod(rates-13, higher-11) det(rates-13, the-12) root(that-9, rates-13) det(greater-15, the-14) amod(rates-13, greater-15) det(unfairness-17, the-16) dobj(greater-15, unfairness-17) case(people-20, to-18) amod(people-20, many-19) nmod:to(unfairness-17, people-20) punct(rates-13, ?-21)",0,1,0,"root(ROOT, Will) nmod:poss(bear, my) amod(bear, right) compond(bear, hon.) compond(bear, Friend) dobj(Will, bear) case(mind, in) nmod:in(bear, mind) dep(bear, that) det(higher, the) amod(rates, higher) det(rates, the) root(that, rates) det(greater, the) amod(rates, greater) det(nfairness, the) dobj(greater, nfairness) case(people, to) amod(people, many) nmod:to(nfairness, people) pnct(rates, ?)","root(,MD) nmod:poss(NN,PRP$) amod(NN,JJ) compond(NN,NN) compond(NN,NNP) dobj(MD,NN) case(NN,IN) nmod:in(NN,NN) dep(NN,IN) det(JJR,DT) amod(NNS,JJR) det(NNS,DT) root(IN,NNS) det(JJR,DT) amod(NNS,JJR) det(NN,DT) dobj(JJR,NN) case(NNS,TO) amod(NNS,JJ) nmod:to(NN,NNS) pnct(NNS,NNS)","[mind, my, Will, that, right, bear]","[mind, my, Will, that, right, bear]",7,"[mind, my, Will, that, right, bear]","[mind, my, Will, that, right, bear]",NN_mind PRP$_my MD_Will IN_that JJ_right NN_bear ,"[mind, my, Will, that, right, bear]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is not the present system extremely unfair  particularly to those who live alone?,IsVBZ notRB theDT presentJJ systemNN extremelyRB unfairJJ particularlyRB toTO thoseDT whoWP liveVBP aloneRB ,"root(ROOT-0, Is-1) neg(system-5, not-2) det(system-5, the-3) amod(system-5, present-4) nsubj(Is-1, system-5) advmod(unfair-7, extremely-6) amod(system-5, unfair-7) punct(unfair-7, ,-8) advmod(those-11, particularly-9) case(those-11, to-10) nmod:to(unfair-7, those-11) nsubj(live-13, who-12) acl:relcl(those-11, live-13) advmod(live-13, alone-14) punct(Is-1, ?-15)",0,0,0,"root(ROOT, Is) neg(system, not) det(system, the) amod(system, present) nsbj(Is, system) advmod(nfair, extremely) amod(system, nfair) pnct(nfair, ,) advmod(those, particlarly) case(those, to) nmod:to(nfair, those) nsbj(live, who) acl:relcl(those, live) advmod(live, alone) pnct(Is, ?)","root(,VBZ) neg(NN,RB) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) advmod(JJ,RB) amod(NN,JJ) pnct(JJ,JJ) advmod(DT,RB) case(DT,TO) nmod:to(JJ,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) advmod(VBP,RB) pnct(VBZ,VBZ)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he give us some comfort by saying that progress is being made towards finding an alternative means of raising finance?,WillMD hePRP giveVB usPRP someDT comfortNN byIN sayingVBG thatIN progressNN isVBZ beingVBG madeVBN towardsNNS findingVBG anDT alternativeJJ meansNNS ofIN raisingVBG financeNN ,"root(ROOT-0, give-3) aux(give-3, Will-1) nsubj(give-3, he-2) iobj(give-3, us-4) det(comfort-6, some-5) dobj(give-3, comfort-6) mark(saying-8, by-7) advcl(give-3, saying-8) mark(made-13, that-9) nsubjpass(made-13, progress-10) aux(made-13, is-11) auxpass(made-13, being-12) ccomp(saying-8, made-13) mark(finding-15, towards-14) advcl(made-13, finding-15) det(means-18, an-16) amod(means-18, alternative-17) dobj(finding-15, means-18) mark(raising-20, of-19) acl(means-18, raising-20) dobj(raising-20, finance-21) punct(give-3, ?-22)",0,0,1,"root(ROOT, give) ax(give, Will) nsbj(give, he) iobj(give, s) det(comfort, some) dobj(give, comfort) mark(saying, by) advcl(give, saying) mark(made, that) nsbjpass(made, progress) ax(made, is) axpass(made, being) ccomp(saying, made) mark(finding, towards) advcl(made, finding) det(means, an) amod(means, alternative) dobj(finding, means) mark(raising, of) acl(means, raising) dobj(raising, finance) pnct(give, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) iobj(VB,PRP) det(NN,DT) dobj(VB,NN) mark(VBG,IN) advcl(VB,VBG) mark(VBN,IN) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBG) ccomp(VBG,VBN) mark(VBG,NNS) advcl(VBN,VBG) det(NNS,DT) amod(NNS,JJ) dobj(VBG,NNS) mark(VBG,IN) acl(NNS,VBG) dobj(VBG,NN) pnct(VB,VB)","[he, comfort, ROOT, saying, give, us]","[he, comfort, ROOT, saying, give, us]",7,[ ],[ ],PRP_he NN_comfort VBG_saying VB_give PRP_us ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I sympathise with my hon. Friend's points.,IPRP sympathiseVBP withIN myPRP$ honNN FriendNNP 'sPOS pointsNNS ,"root(ROOT-0, sympathise-2) nsubj(sympathise-2, I-1) case(points-8, with-3) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) nmod:poss(points-8, Friend-6) case(Friend-6, 's-7) nmod:with(sympathise-2, points-8) punct(sympathise-2, .-9)",0,1,0,"root(ROOT, sympathise) nsbj(sympathise, I) case(points, with) nmod:poss(Friend, my) compond(Friend, hon.) nmod:poss(points, Friend) ""case(Friend, s)"", nmod:with(sympathise, points) pnct(sympathise, .)","root(,VBP) nsbj(VBP,PRP) case(NNS,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) nmod:with(VBP,NNS) pnct(VBP,VBP)","[sympathise, Friend, my, points]","[sympathise, Friend, my, points]",8,"[sympathise, Friend, my, points]","[sympathise, Friend, my, points]",VBP_sympathise NNP_Friend PRP$_my NNS_points ,"[sympathise, Friend, my, points]","[sympathise, Friend, my, points]",VBP_sympathise NNP_Friend PRP$_my NNS_points ,"[sympathise, Friend, my, points]",VBP_sympathise NNP_Friend PRP$_my NNS_points ,"[sympathise, Friend, my, points]",VBP_sympathise NNP_Friend PRP$_my NNS_points ,-3,0,1,0,0,0,0,0,0,0
There are two sources of complaint.,ThereEX areVBP twoCD sourcesNNS ofIN complaintNN ,"root(ROOT-0, are-2) expl(are-2, There-1) nummod(sources-4, two-3) nsubj(are-2, sources-4) case(complaint-6, of-5) nmod:of(sources-4, complaint-6) punct(are-2, .-7)",0,0,0,"root(ROOT, are) expl(are, There) nmmod(sorces, two) nsbj(are, sorces) case(complaint, of) nmod:of(sorces, complaint) pnct(are, .)","root(,VBP) expl(VBP,EX) nmmod(NNS,CD) nsbj(VBP,NNS) case(NN,IN) nmod:of(NNS,NN) pnct(VBP,VBP)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
One is the level of inflation and the other is the unfairness of the system.,OneCD isVBZ theDT levelNN ofIN inflationNN andCC theDT otherJJ isVBZ theDT unfairnessNN ofIN theDT systemNN ,"root(ROOT-0, level-4) nsubj(level-4, One-1) cop(level-4, is-2) det(level-4, the-3) case(inflation-6, of-5) nmod:of(level-4, inflation-6) cc(inflation-6, and-7) det(other-9, the-8) nmod:of(level-4, other-9) conj:and(inflation-6, other-9) cop(unfairness-12, is-10) det(unfairness-12, the-11) dep(level-4, unfairness-12) case(system-15, of-13) det(system-15, the-14) nmod:of(unfairness-12, system-15) punct(level-4, .-16)",0,0,0,"root(ROOT, level) nsbj(level, One) cop(level, is) det(level, the) case(inflation, of) nmod:of(level, inflation) cc(inflation, and) det(other, the) nmod:of(level, other) conj:and(inflation, other) cop(nfairness, is) det(nfairness, the) dep(level, nfairness) case(system, of) det(system, the) nmod:of(nfairness, system) pnct(level, .)","root(,NN) nsbj(NN,CD) cop(NN,VBZ) det(NN,DT) case(NN,IN) nmod:of(NN,NN) cc(NN,CC) det(JJ,DT) nmod:of(NN,JJ) conj:and(NN,JJ) cop(NN,VBZ) det(NN,DT) dep(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
When that proceeds and when we have achieved our priority of reducing income tax  we can reach conclusions on options to the rating system.,WhenWRB thatDT proceedsNNS andCC whenWRB wePRP haveVBP achievedVBN ourPRP$ priorityNN ofIN reducingVBG incomeNN taxNN wePRP canMD reachVB conclusionsNNS onIN optionsNNS toTO theDT ratingNN systemNN ,"root(ROOT-0, reach-18) advmod(proceeds-3, When-1) nsubj(proceeds-3, that-2) advcl(reach-18, proceeds-3) cc(proceeds-3, and-4) advmod(achieved-8, when-5) nsubj(achieved-8, we-6) aux(achieved-8, have-7) conj:and(proceeds-3, achieved-8) advcl(reach-18, achieved-8) nmod:poss(priority-10, our-9) dobj(achieved-8, priority-10) mark(reducing-12, of-11) acl(priority-10, reducing-12) compound(tax-14, income-13) dobj(reducing-12, tax-14) punct(reach-18, ,-15) nsubj(reach-18, we-16) aux(reach-18, can-17) dobj(reach-18, conclusions-19) case(options-21, on-20) nmod:on(conclusions-19, options-21) case(system-25, to-22) det(system-25, the-23) compound(system-25, rating-24) nmod:to(options-21, system-25) punct(reach-18, .-26)",0,0,0,"root(ROOT, reach) advmod(proceeds, When) nsbj(proceeds, that) advcl(reach, proceeds) cc(proceeds, and) advmod(achieved, when) nsbj(achieved, we) ax(achieved, have) conj:and(proceeds, achieved) advcl(reach, achieved) nmod:poss(priority, or) dobj(achieved, priority) mark(redcing, of) acl(priority, redcing) compond(tax, income) dobj(redcing, tax) pnct(reach, ,) nsbj(reach, we) ax(reach, can) dobj(reach, conclsions) case(options, on) nmod:on(conclsions, options) case(system, to) det(system, the) compond(system, rating) nmod:to(options, system) pnct(reach, .)","root(,VB) advmod(NNS,WRB) nsbj(NNS,DT) advcl(VB,NNS) cc(NNS,CC) advmod(VBN,WRB) nsbj(VBN,PRP) ax(VBN,VBP) conj:and(NNS,VBN) advcl(VB,VBN) nmod:poss(NN,PRP$) dobj(VBN,NN) mark(VBG,IN) acl(NN,VBG) compond(NN,NN) dobj(VBG,NN) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) dobj(VB,NNS) case(NNS,IN) nmod:on(NNS,NNS) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(NNS,NN) pnct(VB,VB)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
No doubt my hon. Friend will understand that those who resent the present system would be just as concerned about any substitute system in many areas.,NoDT doubtNN myPRP$ honNN FriendNNP willMD understandVB thatIN thoseDT whoWP resentVBP theDT presentJJ systemNN wouldMD beVB justRB asRB concernedJJ aboutIN anyDT substituteNN systemNN inIN manyJJ areasNNS ,"root(ROOT-0, doubt-2) neg(doubt-2, No-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) nsubj(understand-7, Friend-5) aux(understand-7, will-6) ccomp(doubt-2, understand-7) mark(concerned-19, that-8) nsubj(concerned-19, those-9) nsubj(resent-11, who-10) acl:relcl(those-9, resent-11) det(system-14, the-12) amod(system-14, present-13) dobj(resent-11, system-14) aux(concerned-19, would-15) cop(concerned-19, be-16) advmod(concerned-19, just-17) advmod(concerned-19, as-18) ccomp(understand-7, concerned-19) case(system-23, about-20) det(system-23, any-21) amod(system-23, substitute-22) nmod:about(concerned-19, system-23) case(areas-26, in-24) amod(areas-26, many-25) nmod:in(system-23, areas-26) punct(doubt-2, .-27)",0,0,0,"root(ROOT, dobt) neg(dobt, No) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(nderstand, Friend) ax(nderstand, will) ccomp(dobt, nderstand) mark(concerned, that) nsbj(concerned, those) nsbj(resent, who) acl:relcl(those, resent) det(system, the) amod(system, present) dobj(resent, system) ax(concerned, wold) cop(concerned, be) advmod(concerned, jst) advmod(concerned, as) ccomp(nderstand, concerned) case(system, abot) det(system, any) amod(system, sbstitte) nmod:abot(concerned, system) case(areas, in) amod(areas, many) nmod:in(system, areas) pnct(dobt, .)","root(,NN) neg(NN,DT) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(NN,VB) mark(JJ,IN) nsbj(JJ,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) advmod(JJ,RB) ccomp(VB,JJ) case(NN,IN) det(NN,DT) amod(NN,NN) nmod:abot(JJ,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(NN,NNS) pnct(NN,NN)","[doubt, Friend, my, understand, concerned]","[doubt, Friend, my, understand, concerned]",8,[ ],[ ],NN_doubt NNP_Friend PRP$_my VBP_understand JJ_concerned ,"[doubt, Friend, my, understand, concerned]","[doubt, Friend, my, understand, concerned]",NN_doubt NNP_Friend PRP$_my VBP_understand JJ_concerned ,"[doubt, Friend, my, understand, concerned]",NN_doubt NNP_Friend PRP$_my VBP_understand JJ_concerned ,"[doubt, Friend, my, understand, concerned]",NN_doubt NNP_Friend PRP$_my VBP_understand JJ_concerned ,-3,0,2,2,1,2,2,2,2,2
No easy decision is available.,NoDT easyJJ decisionNN isVBZ availableJJ ,"root(ROOT-0, available-5) neg(decision-3, No-1) amod(decision-3, easy-2) nsubj(available-5, decision-3) cop(available-5, is-4) punct(available-5, .-6)",0,0,1,"root(ROOT, available) neg(decision, No) amod(decision, easy) nsbj(available, decision) cop(available, is) pnct(available, .)","root(,JJ) neg(NN,DT) amod(NN,JJ) nsbj(JJ,NN) cop(JJ,VBZ) pnct(JJ,JJ)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We must do something  not only about the domestic rates  but about rates.,WePRP mustMD doVB somethingNN notRB onlyRB aboutIN theDT domesticJJ ratesNNS butCC aboutIN ratesNNS ,"root(ROOT-0, do-3) nsubj(do-3, We-1) aux(do-3, must-2) dobj(do-3, something-4) dobj(do-3, something-4'') conj:but(something-4, something-4'') punct(something-4, ,-5) neg(only-7, not-6) cc:preconj(rates-11, only-7) case(rates-11, about-8) det(rates-11, the-9) amod(rates-11, domestic-10) nmod:about(something-4, rates-11) punct(rates-11, ,-12) cc(something-4, but-13) case(rates-15, about-14) nmod:about(something-4'', rates-15) punct(do-3, .-16)",0,0,0,"root(ROOT, do) nsbj(do, We) ax(do, mst) dobj(do, something) dobj(do, something) conj:bt(something, something) pnct(something, ,) neg(only, not) cc:preconj(rates, only) case(rates, abot) det(rates, the) amod(rates, domestic) nmod:abot(something, rates) pnct(rates, ,) cc(something, bt) case(rates, abot) nmod:abot(something, rates) pnct(do, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) VBbj(VB,NN) VBbj(VB,NN) conj:bt(NN,NN) pnct(NN,NN) neg(RB,RB) cc:preconj(NNS,RB) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:abot(NN,NNS) pnct(NNS,NNS) cc(NN,CC) case(NNS,IN) nmod:abot(NN,NNS) pnct(VB,VB)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Order.,OrderNN ,"root(ROOT-0, Order-1) punct(Order-1, .-2)",0,1,0,"root(ROOT, Order) pnct(Order, .)","root(,NN) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. Gentleman should tell his right hon. Friend after Question Time.,TheDT honNN GentlemanNNP shouldMD tellVB hisPRP$ rightJJ honNN FriendNNP afterIN QuestionNNP TimeNNP ,"root(ROOT-0, tell-5) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(tell-5, Gentleman-3) aux(tell-5, should-4) nmod:poss(Friend-9, his-6) amod(Friend-9, right-7) compound(Friend-9, hon.-8) dobj(tell-5, Friend-9) case(Time-12, after-10) compound(Time-12, Question-11) nmod:after(tell-5, Time-12) punct(tell-5, .-13)",0,0,1,"root(ROOT, tell) det(Gentleman, The) compond(Gentleman, hon.) nsbj(tell, Gentleman) ax(tell, shold) nmod:poss(Friend, his) amod(Friend, right) compond(Friend, hon.) dobj(tell, Friend) case(Time, after) compond(Time, Qestion) nmod:after(tell, Time) pnct(tell, .)","root(,VB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dobj(VB,NNP) case(NNP,IN) compond(NNP,NNP) nmod:after(VB,NNP) pnct(VB,VB)","[tell, Time, his, Friend, ROOT, right, Gentleman]","[tell, Time, his, Friend, ROOT, Gentleman]",12,"[ROOT, Time, his, Friend, tell]","[ROOT, Time, his, Friend, tell]",VB_tell NNP_Time PRP$_his NNP_Friend NNP_Gentleman ,"[tell, Time, his, Friend, ROOT, Gentleman]","[tell, Time, his, Friend, ROOT, Gentleman]",VB_tell NNP_Time PRP$_his NNP_Friend NNP_Gentleman ,"[tell, Time, his, Friend, ROOT, Gentleman]",VB_tell NNP_Time PRP$_his NNP_Friend NNP_Gentleman ,"[tell, Time, his, Friend, ROOT, Gentleman]",VB_tell NNP_Time PRP$_his NNP_Friend NNP_Gentleman ,-3,0,1,0,0,0,0,0,0,0
I accept my hon. Friend's view that there is a great deal of disgruntlement about the domestic rate system.,IPRP acceptVBP myPRP$ honNN FriendNNP 'sPOS viewNN thatIN thereEX isVBZ aDT greatJJ dealNN ofIN disgruntlementNN aboutIN theDT domesticJJ rateNN systemNN ,"root(ROOT-0, accept-2) nsubj(accept-2, I-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) nmod:poss(view-7, Friend-5) case(Friend-5, 's-6) dobj(accept-2, view-7) mark(is-10, that-8) expl(is-10, there-9) ccomp(view-7, is-10) det(deal-13, a-11) amod(deal-13, great-12) nsubj(is-10, deal-13) case(disgruntlement-15, of-14) nmod:of(deal-13, disgruntlement-15) case(system-20, about-16) det(system-20, the-17) amod(system-20, domestic-18) compound(system-20, rate-19) nmod:about(deal-13, system-20) punct(accept-2, .-21)",0,1,0,"root(ROOT, accept) nsbj(accept, I) nmod:poss(Friend, my) compond(Friend, hon.) nmod:poss(view, Friend) ""case(Friend, s)"", dobj(accept, view) mark(is, that) expl(is, there) ccomp(view, is) det(deal, a) amod(deal, great) nsbj(is, deal) case(disgrntlement, of) nmod:of(deal, disgrntlement) case(system, abot) det(system, the) amod(system, domestic) compond(system, rate) nmod:abot(deal, system) pnct(accept, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) dobj(VBP,NN) mark(VBZ,IN) expl(VBZ,EX) ccomp(NN,VBZ) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:abot(NN,NN) pnct(VBP,VBP)","[Friend, view, my, accept, is]","[Friend, view, my, accept, is]",13,"[Friend, view, my, accept, is]","[Friend, view, my, accept, is]",NNP_Friend NN_view PRP$_my VBD_accept VBZ_is ,"[Friend, view, my, accept, is]","[Friend, view, my, accept, is]",NNP_Friend NN_view PRP$_my VBD_accept VBZ_is ,"[Friend, view, my, accept, is]",NNP_Friend NN_view PRP$_my VBD_accept VBZ_is ,"[Friend, view, my, accept, is]",NNP_Friend NN_view PRP$_my VBD_accept VBZ_is ,-3,0,1,0,0,0,0,0,0,0
Most of that disgruntlement centres on the levels of inflation.,MostJJS ofIN thatDT disgruntlementNN centresVBZ onIN theDT levelsNNS ofIN inflationNN ,"root(ROOT-0, Most-1) case(centres-5, of-2) det(centres-5, that-3) compound(centres-5, disgruntlement-4) nmod:of(Most-1, centres-5) case(levels-8, on-6) det(levels-8, the-7) nmod:on(Most-1, levels-8) case(inflation-10, of-9) nmod:of(levels-8, inflation-10) punct(Most-1, .-11)",0,0,0,"root(ROOT, Most) case(centres, of) det(centres, that) compond(centres, disgrntlement) nmod:of(Most, centres) case(levels, on) det(levels, the) nmod:on(Most, levels) case(inflation, of) nmod:of(levels, inflation) pnct(Most, .)","root(,JJS) case(VBZ,IN) det(VBZ,DT) compond(VBZ,NN) nmod:of(JJS,VBZ) case(NNS,IN) det(NNS,DT) nmod:on(JJS,NNS) case(NN,IN) nmod:of(NNS,NN) pnct(JJS,JJS)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If inflation were proceeding at much lower levels a great deal of the agony about the domestic rating system would not be as evident.,IfIN inflationNN wereVBD proceedingVBG atIN muchJJ lowerJJR levelsNNS aDT greatJJ dealNN ofIN theDT agonyNN aboutIN theDT domesticJJ ratingNN systemNN wouldMD notRB beVB asIN evidentJJ ,"root(ROOT-0, evident-24) mark(proceeding-4, If-1) nsubj(proceeding-4, inflation-2) aux(proceeding-4, were-3) advcl(evident-24, proceeding-4) case(levels-8, at-5) advmod(lower-7, much-6) amod(levels-8, lower-7) nmod:at(evident-24, levels-8) det(deal-11, a-9) amod(deal-11, great-10) nsubjpass(evident-24, deal-11) case(agony-14, of-12) det(agony-14, the-13) nmod:of(deal-11, agony-14) case(system-19, about-15) det(system-19, the-16) amod(system-19, domestic-17) compound(system-19, rating-18) nmod:about(agony-14, system-19) aux(evident-24, would-20) neg(evident-24, not-21) cop(evident-24, be-22) case(evident-24, as-23) punct(evident-24, .-25)",0,0,0,"root(ROOT, evident) mark(proceeding, If) nsbj(proceeding, inflation) ax(proceeding, were) advcl(evident, proceeding) case(levels, at) advmod(lower, mch) amod(levels, lower) nmod:at(evident, levels) det(deal, a) amod(deal, great) nsbjpass(evident, deal) case(agony, of) det(agony, the) nmod:of(deal, agony) case(system, abot) det(system, the) amod(system, domestic) compond(system, rating) nmod:abot(agony, system) ax(evident, wold) neg(evident, not) cop(evident, be) case(evident, as) pnct(evident, .)","root(,JJ) mark(VBG,IN) nsbj(VBG,NN) ax(VBG,VBD) advcl(JJ,VBG) case(NNS,IN) advmod(JJR,JJ) amod(NNS,JJR) nmod:at(JJ,NNS) det(NN,DT) amod(NN,JJ) nsbjpass(JJ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:abot(NN,NN) ax(JJ,MD) neg(JJ,RB) cop(JJ,VB) case(JJ,IN) pnct(JJ,JJ)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for the Environment whether he will make a statement on the Government's decision to halt all further local authority expenditure on housing.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN theDT EnvironmentNNP whetherIN hePRP willMD makeVB aDT statementNN onIN theDT GovernmentNNP 'sPOS decisionNN toTO haltVB allDT furtherJJ localJJ authorityNN expenditureNN onIN housingNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Environment-8, for-6) det(Environment-8, the-7) nmod:for(asked-1, Environment-8) mark(make-12, whether-9) nsubj(make-12, he-10) aux(make-12, will-11) ccomp(asked-1, make-12) det(statement-14, a-13) dobj(make-12, statement-14) case(decision-19, on-15) det(Government-17, the-16) nmod:poss(decision-19, Government-17) case(Government-17, 's-18) nmod:on(statement-14, decision-19) mark(halt-21, to-20) acl(decision-19, halt-21) det(expenditure-26, all-22) amod(expenditure-26, further-23) amod(expenditure-26, local-24) compound(expenditure-26, authority-25) dobj(halt-21, expenditure-26) case(housing-28, on-27) nmod:on(expenditure-26, housing-28) punct(asked-1, .-29)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Environment, for) det(Environment, the) nmod:for(asked, Environment) mark(make, whether) nsbj(make, he) ax(make, will) ccomp(asked, make) det(statement, a) dobj(make, statement) case(decision, on) det(Government, the) nmod:poss(decision, Government) ""case(Government, s)"", nmod:on(statement, decision) mark(halt, to) acl(decision, halt) det(expenditre, all) amod(expenditre, frther) amod(expenditre, local) compond(expenditre, athority) dobj(halt, expenditre) case(hosing, on) nmod:on(expenditre, hosing) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) det(NNP,DT) nmod:for(VBN,NNP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) nmod:on(NN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) amod(NN,JJ) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) case(NN,IN) nmod:on(NN,NN) pnct(VBN,VBN)","[make, Environment, decision, he, State, ROOT, Secretary, Government, asked, statement, halt]","[make, Environment, decision, he, State, ROOT, Secretary, Government, asked, statement, halt]",1,"[make, Environment, decision, State, ROOT, Secretary, Government, asked, statement, halt]","[make, Environment, decision, State, ROOT, Secretary, Government, asked, statement, halt]",VB_make NNP_Environment NN_decision PRP_he NNP_State NNP_Secretary NNP_Government VBN_asked NN_statement VB_halt ,"[make, Environment, decision, he, State, ROOT, Secretary, Government, asked, statement, halt]","[make, Environment, decision, he, State, ROOT, Secretary, Government, asked, statement, halt]",VB_make NNP_Environment NN_decision PRP_he NNP_State NNP_Secretary NNP_Government VBN_asked NN_statement VB_halt ,"[make, Environment, decision, he, State, ROOT, Secretary, Government, asked, statement, halt]",VB_make NNP_Environment NN_decision PRP_he NNP_State NNP_Secretary NNP_Government VBN_asked NN_statement VB_halt ,"[make, Environment, decision, he, State, ROOT, Secretary, Government, asked, statement, halt]",VB_make NNP_Environment NN_decision PRP_he NNP_State NNP_Secretary NNP_Government VBN_asked NN_statement VB_halt ,-3,0,2,0,0,0,2,2,2,2
The housing investment programme for local authority housing this year is £2 200 million.,TheDT housingNN investmentNN programmeNN forIN localJJ authorityNN housingNN thisDT yearNN isVBZ £2$ 200CD millionCD ,"root(ROOT-0, million-14) det(programme-4, The-1) compound(programme-4, housing-2) compound(programme-4, investment-3) nsubj(million-14, programme-4) case(housing-8, for-5) amod(housing-8, local-6) compound(housing-8, authority-7) nmod:for(programme-4, housing-8) det(year-10, this-9) nmod:tmod(million-14, year-10) cop(million-14, is-11) compound(million-14, #-12) compound(million-14, 2,200-13) punct(million-14, .-15)",0,0,0,"root(ROOT, million) det(programme, The) compond(programme, hosing) compond(programme, investment) nsbj(million, programme) case(hosing, for) amod(hosing, local) compond(hosing, athority) nmod:for(programme, hosing) det(year, this) nmod:tmod(million, year) cop(million, is) compond(million, #) compond(million, 2,200) pnct(million, .)","root(,CD) det(NN,DT) compond(NN,NN) compond(NN,NN) nsbj(CD,NN) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:for(NN,NN) det(NN,DT) nmod:tmod(CD,NN) cop(CD,VBZ) compond(CD,CD) compond(CD,CD) pnct(CD,CD)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The latest returns of local authority expenditure between April and June  the more recent HIP submissions for 1981 82  and discussions about them with individual authorities suggest that there could be an overspend of up to £180 million in 1980 81 above that figure.,TheDT latestJJS returnsNNS ofIN localJJ authorityNN expenditureNN betweenIN AprilNNP andCC JuneNNP theDT moreRBR recentJJ HIPNNP submissionsNNS forIN 1981CD 82CD andCC discussionsNNS aboutIN themPRP withIN individualJJ authoritiesNNS suggestVBP thatIN thereEX couldMD beVB anDT overspendNN ofIN upIN toTO £180CD millionCD inIN 1980CD 81CD aboveIN thatDT figureNN ,"root(ROOT-0, suggest-29) det(returns-3, The-1) amod(returns-3, latest-2) nsubj(suggest-29, returns-3) case(expenditure-7, of-4) amod(expenditure-7, local-5) compound(expenditure-7, authority-6) nmod:of(returns-3, expenditure-7) case(April-9, between-8) nmod:between(returns-3, April-9) cc(April-9, and-10) nmod:between(returns-3, June-11) conj:and(April-9, June-11) punct(suggest-29, ,-12) det(submissions-17, the-13) advmod(recent-15, more-14) amod(submissions-17, recent-15) compound(submissions-17, HIP-16) nsubj(suggest-29, submissions-17) case(82-20, for-18) compound(82-20, 1981-19) nmod:for(submissions-17, 82-20) punct(submissions-17, ,-21) cc(submissions-17, and-22) conj:and(submissions-17, discussions-23) nsubj(suggest-29, discussions-23) case(them-25, about-24) nmod:about(discussions-23, them-25) case(authorities-28, with-26) amod(authorities-28, individual-27) nmod:with(discussions-23, authorities-28) mark(overspend-35, that-30) expl(overspend-35, there-31) aux(overspend-35, could-32) cop(overspend-35, be-33) det(overspend-35, an-34) ccomp(suggest-29, overspend-35) case(million-41, of-36) advmod(million-41, up-37) case(million-41, to-38) compound(million-41, #-39) compound(million-41, 180-40) nmod:to(overspend-35, million-41) case(81-44, in-42) compound(81-44, 1980-43) nmod:in(overspend-35, 81-44) case(figure-47, above-45) det(figure-47, that-46) nmod:above(81-44, figure-47) punct(suggest-29, .-48)",0,0,0,"root(ROOT, sggest) det(retrns, The) amod(retrns, latest) nsbj(sggest, retrns) case(expenditre, of) amod(expenditre, local) compond(expenditre, athority) nmod:of(retrns, expenditre) case(April, between) nmod:between(retrns, April) cc(April, and) nmod:between(retrns, Jne) conj:and(April, Jne) pnct(sggest, ,) det(sbmissions, the) advmod(recent, more) amod(sbmissions, recent) compond(sbmissions, HIP) nsbj(sggest, sbmissions) case(82, for) compond(82, 1981) nmod:for(sbmissions, 82) pnct(sbmissions, ,) cc(sbmissions, and) conj:and(sbmissions, discssions) nsbj(sggest, discssions) case(them, abot) nmod:abot(discssions, them) case(athorities, with) amod(athorities, individal) nmod:with(discssions, athorities) mark(overspend, that) expl(overspend, there) ax(overspend, cold) cop(overspend, be) det(overspend, an) ccomp(sggest, overspend) case(million, of) advmod(million, p) case(million, to) compond(million, #) compond(million, 180) nmod:to(overspend, million) case(81, in) compond(81, 1980) nmod:in(overspend, 81) case(figre, above) det(figre, that) nmod:above(81, figre) pnct(sggest, .)","root(,VBP) det(NNS,DT) amod(NNS,JJS) nsbj(VBP,NNS) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:of(NNS,NN) case(NNP,IN) nmod:between(NNS,NNP) cc(NNP,CC) nmod:between(NNS,NNP) conj:and(NNP,NNP) pnct(VBP,VBP) det(NNS,DT) advmod(JJ,RBR) amod(NNS,JJ) compond(NNS,NNP) nsbj(VBP,NNS) case(CD,IN) compond(CD,CD) nmod:for(NNS,CD) pnct(NNS,NNS) cc(NNS,CC) conj:and(NNS,NNS) nsbj(VBP,NNS) case(PRP,IN) nmod:abot(NNS,PRP) case(NNS,IN) amod(NNS,JJ) nmod:with(NNS,NNS) mark(NN,DT) expl(NN,EX) ax(NN,MD) cop(NN,VB) det(NN,DT) ccomp(VBP,NN) case(CD,IN) advmod(CD,IN) case(CD,TO) compond(CD,CD) compond(CD,CD) nmod:to(NN,CD) case(CD,IN) compond(CD,CD) nmod:in(NN,CD) case(NN,IN) det(NN,DT) nmod:above(CD,NN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Government attach fundamental importance to ensuring that cash limits are observed.,TheDT GovernmentNNP attachNN fundamentalJJ importanceNN toTO ensuringVBG thatIN cashNN limitsNNS areVBP observedVBN ,"root(ROOT-0, attach-3) det(Government-2, The-1) nsubj(attach-3, Government-2) amod(importance-5, fundamental-4) dobj(attach-3, importance-5) mark(ensuring-7, to-6) advcl(attach-3, ensuring-7) mark(observed-12, that-8) compound(limits-10, cash-9) nsubjpass(observed-12, limits-10) auxpass(observed-12, are-11) ccomp(ensuring-7, observed-12) punct(attach-3, .-13)",0,0,0,"root(ROOT, attach) det(Government, The) nsbj(attach, Government) amod(importance, fndamental) dobj(attach, importance) mark(ensring, to) advcl(attach, ensring) mark(observed, that) compond(limits, cash) nsbjpass(observed, limits) axpass(observed, are) ccomp(ensring, observed) pnct(attach, .)","root(,NN) det(NNP,DT) nsbj(NN,NNP) amod(NN,JJ) dobj(NN,NN) mark(VBG,TO) advcl(NN,VBG) mark(VBN,IN) compond(NNS,NN) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(VBG,VBN) pnct(NN,NN)","[Government, ROOT, attach, importance, ensuring]","[Government, ROOT, attach, importance, ensuring]",2,"[Government, ROOT, attach, importance, ensuring]","[Government, ROOT, attach, importance, ensuring]",NNP_Government NN_attach NN_importance VBG_ensuring ,"[Government, ROOT, attach, importance, ensuring]","[Government, ROOT, attach, importance, ensuring]",NNP_Government NN_attach NN_importance VBG_ensuring ,"[Government, ROOT, attach, importance, ensuring]",NNP_Government NN_attach NN_importance VBG_ensuring ,"[Government, ROOT, attach, importance, ensuring]",NNP_Government NN_attach NN_importance VBG_ensuring ,-3,0,2,0,0,0,2,2,2,2
As soon as I knew of the risk  therefore  I considered it essential to find out the precise position and to ask local authorities not to enter into further commitments until we knew the position.,AsRB soonRB asIN IPRP knewVBD ofIN theDT riskNN thereforeNN IPRP consideredVBD itPRP essentialJJ toTO findVB outRP theDT preciseJJ positionNN andCC toTO askVB localJJ authoritiesNNS notRB toTO enterVB intoIN furtherJJ commitmentsNNS untilIN wePRP knewVBD theDT positionNN ,"root(ROOT-0, soon-2) advmod(soon-2, As-1) mark(knew-5, as-3) nsubj(knew-5, I-4) advcl(soon-2, knew-5) case(risk-8, of-6) det(risk-8, the-7) nmod:of(knew-5, risk-8) punct(knew-5, ,-9) advmod(knew-5, therefore-10) punct(knew-5, ,-11) nsubj(considered-13, I-12) ccomp(knew-5, considered-13) nsubj(essential-15, it-14) xcomp(considered-13, essential-15) mark(find-17, to-16) xcomp(essential-15, find-17) compound:prt(find-17, out-18) det(position-21, the-19) amod(position-21, precise-20) dobj(find-17, position-21) cc(find-17, and-22) mark(ask-24, to-23) xcomp(essential-15, ask-24) conj:and(find-17, ask-24) amod(authorities-26, local-25) dobj(ask-24, authorities-26) neg(enter-29, not-27) mark(enter-29, to-28) xcomp(ask-24, enter-29) case(commitments-32, into-30) amod(commitments-32, further-31) nmod:into(enter-29, commitments-32) mark(knew-35, until-33) nsubj(knew-35, we-34) advcl(considered-13, knew-35) det(position-37, the-36) dobj(knew-35, position-37) punct(soon-2, .-38)",0,0,0,"root(ROOT, soon) advmod(soon, As) mark(knew, as) nsbj(knew, I) advcl(soon, knew) case(risk, of) det(risk, the) nmod:of(knew, risk) pnct(knew, ,) advmod(knew, therefore) pnct(knew, ,) nsbj(considered, I) ccomp(knew, considered) nsbj(essential, it) xcomp(considered, essential) mark(find, to) xcomp(essential, find) compond:prt(find, ot) det(position, the) amod(position, precise) dobj(find, position) cc(find, and) mark(ask, to) xcomp(essential, ask) conj:and(find, ask) amod(athorities, local) dobj(ask, athorities) neg(enter, not) mark(enter, to) xcomp(ask, enter) case(commitments, into) amod(commitments, frther) nmod:into(enter, commitments) mark(knew, ntil) nsbj(knew, we) advcl(considered, knew) det(position, the) dobj(knew, position) pnct(soon, .)","root(,RB) advmod(RB,RB) mark(VBD,IN) nsbj(VBD,PRP) advcl(RB,VBD) case(NN,IN) det(NN,DT) nmod:of(VBD,NN) pnct(VBD,VBD) advmod(VBD,NN) pnct(VBD,VBD) nsbj(VBD,PRP) ccomp(VBD,VBD) nsbj(JJ,PRP) xcomp(VBD,JJ) mark(VB,TO) xcomp(JJ,VB) compond:prt(VB,RP) det(NN,DT) amod(NN,JJ) dobj(VB,NN) cc(VB,CC) mark(VB,TO) xcomp(JJ,VB) conj:and(VB,VB) amod(NNS,JJ) dobj(VB,NNS) neg(VB,RB) mark(VB,TO) xcomp(VB,VB) case(NNS,IN) amod(NNS,JJ) nmod:into(VB,NNS) mark(VBD,IN) nsbj(VBD,PRP) advcl(VBD,VBD) det(NN,DT) dobj(VBD,NN) pnct(RB,RB)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have therefore sent them a circular asking them to let me have returns of their expected expenditure in 1980 81 on the basis of existing commitments  together with their estimated expenditure on statutory grants in the year.,IPRP haveVBP thereforeRB sentVBN themPRP aDT circularJJ askingVBG themPRP toTO letVB mePRP haveVB returnsNNS ofIN theirPRP$ expectedVBN expenditureNN inIN 1980CD 81CD onIN theDT basisNN ofIN existingVBG commitmentsNNS togetherRB withIN theirPRP$ estimatedVBN expenditureNN onIN statutoryJJ grantsNNS inIN theDT yearNN ,"root(ROOT-0, sent-4) nsubj(sent-4, I-1) aux(sent-4, have-2) advmod(sent-4, therefore-3) iobj(sent-4, them-5) det(circular-7, a-6) dobj(sent-4, circular-7) acl(circular-7, asking-8) dobj(asking-8, them-9) mark(let-11, to-10) xcomp(asking-8, let-11) nsubj(have-13, me-12) ccomp(let-11, have-13) dobj(have-13, returns-14) case(expenditure-18, of-15) nmod:poss(expenditure-18, their-16) amod(expenditure-18, expected-17) nmod:of(returns-14, expenditure-18) case(81-21, in-19) compound(81-21, 1980-20) nmod:in(returns-14, 81-21) case(basis-24, on-22) det(basis-24, the-23) nmod:on(returns-14, basis-24) case(commitments-27, of-25) amod(commitments-27, existing-26) nmod:of(basis-24, commitments-27) punct(returns-14, ,-28) case(expenditure-33, together-29) mwe(together-29, with-30) nmod:poss(expenditure-33, their-31) amod(expenditure-33, estimated-32) nmod:together_with(returns-14, expenditure-33) case(grants-36, on-34) amod(grants-36, statutory-35) nmod:on(expenditure-33, grants-36) case(year-39, in-37) det(year-39, the-38) nmod:in(expenditure-33, year-39) punct(sent-4, .-40)",0,0,0,"root(ROOT, sent) nsbj(sent, I) ax(sent, have) advmod(sent, therefore) iobj(sent, them) det(circlar, a) dobj(sent, circlar) acl(circlar, asking) dobj(asking, them) mark(let, to) xcomp(asking, let) nsbj(have, me) ccomp(let, have) dobj(have, retrns) case(expenditre, of) nmod:poss(expenditre, their) amod(expenditre, expected) nmod:of(retrns, expenditre) case(81, in) compond(81, 1980) nmod:in(retrns, 81) case(basis, on) det(basis, the) nmod:on(retrns, basis) case(commitments, of) amod(commitments, existing) nmod:of(basis, commitments) pnct(retrns, ,) case(expenditre, together) mwe(together, with) nmod:poss(expenditre, their) amod(expenditre, estimated) nmod:together_with(retrns, expenditre) case(grants, on) amod(grants, stattory) nmod:on(expenditre, grants) case(year, in) det(year, the) nmod:in(expenditre, year) pnct(sent, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VB) advmod(VBN,RB) iobj(VBN,PRP) det(JJ,DT) dobj(VBN,JJ) acl(JJ,VBG) dobj(VBG,PRP) mark(VB,TO) xcomp(VBG,VB) nsbj(VB,PRP) ccomp(VB,VB) dobj(VB,NNS) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,VBN) nmod:of(NNS,NN) case(CD,IN) compond(CD,CD) nmod:in(NNS,CD) case(NN,IN) det(NN,DT) nmod:on(NNS,NN) case(NNS,IN) amod(NNS,VBG) nmod:of(NN,NNS) pnct(NNS,NNS) case(NN,RB) mwe(RB,IN) nmod:poss(NN,PRP$) amod(NN,VBN) nmod:together_with(NNS,NN) case(NNS,IN) amod(NNS,JJ) nmod:on(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
When I have these figures I shall be able to see what action is needed in the longer term  and I shall make a further announcement.,WhenWRB IPRP haveVBP theseDT figuresNNS IPRP shallMD beVB ableJJ toTO seeVB whatWP actionNN isVBZ neededVBN inIN theDT longerJJR termNN andCC IPRP shallMD makeVB aDT furtherJJ announcementNN ,"root(ROOT-0, have-3) advmod(have-3, When-1) nsubj(have-3, I-2) det(figures-5, these-4) dobj(have-3, figures-5) nsubj(able-9, I-6) aux(able-9, shall-7) cop(able-9, be-8) acl:relcl(figures-5, able-9) mark(see-11, to-10) xcomp(able-9, see-11) det(action-13, what-12) nsubjpass(needed-15, action-13) auxpass(needed-15, is-14) ccomp(see-11, needed-15) case(term-19, in-16) det(term-19, the-17) amod(term-19, longer-18) nmod:in(needed-15, term-19) punct(have-3, ,-20) cc(have-3, and-21) nsubj(make-24, I-22) aux(make-24, shall-23) conj:and(have-3, make-24) det(announcement-27, a-25) amod(announcement-27, further-26) dobj(make-24, announcement-27) punct(have-3, .-28)",0,0,0,"root(ROOT, have) advmod(have, When) nsbj(have, I) det(figres, these) dobj(have, figres) nsbj(able, I) ax(able, shall) cop(able, be) acl:relcl(figres, able) mark(see, to) xcomp(able, see) det(action, what) nsbjpass(needed, action) axpass(needed, is) ccomp(see, needed) case(term, in) det(term, the) amod(term, longer) nmod:in(needed, term) pnct(have, ,) cc(have, and) nsbj(make, I) ax(make, shall) conj:and(have, make) det(annoncement, a) amod(annoncement, frther) dobj(make, annoncement) pnct(have, .)","root(,VBP) advmod(VBP,WRB) nsbj(VBP,PRP) det(NNS,DT) dobj(VBP,NNS) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) acl:relcl(NNS,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,WP) nsbjpass(VBN,NN) axpass(VBN,VBZ) ccomp(VB,VBN) case(NN,IN) det(NN,DT) amod(NN,JJR) nmod:in(VBN,NN) pnct(VBP,VBP) cc(VBP,CC) nsbj(VB,PRP) ax(VB,MD) conj:and(VBP,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Meanwhile  however  I have asked authorities not to enter into any further new housing commitments except those which follow from a statutory obligation.,MeanwhileRB howeverRB IPRP haveVBP askedVBN authoritiesNNS notRB toTO enterVB intoIN anyDT furtherJJ newJJ housingNN commitmentsNNS exceptIN thoseDT whichWDT followVBP fromIN aDT statutoryJJ obligationNN ,"root(ROOT-0, asked-7) advmod(asked-7, Meanwhile-1) punct(asked-7, ,-2) advmod(asked-7, however-3) punct(asked-7, ,-4) nsubj(asked-7, I-5) aux(asked-7, have-6) dobj(asked-7, authorities-8) neg(enter-11, not-9) mark(enter-11, to-10) xcomp(asked-7, enter-11) case(commitments-17, into-12) det(commitments-17, any-13) amod(commitments-17, further-14) amod(commitments-17, new-15) compound(commitments-17, housing-16) nmod:into(enter-11, commitments-17) case(those-19, except-18) nmod:except(commitments-17, those-19) nsubj(follow-21, which-20) acl:relcl(those-19, follow-21) case(obligation-25, from-22) det(obligation-25, a-23) amod(obligation-25, statutory-24) nmod:from(follow-21, obligation-25) punct(asked-7, .-26)",0,0,0,"root(ROOT, asked) advmod(asked, Meanwhile) pnct(asked, ,) advmod(asked, however) pnct(asked, ,) nsbj(asked, I) ax(asked, have) dobj(asked, athorities) neg(enter, not) mark(enter, to) xcomp(asked, enter) case(commitments, into) det(commitments, any) amod(commitments, frther) amod(commitments, new) compond(commitments, hosing) nmod:into(enter, commitments) case(those, except) nmod:except(commitments, those) nsbj(follow, which) acl:relcl(those, follow) case(obligation, from) det(obligation, a) amod(obligation, stattory) nmod:from(follow, obligation) pnct(asked, .)","root(,VBN) advmod(VBN,RB) pnct(VBN,VBN) advmod(VBN,RB) pnct(VBN,VBN) nsbj(VBN,PRP) ax(VBN,VBP) dobj(VBN,NNS) neg(VB,RB) mark(VB,TO) xcomp(VBN,VB) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) compond(NNS,NN) nmod:into(VB,NNS) case(DT,IN) nmod:except(NNS,DT) nsbj(VBP,WDT) acl:relcl(DT,VBP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:from(VBP,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
and I have withdrawn related borrowing approval except that which is needed to cover payments resulting from existing commitments.,andCC IPRP haveVBP withdrawnVBN relatedJJ borrowingNN approvalNN exceptIN thatDT whichWDT isVBZ neededVBN toTO coverVB paymentsNNS resultingVBG fromIN existingVBG commitmentsNNS ,"root(ROOT-0, withdrawn-4) cc(withdrawn-4, and-1) nsubj(withdrawn-4, I-2) aux(withdrawn-4, have-3) amod(approval-7, related-5) compound(approval-7, borrowing-6) dobj(withdrawn-4, approval-7) case(that-9, except-8) nmod:except(approval-7, that-9) nsubjpass(needed-12, which-10) auxpass(needed-12, is-11) acl:relcl(that-9, needed-12) mark(cover-14, to-13) xcomp(needed-12, cover-14) dobj(cover-14, payments-15) acl(payments-15, resulting-16) case(commitments-19, from-17) amod(commitments-19, existing-18) nmod:from(resulting-16, commitments-19) punct(withdrawn-4, .-20)",0,0,1,"root(ROOT, withdrawn) cc(withdrawn, and) nsbj(withdrawn, I) ax(withdrawn, have) amod(approval, related) compond(approval, borrowing) dobj(withdrawn, approval) case(that, except) nmod:except(approval, that) nsbjpass(needed, which) axpass(needed, is) acl:relcl(that, needed) mark(cover, to) xcomp(needed, cover) dobj(cover, payments) acl(payments, reslting) case(commitments, from) amod(commitments, existing) nmod:from(reslting, commitments) pnct(withdrawn, .)","root(,VBN) cc(VBN,CC) nsbj(VBN,PRP) ax(VBN,VBP) amod(NN,JJ) compond(NN,NN) dobj(VBN,NN) case(DT,IN) nmod:except(NN,DT) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl:relcl(DT,VBN) mark(VB,TO) xcomp(VBN,VB) dobj(VB,NNS) acl(NNS,VBG) case(NNS,IN) amod(NNS,VBG) nmod:from(VBG,NNS) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is a disgraceful decision.,ThatDT isVBZ aDT disgracefulJJ decisionNN ,"root(ROOT-0, decision-5) nsubj(decision-5, That-1) cop(decision-5, is-2) det(decision-5, a-3) amod(decision-5, disgraceful-4) punct(decision-5, .-6)",0,1,0,"root(ROOT, decision) nsbj(decision, That) cop(decision, is) det(decision, a) amod(decision, disgracefl) pnct(decision, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. Member will be fully aware that my action is to prevent an overspend on an announced budget.,TheDT honNN MemberNNP willMD beVB fullyRB awareJJ thatIN myPRP$ actionNN isVBZ toTO preventVB anDT overspendNN onIN anDT announcedJJ budgetNN ,"root(ROOT-0, aware-7) det(Member-3, The-1) compound(Member-3, hon.-2) nsubj(aware-7, Member-3) aux(aware-7, will-4) cop(aware-7, be-5) advmod(aware-7, fully-6) mark(is-11, that-8) nmod:poss(action-10, my-9) nsubj(is-11, action-10) ccomp(aware-7, is-11) mark(prevent-13, to-12) xcomp(is-11, prevent-13) det(overspend-15, an-14) dobj(prevent-13, overspend-15) case(budget-19, on-16) det(budget-19, an-17) amod(budget-19, announced-18) nmod:on(overspend-15, budget-19) punct(aware-7, .-20)",0,1,0,"root(ROOT, aware) det(Member, The) compond(Member, hon.) nsbj(aware, Member) ax(aware, will) cop(aware, be) advmod(aware, flly) mark(is, that) nmod:poss(action, my) nsbj(is, action) ccomp(aware, is) mark(prevent, to) xcomp(is, prevent) det(overspend, an) dobj(prevent, overspend) case(bdget, on) det(bdget, an) amod(bdget, annonced) nmod:on(overspend, bdget) pnct(aware, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) mark(VBZ,IN) nmod:poss(NN,PRP$) nsbj(VBZ,NN) ccomp(JJ,VBZ) mark(VB,TO) xcomp(VBZ,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(NN,NN) pnct(JJ,JJ)","[ROOT, fully, Member, is, aware]","[ROOT, fully, Member, is, aware]",4,[ ],[ ],RB_fully NNP_Member VBZ_is JJ_aware ,"[ROOT, fully, Member, is, aware]","[ROOT, fully, Member, is, aware]",RB_fully NNP_Member VBZ_is JJ_aware ,"[ROOT, fully, Member, is, aware]",RB_fully NNP_Member VBZ_is JJ_aware ,"[ROOT, fully, Member, is, aware]",RB_fully NNP_Member VBZ_is JJ_aware ,-3,0,2,0,0,0,0,0,0,0
It is not a reduction in the existing programme that was announced to the House.,ItPRP isVBZ notRB aDT reductionNN inIN theDT existingVBG programmeNN thatWDT wasVBD announcedVBN toTO theDT HouseNNP ,"root(ROOT-0, reduction-5) nsubj(reduction-5, It-1) cop(reduction-5, is-2) neg(reduction-5, not-3) det(reduction-5, a-4) case(programme-9, in-6) det(programme-9, the-7) amod(programme-9, existing-8) nmod:in(reduction-5, programme-9) nsubjpass(announced-12, that-10) auxpass(announced-12, was-11) acl:relcl(reduction-5, announced-12) case(House-15, to-13) det(House-15, the-14) nmod:to(announced-12, House-15) punct(reduction-5, .-16)",0,0,0,"root(ROOT, redction) nsbj(redction, It) cop(redction, is) neg(redction, not) det(redction, a) case(programme, in) det(programme, the) amod(programme, existing) nmod:in(redction, programme) nsbjpass(annonced, that) axpass(annonced, was) acl:relcl(redction, annonced) case(Hose, to) det(Hose, the) nmod:to(annonced, Hose) pnct(redction, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) neg(NN,RB) det(NN,DT) case(NN,IN) det(NN,DT) amod(NN,VBG) nmod:in(NN,NN) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(NN,VBN) case(NNP,TO) det(NNP,DT) nmod:to(VBN,NNP) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It therefore has to be taken in the overall context.,ItPRP thereforeRB hasVBZ toTO beVB takenVBN inIN theDT overallJJ contextNN ,"root(ROOT-0, has-3) nsubj(has-3, It-1) advmod(has-3, therefore-2) mark(taken-6, to-4) auxpass(taken-6, be-5) xcomp(has-3, taken-6) case(context-10, in-7) det(context-10, the-8) amod(context-10, overall-9) nmod:in(taken-6, context-10) punct(has-3, .-11)",0,0,0,"root(ROOT, has) nsbj(has, It) advmod(has, therefore) mark(taken, to) axpass(taken, be) xcomp(has, taken) case(context, in) det(context, the) amod(context, overall) nmod:in(taken, context) pnct(has, .)","root(,VBZ) nsbj(VBZ,PRP) advmod(VBZ,RB) mark(VBN,TO) axpass(VBN,VB) xcomp(VBZ,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VBN,NN) pnct(VBZ,VBZ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is my right hon. Friend aware that the increasing burden of the rates is becoming well nigh intolerable in many places  and that for industry particularly the rates burden is every bit as great a problem as the high rate of sterling or any other factor in the economy?,IsVBZ myPRP$ rightJJ honNN FriendNNP awareVBZ thatIN theDT increasingVBG burdenNN ofIN theDT ratesNNS isVBZ becomingVBG wellRB nighJJ intolerableJJ inIN manyJJ placesNNS andCC thatDT forIN industryNN particularlyRB theDT ratesNNS burdenVBP isVBZ everyDT bitNN asIN greatJJ aDT problemNN asIN theDT highJJ rateNN ofIN sterlingNN orCC anyDT otherJJ factorNN inIN theDT economyNN ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(aware-6, Friend-5) mark(becoming-15, that-7) det(burden-10, the-8) amod(burden-10, increasing-9) nsubj(becoming-15, burden-10) case(rates-13, of-11) det(rates-13, the-12) nmod:of(burden-10, rates-13) aux(becoming-15, is-14) ccomp(aware-6, becoming-15) advmod(nigh-17, well-16) amod(intolerable-18, nigh-17) xcomp(becoming-15, intolerable-18) case(places-21, in-19) amod(places-21, many-20) nmod:in(intolerable-18, places-21) punct(aware-6, ,-22) cc(aware-6, and-23) mark(bit-33, that-24) case(industry-26, for-25) nmod:for(bit-33, industry-26) advmod(burden-30, particularly-27) det(burden-30, the-28) compound(burden-30, rates-29) nsubj(bit-33, burden-30) cop(bit-33, is-31) det(bit-33, every-32) conj:and(aware-6, bit-33) case(problem-37, as-34) amod(problem-37, great-35) det(problem-37, a-36) nmod:as(bit-33, problem-37) case(rate-41, as-38) det(rate-41, the-39) amod(rate-41, high-40) nmod:as(bit-33, rate-41) case(sterling-43, of-42) nmod:of(rate-41, sterling-43) cc(rate-41, or-44) det(factor-47, any-45) amod(factor-47, other-46) nmod:as(bit-33, factor-47) conj:or(rate-41, factor-47) case(economy-50, in-48) det(economy-50, the-49) nmod:in(factor-47, economy-50) punct(aware-6, ?-51)",0,0,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(aware, Friend) mark(becoming, that) det(brden, the) amod(brden, increasing) nsbj(becoming, brden) case(rates, of) det(rates, the) nmod:of(brden, rates) ax(becoming, is) ccomp(aware, becoming) advmod(nigh, well) amod(intolerable, nigh) xcomp(becoming, intolerable) case(places, in) amod(places, many) nmod:in(intolerable, places) pnct(aware, ,) cc(aware, and) mark(bit, that) case(indstry, for) nmod:for(bit, indstry) advmod(brden, particlarly) det(brden, the) compond(brden, rates) nsbj(bit, brden) cop(bit, is) det(bit, every) conj:and(aware, bit) case(problem, as) amod(problem, great) det(problem, a) nmod:as(bit, problem) case(rate, as) det(rate, the) amod(rate, high) nmod:as(bit, rate) case(sterling, of) nmod:of(rate, sterling) cc(rate, or) det(factor, any) amod(factor, other) nmod:as(bit, factor) conj:or(rate, factor) case(economy, in) det(economy, the) nmod:in(factor, economy) pnct(aware, ?)","root(,VBZ) cop(VBZ,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBG,DT) det(VBP,DT) amod(VBP,VBG) nsbj(VBG,VBP) case(NNS,IN) det(NNS,DT) nmod:of(VBP,NNS) ax(VBG,VBZ) ccomp(VBZ,VBG) advmod(JJ,RB) amod(JJ,JJ) xcomp(VBG,JJ) case(NNS,IN) amod(NNS,JJ) nmod:in(JJ,NNS) pnct(VBZ,VBZ) cc(VBZ,CC) mark(NN,DT) case(NN,IN) nmod:for(NN,NN) advmod(VBP,RB) det(VBP,DT) compond(VBP,NNS) nsbj(NN,VBP) cop(NN,VBZ) det(NN,DT) conj:and(VBZ,NN) case(NN,IN) amod(NN,JJ) det(NN,DT) nmod:as(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:as(NN,NN) case(NN,IN) nmod:of(NN,NN) cc(NN,CC) det(NN,DT) amod(NN,JJ) nmod:as(NN,NN) conj:or(NN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(VBZ,VBZ)","[Friend, my, ROOT, aware, right, becoming, and]","[Friend, my, aware, ROOT, becoming, and]",5,"[Friend, my, aware, ROOT, becoming, and]",[ ],NNP_Friend PRP$_my JJ_aware VBG_becoming CC_and ,"[Friend, my, aware, ROOT, becoming, and]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
No organisation can countenance expenditure excesses of £180 million and do nothing about them.,NoDT organisationNN canMD countenanceVB expenditureNN excessesNNS ofIN £180NNP millionCD andCC doVB nothingNN aboutIN themPRP ,"root(ROOT-0, countenance-4) neg(organisation-2, No-1) nsubj(countenance-4, organisation-2) nsubj(do-12, organisation-2) aux(countenance-4, can-3) compound(excesses-6, expenditure-5) dobj(countenance-4, excesses-6) case(million-10, of-7) compound(million-10, #-8) compound(million-10, 180-9) nmod:of(excesses-6, million-10) cc(countenance-4, and-11) conj:and(countenance-4, do-12) dobj(do-12, nothing-13) case(them-15, about-14) nmod:about(nothing-13, them-15) punct(countenance-4, .-16)",0,0,0,"root(ROOT, contenance) neg(organisation, No) nsbj(contenance, organisation) nsbj(do, organisation) ax(contenance, can) compond(excesses, expenditre) dobj(contenance, excesses) case(million, of) compond(million, #) compond(million, 180) nmod:of(excesses, million) cc(contenance, and) conj:and(contenance, do) dobj(do, nothing) case(them, abot) nmod:abot(nothing, them) pnct(contenance, .)","root(,VB) neg(NN,DT) nsbj(VB,NN) nsbj(VB,NN) ax(VB,MD) compond(NNS,NN) dobj(VB,NNS) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NNS,CD) cc(VB,CC) conj:and(VB,VB) VBbj(VB,NN) case(PRP,IN) nmod:abot(NN,PRP) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
How long will it last?,HowWRB longRB willMD itPRP lastJJ ,"root(ROOT-0, last-5) advmod(long-2, How-1) advmod(last-5, long-2) aux(last-5, will-3) nsubj(last-5, it-4) punct(last-5, ?-6)",0,0,0,"root(ROOT, last) advmod(long, How) advmod(last, long) ax(last, will) nsbj(last, it) pnct(last, ?)","root(,JJ) advmod(RB,WRB) advmod(JJ,RB) ax(JJ,MD) nsbj(JJ,PRP) pnct(JJ,JJ)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If it is intended to last only a week or two it is unnecessary.,IfIN itPRP isVBZ intendedVBN toTO lastJJ onlyRB aDT weekNN orCC twoCD itPRP isVBZ unnecessaryJJ ,"root(ROOT-0, intended-4) mark(intended-4, If-1) nsubjpass(intended-4, it-2) auxpass(intended-4, is-3) mark(last-6, to-5) xcomp(intended-4, last-6) advmod(week-9, only-7) det(week-9, a-8) nsubj(unnecessary-14, week-9) cc(week-9, or-10) nummod(it-12, two-11) conj:or(week-9, it-12) nsubj(unnecessary-14, it-12) cop(unnecessary-14, is-13) ccomp(last-6, unnecessary-14) punct(intended-4, .-15)",0,0,0,"root(ROOT, intended) mark(intended, If) nsbjpass(intended, it) axpass(intended, is) mark(last, to) xcomp(intended, last) advmod(week, only) det(week, a) nsbj(nnecessary, week) cc(week, or) nmmod(it, two) conj:or(week, it) nsbj(nnecessary, it) cop(nnecessary, is) ccomp(last, nnecessary) pnct(intended, .)","root(,VBN) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) mark(JJ,TO) xcomp(VBN,JJ) advmod(NN,RB) det(NN,DT) nsbj(JJ,NN) cc(NN,CC) nmmod(PRP,CD) conj:or(NN,PRP) nsbj(JJ,PRP) cop(JJ,VBZ) ccomp(JJ,JJ) pnct(VBN,VBN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Or is a much longer stay intended?,OrCC isVBZ aDT muchRB longerRBR stayVB intendedVBN ,"root(ROOT-0, intended-7) cc(intended-7, Or-1) auxpass(intended-7, is-2) det(stay-6, a-3) advmod(longer-5, much-4) advmod(stay-6, longer-5) nsubjpass(intended-7, stay-6) punct(intended-7, ?-8)",0,0,0,"root(ROOT, intended) cc(intended, Or) axpass(intended, is) det(stay, a) advmod(longer, mch) advmod(stay, longer) nsbjpass(intended, stay) pnct(intended, ?)","root(,VBN) cc(VBN,CC) axpass(VBN,VBZ) det(VB,DT) advmod(RBR,RB) advmod(VB,RBR) nsbjpass(VBN,VB) pnct(VBN,VBN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That was not done even in the hungry 'thirties.,ThatDT wasVBD notRB doneVBN evenRB inIN theDT hungryJJ 'thirtiesNNS ,"root(ROOT-0, done-4) nsubjpass(done-4, That-1) auxpass(done-4, was-2) neg(done-4, not-3) advmod(thirties-10, even-5) case(thirties-10, in-6) det(thirties-10, the-7) amod(thirties-10, hungry-8) punct(thirties-10, `-9) nmod:in(done-4, thirties-10) punct(done-4, .-11)",0,0,1,"root(ROOT, done) nsbjpass(done, That) axpass(done, was) neg(done, not) advmod(thirties, even) case(thirties, in) det(thirties, the) amod(thirties, hngry) pnct(thirties, `) nmod:in(done, thirties) pnct(done, .)","root(,VBN) nsbjpass(VBN,DT) axpass(VBN,VBD) neg(VBN,RB) advmod(RB,RB) case(RB,IN) det(IN,DT) amod(DT,JJ) pnct(JJ,JJ) nmod:in(VBN,VBN) pnct(VBN,VBN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
When I announced the Government's views of the overspending of current expenditure by local authorities I believed that we could avoid the moratorium on capital expenditure that we are now considering.,WhenWRB IPRP announcedVBD theDT GovernmentNNP 'sPOS viewsNNS ofIN theDT overspendingNN ofIN currentJJ expenditureNN byIN localJJ authoritiesNNS IPRP believedVBD thatIN wePRP couldMD avoidVB theDT moratoriumNN onIN capitalNN expenditureNN thatIN wePRP areVBP nowRB consideringVBG ,"root(ROOT-0, believed-18) advmod(announced-3, When-1) nsubj(announced-3, I-2) advcl(believed-18, announced-3) det(Government-5, the-4) nmod:poss(views-7, Government-5) case(Government-5, 's-6) dobj(announced-3, views-7) case(overspending-10, of-8) det(overspending-10, the-9) nmod:of(views-7, overspending-10) case(expenditure-13, of-11) amod(expenditure-13, current-12) nmod:of(overspending-10, expenditure-13) case(authorities-16, by-14) amod(authorities-16, local-15) nmod:by(believed-18, authorities-16) nsubj(believed-18, I-17) mark(avoid-22, that-19) nsubj(avoid-22, we-20) aux(avoid-22, could-21) ccomp(believed-18, avoid-22) det(moratorium-24, the-23) dobj(avoid-22, moratorium-24) case(expenditure-27, on-25) compound(expenditure-27, capital-26) nmod:on(moratorium-24, expenditure-27) dobj(considering-32, that-28) nsubj(considering-32, we-29) aux(considering-32, are-30) advmod(considering-32, now-31) acl:relcl(moratorium-24, considering-32) punct(believed-18, .-33)",0,1,0,"root(ROOT, believed) advmod(annonced, When) nsbj(annonced, I) advcl(believed, annonced) det(Government, the) nmod:poss(views, Government) ""case(Government, s)"", dobj(annonced, views) case(overspending, of) det(overspending, the) nmod:of(views, overspending) case(expenditre, of) amod(expenditre, crrent) nmod:of(overspending, expenditre) case(athorities, by) amod(athorities, local) nmod:by(believed, athorities) nsbj(believed, I) mark(avoid, that) nsbj(avoid, we) ax(avoid, cold) ccomp(believed, avoid) det(moratorim, the) dobj(avoid, moratorim) case(expenditre, on) compond(expenditre, capital) nmod:on(moratorim, expenditre) dobj(considering, that) nsbj(considering, we) ax(considering, are) advmod(considering, now) acl:relcl(moratorim, considering) pnct(believed, .)","root(,VBD) advmod(VBD,WRB) nsbj(VBD,PRP) advcl(VBD,VBD) det(NNP,DT) nmod:poss(NNS,NNP) case(NNP,POS) dobj(VBD,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:by(VBD,NNS) nsbj(VBD,PRP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBD,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) compond(NN,NN) nmod:on(NN,NN) dobj(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBP) advmod(VBG,RB) acl:relcl(NN,VBG) pnct(VBD,VBD)","[announced, views, overspending, Government]","[announced, views, overspending, Government]",8,"[announced, views, overspending, Government]","[announced, views, overspending, Government]",JJ_announced NNS_views NN_overspending NNP_Government ,"[announced, views, overspending, Government]","[announced, views, overspending, Government]",JJ_announced NNS_views NN_overspending NNP_Government ,"[announced, views, overspending, Government]",JJ_announced NNS_views NN_overspending NNP_Government ,"[announced, views, overspending, Government]",JJ_announced NNS_views NN_overspending NNP_Government ,-3,0,2,0,0,0,2,2,2,2
Subsequent to that decision  new information has become available indicating that there is a potential excess expenditure on capital account on one of the housing cash limits.,SubsequentJJ toTO thatDT decisionNN newJJ informationNN hasVBZ becomeVBN availableJJ indicatingVBG thatIN thereEX isVBZ aDT potentialJJ excessJJ expenditureNN onIN capitalNN accountNN onIN oneCD ofIN theDT housingNN cashNN limitsNNS ,"root(ROOT-0, become-9) advcl(become-9, Subsequent-1) case(decision-4, to-2) det(decision-4, that-3) nmod:to(Subsequent-1, decision-4) punct(become-9, ,-5) amod(information-7, new-6) nsubj(become-9, information-7) aux(become-9, has-8) xcomp(become-9, available-10) xcomp(available-10, indicating-11) mark(is-14, that-12) expl(is-14, there-13) ccomp(indicating-11, is-14) det(expenditure-18, a-15) amod(expenditure-18, potential-16) amod(expenditure-18, excess-17) nsubj(is-14, expenditure-18) case(account-21, on-19) compound(account-21, capital-20) nmod:on(expenditure-18, account-21) case(one-23, on-22) nmod:on(expenditure-18, one-23) case(limits-28, of-24) det(limits-28, the-25) compound(limits-28, housing-26) compound(limits-28, cash-27) nmod:of(one-23, limits-28) punct(become-9, .-29)",0,0,0,"root(ROOT, become) advcl(become, Sbseqent) case(decision, to) det(decision, that) nmod:to(Sbseqent, decision) pnct(become, ,) amod(information, new) nsbj(become, information) ax(become, has) xcomp(become, available) xcomp(available, indicating) mark(is, that) expl(is, there) ccomp(indicating, is) det(expenditre, a) amod(expenditre, potential) amod(expenditre, excess) nsbj(is, expenditre) case(accont, on) compond(accont, capital) nmod:on(expenditre, accont) case(one, on) nmod:on(expenditre, one) case(limits, of) det(limits, the) compond(limits, hosing) compond(limits, cash) nmod:of(one, limits) pnct(become, .)","root(,VBN) advcl(VBN,JJ) case(NN,TO) det(NN,IN) nmod:to(JJ,NN) pnct(VBN,VBN) amod(NN,JJ) nsbj(VBN,NN) ax(VBN,VBZ) xcomp(VBN,JJ) xcomp(JJ,VBG) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBG,VBZ) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) compond(NN,NN) nmod:on(NN,NN) case(CD,IN) nmod:on(NN,CD) case(NNS,IN) det(NNS,DT) compond(NNS,NN) compond(NNS,NN) nmod:of(CD,NNS) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That was why I was forced reluctantly to introduce the circular that the House is now considering.,ThatDT wasVBD whyWRB IPRP wasVBD forcedVBN reluctantlyRB toTO introduceVB theDT circularNN thatIN theDT HouseNNP isVBZ nowRB consideringVBG ,"root(ROOT-0, was-2) nsubj(was-2, That-1) advmod(forced-6, why-3) nsubjpass(forced-6, I-4) auxpass(forced-6, was-5) ccomp(was-2, forced-6) advmod(forced-6, reluctantly-7) mark(introduce-9, to-8) xcomp(forced-6, introduce-9) det(circular-11, the-10) dobj(introduce-9, circular-11) dobj(considering-17, that-12) det(House-14, the-13) nsubj(considering-17, House-14) aux(considering-17, is-15) advmod(considering-17, now-16) acl:relcl(circular-11, considering-17) punct(was-2, .-18)",0,0,0,"root(ROOT, was) nsbj(was, That) advmod(forced, why) nsbjpass(forced, I) axpass(forced, was) ccomp(was, forced) advmod(forced, relctantly) mark(introdce, to) xcomp(forced, introdce) det(circlar, the) dobj(introdce, circlar) dobj(considering, that) det(Hose, the) nsbj(considering, Hose) ax(considering, is) advmod(considering, now) acl:relcl(circlar, considering) pnct(was, .)","root(,VBD) nsbj(VBD,DT) advmod(VBN,WRB) nsbjpass(VBN,PRP) axpass(VBN,VBD) ccomp(VBD,VBN) advmod(VBN,RB) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) dobj(VB,NN) dobj(VBG,IN) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBZ) advmod(VBG,RB) acl:relcl(NN,VBG) pnct(VBD,VBD)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The question that the hon. Gentleman asks about timing is of crucial concern.,TheDT questionNN thatIN theDT honNN GentlemanNNP asksVBZ aboutIN timingNN isVBZ ofIN crucialJJ concernNN ,"root(ROOT-0, concern-13) det(question-2, The-1) nsubj(concern-13, question-2) mark(asks-7, that-3) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) nsubj(asks-7, Gentleman-6) csubj(concern-13, asks-7) case(timing-9, about-8) nmod:about(asks-7, timing-9) cop(concern-13, is-10) case(concern-13, of-11) amod(concern-13, crucial-12) punct(concern-13, .-14)",0,0,0,"root(ROOT, concern) det(qestion, The) nsbj(concern, qestion) mark(asks, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(asks, Gentleman) csbj(concern, asks) case(timing, abot) nmod:abot(asks, timing) cop(concern, is) case(concern, of) amod(concern, crcial) pnct(concern, .)","root(,NN) det(NN,DT) nsbj(NN,NN) mark(VBZ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) csbj(NN,VBZ) case(NN,IN) nmod:abot(VBZ,NN) cop(NN,VBZ) case(NN,IN) amod(NN,JJ) pnct(NN,NN)","[asks, Gentleman, concern, timing]","[asks, Gentleman, concern, timing]",8,"[asks, Gentleman, concern, timing]","[asks, Gentleman, concern, timing]",VBZ_asks NNP_Gentleman NN_concern NN_timing ,"[asks, Gentleman, concern, timing]","[asks, Gentleman, concern, timing]",VBZ_asks NNP_Gentleman NN_concern NN_timing ,"[asks, Gentleman, concern, timing]",VBZ_asks NNP_Gentleman NN_concern NN_timing ,"[asks, Gentleman, concern, timing]",VBZ_asks NNP_Gentleman NN_concern NN_timing ,-3,0,2,2,1,2,2,2,2,2
I have asked the local authorities to let 30 me have their revised estimates by the end of this week.,IPRP haveVBP askedVBN theDT localJJ authoritiesNNS toTO letVB 30CD mePRP haveVBP theirPRP$ revisedVBN estimatesNNS byIN theDT endNN ofIN thisDT weekNN ,"root(ROOT-0, asked-3) nsubj(asked-3, I-1) aux(asked-3, have-2) det(authorities-6, the-4) amod(authorities-6, local-5) dobj(asked-3, authorities-6) mark(let-8, to-7) xcomp(asked-3, let-8) nummod(me-10, 30-9) nsubj(have-11, me-10) ccomp(let-8, have-11) nmod:poss(estimates-14, their-12) amod(estimates-14, revised-13) dobj(have-11, estimates-14) case(end-17, by-15) det(end-17, the-16) nmod:by(have-11, end-17) case(week-20, of-18) det(week-20, this-19) nmod:of(end-17, week-20) punct(asked-3, .-21)",0,0,1,"root(ROOT, asked) nsbj(asked, I) ax(asked, have) det(athorities, the) amod(athorities, local) dobj(asked, athorities) mark(let, to) xcomp(asked, let) nmmod(me, 30) nsbj(have, me) ccomp(let, have) nmod:poss(estimates, their) amod(estimates, revised) dobj(have, estimates) case(end, by) det(end, the) nmod:by(have, end) case(week, of) det(week, this) nmod:of(end, week) pnct(asked, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) det(NNS,DT) amod(NNS,JJ) dobj(VBN,NNS) mark(VB,TO) xcomp(VBN,VB) nmmod(PRP,CD) nsbj(VBP,PRP) ccomp(VB,VBP) nmod:poss(NNS,PRP$) amod(NNS,VBN) dobj(VBP,NNS) case(NN,IN) det(NN,DT) nmod:by(VBP,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I cannot wait.,IPRP canMD notRB waitVB ,"root(ROOT-0, wait-4) nsubj(wait-4, I-1) aux(wait-4, can-2) neg(wait-4, not-3) punct(wait-4, .-5)",0,1,0,"root(ROOT, wait) nsbj(wait, I) ax(wait, can) neg(wait, not) pnct(wait, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If I had announced to authorities my intention to withhold  in a week or so time large numbers of contracts might have been entered into which would have aggravated the situation even further.,IfIN IPRP hadVBD announcedVBN toTO authoritiesNNS myPRP$ intentionNN toTO withholdVB inIN aDT weekNN orCC soRB timeNN largeJJ numbersNNS ofIN contractsNNS mightMD haveVB beenVBN enteredVBN intoIN whichWDT wouldMD haveVB aggravatedVBN theDT situationNN evenRB furtherRBR ,"root(ROOT-0, aggravated-30) mark(announced-4, If-1) nsubj(announced-4, I-2) aux(announced-4, had-3) advcl(aggravated-30, announced-4) case(authorities-6, to-5) nmod:to(announced-4, authorities-6) nmod:poss(intention-8, my-7) nsubj(aggravated-30, intention-8) mark(withhold-10, to-9) acl(intention-8, withhold-10) punct(withhold-10, ,-11) case(week-14, in-12) det(week-14, a-13) nmod:in(withhold-10, week-14) cc(week-14, or-15) mark(entered-25, so-16) compound(numbers-19, time-17) amod(numbers-19, large-18) nsubjpass(entered-25, numbers-19) case(contracts-21, of-20) nmod:of(numbers-19, contracts-21) aux(entered-25, might-22) aux(entered-25, have-23) auxpass(entered-25, been-24) nmod:in(withhold-10, entered-25) conj:or(week-14, entered-25) case(which-27, into-26) nmod:into(entered-25, which-27) aux(aggravated-30, would-28) aux(aggravated-30, have-29) det(situation-32, the-31) dobj(aggravated-30, situation-32) advmod(further-34, even-33) advmod(aggravated-30, further-34) punct(aggravated-30, .-35)",0,0,0,"root(ROOT, aggravated) mark(annonced, If) nsbj(annonced, I) ax(annonced, had) advcl(aggravated, annonced) case(athorities, to) nmod:to(annonced, athorities) nmod:poss(intention, my) nsbj(aggravated, intention) mark(withhold, to) acl(intention, withhold) pnct(withhold, ,) case(week, in) det(week, a) nmod:in(withhold, week) cc(week, or) mark(entered, so) compond(nmbers, time) amod(nmbers, large) nsbjpass(entered, nmbers) case(contracts, of) nmod:of(nmbers, contracts) ax(entered, might) ax(entered, have) axpass(entered, been) nmod:in(withhold, entered) conj:or(week, entered) case(which, into) nmod:into(entered, which) ax(aggravated, wold) ax(aggravated, have) det(sitation, the) dobj(aggravated, sitation) advmod(frther, even) advmod(aggravated, frther) pnct(aggravated, .)","root(,VBN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBD) advcl(VBN,VBN) case(NNS,TO) nmod:to(VBN,NNS) nmod:poss(NN,PRP$) nsbj(VBN,NN) mark(VB,TO) acl(NN,VB) pnct(VB,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) cc(NN,CC) mark(VBN,RB) compond(NNS,NN) amod(NNS,JJ) nsbjpass(VBN,NNS) case(NNS,IN) nmod:of(NNS,NNS) ax(VBN,MD) ax(VBN,VB) axpass(VBN,VBN) nmod:in(VB,VBN) conj:or(NN,VBN) case(WDT,IN) nmod:into(VBN,WDT) ax(VBN,MD) ax(VBN,VB) det(NN,DT) dobj(VBN,NN) advmod(RBR,RB) advmod(VBN,RBR) pnct(VBN,VBN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The consequence of waiting would have been to enable those authorities most likely to overspend to consolidate the overspending at the expense of the underspending authorities.,TheDT consequenceNN ofIN waitingVBG wouldMD haveVB beenVBN toTO enableVB thoseDT authoritiesNNS mostRBS likelyJJ toTO overspendVB toTO consolidateVB theDT overspendingNN atIN theDT expenseNN ofIN theDT underspendingJJ authoritiesNNS ,"root(ROOT-0, enable-9) det(consequence-2, The-1) nsubj(enable-9, consequence-2) case(waiting-4, of-3) nmod:of(consequence-2, waiting-4) aux(enable-9, would-5) aux(enable-9, have-6) aux(enable-9, been-7) mark(enable-9, to-8) det(authorities-11, those-10) iobj(enable-9, authorities-11) advmod(likely-13, most-12) dobj(enable-9, likely-13) mark(overspend-15, to-14) xcomp(likely-13, overspend-15) mark(consolidate-17, to-16) xcomp(overspend-15, consolidate-17) det(overspending-19, the-18) dobj(consolidate-17, overspending-19) case(expense-22, at-20) det(expense-22, the-21) nmod:at(consolidate-17, expense-22) case(authorities-26, of-23) det(authorities-26, the-24) amod(authorities-26, underspending-25) nmod:of(expense-22, authorities-26) punct(enable-9, .-27)",0,0,1,"root(ROOT, enable) det(conseqence, The) nsbj(enable, conseqence) case(waiting, of) nmod:of(conseqence, waiting) ax(enable, wold) ax(enable, have) ax(enable, been) mark(enable, to) det(athorities, those) iobj(enable, athorities) advmod(likely, most) dobj(enable, likely) mark(overspend, to) xcomp(likely, overspend) mark(consolidate, to) xcomp(overspend, consolidate) det(overspending, the) dobj(consolidate, overspending) case(expense, at) det(expense, the) nmod:at(consolidate, expense) case(athorities, of) det(athorities, the) amod(athorities, nderspending) nmod:of(expense, athorities) pnct(enable, .)","root(,VB) det(NN,DT) nsbj(VB,NN) case(VBG,IN) nmod:of(NN,VBG) ax(VB,MD) ax(VB,VB) ax(VB,VBN) mark(VB,TO) det(NNS,DT) iobj(VB,NNS) advmod(JJ,RBS) dobj(VB,JJ) mark(VB,TO) xcomp(JJ,VB) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:at(VB,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(NN,NNS) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What economic sense does it make to throw more people into the dole queue with all the economic and social implications of such an action?,WhatWP economicJJ senseNN doesVBZ itPRP makeVB toTO throwVB moreJJR peopleNNS intoIN theDT doleJJ queueNN withIN allPDT theDT economicJJ andCC socialJJ implicationsNNS ofIN suchJJ anDT actionNN ,"root(ROOT-0, make-6) det(sense-3, What-1) amod(sense-3, economic-2) dobj(make-6, sense-3) aux(make-6, does-4) nsubj(make-6, it-5) mark(throw-8, to-7) xcomp(make-6, throw-8) amod(people-10, more-9) dobj(throw-8, people-10) case(dole-13, into-11) det(dole-13, the-12) nmod:into(throw-8, dole-13) dep(dole-13, queue-14) case(implications-21, with-15) det:predet(implications-21, all-16) det(implications-21, the-17) amod(implications-21, economic-18) cc(economic-18, and-19) conj:and(economic-18, social-20) amod(implications-21, social-20) nmod:with(queue-14, implications-21) case(action-25, of-22) det:predet(action-25, such-23) det(action-25, an-24) nmod:of(implications-21, action-25) punct(make-6, ?-26)",0,1,0,"root(ROOT, make) det(sense, What) amod(sense, economic) dobj(make, sense) ax(make, does) nsbj(make, it) mark(throw, to) xcomp(make, throw) amod(people, more) dobj(throw, people) case(dole, into) det(dole, the) nmod:into(throw, dole) dep(dole, qee) case(implications, with) det:predet(implications, all) det(implications, the) amod(implications, economic) cc(economic, and) conj:and(economic, social) amod(implications, social) nmod:with(qee, implications) case(action, of) det:predet(action, sch) det(action, an) nmod:of(implications, action) pnct(make, ?)","root(,VB) det(NN,WP) amod(NN,JJ) dobj(VB,NN) ax(VB,VBZ) nsbj(VB,PRP) mark(VB,TO) xcomp(VB,VB) amod(NNS,JJR) dobj(VB,NNS) case(JJ,IN) det(JJ,DT) nmod:into(VB,JJ) dep(JJ,NN) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) amod(NNS,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NNS,JJ) nmod:with(NN,NNS) case(NN,IN) det:predet(NN,JJ) det(NN,DT) nmod:of(NNS,NN) pnct(VB,VB)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What economic sense does it make to pile up capital debt  the interest on which will be paid for generations to come  in order to sustain public expenditure which the nation cannot afford?,WhatWP economicJJ senseNN doesVBZ itPRP makeVB toTO pileVB upRP capitalNN debtNN theDT interestNN onIN whichWDT willMD beVB paidVBN forIN generationsNNS toTO comeVB inIN orderNN toTO sustainVB publicJJ expenditureNN whichWDT theDT nationNN canMD notRB affordVB ,"root(ROOT-0, paid-19) det(sense-3, What-1) amod(sense-3, economic-2) dobj(make-6, sense-3) aux(make-6, does-4) nsubj(make-6, it-5) advcl(paid-19, make-6) mark(pile-8, to-7) xcomp(make-6, pile-8) compound:prt(pile-8, up-9) compound(debt-11, capital-10) dobj(pile-8, debt-11) punct(paid-19, ,-12) det(interest-14, the-13) nsubjpass(paid-19, interest-14) case(which-16, on-15) nmod:on(interest-14, which-16) aux(paid-19, will-17) auxpass(paid-19, be-18) case(generations-21, for-20) nmod:for(paid-19, generations-21) mark(come-23, to-22) xcomp(paid-19, come-23) punct(come-23, ,-24) mark(sustain-28, in-25) mwe(in-25, order-26) mark(sustain-28, to-27) advcl(come-23, sustain-28) amod(expenditure-30, public-29) dobj(sustain-28, expenditure-30) dobj(afford-36, which-31) det(nation-33, the-32) nsubj(afford-36, nation-33) aux(afford-36, can-34) neg(afford-36, not-35) acl:relcl(expenditure-30, afford-36) punct(paid-19, ?-37)",0,0,0,"root(ROOT, paid) det(sense, What) amod(sense, economic) dobj(make, sense) ax(make, does) nsbj(make, it) advcl(paid, make) mark(pile, to) xcomp(make, pile) compond:prt(pile, p) compond(debt, capital) dobj(pile, debt) pnct(paid, ,) det(interest, the) nsbjpass(paid, interest) case(which, on) nmod:on(interest, which) ax(paid, will) axpass(paid, be) case(generations, for) nmod:for(paid, generations) mark(come, to) xcomp(paid, come) pnct(come, ,) mark(sstain, in) mwe(in, order) mark(sstain, to) advcl(come, sstain) amod(expenditre, pblic) dobj(sstain, expenditre) dobj(afford, which) det(nation, the) nsbj(afford, nation) ax(afford, can) neg(afford, not) acl:relcl(expenditre, afford) pnct(paid, ?)","root(,VBN) det(NN,WP) amod(NN,JJ) dobj(VB,NN) ax(VB,VBZ) nsbj(VB,PRP) advcl(VBN,VB) mark(VB,TO) xcomp(VB,VB) compond:prt(VB,RP) compond(NN,NN) dobj(VB,NN) pnct(VBN,VBN) det(NN,DT) nsbjpass(VBN,NN) case(WDT,IN) nmod:on(NN,WDT) ax(VBN,MD) axpass(VBN,VB) case(NNS,IN) nmod:for(VBN,NNS) mark(VB,TO) xcomp(VBN,VB) pnct(VB,VB) mark(VB,IN) mwe(IN,NN) mark(VB,TO) advcl(VB,VB) amod(NN,JJ) dobj(VB,NN) dobj(VB,WDT) det(NN,DT) nsbj(VB,NN) ax(VB,MD) neg(VB,RB) acl:relcl(NN,VB) pnct(VBN,VBN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
This is an extension of Question Time  but I will call two more hon. Members from either side before I call the right hon. Gentleman on the Opposition Front Bench.,ThisDT isVBZ anDT extensionNN ofIN QuestionNN TimeNNP butCC IPRP willMD callVB twoCD moreJJR honJJ MembersNNS fromIN eitherDT sideNN beforeIN IPRP callVBP theDT rightJJ honNN GentlemanNNP onIN theDT OppositionNNP FrontNNP BenchNNP ,"root(ROOT-0, extension-4) nsubj(extension-4, This-1) cop(extension-4, is-2) det(extension-4, an-3) case(Time-7, of-5) compound(Time-7, Question-6) nmod:of(extension-4, Time-7) punct(extension-4, ,-8) cc(extension-4, but-9) nsubj(call-12, I-10) aux(call-12, will-11) conj:but(extension-4, call-12) nummod(Members-16, two-13) amod(Members-16, more-14) compound(Members-16, hon.-15) dobj(call-12, Members-16) case(side-19, from-17) det(side-19, either-18) nmod:from(call-12, side-19) mark(call-22, before-20) nsubj(call-22, I-21) advcl(call-12, call-22) det(Gentleman-26, the-23) amod(Gentleman-26, right-24) compound(Gentleman-26, hon.-25) dobj(call-22, Gentleman-26) case(Bench-31, on-27) det(Bench-31, the-28) compound(Bench-31, Opposition-29) compound(Bench-31, Front-30) nmod:on(call-22, Bench-31) punct(extension-4, .-32)",0,0,0,"root(ROOT, extension) nsbj(extension, This) cop(extension, is) det(extension, an) case(Time, of) compond(Time, Qestion) nmod:of(extension, Time) pnct(extension, ,) cc(extension, bt) nsbj(call, I) ax(call, will) conj:bt(extension, call) nmmod(Members, two) amod(Members, more) compond(Members, hon.) dobj(call, Members) case(side, from) det(side, either) nmod:from(call, side) mark(call, before) nsbj(call, I) advcl(call, call) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) dobj(call, Gentleman) case(Bench, on) det(Bench, the) compond(Bench, Opposition) compond(Bench, Front) nmod:on(call, Bench) pnct(extension, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) case(NNP,IN) compond(NNP,NN) nmod:of(NN,NNP) pnct(NN,NN) cc(NN,CC) nsbj(VBP,PRP) ax(VBP,MD) conj:bt(NN,VBP) nmmod(NNS,CD) amod(NNS,JJR) compond(NNS,NNS) dobj(VBP,NNS) case(NN,IN) det(NN,DT) nmod:from(VBP,NN) mark(VBP,IN) nsbj(VBP,PRP) advcl(VBP,VBP) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) dobj(VBP,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:on(VBP,NNP) pnct(NN,NN)","[right, I, Gentleman, Bench, call, call]","[call, call, I, Gentleman, Bench]",13,"[call, call, I, Gentleman, Bench]","[call, call, I, Gentleman, Bench]",VB_call VB_call PRP_I NNP_Gentleman NNP_Bench ,"[call, call, I, Gentleman, Bench]","[call, call, I, Gentleman, Bench]",VB_call VB_call PRP_I NNP_Gentleman NNP_Bench ,"[call, call, I, Gentleman, Bench]",VB_call VB_call PRP_I NNP_Gentleman NNP_Bench ,"[call, call, I, Gentleman, Bench]",VB_call VB_call PRP_I NNP_Gentleman NNP_Bench ,-3,0,2,0,0,0,0,0,0,0
Is he aware that the city of Plymouth  which has consistently underspent  has had to halt a number of schemes  including one involving £200 000 of underspending which had been put to one side for housing improvements and has had to cancel the granting of mortgages to young people in the city?,IsVBZ hePRP awareJJ thatIN theDT cityNN ofIN PlymouthNNP whichWDT hasVBZ consistentlyRB underspentJJ hasVBZ hadVBN toTO haltVB aDT numberNN ofIN schemesNNS includingVBG oneCD involvingVBG £200CD 000CD ofIN underspendingVBG whichWDT hadVBD beenVBN putVBN toTO oneCD sideNN forIN housingNN improvementsNNS andCC hasVBZ hadVBN toTO cancelVB theDT grantingNN ofIN mortgagesNNS toTO youngJJ peopleNNS inIN theDT cityNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) mark(had-16, that-4) det(city-6, the-5) nsubj(had-16, city-6) case(Plymouth-8, of-7) nmod:of(city-6, Plymouth-8) punct(city-6, ,-9) nsubj(underspent-13, which-10) aux(underspent-13, has-11) advmod(underspent-13, consistently-12) acl:relcl(city-6, underspent-13) punct(city-6, ,-14) aux(had-16, has-15) ccomp(aware-3, had-16) mark(halt-18, to-17) xcomp(had-16, halt-18) det(number-20, a-19) dobj(halt-18, number-20) case(schemes-22, of-21) nmod:of(number-20, schemes-22) punct(had-16, ,-23) case(one-25, including-24) nmod:including(had-16, one-25) acl(one-25, involving-26) compound(200,000-28, #-27) dobj(involving-26, 200,000-28) case(underspending-30, of-29) nmod:of(200,000-28, underspending-30) nsubjpass(put-34, which-31) nsubjpass(had-43, which-31) aux(put-34, had-32) auxpass(put-34, been-33) acl:relcl(underspending-30, put-34) case(side-37, to-35) nummod(side-37, one-36) nmod:to(put-34, side-37) case(improvements-40, for-38) compound(improvements-40, housing-39) nmod:for(put-34, improvements-40) cc(put-34, and-41) aux(had-43, has-42) acl:relcl(underspending-30, had-43) conj:and(put-34, had-43) mark(cancel-45, to-44) xcomp(had-43, cancel-45) det(granting-47, the-46) dobj(cancel-45, granting-47) case(mortgages-49, of-48) nmod:of(granting-47, mortgages-49) case(people-52, to-50) amod(people-52, young-51) nmod:to(granting-47, people-52) case(city-55, in-53) det(city-55, the-54) nmod:in(people-52, city-55) punct(aware-3, ?-56)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) mark(had, that) det(city, the) nsbj(had, city) case(Plymoth, of) nmod:of(city, Plymoth) pnct(city, ,) nsbj(nderspent, which) ax(nderspent, has) advmod(nderspent, consistently) acl:relcl(city, nderspent) pnct(city, ,) ax(had, has) ccomp(aware, had) mark(halt, to) xcomp(had, halt) det(nmber, a) dobj(halt, nmber) case(schemes, of) nmod:of(nmber, schemes) pnct(had, ,) case(one, inclding) nmod:inclding(had, one) acl(one, involving) compond(200,000, #) dobj(involving, 200,000) case(nderspending, of) nmod:of(200,000, nderspending) nsbjpass(pt, which) nsbjpass(had, which) ax(pt, had) axpass(pt, been) acl:relcl(nderspending, pt) case(side, to) nmmod(side, one) nmod:to(pt, side) case(improvements, for) compond(improvements, hosing) nmod:for(pt, improvements) cc(pt, and) ax(had, has) acl:relcl(nderspending, had) conj:and(pt, had) mark(cancel, to) xcomp(had, cancel) det(granting, the) dobj(cancel, granting) case(mortgages, of) nmod:of(granting, mortgages) case(people, to) amod(people, yong) nmod:to(granting, people) case(city, in) det(city, the) nmod:in(people, city) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) mark(VBN,IN) det(NN,DT) nsbj(VBN,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(NN,NN) nsbj(JJ,WDT) ax(JJ,VBZ) advmod(JJ,RB) acl:relcl(NN,JJ) pnct(NN,NN) ax(VBN,VBZ) ccomp(JJ,VBN) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBN,VBN) case(CD,VBG) nmod:inclding(VBN,CD) acl(CD,VBG) compond(VBG,VBG) dobj(VBG,VBG) case(VBG,IN) nmod:of(IN,VBG) nsbjpass(VBN,WDT) nsbjpass(VBN,WDT) ax(VBN,VBN) axpass(VBN,VBN) acl:relcl(VBG,VBN) case(NN,TO) nmmod(NN,CD) nmod:to(VBN,NN) case(NNS,IN) compond(NNS,NN) nmod:for(VBN,NNS) cc(VBN,CC) ax(VBN,VBZ) acl:relcl(VBG,VBN) conj:and(VBN,VBN) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNS,TO) amod(NNS,JJ) nmod:to(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) pnct(JJ,JJ)","[he, ROOT, had, aware]","[he, ROOT, had, aware]",14,"[he, ROOT, had, aware]",[ ],PRP_he VBN_had JJ_aware ,"[he, ROOT, had, aware]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am most grateful to my hon. Friend for his comments.,IPRP amVBP mostRBS gratefulJJ toTO myPRP$ honNN FriendNN forIN hisPRP$ commentsNNS ,"root(ROOT-0, grateful-4) nsubj(grateful-4, I-1) cop(grateful-4, am-2) advmod(grateful-4, most-3) case(Friend-8, to-5) nmod:poss(Friend-8, my-6) compound(Friend-8, hon.-7) nmod:to(grateful-4, Friend-8) case(comments-11, for-9) nmod:poss(comments-11, his-10) nmod:for(grateful-4, comments-11) punct(grateful-4, .-12)",0,1,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) advmod(gratefl, most) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gratefl, Friend) case(comments, for) nmod:poss(comments, his) nmod:for(gratefl, comments) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RBS) case(NN,TO) nmod:poss(NN,PRP$) compond(NN,NN) nmod:to(JJ,NN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:for(JJ,NNS) pnct(JJ,JJ)","[I, most, my, ROOT, grateful, comments, Friend]","[most, I, his, my, ROOT, grateful, comments, Friend]",15,"[most, I, his, my, ROOT, grateful, comments, Friend]","[most, I, his, my, ROOT, grateful, comments, Friend]",RBS_most PRP_I PRP$_his PRP$_my JJ_grateful NNS_comments NNP_Friend ,"[most, I, his, my, ROOT, grateful, comments, Friend]","[most, I, his, my, ROOT, grateful, comments, Friend]",RBS_most PRP_I PRP$_his PRP$_my JJ_grateful NNS_comments NNP_Friend ,"[most, I, his, my, ROOT, grateful, comments, Friend]",RBS_most PRP_I PRP$_his PRP$_my JJ_grateful NNS_comments NNP_Friend ,"[most, I, his, my, ROOT, grateful, comments, Friend]",RBS_most PRP_I PRP$_his PRP$_my JJ_grateful NNS_comments NNP_Friend ,-3,0,2,1,1,0,2,2,2,2
The legislation now being considered in another place will enable me to distinguish much more between those who overspend and those who underspend  both on capital and current accounts.,TheDT legislationNN nowRB beingVBG consideredVBN inIN anotherDT placeNN willMD enableVB mePRP toTO distinguishVB muchRB moreRBR betweenIN thoseDT whoWP overspendVBP andCC thoseDT whoWP underspendVBP bothDT onIN capitalNN andCC currentJJ accountsNNS ,"root(ROOT-0, enable-10) det(legislation-2, The-1) nsubjpass(considered-5, legislation-2) advmod(considered-5, now-3) auxpass(considered-5, being-4) csubj(enable-10, considered-5) case(place-8, in-6) det(place-8, another-7) nmod:in(considered-5, place-8) aux(enable-10, will-9) dobj(enable-10, me-11) mark(distinguish-13, to-12) xcomp(enable-10, distinguish-13) advmod(more-15, much-14) dobj(distinguish-13, more-15) case(those-17, between-16) nmod:between(more-15, those-17) nsubj(overspend-19, who-18) acl:relcl(those-17, overspend-19) cc(overspend-19, and-20) acl:relcl(those-17, those-21) conj:and(overspend-19, those-21) nsubj(underspend-23, who-22) acl:relcl(those-21, underspend-23) punct(enable-10, ,-24) cc:preconj(capital-27, both-25) case(capital-27, on-26) nmod:on(enable-10, capital-27) cc(capital-27, and-28) amod(accounts-30, current-29) nmod:on(enable-10, accounts-30) conj:and(capital-27, accounts-30) punct(enable-10, .-31)",0,0,0,"root(ROOT, enable) det(legislation, The) nsbjpass(considered, legislation) advmod(considered, now) axpass(considered, being) csbj(enable, considered) case(place, in) det(place, another) nmod:in(considered, place) ax(enable, will) dobj(enable, me) mark(distingish, to) xcomp(enable, distingish) advmod(more, mch) dobj(distingish, more) case(those, between) nmod:between(more, those) nsbj(overspend, who) acl:relcl(those, overspend) cc(overspend, and) acl:relcl(those, those) conj:and(overspend, those) nsbj(nderspend, who) acl:relcl(those, nderspend) pnct(enable, ,) cc:preconj(capital, both) case(capital, on) nmod:on(enable, capital) cc(capital, and) amod(acconts, crrent) nmod:on(enable, acconts) conj:and(capital, acconts) pnct(enable, .)","root(,VB) det(NN,DT) nsbjpass(VBN,NN) advmod(VBN,RB) axpass(VBN,VBG) csbj(VB,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) ax(VB,MD) dobj(VB,PRP) mark(VB,TO) xcomp(VB,VB) advmod(RBR,RB) dobj(VB,RBR) case(DT,IN) nmod:between(RBR,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) cc(VBP,CC) acl:relcl(DT,DT) conj:and(VBP,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) pnct(VB,VB) cc:preconj(NN,DT) case(NN,IN) nmod:on(VB,NN) cc(NN,CC) amod(NNS,JJ) nmod:on(VB,NNS) conj:and(NN,NNS) pnct(VB,VB)",[ ],[ ],15,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Can he reconcile that with his intention to make house buying easier?,CanMD hePRP reconcileVB thatIN withIN hisPRP$ intentionNN toTO makeVB houseNN buyingNN easierJJR ,"root(ROOT-0, reconcile-3) aux(reconcile-3, Can-1) nsubj(reconcile-3, he-2) dobj(reconcile-3, that-4) case(intention-7, with-5) nmod:poss(intention-7, his-6) nmod:with(that-4, intention-7) mark(make-9, to-8) acl(intention-7, make-9) compound(buying-11, house-10) nsubj(easier-12, buying-11) xcomp(make-9, easier-12) punct(reconcile-3, ?-13)",0,0,1,"root(ROOT, reconcile) ax(reconcile, Can) nsbj(reconcile, he) dobj(reconcile, that) case(intention, with) nmod:poss(intention, his) nmod:with(that, intention) mark(make, to) acl(intention, make) compond(bying, hose) nsbj(easier, bying) xcomp(make, easier) pnct(reconcile, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) dobj(VB,IN) case(NN,IN) nmod:poss(NN,PRP$) nmod:with(IN,NN) mark(VB,TO) acl(NN,VB) compond(NN,NN) nsbj(JJR,NN) xcomp(VB,JJR) pnct(VB,VB)","[he, ROOT, reconcile, that]","[reconcile, his, he, ROOT, make, that, intention]",16,"[make, intention, his, that]","[make, intention, his, that]",VB_reconcile PRP$_his PRP_he VB_make IN_that NN_intention ,"[reconcile, his, he, ROOT, make, that, intention]","[reconcile, his, he, ROOT, make, that, intention]",VB_reconcile PRP$_his PRP_he VB_make IN_that NN_intention ,"[reconcile, his, he, ROOT, make, that, intention]",VB_reconcile PRP$_his PRP_he VB_make IN_that NN_intention ,"[reconcile, his, he, ROOT, make, that, intention]",VB_reconcile PRP$_his PRP_he VB_make IN_that NN_intention ,-3,0,1,1,1,1,1,1,1,1
The building societies now have substantial sums available for house purchase.,TheDT buildingNN societiesNNS nowRB haveVBP substantialJJ sumsNNS availableJJ forIN houseNN purchaseNN ,"root(ROOT-0, have-5) det(societies-3, The-1) compound(societies-3, building-2) nsubj(have-5, societies-3) advmod(have-5, now-4) amod(sums-7, substantial-6) dobj(have-5, sums-7) amod(sums-7, available-8) case(purchase-11, for-9) compound(purchase-11, house-10) nmod:for(available-8, purchase-11) punct(have-5, .-12)",0,1,0,"root(ROOT, have) det(societies, The) compond(societies, bilding) nsbj(have, societies) advmod(have, now) amod(sms, sbstantial) dobj(have, sms) amod(sms, available) case(prchase, for) compond(prchase, hose) nmod:for(available, prchase) pnct(have, .)","root(,VBP) det(NNS,DT) compond(NNS,NN) nsbj(VBP,NNS) advmod(VBP,RB) amod(NNS,JJ) dobj(VBP,NNS) amod(NNS,JJ) case(NN,IN) compond(NN,NN) nmod:for(JJ,NN) pnct(VBP,VBP)",[ ],[ ],17,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The local government Bill that we hope shortly to be considering will enable local authorities to guarantee private sector finance in this form  so there will be considerable relief in that way.,TheDT localJJ governmentNN BillNNP thatIN wePRP hopeVBP shortlyRB toTO beVB consideringVBG willMD enableVB localJJ authoritiesNNS toTO guaranteeVB privateJJ sectorNN financeNN inIN thisDT formNN soRB thereEX willMD beVB considerableJJ reliefNN inIN thatDT wayNN ,"root(ROOT-0, Bill-4) det(Bill-4, The-1) amod(Bill-4, local-2) compound(Bill-4, government-3) mark(hope-7, that-5) nsubj(hope-7, we-6) dep(Bill-4, hope-7) advmod(hope-7, shortly-8) mark(considering-11, to-9) aux(considering-11, be-10) xcomp(hope-7, considering-11) aux(enable-13, will-12) ccomp(considering-11, enable-13) amod(authorities-15, local-14) dobj(enable-13, authorities-15) mark(guarantee-17, to-16) xcomp(enable-13, guarantee-17) amod(finance-20, private-18) compound(finance-20, sector-19) dobj(guarantee-17, finance-20) case(form-23, in-21) det(form-23, this-22) nmod:in(guarantee-17, form-23) punct(hope-7, ,-24) advmod(there-26, so-25) expl(relief-30, there-26) aux(relief-30, will-27) cop(relief-30, be-28) amod(relief-30, considerable-29) dep(hope-7, relief-30) case(way-33, in-31) det(way-33, that-32) nmod:in(relief-30, way-33) punct(Bill-4, .-34)",0,0,0,"root(ROOT, Bill) det(Bill, The) amod(Bill, local) compond(Bill, government) mark(hope, that) nsbj(hope, we) dep(Bill, hope) advmod(hope, shortly) mark(considering, to) ax(considering, be) xcomp(hope, considering) ax(enable, will) ccomp(considering, enable) amod(athorities, local) dobj(enable, athorities) mark(garantee, to) xcomp(enable, garantee) amod(finance, private) compond(finance, sector) dobj(garantee, finance) case(form, in) det(form, this) nmod:in(garantee, form) pnct(hope, ,) advmod(there, so) expl(relief, there) ax(relief, will) cop(relief, be) amod(relief, considerable) dep(hope, relief) case(way, in) det(way, that) nmod:in(relief, way) pnct(Bill, .)","root(,NNP) det(NNP,DT) amod(NNP,JJ) compond(NNP,NN) mark(VBP,DT) nsbj(VBP,PRP) dep(NNP,VBP) advmod(VBP,RB) mark(VBG,TO) ax(VBG,VB) xcomp(VBP,VBG) ax(VB,MD) ccomp(VBG,VB) amod(NNS,JJ) dobj(VB,NNS) mark(VB,TO) xcomp(VB,VB) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:in(VB,NN) pnct(VBP,VBP) advmod(EX,RB) expl(NN,EX) ax(NN,MD) cop(NN,VB) amod(NN,JJ) dep(VBP,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(NNP,NNP)",[ ],[ ],17,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
As the right hon. Gentleman knows  I have announced  and the public expenditure tables show clearly  the level of provision for housing this year.,AsIN theDT rightJJ honNN GentlemanNNP knowsVBZ IPRP haveVBP announcedVBN andCC theDT publicJJ expenditureNN tablesVBZ showVBP clearlyRB theDT levelNN ofIN provisionNN forIN housingNN thisDT yearNN ,"root(ROOT-0, knows-6) mark(knows-6, As-1) det(Gentleman-5, the-2) amod(Gentleman-5, right-3) compound(Gentleman-5, hon.-4) nsubj(knows-6, Gentleman-5) punct(announced-10, ,-7) nsubj(announced-10, I-8) aux(announced-10, have-9) ccomp(knows-6, announced-10) punct(announced-10, ,-11) cc(announced-10, and-12) det(tables-16, the-13) amod(tables-16, public-14) compound(tables-16, expenditure-15) nsubj(show-17, tables-16) ccomp(knows-6, show-17) conj:and(announced-10, show-17) advmod(show-17, clearly-18) punct(show-17, ,-19) det(level-21, the-20) dobj(show-17, level-21) case(provision-23, of-22) nmod:of(level-21, provision-23) case(housing-25, for-24) nmod:for(provision-23, housing-25) det(year-27, this-26) nmod:tmod(level-21, year-27) punct(knows-6, .-28)",0,0,0,"root(ROOT, knows) mark(knows, As) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(knows, Gentleman) pnct(annonced, ,) nsbj(annonced, I) ax(annonced, have) ccomp(knows, annonced) pnct(annonced, ,) cc(annonced, and) det(tables, the) amod(tables, pblic) compond(tables, expenditre) nsbj(show, tables) ccomp(knows, show) conj:and(annonced, show) advmod(show, clearly) pnct(show, ,) det(level, the) dobj(show, level) case(provision, of) nmod:of(level, provision) case(hosing, for) nmod:for(provision, hosing) det(year, this) nmod:tmod(level, year) pnct(knows, .)","root(,VBZ) mark(VBZ,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) pnct(VBN,VBN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(VBZ,VBN) pnct(VBN,VBN) cc(VBN,CC) det(VBZ,DT) amod(VBZ,JJ) compond(VBZ,NN) nsbj(VBP,VBZ) ccomp(VBZ,VBP) conj:and(VBN,VBP) advmod(VBP,RB) pnct(VBP,VBP) det(NN,DT) dobj(VBP,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) nmod:for(NN,NN) det(NN,DT) nmod:tmod(NN,NN) pnct(VBZ,VBZ)","[knows, announced, Gentleman, right, show, ROOT]","[Gentleman, ROOT, announced, knows, show]",19,"[Gentleman, ROOT, announced, knows, show]","[Gentleman, ROOT, announced, knows, show]",NNP_Gentleman JJ_announced VBZ_knows VBP_show ,"[Gentleman, ROOT, announced, knows, show]","[Gentleman, ROOT, announced, knows, show]",NNP_Gentleman JJ_announced VBZ_knows VBP_show ,"[Gentleman, ROOT, announced, knows, show]",NNP_Gentleman JJ_announced VBZ_knows VBP_show ,"[Gentleman, ROOT, announced, knows, show]",NNP_Gentleman JJ_announced VBZ_knows VBP_show ,-3,0,1,0,0,0,0,0,0,0
Therefore  the action that I took last week was designed not to reduce that programme but to ensure that it was not exceeded.,ThereforeRB theDT actionNN thatIN IPRP tookVBD lastJJ weekNN wasVBD designedVBN notRB toTO reduceVB thatIN programmeNN butCC toTO ensureVB thatIN itPRP wasVBD notRB exceededVBN ,"root(ROOT-0, designed-11) advmod(designed-11, Therefore-1) punct(designed-11, ,-2) det(action-4, the-3) nsubjpass(designed-11, action-4) mark(took-7, that-5) nsubj(took-7, I-6) acl:relcl(action-4, took-7) amod(week-9, last-8) nmod:tmod(took-7, week-9) auxpass(designed-11, was-10) neg(reduce-14, not-12) mark(reduce-14, to-13) xcomp(designed-11, reduce-14) det(programme-16, that-15) dobj(reduce-14, programme-16) cc(reduce-14, but-17) mark(ensure-19, to-18) xcomp(designed-11, ensure-19) conj:but(reduce-14, ensure-19) mark(exceeded-24, that-20) nsubjpass(exceeded-24, it-21) auxpass(exceeded-24, was-22) neg(exceeded-24, not-23) ccomp(ensure-19, exceeded-24) punct(designed-11, .-25)",0,0,0,"root(ROOT, designed) advmod(designed, Therefore) pnct(designed, ,) det(action, the) nsbjpass(designed, action) mark(took, that) nsbj(took, I) acl:relcl(action, took) amod(week, last) nmod:tmod(took, week) axpass(designed, was) neg(redce, not) mark(redce, to) xcomp(designed, redce) det(programme, that) dobj(redce, programme) cc(redce, bt) mark(ensre, to) xcomp(designed, ensre) conj:bt(redce, ensre) mark(exceeded, that) nsbjpass(exceeded, it) axpass(exceeded, was) neg(exceeded, not) ccomp(ensre, exceeded) pnct(designed, .)","root(,VBN) advmod(VBN,RB) pnct(VBN,VBN) det(NN,DT) nsbjpass(VBN,NN) mark(VBD,IN) nsbj(VBD,PRP) acl:relcl(NN,VBD) amod(NN,JJ) nmod:tmod(VBD,NN) axpass(VBN,VBD) neg(VB,RB) mark(VB,TO) xcomp(VBN,VB) det(NN,IN) dobj(VB,NN) cc(VB,CC) mark(VB,TO) xcomp(VBN,VB) conj:bt(VB,VB) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBD) neg(VBN,RB) ccomp(VB,VBN) pnct(VBN,VBN)",[ ],[ ],19,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is what I did  and I believe that it was necessary.,ThatDT isVBZ whatWP IPRP didVBD andCC IPRP believeVBP thatIN itPRP wasVBD necessaryJJ ,"root(ROOT-0, is-2) nsubj(is-2, That-1) dobj(did-5, what-3) nsubj(did-5, I-4) ccomp(is-2, did-5) punct(did-5, ,-6) cc(did-5, and-7) nsubj(believe-9, I-8) ccomp(is-2, believe-9) conj:and(did-5, believe-9) mark(necessary-13, that-10) nsubj(necessary-13, it-11) cop(necessary-13, was-12) ccomp(believe-9, necessary-13) punct(is-2, .-14)",0,0,0,"root(ROOT, is) nsbj(is, That) dobj(did, what) nsbj(did, I) ccomp(is, did) pnct(did, ,) cc(did, and) nsbj(believe, I) ccomp(is, believe) conj:and(did, believe) mark(necessary, that) nsbj(necessary, it) cop(necessary, was) ccomp(believe, necessary) pnct(is, .)","root(,VBZ) nsbj(VBZ,DT) dobj(VBD,WP) nsbj(VBD,PRP) ccomp(VBZ,VBD) pnct(VBD,VBD) cc(VBD,CC) nsbj(VBP,PRP) ccomp(VBZ,VBP) conj:and(VBD,VBP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBD) ccomp(VBP,JJ) pnct(VBZ,VBZ)",[ ],[ ],19,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Defence whether  following his statement of 20 January on the Defence Estimates for 1981 82  he will announce what measures are currently being taken to improve the air defences of the United Kingdom air defence region.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN DefenceNNP whetherIN followingVBG hisPRP$ statementNN ofIN 20CD JanuaryNNP onIN theDT DefenceNNP EstimatesNNS forIN 1981CD 82CD hePRP willMD announceVB whatWP measuresNNS areVBP currentlyRB beingVBG takenVBN toTO improveVB theDT airNN defencesNNS ofIN theDT UnitedNNP KingdomNNP airNN defenceNN regionNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Defence-7, for-6) nmod:for(asked-1, Defence-7) mark(announce-26, whether-8) punct(announce-26, ,-9) case(statement-12, following-10) nmod:poss(statement-12, his-11) nmod:following(announce-26, statement-12) case(January-15, of-13) nummod(January-15, 20-14) nmod:of(statement-12, January-15) case(Estimates-19, on-16) det(Estimates-19, the-17) compound(Estimates-19, Defence-18) nmod:on(statement-12, Estimates-19) case(82-22, for-20) nummod(82-22, 1981-21) nmod:for(Estimates-19, 82-22) punct(announce-26, ,-23) nsubj(announce-26, he-24) aux(announce-26, will-25) ccomp(asked-1, announce-26) det(measures-28, what-27) nsubjpass(taken-32, measures-28) aux(taken-32, are-29) advmod(taken-32, currently-30) auxpass(taken-32, being-31) ccomp(announce-26, taken-32) mark(improve-34, to-33) xcomp(taken-32, improve-34) det(defences-37, the-35) compound(defences-37, air-36) dobj(improve-34, defences-37) case(region-44, of-38) det(region-44, the-39) compound(region-44, United-40) compound(region-44, Kingdom-41) compound(region-44, air-42) compound(region-44, defence-43) nmod:of(defences-37, region-44) punct(asked-1, .-45)",0,0,0,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Defence, for) nmod:for(asked, Defence) mark(annonce, whether) pnct(annonce, ,) case(statement, following) nmod:poss(statement, his) nmod:following(annonce, statement) case(Janary, of) nmmod(Janary, 20) nmod:of(statement, Janary) case(Estimates, on) det(Estimates, the) compond(Estimates, Defence) nmod:on(statement, Estimates) case(82, for) nmmod(82, 1981) nmod:for(Estimates, 82) pnct(annonce, ,) nsbj(annonce, he) ax(annonce, will) ccomp(asked, annonce) det(measres, what) nsbjpass(taken, measres) ax(taken, are) advmod(taken, crrently) axpass(taken, being) ccomp(annonce, taken) mark(improve, to) xcomp(taken, improve) det(defences, the) compond(defences, air) dobj(improve, defences) case(region, of) det(region, the) compond(region, United) compond(region, Kingdom) compond(region, air) compond(region, defence) nmod:of(defences, region) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(VBN,NNP) mark(VB,IN) pnct(VB,VB) case(NN,VBG) nmod:poss(NN,PRP$) nmod:following(VB,NN) case(NNP,IN) nmmod(NNP,CD) nmod:of(NN,NNP) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:on(NN,NNS) case(CD,IN) nmmod(CD,CD) nmod:for(NNS,CD) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) ccomp(VBN,VB) det(NNS,WP) nsbjpass(VBN,NNS) ax(VBN,VBP) advmod(VBN,RB) axpass(VBN,VBG) ccomp(VB,VBN) mark(VB,TO) xcomp(VBN,VB) det(NNS,DT) compond(NNS,NN) dobj(VB,NNS) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) compond(NN,NN) compond(NN,NN) nmod:of(NNS,NN) pnct(VBN,VBN)","[announce, State, taken, Defence, Secretary, ROOT, asked, statement, he]","[announce, State, his, taken, Defence, Estimates, January, Secretary, ROOT, asked, statement, he]",1,"[announce, State, Defence, Estimates, January, Secretary, ROOT, asked, statement, his]","[announce, State, Defence, Estimates, January, Secretary, ROOT, asked, statement, his]",VB_announce NNP_State PRP$_his VBN_taken NNP_Defence NNS_Estimates NNP_January NNP_Secretary VBN_asked NN_statement PRP_he ,"[announce, State, his, taken, Defence, Estimates, January, Secretary, ROOT, asked, statement, he]","[announce, State, his, taken, Defence, Estimates, January, Secretary, ROOT, asked, statement, he]",VB_announce NNP_State PRP$_his VBN_taken NNP_Defence NNS_Estimates NNP_January NNP_Secretary VBN_asked NN_statement PRP_he ,"[announce, State, his, taken, Defence, Estimates, January, Secretary, ROOT, asked, statement, he]",VB_announce NNP_State PRP$_his VBN_taken NNP_Defence NNS_Estimates NNP_January NNP_Secretary VBN_asked NN_statement PRP_he ,"[announce, State, his, taken, Defence, Estimates, January, Secretary, ROOT, asked, statement, he]",VB_announce NNP_State PRP$_his VBN_taken NNP_Defence NNS_Estimates NNP_January NNP_Secretary VBN_asked NN_statement PRP_he ,-3,0,2,0,0,0,0,0,0,0
A substantial programme of improvements to the United Kingdom's air defences is now in hand.,ADT substantialJJ programmeNN ofIN improvementsNNS toTO theDT UnitedNNP KingdomNNP 'sPOS airNN defencesNNS isVBZ nowRB inIN handNN ,"root(ROOT-0, hand-16) det(programme-3, A-1) amod(programme-3, substantial-2) nsubj(hand-16, programme-3) case(improvements-5, of-4) nmod:of(programme-3, improvements-5) case(defences-12, to-6) det(Kingdom-9, the-7) compound(Kingdom-9, United-8) nmod:poss(defences-12, Kingdom-9) case(Kingdom-9, 's-10) compound(defences-12, air-11) nmod:to(improvements-5, defences-12) cop(hand-16, is-13) advmod(hand-16, now-14) case(hand-16, in-15) punct(hand-16, .-17)",0,1,0,"root(ROOT, hand) det(programme, A) amod(programme, sbstantial) nsbj(hand, programme) case(improvements, of) nmod:of(programme, improvements) case(defences, to) det(Kingdom, the) compond(Kingdom, United) nmod:poss(defences, Kingdom) ""case(Kingdom, s)"", compond(defences, air) nmod:to(improvements, defences) cop(hand, is) advmod(hand, now) case(hand, in) pnct(hand, .)","root(,NN) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNS,TO) det(NNP,DT) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) compond(NNS,NN) nmod:to(NNS,NNS) cop(NN,VBZ) advmod(NN,RB) case(NN,IN) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The Sky Flash medium range missile is in service and the Sidewinder AIM 9L short range missile  produced by a European consortium  will enter RAF service next year.,TheDT SkyNNP FlashNNP mediumNN rangeNN missileNN isVBZ inIN serviceNN andCC theDT SidewinderNNP AIMNNP 9LCD shortJJ rangeNN missileNN producedVBN byIN aDT EuropeanJJ consortiumNN willMD enterVB RAFNNP serviceNN nextJJ yearNN ,"root(ROOT-0, service-9) det(missile-6, The-1) compound(missile-6, Sky-2) compound(missile-6, Flash-3) compound(missile-6, medium-4) compound(missile-6, range-5) nsubj(service-9, missile-6) cop(service-9, is-7) case(service-9, in-8) cc(service-9, and-10) det(AIM-13, the-11) compound(AIM-13, Sidewinder-12) nsubj(enter-26, AIM-13) compound(missile-17, 9L-14) amod(missile-17, short-15) compound(missile-17, range-16) nsubj(enter-26, missile-17) punct(missile-17, ,-18) acl(missile-17, produced-19) case(consortium-23, by-20) det(consortium-23, a-21) amod(consortium-23, European-22) nmod:by(produced-19, consortium-23) punct(missile-17, ,-24) aux(enter-26, will-25) conj:and(service-9, enter-26) compound(service-28, RAF-27) dobj(enter-26, service-28) amod(year-30, next-29) nmod:tmod(enter-26, year-30) punct(service-9, .-31)",0,0,0,"root(ROOT, service) det(missile, The) compond(missile, Sky) compond(missile, Flash) compond(missile, medim) compond(missile, range) nsbj(service, missile) cop(service, is) case(service, in) cc(service, and) det(AIM, the) compond(AIM, Sidewinder) nsbj(enter, AIM) compond(missile, 9L) amod(missile, short) compond(missile, range) nsbj(enter, missile) pnct(missile, ,) acl(missile, prodced) case(consortim, by) det(consortim, a) amod(consortim, Eropean) nmod:by(prodced, consortim) pnct(missile, ,) ax(enter, will) conj:and(service, enter) compond(service, RAF) dobj(enter, service) amod(year, next) nmod:tmod(enter, year) pnct(service, .)","root(,NN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) compond(NN,NN) compond(NN,NN) nsbj(NN,NN) cop(NN,VBZ) case(NN,IN) cc(NN,CC) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) compond(NN,CD) amod(NN,JJ) compond(NN,NN) nsbj(VB,NN) pnct(NN,NN) acl(NN,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:by(VBN,NN) pnct(NN,NN) ax(VB,MD) conj:and(NN,VB) compond(NN,NNP) dobj(VB,NN) amod(NN,JJ) nmod:tmod(VB,NN) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Modernisation of the ground based elements of the air defence network is well under way.,ModernisationNN ofIN theDT groundNN basedVBN elementsNNS ofIN theDT airNN defenceNN networkNN isVBZ wellRB underIN wayNN ,"root(ROOT-0, Modernisation-1) case(ground-4, of-2) det(ground-4, the-3) nmod:of(Modernisation-1, ground-4) amod(elements-6, based-5) nsubj(way-15, elements-6) case(network-11, of-7) det(network-11, the-8) compound(network-11, air-9) compound(network-11, defence-10) nmod:of(elements-6, network-11) cop(way-15, is-12) advmod(way-15, well-13) case(way-15, under-14) acl:relcl(ground-4, way-15) punct(Modernisation-1, .-16)",0,0,0,"root(ROOT, Modernisation) case(grond, of) det(grond, the) nmod:of(Modernisation, grond) amod(elements, based) nsbj(way, elements) case(network, of) det(network, the) compond(network, air) compond(network, defence) nmod:of(elements, network) cop(way, is) advmod(way, well) case(way, nder) acl:relcl(grond, way) pnct(Modernisation, .)","root(,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) amod(NNS,VBN) nsbj(NN,NNS) case(NN,IN) det(NN,DT) compond(NN,NN) compond(NN,NN) nmod:of(NNS,NN) cop(NN,VBZ) advmod(NN,RB) case(NN,IN) acl:relcl(NN,NN) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
An order has been placed for the first batch of new radars and the chosen contractor for the new data handling and communications system which will integrate all the components was announced in September 1980.,AnDT orderNN hasVBZ beenVBN placedVBN forIN theDT firstJJ batchNN ofIN newJJ radarsNNS andCC theDT chosenNN contractorNN forIN theDT newJJ dataNNS handlingNN andCC communicationsNNS systemNN whichWDT willMD integrateVB allPDT theDT componentsNNS wasVBD announcedVBN inIN SeptemberNNP 1980CD ,"root(ROOT-0, announced-32) det(order-2, An-1) nsubjpass(placed-5, order-2) aux(placed-5, has-3) auxpass(placed-5, been-4) csubjpass(announced-32, placed-5) case(batch-9, for-6) det(batch-9, the-7) amod(batch-9, first-8) nmod:for(placed-5, batch-9) case(radars-12, of-10) amod(radars-12, new-11) nmod:of(batch-9, radars-12) cc(batch-9, and-13) det(contractor-16, the-14) amod(contractor-16, chosen-15) nmod:for(placed-5, contractor-16) conj:and(batch-9, contractor-16) case(handling-21, for-17) det(handling-21, the-18) amod(handling-21, new-19) compound(handling-21, data-20) nmod:for(contractor-16, handling-21) cc(handling-21, and-22) compound(system-24, communications-23) nmod:for(contractor-16, system-24) conj:and(handling-21, system-24) nsubj(integrate-27, which-25) aux(integrate-27, will-26) acl:relcl(handling-21, integrate-27) det:predet(components-30, all-28) det(components-30, the-29) dobj(integrate-27, components-30) auxpass(announced-32, was-31) case(September-34, in-33) nmod:in(announced-32, September-34) nummod(September-34, 1980-35) punct(announced-32, .-36)",0,0,0,"root(ROOT, annonced) det(order, An) nsbjpass(placed, order) ax(placed, has) axpass(placed, been) csbjpass(annonced, placed) case(batch, for) det(batch, the) amod(batch, first) nmod:for(placed, batch) case(radars, of) amod(radars, new) nmod:of(batch, radars) cc(batch, and) det(contractor, the) amod(contractor, chosen) nmod:for(placed, contractor) conj:and(batch, contractor) case(handling, for) det(handling, the) amod(handling, new) compond(handling, data) nmod:for(contractor, handling) cc(handling, and) compond(system, commnications) nmod:for(contractor, system) conj:and(handling, system) nsbj(integrate, which) ax(integrate, will) acl:relcl(handling, integrate) det:predet(components, all) det(components, the) dobj(integrate, components) axpass(annonced, was) case(September, in) nmod:in(annonced, September) nmmod(September, 1980) pnct(annonced, .)","root(,VBN) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) csbjpass(VBN,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(VBN,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) cc(NN,CC) det(NN,DT) amod(NN,NN) nmod:for(VBN,NN) conj:and(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NNS) nmod:for(NN,NN) cc(NN,CC) compond(NN,NNS) nmod:for(NN,NN) conj:and(NN,NN) nsbj(VB,WDT) ax(VB,MD) acl:relcl(NN,VB) det:predet(NNS,PDT) det(NNS,DT) dobj(VB,NNS) axpass(VBN,VBD) case(NNP,IN) nmod:in(VBN,NNP) nmmod(NNP,CD) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Development of the air defence variant of the Tornado  with its powerful airborne intercept radar  continues  as does that of the very advanced Nimrod airborne early warning aircraft which will replace the Shackleton.,DevelopmentNNP ofIN theDT airNN defenceNN variantNN ofIN theDT TornadoNNP withIN itsPRP$ powerfulJJ airborneJJ interceptNN radarNN continuesVBZ asIN doesVBZ thatIN ofIN theDT veryRB advancedJJ NimrodNNP airborneVBD earlyJJ warningNN aircraftNN whichWDT willMD replaceVB theDT ShackletonNNP ,"root(ROOT-0, continues-18) nsubj(continues-18, Development-1) case(variant-6, of-2) det(variant-6, the-3) compound(variant-6, air-4) compound(variant-6, defence-5) nmod:of(Development-1, variant-6) case(Tornado-9, of-7) det(Tornado-9, the-8) nmod:of(variant-6, Tornado-9) punct(Development-1, ,-10) case(airborne-14, with-11) nmod:poss(airborne-14, its-12) amod(airborne-14, powerful-13) nmod:with(Development-1, airborne-14) amod(radar-16, intercept-15) dep(airborne-14, radar-16) punct(Development-1, ,-17) punct(continues-18, ,-19) mark(does-21, as-20) advcl(continues-18, does-21) dobj(does-21, that-22) case(aircraft-31, of-23) det(aircraft-31, the-24) advmod(advanced-26, very-25) amod(aircraft-31, advanced-26) compound(aircraft-31, Nimrod-27) amod(aircraft-31, airborne-28) amod(aircraft-31, early-29) compound(aircraft-31, warning-30) nmod:of(that-22, aircraft-31) nsubj(replace-34, which-32) aux(replace-34, will-33) acl:relcl(aircraft-31, replace-34) det(Shackleton-36, the-35) dobj(replace-34, Shackleton-36) punct(continues-18, .-37)",0,0,0,"root(ROOT, contines) nsbj(contines, Development) case(variant, of) det(variant, the) compond(variant, air) compond(variant, defence) nmod:of(Development, variant) case(Tornado, of) det(Tornado, the) nmod:of(variant, Tornado) pnct(Development, ,) case(airborne, with) nmod:poss(airborne, its) amod(airborne, powerfl) nmod:with(Development, airborne) amod(radar, intercept) dep(airborne, radar) pnct(Development, ,) pnct(contines, ,) mark(does, as) advcl(contines, does) dobj(does, that) case(aircraft, of) det(aircraft, the) advmod(advanced, very) amod(aircraft, advanced) compond(aircraft, Nimrod) amod(aircraft, airborne) amod(aircraft, early) compond(aircraft, warning) nmod:of(that, aircraft) nsbj(replace, which) ax(replace, will) acl:relcl(aircraft, replace) det(Shackleton, the) dobj(replace, Shackleton) pnct(contines, .)","root(,VBZ) nsbj(VBZ,NNP) case(NN,IN) det(NN,DT) compond(NN,NN) compond(NN,NN) nmod:of(NNP,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(NNP,NNP) case(VBD,IN) nmod:poss(VBD,PRP$) amod(VBD,JJ) nmod:with(NNP,VBD) amod(NN,NN) dep(VBD,NN) pnct(NNP,NNP) pnct(VBZ,VBZ) mark(VBZ,IN) advcl(VBZ,VBZ) dobj(VBZ,IN) case(NN,IN) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) compond(NN,NNP) amod(NN,VBD) amod(NN,JJ) compond(NN,NN) nmod:of(IN,NN) nsbj(VB,WDT) ax(VB,MD) acl:relcl(NN,VB) det(NNP,DT) dobj(VB,NNP) pnct(VBZ,VBZ)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The plan to modify a substantial number of Hawk training aircraft to enable them to make a contribution to local air defence is going ahead as scheduled; and the conversion of nine VC10 aircraft to the tanker role  which is now well under way  will represent a valuable addition to the RAF's air to air refuelling capability  especially in respect of the air defence force.,TheDT planNN toTO modifyVB aDT substantialJJ numberNN ofIN HawkNNP trainingNN aircraftNN toTO enableVB themPRP toTO makeVB aDT contributionNN toTO localJJ airNN defenceNN isVBZ goingVBG aheadRB asIN scheduledVBN ;: andCC theDT conversionNN ofIN nineCD VC10NNP aircraftNN toTO theDT tankerNN roleNN whichWDT isVBZ nowRB wellRB underIN wayNN willMD representVB aDT valuableJJ additionNN toTO theDT RAFNNP 'sPOS airNN toTO airNN refuellingVBG capabilityNN especiallyRB inIN respectNN ofIN theDT airNN defenceNN forceNN ,"root(ROOT-0, going-24) det(plan-2, The-1) nsubj(going-24, plan-2) mark(modify-4, to-3) acl(plan-2, modify-4) det(number-7, a-5) amod(number-7, substantial-6) dobj(modify-4, number-7) case(aircraft-11, of-8) compound(aircraft-11, Hawk-9) compound(aircraft-11, training-10) nmod:of(number-7, aircraft-11) mark(enable-13, to-12) advcl(modify-4, enable-13) dobj(enable-13, them-14) mark(make-16, to-15) xcomp(enable-13, make-16) det(contribution-18, a-17) dobj(make-16, contribution-18) case(defence-22, to-19) amod(defence-22, local-20) compound(defence-22, air-21) nmod:to(contribution-18, defence-22) aux(going-24, is-23) advmod(going-24, ahead-25) mark(scheduled-27, as-26) advcl(going-24, scheduled-27) punct(going-24, ;-28) cc(going-24, and-29) det(conversion-31, the-30) nsubj(represent-49, conversion-31) case(aircraft-35, of-32) nummod(aircraft-35, nine-33) compound(aircraft-35, VC10-34) nmod:of(conversion-31, aircraft-35) case(role-39, to-36) det(role-39, the-37) compound(role-39, tanker-38) nmod:to(conversion-31, role-39) punct(role-39, ,-40) nsubj(well-44, which-41) cop(well-44, is-42) advmod(well-44, now-43) acl:relcl(role-39, well-44) case(way-46, under-45) nmod:under(well-44, way-46) punct(conversion-31, ,-47) aux(represent-49, will-48) conj:and(going-24, represent-49) det(addition-52, a-50) amod(addition-52, valuable-51) dobj(represent-49, addition-52) case(air-57, to-53) det(RAF-55, the-54) nmod:poss(air-57, RAF-55) case(RAF-55, 's-56) nmod:to(addition-52, air-57) case(capability-61, to-58) compound(capability-61, air-59) compound(capability-61, refuelling-60) nmod:to(air-57, capability-61) punct(represent-49, ,-62) advmod(respect-65, especially-63) case(respect-65, in-64) nmod:in(represent-49, respect-65) case(force-70, of-66) det(force-70, the-67) compound(force-70, air-68) compound(force-70, defence-69) nmod:of(respect-65, force-70) punct(going-24, .-71)",0,0,0,"root(ROOT, going) det(plan, The) nsbj(going, plan) mark(modify, to) acl(plan, modify) det(nmber, a) amod(nmber, sbstantial) dobj(modify, nmber) case(aircraft, of) compond(aircraft, Hawk) compond(aircraft, training) nmod:of(nmber, aircraft) mark(enable, to) advcl(modify, enable) dobj(enable, them) mark(make, to) xcomp(enable, make) det(contribtion, a) dobj(make, contribtion) case(defence, to) amod(defence, local) compond(defence, air) nmod:to(contribtion, defence) ax(going, is) advmod(going, ahead) mark(schedled, as) advcl(going, schedled) pnct(going, ;) cc(going, and) det(conversion, the) nsbj(represent, conversion) case(aircraft, of) nmmod(aircraft, nine) compond(aircraft, VC10) nmod:of(conversion, aircraft) case(role, to) det(role, the) compond(role, tanker) nmod:to(conversion, role) pnct(role, ,) nsbj(well, which) cop(well, is) advmod(well, now) acl:relcl(role, well) case(way, nder) nmod:nder(well, way) pnct(conversion, ,) ax(represent, will) conj:and(going, represent) det(addition, a) amod(addition, valable) dobj(represent, addition) case(air, to) det(RAF, the) nmod:poss(air, RAF) ""case(RAF, s)"", nmod:to(addition, air) case(capability, to) compond(capability, air) compond(capability, refelling) nmod:to(air, capability) pnct(represent, ,) advmod(respect, especially) case(respect, in) nmod:in(represent, respect) case(force, of) det(force, the) compond(force, air) compond(force, defence) nmod:of(respect, force) pnct(going, .)","root(,VBG) det(NN,DT) nsbj(VBG,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) compond(NN,NNP) compond(NN,NN) nmod:of(NN,NN) mark(VB,TO) advcl(VB,VB) dobj(VB,PRP) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,TO) amod(NN,JJ) compond(NN,NN) nmod:to(NN,NN) ax(VBG,VBZ) advmod(VBG,RB) mark(VBN,IN) advcl(VBG,VBN) pnct(VBG,:) cc(VBG,CC) det(NN,DT) nsbj(VB,NN) case(NN,IN) nmmod(NN,CD) compond(NN,NNP) nmod:of(NN,NN) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(NN,NN) pnct(NN,NN) nsbj(RB,WDT) cop(RB,VBZ) advmod(RB,RB) acl:relcl(NN,RB) case(NN,IN) nmod:nder(RB,NN) pnct(NN,NN) ax(VB,MD) conj:and(VBG,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,TO) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) nmod:to(NN,NN) case(NN,TO) compond(NN,NN) compond(NN,VBG) nmod:to(NN,NN) pnct(VB,VB) advmod(NN,RB) case(NN,IN) nmod:in(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NN) compond(NN,NN) nmod:of(NN,NN) pnct(VBG,VBG)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I am grateful for that reply.,IPRP amVBP gratefulJJ forIN thatDT replyNN ,"root(ROOT-0, grateful-3) nsubj(grateful-3, I-1) cop(grateful-3, am-2) case(reply-6, for-4) det(reply-6, that-5) nmod:for(grateful-3, reply-6) punct(grateful-3, .-7)",0,1,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) case(reply, for) det(reply, that) nmod:for(gratefl, reply) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) case(NN,IN) det(NN,DT) nmod:for(JJ,NN) pnct(JJ,JJ)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he agree that the defence of the United Kingdom must be given a high priority as it secures sea lanes across the Channel and the east Atlantic and is vital to the reinforcement of NATO in Europe?,DoesVBZ hePRP agreeVB thatIN theDT defenceNN ofIN theDT UnitedNNP KingdomNNP mustMD beVB givenVBN aDT highJJ priorityNN asIN itPRP securesVBZ seaNN lanesNNS acrossIN theDT ChannelNNP andCC theDT eastJJ AtlanticNNP andCC isVBZ vitalJJ toTO theDT reinforcementNN ofIN NATONNP inIN EuropeNNP ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(given-13, that-4) det(defence-6, the-5) nsubjpass(given-13, defence-6) case(Kingdom-10, of-7) det(Kingdom-10, the-8) compound(Kingdom-10, United-9) nmod:of(defence-6, Kingdom-10) aux(given-13, must-11) auxpass(given-13, be-12) ccomp(agree-3, given-13) det(priority-16, a-14) amod(priority-16, high-15) dobj(given-13, priority-16) mark(secures-19, as-17) nsubj(secures-19, it-18) nsubj(vital-31, it-18) advcl(given-13, secures-19) compound(lanes-21, sea-20) dobj(secures-19, lanes-21) case(Channel-24, across-22) det(Channel-24, the-23) nmod:across(secures-19, Channel-24) cc(Channel-24, and-25) det(Atlantic-28, the-26) amod(Atlantic-28, east-27) nmod:across(secures-19, Atlantic-28) conj:and(Channel-24, Atlantic-28) cc(secures-19, and-29) cop(vital-31, is-30) advcl(given-13, vital-31) conj:and(secures-19, vital-31) case(reinforcement-34, to-32) det(reinforcement-34, the-33) nmod:to(vital-31, reinforcement-34) case(NATO-36, of-35) nmod:of(reinforcement-34, NATO-36) case(Europe-38, in-37) nmod:in(reinforcement-34, Europe-38) punct(agree-3, ?-39)",0,0,1,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(given, that) det(defence, the) nsbjpass(given, defence) case(Kingdom, of) det(Kingdom, the) compond(Kingdom, United) nmod:of(defence, Kingdom) ax(given, mst) axpass(given, be) ccomp(agree, given) det(priority, a) amod(priority, high) dobj(given, priority) mark(secres, as) nsbj(secres, it) nsbj(vital, it) advcl(given, secres) compond(lanes, sea) dobj(secres, lanes) case(Channel, across) det(Channel, the) nmod:across(secres, Channel) cc(Channel, and) det(Atlantic, the) amod(Atlantic, east) nmod:across(secres, Atlantic) conj:and(Channel, Atlantic) cc(secres, and) cop(vital, is) advcl(given, vital) conj:and(secres, vital) case(reinforcement, to) det(reinforcement, the) nmod:to(vital, reinforcement) case(NATO, of) nmod:of(reinforcement, NATO) case(Erope, in) nmod:in(reinforcement, Erope) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) ax(VBN,MD) axpass(VBN,VB) ccomp(VB,VBN) det(NN,DT) amod(NN,JJ) dobj(VBN,NN) mark(VBZ,IN) nsbj(VBZ,PRP) nsbj(JJ,PRP) advcl(VBN,VBZ) compond(NNS,NN) dobj(VBZ,NNS) case(NNP,IN) det(NNP,DT) nmod:across(VBZ,NNP) cc(NNP,CC) det(NNP,DT) amod(NNP,JJ) nmod:across(VBZ,NNP) conj:and(NNP,NNP) cc(VBZ,CC) cop(JJ,VBZ) advcl(VBN,JJ) conj:and(VBZ,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) case(NNP,IN) nmod:of(NN,NNP) case(NNP,IN) nmod:in(NN,NNP) pnct(VB,VB)","[he, ROOT, given, agree]","[he, ROOT, given, agree]",3,[ ],[ ],PRP_he VBN_given VB_agree ,"[he, ROOT, given, agree]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Publish the numbers.,PublishVB theDT numbersNNS ,"root(ROOT-0, Publish-1) det(numbers-3, the-2) dobj(Publish-1, numbers-3) punct(Publish-1, .-4)",0,1,1,"root(ROOT, Pblish) det(nmbers, the) dobj(Pblish, nmbers) pnct(Pblish, .)","root(,VB) det(NNS,DT) dobj(VB,NNS) pnct(VB,VB)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Did my hon. Friend notice the report in The Daily Telegraph this morning to the effect that the cutback in aircraft will probably increase the risk of accidents and seriously jeopardise our combat capability?,DidNNP myPRP$ honNN FriendNNP noticeVBZ theDT reportNN inIN TheDT DailyNNP TelegraphNNP thisDT morningNN toTO theDT effectNN thatIN theDT cutbackNN inIN aircraftNN willMD probablyRB increaseVB theDT riskNN ofIN accidentsNNS andCC seriouslyRB jeopardiseVB ourPRP$ combatNN capabilityNN ,"root(ROOT-0, notice-5) aux(notice-5, Did-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(notice-5, Friend-4) det(report-7, the-6) dobj(notice-5, report-7) case(Telegraph-11, in-8) det(Telegraph-11, The-9) compound(Telegraph-11, Daily-10) nmod:in(report-7, Telegraph-11) det(morning-13, this-12) nmod:tmod(notice-5, morning-13) case(effect-16, to-14) det(effect-16, the-15) nmod:to(notice-5, effect-16) mark(increase-24, that-17) det(cutback-19, the-18) nsubj(increase-24, cutback-19) nsubj(jeopardise-31, cutback-19) case(aircraft-21, in-20) nmod:in(cutback-19, aircraft-21) aux(increase-24, will-22) advmod(increase-24, probably-23) ccomp(effect-16, increase-24) det(risk-26, the-25) dobj(increase-24, risk-26) case(accidents-28, of-27) nmod:of(risk-26, accidents-28) cc(increase-24, and-29) advmod(jeopardise-31, seriously-30) ccomp(effect-16, jeopardise-31) conj:and(increase-24, jeopardise-31) nmod:poss(capability-34, our-32) compound(capability-34, combat-33) dobj(jeopardise-31, capability-34) punct(notice-5, ?-35)",0,1,0,"root(ROOT, notice) ax(notice, Did) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(notice, Friend) det(report, the) dobj(notice, report) case(Telegraph, in) det(Telegraph, The) compond(Telegraph, Daily) nmod:in(report, Telegraph) det(morning, this) nmod:tmod(notice, morning) case(effect, to) det(effect, the) nmod:to(notice, effect) mark(increase, that) det(ctback, the) nsbj(increase, ctback) nsbj(jeopardise, ctback) case(aircraft, in) nmod:in(ctback, aircraft) ax(increase, will) advmod(increase, probably) ccomp(effect, increase) det(risk, the) dobj(increase, risk) case(accidents, of) nmod:of(risk, accidents) cc(increase, and) advmod(jeopardise, seriosly) ccomp(effect, jeopardise) conj:and(increase, jeopardise) nmod:poss(capability, or) compond(capability, combat) dobj(jeopardise, capability) pnct(notice, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) det(NN,DT) dobj(VBZ,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) det(NN,DT) nmod:tmod(VBZ,NN) case(NN,TO) det(NN,DT) nmod:to(VBZ,NN) mark(VB,IN) det(NN,DT) nsbj(VB,NN) nsbj(VB,NN) case(NN,IN) nmod:in(NN,NN) ax(VB,MD) advmod(VB,RB) ccomp(NN,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) nmod:of(NN,NNS) cc(VB,CC) advmod(VB,RB) ccomp(NN,VB) conj:and(VB,VB) nmod:poss(NN,PRP$) compond(NN,NN) dobj(VB,NN) pnct(VBZ,VBZ)","[effect, morning, Friend, ROOT, report, my, notice]","[effect, morning, Friend, ROOT, report, my, notice]",9,[ ],[ ],NN_effect NN_morning NNP_Friend VB_report PRP$_my NN_notice ,"[effect, morning, Friend, ROOT, report, my, notice]","[effect, morning, Friend, ROOT, report, my, notice]",NN_effect NN_morning NNP_Friend VB_report PRP$_my NN_notice ,"[effect, morning, Friend, ROOT, report, my, notice]",NN_effect NN_morning NNP_Friend VB_report PRP$_my NN_notice ,"[effect, morning, Friend, ROOT, report, my, notice]",NN_effect NN_morning NNP_Friend VB_report PRP$_my NN_notice ,-3,0,2,2,1,2,0,0,0,0
Has he a comment to make on that?,HasVBZ hePRP aDT commentNN toTO makeVB onIN thatDT ,"root(ROOT-0, comment-4) aux(comment-4, Has-1) nsubj(comment-4, he-2) det(comment-4, a-3) mark(make-6, to-5) acl(comment-4, make-6) case(that-8, on-7) nmod:on(make-6, that-8) punct(comment-4, ?-9)",0,0,1,"root(ROOT, comment) ax(comment, Has) nsbj(comment, he) det(comment, a) mark(make, to) acl(comment, make) case(that, on) nmod:on(make, that) pnct(comment, ?)","root(,NN) ax(NN,VBZ) nsbj(NN,PRP) det(NN,DT) mark(VB,TO) acl(NN,VB) case(DT,IN) nmod:on(VB,DT) pnct(NN,NN)","[he, ROOT, comment, make]","[he, ROOT, comment, make]",9,[ ],[ ],PRP_he VB_comment VB_make ,"[he, ROOT, comment, make]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The reductions in training caused by a desire to reduce the amount of fuel used will have no impact whatsoever on the safety levels of the Royal Air Force.,TheDT reductionsNNS inIN trainingNN causedVBN byIN aDT desireNN toTO reduceVB theDT amountNN ofIN fuelNN usedVBN willMD haveVB noDT impactNN whatsoeverRB onIN theDT safetyNN levelsNNS ofIN theDT RoyalNNP AirNNP ForceNNP ,"root(ROOT-0, have-17) det(reductions-2, The-1) nsubj(have-17, reductions-2) case(training-4, in-3) nmod:in(reductions-2, training-4) acl(training-4, caused-5) case(desire-8, by-6) det(desire-8, a-7) nmod:by(caused-5, desire-8) mark(reduce-10, to-9) acl(desire-8, reduce-10) det(amount-12, the-11) dobj(reduce-10, amount-12) case(fuel-14, of-13) nmod:of(amount-12, fuel-14) acl(amount-12, used-15) aux(have-17, will-16) neg(impact-19, no-18) dobj(have-17, impact-19) advmod(impact-19, whatsoever-20) case(levels-24, on-21) det(levels-24, the-22) compound(levels-24, safety-23) nmod:on(impact-19, levels-24) case(Force-29, of-25) det(Force-29, the-26) compound(Force-29, Royal-27) compound(Force-29, Air-28) nmod:of(levels-24, Force-29) punct(have-17, .-30)",0,1,1,"root(ROOT, have) det(redctions, The) nsbj(have, redctions) case(training, in) nmod:in(redctions, training) acl(training, cased) case(desire, by) det(desire, a) nmod:by(cased, desire) mark(redce, to) acl(desire, redce) det(amont, the) dobj(redce, amont) case(fel, of) nmod:of(amont, fel) acl(amont, sed) ax(have, will) neg(impact, no) dobj(have, impact) advmod(impact, whatsoever) case(levels, on) det(levels, the) compond(levels, safety) nmod:on(impact, levels) case(Force, of) det(Force, the) compond(Force, Royal) compond(Force, Air) nmod:of(levels, Force) pnct(have, .)","root(,VB) det(NNS,DT) nsbj(VB,NNS) case(NN,IN) nmod:in(NNS,NN) acl(NN,VBN) case(NN,IN) det(NN,DT) nmod:by(VBN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) acl(NN,VBN) ax(VB,MD) neg(NN,DT) dobj(VB,NN) advmod(NN,RB) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:on(NN,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NNS,NNP) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
How many hours are flown by RAF crews in pursuit of the defence of the United Kingdom compared with the number of hours flown under the same procedures on 4 May 1979?,HowWRB manyJJ hoursNNS areVBP flownVBN byIN RAFNNP crewsNNS inIN pursuitNN ofIN theDT defenceNN ofIN theDT UnitedNNP KingdomNNP comparedVBN withIN theDT numberNN ofIN hoursNNS flownVBN underIN theDT sameJJ proceduresNNS onIN 4CD MayNNP 1979CD ,"root(ROOT-0, flown-5) advmod(many-2, How-1) amod(hours-3, many-2) nsubjpass(flown-5, hours-3) auxpass(flown-5, are-4) case(crews-8, by-6) compound(crews-8, RAF-7) nmod:agent(flown-5, crews-8) case(pursuit-10, in-9) nmod:in(flown-5, pursuit-10) case(defence-13, of-11) det(defence-13, the-12) nmod:of(pursuit-10, defence-13) case(Kingdom-17, of-14) det(Kingdom-17, the-15) compound(Kingdom-17, United-16) nmod:of(defence-13, Kingdom-17) case(number-21, compared-18) mwe(compared-18, with-19) det(number-21, the-20) advcl:compared_with(flown-5, number-21) case(hours-23, of-22) nmod:of(number-21, hours-23) acl(hours-23, flown-24) case(procedures-28, under-25) det(procedures-28, the-26) amod(procedures-28, same-27) nmod:under(flown-24, procedures-28) case(May-31, on-29) nummod(May-31, 4-30) nmod:on(procedures-28, May-31) nummod(May-31, 1979-32) punct(flown-5, ?-33)",0,1,0,"root(ROOT, flown) advmod(many, How) amod(hors, many) nsbjpass(flown, hors) axpass(flown, are) case(crews, by) compond(crews, RAF) nmod:agent(flown, crews) case(prsit, in) nmod:in(flown, prsit) case(defence, of) det(defence, the) nmod:of(prsit, defence) case(Kingdom, of) det(Kingdom, the) compond(Kingdom, United) nmod:of(defence, Kingdom) case(nmber, compared) mwe(compared, with) det(nmber, the) advcl:compared_with(flown, nmber) case(hors, of) nmod:of(nmber, hors) acl(hors, flown) case(procedres, nder) det(procedres, the) amod(procedres, same) nmod:nder(flown, procedres) case(May, on) nmmod(May, 4) nmod:on(procedres, May) nmmod(May, 1979) pnct(flown, ?)","root(,VBN) advmod(JJ,WRB) amod(NNS,JJ) nsbjpass(VBN,NNS) axpass(VBN,VBP) case(NNS,IN) compond(NNS,NNP) nmod:agent(VBN,NNS) case(NN,IN) nmod:in(VBN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) case(NN,VBN) mwe(VBN,IN) det(NN,DT) advcl:compared_with(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) acl(NNS,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:nder(VBN,NNS) case(NNP,IN) nmmod(NNP,CD) nmod:on(NNS,NNP) nmmod(NNP,CD) pnct(VBN,VBN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
No.,NoDT ,"root(ROOT-0, No-1) punct(No-1, .-2)",0,1,0,"root(ROOT, No) pnct(No, .)","root(,DT) pnct(DT,DT)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Social Services what notification is being given to all those eligible persons regarding the ending of earnings related benefit in 1982.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN SocialNNP ServicesNNPS whatWP notificationNN isVBZ beingVBG givenVBN toTO allDT thoseDT eligibleJJ personsNNS regardingVBG theDT endingVBG ofIN earningsNNS relatedJJ benefitNN inIN 1982CD ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Services-8, for-6) compound(Services-8, Social-7) nmod:for(Secretary-3, Services-8) det(notification-10, what-9) nsubjpass(given-13, notification-10) aux(given-13, is-11) auxpass(given-13, being-12) acl:relcl(Services-8, given-13) case(persons-18, to-14) det:predet(persons-18, all-15) det(persons-18, those-16) amod(persons-18, eligible-17) nmod:to(given-13, persons-18) case(ending-21, regarding-19) det(ending-21, the-20) nmod:regarding(persons-18, ending-21) case(earnings-23, of-22) nmod:of(ending-21, earnings-23) amod(benefit-25, related-24) amod(earnings-23, benefit-25) case(1982-27, in-26) nmod:in(benefit-25, 1982-27) punct(asked-1, .-28)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Services, for) compond(Services, Social) nmod:for(Secretary, Services) det(notification, what) nsbjpass(given, notification) ax(given, is) axpass(given, being) acl:relcl(Services, given) case(persons, to) det:predet(persons, all) det(persons, those) amod(persons, eligible) nmod:to(given, persons) case(ending, regarding) det(ending, the) nmod:regarding(persons, ending) case(earnings, of) nmod:of(ending, earnings) amod(benefit, related) amod(earnings, benefit) case(1982, in) nmod:in(benefit, 1982) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNPS,IN) compond(NNPS,NNP) nmod:for(NNP,NNPS) det(NN,WP) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBG) acl:relcl(NNPS,VBN) case(NNS,TO) det:predet(NNS,DT) det(NNS,DT) amod(NNS,JJ) nmod:to(VBN,NNS) case(VBG,VBG) det(VBG,DT) nmod:regarding(NNS,VBG) case(NNS,IN) nmod:of(VBG,NNS) amod(NN,JJ) amod(NNS,NN) case(CD,IN) nmod:in(NN,CD) pnct(VBN,VBN)","[given, Services, ROOT, asked, State, Secretary]","[given, Services, ROOT, asked, State, Secretary]",1,"[given, Services, ROOT, asked, State, Secretary]","[given, Services, ROOT, asked, State, Secretary]",VBN_given NNPS_Services VBN_asked NNP_State NNP_Secretary ,"[given, Services, ROOT, asked, State, Secretary]","[given, Services, ROOT, asked, State, Secretary]",VBN_given NNPS_Services VBN_asked NNP_State NNP_Secretary ,"[given, Services, ROOT, asked, State, Secretary]",VBN_given NNPS_Services VBN_asked NNP_State NNP_Secretary ,"[given, Services, ROOT, asked, State, Secretary]",VBN_given NNPS_Services VBN_asked NNP_State NNP_Secretary ,-3,0,1,0,0,0,0,0,0,0
Earnings related supplement will continue for people whose entitlement to short term benefits starts before 3 January 1982  subject to a final cutoff date of 30 June 1982.,EarningsNNS relatedVBN supplementNN willMD continueVB forIN peopleNNS whoseWP$ entitlementNN toTO shortVB termNN benefitsNNS startsVBZ beforeIN 3CD JanuaryNNP 1982CD subjectNN toTO aDT finalJJ cutoffNN dateNN ofIN 30CD JuneNNP 1982CD ,"root(ROOT-0, continue-5) compound(supplement-3, Earnings-1) amod(supplement-3, related-2) nsubj(continue-5, supplement-3) aux(continue-5, will-4) case(people-7, for-6) nmod:for(continue-5, people-7) nmod:poss(entitlement-9, whose-8) nsubj(starts-14, entitlement-9) case(benefits-13, to-10) amod(benefits-13, short-11) compound(benefits-13, term-12) nmod:to(entitlement-9, benefits-13) acl:relcl(people-7, starts-14) case(January-17, before-15) nummod(January-17, 3-16) nmod:before(starts-14, January-17) nummod(January-17, 1982-18) punct(continue-5, ,-19) xcomp(continue-5, subject-20) case(date-25, to-21) det(date-25, a-22) amod(date-25, final-23) compound(date-25, cutoff-24) nmod:to(subject-20, date-25) case(June-28, of-26) nummod(June-28, 30-27) nmod:of(date-25, June-28) nummod(June-28, 1982-29) punct(continue-5, .-30)",0,0,0,"root(ROOT, contine) compond(spplement, Earnings) amod(spplement, related) nsbj(contine, spplement) ax(contine, will) case(people, for) nmod:for(contine, people) nmod:poss(entitlement, whose) nsbj(starts, entitlement) case(benefits, to) amod(benefits, short) compond(benefits, term) nmod:to(entitlement, benefits) acl:relcl(people, starts) case(Janary, before) nmmod(Janary, 3) nmod:before(starts, Janary) nmmod(Janary, 1982) pnct(contine, ,) xcomp(contine, sbject) case(date, to) det(date, a) amod(date, final) compond(date, ctoff) nmod:to(sbject, date) case(Jne, of) nmmod(Jne, 30) nmod:of(date, Jne) nmmod(Jne, 1982) pnct(contine, .)","root(,VB) compond(NN,NNS) amod(NN,VBN) nsbj(VB,NN) ax(VB,MD) case(NNS,IN) nmod:for(VB,NNS) nmod:poss(NN,WP$) nsbj(VBZ,NN) case(NNS,TO) amod(NNS,VB) compond(NNS,NN) nmod:to(NN,NNS) acl:relcl(NNS,VBZ) case(NNP,IN) nmmod(NNP,CD) nmod:before(VBZ,NNP) nmmod(NNP,CD) pnct(VB,VB) xcomp(VB,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:to(NN,NN) case(NNP,IN) nmmod(NNP,CD) nmod:of(NN,NNP) nmmod(NNP,CD) pnct(VB,VB)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
People who become eligible for short term benefits after 3 January 1982 will be affected by the change unless they have claimed benefit in the preceding eight weeks.,PeopleNNS whoWP becomeVBP eligibleJJ forIN shortJJ termNN benefitsNNS afterIN 3CD JanuaryNNP 1982CD willMD beVB affectedVBN byIN theDT changeNN unlessIN theyPRP haveVBP claimedVBN benefitNN inIN theDT precedingVBG eightCD weeksNNS ,"root(ROOT-0, affected-15) nsubjpass(affected-15, People-1) nsubj(become-3, who-2) acl:relcl(People-1, become-3) xcomp(become-3, eligible-4) case(benefits-8, for-5) amod(benefits-8, short-6) compound(benefits-8, term-7) nmod:for(eligible-4, benefits-8) case(January-11, after-9) nummod(January-11, 3-10) nmod:after(become-3, January-11) nummod(January-11, 1982-12) aux(affected-15, will-13) auxpass(affected-15, be-14) case(change-18, by-16) det(change-18, the-17) nmod:agent(affected-15, change-18) mark(claimed-22, unless-19) nsubj(claimed-22, they-20) aux(claimed-22, have-21) advcl(affected-15, claimed-22) dobj(claimed-22, benefit-23) case(weeks-28, in-24) det(weeks-28, the-25) amod(weeks-28, preceding-26) nummod(weeks-28, eight-27) nmod:in(benefit-23, weeks-28) punct(affected-15, .-29)",0,0,0,"root(ROOT, affected) nsbjpass(affected, People) nsbj(become, who) acl:relcl(People, become) xcomp(become, eligible) case(benefits, for) amod(benefits, short) compond(benefits, term) nmod:for(eligible, benefits) case(Janary, after) nmmod(Janary, 3) nmod:after(become, Janary) nmmod(Janary, 1982) ax(affected, will) axpass(affected, be) case(change, by) det(change, the) nmod:agent(affected, change) mark(claimed, nless) nsbj(claimed, they) ax(claimed, have) advcl(affected, claimed) dobj(claimed, benefit) case(weeks, in) det(weeks, the) amod(weeks, preceding) nmmod(weeks, eight) nmod:in(benefit, weeks) pnct(affected, .)","root(,VBN) nsbjpass(VBN,NNS) nsbj(VBP,WP) acl:relcl(NNS,VBP) xcomp(VBP,JJ) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:for(JJ,NNS) case(NNP,IN) nmmod(NNP,CD) nmod:after(VBP,NNP) nmmod(NNP,CD) ax(VBN,MD) axpass(VBN,VB) case(NN,IN) det(NN,DT) nmod:agent(VBN,NN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) advcl(VBN,VBN) dobj(VBN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,VBG) nmmod(NNS,CD) nmod:in(NN,NNS) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
They will be informed.,TheyPRP willMD beVB informedVBN ,"root(ROOT-0, informed-4) nsubjpass(informed-4, They-1) aux(informed-4, will-2) auxpass(informed-4, be-3) punct(informed-4, .-5)",0,0,0,"root(ROOT, informed) nsbjpass(informed, They) ax(informed, will) axpass(informed, be) pnct(informed, .)","root(,VBN) nsbjpass(VBN,PRP) ax(VBN,MD) axpass(VBN,VB) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am considering how best to give advance notice of the change.,IPRP amVBP consideringVBG howWRB bestJJS toTO giveVB advanceNN noticeNN ofIN theDT changeNN ,"root(ROOT-0, considering-3) nsubj(considering-3, I-1) aux(considering-3, am-2) advmod(best-5, how-4) ccomp(considering-3, best-5) mark(give-7, to-6) xcomp(best-5, give-7) compound(notice-9, advance-8) dobj(give-7, notice-9) case(change-12, of-10) det(change-12, the-11) nmod:of(notice-9, change-12) punct(considering-3, .-13)",0,0,1,"root(ROOT, considering) nsbj(considering, I) ax(considering, am) advmod(best, how) ccomp(considering, best) mark(give, to) xcomp(best, give) compond(notice, advance) dobj(give, notice) case(change, of) det(change, the) nmod:of(notice, change) pnct(considering, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) advmod(JJS,WRB) ccomp(VBG,JJS) mark(VB,TO) xcomp(JJS,VB) compond(NN,NN) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBG,VBG)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is not this a disgraceful policy?,IsVBZ notRB thisDT aDT disgracefulJJ policyNN ,"root(ROOT-0, policy-6) cop(policy-6, Is-1) neg(policy-6, not-2) det(policy-6, this-3) det(policy-6, a-4) amod(policy-6, disgraceful-5) punct(policy-6, ?-7)",0,0,0,"root(ROOT, policy) cop(policy, Is) neg(policy, not) det(policy, this) det(policy, a) amod(policy, disgracefl) pnct(policy, ?)","root(,NN) cop(NN,VBZ) neg(NN,RB) det(NN,DT) det(NN,DT) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In these circumstances  and at a time when it is not realistic to try to maintain the extravagant programmes that we inherited from our predecessors  it seemed right to make savings in respect of this benefit.,InIN theseDT circumstancesNNS andCC atIN aDT timeNN whenWRB itPRP isVBZ notRB realisticJJ toTO tryVB toTO maintainVB theDT extravagantJJ programmesNNS thatIN wePRP inheritedVBD fromIN ourPRP$ predecessorsNNS itPRP seemedVBD rightJJ toTO makeVB savingsNNS inIN respectNN ofIN thisDT benefitNN ,"root(ROOT-0, circumstances-3) case(circumstances-3, In-1) det(circumstances-3, these-2) punct(circumstances-3, ,-4) root(,-4, and-5) case(time-8, at-6) det(time-8, a-7) nmod:at(and-5, time-8) advmod(realistic-13, when-9) nsubj(realistic-13, it-10) cop(realistic-13, is-11) neg(realistic-13, not-12) acl:relcl(time-8, realistic-13) mark(try-15, to-14) xcomp(realistic-13, try-15) mark(maintain-17, to-16) xcomp(try-15, maintain-17) det(programmes-20, the-18) amod(programmes-20, extravagant-19) dobj(maintain-17, programmes-20) mark(inherited-23, that-21) nsubj(inherited-23, we-22) dep(programmes-20, inherited-23) case(predecessors-26, from-24) nmod:poss(predecessors-26, our-25) nmod:from(inherited-23, predecessors-26) punct(inherited-23, ,-27) nsubj(seemed-29, it-28) parataxis(inherited-23, seemed-29) xcomp(seemed-29, right-30) mark(make-32, to-31) acl(right-30, make-32) dobj(make-32, savings-33) case(respect-35, in-34) nmod:in(make-32, respect-35) case(benefit-38, of-36) det(benefit-38, this-37) nmod:of(respect-35, benefit-38) punct(and-5, .-39)",0,0,0,"root(ROOT, circmstances) case(circmstances, In) det(circmstances, these) pnct(circmstances, ,) root(,, and) case(time, at) det(time, a) nmod:at(and, time) advmod(realistic, when) nsbj(realistic, it) cop(realistic, is) neg(realistic, not) acl:relcl(time, realistic) mark(try, to) xcomp(realistic, try) mark(maintain, to) xcomp(try, maintain) det(programmes, the) amod(programmes, extravagant) dobj(maintain, programmes) mark(inherited, that) nsbj(inherited, we) dep(programmes, inherited) case(predecessors, from) nmod:poss(predecessors, or) nmod:from(inherited, predecessors) pnct(inherited, ,) nsbj(seemed, it) parataxis(inherited, seemed) xcomp(seemed, right) mark(make, to) acl(right, make) dobj(make, savings) case(respect, in) nmod:in(make, respect) case(benefit, of) det(benefit, this) nmod:of(respect, benefit) pnct(and, .)","root(,NNS) case(NNS,IN) det(NNS,DT) pnct(NNS,NNS) root(NNSNNSCC) case(NN,IN) det(NN,DT) nmod:at(CC,NN) advmod(JJ,WRB) nsbj(JJ,PRP) cop(JJ,VBZ) neg(JJ,RB) acl:relcl(NN,JJ) mark(VB,TO) xcomp(JJ,VB) mark(VB,TO) xcomp(VB,VB) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) mark(VBD,IN) nsbj(VBD,PRP) dep(NNS,VBD) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:from(VBD,NNS) pnct(VBD,VBD) nsbj(VBD,PRP) parataxis(VBD,VBD) xcomp(VBD,JJ) mark(VB,TO) acl(JJ,VB) dobj(VB,NNS) case(NN,IN) nmod:in(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(CC,CC)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I have told the hon. Gentleman that we shall want to ensure that those who may become entitled to short term benefits after January who by definition are unknown will be given advance notice of the changes that Parliament has approved.,IPRP haveVBP toldVBN theDT honNN GentlemanNNP thatIN wePRP shallMD wantVB toTO ensureVB thatIN thoseDT whoWP mayMD becomeVB entitledJJ toTO shortVB termNN benefitsNNS afterIN JanuaryNNP whoWP byIN definitionNN areVBP unknownJJ willMD beVB givenVBN advanceJJ noticeNN ofIN theDT changesNNS thatWDT ParliamentNNP hasVBZ approvedVBN ,"root(ROOT-0, told-3) nsubj(told-3, I-1) aux(told-3, have-2) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) dobj(told-3, Gentleman-6) mark(want-10, that-7) nsubj(want-10, we-8) aux(want-10, shall-9) ccomp(told-3, want-10) mark(ensure-12, to-11) xcomp(want-10, ensure-12) mark(given-32, that-13) nsubjpass(given-32, those-14) nsubj(become-17, who-15) aux(become-17, may-16) acl:relcl(those-14, become-17) xcomp(become-17, entitled-18) case(benefits-22, to-19) amod(benefits-22, short-20) compound(benefits-22, term-21) nmod:to(entitled-18, benefits-22) case(January-24, after-23) nmod:after(benefits-22, January-24) nsubj(unknown-29, who-25) case(definition-27, by-26) nmod:by(unknown-29, definition-27) cop(unknown-29, are-28) acl:relcl(January-24, unknown-29) aux(given-32, will-30) auxpass(given-32, be-31) ccomp(ensure-12, given-32) compound(notice-34, advance-33) dobj(given-32, notice-34) case(changes-37, of-35) det(changes-37, the-36) nmod:of(notice-34, changes-37) dobj(approved-41, that-38) nsubj(approved-41, Parliament-39) aux(approved-41, has-40) acl:relcl(changes-37, approved-41) punct(told-3, .-42)",0,0,1,"root(ROOT, told) nsbj(told, I) ax(told, have) det(Gentleman, the) compond(Gentleman, hon.) dobj(told, Gentleman) mark(want, that) nsbj(want, we) ax(want, shall) ccomp(told, want) mark(ensre, to) xcomp(want, ensre) mark(given, that) nsbjpass(given, those) nsbj(become, who) ax(become, may) acl:relcl(those, become) xcomp(become, entitled) case(benefits, to) amod(benefits, short) compond(benefits, term) nmod:to(entitled, benefits) case(Janary, after) nmod:after(benefits, Janary) nsbj(nknown, who) case(definition, by) nmod:by(nknown, definition) cop(nknown, are) acl:relcl(Janary, nknown) ax(given, will) axpass(given, be) ccomp(ensre, given) compond(notice, advance) dobj(given, notice) case(changes, of) det(changes, the) nmod:of(notice, changes) dobj(approved, that) nsbj(approved, Parliament) ax(approved, has) acl:relcl(changes, approved) pnct(told, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) det(NNP,DT) compond(NNP,NNP) dobj(VBN,NNP) mark(VB,WDT) nsbj(VB,PRP) ax(VB,MD) ccomp(VBN,VB) mark(VB,TO) xcomp(VB,VB) mark(VBN,WDT) nsbjpass(VBN,DT) nsbj(VB,WP) ax(VB,MD) acl:relcl(DT,VB) xcomp(VB,JJ) case(NNS,TO) amod(NNS,VB) compond(NNS,NN) nmod:to(JJ,NNS) case(NNP,IN) nmod:after(NNS,NNP) nsbj(JJ,WP) case(NN,IN) nmod:by(JJ,NN) cop(JJ,VBP) acl:relcl(NNP,JJ) ax(VBN,MD) axpass(VBN,VB) ccomp(VB,VBN) compond(NN,JJ) dobj(VBN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) dobj(VBN,WDT) nsbj(VBN,NNP) ax(VBN,VBZ) acl:relcl(NNS,VBN) pnct(VBN,VBN)","[I, ROOT, Gentleman, told, want]","[I, ROOT, Gentleman, told, want]",4,"[I, ROOT, Gentleman, told, want]","[I, ROOT, Gentleman, told, want]",PRP_I NNP_Gentleman VBN_told VB_want ,"[I, ROOT, Gentleman, told, want]","[I, ROOT, Gentleman, told, want]",PRP_I NNP_Gentleman VBN_told VB_want ,"[I, ROOT, Gentleman, told, want]",PRP_I NNP_Gentleman VBN_told VB_want ,"[I, ROOT, Gentleman, told, want]",PRP_I NNP_Gentleman VBN_told VB_want ,-3,0,2,0,0,0,0,0,0,0
Will my right hon. Friend explain to those in receipt of the earnings related supplement that owing to the sharp increase in social security benefits generally it is right that top priority should be given to fulfilling the Government's commitment to those on retirement pension  to the elderly  to the disabled and to other groups that are in the greatest need?,WillMD myPRP$ rightJJ honNN FriendNNP explainNN toTO thoseDT inIN receiptNN ofIN theDT earningsNNS relatedVBN supplementNN thatWDT owingVBG toTO theDT sharpJJ increaseNN inIN socialJJ securityNN benefitsNNS generallyRB itPRP isVBZ rightJJ thatIN topJJ priorityNN shouldMD beVB givenVBN toTO fulfillingVBG theDT GovernmentNNP 'sPOS commitmentNN toTO thoseDT onIN retirementNN pensionNN toTO theDT elderlyJJ toTO theDT disabledJJ andCC toTO otherJJ groupsNNS thatWDT areVBP inIN theDT greatestJJS needNN ,"root(ROOT-0, explain-6) aux(explain-6, Will-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(explain-6, Friend-5) case(those-8, to-7) nmod:to(explain-6, those-8) case(receipt-10, in-9) nmod:in(those-8, receipt-10) case(supplement-15, of-11) det(supplement-15, the-12) compound(supplement-15, earnings-13) amod(supplement-15, related-14) nmod:of(receipt-10, supplement-15) acl(those-8, that-16) dep(that-16, owing-17) case(increase-21, to-18) det(increase-21, the-19) amod(increase-21, sharp-20) nmod:to(owing-17, increase-21) case(benefits-25, in-22) amod(benefits-25, social-23) compound(benefits-25, security-24) nmod:in(increase-21, benefits-25) advmod(right-29, generally-26) nsubj(right-29, it-27) nsubj(disabled-54, it-27) cop(right-29, is-28) dep(owing-17, right-29) mark(given-35, that-30) amod(priority-32, top-31) nsubjpass(given-35, priority-32) aux(given-35, should-33) auxpass(given-35, be-34) ccomp(right-29, given-35) mark(fulfilling-37, to-36) xcomp(given-35, fulfilling-37) det(Government-39, the-38) nmod:poss(commitment-41, Government-39) case(Government-39, 's-40) dobj(fulfilling-37, commitment-41) case(those-43, to-42) nmod:to(commitment-41, those-43) case(pension-46, on-44) compound(pension-46, retirement-45) nmod:on(fulfilling-37, pension-46) punct(right-29, ,-47) case(elderly-50, to-48) det(elderly-50, the-49) nmod:to(right-29, elderly-50) punct(right-29, ,-51) case(disabled-54, to-52) det(disabled-54, the-53) dep(owing-17, disabled-54) conj:and(right-29, disabled-54) cc(right-29, and-55) case(groups-58, to-56) amod(groups-58, other-57) dep(owing-17, groups-58) conj:and(right-29, groups-58) nsubj(need-64, that-59) cop(need-64, are-60) case(need-64, in-61) det(need-64, the-62) amod(need-64, greatest-63) acl:relcl(groups-58, need-64) punct(owing-17, ?-65)",0,0,0,"root(ROOT, explain) ax(explain, Will) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(explain, Friend) case(those, to) nmod:to(explain, those) case(receipt, in) nmod:in(those, receipt) case(spplement, of) det(spplement, the) compond(spplement, earnings) amod(spplement, related) nmod:of(receipt, spplement) acl(those, that) dep(that, owing) case(increase, to) det(increase, the) amod(increase, sharp) nmod:to(owing, increase) case(benefits, in) amod(benefits, social) compond(benefits, secrity) nmod:in(increase, benefits) advmod(right, generally) nsbj(right, it) nsbj(disabled, it) cop(right, is) dep(owing, right) mark(given, that) amod(priority, top) nsbjpass(given, priority) ax(given, shold) axpass(given, be) ccomp(right, given) mark(flfilling, to) xcomp(given, flfilling) det(Government, the) nmod:poss(commitment, Government) ""case(Government, s)"", dobj(flfilling, commitment) case(those, to) nmod:to(commitment, those) case(pension, on) compond(pension, retirement) nmod:on(flfilling, pension) pnct(right, ,) case(elderly, to) det(elderly, the) nmod:to(right, elderly) pnct(right, ,) case(disabled, to) det(disabled, the) dep(owing, disabled) conj:and(right, disabled) cc(right, and) case(grops, to) amod(grops, other) dep(owing, grops) conj:and(right, grops) nsbj(need, that) cop(need, are) case(need, in) det(need, the) amod(need, greatest) acl:relcl(grops, need) pnct(owing, ?)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) case(DT,TO) nmod:to(NN,DT) case(NN,IN) nmod:in(DT,NN) case(NN,IN) det(NN,DT) compond(NN,NNS) amod(NN,VBN) nmod:of(NN,NN) acl(DT,WDT) dep(WDT,VBG) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VBG,NN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:in(NN,NNS) advmod(JJ,RB) nsbj(JJ,PRP) nsbj(JJ,PRP) cop(JJ,VBZ) dep(VBG,JJ) mark(VBN,WDT) amod(NN,JJ) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) mark(VBG,TO) xcomp(VBN,VBG) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) dobj(VBG,NN) case(DT,TO) nmod:to(NN,DT) case(NN,IN) compond(NN,NN) nmod:on(VBG,NN) pnct(JJ,JJ) case(JJ,TO) det(JJ,DT) nmod:to(JJ,JJ) pnct(JJ,JJ) case(JJ,TO) det(JJ,DT) dep(VBG,JJ) conj:and(JJ,JJ) cc(JJ,CC) case(NNS,TO) amod(NNS,JJ) dep(VBG,NNS) conj:and(JJ,NNS) nsbj(NN,WDT) cop(NN,VBP) case(NN,IN) det(NN,DT) amod(NN,JJS) acl:relcl(NNS,NN) pnct(VBG,VBG)","[explain, those, commitment, right, those, fulfilling, Friend, Government, ROOT, my]","[my, explain, commitment, those, fulfilling, Friend, Government, ROOT, those]",5,"[commitment, Government, fulfilling, those]","[commitment, Government, fulfilling, those]",PRP$_my NN_explain NN_commitment DT_those VBG_fulfilling NNP_Friend NNP_Government DT_those ,"[my, explain, commitment, those, fulfilling, Friend, Government, ROOT, those]","[my, explain, commitment, those, fulfilling, Friend, Government, ROOT, those]",PRP$_my NN_explain NN_commitment DT_those VBG_fulfilling NNP_Friend NNP_Government DT_those ,"[my, explain, commitment, those, fulfilling, Friend, Government, ROOT, those]",PRP$_my NN_explain NN_commitment DT_those VBG_fulfilling NNP_Friend NNP_Government DT_those ,"[my, explain, commitment, those, fulfilling, Friend, Government, ROOT, those]",PRP$_my NN_explain NN_commitment DT_those VBG_fulfilling NNP_Friend NNP_Government DT_those ,-3,0,1,1,1,1,1,1,1,1
It is right that we have maintained our commitment to retain the real value of the pension.,ItPRP isVBZ rightJJ thatIN wePRP haveVBP maintainedVBN ourPRP$ commitmentNN toTO retainVB theDT realJJ valueNN ofIN theDT pensionNN ,"root(ROOT-0, right-3) nsubj(right-3, It-1) cop(right-3, is-2) mark(maintained-7, that-4) nsubj(maintained-7, we-5) aux(maintained-7, have-6) ccomp(right-3, maintained-7) nmod:poss(commitment-9, our-8) dobj(maintained-7, commitment-9) mark(retain-11, to-10) acl(commitment-9, retain-11) det(value-14, the-12) amod(value-14, real-13) dobj(retain-11, value-14) case(pension-17, of-15) det(pension-17, the-16) nmod:of(value-14, pension-17) punct(right-3, .-18)",0,0,0,"root(ROOT, right) nsbj(right, It) cop(right, is) mark(maintained, that) nsbj(maintained, we) ax(maintained, have) ccomp(right, maintained) nmod:poss(commitment, or) dobj(maintained, commitment) mark(retain, to) acl(commitment, retain) det(vale, the) amod(vale, real) dobj(retain, vale) case(pension, of) det(pension, the) nmod:of(vale, pension) pnct(right, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(JJ,VBN) nmod:poss(NN,PRP$) dobj(VBN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We have maintained also the real value of the safety net.,WePRP haveVBP maintainedVBN alsoRB theDT realJJ valueNN ofIN theDT safetyNN netNN ,"root(ROOT-0, maintained-3) nsubj(maintained-3, We-1) aux(maintained-3, have-2) advmod(value-7, also-4) det(value-7, the-5) amod(value-7, real-6) dobj(maintained-3, value-7) case(net-11, of-8) det(net-11, the-9) compound(net-11, safety-10) nmod:of(value-7, net-11) punct(maintained-3, .-12)",0,0,0,"root(ROOT, maintained) nsbj(maintained, We) ax(maintained, have) advmod(vale, also) det(vale, the) amod(vale, real) dobj(maintained, vale) case(net, of) det(net, the) compond(net, safety) nmod:of(vale, net) pnct(maintained, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(NN,RB) det(NN,DT) amod(NN,JJ) dobj(VBN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) pnct(VBN,VBN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We have made other improvements in benefits for particularly needy groups  such as one parent families and the elderly  who are in need of heating help.,WePRP haveVBP madeVBN otherJJ improvementsNNS inIN benefitsNNS forIN particularlyRB needyJJ groupsNNS suchJJ asIN oneCD parentNN familiesNNS andCC theDT elderlyJJ whoWP areVBP inIN needNN ofIN heatingVBG helpNN ,"root(ROOT-0, made-3) nsubj(made-3, We-1) aux(made-3, have-2) amod(improvements-5, other-4) dobj(made-3, improvements-5) case(benefits-7, in-6) nmod:in(improvements-5, benefits-7) case(groups-11, for-8) advmod(groups-11, particularly-9) amod(groups-11, needy-10) nmod:for(benefits-7, groups-11) punct(groups-11, ,-12) case(families-17, such-13) mwe(such-13, as-14) nummod(families-17, one-15) compound(families-17, parent-16) nmod:such_as(groups-11, families-17) cc(families-17, and-18) det(elderly-20, the-19) nmod:such_as(groups-11, elderly-20) conj:and(families-17, elderly-20) punct(groups-11, ,-21) nsubj(need-25, who-22) cop(need-25, are-23) case(need-25, in-24) acl:relcl(groups-11, need-25) case(heating-27, of-26) nmod:of(need-25, heating-27) dep(heating-27, help-28) punct(made-3, .-29)",0,0,0,"root(ROOT, made) nsbj(made, We) ax(made, have) amod(improvements, other) dobj(made, improvements) case(benefits, in) nmod:in(improvements, benefits) case(grops, for) advmod(grops, particlarly) amod(grops, needy) nmod:for(benefits, grops) pnct(grops, ,) case(families, sch) mwe(sch, as) nmmod(families, one) compond(families, parent) nmod:sch_as(grops, families) cc(families, and) det(elderly, the) nmod:sch_as(grops, elderly) conj:and(families, elderly) pnct(grops, ,) nsbj(need, who) cop(need, are) case(need, in) acl:relcl(grops, need) case(heating, of) nmod:of(need, heating) dep(heating, help) pnct(made, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) amod(NNS,JJ) dobj(VBN,NNS) case(NNS,IN) nmod:in(NNS,NNS) case(NNS,IN) advmod(NNS,RB) amod(NNS,JJ) nmod:for(NNS,NNS) pnct(NNS,NNS) case(NNS,JJ) mwe(JJ,IN) nmmod(NNS,CD) compond(NNS,NN) nmod:sch_as(NNS,NNS) cc(NNS,CC) det(JJ,DT) nmod:sch_as(NNS,JJ) conj:and(NNS,JJ) pnct(NNS,NNS) nsbj(NN,WP) cop(NN,VBP) case(NN,IN) acl:relcl(NNS,NN) case(VBG,IN) nmod:of(NN,VBG) dep(VBG,NN) pnct(VBN,VBN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It was unrealistic to carry out those important social priorities and at the same time maintain in full the existing programme of social security benefits.,ItPRP wasVBD unrealisticJJ toTO carryVB outRP thoseDT importantJJ socialJJ prioritiesNNS andCC atIN theDT sameJJ timeNN maintainNN inIN fullJJ theDT existingVBG programmeNN ofIN socialJJ securityNN benefitsNNS ,"root(ROOT-0, unrealistic-3) nsubj(unrealistic-3, It-1) cop(unrealistic-3, was-2) mark(carry-5, to-4) xcomp(unrealistic-3, carry-5) compound:prt(carry-5, out-6) det(priorities-10, those-7) amod(priorities-10, important-8) amod(priorities-10, social-9) dobj(carry-5, priorities-10) cc(carry-5, and-11) case(time-15, at-12) det(time-15, the-13) amod(time-15, same-14) xcomp(unrealistic-3, time-15) conj:and(carry-5, time-15) acl(time-15, maintain-16) case(programme-21, in-17) amod(programme-21, full-18) det(programme-21, the-19) amod(programme-21, existing-20) nmod:in(maintain-16, programme-21) case(benefits-25, of-22) amod(benefits-25, social-23) compound(benefits-25, security-24) nmod:of(programme-21, benefits-25) punct(unrealistic-3, .-26)",0,0,0,"root(ROOT, nrealistic) nsbj(nrealistic, It) cop(nrealistic, was) mark(carry, to) xcomp(nrealistic, carry) compond:prt(carry, ot) det(priorities, those) amod(priorities, important) amod(priorities, social) dobj(carry, priorities) cc(carry, and) case(time, at) det(time, the) amod(time, same) xcomp(nrealistic, time) conj:and(carry, time) acl(time, maintain) case(programme, in) amod(programme, fll) det(programme, the) amod(programme, existing) nmod:in(maintain, programme) case(benefits, of) amod(benefits, social) compond(benefits, secrity) nmod:of(programme, benefits) pnct(nrealistic, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBD) mark(VB,TO) xcomp(JJ,VB) compond:prt(VB,RP) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) dobj(VB,NNS) cc(VB,CC) case(NN,IN) det(NN,DT) amod(NN,JJ) xcomp(JJ,NN) conj:and(VB,NN) acl(NN,NN) case(NN,IN) amod(NN,JJ) det(NN,DT) amod(NN,VBG) nmod:in(NN,NN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The House has approved the changes and they will take effect from 3 January.,TheDT HouseNNP hasVBZ approvedVBN theDT changesNNS andCC theyPRP willMD takeVB effectNN fromIN 3CD JanuaryNNP ,"root(ROOT-0, approved-4) det(House-2, The-1) nsubj(approved-4, House-2) aux(approved-4, has-3) det(changes-6, the-5) dobj(approved-4, changes-6) cc(approved-4, and-7) nsubj(take-10, they-8) aux(take-10, will-9) conj:and(approved-4, take-10) dobj(take-10, effect-11) case(January-14, from-12) nummod(January-14, 3-13) nmod:from(take-10, January-14) punct(approved-4, .-15)",0,0,1,"root(ROOT, approved) det(Hose, The) nsbj(approved, Hose) ax(approved, has) det(changes, the) dobj(approved, changes) cc(approved, and) nsbj(take, they) ax(take, will) conj:and(approved, take) dobj(take, effect) case(Janary, from) nmmod(Janary, 3) nmod:from(take, Janary) pnct(approved, .)","root(,VBN) det(NNP,DT) nsbj(VBN,NNP) ax(VBN,VBZ) det(NNS,DT) dobj(VBN,NNS) cc(VBN,CC) nsbj(VB,PRP) ax(VB,MD) conj:and(VBN,VB) dobj(VB,NN) case(NNP,IN) nmmod(NNP,CD) nmod:from(VB,NNP) pnct(VBN,VBN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the right hon. Gentleman confirm that the earnings related supplement that would have been payable to an unemployed person from next January would have been £11.10 a week?,WillMD theDT rightJJ honNN GentlemanNNP confirmNN thatIN theDT earningsNNS relatedVBN supplementNN thatWDT wouldMD haveVB beenVBN payableJJ toTO anDT unemployedJJ personNN fromIN nextJJ JanuaryNNP wouldMD haveVB beenVBN £1110PDT aDT weekNN ,"root(ROOT-0, confirm-6) aux(confirm-6, Will-1) det(Gentleman-5, the-2) amod(Gentleman-5, right-3) compound(Gentleman-5, hon.-4) nsubj(confirm-6, Gentleman-5) mark(11.10-28, that-7) det(supplement-11, the-8) compound(supplement-11, earnings-9) amod(supplement-11, related-10) nsubj(11.10-28, supplement-11) nsubj(payable-16, that-12) aux(payable-16, would-13) aux(payable-16, have-14) cop(payable-16, been-15) acl:relcl(supplement-11, payable-16) case(person-20, to-17) det(person-20, an-18) amod(person-20, unemployed-19) nmod:to(payable-16, person-20) case(January-23, from-21) amod(January-23, next-22) nmod:from(person-20, January-23) aux(11.10-28, would-24) aux(11.10-28, have-25) cop(11.10-28, been-26) compound(11.10-28, #-27) ccomp(confirm-6, 11.10-28) det(week-30, a-29) nmod:npmod(11.10-28, week-30) punct(confirm-6, ?-31)",0,0,0,"root(ROOT, confirm) ax(confirm, Will) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(confirm, Gentleman) mark(11.10, that) det(spplement, the) compond(spplement, earnings) amod(spplement, related) nsbj(11.10, spplement) nsbj(payable, that) ax(payable, wold) ax(payable, have) cop(payable, been) acl:relcl(spplement, payable) case(person, to) det(person, an) amod(person, nemployed) nmod:to(payable, person) case(Janary, from) amod(Janary, next) nmod:from(person, Janary) ax(11.10, wold) ax(11.10, have) cop(11.10, been) compond(11.10, #) ccomp(confirm, 11.10) det(week, a) nmod:npmod(11.10, week) pnct(confirm, ?)","root(,NN) ax(NN,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) mark(NNP,WDT) det(NN,DT) compond(NN,NNS) amod(NN,VBN) nsbj(VBN,NN) nsbj(JJ,WDT) ax(JJ,MD) ax(JJ,VB) cop(JJ,VBN) acl:relcl(NN,JJ) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(JJ,NN) case(NNP,IN) amod(NNP,JJ) nmod:from(NN,NNP) ax(NNP,MD) ax(MD,VB) cop(VB,VBN) compond(VBN,VBN) ccomp(NN,NN) det(NN,DT) nmod:npmod(DT,NN) pnct(NN,NN)","[Gentleman, right, confirm, 11.10, ROOT]","[confirm, ROOT, 11.10, Gentleman]",7,[ ],[ ],NN_confirm NNP_Gentleman ,"[confirm, ROOT, 11.10, Gentleman]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he confirm also that as that benefit is not being paid at present to the unemployed due to the Civil Service dispute  those who are owed payments of the earnings related supplement to unemployment benefit will receive the back pay  even if they have returned to work before the dispute ends?,WillMD hePRP confirmVB alsoRB thatIN asIN thatDT benefitNN isVBZ notRB beingVBG paidVBN atIN presentJJ toTO theDT unemployedJJ dueJJ toTO theDT CivilNNP ServiceNNP disputeVBP thoseDT whoWP areVBP owedVBN paymentsNNS ofIN theDT earningsNNS relatedVBN supplementNN toTO unemploymentNN benefitNN willMD receiveVB theDT backJJ payNN evenRB ifIN theyPRP haveVBP returnedVBN toTO workVB beforeIN theDT disputeNN endsVBZ ,"root(ROOT-0, confirm-3) aux(confirm-3, Will-1) nsubj(confirm-3, he-2) advmod(confirm-3, also-4) mark(paid-12, that-5) case(benefit-8, as-6) det(benefit-8, that-7) nmod:as(paid-12, benefit-8) aux(paid-12, is-9) neg(paid-12, not-10) auxpass(paid-12, being-11) ccomp(confirm-3, paid-12) case(present-14, at-13) nmod:at(paid-12, present-14) case(unemployed-17, to-15) det(unemployed-17, the-16) nmod:to(present-14, unemployed-17) amod(unemployed-17, due-18) case(dispute-23, to-19) det(dispute-23, the-20) compound(dispute-23, Civil-21) compound(dispute-23, Service-22) nmod:to(due-18, dispute-23) punct(dispute-23, ,-24) nsubj(receive-39, those-25) nsubjpass(owed-28, who-26) auxpass(owed-28, are-27) acl:relcl(those-25, owed-28) dobj(owed-28, payments-29) case(supplement-34, of-30) det(supplement-34, the-31) compound(supplement-34, earnings-32) amod(supplement-34, related-33) nmod:of(payments-29, supplement-34) case(benefit-37, to-35) compound(benefit-37, unemployment-36) nmod:to(owed-28, benefit-37) aux(receive-39, will-38) acl:relcl(dispute-23, receive-39) det(pay-42, the-40) amod(pay-42, back-41) dobj(receive-39, pay-42) punct(dispute-23, ,-43) advmod(returned-48, even-44) mark(returned-48, if-45) nsubj(returned-48, they-46) aux(returned-48, have-47) acl(dispute-23, returned-48) mark(work-50, to-49) xcomp(returned-48, work-50) mark(ends-54, before-51) det(dispute-53, the-52) nsubj(ends-54, dispute-53) advcl(work-50, ends-54) punct(confirm-3, ?-55)",0,0,0,"root(ROOT, confirm) ax(confirm, Will) nsbj(confirm, he) advmod(confirm, also) mark(paid, that) case(benefit, as) det(benefit, that) nmod:as(paid, benefit) ax(paid, is) neg(paid, not) axpass(paid, being) ccomp(confirm, paid) case(present, at) nmod:at(paid, present) case(nemployed, to) det(nemployed, the) nmod:to(present, nemployed) amod(nemployed, de) case(dispte, to) det(dispte, the) compond(dispte, Civil) compond(dispte, Service) nmod:to(de, dispte) pnct(dispte, ,) nsbj(receive, those) nsbjpass(owed, who) axpass(owed, are) acl:relcl(those, owed) dobj(owed, payments) case(spplement, of) det(spplement, the) compond(spplement, earnings) amod(spplement, related) nmod:of(payments, spplement) case(benefit, to) compond(benefit, nemployment) nmod:to(owed, benefit) ax(receive, will) acl:relcl(dispte, receive) det(pay, the) amod(pay, back) dobj(receive, pay) pnct(dispte, ,) advmod(retrned, even) mark(retrned, if) nsbj(retrned, they) ax(retrned, have) acl(dispte, retrned) mark(work, to) xcomp(retrned, work) mark(ends, before) det(dispte, the) nsbj(ends, dispte) advcl(work, ends) pnct(confirm, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) advmod(VB,RB) mark(VBN,DT) case(NN,IN) det(NN,DT) nmod:as(VBN,NN) ax(VBN,VBZ) neg(VBN,RB) axpass(VBN,VBG) ccomp(VB,VBN) case(JJ,IN) nmod:at(VBN,JJ) case(JJ,TO) det(JJ,DT) nmod:to(JJ,JJ) amod(JJ,JJ) case(NN,TO) det(NN,DT) compond(NN,NNP) compond(NN,NNP) nmod:to(JJ,NN) pnct(NN,NN) nsbj(VB,DT) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(DT,VBN) dobj(VBN,NNS) case(NN,IN) det(NN,DT) compond(NN,NNS) amod(NN,VBN) nmod:of(NNS,NN) case(NN,TO) compond(NN,NN) nmod:to(VBN,NN) ax(VB,MD) acl:relcl(NN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(NN,NN) advmod(VBN,RB) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) acl(NN,VBN) mark(VB,TO) xcomp(VBN,VB) mark(VBZ,IN) det(NN,DT) nsbj(VBZ,NN) advcl(VB,VBZ) pnct(VB,VB)","[he, ROOT, also, confirm, paid]","[he, ROOT, also, confirm, paid]",7,[ ],[ ],PRP_he RB_also NN_confirm VBN_paid ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The amount payable will depend on the man's earnings  as I am sure the hon. Gentleman recognises.,TheDT amountNN payableJJ willMD dependVB onIN theDT manNN 'sPOS earningsNNS asIN IPRP amVBP sureRB theDT honNN GentlemanNNP recognisesVBZ ,"root(ROOT-0, depend-5) det(amount-2, The-1) nsubj(depend-5, amount-2) amod(amount-2, payable-3) aux(depend-5, will-4) case(earnings-10, on-6) det(man-8, the-7) nmod:poss(earnings-10, man-8) case(man-8, 's-9) nmod:on(depend-5, earnings-10) punct(depend-5, ,-11) mark(sure-15, as-12) nsubj(sure-15, I-13) cop(sure-15, am-14) advcl(depend-5, sure-15) det(Gentleman-18, the-16) compound(Gentleman-18, hon.-17) nsubj(recognises-19, Gentleman-18) ccomp(sure-15, recognises-19) punct(depend-5, .-20)",0,0,0,"root(ROOT, depend) det(amont, The) nsbj(depend, amont) amod(amont, payable) ax(depend, will) case(earnings, on) det(man, the) nmod:poss(earnings, man) ""case(man, s)"", nmod:on(depend, earnings) pnct(depend, ,) mark(sre, as) nsbj(sre, I) cop(sre, am) advcl(depend, sre) det(Gentleman, the) compond(Gentleman, hon.) nsbj(recognises, Gentleman) ccomp(sre, recognises) pnct(depend, .)","root(,VB) det(NN,DT) nsbj(VB,NN) amod(NN,JJ) ax(VB,MD) case(NNS,IN) det(NN,DT) nmod:poss(NNS,NN) case(NN,POS) nmod:on(VB,NNS) pnct(VB,VB) mark(RB,IN) nsbj(RB,PRP) cop(RB,VBP) advcl(VB,RB) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(RB,VBZ) pnct(VB,VB)","[recognises, Gentleman, sure]","[recognises, Gentleman, sure]",8,"[recognises, Gentleman, sure]","[recognises, Gentleman, sure]",VBZ_recognises NNP_Gentleman RB_sure ,"[recognises, Gentleman, sure]","[recognises, Gentleman, sure]",VBZ_recognises NNP_Gentleman RB_sure ,"[recognises, Gentleman, sure]",VBZ_recognises NNP_Gentleman RB_sure ,"[recognises, Gentleman, sure]",VBZ_recognises NNP_Gentleman RB_sure ,-3,0,2,0,0,0,0,0,0,0
It is a sad consequence of the industrial action by civil servants in my Department that benefits are not being paid as they fall due.,ItPRP isVBZ aDT sadJJ consequenceNN ofIN theDT industrialJJ actionNN byIN civilJJ servantsNNS inIN myPRP$ DepartmentNNP thatIN benefitsNNS areVBP notRB beingVBG paidVBN asIN theyPRP fallVBP dueJJ ,"root(ROOT-0, consequence-5) nsubj(consequence-5, It-1) cop(consequence-5, is-2) det(consequence-5, a-3) amod(consequence-5, sad-4) case(action-9, of-6) det(action-9, the-7) amod(action-9, industrial-8) nmod:of(consequence-5, action-9) case(servants-12, by-10) amod(servants-12, civil-11) nmod:by(action-9, servants-12) case(Department-15, in-13) nmod:poss(Department-15, my-14) nmod:in(action-9, Department-15) mark(paid-21, that-16) nsubjpass(paid-21, benefits-17) aux(paid-21, are-18) neg(paid-21, not-19) auxpass(paid-21, being-20) acl:relcl(action-9, paid-21) mark(fall-24, as-22) nsubj(fall-24, they-23) advcl(paid-21, fall-24) advmod(fall-24, due-25) punct(consequence-5, .-26)",0,0,0,"root(ROOT, conseqence) nsbj(conseqence, It) cop(conseqence, is) det(conseqence, a) amod(conseqence, sad) case(action, of) det(action, the) amod(action, indstrial) nmod:of(conseqence, action) case(servants, by) amod(servants, civil) nmod:by(action, servants) case(Department, in) nmod:poss(Department, my) nmod:in(action, Department) mark(paid, that) nsbjpass(paid, benefits) ax(paid, are) neg(paid, not) axpass(paid, being) acl:relcl(action, paid) mark(fall, as) nsbj(fall, they) advcl(paid, fall) advmod(fall, de) pnct(conseqence, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:by(NN,NNS) case(NNP,IN) nmod:poss(NNP,PRP$) nmod:in(NN,NNP) mark(VBN,IN) nsbjpass(VBN,NNS) ax(VBN,VBP) neg(VBN,RB) axpass(VBN,VBG) acl:relcl(NN,VBN) mark(VBP,IN) nsbj(VBP,PRP) advcl(VBN,VBP) advmod(VBP,JJ) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is our intention I must warn the House that this may take some time in the recovery period to pay any benefits which were due  but which were not paid  to those who were entitled to them.,ItPRP isVBZ ourPRP$ intentionNN IPRP mustMD warnVB theDT HouseNNP thatIN thisDT mayMD takeVB someDT timeNN inIN theDT recoveryNN periodNN toTO payVB anyDT benefitsNNS whichWDT wereVBD dueJJ butCC whichWDT wereVBD notRB paidVBN toTO thoseDT whoWP wereVBD entitledVBN toTO themPRP ,"root(ROOT-0, intention-4) nsubj(intention-4, It-1) cop(intention-4, is-2) nmod:poss(intention-4, our-3) nsubj(warn-7, I-5) aux(warn-7, must-6) acl:relcl(intention-4, warn-7) det(House-9, the-8) dobj(warn-7, House-9) mark(take-13, that-10) nsubj(take-13, this-11) aux(take-13, may-12) ccomp(warn-7, take-13) det(time-15, some-14) dobj(take-13, time-15) case(period-19, in-16) det(period-19, the-17) compound(period-19, recovery-18) nmod:in(take-13, period-19) mark(pay-21, to-20) advcl(take-13, pay-21) det(benefits-23, any-22) dobj(pay-21, benefits-23) nsubj(due-26, which-24) cop(due-26, were-25) acl:relcl(benefits-23, due-26) punct(due-26, ,-27) cc(due-26, but-28) nsubjpass(paid-32, which-29) auxpass(paid-32, were-30) neg(paid-32, not-31) acl:relcl(benefits-23, paid-32) conj:but(due-26, paid-32) punct(paid-32, ,-33) case(those-35, to-34) nmod:to(paid-32, those-35) nsubjpass(entitled-38, who-36) auxpass(entitled-38, were-37) acl:relcl(those-35, entitled-38) case(them-40, to-39) nmod:to(entitled-38, them-40) punct(intention-4, .-41)",0,0,0,"root(ROOT, intention) nsbj(intention, It) cop(intention, is) nmod:poss(intention, or) nsbj(warn, I) ax(warn, mst) acl:relcl(intention, warn) det(Hose, the) dobj(warn, Hose) mark(take, that) nsbj(take, this) ax(take, may) ccomp(warn, take) det(time, some) dobj(take, time) case(period, in) det(period, the) compond(period, recovery) nmod:in(take, period) mark(pay, to) advcl(take, pay) det(benefits, any) dobj(pay, benefits) nsbj(de, which) cop(de, were) acl:relcl(benefits, de) pnct(de, ,) cc(de, bt) nsbjpass(paid, which) axpass(paid, were) neg(paid, not) acl:relcl(benefits, paid) conj:bt(de, paid) pnct(paid, ,) case(those, to) nmod:to(paid, those) nsbjpass(entitled, who) axpass(entitled, were) acl:relcl(those, entitled) case(them, to) nmod:to(entitled, them) pnct(intention, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) nmod:poss(NN,PRP$) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) det(NNP,DT) dobj(VB,NNP) mark(VB,IN) nsbj(VB,DT) ax(VB,MD) ccomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(VB,NN) mark(VB,TO) advcl(VB,VB) det(NNS,DT) dobj(VB,NNS) nsbj(JJ,WDT) cop(JJ,VBD) acl:relcl(NNS,JJ) pnct(JJ,JJ) cc(JJ,CC) nsbjpass(VBN,WDT) axpass(VBN,VBD) neg(VBN,RB) acl:relcl(NNS,VBN) conj:bt(JJ,VBN) pnct(VBN,VBN) case(DT,TO) nmod:to(VBN,DT) nsbjpass(VBN,WP) axpass(VBN,VBD) acl:relcl(DT,VBN) case(PRP,TO) nmod:to(VBN,PRP) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Those who have paid contributions over many years feel that they should be entitled to the supplement when  through circumstances beyond their control  they are placed out of work.,ThoseDT whoWP haveVBP paidVBN contributionsNNS overIN manyJJ yearsNNS feelVBP thatIN theyPRP shouldMD beVB entitledVBN toTO theDT supplementNN whenWRB throughIN circumstancesNNS beyondIN theirPRP$ controlNN theyPRP areVBP placedVBN outIN ofIN workNN ,"root(ROOT-0, feel-9) nsubj(feel-9, Those-1) nsubj(paid-4, who-2) aux(paid-4, have-3) acl:relcl(Those-1, paid-4) dobj(paid-4, contributions-5) case(years-8, over-6) amod(years-8, many-7) nmod:over(paid-4, years-8) mark(entitled-14, that-10) nsubjpass(entitled-14, they-11) aux(entitled-14, should-12) auxpass(entitled-14, be-13) ccomp(feel-9, entitled-14) case(supplement-17, to-15) det(supplement-17, the-16) nmod:to(entitled-14, supplement-17) advmod(placed-28, when-18) punct(placed-28, ,-19) case(circumstances-21, through-20) nmod:through(placed-28, circumstances-21) case(control-24, beyond-22) nmod:poss(control-24, their-23) nmod:beyond(circumstances-21, control-24) punct(placed-28, ,-25) nsubjpass(placed-28, they-26) auxpass(placed-28, are-27) advcl(entitled-14, placed-28) case(work-31, out-29) mwe(out-29, of-30) nmod:out_of(placed-28, work-31) punct(feel-9, .-32)",0,0,0,"root(ROOT, feel) nsbj(feel, Those) nsbj(paid, who) ax(paid, have) acl:relcl(Those, paid) dobj(paid, contribtions) case(years, over) amod(years, many) nmod:over(paid, years) mark(entitled, that) nsbjpass(entitled, they) ax(entitled, shold) axpass(entitled, be) ccomp(feel, entitled) case(spplement, to) det(spplement, the) nmod:to(entitled, spplement) advmod(placed, when) pnct(placed, ,) case(circmstances, throgh) nmod:throgh(placed, circmstances) case(control, beyond) nmod:poss(control, their) nmod:beyond(circmstances, control) pnct(placed, ,) nsbjpass(placed, they) axpass(placed, are) advcl(entitled, placed) case(work, ot) mwe(ot, of) nmod:ot_of(placed, work) pnct(feel, .)","root(,VBP) nsbj(VBP,DT) nsbj(VBN,WP) ax(VBN,VBP) acl:relcl(DT,VBN) dobj(VBN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:over(VBN,NNS) mark(VBN,IN) nsbjpass(VBN,PRP) ax(VBN,MD) axpass(VBN,VB) ccomp(VBP,VBN) case(NN,TO) det(NN,DT) nmod:to(VBN,NN) advmod(VBN,WRB) pnct(VBN,VBN) case(NNS,IN) nmod:throgh(VBN,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:beyond(NNS,NN) pnct(VBN,VBN) nsbjpass(VBN,PRP) axpass(VBN,VBP) advcl(VBN,VBN) case(NN,IN) mwe(IN,IN) nmod:ot_of(VBN,NN) pnct(VBP,VBP)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Education and Science what proposals he has to increase the number of nursery school places; and if he will make a statement.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN EducationNNP andCC ScienceNNP whatWP proposalsNNS hePRP hasVBZ toTO increaseVB theDT numberNN ofIN nurseryJJ schoolNN placesNNS ;: andCC ifIN hePRP willMD makeVB aDT statementNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Education-7, for-6) nmod:for(Secretary-3, Education-7) cc(Education-7, and-8) nmod:for(Secretary-3, Science-9) conj:and(Education-7, Science-9) det(proposals-11, what-10) dobj(has-13, proposals-11) nsubj(has-13, he-12) acl:relcl(Secretary-3, has-13) mark(increase-15, to-14) xcomp(has-13, increase-15) det(number-17, the-16) dobj(increase-15, number-17) case(places-21, of-18) compound(places-21, nursery-19) compound(places-21, school-20) nmod:of(number-17, places-21) punct(asked-1, ;-22) cc(asked-1, and-23) mark(make-27, if-24) nsubj(make-27, he-25) aux(make-27, will-26) conj:and(asked-1, make-27) det(statement-29, a-28) dobj(make-27, statement-29) punct(asked-1, .-30)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Edcation, for) nmod:for(Secretary, Edcation) cc(Edcation, and) nmod:for(Secretary, Science) conj:and(Edcation, Science) det(proposals, what) dobj(has, proposals) nsbj(has, he) acl:relcl(Secretary, has) mark(increase, to) xcomp(has, increase) det(nmber, the) dobj(increase, nmber) case(places, of) compond(places, nrsery) compond(places, school) nmod:of(nmber, places) pnct(asked, ;) cc(asked, and) mark(make, if) nsbj(make, he) ax(make, will) conj:and(asked, make) det(statement, a) dobj(make, statement) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) det(NNS,WP) dobj(VBZ,NNS) nsbj(VBZ,PRP) acl:relcl(NNP,VBZ) mark(VB,TO) xcomp(VBZ,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) compond(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) pnct(VBN,:) cc(VBN,CC) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) conj:and(VBN,VB) det(NN,DT) dobj(VB,NN) pnct(VBN,VBN)","[increase, Science, State, Education, ROOT, and, and, statement, Secretary, asked, proposals, he, has, he, make]","[increase, Science, State, Education, ROOT, and, and, statement, Secretary, asked, proposals, he, has, he, make]",1,"[increase, Science, State, Education, and, and, Secretary, ROOT, proposals, asked, has, he]","[increase, Science, State, Education, and, and, Secretary, ROOT, proposals, asked, has, he]",VB_increase NNP_Science NNP_State NNP_Education CC_and CC_and NN_statement NNP_Secretary VBN_asked NNS_proposals PRP_he VBZ_has PRP_he VB_make ,"[increase, Science, State, Education, ROOT, and, and, statement, Secretary, asked, proposals, he, has, he, make]","[increase, Science, State, Education, ROOT, and, and, statement, Secretary, asked, proposals, he, has, he, make]",VB_increase NNP_Science NNP_State NNP_Education CC_and CC_and NN_statement NNP_Secretary VBN_asked NNS_proposals PRP_he VBZ_has PRP_he VB_make ,"[increase, Science, State, Education, ROOT, and, and, statement, Secretary, asked, proposals, he, has, he, make]",VB_increase NNP_Science NNP_State NNP_Education CC_and CC_and NN_statement NNP_Secretary VBN_asked NNS_proposals PRP_he VBZ_has PRP_he VB_make ,"[increase, Science, State, Education, ROOT, and, and, statement, Secretary, asked, proposals, he, has, he, make]",VB_increase NNP_Science NNP_State NNP_Education CC_and CC_and NN_statement NNP_Secretary VBN_asked NNS_proposals PRP_he VBZ_has PRP_he VB_make ,-3,0,2,0,0,0,0,0,0,0
There is provision in the Government's expenditure plans for modest capital expenditure to enable those authorities that wish to do so to increase their nursery accommodation  mainly by converting spare primary accommodation.,ThereEX isVBZ provisionNN inIN theDT GovernmentNNP 'sPOS expenditureNN plansNNS forIN modestJJ capitalNN expenditureNN toTO enableVB thoseDT authoritiesNNS thatWDT wishVBP toTO doVB soRB toTO increaseVB theirPRP$ nurseryJJ accommodationNN mainlyRB byIN convertingVBG spareJJ primaryJJ accommodationNN ,"root(ROOT-0, is-2) expl(is-2, There-1) nsubj(is-2, provision-3) case(plans-9, in-4) det(Government-6, the-5) nmod:poss(plans-9, Government-6) case(Government-6, 's-7) compound(plans-9, expenditure-8) nmod:in(provision-3, plans-9) case(expenditure-13, for-10) amod(expenditure-13, modest-11) compound(expenditure-13, capital-12) nmod:for(plans-9, expenditure-13) mark(enable-15, to-14) acl(provision-3, enable-15) det(authorities-17, those-16) dobj(enable-15, authorities-17) nsubj(wish-19, that-18) acl:relcl(authorities-17, wish-19) mark(do-21, to-20) xcomp(wish-19, do-21) advmod(do-21, so-22) mark(increase-24, to-23) xcomp(do-21, increase-24) nmod:poss(accommodation-27, their-25) compound(accommodation-27, nursery-26) dobj(increase-24, accommodation-27) punct(is-2, ,-28) advmod(converting-31, mainly-29) mark(converting-31, by-30) advcl(is-2, converting-31) amod(accommodation-34, spare-32) amod(accommodation-34, primary-33) dobj(converting-31, accommodation-34) punct(is-2, .-35)",0,0,0,"root(ROOT, is) expl(is, There) nsbj(is, provision) case(plans, in) det(Government, the) nmod:poss(plans, Government) ""case(Government, s)"", compond(plans, expenditre) nmod:in(provision, plans) case(expenditre, for) amod(expenditre, modest) compond(expenditre, capital) nmod:for(plans, expenditre) mark(enable, to) acl(provision, enable) det(athorities, those) dobj(enable, athorities) nsbj(wish, that) acl:relcl(athorities, wish) mark(do, to) xcomp(wish, do) advmod(do, so) mark(increase, to) xcomp(do, increase) nmod:poss(accommodation, their) compond(accommodation, nrsery) dobj(increase, accommodation) pnct(is, ,) advmod(converting, mainly) mark(converting, by) advcl(is, converting) amod(accommodation, spare) amod(accommodation, primary) dobj(converting, accommodation) pnct(is, .)","root(,VBZ) expl(VBZ,EX) nsbj(VBZ,NN) case(NNS,IN) det(NNP,DT) nmod:poss(NNS,NNP) case(NNP,POS) compond(NNS,NN) nmod:in(NN,NNS) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:for(NNS,NN) mark(VB,TO) acl(NN,VB) det(NNS,DT) dobj(VB,NNS) nsbj(VBP,WDT) acl:relcl(NNS,VBP) mark(VB,TO) xcomp(VBP,VB) advmod(VB,RB) mark(VB,TO) xcomp(VB,VB) nmod:poss(NN,PRP$) compond(NN,JJ) dobj(VB,NN) pnct(VBZ,VBZ) advmod(VBG,RB) mark(VBG,IN) advcl(VBZ,VBG) amod(NN,JJ) amod(NN,JJ) dobj(VBG,NN) pnct(VBZ,VBZ)","[plans, Government, provision, expenditure]","[plans, Government, provision, expenditure]",2,"[plans, Government, provision, expenditure]","[plans, Government, provision, expenditure]",NNS_plans NNP_Government NN_provision NN_expenditure ,"[plans, Government, provision, expenditure]","[plans, Government, provision, expenditure]",NNS_plans NNP_Government NN_provision NN_expenditure ,"[plans, Government, provision, expenditure]",NNS_plans NNP_Government NN_provision NN_expenditure ,"[plans, Government, provision, expenditure]",NNS_plans NNP_Government NN_provision NN_expenditure ,-3,0,2,0,0,0,0,0,0,0
Does the Minister agree that nursery school education is of great importance and that it can be of crucial importance to disadvantaged children?,DoesVBZ theDT MinisterNNP agreeVBP thatIN nurseryJJ schoolNN educationNN isVBZ ofIN greatJJ importanceNN andCC thatIN itPRP canMD beVB ofIN crucialJJ importanceNN toTO disadvantagedVB childrenNNS ,"root(ROOT-0, agree-4) aux(agree-4, Does-1) det(Minister-3, the-2) nsubj(agree-4, Minister-3) mark(importance-12, that-5) compound(education-8, nursery-6) compound(education-8, school-7) nsubj(importance-12, education-8) cop(importance-12, is-9) case(importance-12, of-10) amod(importance-12, great-11) ccomp(agree-4, importance-12) cc(importance-12, and-13) mark(importance-20, that-14) nsubj(importance-20, it-15) aux(importance-20, can-16) cop(importance-20, be-17) case(importance-20, of-18) amod(importance-20, crucial-19) ccomp(agree-4, importance-20) conj:and(importance-12, importance-20) case(children-23, to-21) amod(children-23, disadvantaged-22) nmod:to(importance-20, children-23) punct(agree-4, ?-24)",0,1,0,"root(ROOT, agree) ax(agree, Does) det(Minister, the) nsbj(agree, Minister) mark(importance, that) compond(edcation, nrsery) compond(edcation, school) nsbj(importance, edcation) cop(importance, is) case(importance, of) amod(importance, great) ccomp(agree, importance) cc(importance, and) mark(importance, that) nsbj(importance, it) ax(importance, can) cop(importance, be) case(importance, of) amod(importance, crcial) ccomp(agree, importance) conj:and(importance, importance) case(children, to) amod(children, disadvantaged) nmod:to(importance, children) pnct(agree, ?)","root(,VBP) ax(VBP,VBZ) det(NNP,DT) nsbj(VBP,NNP) mark(NN,IN) compond(NN,JJ) compond(NN,NN) nsbj(NN,NN) cop(NN,VBZ) case(NN,IN) amod(NN,JJ) ccomp(VBP,NN) cc(NN,CC) mark(NN,IN) nsbj(NN,PRP) ax(NN,MD) cop(NN,VB) case(NN,IN) amod(NN,JJ) ccomp(VBP,NN) conj:and(NN,NN) case(NNS,TO) amod(NNS,VB) nmod:to(NN,NNS) pnct(VBP,VBP)","[ROOT, Minister, agree, importance, importance]","[ROOT, Minister, agree, importance, importance]",3,[ ],[ ],NNP_Minister VB_agree NN_importance NN_importance ,"[ROOT, Minister, agree, importance, importance]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is that not borne out by the fact that all Conservative Members ensure that their children have pre school education?,IsVBZ thatIN notRB borneVBN outRP byIN theDT factNN thatIN allDT ConservativeJJ MembersNNS ensureVB thatIN theirPRP$ childrenNNS haveVBP preVBN schoolNN educationNN ,"root(ROOT-0, Is-1) nsubj(Is-1, that-2) neg(borne-4, not-3) acl(that-2, borne-4) compound:prt(borne-4, out-5) case(fact-8, by-6) det(fact-8, the-7) nmod:by(borne-4, fact-8) mark(ensure-13, that-9) det(Members-12, all-10) amod(Members-12, Conservative-11) nsubj(ensure-13, Members-12) ccomp(fact-8, ensure-13) mark(have-17, that-14) nmod:poss(children-16, their-15) nsubj(have-17, children-16) ccomp(ensure-13, have-17) amod(education-20, pre-18) compound(education-20, school-19) dobj(have-17, education-20) punct(Is-1, ?-21)",0,0,0,"root(ROOT, Is) nsbj(Is, that) neg(borne, not) acl(that, borne) compond:prt(borne, ot) case(fact, by) det(fact, the) nmod:by(borne, fact) mark(ensre, that) det(Members, all) amod(Members, Conservative) nsbj(ensre, Members) ccomp(fact, ensre) mark(have, that) nmod:poss(children, their) nsbj(have, children) ccomp(ensre, have) amod(edcation, pre) compond(edcation, school) dobj(have, edcation) pnct(Is, ?)","root(,VBZ) nsbj(VBZ,IN) neg(VBN,RB) acl(IN,VBN) compond:prt(VBN,RP) case(NN,IN) det(NN,DT) nmod:by(VBN,NN) mark(VB,IN) det(NNS,DT) amod(NNS,JJ) nsbj(VB,NNS) ccomp(NN,VB) mark(VBP,IN) nmod:poss(NNS,PRP$) nsbj(VBP,NNS) ccomp(VB,VBP) amod(NN,VBN) compond(NN,NN) dobj(VBP,NN) pnct(VBZ,VBZ)","[Conservative, ensure, Members]","[Conservative, ensure, Members]",3,"[Conservative, ensure, Members]","[Conservative, ensure, Members]",JJ_Conservative VB_ensure NNS_Members ,"[Conservative, ensure, Members]","[Conservative, ensure, Members]",JJ_Conservative VB_ensure NNS_Members ,"[Conservative, ensure, Members]",JJ_Conservative VB_ensure NNS_Members ,"[Conservative, ensure, Members]",JJ_Conservative VB_ensure NNS_Members ,-3,0,2,2,1,2,0,0,0,0
Two thirds of nursery provision comes in inner city and urban areas where there is social and economic deprivation.,TwoCD thirdsNNS ofIN nurseryDT provisionNN comesVBZ inIN innerJJ cityNN andCC urbanJJ areasNNS whereWRB thereEX isVBZ socialJJ andCC economicJJ deprivationNN ,"root(ROOT-0, comes-6) nummod(thirds-2, Two-1) nsubj(comes-6, thirds-2) case(provision-5, of-3) compound(provision-5, nursery-4) nmod:of(thirds-2, provision-5) case(city-9, in-7) amod(city-9, inner-8) nmod:in(comes-6, city-9) cc(city-9, and-10) amod(areas-12, urban-11) nmod:in(comes-6, areas-12) conj:and(city-9, areas-12) advmod(is-15, where-13) expl(is-15, there-14) advcl(comes-6, is-15) amod(deprivation-19, social-16) cc(social-16, and-17) conj:and(social-16, economic-18) amod(deprivation-19, economic-18) nsubj(is-15, deprivation-19) punct(comes-6, .-20)",0,1,0,"root(ROOT, comes) nmmod(thirds, Two) nsbj(comes, thirds) case(provision, of) compond(provision, nrsery) nmod:of(thirds, provision) case(city, in) amod(city, inner) nmod:in(comes, city) cc(city, and) amod(areas, rban) nmod:in(comes, areas) conj:and(city, areas) advmod(is, where) expl(is, there) advcl(comes, is) amod(deprivation, social) cc(social, and) conj:and(social, economic) amod(deprivation, economic) nsbj(is, deprivation) pnct(comes, .)","root(,VBZ) nmmod(NNS,CD) nsbj(VBZ,NNS) case(NN,IN) compond(NN,DT) nmod:of(NNS,NN) case(NN,IN) amod(NN,JJ) nmod:in(VBZ,NN) cc(NN,CC) amod(NNS,JJ) nmod:in(VBZ,NNS) conj:and(NN,NNS) advmod(VBZ,WRB) expl(VBZ,EX) advcl(VBZ,VBZ) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) nsbj(VBZ,NN) pnct(VBZ,VBZ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I cannot say what percentage of Conservative Members have children in pre school education  but I should imagine that it is the same as in the rest of the community.,IPRP canMD notRB sayVB whatWP percentageNN ofIN ConservativeJJ MembersNNS haveVBP childrenNNS inIN preJJ schoolNN educationNN butCC IPRP shouldMD imagineVB thatIN itPRP isVBZ theDT sameJJ asIN inIN theDT restNN ofIN theDT communityNN ,"root(ROOT-0, say-4) nsubj(say-4, I-1) aux(say-4, can-2) neg(say-4, not-3) det(percentage-6, what-5) nsubj(have-10, percentage-6) case(Members-9, of-7) amod(Members-9, Conservative-8) nmod:of(percentage-6, Members-9) ccomp(say-4, have-10) dobj(have-10, children-11) case(education-15, in-12) amod(education-15, pre-13) compound(education-15, school-14) nmod:in(have-10, education-15) punct(say-4, ,-16) cc(say-4, but-17) nsubj(imagine-20, I-18) aux(imagine-20, should-19) conj:but(say-4, imagine-20) mark(same-25, that-21) nsubj(same-25, it-22) cop(same-25, is-23) det(same-25, the-24) ccomp(imagine-20, same-25) case(rest-29, as-26) case(rest-29, in-27) det(rest-29, the-28) nmod:in(same-25, rest-29) case(community-32, of-30) det(community-32, the-31) nmod:of(rest-29, community-32) punct(say-4, .-33)",0,0,0,"root(ROOT, say) nsbj(say, I) ax(say, can) neg(say, not) det(percentage, what) nsbj(have, percentage) case(Members, of) amod(Members, Conservative) nmod:of(percentage, Members) ccomp(say, have) dobj(have, children) case(edcation, in) amod(edcation, pre) compond(edcation, school) nmod:in(have, edcation) pnct(say, ,) cc(say, bt) nsbj(imagine, I) ax(imagine, shold) conj:bt(say, imagine) mark(same, that) nsbj(same, it) cop(same, is) det(same, the) ccomp(imagine, same) case(rest, as) case(rest, in) det(rest, the) nmod:in(same, rest) case(commnity, of) det(commnity, the) nmod:of(rest, commnity) pnct(say, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) det(NN,WP) nsbj(VBP,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) ccomp(VB,VBP) dobj(VBP,NNS) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:in(VBP,NN) pnct(VB,VB) cc(VB,CC) nsbj(VB,PRP) ax(VB,MD) conj:bt(VB,VB) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) det(JJ,DT) ccomp(VB,JJ) case(NN,IN) case(NN,IN) det(NN,DT) nmod:in(JJ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VB,VB)","[Conservative, Members, percentage]","[Conservative, Members, percentage]",4,"[Conservative, Members, percentage]","[Conservative, Members, percentage]",JJ_Conservative NNS_Members NN_percentage ,"[Conservative, Members, percentage]","[Conservative, Members, percentage]",JJ_Conservative NNS_Members NN_percentage ,"[Conservative, Members, percentage]",JJ_Conservative NNS_Members NN_percentage ,"[Conservative, Members, percentage]",JJ_Conservative NNS_Members NN_percentage ,-3,0,2,2,1,2,0,0,0,0
In answer to the hon. Gentleman's question about charging for nursery school education  section 61 of the Education Act 1944 prohibits the charging of fees in respect of education provided in maintained schools.,InIN answerNN toTO theDT honNN GentlemanNNP 'sPOS questionNN aboutIN chargingVBG forIN nurseryJJ schoolNN educationNN sectionNN 61CD ofIN theDT EducationNNP ActNNP 1944CD prohibitsVBZ theDT chargingNN ofIN feesNNS inIN respectNN ofIN educationNN providedVBN inIN maintainedJJ schoolsNNS ,"root(ROOT-0, prohibits-23) case(answer-2, In-1) nmod:in(prohibits-23, answer-2) case(question-8, to-3) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) nmod:poss(question-8, Gentleman-6) case(Gentleman-6, 's-7) nmod:to(answer-2, question-8) mark(charging-10, about-9) acl(question-8, charging-10) case(education-14, for-11) compound(education-14, nursery-12) compound(education-14, school-13) nmod:for(charging-10, education-14) punct(prohibits-23, ,-15) nsubj(prohibits-23, section-16) nummod(section-16, 61-17) case(Act-21, of-18) det(Act-21, the-19) compound(Act-21, Education-20) nmod:of(section-16, Act-21) nummod(Act-21, 1944-22) det(charging-25, the-24) dobj(prohibits-23, charging-25) case(fees-27, of-26) nmod:of(charging-25, fees-27) case(respect-29, in-28) nmod:in(charging-25, respect-29) case(education-31, of-30) nmod:of(respect-29, education-31) acl(education-31, provided-32) case(schools-35, in-33) amod(schools-35, maintained-34) nmod:in(provided-32, schools-35) punct(prohibits-23, .-36)",0,0,0,"root(ROOT, prohibits) case(answer, In) nmod:in(prohibits, answer) case(qestion, to) det(Gentleman, the) compond(Gentleman, hon.) nmod:poss(qestion, Gentleman) ""case(Gentleman, s)"", nmod:to(answer, qestion) mark(charging, abot) acl(qestion, charging) case(edcation, for) compond(edcation, nrsery) compond(edcation, school) nmod:for(charging, edcation) pnct(prohibits, ,) nsbj(prohibits, section) nmmod(section, 61) case(Act, of) det(Act, the) compond(Act, Edcation) nmod:of(section, Act) nmmod(Act, 1944) det(charging, the) dobj(prohibits, charging) case(fees, of) nmod:of(charging, fees) case(respect, in) nmod:in(charging, respect) case(edcation, of) nmod:of(respect, edcation) acl(edcation, provided) case(schools, in) amod(schools, maintained) nmod:in(provided, schools) pnct(prohibits, .)","root(,VBZ) case(NN,IN) nmod:in(VBZ,NN) case(NN,TO) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:to(NN,NN) mark(NN,IN) acl(NN,NN) case(NN,IN) compond(NN,JJ) compond(NN,NN) nmod:for(NN,NN) pnct(VBZ,VBZ) nsbj(VBZ,NN) nmmod(NN,CD) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) nmmod(NNP,CD) det(NN,DT) dobj(VBZ,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) nmod:in(NN,NN) case(NN,IN) nmod:of(NN,NN) acl(NN,VBN) case(NNS,IN) amod(NNS,JJ) nmod:in(VBN,NNS) pnct(VBZ,VBZ)","[question, Gentleman, charging, answer]","[question, Gentleman, charging, answer]",4,"[question, Gentleman, charging, answer]","[question, Gentleman, charging, answer]",NN_question NNP_Gentleman VBG_charging NN_answer ,"[question, Gentleman, charging, answer]","[question, Gentleman, charging, answer]",NN_question NNP_Gentleman VBG_charging NN_answer ,"[question, Gentleman, charging, answer]",NN_question NNP_Gentleman VBG_charging NN_answer ,"[question, Gentleman, charging, answer]",NN_question NNP_Gentleman VBG_charging NN_answer ,-3,0,2,0,0,0,2,2,2,2
Is he further aware that about 85 per cent.,IsVBZ hePRP furtherRB awareJJ thatIN aboutIN 85CD perIN centNN ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) nsubj(aware-4, he-2) advmod(aware-4, further-3) dep(aware-4, that-5) advmod(85-7, about-6) dep(that-5, 85-7) case(cent-9, per-8) nmod:per(85-7, cent-9) punct(aware-4, .-10)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) advmod(aware, frther) dep(aware, that) advmod(85, abot) dep(that, 85) case(cent, per) nmod:per(85, cent) pnct(aware, .)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) advmod(JJ,RB) dep(JJ,IN) advmod(CD,IN) dep(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(JJ,JJ)","[he, ROOT, aware, further, that]","[he, ROOT, aware, further, that]",5,"[he, ROOT, aware, further, that]",[ ],PRP_he JJ_aware JJ_further IN_that ,"[he, ROOT, aware, further, that]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of all young children come from homes where mothers go out to work  either full time or part time?,ofIN allDT youngJJ childrenNNS comeVBP fromIN homesNNS whereWRB mothersNNS goVBP outRP toTO workVB eitherRB fullJJ timeNN orCC partNN timeNN ,"root(ROOT-0, children-4) case(children-4, of-1) det(children-4, all-2) amod(children-4, young-3) acl(children-4, come-5) case(homes-7, from-6) nmod:from(come-5, homes-7) advmod(go-10, where-8) nsubj(go-10, mothers-9) acl:relcl(homes-7, go-10) compound:prt(go-10, out-11) mark(work-13, to-12) xcomp(go-10, work-13) punct(children-4, ,-14) cc:preconj(time-17, either-15) amod(time-17, full-16) dep(children-4, time-17) cc(time-17, or-18) compound(time-20, part-19) dep(children-4, time-20) conj:or(time-17, time-20) punct(children-4, ?-21)",0,0,0,"root(ROOT, children) case(children, of) det(children, all) amod(children, yong) acl(children, come) case(homes, from) nmod:from(come, homes) advmod(go, where) nsbj(go, mothers) acl:relcl(homes, go) compond:prt(go, ot) mark(work, to) xcomp(go, work) pnct(children, ,) cc:preconj(time, either) amod(time, fll) dep(children, time) cc(time, or) compond(time, part) dep(children, time) conj:or(time, time) pnct(children, ?)","root(,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) acl(NNS,VBP) case(NNS,IN) nmod:from(VBP,NNS) advmod(VBP,WRB) nsbj(VBP,NNS) acl:relcl(NNS,VBP) compond:prt(VBP,RP) mark(VB,TO) xcomp(VBP,VB) pnct(NNS,NNS) cc:preconj(NN,RB) amod(NN,JJ) dep(NNS,NN) cc(NN,CC) compond(NN,NN) dep(NNS,NN) conj:or(NN,NN) pnct(NNS,NNS)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does that not strengthen the already strong argument that nursery education should be provided wherever possible?,DoesNNS thatWDT notRB strengthenVB theDT alreadyRB strongJJ argumentNN thatWDT nurseryJJ educationNN shouldMD beVB providedVBN whereverWRB possibleJJ ,"root(ROOT-0, Does-1) nsubj(strengthen-4, that-2) neg(strengthen-4, not-3) ccomp(Does-1, strengthen-4) det(argument-8, the-5) advmod(strong-7, already-6) amod(argument-8, strong-7) dobj(strengthen-4, argument-8) det(education-11, that-9) compound(education-11, nursery-10) nsubjpass(provided-14, education-11) aux(provided-14, should-12) auxpass(provided-14, be-13) acl:relcl(argument-8, provided-14) advmod(possible-16, wherever-15) advcl(provided-14, possible-16) punct(Does-1, ?-17)",0,0,1,"root(ROOT, Does) nsbj(strengthen, that) neg(strengthen, not) ccomp(Does, strengthen) det(argment, the) advmod(strong, already) amod(argment, strong) dobj(strengthen, argment) det(edcation, that) compond(edcation, nrsery) nsbjpass(provided, edcation) ax(provided, shold) axpass(provided, be) acl:relcl(argment, provided) advmod(possible, wherever) advcl(provided, possible) pnct(Does, ?)","root(,NNS) nsbj(VB,WDT) neg(VB,RB) ccomp(NNS,VB) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) dobj(VB,NN) det(NN,WDT) compond(NN,JJ) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NN,VBN) advmod(JJ,WRB) advcl(VBN,JJ) pnct(NNS,NNS)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Few hon. Members on either side would advocate nursery school education for all.,FewJJ honNN MembersNNS onIN eitherDT sideNN wouldMD advocateVB nurseryJJ schoolNN educationNN forIN allDT ,"root(ROOT-0, advocate-8) amod(Members-3, Few-1) compound(Members-3, hon.-2) nsubj(advocate-8, Members-3) case(side-6, on-4) det(side-6, either-5) nmod:on(Members-3, side-6) aux(advocate-8, would-7) compound(education-11, nursery-9) compound(education-11, school-10) dobj(advocate-8, education-11) case(all-13, for-12) nmod:for(advocate-8, all-13) punct(advocate-8, .-14)",0,1,0,"root(ROOT, advocate) amod(Members, Few) compond(Members, hon.) nsbj(advocate, Members) case(side, on) det(side, either) nmod:on(Members, side) ax(advocate, wold) compond(edcation, nrsery) compond(edcation, school) dobj(advocate, edcation) case(all, for) nmod:for(advocate, all) pnct(advocate, .)","root(,VB) amod(NNS,JJ) compond(NNS,NNS) nsbj(VB,NNS) case(NN,IN) det(NN,DT) nmod:on(NNS,NN) ax(VB,MD) compond(NN,JJ) compond(NN,NN) dobj(VB,NN) case(DT,IN) nmod:for(VB,DT) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The most that any Government have done has been to increase provision for those who wished it.,TheDT mostRBS thatIN anyDT GovernmentNNP haveVBP doneVBN hasVBZ beenVBN toTO increaseVB provisionNN forIN thoseDT whoWP wishedVBD itPRP ,"root(ROOT-0, been-9) dep(been-9, The-1) advmod(done-7, most-2) dobj(done-7, that-3) det(Government-5, any-4) nsubj(done-7, Government-5) aux(done-7, have-6) csubj(been-9, done-7) aux(been-9, has-8) mark(increase-11, to-10) xcomp(been-9, increase-11) dobj(increase-11, provision-12) case(those-14, for-13) nmod:for(provision-12, those-14) nsubj(wished-16, who-15) acl:relcl(those-14, wished-16) dobj(wished-16, it-17) punct(been-9, .-18)",0,0,0,"root(ROOT, been) dep(been, The) advmod(done, most) dobj(done, that) det(Government, any) nsbj(done, Government) ax(done, have) csbj(been, done) ax(been, has) mark(increase, to) xcomp(been, increase) dobj(increase, provision) case(those, for) nmod:for(provision, those) nsbj(wished, who) acl:relcl(those, wished) dobj(wished, it) pnct(been, .)","root(,VBN) dep(VBN,DT) advmod(VBN,RBS) dobj(VBN,IN) det(NNP,DT) nsbj(VBN,NNP) ax(VBN,VBP) csbj(VBN,VBN) ax(VBN,VBZ) mark(VB,TO) xcomp(VBN,VB) dobj(VB,NN) case(DT,IN) nmod:for(NN,DT) nsbj(VBD,WP) acl:relcl(DT,VBD) dobj(VBD,PRP) pnct(VBN,VBN)","[that, most, done, been, Government]",[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Many people feel that it is always satisfactory when the mother can be at home with the children.,ManyJJ peopleNNS feelVBP thatIN itPRP isVBZ alwaysRB satisfactoryJJ whenWRB theDT motherNN canMD beVB atIN homeNN withIN theDT childrenNNS ,"root(ROOT-0, feel-3) amod(people-2, Many-1) nsubj(feel-3, people-2) mark(satisfactory-8, that-4) nsubj(satisfactory-8, it-5) cop(satisfactory-8, is-6) advmod(satisfactory-8, always-7) ccomp(feel-3, satisfactory-8) advmod(home-15, when-9) det(mother-11, the-10) nsubj(home-15, mother-11) aux(home-15, can-12) cop(home-15, be-13) case(home-15, at-14) advcl:at(satisfactory-8, home-15) case(children-18, with-16) det(children-18, the-17) nmod:with(home-15, children-18) punct(feel-3, .-19)",0,0,0,"root(ROOT, feel) amod(people, Many) nsbj(feel, people) mark(satisfactory, that) nsbj(satisfactory, it) cop(satisfactory, is) advmod(satisfactory, always) ccomp(feel, satisfactory) advmod(home, when) det(mother, the) nsbj(home, mother) ax(home, can) cop(home, be) case(home, at) advcl:at(satisfactory, home) case(children, with) det(children, the) nmod:with(home, children) pnct(feel, .)","root(,VBP) amod(NNS,JJ) nsbj(VBP,NNS) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) ccomp(VBP,JJ) advmod(NN,WRB) det(NN,DT) nsbj(NN,NN) ax(NN,MD) cop(NN,VB) case(NN,IN) advcl:at(JJ,NN) case(NNS,IN) det(NNS,DT) nmod:with(NN,NNS) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We realise that there is deprivation in various other areas  but I think that my hon. Friend will agree that the way in which nursery school education has developed is helping those who need it.,WePRP realiseVBP thatIN thereEX isVBZ deprivationNN inIN variousJJ otherJJ areasNNS butCC IPRP thinkVBP thatIN myPRP$ honNN FriendNNP willMD agreeVB thatIN theDT wayNN inIN whichWDT nurseryJJ schoolNN educationNN hasVBZ developedVBN isVBZ helpingVBG thoseDT whoWP needVBP itPRP ,"root(ROOT-0, realise-2) nsubj(realise-2, We-1) mark(is-5, that-3) expl(is-5, there-4) ccomp(realise-2, is-5) nsubj(is-5, deprivation-6) case(areas-10, in-7) amod(areas-10, various-8) amod(areas-10, other-9) nmod:in(deprivation-6, areas-10) punct(is-5, ,-11) cc(is-5, but-12) nsubj(think-14, I-13) ccomp(realise-2, think-14) conj:but(is-5, think-14) mark(agree-20, that-15) nmod:poss(Friend-18, my-16) compound(Friend-18, hon.-17) nsubj(agree-20, Friend-18) aux(agree-20, will-19) ccomp(think-14, agree-20) mark(helping-32, that-21) det(way-23, the-22) nsubj(helping-32, way-23) case(which-25, in-24) nmod:in(developed-30, which-25) compound(education-28, nursery-26) compound(education-28, school-27) nsubj(developed-30, education-28) aux(developed-30, has-29) acl:relcl(way-23, developed-30) aux(helping-32, is-31) ccomp(agree-20, helping-32) dobj(helping-32, those-33) nsubj(need-35, who-34) acl:relcl(those-33, need-35) dobj(need-35, it-36) punct(realise-2, .-37)",0,0,0,"root(ROOT, realise) nsbj(realise, We) mark(is, that) expl(is, there) ccomp(realise, is) nsbj(is, deprivation) case(areas, in) amod(areas, varios) amod(areas, other) nmod:in(deprivation, areas) pnct(is, ,) cc(is, bt) nsbj(think, I) ccomp(realise, think) conj:bt(is, think) mark(agree, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(agree, Friend) ax(agree, will) ccomp(think, agree) mark(helping, that) det(way, the) nsbj(helping, way) case(which, in) nmod:in(developed, which) compond(edcation, nrsery) compond(edcation, school) nsbj(developed, edcation) ax(developed, has) acl:relcl(way, developed) ax(helping, is) ccomp(agree, helping) dobj(helping, those) nsbj(need, who) acl:relcl(those, need) dobj(need, it) pnct(realise, .)","root(,VBP) nsbj(VBP,PRP) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBP,VBZ) nsbj(VBZ,NN) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:in(NN,NNS) pnct(VBZ,VBZ) cc(VBZ,CC) nsbj(VBP,PRP) ccomp(VBP,VBP) conj:bt(VBZ,VBP) mark(VB,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(VBP,VB) mark(VBG,IN) det(NN,DT) nsbj(VBG,NN) case(WDT,IN) nmod:in(VBN,WDT) compond(NN,JJ) compond(NN,NN) nsbj(VBN,NN) ax(VBN,VBZ) acl:relcl(NN,VBN) ax(VBG,VBZ) ccomp(VB,VBG) dobj(VBG,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) dobj(VBP,PRP) pnct(VBP,VBP)","[helping, my, Friend, think, agree]","[helping, my, Friend, think, agree]",6,[ ],[ ],VBG_helping PRP$_my NNP_Friend VBP_think VB_agree ,"[helping, my, Friend, think, agree]","[helping, my, Friend, think, agree]",VBG_helping PRP$_my NNP_Friend VBP_think VB_agree ,"[helping, my, Friend, think, agree]",VBG_helping PRP$_my NNP_Friend VBP_think VB_agree ,"[helping, my, Friend, think, agree]",VBG_helping PRP$_my NNP_Friend VBP_think VB_agree ,-3,0,1,1,1,1,1,1,1,1
Is the Minister aware that many women who wish to go to work place the highest priority on nursery education for their children  not only for their benefit but for that of their children?,IsVBZ theDT MinisterNNP awareVBP thatIN manyJJ womenNNS whoWP wishVBP toTO goVB toTO workVB placeNN theDT highestJJS priorityNN onIN nurseryJJ educationNN forIN theirPRP$ childrenNNS notRB onlyRB forIN theirPRP$ benefitNN butCC forIN thatDT ofIN theirPRP$ childrenNNS ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) det(Minister-3, the-2) nsubj(aware-4, Minister-3) dobj(aware-4, that-5) amod(women-7, many-6) root(that-5, women-7) nsubj(wish-9, who-8) acl:relcl(women-7, wish-9) mark(go-11, to-10) xcomp(wish-9, go-11) mark(work-13, to-12) xcomp(go-11, work-13) dobj(work-13, place-14) det(priority-17, the-15) amod(priority-17, highest-16) dobj(place-14, priority-17) dobj(place-14, priority-17'') conj:but(priority-17, priority-17'') case(education-20, on-18) compound(education-20, nursery-19) nmod:on(priority-17, education-20) case(children-23, for-21) nmod:poss(children-23, their-22) nmod:for(priority-17, children-23) punct(priority-17, ,-24) neg(only-26, not-25) cc:preconj(benefit-29, only-26) case(benefit-29, for-27) nmod:poss(benefit-29, their-28) nmod:for(priority-17, benefit-29) cc(priority-17, but-30) case(that-32, for-31) nmod:for(priority-17'', that-32) case(children-35, of-33) nmod:poss(children-35, their-34) nmod:of(that-32, children-35) punct(women-7, ?-36)",0,0,0,"root(ROOT, aware) cop(aware, Is) det(Minister, the) nsbj(aware, Minister) dobj(aware, that) amod(women, many) root(that, women) nsbj(wish, who) acl:relcl(women, wish) mark(go, to) xcomp(wish, go) mark(work, to) xcomp(go, work) dobj(work, place) det(priority, the) amod(priority, highest) dobj(place, priority) dobj(place, priority) conj:bt(priority, priority) case(edcation, on) compond(edcation, nrsery) nmod:on(priority, edcation) case(children, for) nmod:poss(children, their) nmod:for(priority, children) pnct(priority, ,) neg(only, not) cc:preconj(benefit, only) case(benefit, for) nmod:poss(benefit, their) nmod:for(priority, benefit) cc(priority, bt) case(that, for) nmod:for(priority, that) case(children, of) nmod:poss(children, their) nmod:of(that, children) pnct(women, ?)","root(,VBP) cop(VBP,VBZ) det(NNP,DT) nsbj(VBP,NNP) dobj(VBP,DT) amod(NNS,JJ) root(DT,NNS) nsbj(VBP,WP) acl:relcl(NNS,VBP) mark(VB,TO) xcomp(VBP,VB) mark(VB,TO) xcomp(VB,VB) dobj(VB,NN) det(NN,DT) amod(NN,JJS) dobj(NN,NN) dobj(NN,NN) conj:bt(NN,NN) case(NN,IN) compond(NN,JJ) nmod:on(NN,NN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:for(NN,NNS) pnct(NN,NN) neg(RB,RB) cc:preconj(NN,RB) case(NN,IN) nmod:poss(NN,PRP$) nmod:for(NN,NN) cc(NN,CC) case(DT,IN) nmod:for(NN,DT) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:of(DT,NNS) pnct(NNS,NNS)","[ROOT, aware, Minister, that]","[ROOT, aware, Minister, that]",7,"[ROOT, aware, Minister, that]",[ ],JJ_aware NNP_Minister IN_that ,"[ROOT, aware, Minister, that]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will the hon. Gentleman now firmly and finally rebut any belief that the Secretary of State may have that charges for nursery education may fall outside the 1944 Act and are therefore being seriously considered by the Government?,WillMD theDT honJJ GentlemanNNP nowRB firmlyRB andCC finallyRB rebutVB anyDT beliefNN thatIN theDT SecretaryNNP ofIN StateNNP mayMD haveVB thatDT chargesNNS forIN nurseryDT educationNN mayMD fallVB outsideIN theDT 1944CD ActNNP andCC areVBP thereforeRB beingVBG seriouslyRB consideredVBN byIN theDT GovernmentNNP ,"root(ROOT-0, Will-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) dobj(Will-1, Gentleman-4) advmod(firmly-6, now-5) dep(Gentleman-4, firmly-6) cc(firmly-6, and-7) advmod(rebut-9, finally-8) dep(Gentleman-4, rebut-9) conj:and(firmly-6, rebut-9) det(belief-11, any-10) dobj(rebut-9, belief-11) mark(have-18, that-12) det(Secretary-14, the-13) nsubj(have-18, Secretary-14) case(State-16, of-15) nmod:of(Secretary-14, State-16) aux(have-18, may-17) ccomp(belief-11, have-18) mark(fall-25, that-19) nsubj(fall-25, charges-20) nsubjpass(considered-35, charges-20) case(education-23, for-21) compound(education-23, nursery-22) nmod:for(charges-20, education-23) aux(fall-25, may-24) ccomp(have-18, fall-25) case(Act-29, outside-26) det(Act-29, the-27) nummod(Act-29, 1944-28) nmod:outside(fall-25, Act-29) cc(fall-25, and-30) aux(considered-35, are-31) advmod(considered-35, therefore-32) auxpass(considered-35, being-33) advmod(considered-35, seriously-34) ccomp(have-18, considered-35) conj:and(fall-25, considered-35) case(Government-38, by-36) det(Government-38, the-37) nmod:agent(considered-35, Government-38) punct(Will-1, ?-39)",0,0,0,"root(ROOT, Will) det(Gentleman, the) compond(Gentleman, hon.) dobj(Will, Gentleman) advmod(firmly, now) dep(Gentleman, firmly) cc(firmly, and) advmod(rebt, finally) dep(Gentleman, rebt) conj:and(firmly, rebt) det(belief, any) dobj(rebt, belief) mark(have, that) det(Secretary, the) nsbj(have, Secretary) case(State, of) nmod:of(Secretary, State) ax(have, may) ccomp(belief, have) mark(fall, that) nsbj(fall, charges) nsbjpass(considered, charges) case(edcation, for) compond(edcation, nrsery) nmod:for(charges, edcation) ax(fall, may) ccomp(have, fall) case(Act, otside) det(Act, the) nmmod(Act, 1944) nmod:otside(fall, Act) cc(fall, and) ax(considered, are) advmod(considered, therefore) axpass(considered, being) advmod(considered, seriosly) ccomp(have, considered) conj:and(fall, considered) case(Government, by) det(Government, the) nmod:agent(considered, Government) pnct(Will, ?)","root(,MD) det(NNP,DT) compond(NNP,NNP) dobj(MD,NNP) advmod(RB,RB) dep(NNP,RB) cc(RB,CC) advmod(VB,RB) dep(NNP,VB) conj:and(RB,VB) det(NN,DT) dobj(VB,NN) mark(VB,DT) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) ax(VB,MD) ccomp(NN,VB) mark(VB,DT) nsbj(VB,NNS) nsbjpass(VBN,NNS) case(NN,IN) compond(NN,DT) nmod:for(NNS,NN) ax(VB,MD) ccomp(VB,VB) case(NNP,IN) det(NNP,DT) nmmod(NNP,CD) nmod:otside(VB,NNP) cc(VB,CC) ax(VBN,VBP) advmod(VBN,RB) axpass(VBN,VBG) advmod(VBN,RB) ccomp(VB,VBN) conj:and(VB,VBN) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) pnct(MD,MD)","[Will, firmly, Secretary, seriously, considered, Government, therefore, fall, Gentleman, and, have, State, finally, belief, rebut, charges, ROOT, now]","[Will, firmly, Secretary, seriously, considered, Government, therefore, fall, Gentleman, and, have, State, finally, belief, rebut, charges, ROOT, now]",7,"[Will, finally, firmly, charges, seriously, considered, belief, rebut, Government, therefore, ROOT, Gentleman, now, and, have]","[Will, finally, firmly, charges, seriously, considered, belief, rebut, Government, therefore, ROOT, Gentleman, now, and, have]",MD_Will RB_firmly NNP_Secretary RB_seriously VBD_considered NNP_Government RB_therefore NN_fall NNP_Gentleman CC_and VBP_have NNP_State RB_finally NN_belief VB_rebut NNS_charges RB_now ,"[Will, firmly, Secretary, seriously, considered, Government, therefore, fall, Gentleman, and, have, State, finally, belief, rebut, charges, ROOT, now]","[Will, firmly, Secretary, seriously, considered, Government, therefore, fall, Gentleman, and, have, State, finally, belief, rebut, charges, ROOT, now]",MD_Will RB_firmly NNP_Secretary RB_seriously VBD_considered NNP_Government RB_therefore NN_fall NNP_Gentleman CC_and VBP_have NNP_State RB_finally NN_belief VB_rebut NNS_charges RB_now ,"[Will, firmly, Secretary, seriously, considered, Government, therefore, fall, Gentleman, and, have, State, finally, belief, rebut, charges, ROOT, now]",MD_Will RB_firmly NNP_Secretary RB_seriously VBD_considered NNP_Government RB_therefore NN_fall NNP_Gentleman CC_and VBP_have NNP_State RB_finally NN_belief VB_rebut NNS_charges RB_now ,"[Will, firmly, Secretary, seriously, considered, Government, therefore, fall, Gentleman, and, have, State, finally, belief, rebut, charges, ROOT, now]",MD_Will RB_firmly NNP_Secretary RB_seriously VBD_considered NNP_Government RB_therefore NN_fall NNP_Gentleman CC_and VBP_have NNP_State RB_finally NN_belief VB_rebut NNS_charges RB_now ,1,2,2,2,1,2,2,2,2,2
I am sure that every hon. Member is aware that at times of economic recession all forms of education expenditure have to be examined to see whether there is a means of making economies or cut backs.,IPRP amVBP sureJJ thatIN everyDT honNN MemberNNP isVBZ awareJJ thatIN atIN timesNNS ofIN economicJJ recessionNN allDT formsNNS ofIN educationNN expenditureNN haveVBP toTO beVB examinedVBN toTO seeVB whetherIN thereEX isVBZ aDT meansNN ofIN makingVBG economiesNNS orCC cutNN backsNNS ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) mark(aware-9, that-4) det(Member-7, every-5) compound(Member-7, hon.-6) nsubj(aware-9, Member-7) cop(aware-9, is-8) ccomp(sure-3, aware-9) mark(have-21, that-10) case(times-12, at-11) nmod:at(have-21, times-12) case(recession-15, of-13) amod(recession-15, economic-14) nmod:of(times-12, recession-15) det(forms-17, all-16) nsubj(have-21, forms-17) case(expenditure-20, of-18) compound(expenditure-20, education-19) nmod:of(forms-17, expenditure-20) ccomp(aware-9, have-21) mark(examined-24, to-22) auxpass(examined-24, be-23) xcomp(have-21, examined-24) mark(see-26, to-25) xcomp(examined-24, see-26) mark(is-29, whether-27) expl(is-29, there-28) ccomp(see-26, is-29) det(means-31, a-30) nsubj(is-29, means-31) mark(making-33, of-32) acl(means-31, making-33) dobj(making-33, economies-34) cc(economies-34, or-35) dobj(making-33, cut-36) conj:or(economies-34, cut-36) dobj(cut-36, backs-37) punct(sure-3, .-38)",0,1,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) mark(aware, that) det(Member, every) compond(Member, hon.) nsbj(aware, Member) cop(aware, is) ccomp(sre, aware) mark(have, that) case(times, at) nmod:at(have, times) case(recession, of) amod(recession, economic) nmod:of(times, recession) det(forms, all) nsbj(have, forms) case(expenditre, of) compond(expenditre, edcation) nmod:of(forms, expenditre) ccomp(aware, have) mark(examined, to) axpass(examined, be) xcomp(have, examined) mark(see, to) xcomp(examined, see) mark(is, whether) expl(is, there) ccomp(see, is) det(means, a) nsbj(is, means) mark(making, of) acl(means, making) dobj(making, economies) cc(economies, or) dobj(making, ct) conj:or(economies, ct) dobj(ct, backs) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(JJ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) ccomp(JJ,JJ) mark(VBP,IN) case(NNS,IN) nmod:at(VBP,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) det(NNS,DT) nsbj(VBP,NNS) case(NN,IN) compond(NN,NN) nmod:of(NNS,NN) ccomp(JJ,VBP) mark(VBN,TO) axpass(VBN,VB) xcomp(VBP,VBN) mark(VB,TO) xcomp(VBN,VB) mark(VBZ,IN) expl(VBZ,EX) ccomp(VB,VBZ) det(NN,DT) nsbj(VBZ,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,NNS) cc(NNS,CC) dobj(VBG,NN) conj:or(NNS,NN) dobj(NN,NNS) pnct(JJ,JJ)","[Member, aware, sure, have]","[Member, aware, sure, have]",8,"[Member, aware, sure, have]",[ ],NNP_Member JJ_aware RB_sure VBP_have ,"[Member, aware, sure, have]","[Member, aware, sure, have]",NNP_Member JJ_aware RB_sure VBP_have ,"[Member, aware, sure, have]",NNP_Member JJ_aware RB_sure VBP_have ,"[Member, aware, sure, have]",NNP_Member JJ_aware RB_sure VBP_have ,-3,0,2,0,0,0,0,0,0,0
Has the Minister read the reports of the Secretary of State's speech yesterday suggesting that the Government might introduce charges for nursery education?,HasVBZ theDT MinisterNNP readVBD theDT reportsNNS ofIN theDT SecretaryNNP ofIN StateNNP 'sPOS speechNN yesterdayNN suggestingVBG thatIN theDT GovernmentNNP mightMD introduceVB chargesNNS forIN nurseryDT educationNN ,"root(ROOT-0, read-4) aux(read-4, Has-1) det(Minister-3, the-2) nsubj(read-4, Minister-3) det(reports-6, the-5) dobj(read-4, reports-6) case(Secretary-9, of-7) det(Secretary-9, the-8) nmod:of(reports-6, Secretary-9) case(speech-13, of-10) nmod:poss(speech-13, State-11) case(State-11, 's-12) nmod:of(Secretary-9, speech-13) nmod:tmod(read-4, yesterday-14) advcl(read-4, suggesting-15) mark(introduce-20, that-16) det(Government-18, the-17) nsubj(introduce-20, Government-18) aux(introduce-20, might-19) ccomp(suggesting-15, introduce-20) dobj(introduce-20, charges-21) case(education-24, for-22) compound(education-24, nursery-23) nmod:for(charges-21, education-24) punct(read-4, ?-25)",0,1,0,"root(ROOT, read) ax(read, Has) det(Minister, the) nsbj(read, Minister) det(reports, the) dobj(read, reports) case(Secretary, of) det(Secretary, the) nmod:of(reports, Secretary) case(speech, of) nmod:poss(speech, State) ""case(State, s)"", nmod:of(Secretary, speech) nmod:tmod(read, yesterday) advcl(read, sggesting) mark(introdce, that) det(Government, the) nsbj(introdce, Government) ax(introdce, might) ccomp(sggesting, introdce) dobj(introdce, charges) case(edcation, for) compond(edcation, nrsery) nmod:for(charges, edcation) pnct(read, ?)","root(,VBD) ax(VBD,VBZ) det(NNP,DT) nsbj(VBD,NNP) det(NNS,DT) dobj(VBD,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NNP,NN) nmod:tmod(VBD,NN) advcl(VBD,VBG) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) ccomp(VBG,VB) dobj(VB,NNS) case(NN,IN) compond(NN,DT) nmod:for(NNS,NN) pnct(VBD,VBD)","[State, read, charges, yesterday, suggesting, introduce, Minister, Government, ROOT, speech, reports, Secretary]","[State, read, charges, yesterday, suggesting, introduce, Minister, Government, ROOT, speech, reports, Secretary]",9,"[read, State, Secretary, speech, reports]","[read, State, Secretary, speech, reports]",NNP_State VBD_read NNS_charges NN_yesterday VBG_suggesting VB_introduce NNP_Minister NNP_Government NN_speech NNS_reports NNP_Secretary ,"[State, read, charges, yesterday, suggesting, introduce, Minister, Government, ROOT, speech, reports, Secretary]","[State, read, charges, yesterday, suggesting, introduce, Minister, Government, ROOT, speech, reports, Secretary]",NNP_State VBD_read NNS_charges NN_yesterday VBG_suggesting VB_introduce NNP_Minister NNP_Government NN_speech NNS_reports NNP_Secretary ,"[State, read, charges, yesterday, suggesting, introduce, Minister, Government, ROOT, speech, reports, Secretary]",NNP_State VBD_read NNS_charges NN_yesterday VBG_suggesting VB_introduce NNP_Minister NNP_Government NN_speech NNS_reports NNP_Secretary ,"[State, read, charges, yesterday, suggesting, introduce, Minister, Government, ROOT, speech, reports, Secretary]",NNP_State VBD_read NNS_charges NN_yesterday VBG_suggesting VB_introduce NNP_Minister NNP_Government NN_speech NNS_reports NNP_Secretary ,-3,0,2,0,0,0,0,0,0,0
Does he agree that poor children benefit most from nursery education?,DoesVBZ hePRP agreeVB thatIN poorJJ childrenNNS benefitVBP mostJJS fromIN nurseryJJ educationNN ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(benefit-7, that-4) amod(children-6, poor-5) nsubj(benefit-7, children-6) ccomp(agree-3, benefit-7) dobj(benefit-7, most-8) case(education-11, from-9) compound(education-11, nursery-10) nmod:from(most-8, education-11) punct(agree-3, ?-12)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(benefit, that) amod(children, poor) nsbj(benefit, children) ccomp(agree, benefit) dobj(benefit, most) case(edcation, from) compond(edcation, nrsery) nmod:from(most, edcation) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBP,IN) amod(NNS,JJ) nsbj(VBP,NNS) ccomp(VB,VBP) dobj(VBP,JJS) case(NN,IN) compond(NN,JJ) nmod:from(JJS,NN) pnct(VB,VB)","[he, ROOT, agree, benefit]","[he, ROOT, agree, benefit]",9,[ ],[ ],PRP_he VB_agree NN_benefit ,"[he, ROOT, agree, benefit]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is he aware that under any means tested form of support large numbers of poor families fail to claim their help?,IsVBZ hePRP awareJJ thatIN underIN anyDT meansNNS testedVBN formNN ofIN supportNN largeJJ numbersNNS ofIN poorJJ familiesNNS failVBP toTO claimVB theirPRP$ helpNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) dobj(aware-3, that-4) case(means-7, under-5) det(means-7, any-6) nmod:under(that-4, means-7) amod(form-9, tested-8) dep(means-7, form-9) case(support-11, of-10) nmod:of(form-9, support-11) amod(numbers-13, large-12) nsubj(fail-17, numbers-13) case(families-16, of-14) amod(families-16, poor-15) nmod:of(numbers-13, families-16) acl:relcl(form-9, fail-17) mark(claim-19, to-18) xcomp(fail-17, claim-19) nmod:poss(help-21, their-20) dobj(claim-19, help-21) punct(aware-3, ?-22)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) dobj(aware, that) case(means, nder) det(means, any) nmod:nder(that, means) amod(form, tested) dep(means, form) case(spport, of) nmod:of(form, spport) amod(nmbers, large) nsbj(fail, nmbers) case(families, of) amod(families, poor) nmod:of(nmbers, families) acl:relcl(form, fail) mark(claim, to) xcomp(fail, claim) nmod:poss(help, their) dobj(claim, help) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) dobj(JJ,IN) case(NNS,IN) det(NNS,DT) nmod:nder(IN,NNS) amod(NN,VBN) dep(NNS,NN) case(NN,IN) nmod:of(NN,NN) amod(NNS,JJ) nsbj(VBP,NNS) case(NNS,IN) amod(NNS,JJ) nmod:of(NNS,NNS) acl:relcl(NN,VBP) mark(VB,TO) xcomp(VBP,VB) nmod:poss(NN,PRP$) dobj(VB,NN) pnct(JJ,JJ)","[he, ROOT, aware, that]","[he, ROOT, aware, that]",9,"[he, ROOT, aware, that]",[ ],PRP_he JJ_aware IN_that ,"[he, ROOT, aware, that]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As I have said  obviously the Government are looking at all areas of educational expenditure.,AsIN IPRP haveVBP saidVBD obviouslyRB theDT GovernmentNNP areVBP lookingVBG atIN allDT areasNNS ofIN educationalJJ expenditureNN ,"root(ROOT-0, looking-10) mark(said-4, As-1) nsubj(said-4, I-2) aux(said-4, have-3) advcl(looking-10, said-4) punct(looking-10, ,-5) advmod(looking-10, obviously-6) det(Government-8, the-7) nsubj(looking-10, Government-8) aux(looking-10, are-9) case(areas-13, at-11) det(areas-13, all-12) nmod:at(looking-10, areas-13) case(expenditure-16, of-14) amod(expenditure-16, educational-15) nmod:of(areas-13, expenditure-16) punct(looking-10, .-17)",0,0,0,"root(ROOT, looking) mark(said, As) nsbj(said, I) ax(said, have) advcl(looking, said) pnct(looking, ,) advmod(looking, obviosly) det(Government, the) nsbj(looking, Government) ax(looking, are) case(areas, at) det(areas, all) nmod:at(looking, areas) case(expenditre, of) amod(expenditre, edcational) nmod:of(areas, expenditre) pnct(looking, .)","root(,VBG) mark(VBD,IN) nsbj(VBD,PRP) ax(VBD,VBP) advcl(VBG,VBD) pnct(VBG,VBG) advmod(VBG,RB) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBP) case(NNS,IN) det(NNS,DT) nmod:at(VBG,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) pnct(VBG,VBG)","[obviously, looking, areas, ROOT, Government, said]","[obviously, looking, areas, ROOT, Government, said]",10,[ ],[ ],RB_obviously VBG_looking NNS_areas NNP_Government VBD_said ,"[obviously, looking, areas, ROOT, Government, said]","[obviously, looking, areas, ROOT, Government, said]",RB_obviously VBG_looking NNS_areas NNP_Government VBD_said ,"[obviously, looking, areas, ROOT, Government, said]",RB_obviously VBG_looking NNS_areas NNP_Government VBD_said ,"[obviously, looking, areas, ROOT, Government, said]",RB_obviously VBG_looking NNS_areas NNP_Government VBD_said ,-3,0,1,2,1,2,0,0,0,0
I have here two quotations from what my right hon. Friend said yesterday.,IPRP haveVBP hereRB twoCD quotationsNNS fromIN whatWP myPRP$ rightJJ honNN FriendNNP saidVBD yesterdayNN ,"root(ROOT-0, have-2) nsubj(have-2, I-1) advmod(quotations-5, here-3) nummod(quotations-5, two-4) dobj(have-2, quotations-5) mark(said-12, from-6) dobj(said-12, what-7) nmod:poss(Friend-11, my-8) amod(Friend-11, right-9) compound(Friend-11, hon.-10) nsubj(said-12, Friend-11) acl(quotations-5, said-12) nmod:tmod(said-12, yesterday-13) punct(have-2, .-14)",0,0,0,"root(ROOT, have) nsbj(have, I) advmod(qotations, here) nmmod(qotations, two) dobj(have, qotations) mark(said, from) dobj(said, what) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(said, Friend) acl(qotations, said) nmod:tmod(said, yesterday) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) advmod(NNS,RB) nmmod(NNS,CD) dobj(VBP,NNS) mark(VBD,IN) dobj(VBD,WP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) acl(NNS,VBD) nmod:tmod(VBD,NN) pnct(VBP,VBP)","[Friend, quotations, my, yesterday, right, what, said]","[Friend, quotations, my, yesterday, what, said]",10,"[Friend, quotations, my, yesterday, what, said]","[Friend, quotations, my, yesterday, what, said]",NNP_Friend NNS_quotations PRP$_my NN_yesterday WP_what VBD_said ,"[Friend, quotations, my, yesterday, what, said]","[Friend, quotations, my, yesterday, what, said]",NNP_Friend NNS_quotations PRP$_my NN_yesterday WP_what VBD_said ,[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The first is this: I do have a slight feeling about the desirability of mothers of young children to be with them.,TheDT firstJJ isVBZ thisDT :: IPRP doVBP haveVB aDT slightJJ feelingNN aboutIN theDT desirabilityNN ofIN mothersNNS ofIN youngJJ childrenNNS toTO beVB withIN themPRP ,"root(ROOT-0, this-4) det(first-2, The-1) nsubj(this-4, first-2) cop(this-4, is-3) punct(this-4, :-5) nsubj(have-8, I-6) aux(have-8, do-7) parataxis(this-4, have-8) det(feeling-11, a-9) amod(feeling-11, slight-10) dobj(have-8, feeling-11) case(desirability-14, about-12) det(desirability-14, the-13) nmod:about(feeling-11, desirability-14) case(mothers-16, of-15) nmod:of(desirability-14, mothers-16) case(children-19, of-17) amod(children-19, young-18) nmod:of(mothers-16, children-19) mark(them-23, to-20) cop(them-23, be-21) case(them-23, with-22) xcomp(have-8, them-23) punct(this-4, .-24)",0,0,0,"root(ROOT, this) det(first, The) nsbj(this, first) cop(this, is) pnct(this, :) nsbj(have, I) ax(have, do) parataxis(this, have) det(feeling, a) amod(feeling, slight) dobj(have, feeling) case(desirability, abot) det(desirability, the) nmod:abot(feeling, desirability) case(mothers, of) nmod:of(desirability, mothers) case(children, of) amod(children, yong) nmod:of(mothers, children) mark(them, to) cop(them, be) case(them, with) xcomp(have, them) pnct(this, .)","root(,DT) det(JJ,DT) nsbj(DT,JJ) cop(DT,VBZ) pnct(DT,:) nsbj(VB,PRP) ax(VB,VBP) parataxis(DT,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:abot(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:of(NNS,NNS) mark(PRP,TO) cop(PRP,VB) case(PRP,IN) xcomp(VB,PRP) pnct(DT,DT)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I think that 95 per cent.,IPRP thinkVBP thatIN 95CD perIN centNN ,"root(ROOT-0, think-2) nsubj(think-2, I-1) dep(think-2, that-3) dep(that-3, 95-4) case(cent-6, per-5) nmod:per(95-4, cent-6) punct(think-2, .-7)",0,0,0,"root(ROOT, think) nsbj(think, I) dep(think, that) dep(that, 95) case(cent, per) nmod:per(95, cent) pnct(think, .)","root(,VBP) nsbj(VBP,PRP) dep(VBP,IN) dep(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBP,VBP)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the people of this country would entirely agree with that.,ofIN theDT peopleNNS ofIN thisDT countryNN wouldMD entirelyRB agreeVB withIN thatDT ,"root(ROOT-0, agree-9) case(people-3, of-1) det(people-3, the-2) nsubj(agree-9, people-3) case(country-6, of-4) det(country-6, this-5) nmod:of(people-3, country-6) aux(agree-9, would-7) advmod(agree-9, entirely-8) case(that-11, with-10) nmod:with(agree-9, that-11) punct(agree-9, .-12)",0,0,0,"root(ROOT, agree) case(people, of) det(people, the) nsbj(agree, people) case(contry, of) det(contry, this) nmod:of(people, contry) ax(agree, wold) advmod(agree, entirely) case(that, with) nmod:with(agree, that) pnct(agree, .)","root(,VB) case(NNS,IN) det(NNS,DT) nsbj(VB,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) ax(VB,MD) advmod(VB,RB) case(DT,IN) nmod:with(VB,DT) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Secondly  my right hon. Friend said  I do not see it as the duty of the Government to see that there is national provision for every child up to the age of five.,SecondlyRB myPRP$ rightJJ honNN FriendNNP saidVBD IPRP doVBP notRB seeVB itPRP asIN theDT dutyNN ofIN theDT GovernmentNNP toTO seeVB thatIN thereEX isVBZ nationalJJ provisionNN forIN everyDT childNN upRB toTO theDT ageNN ofIN fiveCD ,"root(ROOT-0, see-12) advmod(see-12, Secondly-1) punct(said-7, ,-2) nmod:poss(Friend-6, my-3) amod(Friend-6, right-4) compound(Friend-6, hon.-5) nsubj(said-7, Friend-6) parataxis(see-12, said-7) punct(said-7, ,-8) nsubj(see-12, I-9) aux(see-12, do-10) neg(see-12, not-11) dobj(see-12, it-13) case(duty-16, as-14) det(duty-16, the-15) nmod:as(see-12, duty-16) case(Government-19, of-17) det(Government-19, the-18) nmod:of(duty-16, Government-19) mark(see-21, to-20) advcl(see-12, see-21) mark(is-24, that-22) expl(is-24, there-23) ccomp(see-21, is-24) amod(provision-26, national-25) nsubj(is-24, provision-26) case(child-29, for-27) det(child-29, every-28) nmod:for(provision-26, child-29) case(age-33, up-30) case(age-33, to-31) det(age-33, the-32) acl:to(provision-26, age-33) case(five-35, of-34) nmod:of(age-33, five-35) punct(see-12, .-36)",0,0,0,"root(ROOT, see) advmod(see, Secondly) pnct(said, ,) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(said, Friend) parataxis(see, said) pnct(said, ,) nsbj(see, I) ax(see, do) neg(see, not) dobj(see, it) case(dty, as) det(dty, the) nmod:as(see, dty) case(Government, of) det(Government, the) nmod:of(dty, Government) mark(see, to) advcl(see, see) mark(is, that) expl(is, there) ccomp(see, is) amod(provision, national) nsbj(is, provision) case(child, for) det(child, every) nmod:for(provision, child) case(age, p) case(age, to) det(age, the) acl:to(provision, age) case(five, of) nmod:of(age, five) pnct(see, .)","root(,VB) advmod(VB,RB) pnct(VBD,VBD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) parataxis(VB,VBD) pnct(VBD,VBD) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) dobj(VB,PRP) case(NN,IN) det(NN,DT) nmod:as(VB,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) mark(VB,TO) advcl(VB,VB) mark(VBZ,IN) expl(VBZ,EX) ccomp(VB,VBZ) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) case(NN,RB) case(NN,TO) det(NN,DT) acl:to(NN,NN) case(CD,IN) nmod:of(NN,CD) pnct(VB,VB)","[Friend, my, see, duty, Government, said, right]","[Friend, my, see, duty, said, Government]",10,"[Friend, my, see, duty, said, Government]","[Friend, my, see, duty, said, Government]",NNP_Friend PRP$_my VB_see NN_duty VBD_said NNP_Government ,"[Friend, my, see, duty, said, Government]","[Friend, my, see, duty, said, Government]",NNP_Friend PRP$_my VB_see NN_duty VBD_said NNP_Government ,"[Friend, my, see, duty, said, Government]",NNP_Friend PRP$_my VB_see NN_duty VBD_said NNP_Government ,"[Friend, my, see, duty, said, Government]",NNP_Friend PRP$_my VB_see NN_duty VBD_said NNP_Government ,-3,0,1,0,0,0,0,0,0,0
Again  I think that 95 per cent.,AgainRB IPRP thinkVBP thatIN 95CD perIN centNN ,"root(ROOT-0, think-4) advmod(think-4, Again-1) punct(think-4, ,-2) nsubj(think-4, I-3) xcomp(think-4, that-5) dep(that-5, 95-6) case(cent-8, per-7) nmod:per(95-6, cent-8) punct(think-4, .-9)",0,0,0,"root(ROOT, think) advmod(think, Again) pnct(think, ,) nsbj(think, I) xcomp(think, that) dep(that, 95) case(cent, per) nmod:per(95, cent) pnct(think, .)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) nsbj(VBP,PRP) xcomp(VBP,IN) dep(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBP,VBP)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the people of Britain would entirely agree with that.,ofIN theDT peopleNNS ofIN BritainNNP wouldMD entirelyRB agreeVB withIN thatDT ,"root(ROOT-0, agree-8) case(people-3, of-1) det(people-3, the-2) nsubj(agree-8, people-3) case(Britain-5, of-4) nmod:of(people-3, Britain-5) aux(agree-8, would-6) advmod(agree-8, entirely-7) case(that-10, with-9) nmod:with(agree-8, that-10) punct(agree-8, .-11)",0,0,1,"root(ROOT, agree) case(people, of) det(people, the) nsbj(agree, people) case(Britain, of) nmod:of(people, Britain) ax(agree, wold) advmod(agree, entirely) case(that, with) nmod:with(agree, that) pnct(agree, .)","root(,VB) case(NNS,IN) det(NNS,DT) nsbj(VB,NNS) case(NNP,IN) nmod:of(NNS,NNP) ax(VB,MD) advmod(VB,RB) case(DT,IN) nmod:with(VB,DT) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Scotland how many tractors are in use in Scotland which are of foreign manufacture.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN ScotlandNNP howWRB manyJJ tractorsNNS areVBP inIN useNN inIN ScotlandNNP whichWDT areVBP ofIN foreignJJ manufactureNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) nsubj(use-13, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Scotland-7, for-6) nmod:for(Secretary-3, Scotland-7) advmod(many-9, how-8) amod(tractors-10, many-9) nsubj(use-13, tractors-10) cop(use-13, are-11) case(use-13, in-12) ccomp(asked-1, use-13) case(Scotland-15, in-14) nmod:in(use-13, Scotland-15) nsubj(manufacture-20, which-16) cop(manufacture-20, are-17) case(manufacture-20, of-18) amod(manufacture-20, foreign-19) acl:relcl(use-13, manufacture-20) punct(asked-1, .-21)",0,1,1,"root(ROOT, asked) det(Secretary, the) nsbj(se, Secretary) case(State, of) nmod:of(Secretary, State) case(Scotland, for) nmod:for(Secretary, Scotland) advmod(many, how) amod(tractors, many) nsbj(se, tractors) cop(se, are) case(se, in) ccomp(asked, se) case(Scotland, in) nmod:in(se, Scotland) nsbj(manfactre, which) cop(manfactre, are) case(manfactre, of) amod(manfactre, foreign) acl:relcl(se, manfactre) pnct(asked, .)","root(,VBN) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) advmod(JJ,WRB) amod(NNS,JJ) nsbj(NN,NNS) cop(NN,VBP) case(NN,IN) ccomp(VBN,NN) case(NNP,IN) nmod:in(NN,NNP) nsbj(NN,WDT) cop(NN,VBP) case(NN,IN) amod(NN,JJ) acl:relcl(NN,NN) pnct(VBN,VBN)","[tractors, use, Scotland, State, Secretary, asked, manufacture, Scotland]","[tractors, use, Scotland, State, Secretary, asked, manufacture, Scotland]",1,"[tractors, use, Scotland, State, Secretary, asked, manufacture, Scotland]",[ ],NNS_tractors NN_use NNP_Scotland NNP_State NNP_Secretary VBN_asked NN_manufacture NNP_Scotland ,"[tractors, use, Scotland, State, Secretary, asked, manufacture, Scotland]","[tractors, use, Scotland, State, Secretary, asked, manufacture, Scotland]",NNS_tractors NN_use NNP_Scotland NNP_State NNP_Secretary VBN_asked NN_manufacture NNP_Scotland ,"[tractors, use, Scotland, State, Secretary, asked, manufacture, Scotland]",NNS_tractors NN_use NNP_Scotland NNP_State NNP_Secretary VBN_asked NN_manufacture NNP_Scotland ,"[tractors, use, Scotland, State, Secretary, asked, manufacture, Scotland]",NNS_tractors NN_use NNP_Scotland NNP_State NNP_Secretary VBN_asked NN_manufacture NNP_Scotland ,-3,0,2,0,0,0,0,0,0,0
The latest Department of Transport information shows that at 31 December 1980 there were 45  000 tractors of all kinds in use in Scotland.,TheDT latestJJS DepartmentNNP ofIN TransportNNP informationNN showsVBZ thatIN atIN 31CD DecemberNNP 1980CD thereEX wereVBD 45CD 000CD tractorsNNS ofIN allDT kindsNNS inIN useNN inIN ScotlandNNP ,"root(ROOT-0, shows-7) det(Department-3, The-1) amod(Department-3, latest-2) nsubj(shows-7, Department-3) case(information-6, of-4) compound(information-6, Transport-5) nmod:of(Department-3, information-6) mark(were-14, that-8) case(December-11, at-9) nummod(December-11, 31-10) nmod:at(were-14, December-11) nummod(December-11, 1980-12) expl(were-14, there-13) ccomp(shows-7, were-14) nummod(tractors-18, 45-15) punct(45-15, ,-16) nummod(tractors-18, 000-17) nsubj(were-14, tractors-18) case(kinds-21, of-19) det(kinds-21, all-20) nmod:of(tractors-18, kinds-21) case(use-23, in-22) nmod:in(tractors-18, use-23) case(Scotland-25, in-24) nmod:in(use-23, Scotland-25) punct(shows-7, .-26)",0,0,0,"root(ROOT, shows) det(Department, The) amod(Department, latest) nsbj(shows, Department) case(information, of) compond(information, Transport) nmod:of(Department, information) mark(were, that) case(December, at) nmmod(December, 31) nmod:at(were, December) nmmod(December, 1980) expl(were, there) ccomp(shows, were) nmmod(tractors, 45) pnct(45, ,) nmmod(tractors, 000) nsbj(were, tractors) case(kinds, of) det(kinds, all) nmod:of(tractors, kinds) case(se, in) nmod:in(tractors, se) case(Scotland, in) nmod:in(se, Scotland) pnct(shows, .)","root(,VBZ) det(NNP,DT) amod(NNP,JJS) nsbj(VBZ,NNP) case(NN,IN) compond(NN,NNP) nmod:of(NNP,NN) mark(VBD,IN) case(NNP,IN) nmmod(NNP,CD) nmod:at(VBD,NNP) nmmod(NNP,CD) expl(VBD,EX) ccomp(VBZ,VBD) nmmod(NNS,CD) pnct(CD,CD) nmmod(NNS,CD) nsbj(VBD,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) case(NN,IN) nmod:in(NNS,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VBZ,VBZ)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is not possible to identify how many were of foreign manufacture.,ItPRP isVBZ notRB possibleJJ toTO identifyVB howWRB manyJJ wereVBD ofIN foreignJJ manufactureNN ,"root(ROOT-0, possible-4) nsubj(possible-4, It-1) cop(possible-4, is-2) neg(possible-4, not-3) mark(identify-6, to-5) xcomp(possible-4, identify-6) advmod(many-8, how-7) nsubj(manufacture-12, many-8) cop(manufacture-12, were-9) case(manufacture-12, of-10) amod(manufacture-12, foreign-11) ccomp(identify-6, manufacture-12) punct(possible-4, .-13)",0,0,1,"root(ROOT, possible) nsbj(possible, It) cop(possible, is) neg(possible, not) mark(identify, to) xcomp(possible, identify) advmod(many, how) nsbj(manfactre, many) cop(manfactre, were) case(manfactre, of) amod(manfactre, foreign) ccomp(identify, manfactre) pnct(possible, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) neg(JJ,RB) mark(VB,TO) xcomp(JJ,VB) advmod(JJ,WRB) nsbj(NN,JJ) cop(NN,VBD) case(NN,IN) amod(NN,JJ) ccomp(VB,NN) pnct(JJ,JJ)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In the extreme conditions of December and January  did not the Bathgate Leyland tractor perform better than all others?,InIN theDT extremeJJ conditionsNNS ofIN DecemberNNP andCC JanuaryNNP didVBD notRB theDT BathgateNNP LeylandNNP tractorNN performNN betterJJR thanIN allDT othersNNS ,"root(ROOT-0, perform-16) case(conditions-4, In-1) det(conditions-4, the-2) amod(conditions-4, extreme-3) nmod:in(perform-16, conditions-4) case(December-6, of-5) nmod:of(conditions-4, December-6) cc(December-6, and-7) nmod:of(conditions-4, January-8) conj:and(December-6, January-8) punct(perform-16, ,-9) aux(perform-16, did-10) neg(perform-16, not-11) det(tractor-15, the-12) compound(tractor-15, Bathgate-13) compound(tractor-15, Leyland-14) nsubj(perform-16, tractor-15) dobj(perform-16, better-17) case(others-20, than-18) det(others-20, all-19) nmod:than(better-17, others-20) punct(perform-16, ?-21)",0,0,0,"root(ROOT, perform) case(conditions, In) det(conditions, the) amod(conditions, extreme) nmod:in(perform, conditions) case(December, of) nmod:of(conditions, December) cc(December, and) nmod:of(conditions, Janary) conj:and(December, Janary) pnct(perform, ,) ax(perform, did) neg(perform, not) det(tractor, the) compond(tractor, Bathgate) compond(tractor, Leyland) nsbj(perform, tractor) dobj(perform, better) case(others, than) det(others, all) nmod:than(better, others) pnct(perform, ?)","root(,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:in(NN,NNS) case(NNP,IN) nmod:of(NNS,NNP) cc(NNP,CC) nmod:of(NNS,NNP) conj:and(NNP,NNP) pnct(NN,NN) ax(NN,VBD) neg(NN,RB) det(NN,DT) compond(NN,NNP) compond(NN,NNP) nsbj(NN,NN) dobj(NN,JJR) case(NNS,IN) det(NNS,DT) nmod:than(JJR,NNS) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am afraid that no information is available on which one could make such a judgment.,IPRP amVBP afraidJJ thatIN noDT informationNN isVBZ availableJJ onIN whichWDT oneNN couldMD makeVB suchJJ aDT judgmentNN ,"root(ROOT-0, afraid-3) nsubj(afraid-3, I-1) cop(afraid-3, am-2) mark(available-8, that-4) neg(information-6, no-5) nsubj(available-8, information-6) cop(available-8, is-7) ccomp(afraid-3, available-8) case(which-10, on-9) nmod:on(make-13, which-10) nsubj(make-13, one-11) aux(make-13, could-12) ccomp(available-8, make-13) det:predet(judgment-16, such-14) det(judgment-16, a-15) dobj(make-13, judgment-16) punct(afraid-3, .-17)",0,1,0,"root(ROOT, afraid) nsbj(afraid, I) cop(afraid, am) mark(available, that) neg(information, no) nsbj(available, information) cop(available, is) ccomp(afraid, available) case(which, on) nmod:on(make, which) nsbj(make, one) ax(make, cold) ccomp(available, make) det:predet(jdgment, sch) det(jdgment, a) dobj(make, jdgment) pnct(afraid, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(JJ,IN) neg(NN,DT) nsbj(JJ,NN) cop(JJ,VBZ) ccomp(JJ,JJ) case(WDT,IN) nmod:on(VB,WDT) nsbj(VB,NN) ax(VB,MD) ccomp(JJ,VB) det:predet(NN,JJ) det(NN,DT) dobj(VB,NN) pnct(JJ,JJ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  the hon. Gentleman will be pleased to know that the Bathgate plant  which is being converted to engine manufacture  as he knows  will supply the engines to Marshall Sons and Co. Ltd. of Lincolnshire  which is taking up the production of the tractor facility from British Leyland.,HoweverRB theDT honNN GentlemanNNP willMD beVB pleasedVBN toTO knowVB thatIN theDT BathgateNNP plantNN whichWDT isVBZ beingVBG convertedVBN toTO engineNN manufactureNN asIN hePRP knowsVBZ willMD supplyVB theDT enginesNNS toTO MarshallNNP SonsNNP andCC CoNNP LtdNNP ofIN LincolnshireNNP whichWDT isVBZ takingVBG upRP theDT productionNN ofIN theDT tractorNN facilityNN fromIN BritishJJ LeylandNNP ,"root(ROOT-0, pleased-8) advmod(pleased-8, However-1) punct(pleased-8, ,-2) det(Gentleman-5, the-3) compound(Gentleman-5, hon.-4) nsubjpass(pleased-8, Gentleman-5) aux(pleased-8, will-6) auxpass(pleased-8, be-7) mark(know-10, to-9) xcomp(pleased-8, know-10) dobj(know-10, that-11) det(plant-14, the-12) compound(plant-14, Bathgate-13) dep(that-11, plant-14) punct(plant-14, ,-15) nsubjpass(converted-19, which-16) aux(converted-19, is-17) auxpass(converted-19, being-18) acl:relcl(plant-14, converted-19) case(manufacture-22, to-20) compound(manufacture-22, engine-21) nmod:to(converted-19, manufacture-22) punct(plant-14, ,-23) mark(knows-26, as-24) nsubj(knows-26, he-25) dep(plant-14, knows-26) punct(knows-26, ,-27) aux(supply-29, will-28) ccomp(knows-26, supply-29) det(engines-31, the-30) dobj(supply-29, engines-31) case(Sons-34, to-32) compound(Sons-34, Marshall-33) nmod:to(supply-29, Sons-34) cc(Sons-34, and-35) compound(Ltd.-37, Co.-36) nmod:to(supply-29, Ltd.-37) conj:and(Sons-34, Ltd.-37) case(Lincolnshire-39, of-38) nmod:of(Ltd.-37, Lincolnshire-39) punct(Sons-34, ,-40) nsubj(taking-43, which-41) aux(taking-43, is-42) acl:relcl(Sons-34, taking-43) compound:prt(taking-43, up-44) det(production-46, the-45) dobj(taking-43, production-46) case(facility-50, of-47) det(facility-50, the-48) compound(facility-50, tractor-49) nmod:of(production-46, facility-50) case(Leyland-53, from-51) amod(Leyland-53, British-52) nmod:from(facility-50, Leyland-53) punct(pleased-8, .-54)",0,0,0,"root(ROOT, pleased) advmod(pleased, However) pnct(pleased, ,) det(Gentleman, the) compond(Gentleman, hon.) nsbjpass(pleased, Gentleman) ax(pleased, will) axpass(pleased, be) mark(know, to) xcomp(pleased, know) dobj(know, that) det(plant, the) compond(plant, Bathgate) dep(that, plant) pnct(plant, ,) nsbjpass(converted, which) ax(converted, is) axpass(converted, being) acl:relcl(plant, converted) case(manfactre, to) compond(manfactre, engine) nmod:to(converted, manfactre) pnct(plant, ,) mark(knows, as) nsbj(knows, he) dep(plant, knows) pnct(knows, ,) ax(spply, will) ccomp(knows, spply) det(engines, the) dobj(spply, engines) case(Sons, to) compond(Sons, Marshall) nmod:to(spply, Sons) cc(Sons, and) compond(Ltd., Co.) nmod:to(spply, Ltd.) conj:and(Sons, Ltd.) case(Lincolnshire, of) nmod:of(Ltd., Lincolnshire) pnct(Sons, ,) nsbj(taking, which) ax(taking, is) acl:relcl(Sons, taking) compond:prt(taking, p) det(prodction, the) dobj(taking, prodction) case(facility, of) det(facility, the) compond(facility, tractor) nmod:of(prodction, facility) case(Leyland, from) amod(Leyland, British) nmod:from(facility, Leyland) pnct(pleased, .)","root(,VBN) advmod(VBN,RB) pnct(VBN,VBN) det(NNP,DT) compond(NNP,NNP) nsbjpass(VBN,NNP) ax(VBN,MD) axpass(VBN,VB) mark(VB,TO) xcomp(VBN,VB) dobj(VB,IN) det(NN,DT) compond(NN,NNP) dep(IN,NN) pnct(NN,NN) nsbjpass(VBN,WDT) ax(VBN,VBZ) axpass(VBN,VBG) acl:relcl(NN,VBN) case(NN,TO) compond(NN,NN) nmod:to(VBN,NN) pnct(NN,NN) mark(VBZ,IN) nsbj(VBZ,PRP) dep(NN,VBZ) pnct(VBZ,VBZ) ax(VB,MD) ccomp(VBZ,VB) det(NNS,DT) dobj(VB,NNS) case(NNP,TO) compond(NNP,NNP) nmod:to(VB,NNP) cc(NNP,CC) compond(CC,CC) nmod:to(VB,VB) conj:and(NNP,NNP) case(NNP,IN) nmod:of(IN,NNP) pnct(NNP,NNP) nsbj(VBG,WDT) ax(VBG,VBZ) acl:relcl(NNP,VBG) compond:prt(VBG,RP) det(NN,DT) dobj(VBG,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) case(NNP,IN) amod(NNP,JJ) nmod:from(NN,NNP) pnct(VBN,VBN)","[However, he, knows, pleased, know, plant, Gentleman, ROOT, supply]","[However, he, knows, pleased, know, plant, Gentleman, ROOT, supply]",4,"[supply, knows, he, plant]","[supply, knows, he, plant]",RB_However PRP_he VBZ_knows VBN_pleased VB_know NN_plant NNP_Gentleman VB_supply ,"[However, he, knows, pleased, know, plant, Gentleman, ROOT, supply]","[However, he, knows, pleased, know, plant, Gentleman, ROOT, supply]",RB_However PRP_he VBZ_knows VBN_pleased VB_know NN_plant NNP_Gentleman VB_supply ,"[However, he, knows, pleased, know, plant, Gentleman, ROOT, supply]",RB_However PRP_he VBZ_knows VBN_pleased VB_know NN_plant NNP_Gentleman VB_supply ,"[However, he, knows, pleased, know, plant, Gentleman, ROOT, supply]",RB_However PRP_he VBZ_knows VBN_pleased VB_know NN_plant NNP_Gentleman VB_supply ,-3,0,2,1,1,1,1,1,1,2
May I advise my hon. Friend  as he does not seem to know  that I have six British Leyland tractors in my company  and that there was never any trouble from any of them during the winter or summer months.,MayNNP IPRP adviseVBP myPRP$ honNN FriendNNP asIN hePRP doesVBZ notRB seemVB toTO knowVB thatIN IPRP haveVBP sixCD BritishJJ LeylandNNP tractorsNNS inIN myPRP$ companyNN andCC thatIN thereEX wasVBD neverRB anyDT troubleNN fromIN anyDT ofIN themPRP duringIN theDT winterNN orCC summerNN monthsNNS ,"root(ROOT-0, advise-3) nmod:tmod(advise-3, May-1) nsubj(advise-3, I-2) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) dobj(advise-3, Friend-6) punct(advise-3, ,-7) mark(seem-12, as-8) nsubj(seem-12, he-9) aux(seem-12, does-10) neg(seem-12, not-11) advcl(advise-3, seem-12) mark(know-14, to-13) xcomp(seem-12, know-14) punct(advise-3, ,-15) mark(have-18, that-16) nsubj(have-18, I-17) ccomp(advise-3, have-18) nummod(tractors-22, six-19) amod(tractors-22, British-20) compound(tractors-22, Leyland-21) dobj(have-18, tractors-22) case(company-25, in-23) nmod:poss(company-25, my-24) nmod:in(have-18, company-25) punct(have-18, ,-26) cc(have-18, and-27) mark(was-30, that-28) expl(was-30, there-29) ccomp(advise-3, was-30) conj:and(have-18, was-30) neg(was-30, never-31) det(trouble-33, any-32) nsubj(was-30, trouble-33) case(any-35, from-34) nmod:from(trouble-33, any-35) case(them-37, of-36) nmod:of(any-35, them-37) case(winter-40, during-38) det(winter-40, the-39) nmod:during(any-35, winter-40) cc(winter-40, or-41) compound(months-43, summer-42) nmod:during(any-35, months-43) conj:or(winter-40, months-43) punct(advise-3, .-44)",0,0,0,"root(ROOT, advise) nmod:tmod(advise, May) nsbj(advise, I) nmod:poss(Friend, my) compond(Friend, hon.) dobj(advise, Friend) pnct(advise, ,) mark(seem, as) nsbj(seem, he) ax(seem, does) neg(seem, not) advcl(advise, seem) mark(know, to) xcomp(seem, know) pnct(advise, ,) mark(have, that) nsbj(have, I) ccomp(advise, have) nmmod(tractors, six) amod(tractors, British) compond(tractors, Leyland) dobj(have, tractors) case(company, in) nmod:poss(company, my) nmod:in(have, company) pnct(have, ,) cc(have, and) mark(was, that) expl(was, there) ccomp(advise, was) conj:and(have, was) neg(was, never) det(troble, any) nsbj(was, troble) case(any, from) nmod:from(troble, any) case(them, of) nmod:of(any, them) case(winter, dring) det(winter, the) nmod:dring(any, winter) cc(winter, or) compond(months, smmer) nmod:dring(any, months) conj:or(winter, months) pnct(advise, .)","root(,VBP) nmod:tmod(VBP,NNP) nsbj(VBP,PRP) nmod:poss(NNP,PRP$) compond(NNP,NNP) dobj(VBP,NNP) pnct(VBP,VBP) mark(VB,IN) nsbj(VB,PRP) ax(VB,VBZ) neg(VB,RB) advcl(VBP,VB) mark(VB,TO) xcomp(VB,VB) pnct(VBP,VBP) mark(VBP,IN) nsbj(VBP,PRP) ccomp(VBP,VBP) nmmod(NNS,CD) amod(NNS,JJ) compond(NNS,NNP) dobj(VBP,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(VBP,NN) pnct(VBP,VBP) cc(VBP,CC) mark(VBD,IN) expl(VBD,EX) ccomp(VBP,VBD) conj:and(VBP,VBD) neg(VBD,RB) det(NN,DT) nsbj(VBD,NN) case(DT,IN) nmod:from(NN,DT) case(PRP,IN) nmod:of(DT,PRP) case(NN,IN) det(NN,DT) nmod:dring(DT,NN) cc(NN,CC) compond(NNS,NN) nmod:dring(DT,NNS) conj:or(NN,NNS) pnct(VBP,VBP)","[advise, seem, May, Friend, know, he, I, my, not, ROOT, have, was]","[advise, seem, May, Friend, know, he, I, my, not, ROOT, have, was]",5,"[advise, seem, May, Friend, I, my, ROOT, have, was]","[advise, seem, May, Friend, I, my, ROOT, have, was]",VBP_advise VB_seem NNP_May NNP_Friend VB_know PRP_he PRP_I PRP$_my RB_not VBP_have VBD_was ,"[advise, seem, May, Friend, know, he, I, my, not, ROOT, have, was]","[advise, seem, May, Friend, know, he, I, my, not, ROOT, have, was]",VBP_advise VB_seem NNP_May NNP_Friend VB_know PRP_he PRP_I PRP$_my RB_not VBP_have VBD_was ,"[advise, seem, May, Friend, know, he, I, my, not, ROOT, have, was]",VBP_advise VB_seem NNP_May NNP_Friend VB_know PRP_he PRP_I PRP$_my RB_not VBP_have VBD_was ,"[advise, seem, May, Friend, know, he, I, my, not, ROOT, have, was]",VBP_advise VB_seem NNP_May NNP_Friend VB_know PRP_he PRP_I PRP$_my RB_not VBP_have VBD_was ,-3,0,2,2,1,2,0,0,0,2
They are a credit to those who built them  which is different from many imports.,TheyPRP areVBP aDT creditNN toTO thoseDT whoWP builtVBP themPRP whichWDT isVBZ differentJJ fromIN manyJJ importsNNS ,"root(ROOT-0, credit-4) nsubj(credit-4, They-1) cop(credit-4, are-2) det(credit-4, a-3) case(those-6, to-5) nmod:to(credit-4, those-6) nsubj(built-8, who-7) acl:relcl(those-6, built-8) dobj(built-8, them-9) punct(those-6, ,-10) nsubj(different-13, which-11) cop(different-13, is-12) acl:relcl(those-6, different-13) case(imports-16, from-14) amod(imports-16, many-15) nmod:from(different-13, imports-16) punct(credit-4, .-17)",0,0,0,"root(ROOT, credit) nsbj(credit, They) cop(credit, are) det(credit, a) case(those, to) nmod:to(credit, those) nsbj(bilt, who) acl:relcl(those, bilt) dobj(bilt, them) pnct(those, ,) nsbj(different, which) cop(different, is) acl:relcl(those, different) case(imports, from) amod(imports, many) nmod:from(different, imports) pnct(credit, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBP) det(NN,DT) case(DT,TO) nmod:to(NN,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) dobj(VBP,PRP) pnct(DT,DT) nsbj(JJ,WDT) cop(JJ,VBZ) acl:relcl(DT,JJ) case(NNS,IN) amod(NNS,JJ) nmod:from(JJ,NNS) pnct(NN,NN)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am delighted to hear that.,IPRP amVBP delightedJJ toTO hearVB thatIN ,"root(ROOT-0, delighted-3) nsubj(delighted-3, I-1) cop(delighted-3, am-2) mark(hear-5, to-4) xcomp(delighted-3, hear-5) dobj(hear-5, that-6) punct(delighted-3, .-7)",0,1,0,"root(ROOT, delighted) nsbj(delighted, I) cop(delighted, am) mark(hear, to) xcomp(delighted, hear) dobj(hear, that) pnct(delighted, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VB,TO) xcomp(JJ,VB) dobj(VB,IN) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I am sure that the House will want to know that the tractor industry in Britain is still one of the largest in the world  with output of about £860 million.,IPRP amVBP sureJJ thatIN theDT HouseNNP willMD wantVB toTO knowVB thatIN theDT tractorNN industryNN inIN BritainNNP isVBZ stillRB oneCD ofIN theDT largestJJS inIN theDT worldNN withIN outputNN ofIN aboutIN £860CD millionCD ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) mark(want-8, that-4) det(House-6, the-5) nsubj(want-8, House-6) aux(want-8, will-7) ccomp(sure-3, want-8) mark(know-10, to-9) xcomp(want-8, know-10) mark(one-19, that-11) det(industry-14, the-12) compound(industry-14, tractor-13) nsubj(one-19, industry-14) case(Britain-16, in-15) nmod:in(industry-14, Britain-16) cop(one-19, is-17) advmod(one-19, still-18) ccomp(know-10, one-19) case(largest-22, of-20) det(largest-22, the-21) nmod:of(one-19, largest-22) case(world-25, in-23) det(world-25, the-24) nmod:in(largest-22, world-25) punct(one-19, ,-26) case(output-28, with-27) nmod:with(one-19, output-28) case(million-33, of-29) advmod(million-33, about-30) compound(million-33, #-31) compound(million-33, 860-32) nmod:of(output-28, million-33) punct(sure-3, .-34)",0,0,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) mark(want, that) det(Hose, the) nsbj(want, Hose) ax(want, will) ccomp(sre, want) mark(know, to) xcomp(want, know) mark(one, that) det(indstry, the) compond(indstry, tractor) nsbj(one, indstry) case(Britain, in) nmod:in(indstry, Britain) cop(one, is) advmod(one, still) ccomp(know, one) case(largest, of) det(largest, the) nmod:of(one, largest) case(world, in) det(world, the) nmod:in(largest, world) pnct(one, ,) case(otpt, with) nmod:with(one, otpt) case(million, of) advmod(million, abot) compond(million, #) compond(million, 860) nmod:of(otpt, million) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) ccomp(JJ,VB) mark(VB,TO) xcomp(VB,VB) mark(CD,IN) det(NN,DT) compond(NN,NN) nsbj(CD,NN) case(NNP,IN) nmod:in(NN,NNP) cop(CD,VBZ) advmod(CD,RB) ccomp(VB,CD) case(JJS,IN) det(JJS,DT) nmod:of(CD,JJS) case(NN,IN) det(NN,DT) nmod:in(JJS,NN) pnct(CD,CD) case(NN,IN) nmod:with(CD,NN) case(CD,IN) advmod(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NN,CD) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It employs about 28  000 people.,ItPRP employsVBZ aboutIN 28CD 000CD peopleNNS ,"root(ROOT-0, employs-2) nsubj(employs-2, It-1) advmod(28-4, about-3) dobj(employs-2, 28-4) punct(28-4, ,-5) nummod(people-7, 000-6) appos(28-4, people-7) punct(employs-2, .-8)",0,0,0,"root(ROOT, employs) nsbj(employs, It) advmod(28, abot) dobj(employs, 28) pnct(28, ,) nmmod(people, 000) appos(28, people) pnct(employs, .)","root(,VBZ) nsbj(VBZ,PRP) advmod(CD,IN) dobj(VBZ,CD) pnct(CD,CD) nmmod(NNS,CD) appos(CD,NNS) pnct(VBZ,VBZ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  it is heavily dependent upon exports.,HoweverRB itPRP isVBZ heavilyRB dependentJJ uponIN exportsNNS ,"root(ROOT-0, dependent-6) advmod(dependent-6, However-1) punct(dependent-6, ,-2) nsubj(dependent-6, it-3) cop(dependent-6, is-4) advmod(dependent-6, heavily-5) case(exports-8, upon-7) nmod:upon(dependent-6, exports-8) punct(dependent-6, .-9)",0,0,0,"root(ROOT, dependent) advmod(dependent, However) pnct(dependent, ,) nsbj(dependent, it) cop(dependent, is) advmod(dependent, heavily) case(exports, pon) nmod:pon(dependent, exports) pnct(dependent, .)","root(,JJ) advmod(JJ,RB) pnct(JJ,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) case(NNS,IN) nmod:pon(JJ,NNS) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Unfortunately  in recent years British Leyland's tractor sales have fallen to only about 3 per cent.,UnfortunatelyRB inIN recentJJ yearsNNS BritishJJ LeylandNNP 'sPOS tractorNN salesNNS haveVBP fallenVBN toTO onlyRB aboutRB 3CD perIN centNN ,"root(ROOT-0, fallen-12) advmod(fallen-12, Unfortunately-1) punct(fallen-12, ,-2) case(years-5, in-3) amod(years-5, recent-4) nmod:in(fallen-12, years-5) amod(Leyland-7, British-6) nmod:poss(sales-10, Leyland-7) case(Leyland-7, 's-8) compound(sales-10, tractor-9) nsubj(fallen-12, sales-10) aux(fallen-12, have-11) case(3-16, to-13) advmod(3-16, only-14) advmod(3-16, about-15) nmod:to(fallen-12, 3-16) case(cent-18, per-17) nmod:per(3-16, cent-18) punct(fallen-12, .-19)",0,0,0,"root(ROOT, fallen) advmod(fallen, Unfortnately) pnct(fallen, ,) case(years, in) amod(years, recent) nmod:in(fallen, years) amod(Leyland, British) nmod:poss(sales, Leyland) ""case(Leyland, s)"", compond(sales, tractor) nsbj(fallen, sales) ax(fallen, have) case(3, to) advmod(3, only) advmod(3, abot) nmod:to(fallen, 3) case(cent, per) nmod:per(3, cent) pnct(fallen, .)","root(,VBN) advmod(VBN,RB) pnct(VBN,VBN) case(NNS,IN) amod(NNS,JJ) nmod:in(VBN,NNS) amod(NNP,JJ) nmod:poss(NNS,NNP) case(NNP,POS) compond(NNS,NN) nsbj(VBN,NNS) ax(VBN,VBP) case(CD,TO) advmod(CD,RB) advmod(CD,RB) nmod:to(VBN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBN,VBN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of United Kingdom output.,ofIN UnitedNNP KingdomNNP outputNN ,"root(ROOT-0, output-4) case(output-4, of-1) compound(output-4, United-2) compound(output-4, Kingdom-3) punct(output-4, .-5)",0,0,1,"root(ROOT, otpt) case(otpt, of) compond(otpt, United) compond(otpt, Kingdom) pnct(otpt, .)","root(,NN) case(NN,IN) compond(NN,NNP) compond(NN,NNP) pnct(NN,NN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Was it flogged to South Africa in order to be supplied to competitors there  rather than being used for British production?,WasIN itPRP floggedVBD toTO SouthNNP AfricaNNP inIN orderNN toTO beVB suppliedVBN toTO competitorsNNS thereRB ratherRB thanIN beingVBG usedVBN forIN BritishJJ productionNN ,"root(ROOT-0, Was-1) nsubj(flogged-3, it-2) ccomp(Was-1, flogged-3) case(Africa-6, to-4) compound(Africa-6, South-5) nmod:to(flogged-3, Africa-6) mark(supplied-11, in-7) mwe(in-7, order-8) mark(supplied-11, to-9) auxpass(supplied-11, be-10) advcl(flogged-3, supplied-11) case(competitors-13, to-12) nmod:to(supplied-11, competitors-13) advmod(competitors-13, there-14) punct(supplied-11, ,-15) cc(supplied-11, rather-16) mwe(rather-16, than-17) auxpass(used-19, being-18) advcl(flogged-3, used-19) conj:negcc(supplied-11, used-19) case(production-22, for-20) amod(production-22, British-21) nmod:for(used-19, production-22) punct(Was-1, ?-23)",0,0,0,"root(ROOT, Was) nsbj(flogged, it) ccomp(Was, flogged) case(Africa, to) compond(Africa, Soth) nmod:to(flogged, Africa) mark(spplied, in) mwe(in, order) mark(spplied, to) axpass(spplied, be) advcl(flogged, spplied) case(competitors, to) nmod:to(spplied, competitors) advmod(competitors, there) pnct(spplied, ,) cc(spplied, rather) mwe(rather, than) axpass(sed, being) advcl(flogged, sed) conj:negcc(spplied, sed) case(prodction, for) amod(prodction, British) nmod:for(sed, prodction) pnct(Was, ?)","root(,IN) nsbj(VBD,PRP) ccomp(IN,VBD) case(NNP,TO) compond(NNP,NNP) nmod:to(VBD,NNP) mark(VBN,IN) mwe(IN,NN) mark(VBN,TO) axpass(VBN,VB) advcl(VBD,VBN) case(NNS,TO) nmod:to(VBN,NNS) advmod(NNS,RB) pnct(VBN,VBN) cc(VBN,RB) mwe(RB,IN) axpass(VBN,VBG) advcl(VBD,VBN) conj:negcc(VBN,VBN) case(NN,IN) amod(NN,JJ) nmod:for(VBN,NN) pnct(IN,IN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It may have gone there  but the fact is that there was no company in the United Kingdom  including the nationalised British Leyland  that was willing to take over the Chrysler plant at Linwood.,ItPRP mayMD haveVB goneVBN thereRB butCC theDT factNN isVBZ thatIN thereEX wasVBD noDT companyNN inIN theDT UnitedNNP KingdomNNP includingVBG theDT nationalisedJJ BritishJJ LeylandNNP thatWDT wasVBD willingJJ toTO takeVB overRP theDT ChryslerNNP plantNN atIN LinwoodNNP ,"root(ROOT-0, gone-4) nsubj(gone-4, It-1) aux(gone-4, may-2) aux(gone-4, have-3) advmod(gone-4, there-5) punct(gone-4, ,-6) cc(gone-4, but-7) det(fact-9, the-8) nsubj(is-10, fact-9) conj:but(gone-4, is-10) mark(was-13, that-11) expl(was-13, there-12) ccomp(is-10, was-13) neg(company-15, no-14) nsubj(was-13, company-15) case(Kingdom-19, in-16) det(Kingdom-19, the-17) compound(Kingdom-19, United-18) nmod:in(company-15, Kingdom-19) punct(was-13, ,-20) case(Leyland-25, including-21) det(Leyland-25, the-22) amod(Leyland-25, nationalised-23) amod(Leyland-25, British-24) nmod:including(was-13, Leyland-25) punct(was-13, ,-26) nsubj(willing-29, that-27) cop(willing-29, was-28) acl:relcl(was-13, willing-29) mark(take-31, to-30) xcomp(willing-29, take-31) compound:prt(take-31, over-32) det(plant-35, the-33) compound(plant-35, Chrysler-34) dobj(take-31, plant-35) case(Linwood-37, at-36) nmod:at(take-31, Linwood-37) punct(gone-4, .-38)",0,0,0,"root(ROOT, gone) nsbj(gone, It) ax(gone, may) ax(gone, have) advmod(gone, there) pnct(gone, ,) cc(gone, bt) det(fact, the) nsbj(is, fact) conj:bt(gone, is) mark(was, that) expl(was, there) ccomp(is, was) neg(company, no) nsbj(was, company) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(company, Kingdom) pnct(was, ,) case(Leyland, inclding) det(Leyland, the) amod(Leyland, nationalised) amod(Leyland, British) nmod:inclding(was, Leyland) pnct(was, ,) nsbj(willing, that) cop(willing, was) acl:relcl(was, willing) mark(take, to) xcomp(willing, take) compond:prt(take, over) det(plant, the) compond(plant, Chrysler) dobj(take, plant) case(Linwood, at) nmod:at(take, Linwood) pnct(gone, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,MD) ax(VBN,VB) advmod(VBN,EX) pnct(VBN,VBN) cc(VBN,CC) det(NN,DT) nsbj(VBZ,NN) conj:bt(VBN,VBZ) mark(VBD,WDT) expl(VBD,EX) ccomp(VBZ,VBD) neg(NN,DT) nsbj(VBD,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) pnct(VBD,VBD) case(NNP,VBG) det(NNP,DT) amod(NNP,JJ) amod(NNP,JJ) nmod:inclding(VBD,NNP) pnct(VBD,VBD) nsbj(JJ,WDT) cop(JJ,VBD) acl:relcl(VBD,JJ) mark(VB,TO) xcomp(JJ,VB) compond:prt(VB,RP) det(NN,DT) compond(NN,NNP) dobj(VB,NN) case(NNP,IN) nmod:at(VB,NNP) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
With regard to the repayment of grants  any liability of the Talbot company to the Government on any item of plant will be collected by the Department of Industry.,WithIN regardNN toTO theDT repaymentNN ofIN grantsNNS anyDT liabilityNN ofIN theDT TalbotNNP companyNN toTO theDT GovernmentNNP onIN anyDT itemNN ofIN plantNN willMD beVB collectedVBN byIN theDT DepartmentNNP ofIN IndustryNNP ,"root(ROOT-0, collected-25) case(regard-2, With-1) nmod:with(collected-25, regard-2) case(repayment-5, to-3) det(repayment-5, the-4) nmod:to(regard-2, repayment-5) case(grants-7, of-6) nmod:of(repayment-5, grants-7) punct(collected-25, ,-8) det(liability-10, any-9) nsubjpass(collected-25, liability-10) case(company-14, of-11) det(company-14, the-12) compound(company-14, Talbot-13) nmod:of(liability-10, company-14) case(Government-17, to-15) det(Government-17, the-16) nmod:to(liability-10, Government-17) case(item-20, on-18) det(item-20, any-19) nmod:on(liability-10, item-20) case(plant-22, of-21) nmod:of(item-20, plant-22) aux(collected-25, will-23) auxpass(collected-25, be-24) case(Department-28, by-26) det(Department-28, the-27) nmod:agent(collected-25, Department-28) case(Industry-30, of-29) nmod:of(Department-28, Industry-30) punct(collected-25, .-31)",0,0,0,"root(ROOT, collected) case(regard, With) nmod:with(collected, regard) case(repayment, to) det(repayment, the) nmod:to(regard, repayment) case(grants, of) nmod:of(repayment, grants) pnct(collected, ,) det(liability, any) nsbjpass(collected, liability) case(company, of) det(company, the) compond(company, Talbot) nmod:of(liability, company) case(Government, to) det(Government, the) nmod:to(liability, Government) case(item, on) det(item, any) nmod:on(liability, item) case(plant, of) nmod:of(item, plant) ax(collected, will) axpass(collected, be) case(Department, by) det(Department, the) nmod:agent(collected, Department) case(Indstry, of) nmod:of(Department, Indstry) pnct(collected, .)","root(,VBN) case(NN,IN) nmod:with(VBN,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBN,VBN) det(NN,DT) nsbjpass(VBN,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:of(NN,NN) case(NNP,TO) det(NNP,DT) nmod:to(NN,NNP) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NN,IN) nmod:of(NN,NN) ax(VBN,MD) axpass(VBN,VB) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VBN,VBN)","[collected, company, liability, item, Government]","[collected, company, liability, item, Government]",8,"[collected, company, liability, item, Government]","[collected, company, liability, item, Government]",VBN_collected NN_company NN_liability NN_item NNP_Government ,"[collected, company, liability, item, Government]","[collected, company, liability, item, Government]",VBN_collected NN_company NN_liability NN_item NNP_Government ,"[collected, company, liability, item, Government]",VBN_collected NN_company NN_liability NN_item NNP_Government ,"[collected, company, liability, item, Government]",VBN_collected NN_company NN_liability NN_item NNP_Government ,-3,0,2,2,1,2,2,2,2,2
Is my hon. Friend aware that if tractors and cars were sold in this country at the prices at which they are available abroad  there would be a great increase in the home use of British made tractors and cars?,IsVBZ myPRP$ honJJ FriendNNP awareNN thatIN ifIN tractorsNNS andCC carsNNS wereVBD soldVBN inIN thisDT countryNN atIN theDT pricesNNS atIN whichWDT theyPRP areVBP availableJJ abroadRB thereEX wouldMD beVB aDT greatJJ increaseNN inIN theDT homeNN useNN ofIN BritishJJ madeVBN tractorsNNS andCC carsNNS ,"root(ROOT-0, aware-5) cop(aware-5, Is-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(aware-5, Friend-4) mark(increase-31, that-6) mark(sold-12, if-7) nsubjpass(sold-12, tractors-8) cc(tractors-8, and-9) conj:and(tractors-8, cars-10) nsubjpass(sold-12, cars-10) auxpass(sold-12, were-11) advcl(increase-31, sold-12) case(country-15, in-13) det(country-15, this-14) nmod:in(sold-12, country-15) case(prices-18, at-16) det(prices-18, the-17) nmod:at(sold-12, prices-18) case(which-20, at-19) nmod:at(available-23, which-20) nsubj(available-23, they-21) cop(available-23, are-22) acl:relcl(prices-18, available-23) advmod(available-23, abroad-24) punct(increase-31, ,-25) expl(increase-31, there-26) aux(increase-31, would-27) cop(increase-31, be-28) det(increase-31, a-29) amod(increase-31, great-30) ccomp(aware-5, increase-31) case(use-35, in-32) det(use-35, the-33) compound(use-35, home-34) nmod:in(increase-31, use-35) case(tractors-39, of-36) amod(tractors-39, British-37) amod(tractors-39, made-38) nmod:of(use-35, tractors-39) cc(tractors-39, and-40) nmod:of(use-35, cars-41) conj:and(tractors-39, cars-41) punct(aware-5, ?-42)",0,0,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(aware, Friend) mark(increase, that) mark(sold, if) nsbjpass(sold, tractors) cc(tractors, and) conj:and(tractors, cars) nsbjpass(sold, cars) axpass(sold, were) advcl(increase, sold) case(contry, in) det(contry, this) nmod:in(sold, contry) case(prices, at) det(prices, the) nmod:at(sold, prices) case(which, at) nmod:at(available, which) nsbj(available, they) cop(available, are) acl:relcl(prices, available) advmod(available, abroad) pnct(increase, ,) expl(increase, there) ax(increase, wold) cop(increase, be) det(increase, a) amod(increase, great) ccomp(aware, increase) case(se, in) det(se, the) compond(se, home) nmod:in(increase, se) case(tractors, of) amod(tractors, British) amod(tractors, made) nmod:of(se, tractors) cc(tractors, and) nmod:of(se, cars) conj:and(tractors, cars) pnct(aware, ?)","root(,NN) cop(NN,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) mark(NN,IN) mark(VBN,IN) nsbjpass(VBN,NNS) cc(NNS,CC) conj:and(NNS,NNS) nsbjpass(VBN,NNS) axpass(VBN,VBD) advcl(NN,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) case(NNS,IN) det(NNS,DT) nmod:at(VBN,NNS) case(WDT,IN) nmod:at(JJ,WDT) nsbj(JJ,PRP) cop(JJ,VBP) acl:relcl(NNS,JJ) advmod(JJ,RB) pnct(NN,NN) expl(NN,EX) ax(NN,MD) cop(NN,VB) det(NN,DT) amod(NN,JJ) ccomp(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NN,NN) case(NNS,IN) amod(NNS,JJ) amod(NNS,VBN) nmod:of(NN,NNS) cc(NNS,CC) nmod:of(NN,NNS) conj:and(NNS,NNS) pnct(NN,NN)","[ROOT, aware, my, increase, Friend]","[ROOT, aware, my, increase, Friend]",9,"[ROOT, aware, my, increase, Friend]",[ ],JJ_aware PRP$_my VB_increase NNP_Friend ,"[ROOT, aware, my, increase, Friend]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Is not such trading a great disadvantage to the dealers in tractors and cars?,IsVBZ notRB suchJJ tradingVBG aDT greatJJ disadvantageNN toTO theDT dealersNNS inIN tractorsNNS andCC carsNNS ,"root(ROOT-0, trading-4) aux(trading-4, Is-1) neg(trading-4, not-2) amod(trading-4, such-3) det(disadvantage-7, a-5) amod(disadvantage-7, great-6) dobj(trading-4, disadvantage-7) case(dealers-10, to-8) det(dealers-10, the-9) nmod:to(disadvantage-7, dealers-10) case(tractors-12, in-11) nmod:in(dealers-10, tractors-12) cc(tractors-12, and-13) nmod:in(dealers-10, cars-14) conj:and(tractors-12, cars-14) punct(trading-4, ?-15)",0,0,1,"root(ROOT, trading) ax(trading, Is) neg(trading, not) amod(trading, sch) det(disadvantage, a) amod(disadvantage, great) dobj(trading, disadvantage) case(dealers, to) det(dealers, the) nmod:to(disadvantage, dealers) case(tractors, in) nmod:in(dealers, tractors) cc(tractors, and) nmod:in(dealers, cars) conj:and(tractors, cars) pnct(trading, ?)","root(,VBG) ax(VBG,VBZ) neg(VBG,RB) amod(VBG,JJ) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) case(NNS,TO) det(NNS,DT) nmod:to(NN,NNS) case(NNS,IN) nmod:in(NNS,NNS) cc(NNS,CC) nmod:in(NNS,NNS) conj:and(NNS,NNS) pnct(VBG,VBG)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
One of our economic problems is not so much the shortage of demand for British goods as their shortage of supply.,OneCD ofIN ourPRP$ economicJJ problemsNNS isVBZ notRB soRB muchJJ theDT shortageNN ofIN demandNN forIN BritishJJ goodsNNS asIN theirPRP$ shortageNN ofIN supplyNN ,"root(ROOT-0, much-9) nsubj(much-9, One-1) case(problems-5, of-2) nmod:poss(problems-5, our-3) amod(problems-5, economic-4) nmod:of(One-1, problems-5) cop(much-9, is-6) neg(much-9, not-7) advmod(much-9, so-8) det(shortage-11, the-10) dep(much-9, shortage-11) case(demand-13, of-12) nmod:of(shortage-11, demand-13) case(goods-16, for-14) amod(goods-16, British-15) nmod:for(demand-13, goods-16) case(shortage-19, as-17) nmod:poss(shortage-19, their-18) nmod:as(shortage-11, shortage-19) case(supply-21, of-20) nmod:of(shortage-19, supply-21) punct(much-9, .-22)",0,1,0,"root(ROOT, mch) nsbj(mch, One) case(problems, of) nmod:poss(problems, or) amod(problems, economic) nmod:of(One, problems) cop(mch, is) neg(mch, not) advmod(mch, so) det(shortage, the) dep(mch, shortage) case(demand, of) nmod:of(shortage, demand) case(goods, for) amod(goods, British) nmod:for(demand, goods) case(shortage, as) nmod:poss(shortage, their) nmod:as(shortage, shortage) case(spply, of) nmod:of(shortage, spply) pnct(mch, .)","root(,JJ) nsbj(JJ,CD) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:of(CD,NNS) cop(JJ,VBZ) neg(JJ,RB) advmod(JJ,RB) det(NN,DT) dep(JJ,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:for(NN,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:as(NN,NN) case(NN,IN) nmod:of(NN,NN) pnct(JJ,JJ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  the tractor industry is still a large employer and a big producer in the United Kingdom.,HoweverRB theDT tractorNN industryNN isVBZ stillRB aDT largeJJ employerNN andCC aDT bigJJ producerNN inIN theDT UnitedNNP KingdomNNP ,"root(ROOT-0, employer-10) advmod(employer-10, However-1) punct(employer-10, ,-2) det(industry-5, the-3) compound(industry-5, tractor-4) nsubj(employer-10, industry-5) cop(employer-10, is-6) advmod(employer-10, still-7) det(employer-10, a-8) amod(employer-10, large-9) cc(employer-10, and-11) det(producer-14, a-12) amod(producer-14, big-13) conj:and(employer-10, producer-14) case(Kingdom-18, in-15) det(Kingdom-18, the-16) compound(Kingdom-18, United-17) nmod:in(producer-14, Kingdom-18) punct(employer-10, .-19)",0,0,0,"root(ROOT, employer) advmod(employer, However) pnct(employer, ,) det(indstry, the) compond(indstry, tractor) nsbj(employer, indstry) cop(employer, is) advmod(employer, still) det(employer, a) amod(employer, large) cc(employer, and) det(prodcer, a) amod(prodcer, big) conj:and(employer, prodcer) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(prodcer, Kingdom) pnct(employer, .)","root(,NN) advmod(NN,RB) pnct(NN,NN) det(NN,DT) compond(NN,NN) nsbj(NN,NN) cop(NN,VBZ) advmod(NN,RB) det(NN,DT) amod(NN,JJ) cc(NN,CC) det(NN,DT) amod(NN,JJ) conj:and(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) pnct(NN,NN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It depends heavily upon exports for most of its business.,ItPRP dependsVBZ heavilyRB uponJJ exportsNNS forIN mostJJS ofIN itsPRP$ businessNN ,"root(ROOT-0, depends-2) nsubj(depends-2, It-1) advmod(depends-2, heavily-3) case(exports-5, upon-4) nmod:upon(depends-2, exports-5) case(most-7, for-6) nmod:for(exports-5, most-7) case(business-10, of-8) nmod:poss(business-10, its-9) nmod:of(most-7, business-10) punct(depends-2, .-11)",0,0,0,"root(ROOT, depends) nsbj(depends, It) advmod(depends, heavily) case(exports, pon) nmod:pon(depends, exports) case(most, for) nmod:for(exports, most) case(bsiness, of) nmod:poss(bsiness, its) nmod:of(most, bsiness) pnct(depends, .)","root(,VBZ) nsbj(VBZ,PRP) advmod(VBZ,RB) case(NNS,JJ) nmod:pon(VBZ,NNS) case(JJS,IN) nmod:for(NNS,JJS) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(JJS,NN) pnct(VBZ,VBZ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
There is no reason to believe that that pattern will not continue under improved productivity and efficiency  which the tractor industry  like others  is now achieving.,ThereEX isVBZ noDT reasonNN toTO believeVB thatIN thatDT patternNN willMD notRB continueVB underIN improvedJJ productivityNN andCC efficiencyNN whichWDT theDT tractorNN industryNN likeIN othersNNS isVBZ nowRB achievingVBG ,"root(ROOT-0, is-2) expl(is-2, There-1) neg(reason-4, no-3) nsubj(is-2, reason-4) mark(believe-6, to-5) acl(reason-4, believe-6) mark(continue-12, that-7) det(pattern-9, that-8) nsubj(continue-12, pattern-9) aux(continue-12, will-10) neg(continue-12, not-11) ccomp(believe-6, continue-12) case(productivity-15, under-13) amod(productivity-15, improved-14) nmod:under(continue-12, productivity-15) cc(productivity-15, and-16) nmod:under(continue-12, efficiency-17) conj:and(productivity-15, efficiency-17) punct(productivity-15, ,-18) dobj(achieving-29, which-19) det(industry-22, the-20) compound(industry-22, tractor-21) nsubj(achieving-29, industry-22) punct(achieving-29, ,-23) case(others-25, like-24) nmod:like(achieving-29, others-25) punct(achieving-29, ,-26) aux(achieving-29, is-27) advmod(achieving-29, now-28) acl:relcl(productivity-15, achieving-29) punct(is-2, .-30)",0,0,0,"root(ROOT, is) expl(is, There) neg(reason, no) nsbj(is, reason) mark(believe, to) acl(reason, believe) mark(contine, that) det(pattern, that) nsbj(contine, pattern) ax(contine, will) neg(contine, not) ccomp(believe, contine) case(prodctivity, nder) amod(prodctivity, improved) nmod:nder(contine, prodctivity) cc(prodctivity, and) nmod:nder(contine, efficiency) conj:and(prodctivity, efficiency) pnct(prodctivity, ,) dobj(achieving, which) det(indstry, the) compond(indstry, tractor) nsbj(achieving, indstry) pnct(achieving, ,) case(others, like) nmod:like(achieving, others) pnct(achieving, ,) ax(achieving, is) advmod(achieving, now) acl:relcl(prodctivity, achieving) pnct(is, .)","root(,VBZ) expl(VBZ,EX) neg(NN,DT) nsbj(VBZ,NN) mark(VB,TO) acl(NN,VB) mark(VB,DT) det(NN,DT) nsbj(VB,NN) ax(VB,MD) neg(VB,RB) ccomp(VB,VB) case(NN,IN) amod(NN,JJ) nmod:nder(VB,NN) cc(NN,CC) nmod:nder(VB,NN) conj:and(NN,NN) pnct(NN,NN) dobj(VBG,WDT) det(NN,DT) compond(NN,NN) nsbj(VBG,NN) pnct(VBG,VBG) case(NNS,IN) nmod:like(VBG,NNS) pnct(VBG,VBG) ax(VBG,VBZ) advmod(VBG,RB) acl:relcl(NN,VBG) pnct(VBZ,VBZ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Minister tell the House how many Massey Ferguson combine harvesters have had to be imported?,WillMD theDT MinisterNNP tellVBP theDT HouseNNP howWRB manyJJ MasseyNNP FergusonNNP combineNN harvestersNNS haveVBP hadVBN toTO beVB importedVBN ,"root(ROOT-0, tell-4) aux(tell-4, Will-1) det(Minister-3, the-2) nsubj(tell-4, Minister-3) det(House-6, the-5) dobj(tell-4, House-6) advmod(many-8, how-7) advmod(combine-11, many-8) compound(Ferguson-10, Massey-9) nsubj(combine-11, Ferguson-10) ccomp(tell-4, combine-11) nsubj(had-14, harvesters-12) aux(had-14, have-13) ccomp(combine-11, had-14) mark(imported-17, to-15) auxpass(imported-17, be-16) xcomp(had-14, imported-17) punct(tell-4, ?-18)",0,1,0,"root(ROOT, tell) ax(tell, Will) det(Minister, the) nsbj(tell, Minister) det(Hose, the) dobj(tell, Hose) advmod(many, how) advmod(combine, many) compond(Fergson, Massey) nsbj(combine, Fergson) ccomp(tell, combine) nsbj(had, harvesters) ax(had, have) ccomp(combine, had) mark(imported, to) axpass(imported, be) xcomp(had, imported) pnct(tell, ?)","root(,VBP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) det(NNP,DT) dobj(VBP,NNP) advmod(JJ,WRB) advmod(NN,JJ) compond(NNP,NNP) nsbj(NN,NNP) ccomp(VBP,NN) nsbj(VBN,NNS) ax(VBN,VBP) ccomp(NN,VBN) mark(VBN,TO) axpass(VBN,VB) xcomp(VBN,VBN) pnct(VBP,VBP)","[tell, ROOT, House, combine, Minister]","[tell, ROOT, House, combine, Minister]",11,[ ],[ ],VB_tell NNP_House NN_combine NNP_Minister ,"[tell, ROOT, House, combine, Minister]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my hon. Friend agree that it is illogical to argue  as Opposition Members do  that the price of food should be kept down and that the farmers should not buy tractors in the cheapest market?,DoesNNP myPRP$ honNN FriendNNP agreeVBZ thatIN itPRP isVBZ illogicalJJ toTO argueVB asIN OppositionNNP MembersNNP doVBP thatIN theDT priceNN ofIN foodNN shouldMD beVB keptVBN downRB andCC thatIN theDT farmersNNS shouldMD notRB buyVB tractorsNNS inIN theDT cheapestNN marketNN ,"root(ROOT-0, agree-5) aux(agree-5, Does-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(agree-5, Friend-4) mark(illogical-9, that-6) nsubj(illogical-9, it-7) cop(illogical-9, is-8) ccomp(agree-5, illogical-9) mark(argue-11, to-10) xcomp(illogical-9, argue-11) punct(illogical-9, ,-12) mark(do-16, as-13) compound(Members-15, Opposition-14) nsubj(do-16, Members-15) advcl(illogical-9, do-16) punct(illogical-9, ,-17) mark(kept-25, that-18) det(price-20, the-19) nsubjpass(kept-25, price-20) case(food-22, of-21) nmod:of(price-20, food-22) aux(kept-25, should-23) auxpass(kept-25, be-24) ccomp(illogical-9, kept-25) advmod(kept-25, down-26) cc(kept-25, and-27) mark(buy-33, that-28) det(farmers-30, the-29) nsubj(buy-33, farmers-30) aux(buy-33, should-31) neg(buy-33, not-32) ccomp(illogical-9, buy-33) conj:and(kept-25, buy-33) dobj(buy-33, tractors-34) case(market-38, in-35) det(market-38, the-36) amod(market-38, cheapest-37) nmod:in(buy-33, market-38) punct(agree-5, ?-39)",0,0,0,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(agree, Friend) mark(illogical, that) nsbj(illogical, it) cop(illogical, is) ccomp(agree, illogical) mark(arge, to) xcomp(illogical, arge) pnct(illogical, ,) mark(do, as) compond(Members, Opposition) nsbj(do, Members) advcl(illogical, do) pnct(illogical, ,) mark(kept, that) det(price, the) nsbjpass(kept, price) case(food, of) nmod:of(price, food) ax(kept, shold) axpass(kept, be) ccomp(illogical, kept) advmod(kept, down) cc(kept, and) mark(by, that) det(farmers, the) nsbj(by, farmers) ax(by, shold) neg(by, not) ccomp(illogical, by) conj:and(kept, by) dobj(by, tractors) case(market, in) det(market, the) amod(market, cheapest) nmod:in(by, market) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) ccomp(VBZ,JJ) mark(VB,TO) xcomp(JJ,VB) pnct(JJ,JJ) mark(VBP,IN) compond(NNP,NNP) nsbj(VBP,NNP) advcl(JJ,VBP) pnct(JJ,JJ) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NN,IN) nmod:of(NN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) advmod(VBN,RB) cc(VBN,CC) mark(VB,IN) det(NNS,DT) nsbj(VB,NNS) ax(VB,MD) neg(VB,RB) ccomp(JJ,VB) conj:and(VBN,VB) dobj(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,NN) nmod:in(VB,NN) pnct(VBZ,VBZ)","[Friend, do, ROOT, illogical, my, agree, Members]","[Friend, do, ROOT, illogical, my, agree, Members]",13,"[do, Members]","[do, Members]",NNP_Friend VB_do JJ_illogical PRP$_my VB_agree NNS_Members ,"[Friend, do, ROOT, illogical, my, agree, Members]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The efficiency of British industry depends on a free choice in the market.,TheDT efficiencyNN ofIN BritishJJ industryNN dependsVBZ onIN aDT freeJJ choiceNN inIN theDT marketNN ,"root(ROOT-0, depends-6) det(efficiency-2, The-1) nsubj(depends-6, efficiency-2) case(industry-5, of-3) amod(industry-5, British-4) nmod:of(efficiency-2, industry-5) case(choice-10, on-7) det(choice-10, a-8) amod(choice-10, free-9) nmod:on(depends-6, choice-10) case(market-13, in-11) det(market-13, the-12) nmod:in(choice-10, market-13) punct(depends-6, .-14)",0,0,0,"root(ROOT, depends) det(efficiency, The) nsbj(depends, efficiency) case(indstry, of) amod(indstry, British) nmod:of(efficiency, indstry) case(choice, on) det(choice, a) amod(choice, free) nmod:on(depends, choice) case(market, in) det(market, the) nmod:in(choice, market) pnct(depends, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VBZ,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(VBZ,VBZ)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
That includes a free choice of tractors.,ThatDT includesVBZ aDT freeJJ choiceNN ofIN tractorsNNS ,"root(ROOT-0, includes-2) nsubj(includes-2, That-1) det(choice-5, a-3) amod(choice-5, free-4) dobj(includes-2, choice-5) case(tractors-7, of-6) nmod:of(choice-5, tractors-7) punct(includes-2, .-8)",0,0,0,"root(ROOT, incldes) nsbj(incldes, That) det(choice, a) amod(choice, free) dobj(incldes, choice) case(tractors, of) nmod:of(choice, tractors) pnct(incldes, .)","root(,VBZ) nsbj(VBZ,DT) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBZ,VBZ)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The onus is on the rest of British industry to produce goods efficiently.,TheDT onusNN isVBZ onIN theDT restNN ofIN BritishJJ industryNN toTO produceVB goodsNNS efficientlyRB ,"root(ROOT-0, rest-6) det(onus-2, The-1) nsubj(rest-6, onus-2) cop(rest-6, is-3) case(rest-6, on-4) det(rest-6, the-5) case(industry-9, of-7) amod(industry-9, British-8) nmod:of(rest-6, industry-9) mark(produce-11, to-10) acl(rest-6, produce-11) dobj(produce-11, goods-12) advmod(produce-11, efficiently-13) punct(rest-6, .-14)",0,0,0,"root(ROOT, rest) det(ons, The) nsbj(rest, ons) cop(rest, is) case(rest, on) det(rest, the) case(indstry, of) amod(indstry, British) nmod:of(rest, indstry) mark(prodce, to) acl(rest, prodce) dobj(prodce, goods) advmod(prodce, efficiently) pnct(rest, .)","root(,NN) det(NN,DT) nsbj(NN,NN) cop(NN,VBZ) case(NN,IN) det(NN,DT) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) mark(VB,TO) acl(NN,VB) dobj(VB,NNS) advmod(VB,RB) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is now happening and is welcome to everyone.,ThatDT isVBZ nowRB happeningVBG andCC isVBZ welcomeJJ toTO everyoneNN ,"root(ROOT-0, happening-4) nsubj(happening-4, That-1) nsubj(welcome-7, That-1) aux(happening-4, is-2) advmod(happening-4, now-3) cc(happening-4, and-5) cop(welcome-7, is-6) conj:and(happening-4, welcome-7) case(everyone-9, to-8) nmod:to(welcome-7, everyone-9) punct(happening-4, .-10)",0,0,1,"root(ROOT, happening) nsbj(happening, That) nsbj(welcome, That) ax(happening, is) advmod(happening, now) cc(happening, and) cop(welcome, is) conj:and(happening, welcome) case(everyone, to) nmod:to(welcome, everyone) pnct(happening, .)","root(,VBG) nsbj(VBG,DT) nsbj(JJ,DT) ax(VBG,VBZ) advmod(VBG,RB) cc(VBG,CC) cop(JJ,VBZ) conj:and(VBG,JJ) case(NN,TO) nmod:to(JJ,NN) pnct(VBG,VBG)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Energy when last he met the chairman of the National Coal Board to discuss investment in the coal industry.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN EnergyNNP whenWRB lastJJ hePRP metVBD theDT chairmanNN ofIN theDT NationalNNP CoalNNP BoardNNP toTO discussVB investmentNN inIN theDT coalNN industryNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Energy-7, for-6) nmod:for(Secretary-3, Energy-7) advmod(met-11, when-8) advmod(met-11, last-9) nsubj(met-11, he-10) advcl(asked-1, met-11) det(chairman-13, the-12) dobj(met-11, chairman-13) case(Board-18, of-14) det(Board-18, the-15) compound(Board-18, National-16) compound(Board-18, Coal-17) nmod:of(chairman-13, Board-18) mark(discuss-20, to-19) advcl(met-11, discuss-20) dobj(discuss-20, investment-21) case(industry-25, in-22) det(industry-25, the-23) compound(industry-25, coal-24) nmod:in(investment-21, industry-25) punct(asked-1, .-26)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Energy, for) nmod:for(Secretary, Energy) advmod(met, when) advmod(met, last) nsbj(met, he) advcl(asked, met) det(chairman, the) dobj(met, chairman) case(Board, of) det(Board, the) compond(Board, National) compond(Board, Coal) nmod:of(chairman, Board) mark(discss, to) advcl(met, discss) dobj(discss, investment) case(indstry, in) det(indstry, the) compond(indstry, coal) nmod:in(investment, indstry) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) advmod(VBD,WRB) advmod(VBD,JJ) nsbj(VBD,PRP) advcl(VBN,VBD) det(NN,DT) dobj(VBD,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NN,NNP) mark(VB,TO) advcl(VBD,VB) dobj(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NN,NN) pnct(VBN,VBN)","[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]","[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]",1,"[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]","[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]",WRB_when NNP_Energy NN_chairman PRP_he NNP_State VB_discuss NNP_Secretary VBD_met JJ_last VBN_asked ,"[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]","[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]",WRB_when NNP_Energy NN_chairman PRP_he NNP_State VB_discuss NNP_Secretary VBD_met JJ_last VBN_asked ,"[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]",WRB_when NNP_Energy NN_chairman PRP_he NNP_State VB_discuss NNP_Secretary VBD_met JJ_last VBN_asked ,"[when, Energy, chairman, he, State, discuss, ROOT, Secretary, met, last, asked]",WRB_when NNP_Energy NN_chairman PRP_he NNP_State VB_discuss NNP_Secretary VBD_met JJ_last VBN_asked ,-3,0,2,0,0,0,0,0,0,0
I meet periodically the National Coal Board and the NUM to discuss different aspects of the coal mining industry  including investment.,IPRP meetVBP periodicallyRB theDT NationalNNP CoalNNP BoardNNP andCC theDT NUMNNP toTO discussVB differentJJ aspectsNNS ofIN theDT coalNN miningNN industryNN includingVBG investmentNN ,"root(ROOT-0, meet-2) nsubj(meet-2, I-1) advmod(Board-7, periodically-3) det(Board-7, the-4) compound(Board-7, National-5) compound(Board-7, Coal-6) dobj(meet-2, Board-7) cc(Board-7, and-8) det(NUM-10, the-9) dobj(meet-2, NUM-10) conj:and(Board-7, NUM-10) mark(discuss-12, to-11) xcomp(meet-2, discuss-12) amod(aspects-14, different-13) dobj(discuss-12, aspects-14) case(industry-19, of-15) det(industry-19, the-16) compound(industry-19, coal-17) compound(industry-19, mining-18) nmod:of(aspects-14, industry-19) punct(aspects-14, ,-20) case(investment-22, including-21) nmod:including(aspects-14, investment-22) punct(meet-2, .-23)",0,0,0,"root(ROOT, meet) nsbj(meet, I) advmod(Board, periodically) det(Board, the) compond(Board, National) compond(Board, Coal) dobj(meet, Board) cc(Board, and) det(NUM, the) dobj(meet, NUM) conj:and(Board, NUM) mark(discss, to) xcomp(meet, discss) amod(aspects, different) dobj(discss, aspects) case(indstry, of) det(indstry, the) compond(indstry, coal) compond(indstry, mining) nmod:of(aspects, indstry) pnct(aspects, ,) case(investment, inclding) nmod:inclding(aspects, investment) pnct(meet, .)","root(,VBP) nsbj(VBP,PRP) advmod(NNP,RB) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) dobj(VBP,NNP) cc(NNP,CC) det(NNP,DT) dobj(VBP,NNP) conj:and(NNP,NNP) mark(VB,TO) xcomp(VBP,VB) amod(NNS,JJ) dobj(VB,NNS) case(NN,IN) det(NN,DT) compond(NN,NN) compond(NN,NN) nmod:of(NNS,NN) pnct(NNS,NNS) case(NN,VBG) nmod:inclding(NNS,NN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We all enjoy Mr. Scargill's frequent contributions to political debate.,WePRP allDT enjoyVBP MrNNP ScargillNNP 'sPOS frequentJJ contributionsNNS toTO politicalJJ debateNN ,"root(ROOT-0, enjoy-3) nsubj(enjoy-3, We-1) nsubj(enjoy-3, all-2) compound(Scargill-5, Mr.-4) nmod:poss(contributions-8, Scargill-5) case(Scargill-5, 's-6) amod(contributions-8, frequent-7) dobj(enjoy-3, contributions-8) case(debate-11, to-9) amod(debate-11, political-10) nmod:to(contributions-8, debate-11) punct(enjoy-3, .-12)",0,1,0,"root(ROOT, enjoy) nsbj(enjoy, We) nsbj(enjoy, all) compond(Scargill, Mr.) nmod:poss(contribtions, Scargill) ""case(Scargill, s)"", amod(contribtions, freqent) dobj(enjoy, contribtions) case(debate, to) amod(debate, political) nmod:to(contribtions, debate) pnct(enjoy, .)","root(,VBP) nsbj(VBP,PRP) nsbj(VBP,DT) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) amod(NNS,JJ) dobj(VBP,NNS) case(NN,TO) amod(NN,JJ) nmod:to(NNS,NN) pnct(VBP,VBP)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will my hon. Friend confirm what my right hon. Friend the Secretary of State has just said that Mr. Scargill has gone to Cuba?,WillMD myPRP$ honNN FriendNNP confirmVBZ whatWP myPRP$ rightJJ honNN FriendNNP theDT SecretaryNNP ofIN StateNNP hasVBZ justRB saidVBD thatIN MrNNP ScargillNNP hasVBZ goneVBN toTO CubaNNP ,"root(ROOT-0, confirm-5) aux(confirm-5, Will-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(confirm-5, Friend-4) dobj(confirm-5, what-6) nmod:poss(Friend-10, my-7) amod(Friend-10, right-8) compound(Friend-10, hon.-9) nsubj(what-6, Friend-10) det(Secretary-12, the-11) nsubj(has-15, Secretary-12) case(State-14, of-13) nmod:of(Secretary-12, State-14) acl:relcl(Friend-10, has-15) advmod(said-17, just-16) ccomp(has-15, said-17) mark(gone-22, that-18) compound(Scargill-20, Mr.-19) nsubj(gone-22, Scargill-20) aux(gone-22, has-21) ccomp(said-17, gone-22) case(Cuba-24, to-23) nmod:to(gone-22, Cuba-24) punct(confirm-5, ?-25)",0,0,1,"root(ROOT, confirm) ax(confirm, Will) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(confirm, Friend) dobj(confirm, what) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(what, Friend) det(Secretary, the) nsbj(has, Secretary) case(State, of) nmod:of(Secretary, State) acl:relcl(Friend, has) advmod(said, jst) ccomp(has, said) mark(gone, that) compond(Scargill, Mr.) nsbj(gone, Scargill) ax(gone, has) ccomp(said, gone) case(Cba, to) nmod:to(gone, Cba) pnct(confirm, ?)","root(,VBZ) ax(VBZ,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) dobj(VBZ,WP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(WP,NNP) det(NNP,DT) nsbj(VBZ,NNP) case(NNP,IN) nmod:of(NNP,NNP) acl:relcl(NNP,VBZ) advmod(VBD,RB) ccomp(VBZ,VBD) mark(VBN,IN) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) ccomp(VBD,VBN) case(NNP,TO) nmod:to(VBN,NNP) pnct(VBZ,VBZ)","[right, Friend, State, has, Secretary, what, Friend, confirm, my, said, ROOT, my]","[Friend, State, has, Secretary, what, Friend, confirm, my, said, ROOT, my]",3,"[Friend, State, has, Secretary, what, confirm, my, said]","[Friend, State, has, Secretary, what, confirm, my, said]",NNP_Friend NNP_State VBZ_has NNP_Secretary WP_what NNP_Friend NN_confirm PRP$_my VBD_said PRP$_my ,"[Friend, State, has, Secretary, what, Friend, confirm, my, said, ROOT, my]","[Friend, State, has, Secretary, what, Friend, confirm, my, said, ROOT, my]",NNP_Friend NNP_State VBZ_has NNP_Secretary WP_what NNP_Friend NN_confirm PRP$_my VBD_said PRP$_my ,"[Friend, State, has, Secretary, what, Friend, confirm, my, said, ROOT, my]",NNP_Friend NNP_State VBZ_has NNP_Secretary WP_what NNP_Friend NN_confirm PRP$_my VBD_said PRP$_my ,"[Friend, State, has, Secretary, what, Friend, confirm, my, said, ROOT, my]",NNP_Friend NNP_State VBZ_has NNP_Secretary WP_what NNP_Friend NN_confirm PRP$_my VBD_said PRP$_my ,-3,0,1,1,1,0,0,0,0,0
For example  is Cuba a large potential market for British coal?,ForIN exampleNN isVBZ CubaNNP aDT largeJJ potentialJJ marketNN forIN BritishJJ coalNN ,"root(ROOT-0, Cuba-5) case(example-2, For-1) nmod:for(Cuba-5, example-2) punct(Cuba-5, ,-3) cop(Cuba-5, is-4) det(market-9, a-6) amod(market-9, large-7) amod(market-9, potential-8) dobj(Cuba-5, market-9) case(coal-12, for-10) amod(coal-12, British-11) nmod:for(market-9, coal-12) punct(Cuba-5, ?-13)",0,0,0,"root(ROOT, Cba) case(example, For) nmod:for(Cba, example) pnct(Cba, ,) cop(Cba, is) det(market, a) amod(market, large) amod(market, potential) dobj(Cba, market) case(coal, for) amod(coal, British) nmod:for(market, coal) pnct(Cba, ?)","root(,NNP) case(NN,IN) nmod:for(NNP,NN) pnct(NNP,NNP) cop(NNP,VBZ) det(NN,DT) amod(NN,JJ) amod(NN,JJ) dobj(NNP,NN) case(NN,IN) amod(NN,JJ) nmod:for(NN,NN) pnct(NNP,NNP)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I do not have ministerial responsibility for the president of the National Union of Mineworkers.,IPRP doVBP notRB haveVB ministerialJJ responsibilityNN forIN theDT presidentNN ofIN theDT NationalNNP UnionNNP ofIN MineworkersNNP ,"root(ROOT-0, have-4) nsubj(have-4, I-1) aux(have-4, do-2) neg(have-4, not-3) amod(responsibility-6, ministerial-5) dobj(have-4, responsibility-6) case(president-9, for-7) det(president-9, the-8) nmod:for(responsibility-6, president-9) case(Union-13, of-10) det(Union-13, the-11) compound(Union-13, National-12) nmod:of(president-9, Union-13) case(Mineworkers-15, of-14) nmod:of(Union-13, Mineworkers-15) punct(have-4, .-16)",0,1,0,"root(ROOT, have) nsbj(have, I) ax(have, do) neg(have, not) amod(responsibility, ministerial) dobj(have, responsibility) case(president, for) det(president, the) nmod:for(responsibility, president) case(Union, of) det(Union, the) compond(Union, National) nmod:of(president, Union) case(Mineworkers, of) nmod:of(Union, Mineworkers) pnct(have, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  I am sure that  as we all know that 82 per cent.,HoweverRB IPRP amVBP sureJJ thatIN asIN wePRP allDT knowVBP thatIN 82CD perIN centNN ,"root(ROOT-0, sure-5) advmod(sure-5, However-1) punct(sure-5, ,-2) nsubj(sure-5, I-3) cop(sure-5, am-4) nsubj(know-11, that-6) punct(know-11, ,-7) mark(know-11, as-8) nsubj(know-11, we-9) det(we-9, all-10) ccomp(sure-5, know-11) xcomp(know-11, that-12) dep(that-12, 82-13) case(cent-15, per-14) nmod:per(82-13, cent-15) punct(sure-5, .-16)",0,0,0,"root(ROOT, sre) advmod(sre, However) pnct(sre, ,) nsbj(sre, I) cop(sre, am) nsbj(know, that) pnct(know, ,) mark(know, as) nsbj(know, we) det(we, all) ccomp(sre, know) xcomp(know, that) dep(that, 82) case(cent, per) nmod:per(82, cent) pnct(sre, .)","root(,JJ) advmod(JJ,RB) pnct(JJ,JJ) nsbj(JJ,PRP) cop(JJ,VBP) nsbj(VBP,IN) pnct(VBP,VBP) mark(VBP,IN) nsbj(VBP,PRP) det(PRP,DT) ccomp(JJ,VBP) xcomp(VBP,IN) dep(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of coal is burnt in our power stations  hon. Members will be interested to know that Cuba burns only oil.,ofIN coalNN isVBZ burntVBN inIN ourPRP$ powerNN stationsNNS honVBP MembersNNS willMD beVB interestedJJ toTO knowVB thatDT CubaNNP burnsVBZ onlyRB oilNN ,"root(ROOT-0, burnt-4) case(coal-2, of-1) nmod:of(burnt-4, coal-2) auxpass(burnt-4, is-3) case(stations-8, in-5) nmod:poss(stations-8, our-6) compound(stations-8, power-7) nmod:in(burnt-4, stations-8) punct(burnt-4, ,-9) compound(Members-11, hon.-10) nsubj(interested-14, Members-11) aux(interested-14, will-12) cop(interested-14, be-13) parataxis(burnt-4, interested-14) mark(know-16, to-15) xcomp(interested-14, know-16) det(burns-19, that-17) compound(burns-19, Cuba-18) dobj(know-16, burns-19) advmod(oil-21, only-20) dep(burns-19, oil-21) punct(burnt-4, .-22)",0,0,0,"root(ROOT, brnt) case(coal, of) nmod:of(brnt, coal) axpass(brnt, is) case(stations, in) nmod:poss(stations, or) compond(stations, power) nmod:in(brnt, stations) pnct(brnt, ,) compond(Members, hon.) nsbj(interested, Members) ax(interested, will) cop(interested, be) parataxis(brnt, interested) mark(know, to) xcomp(interested, know) det(brns, that) compond(brns, Cba) dobj(know, brns) advmod(oil, only) dep(brns, oil) pnct(brnt, .)","root(,VBN) case(NN,IN) nmod:of(VBN,NN) axpass(VBN,VBZ) case(NNS,IN) nmod:poss(NNS,PRP$) compond(NNS,NN) nmod:in(VBN,NNS) pnct(VBN,VBN) compond(NNS,NNS) nsbj(JJ,NNS) ax(JJ,MD) cop(JJ,VB) parataxis(VBN,JJ) mark(VB,TO) xcomp(JJ,VB) det(VBZ,DT) compond(VBZ,NNP) dobj(VB,VBZ) advmod(NN,RB) dep(VBZ,NN) pnct(VBN,VBN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Nevertheless  I am sure that the Cubans can be persuaded to do as well as we do.,NeverthelessRB IPRP amVBP sureJJ thatIN theDT CubansNNPS canMD beVB persuadedVBN toTO doVB asRB wellRB asIN wePRP doVBP ,"root(ROOT-0, sure-5) advmod(sure-5, Nevertheless-1) punct(sure-5, ,-2) nsubj(sure-5, I-3) cop(sure-5, am-4) mark(persuaded-11, that-6) det(Cubans-8, the-7) nsubjpass(persuaded-11, Cubans-8) aux(persuaded-11, can-9) auxpass(persuaded-11, be-10) ccomp(sure-5, persuaded-11) mark(do-13, to-12) xcomp(persuaded-11, do-13) cc(do-13, as-14) mwe(as-14, well-15) mwe(as-14, as-16) xcomp(persuaded-11, we-17) conj:and(do-13, we-17) dobj(do-13, do-18) punct(sure-5, .-19)",0,0,0,"root(ROOT, sre) advmod(sre, Nevertheless) pnct(sre, ,) nsbj(sre, I) cop(sre, am) mark(persaded, that) det(Cbans, the) nsbjpass(persaded, Cbans) ax(persaded, can) axpass(persaded, be) ccomp(sre, persaded) mark(do, to) xcomp(persaded, do) cc(do, as) mwe(as, well) mwe(as, as) xcomp(persaded, we) conj:and(do, we) dobj(do, do) pnct(sre, .)","root(,JJ) advmod(JJ,RB) pnct(JJ,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VBN,IN) det(NNPS,DT) nsbjpass(VBN,NNPS) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) mark(VBP,TO) xcomp(VBN,VBP) cc(VBP,IN) mwe(IN,RB) mwe(IN,IN) xcomp(VBN,PRP) conj:and(VBP,PRP) VBPbj(VBP,VBP) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Does my hon. Friend agree that it is nonsensical that British companies such as BP should be forced to go abroad to mine coal and are prohibited from contributing to the economy and genuine competition in Britain?,DoesNNP myPRP$ honNN FriendNNP agreeVBZ thatIN itPRP isVBZ nonsensicalJJ thatIN BritishJJ companiesNNS suchJJ asIN BPNNP shouldMD beVB forcedVBN toTO goVB abroadRB toTO mineVB coalNN andCC areVBP prohibitedVBN fromIN contributingVBG toTO theDT economyNN andCC genuineJJ competitionNN inIN BritainNNP ,"root(ROOT-0, agree-5) aux(agree-5, Does-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(agree-5, Friend-4) mark(nonsensical-9, that-6) nsubj(nonsensical-9, it-7) cop(nonsensical-9, is-8) ccomp(agree-5, nonsensical-9) mark(forced-18, that-10) amod(companies-12, British-11) nsubjpass(forced-18, companies-12) nsubjpass(prohibited-27, companies-12) case(BP-15, such-13) mwe(such-13, as-14) nmod:such_as(companies-12, BP-15) aux(forced-18, should-16) auxpass(forced-18, be-17) ccomp(nonsensical-9, forced-18) mark(go-20, to-19) xcomp(forced-18, go-20) advmod(go-20, abroad-21) mark(mine-23, to-22) xcomp(go-20, mine-23) dobj(mine-23, coal-24) cc(forced-18, and-25) auxpass(prohibited-27, are-26) ccomp(nonsensical-9, prohibited-27) conj:and(forced-18, prohibited-27) mark(contributing-29, from-28) advcl(prohibited-27, contributing-29) case(economy-32, to-30) det(economy-32, the-31) nmod:to(contributing-29, economy-32) cc(economy-32, and-33) amod(competition-35, genuine-34) nmod:to(contributing-29, competition-35) conj:and(economy-32, competition-35) case(Britain-37, in-36) nmod:in(economy-32, Britain-37) punct(agree-5, ?-38)",0,0,1,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(agree, Friend) mark(nonsensical, that) nsbj(nonsensical, it) cop(nonsensical, is) ccomp(agree, nonsensical) mark(forced, that) amod(companies, British) nsbjpass(forced, companies) nsbjpass(prohibited, companies) case(BP, sch) mwe(sch, as) nmod:sch_as(companies, BP) ax(forced, shold) axpass(forced, be) ccomp(nonsensical, forced) mark(go, to) xcomp(forced, go) advmod(go, abroad) mark(mine, to) xcomp(go, mine) dobj(mine, coal) cc(forced, and) axpass(prohibited, are) ccomp(nonsensical, prohibited) conj:and(forced, prohibited) mark(contribting, from) advcl(prohibited, contribting) case(economy, to) det(economy, the) nmod:to(contribting, economy) cc(economy, and) amod(competition, genine) nmod:to(contribting, competition) conj:and(economy, competition) case(Britain, in) nmod:in(economy, Britain) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) ccomp(VBZ,JJ) mark(VBN,IN) amod(NNS,JJ) nsbjpass(VBN,NNS) nsbjpass(VBN,NNS) case(NNP,JJ) mwe(JJ,IN) nmod:sch_as(NNS,NNP) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) mark(VB,TO) xcomp(VBN,VB) advmod(VB,RB) mark(VB,TO) xcomp(VB,VB) dobj(VB,NN) cc(VBN,CC) axpass(VBN,VBP) ccomp(JJ,VBN) conj:and(VBN,VBN) mark(VBG,IN) advcl(VBN,VBG) case(NN,TO) det(NN,DT) nmod:to(VBG,NN) cc(NN,CC) amod(NN,JJ) nmod:to(VBG,NN) conj:and(NN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VBZ,VBZ)","[ROOT, my, nonsensical, agree, Friend]","[ROOT, my, nonsensical, agree, Friend]",7,[ ],[ ],PRP$_my JJ_nonsensical VB_agree NNP_Friend ,"[ROOT, my, nonsensical, agree, Friend]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is sometimes sad and of significance to us all to remember that  in the past 15 years or so  about £26 billion has gone from the private sector into offshore oilfield development.,ItPRP isVBZ sometimesRB sadJJ andCC ofIN significanceNN toTO usPRP allDT toTO rememberVB thatIN inIN theDT pastJJ 15CD yearsNNS orCC soRB aboutIN £26JJ billionCD hasVBZ goneVBN fromIN theDT privateJJ sectorNN intoIN offshoreJJ oilfieldNN developmentNN ,"root(ROOT-0, sad-4) nsubj(sad-4, It-1) cop(sad-4, is-2) advmod(sad-4, sometimes-3) cc(sad-4, and-5) case(significance-7, of-6) conj:and(sad-4, significance-7) case(us-9, to-8) nmod:to(significance-7, us-9) dep(significance-7, all-10) mark(remember-12, to-11) acl(all-10, remember-12) mark(gone-28, that-13) punct(gone-28, ,-14) case(years-19, in-15) det(years-19, the-16) amod(years-19, past-17) nummod(years-19, 15-18) nmod:in(gone-28, years-19) cc(so-21, or-20) nummod(years-19, so-21) punct(gone-28, ,-22) advmod(billion-26, about-23) compound(billion-26, #-24) compound(billion-26, 26-25) nsubj(gone-28, billion-26) aux(gone-28, has-27) ccomp(remember-12, gone-28) case(sector-32, from-29) det(sector-32, the-30) amod(sector-32, private-31) nmod:from(gone-28, sector-32) case(development-36, into-33) amod(development-36, offshore-34) compound(development-36, oilfield-35) nmod:into(gone-28, development-36) punct(sad-4, .-37)",0,0,0,"root(ROOT, sad) nsbj(sad, It) cop(sad, is) advmod(sad, sometimes) cc(sad, and) case(significance, of) conj:and(sad, significance) case(s, to) nmod:to(significance, s) dep(significance, all) mark(remember, to) acl(all, remember) mark(gone, that) pnct(gone, ,) case(years, in) det(years, the) amod(years, past) nmmod(years, 15) nmod:in(gone, years) cc(so, or) nmmod(years, so) pnct(gone, ,) advmod(billion, abot) compond(billion, #) compond(billion, 26) nsbj(gone, billion) ax(gone, has) ccomp(remember, gone) case(sector, from) det(sector, the) amod(sector, private) nmod:from(gone, sector) case(development, into) amod(development, offshore) compond(development, oilfield) nmod:into(gone, development) pnct(sad, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) cc(JJ,CC) case(NN,IN) conj:and(JJ,NN) case(PRP,TO) nmod:to(NN,PRP) dep(NN,DT) mark(VB,TO) acl(DT,VB) mark(VBN,IN) pnct(VBN,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:in(VBN,NNS) cc(RB,CC) nmmod(NNS,RB) pnct(VBN,VBN) advmod(CD,IN) compond(CD,CD) compond(CD,CD) nsbj(VBN,CD) ax(VBN,VBZ) ccomp(VB,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:from(VBN,NN) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:into(VBN,NN) pnct(JJ,JJ)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The country has invested only £3 billion in the coal industry.,TheDT countryNN hasVBZ investedVBN onlyRB £3JJ billionCD inIN theDT coalNN industryNN ,"root(ROOT-0, invested-4) det(country-2, The-1) nsubj(invested-4, country-2) aux(invested-4, has-3) advmod(billion-8, only-5) compound(billion-8, #-6) compound(billion-8, 3-7) dobj(invested-4, billion-8) case(industry-12, in-9) det(industry-12, the-10) compound(industry-12, coal-11) nmod:in(invested-4, industry-12) punct(invested-4, .-13)",0,0,0,"root(ROOT, invested) det(contry, The) nsbj(invested, contry) ax(invested, has) advmod(billion, only) compond(billion, #) compond(billion, 3) dobj(invested, billion) case(indstry, in) det(indstry, the) compond(indstry, coal) nmod:in(invested, indstry) pnct(invested, .)","root(,VBN) det(NN,DT) nsbj(VBN,NN) ax(VBN,VBZ) advmod(CD,RB) compond(CD,CD) compond(CD,CD) dobj(VBN,CD) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(VBN,NN) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
"I say ""only""  although that is obviously a sizeable amount of money.",IPRP sayVBP ```` onlyRB '''' althoughIN thatDT isVBZ obviouslyRB aDT sizeableJJ amountNN ofIN moneyNN ,"root(ROOT-0, say-2) nsubj(say-2, I-1) punct(say-2, ``-3) dep(say-2, only-4) punct(only-4, ''-5) punct(amount-13, ,-6) mark(amount-13, although-7) nsubj(amount-13, that-8) cop(amount-13, is-9) advmod(amount-13, obviously-10) det(amount-13, a-11) amod(amount-13, sizeable-12) dep(only-4, amount-13) case(money-15, of-14) nmod:of(amount-13, money-15) punct(amount-13, .-16)",0,0,0,"root(ROOT, say) nsbj(say, I) pnct(say, ``) dep(say, only) ""pnct(only, )"", pnct(amont, ,) mark(amont, althogh) nsbj(amont, that) cop(amont, is) advmod(amont, obviosly) det(amont, a) amod(amont, sizeable) dep(only, amont) case(money, of) nmod:of(amont, money) pnct(amont, .)","root(,VBP) nsbj(VBP,PRP) pnct(VBP,``) dep(VBP,RB) ""pnct(RB,)"", pnct(NN,NN) mark(NN,IN) nsbj(NN,DT) cop(NN,VBZ) advmod(NN,RB) det(NN,DT) amod(NN,JJ) dep(RB,NN) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Investment in the coal industry is in all our interests.,InvestmentNN inIN theDT coalNN industryNN isVBZ inIN allDT ourPRP$ interestsNNS ,"root(ROOT-0, interests-10) nsubj(interests-10, Investment-1) case(industry-5, in-2) det(industry-5, the-3) compound(industry-5, coal-4) nmod:in(Investment-1, industry-5) cop(interests-10, is-6) case(interests-10, in-7) det:predet(interests-10, all-8) nmod:poss(interests-10, our-9) punct(interests-10, .-11)",0,0,0,"root(ROOT, interests) nsbj(interests, Investment) case(indstry, in) det(indstry, the) compond(indstry, coal) nmod:in(Investment, indstry) cop(interests, is) case(interests, in) det:predet(interests, all) nmod:poss(interests, or) pnct(interests, .)","root(,NNS) nsbj(NNS,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NN,NN) cop(NNS,VBZ) case(NNS,IN) det:predet(NNS,DT) nmod:poss(NNS,PRP$) pnct(NNS,NNS)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
One would hope that the industry would welcome it.,OneCD wouldMD hopeVB thatIN theDT industryNN wouldMD welcomeVB itPRP ,"root(ROOT-0, hope-3) nsubj(hope-3, One-1) aux(hope-3, would-2) mark(welcome-8, that-4) det(industry-6, the-5) nsubj(welcome-8, industry-6) aux(welcome-8, would-7) ccomp(hope-3, welcome-8) dobj(welcome-8, it-9) punct(hope-3, .-10)",0,0,1,"root(ROOT, hope) nsbj(hope, One) ax(hope, wold) mark(welcome, that) det(indstry, the) nsbj(welcome, indstry) ax(welcome, wold) ccomp(hope, welcome) dobj(welcome, it) pnct(hope, .)","root(,VB) nsbj(VB,CD) ax(VB,MD) mark(VB,IN) det(NN,DT) nsbj(VB,NN) ax(VB,MD) ccomp(VB,VB) dobj(VB,PRP) pnct(VB,VB)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my hon. Friend agree that capital investment in the industry this year will reach nearly £900 million?,DoesNNP myPRP$ honNN FriendNNP agreeVBP thatIN capitalNN investmentNN inIN theDT industryNN thisDT yearNN willMD reachVB nearlyRB £900CD millionCD ,"root(ROOT-0, agree-5) aux(agree-5, Does-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(agree-5, Friend-4) mark(reach-15, that-6) compound(investment-8, capital-7) nsubj(reach-15, investment-8) case(industry-11, in-9) det(industry-11, the-10) nmod:in(investment-8, industry-11) det(year-13, this-12) nmod:tmod(investment-8, year-13) aux(reach-15, will-14) ccomp(agree-5, reach-15) advmod(million-19, nearly-16) compound(million-19, #-17) compound(million-19, 900-18) dobj(reach-15, million-19) punct(agree-5, ?-20)",0,0,0,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(agree, Friend) mark(reach, that) compond(investment, capital) nsbj(reach, investment) case(indstry, in) det(indstry, the) nmod:in(investment, indstry) det(year, this) nmod:tmod(investment, year) ax(reach, will) ccomp(agree, reach) advmod(million, nearly) compond(million, #) compond(million, 900) dobj(reach, million) pnct(agree, ?)","root(,VBP) ax(VBP,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBP,NNP) mark(VB,IN) compond(NN,NN) nsbj(VB,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) det(NN,DT) nmod:tmod(NN,NN) ax(VB,MD) ccomp(VBP,VB) advmod(CD,RB) compond(CD,CD) compond(CD,CD) dobj(VB,CD) pnct(VBP,VBP)","[ROOT, my, reach, agree, Friend]","[ROOT, my, reach, agree, Friend]",9,[ ],[ ],PRP$_my VB_reach VB_agree NNP_Friend ,"[ROOT, my, reach, agree, Friend]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I should like the industry to carry on with its present excellent productivity and improvements.,IPRP shouldMD likeVB theDT industryNN toTO carryVB onIN withIN itsPRP$ presentJJ excellentJJ productivityNN andCC improvementsNNS ,"root(ROOT-0, like-3) nsubj(like-3, I-1) aux(like-3, should-2) det(industry-5, the-4) dobj(like-3, industry-5) mark(carry-7, to-6) xcomp(like-3, carry-7) compound:prt(carry-7, on-8) case(productivity-13, with-9) nmod:poss(productivity-13, its-10) amod(productivity-13, present-11) amod(productivity-13, excellent-12) nmod:with(carry-7, productivity-13) cc(productivity-13, and-14) nmod:with(carry-7, improvements-15) conj:and(productivity-13, improvements-15) punct(like-3, .-16)",0,1,0,"root(ROOT, like) nsbj(like, I) ax(like, shold) det(indstry, the) dobj(like, indstry) mark(carry, to) xcomp(like, carry) compond:prt(carry, on) case(prodctivity, with) nmod:poss(prodctivity, its) amod(prodctivity, present) amod(prodctivity, excellent) nmod:with(carry, prodctivity) cc(prodctivity, and) nmod:with(carry, improvements) conj:and(prodctivity, improvements) pnct(like, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NN,DT) dobj(VB,NN) mark(VB,TO) xcomp(VB,VB) compond:prt(VB,IN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) amod(NN,JJ) nmod:with(VB,NN) cc(NN,CC) nmod:with(VB,NNS) conj:and(NN,NNS) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
"To the extent that the industry is progressing well  I trust that everyone will notice the large amounts of investment that have been made in the industry since ""Plan for Coal"".",ToTO theDT extentNN thatIN theDT industryNN isVBZ progressingVBG wellRB IPRP trustVBP thatIN everyoneNN willMD noticeVB theDT largeJJ amountsNNS ofIN investmentNN thatWDT haveVBP beenVBN madeVBN inIN theDT industryNN sinceIN ```` PlanNNP forIN CoalNNP '''' ,"root(ROOT-0, trust-12) case(extent-3, To-1) det(extent-3, the-2) nmod:to(trust-12, extent-3) mark(progressing-8, that-4) det(industry-6, the-5) nsubj(progressing-8, industry-6) aux(progressing-8, is-7) ccomp(extent-3, progressing-8) advmod(progressing-8, well-9) punct(trust-12, ,-10) nsubj(trust-12, I-11) mark(notice-16, that-13) nsubj(notice-16, everyone-14) aux(notice-16, will-15) ccomp(trust-12, notice-16) det(amounts-19, the-17) amod(amounts-19, large-18) dobj(notice-16, amounts-19) case(investment-21, of-20) nmod:of(amounts-19, investment-21) nsubjpass(made-25, that-22) aux(made-25, have-23) auxpass(made-25, been-24) acl:relcl(amounts-19, made-25) case(industry-28, in-26) det(industry-28, the-27) nmod:in(made-25, industry-28) case(Plan-31, since-29) punct(Plan-31, ``-30) nmod:since(made-25, Plan-31) case(Coal-33, for-32) nmod:for(Plan-31, Coal-33) punct(Plan-31, ''-34) punct(trust-12, .-35)",0,0,0,"root(ROOT, trst) case(extent, To) det(extent, the) nmod:to(trst, extent) mark(progressing, that) det(indstry, the) nsbj(progressing, indstry) ax(progressing, is) ccomp(extent, progressing) advmod(progressing, well) pnct(trst, ,) nsbj(trst, I) mark(notice, that) nsbj(notice, everyone) ax(notice, will) ccomp(trst, notice) det(amonts, the) amod(amonts, large) dobj(notice, amonts) case(investment, of) nmod:of(amonts, investment) nsbjpass(made, that) ax(made, have) axpass(made, been) acl:relcl(amonts, made) case(indstry, in) det(indstry, the) nmod:in(made, indstry) case(Plan, since) pnct(Plan, ``) nmod:since(made, Plan) case(Coal, for) nmod:for(Plan, Coal) ""pnct(Plan, )"", pnct(trst, .)","root(,VBP) case(NN,TO) det(NN,DT) nmod:to(VBP,NN) mark(VBG,WDT) det(NN,DT) nsbj(VBG,NN) ax(VBG,VBZ) ccomp(NN,VBG) advmod(VBG,RB) pnct(VBP,VBP) nsbj(VBP,PRP) mark(VB,WDT) nsbj(VB,NN) ax(VB,MD) ccomp(VBP,VB) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) case(NN,IN) nmod:of(NNS,NN) nsbjpass(VBN,WDT) ax(VBN,VBP) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) case(NNP,IN) pnct(NNP,``) nmod:since(VBN,NNP) case(NNP,IN) nmod:for(NNP,NNP) ""pnct(NNP,)"", pnct(VBP,VBP)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
There has been £3½ billion of investment.,ThereEX hasVBZ beenVBN £3½NNP billionCD ofIN investmentNN ,"root(ROOT-0, billion-7) expl(billion-7, There-1) aux(billion-7, has-2) cop(billion-7, been-3) compound(billion-7, #-4) compound(1/2-6, 3-5) compound(billion-7, 1/2-6) case(investment-9, of-8) nmod:of(billion-7, investment-9) punct(billion-7, .-10)",0,0,0,"root(ROOT, billion) expl(billion, There) ax(billion, has) cop(billion, been) compond(billion, #) compond(1/2, 3) compond(billion, 1/2) case(investment, of) nmod:of(billion, investment) pnct(billion, .)","root(,CD) expl(CD,EX) ax(CD,VBZ) cop(CD,VBN) compond(CD,CD) compond(CD,CD) compond(CD,CD) case(NN,IN) nmod:of(CD,NN) pnct(CD,CD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
"That is considerably more than the £2½ billion that was expected under ""Plan for Coal"".",ThatDT isVBZ considerablyRB moreRBR thanIN theDT £2½JJ billionCD thatWDT wasVBD expectedVBN underIN ```` PlanNNP forIN CoalNNP '''' ,"root(ROOT-0, more-4) nsubj(more-4, That-1) cop(more-4, is-2) advmod(more-4, considerably-3) case(billion-10, than-5) det(billion-10, the-6) compound(billion-10, #-7) compound(1/2-9, 2-8) nummod(billion-10, 1/2-9) nmod:than(more-4, billion-10) nsubjpass(expected-13, that-11) auxpass(expected-13, was-12) acl:relcl(more-4, expected-13) case(Plan-16, under-14) punct(Plan-16, ``-15) nmod:under(expected-13, Plan-16) case(Coal-18, for-17) nmod:for(Plan-16, Coal-18) punct(Plan-16, ''-19) punct(more-4, .-20)",0,0,0,"root(ROOT, more) nsbj(more, That) cop(more, is) advmod(more, considerably) case(billion, than) det(billion, the) compond(billion, #) compond(1/2, 2) nmmod(billion, 1/2) nmod:than(more, billion) nsbjpass(expected, that) axpass(expected, was) acl:relcl(more, expected) case(Plan, nder) pnct(Plan, ``) nmod:nder(expected, Plan) case(Coal, for) nmod:for(Plan, Coal) ""pnct(Plan, )"", pnct(more, .)","root(,RBR) nsbj(RBR,DT) cop(RBR,VBZ) advmod(RBR,RB) case(CD,IN) det(CD,DT) compond(CD,CD) compond(CD,CD) nmmod(CD,CD) nmod:than(RBR,CD) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(RBR,VBN) case(NNP,IN) pnct(NNP,``) nmod:nder(VBN,NNP) case(NNP,IN) nmod:for(NNP,NNP) ""pnct(NNP,)"", pnct(RBR,RBR)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Minister do all that he can to bring on the coal liquefaction scheme at Point of Ayr?,WillMD theDT MinisterNNP doVBP allDT thatIN hePRP canMD toTO bringVB onIN theDT coalNN liquefactionNN schemeNN atIN PointNNP ofIN AyrNNP ,"root(ROOT-0, do-4) aux(do-4, Will-1) det(Minister-3, the-2) nsubj(do-4, Minister-3) dobj(do-4, all-5) mark(can-8, that-6) nsubj(can-8, he-7) ccomp(all-5, can-8) mark(bring-10, to-9) xcomp(can-8, bring-10) compound:prt(bring-10, on-11) det(scheme-15, the-12) compound(scheme-15, coal-13) compound(scheme-15, liquefaction-14) dobj(bring-10, scheme-15) case(Point-17, at-16) nmod:at(bring-10, Point-17) case(Ayr-19, of-18) nmod:of(Point-17, Ayr-19) punct(do-4, ?-20)",0,1,0,"root(ROOT, do) ax(do, Will) det(Minister, the) nsbj(do, Minister) dobj(do, all) mark(can, that) nsbj(can, he) ccomp(all, can) mark(bring, to) xcomp(can, bring) compond:prt(bring, on) det(scheme, the) compond(scheme, coal) compond(scheme, liqefaction) dobj(bring, scheme) case(Point, at) nmod:at(bring, Point) case(Ayr, of) nmod:of(Point, Ayr) pnct(do, ?)","root(,VBP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) VBPbj(VBP,DT) mark(MD,IN) nsbj(MD,PRP) ccomp(DT,MD) mark(VB,TO) xcomp(MD,VB) compond:prt(VB,IN) det(NN,DT) compond(NN,NN) compond(NN,NN) dobj(VB,NN) case(NNP,IN) nmod:at(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VBP,VBP)","[can, Minister, ROOT, all, do, he, bring]","[can, Minister, ROOT, all, do, he, bring]",11,"[can, all, he, bring]","[can, all, he, bring]",MD_can NNP_Minister DT_all VB_do PRP_he VB_bring ,"[can, Minister, ROOT, all, do, he, bring]","[can, Minister, ROOT, all, do, he, bring]",MD_can NNP_Minister DT_all VB_do PRP_he VB_bring ,"[can, Minister, ROOT, all, do, he, bring]",MD_can NNP_Minister DT_all VB_do PRP_he VB_bring ,"[can, Minister, ROOT, all, do, he, bring]",MD_can NNP_Minister DT_all VB_do PRP_he VB_bring ,-3,0,2,0,0,0,0,0,0,0
Is he aware that  in North East Wales  in the county of Clwyd  unemployment is now 22 per cent.,IsVBZ hePRP awareJJ thatIN inIN NorthNNP EastNNP WalesNNP inIN theDT countyNN ofIN ClwydNNP unemploymentNN isVBZ nowRB 22CD perIN centNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) advmod(22-20, that-4) punct(22-20, ,-5) case(Wales-9, in-6) compound(Wales-9, North-7) compound(Wales-9, East-8) nmod:in(22-20, Wales-9) punct(22-20, ,-10) case(county-13, in-11) det(county-13, the-12) nmod:in(22-20, county-13) case(Clwyd-15, of-14) nmod:of(county-13, Clwyd-15) punct(22-20, ,-16) nsubj(22-20, unemployment-17) cop(22-20, is-18) advmod(22-20, now-19) ccomp(aware-3, 22-20) case(cent-22, per-21) nmod:per(22-20, cent-22) punct(aware-3, .-23)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) advmod(22, that) pnct(22, ,) case(Wales, in) compond(Wales, North) compond(Wales, East) nmod:in(22, Wales) pnct(22, ,) case(conty, in) det(conty, the) nmod:in(22, conty) case(Clwyd, of) nmod:of(conty, Clwyd) pnct(22, ,) nsbj(22, nemployment) cop(22, is) advmod(22, now) ccomp(aware, 22) case(cent, per) nmod:per(22, cent) pnct(aware, .)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) advmod(CD,IN) pnct(CD,CD) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:in(CD,NNP) pnct(CD,CD) case(NN,IN) det(NN,DT) nmod:in(CD,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(CD,CD) nsbj(CD,NN) cop(CD,VBZ) advmod(CD,RB) ccomp(JJ,CD) case(NN,IN) nmod:per(CD,NN) pnct(JJ,JJ)","[he, ROOT, aware, 22]","[he, ROOT, aware, 22]",11,"[he, ROOT, aware, 22]",[ ],PRP_he JJ_aware CD_22 ,"[he, ROOT, aware, 22]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
or more and that there is nearly 40 per cent.,orCC moreRBR andCC thatIN thereEX isVBZ nearlyRB 40CD perIN centNN ,"root(ROOT-0, more-2) cc(more-2, or-1) cc(more-2, and-3) mark(is-6, that-4) expl(is-6, there-5) conj:and(more-2, is-6) advmod(40-8, nearly-7) nsubj(is-6, 40-8) case(cent-10, per-9) nmod:per(40-8, cent-10) punct(more-2, .-11)",0,0,0,"root(ROOT, more) cc(more, or) cc(more, and) mark(is, that) expl(is, there) conj:and(more, is) advmod(40, nearly) nsbj(is, 40) case(cent, per) nmod:per(40, cent) pnct(more, .)","root(,RBR) cc(RBR,CC) cc(RBR,CC) mark(VBZ,IN) expl(VBZ,EX) conj:and(RBR,VBZ) advmod(CD,RB) nsbj(VBZ,CD) case(NN,IN) nmod:per(CD,NN) pnct(RBR,RBR)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
male unemployment in Flint?,maleJJ unemploymentNN inIN FlintNNP ,"root(ROOT-0, unemployment-2) amod(unemployment-2, male-1) case(Flint-4, in-3) nmod:in(unemployment-2, Flint-4) punct(unemployment-2, ?-5)",0,0,0,"root(ROOT, nemployment) amod(nemployment, male) case(Flint, in) nmod:in(nemployment, Flint) pnct(nemployment, ?)","root(,NN) amod(NN,JJ) case(NNP,IN) nmod:in(NN,NNP) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As I said earlier  a review by the Coal Board of the plant is in process.,AsIN IPRP saidVBD earlierRBR aDT reviewNN byIN theDT CoalNNP BoardNNP ofIN theDT plantNN isVBZ inIN processNN ,"root(ROOT-0, process-17) mark(said-3, As-1) nsubj(said-3, I-2) advcl(process-17, said-3) advmod(said-3, earlier-4) punct(process-17, ,-5) det(review-7, a-6) nsubj(process-17, review-7) case(Board-11, by-8) det(Board-11, the-9) compound(Board-11, Coal-10) nmod:by(review-7, Board-11) case(plant-14, of-12) det(plant-14, the-13) nmod:of(Board-11, plant-14) cop(process-17, is-15) case(process-17, in-16) punct(process-17, .-18)",0,0,0,"root(ROOT, process) mark(said, As) nsbj(said, I) advcl(process, said) advmod(said, earlier) pnct(process, ,) det(review, a) nsbj(process, review) case(Board, by) det(Board, the) compond(Board, Coal) nmod:by(review, Board) case(plant, of) det(plant, the) nmod:of(Board, plant) cop(process, is) case(process, in) pnct(process, .)","root(,NN) mark(VBD,IN) nsbj(VBD,PRP) advcl(NN,VBD) advmod(VBD,RBR) pnct(NN,NN) det(NN,DT) nsbj(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:by(NN,NNP) case(NN,IN) det(NN,DT) nmod:of(NNP,NN) cop(NN,VBZ) case(NN,IN) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is vital  as with many other areas  that projects are developed economically and rationally  for the success of the coal industry in the long run.,ItPRP isVBZ vitalJJ asIN withIN manyJJ otherJJ areasNNS thatIN projectsNNS areVBP developedVBN economicallyRB andCC rationallyRB forIN theDT successNN ofIN theDT coalNN industryNN inIN theDT longJJ runNN ,"root(ROOT-0, vital-3) nsubj(vital-3, It-1) cop(vital-3, is-2) punct(vital-3, ,-4) case(areas-9, as-5) case(areas-9, with-6) amod(areas-9, many-7) amod(areas-9, other-8) advcl:with(vital-3, areas-9) punct(vital-3, ,-10) mark(developed-14, that-11) nsubjpass(developed-14, projects-12) auxpass(developed-14, are-13) ccomp(vital-3, developed-14) advmod(developed-14, economically-15) cc(economically-15, and-16) advmod(developed-14, rationally-17) conj:and(economically-15, rationally-17) punct(developed-14, ,-18) case(success-21, for-19) det(success-21, the-20) nmod:for(developed-14, success-21) case(industry-25, of-22) det(industry-25, the-23) compound(industry-25, coal-24) nmod:of(success-21, industry-25) case(run-29, in-26) det(run-29, the-27) amod(run-29, long-28) nmod:in(success-21, run-29) punct(vital-3, .-30)",0,0,0,"root(ROOT, vital) nsbj(vital, It) cop(vital, is) pnct(vital, ,) case(areas, as) case(areas, with) amod(areas, many) amod(areas, other) advcl:with(vital, areas) pnct(vital, ,) mark(developed, that) nsbjpass(developed, projects) axpass(developed, are) ccomp(vital, developed) advmod(developed, economically) cc(economically, and) advmod(developed, rationally) conj:and(economically, rationally) pnct(developed, ,) case(sccess, for) det(sccess, the) nmod:for(developed, sccess) case(indstry, of) det(indstry, the) compond(indstry, coal) nmod:of(sccess, indstry) case(rn, in) det(rn, the) amod(rn, long) nmod:in(sccess, rn) pnct(vital, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) pnct(JJ,JJ) case(NNS,IN) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) advcl:with(JJ,NNS) pnct(JJ,JJ) mark(VBN,IN) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(JJ,VBN) advmod(VBN,RB) cc(RB,CC) advmod(VBN,RB) conj:and(RB,RB) pnct(VBN,VBN) case(NN,IN) det(NN,DT) nmod:for(VBN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NN,NN) pnct(JJ,JJ)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will my hon. Friend assure me that  unless the present scheme by the Coal Board for the extraction of oil from coal is shown to be completely unworkable  regard will constantly be had to Britain's need for assured supplies of oil  which will eventually run out otherwise  and that oil could be extracted from coal  of which we have almost unlimited reserves?,WillMD myPRP$ honNN FriendNNP assureNN mePRP thatIN unlessIN theDT presentJJ schemeNN byIN theDT CoalNNP BoardNNP forIN theDT extractionNN ofIN oilNN fromIN coalNN isVBZ shownVBN toTO beVB completelyRB unworkableJJ regardNN willMD constantlyRB beVB hadVBN toTO BritainNNP 'sPOS needNN forIN assuredJJ suppliesNNS ofIN oilNN whichWDT willMD eventuallyRB runVB outRP otherwiseRB andCC thatDT oilNN couldMD beVB extractedVBN fromIN coalNN ofIN whichWDT wePRP haveVBP almostRB unlimitedJJ reservesNNS ,"root(ROOT-0, assure-5) aux(assure-5, Will-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(assure-5, Friend-4) dobj(assure-5, me-6) mark(had-35, that-7) punct(had-35, ,-8) mark(shown-25, unless-9) det(scheme-12, the-10) amod(scheme-12, present-11) nsubjpass(shown-25, scheme-12) case(Board-16, by-13) det(Board-16, the-14) compound(Board-16, Coal-15) nmod:by(scheme-12, Board-16) case(extraction-19, for-17) det(extraction-19, the-18) nmod:for(scheme-12, extraction-19) case(oil-21, of-20) nmod:of(extraction-19, oil-21) case(coal-23, from-22) nmod:from(extraction-19, coal-23) auxpass(shown-25, is-24) advcl(had-35, shown-25) mark(unworkable-29, to-26) cop(unworkable-29, be-27) advmod(unworkable-29, completely-28) xcomp(shown-25, unworkable-29) punct(had-35, ,-30) nsubjpass(had-35, regard-31) aux(had-35, will-32) advmod(had-35, constantly-33) auxpass(had-35, be-34) ccomp(assure-5, had-35) case(need-39, to-36) nmod:poss(need-39, Britain-37) case(Britain-37, 's-38) nmod:to(had-35, need-39) mark(assured-41, for-40) acl(need-39, assured-41) dobj(assured-41, supplies-42) case(oil-44, of-43) nmod:of(supplies-42, oil-44) punct(oil-44, ,-45) nsubj(run-49, which-46) aux(run-49, will-47) advmod(run-49, eventually-48) acl:relcl(oil-44, run-49) compound:prt(run-49, out-50) advmod(run-49, otherwise-51) punct(oil-44, ,-52) cc(oil-44, and-53) mark(extracted-58, that-54) nsubjpass(extracted-58, oil-55) aux(extracted-58, could-56) auxpass(extracted-58, be-57) nmod:of(supplies-42, extracted-58) conj:and(oil-44, extracted-58) case(coal-60, from-59) nmod:from(extracted-58, coal-60) punct(coal-60, ,-61) case(which-63, of-62) nmod:of(have-65, which-63) nsubj(have-65, we-64) acl:relcl(coal-60, have-65) advmod(unlimited-67, almost-66) amod(reserves-68, unlimited-67) dobj(have-65, reserves-68) punct(assure-5, ?-69)",0,0,0,"root(ROOT, assre) ax(assre, Will) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(assre, Friend) dobj(assre, me) mark(had, that) pnct(had, ,) mark(shown, nless) det(scheme, the) amod(scheme, present) nsbjpass(shown, scheme) case(Board, by) det(Board, the) compond(Board, Coal) nmod:by(scheme, Board) case(extraction, for) det(extraction, the) nmod:for(scheme, extraction) case(oil, of) nmod:of(extraction, oil) case(coal, from) nmod:from(extraction, coal) axpass(shown, is) advcl(had, shown) mark(nworkable, to) cop(nworkable, be) advmod(nworkable, completely) xcomp(shown, nworkable) pnct(had, ,) nsbjpass(had, regard) ax(had, will) advmod(had, constantly) axpass(had, be) ccomp(assre, had) case(need, to) nmod:poss(need, Britain) ""case(Britain, s)"", nmod:to(had, need) mark(assred, for) acl(need, assred) dobj(assred, spplies) case(oil, of) nmod:of(spplies, oil) pnct(oil, ,) nsbj(rn, which) ax(rn, will) advmod(rn, eventally) acl:relcl(oil, rn) compond:prt(rn, ot) advmod(rn, otherwise) pnct(oil, ,) cc(oil, and) mark(extracted, that) nsbjpass(extracted, oil) ax(extracted, cold) axpass(extracted, be) nmod:of(spplies, extracted) conj:and(oil, extracted) case(coal, from) nmod:from(extracted, coal) pnct(coal, ,) case(which, of) nmod:of(have, which) nsbj(have, we) acl:relcl(coal, have) advmod(nlimited, almost) amod(reserves, nlimited) dobj(have, reserves) pnct(assre, ?)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) dobj(NN,PRP) mark(VBN,DT) pnct(VBN,VBN) mark(VBN,IN) det(NN,DT) amod(NN,JJ) nsbjpass(VBN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:by(NN,NNP) case(NN,IN) det(NN,DT) nmod:for(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) nmod:from(NN,NN) axpass(VBN,VBZ) advcl(VBN,VBN) mark(JJ,TO) cop(JJ,VB) advmod(JJ,RB) xcomp(VBN,JJ) pnct(VBN,VBN) nsbjpass(VBN,NN) ax(VBN,MD) advmod(VBN,RB) axpass(VBN,VB) ccomp(NN,VBN) case(NN,TO) nmod:poss(NN,NNP) case(NNP,POS) nmod:to(VBN,NN) mark(JJ,IN) acl(NN,JJ) dobj(JJ,NNS) case(NN,IN) nmod:of(NNS,NN) pnct(NN,NN) nsbj(VB,WDT) ax(VB,MD) advmod(VB,RB) acl:relcl(NN,VB) compond:prt(VB,RP) advmod(VB,RB) pnct(NN,NN) cc(NN,CC) mark(VBN,DT) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) nmod:of(NNS,VBN) conj:and(NN,VBN) case(NN,IN) nmod:from(VBN,NN) pnct(NN,NN) case(WDT,IN) nmod:of(VBP,WDT) nsbj(VBP,PRP) acl:relcl(NN,VBP) advmod(JJ,RB) amod(NNS,JJ) dobj(VBP,NNS) pnct(NN,NN)","[me, Friend, assure, ROOT, had, my]","[me, Friend, assure, ROOT, had, my]",13,[ ],[ ],PRP_me NNP_Friend NN_assure VBN_had PRP$_my ,"[me, Friend, assure, ROOT, had, my]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I understand his point.,IPRP understandVBP hisPRP$ pointNN ,"root(ROOT-0, understand-2) nsubj(understand-2, I-1) nmod:poss(point-4, his-3) dobj(understand-2, point-4) punct(understand-2, .-5)",0,0,0,"root(ROOT, nderstand) nsbj(nderstand, I) nmod:poss(point, his) dobj(nderstand, point) pnct(nderstand, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NN,PRP$) dobj(VBP,NN) pnct(VBP,VBP)",[ ],"[his, point, understand]",14,"[his, point, understand]","[his, point, understand]",PRP$_his VB_point VBP_understand ,"[his, point, understand]","[his, point, understand]",PRP$_his VB_point VBP_understand ,"[his, point, understand]",PRP$_his VB_point VBP_understand ,"[his, point, understand]",PRP$_his VB_point VBP_understand ,-3,0,2,0,0,0,0,0,0,0
He will wish to examine the thorough Coal Board review before I comment further.,HePRP willMD wishVB toTO examineVB theDT thoroughJJ CoalNNP BoardNNP reviewNN beforeIN IPRP commentVBP furtherRB ,"root(ROOT-0, wish-3) nsubj(wish-3, He-1) aux(wish-3, will-2) mark(examine-5, to-4) xcomp(wish-3, examine-5) det(review-10, the-6) amod(review-10, thorough-7) compound(review-10, Coal-8) compound(review-10, Board-9) dobj(examine-5, review-10) mark(comment-13, before-11) nsubj(comment-13, I-12) advcl(wish-3, comment-13) advmod(comment-13, further-14) punct(wish-3, .-15)",0,0,1,"root(ROOT, wish) nsbj(wish, He) ax(wish, will) mark(examine, to) xcomp(wish, examine) det(review, the) amod(review, thorogh) compond(review, Coal) compond(review, Board) dobj(examine, review) mark(comment, before) nsbj(comment, I) advcl(wish, comment) advmod(comment, frther) pnct(wish, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) mark(VB,TO) xcomp(VB,VB) det(NN,DT) amod(NN,JJ) compond(NN,NNP) compond(NN,NNP) dobj(VB,NN) mark(VBP,IN) nsbj(VBP,PRP) advcl(VB,VBP) advmod(VBP,RB) pnct(VB,VB)","[ROOT, comment, wish, examine, He]","[ROOT, comment, wish, examine, He]",14,[ ],[ ],VB_comment VBP_wish VB_examine PRP_He ,"[ROOT, comment, wish, examine, He]","[ROOT, comment, wish, examine, He]",VB_comment VBP_wish VB_examine PRP_He ,"[ROOT, comment, wish, examine, He]",VB_comment VBP_wish VB_examine PRP_He ,"[ROOT, comment, wish, examine, He]",VB_comment VBP_wish VB_examine PRP_He ,-3,0,2,0,0,0,0,0,0,0
Will the Minister bear in mind that when private capital ran the mining industry it was in a deplorable condition?,WillMD theDT MinisterNNP bearNN inIN mindNN thatIN whenWRB privateJJ capitalNN ranVBD theDT miningNN industryNN itPRP wasVBD inIN aDT deplorableJJ conditionNN ,"root(ROOT-0, Will-1) det(bear-4, the-2) compound(bear-4, Minister-3) dobj(Will-1, bear-4) case(mind-6, in-5) nmod:in(bear-4, mind-6) dobj(condition-20, that-7) advmod(ran-11, when-8) amod(capital-10, private-9) nsubj(ran-11, capital-10) advcl(condition-20, ran-11) det(industry-14, the-12) compound(industry-14, mining-13) dobj(ran-11, industry-14) nsubj(condition-20, it-15) cop(condition-20, was-16) case(condition-20, in-17) det(condition-20, a-18) amod(condition-20, deplorable-19) acl:relcl(mind-6, condition-20) punct(Will-1, ?-21)",0,1,0,"root(ROOT, Will) det(bear, the) compond(bear, Minister) dobj(Will, bear) case(mind, in) nmod:in(bear, mind) dobj(condition, that) advmod(ran, when) amod(capital, private) nsbj(ran, capital) advcl(condition, ran) det(indstry, the) compond(indstry, mining) dobj(ran, indstry) nsbj(condition, it) cop(condition, was) case(condition, in) det(condition, a) amod(condition, deplorable) acl:relcl(mind, condition) pnct(Will, ?)","root(,MD) det(NN,DT) compond(NN,NNP) dobj(MD,NN) case(NN,IN) nmod:in(NN,NN) dobj(NN,IN) advmod(VBD,WRB) amod(NN,JJ) nsbj(VBD,NN) advcl(NN,VBD) det(NN,DT) compond(NN,NN) dobj(VBD,NN) nsbj(NN,PRP) cop(NN,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) acl:relcl(NN,NN) pnct(MD,MD)","[bear, Will, mind]","[bear, Will, mind]",15,"[bear, Will, mind]","[bear, Will, mind]",NN_bear MD_Will NN_mind ,"[bear, Will, mind]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I trust that those whom I respect and who had interests in and responsibility for the coal industry in the past will join the latter part of the twentieth century with regard to investment by reputable organisations.,IPRP trustVBP thatIN thoseDT whomWP IPRP respectVBP andCC whoWP hadVBD interestsNNS inIN andCC responsibilityNN forIN theDT coalNN industryNN inIN theDT pastNN willMD joinVB theDT latterJJ partNN ofIN theDT twentiethJJ centuryNN withIN regardNN toTO investmentNN byIN reputableJJ organisationsNNS ,"root(ROOT-0, trust-2) nsubj(trust-2, I-1) dobj(trust-2, that-3) dep(that-3, those-4) dobj(respect-7, whom-5) nsubj(respect-7, I-6) acl:relcl(those-4, respect-7) cc(respect-7, and-8) nsubj(had-10, who-9) acl:relcl(those-4, had-10) conj:and(respect-7, had-10) dobj(had-10, interests-11) mark(join-23, in-12) cc(in-12, and-13) conj:and(in-12, responsibility-14) mark(join-23, responsibility-14) case(industry-18, for-15) det(industry-18, the-16) compound(industry-18, coal-17) nmod:for(responsibility-14, industry-18) case(past-21, in-19) det(past-21, the-20) nmod:in(in-12, past-21) aux(join-23, will-22) advcl(had-10, join-23) det(part-26, the-24) amod(part-26, latter-25) dobj(join-23, part-26) case(century-30, of-27) det(century-30, the-28) amod(century-30, twentieth-29) nmod:of(part-26, century-30) case(regard-32, with-31) nmod:with(join-23, regard-32) case(investment-34, to-33) nmod:to(regard-32, investment-34) case(organisations-37, by-35) amod(organisations-37, reputable-36) nmod:by(investment-34, organisations-37) punct(trust-2, .-38)",0,1,0,"root(ROOT, trst) nsbj(trst, I) dobj(trst, that) dep(that, those) dobj(respect, whom) nsbj(respect, I) acl:relcl(those, respect) cc(respect, and) nsbj(had, who) acl:relcl(those, had) conj:and(respect, had) dobj(had, interests) mark(join, in) cc(in, and) conj:and(in, responsibility) mark(join, responsibility) case(indstry, for) det(indstry, the) compond(indstry, coal) nmod:for(responsibility, indstry) case(past, in) det(past, the) nmod:in(in, past) ax(join, will) advcl(had, join) det(part, the) amod(part, latter) dobj(join, part) case(centry, of) det(centry, the) amod(centry, twentieth) nmod:of(part, centry) case(regard, with) nmod:with(join, regard) case(investment, to) nmod:to(regard, investment) case(organisations, by) amod(organisations, reptable) nmod:by(investment, organisations) pnct(trst, .)","root(,VBP) nsbj(VBP,PRP) dobj(VBP,IN) dep(IN,DT) dobj(VBP,WP) nsbj(VBP,PRP) acl:relcl(DT,VBP) cc(VBP,CC) nsbj(VBD,WP) acl:relcl(DT,VBD) conj:and(VBP,VBD) dobj(VBD,NNS) mark(VB,IN) cc(IN,CC) conj:and(IN,NN) mark(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:for(NN,NN) case(NN,IN) det(NN,DT) nmod:IN(IN,NN) ax(VB,MD) advcl(VBD,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) nmod:with(VB,NN) case(NN,TO) nmod:to(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:by(NN,NNS) pnct(VBP,VBP)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We are not in 1930  we are in 1982.,WePRP areVBP notRB inIN 1930CD wePRP areVBP inIN 1982CD ,"root(ROOT-0, 1930-5) nsubj(1930-5, We-1) cop(1930-5, are-2) neg(1930-5, not-3) case(1930-5, in-4) punct(1982-10, ,-6) nsubj(1982-10, we-7) cop(1982-10, are-8) case(1982-10, in-9) dep(1930-5, 1982-10) punct(1930-5, .-11)",0,0,0,"root(ROOT, 1930) nsbj(1930, We) cop(1930, are) neg(1930, not) case(1930, in) pnct(1982, ,) nsbj(1982, we) cop(1982, are) case(1982, in) dep(1930, 1982) pnct(1930, .)","root(,CD) nsbj(CD,PRP) cop(CD,VBP) neg(CD,RB) case(CD,IN) pnct(CD,CD) nsbj(CD,PRP) cop(CD,VBP) case(CD,IN) dep(CD,CD) pnct(CD,CD)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is my hon. Friend aware that the taxpayer is losing about £35 million as a result of not being able to import more coal?,IsVBZ myPRP$ honJJ FriendNNP awareNN thatIN theDT taxpayerNN isVBZ losingVBG aboutIN £35NNP millionCD asIN aDT resultNN ofIN notRB beingVBG ableJJ toTO importVB moreJJR coalNN ,"root(ROOT-0, aware-5) cop(aware-5, Is-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(aware-5, Friend-4) mark(losing-10, that-6) det(taxpayer-8, the-7) nsubj(losing-10, taxpayer-8) aux(losing-10, is-9) ccomp(aware-5, losing-10) advmod(million-14, about-11) compound(million-14, #-12) compound(million-14, 35-13) dobj(losing-10, million-14) case(result-17, as-15) det(result-17, a-16) nmod:as(losing-10, result-17) mark(able-21, of-18) neg(able-21, not-19) cop(able-21, being-20) acl(result-17, able-21) mark(import-23, to-22) xcomp(able-21, import-23) amod(coal-25, more-24) dobj(import-23, coal-25) punct(aware-5, ?-26)",0,0,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(aware, Friend) mark(losing, that) det(taxpayer, the) nsbj(losing, taxpayer) ax(losing, is) ccomp(aware, losing) advmod(million, abot) compond(million, #) compond(million, 35) dobj(losing, million) case(reslt, as) det(reslt, a) nmod:as(losing, reslt) mark(able, of) neg(able, not) cop(able, being) acl(reslt, able) mark(import, to) xcomp(able, import) amod(coal, more) dobj(import, coal) pnct(aware, ?)","root(,NN) cop(NN,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) mark(VBG,IN) det(NN,DT) nsbj(VBG,NN) ax(VBG,VBZ) ccomp(NN,VBG) advmod(CD,IN) compond(CD,CD) compond(CD,CD) dobj(VBG,CD) case(NN,IN) det(NN,DT) nmod:as(VBG,NN) mark(JJ,IN) neg(JJ,RB) cop(JJ,VBG) acl(NN,JJ) mark(VB,TO) xcomp(JJ,VB) amod(NN,JJR) dobj(VB,NN) pnct(NN,NN)","[ROOT, aware, my, losing, Friend]","[ROOT, aware, my, losing, Friend]",17,"[ROOT, aware, my, losing, Friend]",[ ],JJ_aware PRP$_my VBG_losing NNP_Friend ,"[ROOT, aware, my, losing, Friend]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Instead of expecting the CEGB to import 4 million tonnes  as contracted  and then dumping 2 million tonnes of it in Europe  does he agree that it would be more rational to import into the United Kingdom?,InsteadRB ofIN expectingVBG theDT CEGBNNP toTO importVB 4CD millionCD tonnesNNS asIN contractedVBN andCC thenRB dumpingVBG 2CD millionCD tonnesNNS ofIN itPRP inIN EuropeNNP doesVBZ hePRP agreeVB thatIN itPRP wouldMD beVB moreRBR rationalJJ toTO importVB intoIN theDT UnitedNNP KingdomNNP ,"root(ROOT-0, agree-28) mark(expecting-3, Instead-1) mwe(Instead-1, of-2) advcl(agree-28, expecting-3) det(CEGB-5, the-4) dobj(expecting-3, CEGB-5) mark(import-7, to-6) xcomp(expecting-3, import-7) compound(million-9, 4-8) nummod(tonnes-10, million-9) dobj(import-7, tonnes-10) punct(expecting-3, ,-11) mark(contracted-13, as-12) advcl(expecting-3, contracted-13) punct(expecting-3, ,-14) cc(expecting-3, and-15) advmod(dumping-17, then-16) conj:and(expecting-3, dumping-17) advcl(agree-28, dumping-17) compound(million-19, 2-18) nummod(tonnes-20, million-19) dobj(dumping-17, tonnes-20) case(it-22, of-21) nmod:of(tonnes-20, it-22) case(Europe-24, in-23) nmod:in(tonnes-20, Europe-24) punct(agree-28, ,-25) aux(agree-28, does-26) nsubj(agree-28, he-27) mark(rational-34, that-29) nsubj(rational-34, it-30) aux(rational-34, would-31) cop(rational-34, be-32) advmod(rational-34, more-33) ccomp(agree-28, rational-34) mark(import-36, to-35) xcomp(rational-34, import-36) case(Kingdom-40, into-37) det(Kingdom-40, the-38) compound(Kingdom-40, United-39) nmod:into(import-36, Kingdom-40) punct(agree-28, ?-41)",0,0,0,"root(ROOT, agree) mark(expecting, Instead) mwe(Instead, of) advcl(agree, expecting) det(CEGB, the) dobj(expecting, CEGB) mark(import, to) xcomp(expecting, import) compond(million, 4) nmmod(tonnes, million) dobj(import, tonnes) pnct(expecting, ,) mark(contracted, as) advcl(expecting, contracted) pnct(expecting, ,) cc(expecting, and) advmod(dmping, then) conj:and(expecting, dmping) advcl(agree, dmping) compond(million, 2) nmmod(tonnes, million) dobj(dmping, tonnes) case(it, of) nmod:of(tonnes, it) case(Erope, in) nmod:in(tonnes, Erope) pnct(agree, ,) ax(agree, does) nsbj(agree, he) mark(rational, that) nsbj(rational, it) ax(rational, wold) cop(rational, be) advmod(rational, more) ccomp(agree, rational) mark(import, to) xcomp(rational, import) case(Kingdom, into) det(Kingdom, the) compond(Kingdom, United) nmod:into(import, Kingdom) pnct(agree, ?)","root(,VB) mark(VBG,RB) mwe(RB,IN) advcl(VB,VBG) det(NNP,DT) dobj(VBG,NNP) mark(VB,TO) xcomp(VBG,VB) compond(CD,CD) nmmod(NNS,CD) dobj(VB,NNS) pnct(VBG,VBG) mark(VBN,IN) advcl(VBG,VBN) pnct(VBG,VBG) cc(VBG,CC) advmod(VBG,RB) conj:and(VBG,VBG) advcl(VB,VBG) compond(CD,CD) nmmod(NNS,CD) dobj(VBG,NNS) case(PRP,IN) nmod:of(NNS,PRP) case(NNP,IN) nmod:in(NNS,NNP) pnct(VB,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(JJ,IN) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RBR) ccomp(VB,JJ) mark(VB,TO) xcomp(JJ,VB) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:into(VB,NNP) pnct(VB,VB)","[dumping, expecting, he, agree, ROOT, rational]","[dumping, expecting, he, agree, ROOT, rational]",17,[ ],[ ],VBG_dumping VBG_expecting PRP_he VB_agree JJ_rational ,"[dumping, expecting, he, agree, ROOT, rational]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have learnt from experience in the past few years that rationality is not the basis of every debate on the coal industry.,IPRP haveVBP learntVBN fromIN experienceNN inIN theDT pastJJ fewJJ yearsNNS thatIN rationalityNN isVBZ notRB theDT basisNN ofIN everyDT debateNN onIN theDT coalNN industryNN ,"root(ROOT-0, learnt-3) nsubj(learnt-3, I-1) aux(learnt-3, have-2) case(experience-5, from-4) nmod:from(learnt-3, experience-5) case(years-10, in-6) det(years-10, the-7) amod(years-10, past-8) amod(years-10, few-9) nmod:in(experience-5, years-10) det(rationality-12, that-11) nsubj(basis-16, rationality-12) cop(basis-16, is-13) neg(basis-16, not-14) det(basis-16, the-15) acl:relcl(years-10, basis-16) case(debate-19, of-17) det(debate-19, every-18) nmod:of(basis-16, debate-19) case(industry-23, on-20) det(industry-23, the-21) compound(industry-23, coal-22) nmod:on(debate-19, industry-23) punct(learnt-3, .-24)",0,1,0,"root(ROOT, learnt) nsbj(learnt, I) ax(learnt, have) case(experience, from) nmod:from(learnt, experience) case(years, in) det(years, the) amod(years, past) amod(years, few) nmod:in(experience, years) det(rationality, that) nsbj(basis, rationality) cop(basis, is) neg(basis, not) det(basis, the) acl:relcl(years, basis) case(debate, of) det(debate, every) nmod:of(basis, debate) case(indstry, on) det(indstry, the) compond(indstry, coal) nmod:on(debate, indstry) pnct(learnt, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) case(NN,IN) nmod:from(VBN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) nmod:in(NN,NNS) det(NN,IN) nsbj(NN,NN) cop(NN,VBZ) neg(NN,RB) det(NN,DT) acl:relcl(NNS,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:on(NN,NN) pnct(VBN,VBN)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The detailed facts that my hon. Friend suggests bear further examination.,TheDT detailedJJ factsNNS thatWDT myPRP$ honNN FriendNNP suggestsVBZ bearVBP furtherJJ examinationNN ,"root(ROOT-0, facts-3) det(facts-3, The-1) amod(facts-3, detailed-2) dep(suggests-8, that-4) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) nsubj(suggests-8, Friend-7) acl:relcl(facts-3, suggests-8) compound(examination-11, bear-9) amod(examination-11, further-10) dobj(suggests-8, examination-11) punct(facts-3, .-12)",0,0,1,"root(ROOT, facts) det(facts, The) amod(facts, detailed) dep(sggests, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(sggests, Friend) acl:relcl(facts, sggests) compond(examination, bear) amod(examination, frther) dobj(sggests, examination) pnct(facts, .)","root(,NNS) det(NNS,DT) amod(NNS,JJ) dep(VBZ,WDT) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) acl:relcl(NNS,VBZ) compond(NN,VBP) amod(NN,JJ) dobj(VBZ,NN) pnct(NNS,NNS)","[suggests, Friend, my, facts, examination, that]","[suggests, Friend, my, facts, examination, that]",18,"[suggests, Friend, my, facts, examination, that]","[suggests, Friend, my, facts, examination, that]",VBZ_suggests NNP_Friend PRP$_my NNS_facts NN_examination IN_that ,"[suggests, Friend, my, facts, examination, that]","[suggests, Friend, my, facts, examination, that]",VBZ_suggests NNP_Friend PRP$_my NNS_facts NN_examination IN_that ,"[suggests, Friend, my, facts, examination, that]",VBZ_suggests NNP_Friend PRP$_my NNS_facts NN_examination IN_that ,"[suggests, Friend, my, facts, examination, that]",VBZ_suggests NNP_Friend PRP$_my NNS_facts NN_examination IN_that ,-3,0,2,0,0,0,0,0,0,0
I am sure that the Minister agrees that investment is the key to progress in the coal industry.,IPRP amVBP sureJJ thatIN theDT MinisterNNP agreesVBZ thatIN investmentNN isVBZ theDT keyNN toTO progressVB inIN theDT coalNN industryNN ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) mark(agrees-7, that-4) det(Minister-6, the-5) nsubj(agrees-7, Minister-6) ccomp(sure-3, agrees-7) mark(key-12, that-8) nsubj(key-12, investment-9) cop(key-12, is-10) det(key-12, the-11) ccomp(agrees-7, key-12) mark(progress-14, to-13) xcomp(key-12, progress-14) case(industry-18, in-15) det(industry-18, the-16) compound(industry-18, coal-17) nmod:in(progress-14, industry-18) punct(sure-3, .-19)",0,1,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) mark(agrees, that) det(Minister, the) nsbj(agrees, Minister) ccomp(sre, agrees) mark(key, that) nsbj(key, investment) cop(key, is) det(key, the) ccomp(agrees, key) mark(progress, to) xcomp(key, progress) case(indstry, in) det(indstry, the) compond(indstry, coal) nmod:in(progress, indstry) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VBZ,IN) det(NNP,DT) nsbj(VBZ,NNP) ccomp(JJ,VBZ) mark(NN,IN) nsbj(NN,NN) cop(NN,VBZ) det(NN,DT) ccomp(VBZ,NN) mark(VB,TO) xcomp(NN,VB) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(VB,NN) pnct(JJ,JJ)","[key, Minister, agrees, sure]","[key, Minister, agrees, sure]",19,"[key, Minister, agrees, sure]","[key, Minister, agrees, sure]",NN_key NNP_Minister VBZ_agrees RB_sure ,"[key, Minister, agrees, sure]","[key, Minister, agrees, sure]",NN_key NNP_Minister VBZ_agrees RB_sure ,"[key, Minister, agrees, sure]",NN_key NNP_Minister VBZ_agrees RB_sure ,"[key, Minister, agrees, sure]",NN_key NNP_Minister VBZ_agrees RB_sure ,-3,0,2,0,0,0,0,0,0,0
Will he consult the Government about oil from coal?,WillMD hePRP consultVB theDT GovernmentNN aboutIN oilNN fromIN coalNN ,"root(ROOT-0, consult-3) aux(consult-3, Will-1) nsubj(consult-3, he-2) det(Government-5, the-4) dobj(consult-3, Government-5) case(oil-7, about-6) nmod:about(Government-5, oil-7) case(coal-9, from-8) nmod:from(oil-7, coal-9) punct(consult-3, ?-10)",0,0,0,"root(ROOT, conslt) ax(conslt, Will) nsbj(conslt, he) det(Government, the) dobj(conslt, Government) case(oil, abot) nmod:abot(Government, oil) case(coal, from) nmod:from(oil, coal) pnct(conslt, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:abot(NN,NN) case(NN,IN) nmod:from(NN,NN) pnct(VB,VB)","[oil, Government, he, coal, consult, ROOT]","[oil, Government, he, coal, consult, ROOT]",19,"[ROOT, Government, consult, oil, coal]","[ROOT, Government, consult, oil, coal]",NN_oil NNP_Government PRP_he NN_coal VB_consult ,"[oil, Government, he, coal, consult, ROOT]","[oil, Government, he, coal, consult, ROOT]",NN_oil NNP_Government PRP_he NN_coal VB_consult ,"[oil, Government, he, coal, consult, ROOT]",NN_oil NNP_Government PRP_he NN_coal VB_consult ,"[oil, Government, he, coal, consult, ROOT]",NN_oil NNP_Government PRP_he NN_coal VB_consult ,-3,0,2,0,0,0,0,0,0,0
Does he agree that it not only affects the future of the coal industry  but that British technology could be at stake?,DoesVBZ hePRP agreeVB thatIN itPRP notRB onlyRB affectsVBZ theDT futureNN ofIN theDT coalNN industryNN butCC thatIN BritishNNP technologyNN couldMD beVB atIN stakeNN ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(affects-8, that-4) nsubj(affects-8, it-5) neg(only-7, not-6) cc:preconj(affects-8, only-7) ccomp(agree-3, affects-8) det(future-10, the-9) dobj(affects-8, future-10) case(industry-14, of-11) det(industry-14, the-12) compound(industry-14, coal-13) nmod:of(future-10, industry-14) punct(agree-3, ,-15) cc(agree-3, but-16) mark(stake-23, that-17) amod(technology-19, British-18) nsubj(stake-23, technology-19) aux(stake-23, could-20) cop(stake-23, be-21) case(stake-23, at-22) conj:but(agree-3, stake-23) punct(agree-3, ?-24)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(affects, that) nsbj(affects, it) neg(only, not) cc:preconj(affects, only) ccomp(agree, affects) det(ftre, the) dobj(affects, ftre) case(indstry, of) det(indstry, the) compond(indstry, coal) nmod:of(ftre, indstry) pnct(agree, ,) cc(agree, bt) mark(stake, that) amod(technology, British) nsbj(stake, technology) ax(stake, cold) cop(stake, be) case(stake, at) conj:bt(agree, stake) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBZ,IN) nsbj(VBZ,PRP) neg(RB,RB) cc:preconj(VBZ,RB) ccomp(VB,VBZ) det(NN,DT) dobj(VBZ,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) pnct(VB,VB) cc(VB,CC) mark(NN,IN) amod(NN,NNP) nsbj(NN,NN) ax(NN,MD) cop(NN,VB) case(NN,IN) conj:bt(VB,NN) pnct(VB,VB)","[he, ROOT, agree, affects, but]","[he, ROOT, agree, affects, but]",19,[ ],[ ],PRP_he VB_agree VBZ_affects CC_but ,"[he, ROOT, agree, affects, but]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As a member of the Government  I shall indulge in self consultation.,AsIN aDT memberNN ofIN theDT GovernmentNNP IPRP shallMD indulgeVB inIN selfJJ consultationNN ,"root(ROOT-0, indulge-10) case(member-3, As-1) det(member-3, a-2) nmod:as(indulge-10, member-3) case(Government-6, of-4) det(Government-6, the-5) nmod:of(member-3, Government-6) punct(indulge-10, ,-7) nsubj(indulge-10, I-8) aux(indulge-10, shall-9) case(consultation-13, in-11) compound(consultation-13, self-12) nmod:in(indulge-10, consultation-13) punct(indulge-10, .-14)",0,0,0,"root(ROOT, indlge) case(member, As) det(member, a) nmod:as(indlge, member) case(Government, of) det(Government, the) nmod:of(member, Government) pnct(indlge, ,) nsbj(indlge, I) ax(indlge, shall) case(consltation, in) compond(consltation, self) nmod:in(indlge, consltation) pnct(indlge, .)","root(,VB) case(NN,IN) det(NN,DT) nmod:as(VB,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) case(NN,IN) compond(NN,JJ) nmod:in(VB,NN) pnct(VB,VB)","[indulge, Government, member]","[indulge, Government, member]",20,"[indulge, Government, member]","[indulge, Government, member]",VB_indulge NNP_Government NN_member ,"[indulge, Government, member]","[indulge, Government, member]",VB_indulge NNP_Government NN_member ,"[indulge, Government, member]",VB_indulge NNP_Government NN_member ,"[indulge, Government, member]",VB_indulge NNP_Government NN_member ,-3,0,2,2,1,2,2,2,2,2
We must make the right decisions in these matters.,WePRP mustMD makeVB theDT rightJJ decisionsNNS inIN theseDT mattersNNS ,"root(ROOT-0, make-3) nsubj(make-3, We-1) aux(make-3, must-2) det(decisions-6, the-4) amod(decisions-6, right-5) dobj(make-3, decisions-6) case(matters-9, in-7) det(matters-9, these-8) nmod:in(decisions-6, matters-9) punct(make-3, .-10)",0,0,0,"root(ROOT, make) nsbj(make, We) ax(make, mst) det(decisions, the) amod(decisions, right) dobj(make, decisions) case(matters, in) det(matters, these) nmod:in(decisions, matters) pnct(make, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) case(NNS,IN) det(NNS,DT) nmod:in(NNS,NNS) pnct(VB,VB)",[ ],[ ],20,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The right decisions require us to examine the matters carefully  thoroughly and responsibly.,TheDT rightJJ decisionsNNS requireVBP usPRP toTO examineVB theDT mattersNNS carefullyRB thoroughlyRB andCC responsiblyRB ,"root(ROOT-0, require-4) det(decisions-3, The-1) compound(decisions-3, right-2) nsubj(require-4, decisions-3) dobj(require-4, us-5) mark(examine-7, to-6) xcomp(require-4, examine-7) det(matters-9, the-8) dobj(examine-7, matters-9) advmod(and-13, carefully-10) punct(and-13, ,-11) advmod(and-13, thoroughly-12) acl(matters-9, and-13) advmod(and-13, responsibly-14) punct(require-4, .-15)",0,0,0,"root(ROOT, reqire) det(decisions, The) compond(decisions, right) nsbj(reqire, decisions) dobj(reqire, s) mark(examine, to) xcomp(reqire, examine) det(matters, the) dobj(examine, matters) advmod(and, careflly) pnct(and, ,) advmod(and, thoroghly) acl(matters, and) advmod(and, responsibly) pnct(reqire, .)","root(,VBP) det(NNS,DT) compond(NNS,JJ) nsbj(VBP,NNS) dobj(VBP,PRP) mark(VB,TO) xcomp(VBP,VB) det(NNS,DT) dobj(VB,NNS) advmod(CC,RB) pnct(CC,CC) advmod(CC,RB) acl(NNS,CC) advmod(CC,RB) pnct(VBP,VBP)",[ ],[ ],20,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We are dealing both with the coal industry  which is crucial  and the future of taxpayers' money.,WePRP areVBP dealingVBG bothDT withIN theDT coalNN industryNN whichWDT isVBZ crucialJJ andCC theDT futureNN ofIN taxpayersNNS 'POS moneyNN ,"root(ROOT-0, dealing-3) nsubj(dealing-3, We-1) aux(dealing-3, are-2) advmod(dealing-3, both-4) case(industry-8, with-5) det(industry-8, the-6) compound(industry-8, coal-7) nmod:with(both-4, industry-8) punct(industry-8, ,-9) nsubj(crucial-12, which-10) cop(crucial-12, is-11) acl:relcl(industry-8, crucial-12) punct(industry-8, ,-13) cc(industry-8, and-14) det(future-16, the-15) nmod:with(both-4, future-16) conj:and(industry-8, future-16) case(money-20, of-17) nmod:poss(money-20, taxpayers-18) case(taxpayers-18, '-19) nmod:of(future-16, money-20) punct(dealing-3, .-21)",0,0,0,"root(ROOT, dealing) nsbj(dealing, We) ax(dealing, are) advmod(dealing, both) case(indstry, with) det(indstry, the) compond(indstry, coal) nmod:with(both, indstry) pnct(indstry, ,) nsbj(crcial, which) cop(crcial, is) acl:relcl(indstry, crcial) pnct(indstry, ,) cc(indstry, and) det(ftre, the) nmod:with(both, ftre) conj:and(indstry, ftre) case(money, of) nmod:poss(money, taxpayers) ""case(taxpayers, )"", nmod:of(ftre, money) pnct(dealing, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) advmod(VBG,DT) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:with(DT,NN) pnct(NN,NN) nsbj(JJ,WDT) cop(JJ,VBZ) acl:relcl(NN,JJ) pnct(NN,NN) cc(NN,CC) det(NN,DT) nmod:with(DT,NN) conj:and(NN,NN) case(NN,IN) nmod:poss(NN,NNS) case(NNS,POS) nmod:of(NN,NN) pnct(VBG,VBG)",[ ],[ ],20,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Minister for Trade why he has not renewed the normal annual grant to the National Association of Citizens Advice Bureaux.,askedVBN theDT MinisterNNP forIN TradeNNP whyWRB hePRP hasVBZ notRB renewedVBN theDT normalJJ annualJJ grantNN toTO theDT NationalNNP AssociationNNP ofIN CitizensNNP AdviceNNP BureauxNNP ,"root(ROOT-0, asked-1) det(Minister-3, the-2) dobj(asked-1, Minister-3) case(Trade-5, for-4) nmod:for(Minister-3, Trade-5) advmod(renewed-10, why-6) nsubj(renewed-10, he-7) aux(renewed-10, has-8) neg(renewed-10, not-9) advcl(asked-1, renewed-10) det(grant-14, the-11) amod(grant-14, normal-12) amod(grant-14, annual-13) dobj(renewed-10, grant-14) case(Association-18, to-15) det(Association-18, the-16) compound(Association-18, National-17) nmod:to(renewed-10, Association-18) case(Bureaux-22, of-19) compound(Bureaux-22, Citizens-20) compound(Bureaux-22, Advice-21) nmod:of(Association-18, Bureaux-22) punct(asked-1, .-23)",0,1,1,"root(ROOT, asked) det(Minister, the) dobj(asked, Minister) case(Trade, for) nmod:for(Minister, Trade) advmod(renewed, why) nsbj(renewed, he) ax(renewed, has) neg(renewed, not) advcl(asked, renewed) det(grant, the) amod(grant, normal) amod(grant, annal) dobj(renewed, grant) case(Association, to) det(Association, the) compond(Association, National) nmod:to(renewed, Association) case(Breax, of) compond(Breax, Citizens) compond(Breax, Advice) nmod:of(Association, Breax) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:for(NNP,NNP) advmod(VBN,WRB) nsbj(VBN,PRP) ax(VBN,VBZ) neg(VBN,RB) advcl(VBN,VBN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) dobj(VBN,NN) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VBN,NNP) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NNP,NNP) pnct(VBN,VBN)","[Association, not, renewed, Trade, grant, ROOT, why, Minister, asked, he]","[Association, not, renewed, Trade, grant, ROOT, why, Minister, asked, he]",1,"[ROOT, asked, Trade, renewed, Minister]","[ROOT, asked, Trade, renewed, Minister]",NNP_Association RB_not VBN_renewed NNP_Trade VB_grant WRB_why NNP_Minister VBN_asked PRP_he ,"[Association, not, renewed, Trade, grant, ROOT, why, Minister, asked, he]","[Association, not, renewed, Trade, grant, ROOT, why, Minister, asked, he]",NNP_Association RB_not VBN_renewed NNP_Trade VB_grant WRB_why NNP_Minister VBN_asked PRP_he ,"[Association, not, renewed, Trade, grant, ROOT, why, Minister, asked, he]",NNP_Association RB_not VBN_renewed NNP_Trade VB_grant WRB_why NNP_Minister VBN_asked PRP_he ,"[Association, not, renewed, Trade, grant, ROOT, why, Minister, asked, he]",NNP_Association RB_not VBN_renewed NNP_Trade VB_grant WRB_why NNP_Minister VBN_asked PRP_he ,-3,0,2,2,1,2,1,1,1,2
The Government grant that goes to NACAB increased rapidly under this Government.,TheDT GovernmentNNP grantNN thatWDT goesVBZ toTO NACABNNP increasedVBD rapidlyRB underIN thisDT GovernmentNN ,"root(ROOT-0, increased-8) det(grant-3, The-1) compound(grant-3, Government-2) nsubj(increased-8, grant-3) nsubj(goes-5, that-4) acl:relcl(grant-3, goes-5) case(NACAB-7, to-6) nmod:to(goes-5, NACAB-7) advmod(increased-8, rapidly-9) case(Government-12, under-10) det(Government-12, this-11) nmod:under(increased-8, Government-12) punct(increased-8, .-13)",0,1,0,"root(ROOT, increased) det(grant, The) compond(grant, Government) nsbj(increased, grant) nsbj(goes, that) acl:relcl(grant, goes) case(NACAB, to) nmod:to(goes, NACAB) advmod(increased, rapidly) case(Government, nder) det(Government, this) nmod:nder(increased, Government) pnct(increased, .)","root(,VBD) det(NN,DT) compond(NN,NN) nsbj(VBD,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) case(NNP,TO) nmod:to(VBZ,NNP) advmod(VBD,RB) case(NN,IN) det(NN,DT) nmod:nder(VBD,NN) pnct(VBD,VBD)","[goes, grant, increased, ROOT, rapidly, Government]","[goes, grant, increased, ROOT, rapidly, Government]",2,"[goes, grant, increased, ROOT, rapidly, Government]","[goes, grant, increased, ROOT, rapidly, Government]",VBZ_goes VB_grant VBD_increased RB_rapidly NNP_Government ,"[goes, grant, increased, ROOT, rapidly, Government]","[goes, grant, increased, ROOT, rapidly, Government]",VBZ_goes VB_grant VBD_increased RB_rapidly NNP_Government ,"[goes, grant, increased, ROOT, rapidly, Government]",VBZ_goes VB_grant VBD_increased RB_rapidly NNP_Government ,"[goes, grant, increased, ROOT, rapidly, Government]",VBZ_goes VB_grant VBD_increased RB_rapidly NNP_Government ,-3,0,2,0,0,0,0,0,0,0
Since 1979 it has increased from £1.85 million to £6.04 milliom this year.,SinceIN 1979CD itPRP hasVBZ increasedVBN fromIN £185CD millionCD toTO £604VB milliomNN thisDT yearNN ,"root(ROOT-0, increased-5) mark(increased-5, Since-1) nummod(it-3, 1979-2) nsubj(increased-5, it-3) aux(increased-5, has-4) case(million-9, from-6) compound(million-9, #-7) compound(million-9, 1.85-8) nmod:from(increased-5, million-9) case(milliom-13, to-10) compound(milliom-13, #-11) compound(milliom-13, 6.04-12) nmod:to(increased-5, milliom-13) det(year-15, this-14) nmod:tmod(increased-5, year-15) punct(increased-5, .-16)",0,0,0,"root(ROOT, increased) mark(increased, Since) nmmod(it, 1979) nsbj(increased, it) ax(increased, has) case(million, from) compond(million, #) compond(million, 1.85) nmod:from(increased, million) case(milliom, to) compond(milliom, #) compond(milliom, 6.04) nmod:to(increased, milliom) det(year, this) nmod:tmod(increased, year) pnct(increased, .)","root(,VBN) mark(VBN,IN) nmmod(PRP,CD) nsbj(VBN,PRP) ax(VBN,VBZ) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:from(VBN,CD) case(NN,TO) compond(NN,NN) compond(NN,NN) nmod:to(VBN,NN) det(NN,DT) nmod:tmod(VBN,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is a sign of the support that the Government give the organisation.,ThatDT isVBZ aDT signNN ofIN theDT supportNN thatIN theDT GovernmentNNP giveVB theDT organisationNN ,"root(ROOT-0, sign-4) nsubj(sign-4, That-1) cop(sign-4, is-2) det(sign-4, a-3) case(support-7, of-5) det(support-7, the-6) nmod:of(sign-4, support-7) mark(give-11, that-8) det(Government-10, the-9) nsubj(give-11, Government-10) ccomp(support-7, give-11) det(organisation-13, the-12) dobj(give-11, organisation-13) punct(sign-4, .-14)",0,0,0,"root(ROOT, sign) nsbj(sign, That) cop(sign, is) det(sign, a) case(spport, of) det(spport, the) nmod:of(sign, spport) mark(give, that) det(Government, the) nsbj(give, Government) ccomp(spport, give) det(organisation, the) dobj(give, organisation) pnct(sign, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) case(NN,IN) det(NN,DT) nmod:of(NN,NN) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ccomp(NN,VB) det(NN,DT) dobj(VB,NN) pnct(NN,NN)","[Government, give, support, organisation]","[Government, give, support, organisation]",2,"[Government, give, support, organisation]","[Government, give, support, organisation]",NNP_Government VB_give NN_support NN_organisation ,"[Government, give, support, organisation]","[Government, give, support, organisation]",NNP_Government VB_give NN_support NN_organisation ,"[Government, give, support, organisation]",NNP_Government VB_give NN_support NN_organisation ,"[Government, give, support, organisation]",NNP_Government VB_give NN_support NN_organisation ,-3,0,2,1,1,1,1,1,1,2
With these figures in mind  I thought it advisable to examine the distribution of these large sums of taxpayers' money.,WithIN theseDT figuresNNS inIN mindNN IPRP thoughtVBD itPRP advisableJJ toTO examineVB theDT distributionNN ofIN theseDT largeJJ sumsNNS ofIN taxpayersNNS 'POS moneyNN ,"root(ROOT-0, thought-8) case(figures-3, With-1) det(figures-3, these-2) nmod:with(thought-8, figures-3) case(mind-5, in-4) nmod:in(figures-3, mind-5) punct(thought-8, ,-6) nsubj(thought-8, I-7) nsubj(advisable-10, it-9) ccomp(thought-8, advisable-10) mark(examine-12, to-11) xcomp(advisable-10, examine-12) det(distribution-14, the-13) dobj(examine-12, distribution-14) case(sums-18, of-15) det(sums-18, these-16) amod(sums-18, large-17) nmod:of(distribution-14, sums-18) case(money-22, of-19) nmod:poss(money-22, taxpayers-20) case(taxpayers-20, '-21) nmod:of(sums-18, money-22) punct(thought-8, .-23)",0,0,0,"root(ROOT, thoght) case(figres, With) det(figres, these) nmod:with(thoght, figres) case(mind, in) nmod:in(figres, mind) pnct(thoght, ,) nsbj(thoght, I) nsbj(advisable, it) ccomp(thoght, advisable) mark(examine, to) xcomp(advisable, examine) det(distribtion, the) dobj(examine, distribtion) case(sms, of) det(sms, these) amod(sms, large) nmod:of(distribtion, sms) case(money, of) nmod:poss(money, taxpayers) ""case(taxpayers, )"", nmod:of(sms, money) pnct(thoght, .)","root(,VBD) case(NNS,IN) det(NNS,DT) nmod:with(VBD,NNS) case(NN,IN) nmod:in(NNS,NN) pnct(VBD,VBD) nsbj(VBD,PRP) nsbj(JJ,PRP) ccomp(VBD,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(NN,NNS) case(NN,IN) nmod:poss(NN,NNS) case(NNS,POS) nmod:of(NNS,NN) pnct(VBD,VBD)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
NACAB was without a director from April 1982 to February 1983  and it seemed wise to let the new director settle in and to review the allocation of money after six months.,NACABNNP wasVBD withoutIN aDT directorNN fromIN AprilNNP 1982CD toTO FebruaryNNP 1983CD andCC itPRP seemedVBD wiseNN toTO letVB theDT newJJ directorNN settleNN inIN andCC toTO reviewVB theDT allocationNN ofIN moneyNN afterIN sixCD monthsNNS ,"root(ROOT-0, director-5) nsubj(director-5, NACAB-1) cop(director-5, was-2) case(director-5, without-3) det(director-5, a-4) case(April-7, from-6) nmod:from(director-5, April-7) nummod(April-7, 1982-8) case(February-10, to-9) nmod:to(April-7, February-10) nummod(February-10, 1983-11) punct(director-5, ,-12) cc(director-5, and-13) nsubj(seemed-15, it-14) conj:and(director-5, seemed-15) xcomp(seemed-15, wise-16) mark(let-18, to-17) xcomp(wise-16, let-18) det(director-21, the-19) amod(director-21, new-20) nsubj(settle-22, director-21) ccomp(let-18, settle-22) mark(review-26, in-23) cc(in-23, and-24) conj:and(in-23, to-25) mark(review-26, to-25) advcl(settle-22, review-26) det(allocation-28, the-27) dobj(review-26, allocation-28) case(money-30, of-29) nmod:of(allocation-28, money-30) case(months-33, after-31) nummod(months-33, six-32) nmod:after(review-26, months-33) punct(director-5, .-34)",0,0,0,"root(ROOT, director) nsbj(director, NACAB) cop(director, was) case(director, withot) det(director, a) case(April, from) nmod:from(director, April) nmmod(April, 1982) case(Febrary, to) nmod:to(April, Febrary) nmmod(Febrary, 1983) pnct(director, ,) cc(director, and) nsbj(seemed, it) conj:and(director, seemed) xcomp(seemed, wise) mark(let, to) xcomp(wise, let) det(director, the) amod(director, new) nsbj(settle, director) ccomp(let, settle) mark(review, in) cc(in, and) conj:and(in, to) mark(review, to) advcl(settle, review) det(allocation, the) dobj(review, allocation) case(money, of) nmod:of(allocation, money) case(months, after) nmmod(months, six) nmod:after(review, months) pnct(director, .)","root(,NN) nsbj(NN,NNP) cop(NN,VBD) case(NN,IN) det(NN,DT) case(NNP,IN) nmod:from(NN,NNP) nmmod(NNP,CD) case(NNP,TO) nmod:to(NNP,NNP) nmmod(NNP,CD) pnct(NN,NN) cc(NN,CC) nsbj(VBD,PRP) conj:and(NN,VBD) xcomp(VBD,NN) mark(VB,TO) xcomp(NN,VB) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) ccomp(VB,NN) mark(VB,IN) cc(IN,CC) conj:and(IN,TO) mark(VB,TO) advcl(NN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) nmmod(NNS,CD) nmod:after(VB,NNS) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I stress that NACAB is funded in full for the first six months of this year that is to September so its work can be maintained.,IPRP stressVBP thatIN NACABNNP isVBZ fundedVBN inIN fullJJ forIN theDT firstJJ sixCD monthsNNS ofIN thisDT yearNN thatWDT isVBZ toTO SeptemberNNP soIN itsPRP$ workNN canMD beVB maintainedVBN ,"root(ROOT-0, stress-2) nsubj(stress-2, I-1) mark(funded-6, that-3) nsubjpass(funded-6, NACAB-4) auxpass(funded-6, is-5) ccomp(stress-2, funded-6) case(full-8, in-7) nmod:in(funded-6, full-8) case(months-13, for-9) det(months-13, the-10) amod(months-13, first-11) nummod(months-13, six-12) nmod:for(full-8, months-13) case(year-16, of-14) det(year-16, this-15) nmod:of(months-13, year-16) nsubj(is-18, that-17) acl:relcl(months-13, is-18) case(September-20, to-19) nmod:to(is-18, September-20) mark(maintained-26, so-21) nmod:poss(work-23, its-22) nsubjpass(maintained-26, work-23) aux(maintained-26, can-24) auxpass(maintained-26, be-25) dep(is-18, maintained-26) punct(stress-2, .-27)",0,0,0,"root(ROOT, stress) nsbj(stress, I) mark(fnded, that) nsbjpass(fnded, NACAB) axpass(fnded, is) ccomp(stress, fnded) case(fll, in) nmod:in(fnded, fll) case(months, for) det(months, the) amod(months, first) nmmod(months, six) nmod:for(fll, months) case(year, of) det(year, this) nmod:of(months, year) nsbj(is, that) acl:relcl(months, is) case(September, to) nmod:to(is, September) mark(maintained, so) nmod:poss(work, its) nsbjpass(maintained, work) ax(maintained, can) axpass(maintained, be) dep(is, maintained) pnct(stress, .)","root(,VBP) nsbj(VBP,PRP) mark(VBN,WDT) nsbjpass(VBN,NNP) axpass(VBN,VBZ) ccomp(VBP,VBN) case(JJ,IN) nmod:in(VBN,JJ) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:for(JJ,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) nsbj(VBZ,WDT) acl:relcl(NNS,VBZ) case(NNP,TO) nmod:to(VBZ,NNP) mark(VBN,IN) nmod:poss(NN,PRP$) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) dep(VBZ,VBN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I have given assurances that the funding for the second half of the year will be continued should the review take longer than I hope.,IPRP haveVBP givenVBN assurancesNNS thatIN theDT fundingNN forIN theDT secondJJ halfNN ofIN theDT yearNN willMD beVB continuedVBN shouldMD theDT reviewNN takeNN longerJJR thanIN IPRP hopeVBP ,"root(ROOT-0, given-3) nsubj(given-3, I-1) aux(given-3, have-2) dobj(given-3, assurances-4) mark(continued-17, that-5) det(funding-7, the-6) nsubjpass(continued-17, funding-7) case(half-11, for-8) det(half-11, the-9) amod(half-11, second-10) nmod:for(funding-7, half-11) case(year-14, of-12) det(year-14, the-13) nmod:of(half-11, year-14) aux(continued-17, will-15) auxpass(continued-17, be-16) ccomp(assurances-4, continued-17) aux(take-21, should-18) det(review-20, the-19) nsubj(take-21, review-20) ccomp(continued-17, take-21) dobj(take-21, longer-22) mark(hope-25, than-23) nsubj(hope-25, I-24) advcl(longer-22, hope-25) punct(given-3, .-26)",0,0,1,"root(ROOT, given) nsbj(given, I) ax(given, have) dobj(given, assrances) mark(contined, that) det(fnding, the) nsbjpass(contined, fnding) case(half, for) det(half, the) amod(half, second) nmod:for(fnding, half) case(year, of) det(year, the) nmod:of(half, year) ax(contined, will) axpass(contined, be) ccomp(assrances, contined) ax(take, shold) det(review, the) nsbj(take, review) ccomp(contined, take) dobj(take, longer) mark(hope, than) nsbj(hope, I) advcl(longer, hope) pnct(given, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) dobj(VBN,NNS) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(NNS,VBN) ax(NN,MD) det(NN,DT) nsbj(NN,NN) ccomp(VBN,NN) dobj(NN,JJR) mark(VBP,IN) nsbj(VBP,PRP) advcl(JJR,VBP) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I can understand the right hon. and learned Gentleman's anxieties.,IPRP canMD understandVB theDT rightNN honNN andCC learnedVBD GentlemanNNP 'sPOS anxietiesNNS ,"root(ROOT-0, understand-3) nsubj(understand-3, I-1) nsubj(learned-8, I-1) aux(understand-3, can-2) det(hon.-6, the-4) amod(hon.-6, right-5) dobj(understand-3, hon.-6) cc(understand-3, and-7) conj:and(understand-3, learned-8) nmod:poss(anxieties-11, Gentleman-9) case(Gentleman-9, 's-10) dobj(learned-8, anxieties-11) punct(understand-3, .-12)",0,1,0,"root(ROOT, nderstand) nsbj(nderstand, I) nsbj(learned, I) ax(nderstand, can) det(hon., the) amod(hon., right) dobj(nderstand, hon.) cc(nderstand, and) conj:and(nderstand, learned) nmod:poss(anxieties, Gentleman) ""case(Gentleman, s)"", dobj(learned, anxieties) pnct(nderstand, .)","root(,VB) nsbj(VB,PRP) nsbj(VBD,PRP) ax(VB,MD) det(MD,DT) amod(DT,NN) dobj(VB,VB) cc(VB,CC) conj:and(VB,VBD) nmod:poss(NNS,NNP) case(NNP,POS) dobj(VBD,NNS) pnct(VB,VB)","[anxieties, Gentleman, learned]","[anxieties, Gentleman, learned]",4,"[anxieties, Gentleman, learned]","[anxieties, Gentleman, learned]",NNS_anxieties NNP_Gentleman VBD_learned ,"[anxieties, Gentleman, learned]","[anxieties, Gentleman, learned]",NNS_anxieties NNP_Gentleman VBD_learned ,"[anxieties, Gentleman, learned]",NNS_anxieties NNP_Gentleman VBD_learned ,"[anxieties, Gentleman, learned]",NNS_anxieties NNP_Gentleman VBD_learned ,-3,0,2,2,1,2,2,2,2,2
I made it clear in my statement last week  and again during last Friday's Adjournment debate  that am not responsible for what individual journalists put in their articles.,IPRP madeVBD itPRP clearJJ inIN myPRP$ statementNN lastJJ weekNN andCC againRB duringIN lastJJ FridayNNP 'sPOS AdjournmentNNP debateNN thatWDT amVBP notRB responsibleJJ forIN whatWP individualJJ journalistsNNS putVBD inIN theirPRP$ articlesNNS ,"root(ROOT-0, made-2) nsubj(made-2, I-1) nsubj(clear-4, it-3) xcomp(made-2, clear-4) case(statement-7, in-5) nmod:poss(statement-7, my-6) nmod:in(clear-4, statement-7) amod(week-9, last-8) nmod:tmod(clear-4, week-9) punct(made-2, ,-10) cc(made-2, and-11) advmod(debate-18, again-12) case(debate-18, during-13) amod(Friday-15, last-14) nmod:poss(debate-18, Friday-15) case(Friday-15, 's-16) compound(debate-18, Adjournment-17) conj:and(made-2, debate-18) punct(made-2, ,-19) nsubj(responsible-23, that-20) cop(responsible-23, am-21) neg(responsible-23, not-22) ccomp(made-2, responsible-23) mark(put-28, for-24) dobj(put-28, what-25) amod(journalists-27, individual-26) nsubj(put-28, journalists-27) advcl(responsible-23, put-28) case(articles-31, in-29) nmod:poss(articles-31, their-30) nmod:in(put-28, articles-31) punct(made-2, .-32)",0,0,0,"root(ROOT, made) nsbj(made, I) nsbj(clear, it) xcomp(made, clear) case(statement, in) nmod:poss(statement, my) nmod:in(clear, statement) amod(week, last) nmod:tmod(clear, week) pnct(made, ,) cc(made, and) advmod(debate, again) case(debate, dring) amod(Friday, last) nmod:poss(debate, Friday) ""case(Friday, s)"", compond(debate, Adjornment) conj:and(made, debate) pnct(made, ,) nsbj(responsible, that) cop(responsible, am) neg(responsible, not) ccomp(made, responsible) mark(pt, for) dobj(pt, what) amod(jornalists, individal) nsbj(pt, jornalists) advcl(responsible, pt) case(articles, in) nmod:poss(articles, their) nmod:in(pt, articles) pnct(made, .)","root(,VBD) nsbj(VBD,PRP) nsbj(JJ,PRP) xcomp(VBD,JJ) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(JJ,NN) amod(NN,JJ) nmod:tmod(JJ,NN) pnct(VBD,VBD) cc(VBD,CC) advmod(NN,RB) case(NN,IN) amod(NNP,JJ) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,NNP) conj:and(VBD,NN) pnct(VBD,VBD) nsbj(JJ,WDT) cop(JJ,VBP) neg(JJ,RB) ccomp(VBD,JJ) mark(VBD,IN) dobj(VBD,WP) amod(NNS,JJ) nsbj(VBD,NNS) advcl(JJ,VBD) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:in(VBD,NNS) pnct(VBD,VBD)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
My Department did not confirm what appeared in the article in The Sunday Times and no contact was made with me.,MyPRP$ DepartmentNNP didVBD notRB confirmVB whatWP appearedVBD inIN theDT articleNN inIN TheDT SundayNNP TimesNNP andCC noDT contactNN wasVBD madeVBN withIN mePRP ,"root(ROOT-0, confirm-5) nmod:poss(Department-2, My-1) nsubj(confirm-5, Department-2) aux(confirm-5, did-3) neg(confirm-5, not-4) nsubj(appeared-7, what-6) ccomp(confirm-5, appeared-7) case(article-10, in-8) det(article-10, the-9) nmod:in(appeared-7, article-10) case(Times-14, in-11) det(Times-14, The-12) compound(Times-14, Sunday-13) nmod:in(article-10, Times-14) cc(article-10, and-15) neg(contact-17, no-16) nsubjpass(made-19, contact-17) auxpass(made-19, was-18) nmod:in(appeared-7, made-19) conj:and(article-10, made-19) case(me-21, with-20) nmod:with(made-19, me-21) punct(confirm-5, .-22)",0,0,0,"root(ROOT, confirm) nmod:poss(Department, My) nsbj(confirm, Department) ax(confirm, did) neg(confirm, not) nsbj(appeared, what) ccomp(confirm, appeared) case(article, in) det(article, the) nmod:in(appeared, article) case(Times, in) det(Times, The) compond(Times, Snday) nmod:in(article, Times) cc(article, and) neg(contact, no) nsbjpass(made, contact) axpass(made, was) nmod:in(appeared, made) conj:and(article, made) case(me, with) nmod:with(made, me) pnct(confirm, .)","root(,VB) nmod:poss(NNP,PRP$) nsbj(VB,NNP) ax(VB,VBD) neg(VB,RB) nsbj(VBD,WP) ccomp(VB,VBD) case(NN,IN) det(NN,DT) nmod:in(VBD,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) cc(NN,CC) neg(NN,DT) nsbjpass(VBN,NN) axpass(VBN,VBD) nmod:in(VBD,VBN) conj:and(NN,VBN) case(PRP,IN) nmod:with(VBN,PRP) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The two main points in the article first  that I have cut NACAB's funds and  secondly  that I am influenced by another person in another area of activity are totally incorrect.,TheDT twoCD mainJJ pointsNNS inIN theDT articleNN firstRB thatIN IPRP haveVBP cutVBN NACABNNP 'sPOS fundsNNS andCC secondlyRB thatIN IPRP amVBP influencedVBN byIN anotherDT personNN inIN anotherDT areaNN ofIN activityNN areVBP totallyRB incorrectJJ ,"root(ROOT-0, incorrect-35) det(points-4, The-1) nummod(points-4, two-2) amod(points-4, main-3) nsubj(incorrect-35, points-4) case(article-7, in-5) det(article-7, the-6) nmod:in(points-4, article-7) advmod(points-4, first-8) punct(points-4, ,-9) mark(cut-13, that-10) nsubj(cut-13, I-11) aux(cut-13, have-12) acl:relcl(points-4, cut-13) nmod:poss(funds-16, NACAB-14) case(NACAB-14, 's-15) dobj(cut-13, funds-16) cc(cut-13, and-17) punct(cut-13, ,-18) acl:relcl(points-4, secondly-19) conj:and(cut-13, secondly-19) punct(cut-13, ,-20) mark(influenced-24, that-21) nsubjpass(influenced-24, I-22) auxpass(influenced-24, am-23) ccomp(cut-13, influenced-24) case(person-27, by-25) det(person-27, another-26) nmod:agent(influenced-24, person-27) case(area-30, in-28) det(area-30, another-29) nmod:in(person-27, area-30) case(activity-32, of-31) nmod:of(area-30, activity-32) cop(incorrect-35, are-33) advmod(incorrect-35, totally-34) punct(incorrect-35, .-36)",0,0,0,"root(ROOT, incorrect) det(points, The) nmmod(points, two) amod(points, main) nsbj(incorrect, points) case(article, in) det(article, the) nmod:in(points, article) advmod(points, first) pnct(points, ,) mark(ct, that) nsbj(ct, I) ax(ct, have) acl:relcl(points, ct) nmod:poss(fnds, NACAB) ""case(NACAB, s)"", dobj(ct, fnds) cc(ct, and) pnct(ct, ,) acl:relcl(points, secondly) conj:and(ct, secondly) pnct(ct, ,) mark(inflenced, that) nsbjpass(inflenced, I) axpass(inflenced, am) ccomp(ct, inflenced) case(person, by) det(person, another) nmod:agent(inflenced, person) case(area, in) det(area, another) nmod:in(person, area) case(activity, of) nmod:of(area, activity) cop(incorrect, are) advmod(incorrect, totally) pnct(incorrect, .)","root(,JJ) det(NNS,DT) nmmod(NNS,CD) amod(NNS,JJ) nsbj(JJ,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) advmod(NNS,RB) pnct(NNS,NNS) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) acl:relcl(NNS,VBN) nmod:poss(NNS,NNP) case(NNP,POS) dobj(VBN,NNS) cc(VBN,CC) pnct(VBN,VBN) acl:relcl(NNS,RB) conj:and(VBN,RB) pnct(VBN,VBN) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBP) ccomp(VBN,VBN) case(NN,IN) det(NN,DT) nmod:agent(VBN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NN,IN) nmod:of(NN,NN) cop(JJ,VBP) advmod(JJ,RB) pnct(JJ,JJ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Are not the real matters the distribution of these funds  the exact way in which they are distributed and whether large sums of money should be spent on training or for a new headquarters?,AreNNP notRB theDT realJJ mattersNNS theDT distributionNN ofIN theseDT fundsNNS theDT exactJJ wayNN inIN whichWDT theyPRP areVBP distributedVBN andCC whetherIN largeJJ sumsNNS ofIN moneyNN shouldMD beVB spentVBN onIN trainingNN orCC forIN aDT newJJ headquartersNN ,"root(ROOT-0, matters-5) cop(matters-5, Are-1) neg(matters-5, not-2) det(matters-5, the-3) amod(matters-5, real-4) det(distribution-7, the-6) dobj(matters-5, distribution-7) case(funds-10, of-8) det(funds-10, these-9) nmod:of(distribution-7, funds-10) punct(matters-5, ,-11) det(way-14, the-12) amod(way-14, exact-13) root(,-11, way-14) case(which-16, in-15) nmod:in(distributed-19, which-16) nsubjpass(distributed-19, they-17) auxpass(distributed-19, are-18) acl:relcl(way-14, distributed-19) cc(distributed-19, and-20) mark(spent-28, whether-21) amod(sums-23, large-22) nsubjpass(spent-28, sums-23) nsubjpass(spent-28'', sums-23) case(money-25, of-24) nmod:of(sums-23, money-25) aux(spent-28, should-26) auxpass(spent-28, be-27) acl:relcl(way-14, spent-28) conj:and(distributed-19, spent-28) conj:and(distributed-19, spent-28'') conj:or(spent-28, spent-28'') case(training-30, on-29) nmod:on(spent-28, training-30) cc(spent-28, or-31) case(headquarters-35, for-32) det(headquarters-35, a-33) amod(headquarters-35, new-34) nmod:for(spent-28'', headquarters-35) punct(way-14, ?-36)",0,0,0,"root(ROOT, matters) cop(matters, Are) neg(matters, not) det(matters, the) amod(matters, real) det(distribtion, the) dobj(matters, distribtion) case(fnds, of) det(fnds, these) nmod:of(distribtion, fnds) pnct(matters, ,) det(way, the) amod(way, exact) root(,, way) case(which, in) nmod:in(distribted, which) nsbjpass(distribted, they) axpass(distribted, are) acl:relcl(way, distribted) cc(distribted, and) mark(spent, whether) amod(sms, large) nsbjpass(spent, sms) nsbjpass(spent, sms) case(money, of) nmod:of(sms, money) ax(spent, shold) axpass(spent, be) acl:relcl(way, spent) conj:and(distribted, spent) conj:and(distribted, spent) conj:or(spent, spent) case(training, on) nmod:on(spent, training) cc(spent, or) case(headqarters, for) det(headqarters, a) amod(headqarters, new) nmod:for(spent, headqarters) pnct(way, ?)","root(,NNS) cop(NNS,NNP) neg(NNS,RB) det(NNS,DT) amod(NNS,JJ) det(NN,DT) dobj(NNS,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(NNS,NNS) det(NN,DT) amod(NN,JJ) root(JJJJNN) case(WDT,IN) nmod:in(VBN,WDT) nsbjpass(VBN,PRP) axpass(VBN,VBP) acl:relcl(NN,VBN) cc(VBN,CC) mark(VBN,IN) amod(NNS,JJ) nsbjpass(VBN,NNS) nsbjpass(VBN,NNS) case(NN,IN) nmod:of(NNS,NN) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NN,VBN) conj:and(VBN,VBN) conj:and(VBN,VBN) conj:or(VBN,VBN) case(NN,IN) nmod:on(VBN,NN) cc(VBN,CC) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(VBN,NN) pnct(NN,NN)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Surely those are matters at which my hon. Friend has a right to look to ensure that the funds are used in the best interests.,SurelyRB thoseDT areVBP mattersNNS atIN whichWDT myPRP$ honNN FriendNNP hasVBZ aDT rightNN toTO lookVB toTO ensureVB thatIN theDT fundsNNS areVBP usedVBN inIN theDT bestJJS interestsNNS ,"root(ROOT-0, matters-4) advmod(matters-4, Surely-1) nsubj(matters-4, those-2) cop(matters-4, are-3) case(which-6, at-5) nmod:at(has-10, which-6) nmod:poss(Friend-9, my-7) compound(Friend-9, hon.-8) nsubj(has-10, Friend-9) acl:relcl(matters-4, has-10) det(right-12, a-11) dobj(has-10, right-12) mark(look-14, to-13) acl(right-12, look-14) mark(ensure-16, to-15) xcomp(look-14, ensure-16) mark(used-21, that-17) det(funds-19, the-18) nsubjpass(used-21, funds-19) auxpass(used-21, are-20) ccomp(ensure-16, used-21) case(interests-25, in-22) det(interests-25, the-23) amod(interests-25, best-24) nmod:in(used-21, interests-25) punct(matters-4, .-26)",0,0,0,"root(ROOT, matters) advmod(matters, Srely) nsbj(matters, those) cop(matters, are) case(which, at) nmod:at(has, which) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(has, Friend) acl:relcl(matters, has) det(right, a) dobj(has, right) mark(look, to) acl(right, look) mark(ensre, to) xcomp(look, ensre) mark(sed, that) det(fnds, the) nsbjpass(sed, fnds) axpass(sed, are) ccomp(ensre, sed) case(interests, in) det(interests, the) amod(interests, best) nmod:in(sed, interests) pnct(matters, .)","root(,NNS) advmod(NNS,RB) nsbj(NNS,DT) cop(NNS,VBP) case(WDT,IN) nmod:at(VBZ,WDT) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) acl:relcl(NNS,VBZ) det(NN,DT) dobj(VBZ,NN) mark(VB,TO) acl(NN,VB) mark(VB,TO) xcomp(VB,VB) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(VB,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJS) nmod:in(VBN,NNS) pnct(NNS,NNS)","[matters, right, my, has, which, Friend]","[matters, right, my, has, which, Friend]",5,"[matters, right, my, has, which, Friend]","[matters, right, my, has, which, Friend]",NNS_matters JJ_right PRP$_my VBZ_has WDT_which NNP_Friend ,"[matters, right, my, has, which, Friend]","[matters, right, my, has, which, Friend]",NNS_matters JJ_right PRP$_my VBZ_has WDT_which NNP_Friend ,"[matters, right, my, has, which, Friend]",NNS_matters JJ_right PRP$_my VBZ_has WDT_which NNP_Friend ,"[matters, right, my, has, which, Friend]",NNS_matters JJ_right PRP$_my VBZ_has WDT_which NNP_Friend ,-3,0,1,1,1,1,1,1,1,1
I hope that in this matter I have the support of the whole House.,IPRP hopeVBP thatIN inIN thisDT matterNN IPRP haveVBP theDT supportNN ofIN theDT wholeJJ HouseNNP ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(have-8, that-3) case(matter-6, in-4) det(matter-6, this-5) nmod:in(have-8, matter-6) nsubj(have-8, I-7) ccomp(hope-2, have-8) det(support-10, the-9) dobj(have-8, support-10) case(House-14, of-11) det(House-14, the-12) amod(House-14, whole-13) nmod:of(support-10, House-14) punct(hope-2, .-15)",0,1,0,"root(ROOT, hope) nsbj(hope, I) mark(have, that) case(matter, in) det(matter, this) nmod:in(have, matter) nsbj(have, I) ccomp(hope, have) det(spport, the) dobj(have, spport) case(Hose, of) det(Hose, the) amod(Hose, whole) nmod:of(spport, Hose) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VBP,IN) case(NN,IN) det(NN,DT) nmod:in(VBP,NN) nsbj(VBP,PRP) ccomp(VBP,VBP) det(NN,DT) dobj(VBP,NN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NN,NNP) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It would be improper for me not to wish to see how these funds are distributed and the basis on which the allocation is made.,ItPRP wouldMD beVB improperJJ forIN mePRP notRB toTO wishVB toTO seeVB howWRB theseDT fundsNNS areVBP distributedVBN andCC theDT basisNN onIN whichWDT theDT allocationNN isVBZ madeVBN ,"root(ROOT-0, improper-4) nsubj(improper-4, It-1) aux(improper-4, would-2) cop(improper-4, be-3) case(me-6, for-5) nmod:for(improper-4, me-6) neg(wish-9, not-7) mark(wish-9, to-8) xcomp(improper-4, wish-9) mark(see-11, to-10) xcomp(wish-9, see-11) advmod(distributed-16, how-12) det(funds-14, these-13) nsubjpass(distributed-16, funds-14) auxpass(distributed-16, are-15) ccomp(see-11, distributed-16) cc(distributed-16, and-17) det(basis-19, the-18) ccomp(see-11, basis-19) conj:and(distributed-16, basis-19) case(which-21, on-20) nmod:on(made-25, which-21) det(allocation-23, the-22) nsubjpass(made-25, allocation-23) auxpass(made-25, is-24) acl:relcl(basis-19, made-25) punct(improper-4, .-26)",0,0,0,"root(ROOT, improper) nsbj(improper, It) ax(improper, wold) cop(improper, be) case(me, for) nmod:for(improper, me) neg(wish, not) mark(wish, to) xcomp(improper, wish) mark(see, to) xcomp(wish, see) advmod(distribted, how) det(fnds, these) nsbjpass(distribted, fnds) axpass(distribted, are) ccomp(see, distribted) cc(distribted, and) det(basis, the) ccomp(see, basis) conj:and(distribted, basis) case(which, on) nmod:on(made, which) det(allocation, the) nsbjpass(made, allocation) axpass(made, is) acl:relcl(basis, made) pnct(improper, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) case(PRP,IN) nmod:for(JJ,PRP) neg(VB,RB) mark(VB,TO) xcomp(JJ,VB) mark(VB,TO) xcomp(VB,VB) advmod(VBN,WRB) det(NNS,DT) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(VB,VBN) cc(VBN,CC) det(NN,DT) ccomp(VB,NN) conj:and(VBN,NN) case(WDT,IN) nmod:on(VBN,WDT) det(NN,DT) nsbjpass(VBN,NN) axpass(VBN,VBZ) acl:relcl(NN,VBN) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
"It is important that if people do not want to damage this marvellous movement   [HON. MEMBERS: ""Oh.""]",ItPRP isVBZ importantJJ thatIN ifIN peopleNNS doVBP notRB wantVB toTO damageVB thisDT marvellousJJ movementNN [NNP HONNNP MEMBERSNNP :: ```` OhUH '''' ]NN ,"root(ROOT-0, important-3) nsubj(important-3, It-1) cop(important-3, is-2) dep(important-3, that-4) mark(want-9, if-5) nsubj(want-9, people-6) aux(want-9, do-7) neg(want-9, not-8) dep(that-4, want-9) mark(damage-11, to-10) xcomp(want-9, damage-11) det(movement-14, this-12) amod(movement-14, marvellous-13) dobj(damage-11, movement-14) punct(MEMBERS-17, -LSB--15) compound(MEMBERS-17, HON.-16) dep(want-9, MEMBERS-17) punct(MEMBERS-17, :-18) punct(MEMBERS-17, ``-19) dep(MEMBERS-17, Oh-20) punct(MEMBERS-17, .-21) punct(MEMBERS-17, ''-22) punct(MEMBERS-17, -RSB--23)",0,0,0,"root(ROOT, important) nsbj(important, It) cop(important, is) dep(important, that) mark(want, if) nsbj(want, people) ax(want, do) neg(want, not) dep(that, want) mark(damage, to) xcomp(want, damage) det(movement, this) amod(movement, marvellos) dobj(damage, movement) pnct(MEMBERS, ) compond(MEMBERS, HON.) dep(want, MEMBERS) pnct(MEMBERS, :) pnct(MEMBERS, ``) dep(MEMBERS, Oh) pnct(MEMBERS, .) ""pnct(MEMBERS, )"", pnct(MEMBERS, )","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) dep(JJ,IN) mark(VB,IN) nsbj(VB,NNS) ax(VB,VBP) neg(VB,RB) dep(IN,VB) mark(VB,TO) xcomp(VB,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(NNP,) compond(NNP,NNP) dep(VB,NNP) pnct(NNP,:) pnct(NNP,``) dep(NNP,UH) pnct(NNP,NNP) ""pnct(NNP,)"", pnct(NNP,)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have said so a number of times.,IPRP haveVBP saidVBD soRB aDT numberNN ofIN timesNNS ,"root(ROOT-0, said-3) nsubj(said-3, I-1) aux(said-3, have-2) dep(said-3, so-4) det(number-6, a-5) dep(so-4, number-6) case(times-8, of-7) nmod:of(number-6, times-8) punct(said-3, .-9)",0,0,0,"root(ROOT, said) nsbj(said, I) ax(said, have) dep(said, so) det(nmber, a) dep(so, nmber) case(times, of) nmod:of(nmber, times) pnct(said, .)","root(,VBD) nsbj(VBD,PRP) ax(VBD,VBP) dep(VBD,RB) det(NN,DT) dep(RB,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBD,VBD)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If they do not want to damage it they should differentiate carefully between the funding of the citizens advice bureaux generally  which is done by local government  and the quality of work that they do  and the funding of the national association  a professional servicing body  which is funded by the Government.,IfIN theyPRP doVBP notRB wantVB toTO damageVB itPRP theyPRP shouldMD differentiateVB carefullyRB betweenIN theDT fundingNN ofIN theDT citizensNNS adviceNN bureauxNN generallyRB whichWDT isVBZ doneVBN byIN localJJ governmentNN andCC theDT qualityNN ofIN workNN thatIN theyPRP doVBP andCC theDT fundingNN ofIN theDT nationalJJ associationNN aDT professionalJJ servicingNN bodyNN whichWDT isVBZ fundedVBN byIN theDT GovernmentNNP ,"root(ROOT-0, want-5) mark(want-5, If-1) nsubj(want-5, they-2) aux(want-5, do-3) neg(want-5, not-4) mark(damage-7, to-6) xcomp(want-5, damage-7) dobj(differentiate-11, it-8) nsubj(differentiate-11, they-9) aux(differentiate-11, should-10) ccomp(damage-7, differentiate-11) advmod(differentiate-11, carefully-12) case(funding-15, between-13) det(funding-15, the-14) nmod:between(differentiate-11, funding-15) case(advice-19, of-16) det(advice-19, the-17) compound(advice-19, citizens-18) nmod:of(funding-15, advice-19) dep(advice-19, bureaux-20) advmod(done-25, generally-21) punct(done-25, ,-22) nsubjpass(done-25, which-23) auxpass(done-25, is-24) acl(bureaux-20, done-25) case(government-28, by-26) amod(government-28, local-27) nmod:agent(done-25, government-28) punct(want-5, ,-29) cc(want-5, and-30) det(quality-32, the-31) conj:and(want-5, quality-32) case(work-34, of-33) nmod:of(quality-32, work-34) dobj(do-37, that-35) nsubj(do-37, they-36) acl:relcl(quality-32, do-37) punct(quality-32, ,-38) cc(quality-32, and-39) det(funding-41, the-40) conj:and(want-5, funding-41) conj:and(quality-32, funding-41) case(association-45, of-42) det(association-45, the-43) amod(association-45, national-44) nmod:of(funding-41, association-45) punct(association-45, ,-46) det(body-50, a-47) amod(body-50, professional-48) compound(body-50, servicing-49) appos(association-45, body-50) punct(association-45, ,-51) nsubjpass(funded-54, which-52) auxpass(funded-54, is-53) acl:relcl(association-45, funded-54) case(Government-57, by-55) det(Government-57, the-56) nmod:agent(funded-54, Government-57) punct(want-5, .-58)",0,0,0,"root(ROOT, want) mark(want, If) nsbj(want, they) ax(want, do) neg(want, not) mark(damage, to) xcomp(want, damage) dobj(differentiate, it) nsbj(differentiate, they) ax(differentiate, shold) ccomp(damage, differentiate) advmod(differentiate, careflly) case(fnding, between) det(fnding, the) nmod:between(differentiate, fnding) case(advice, of) det(advice, the) compond(advice, citizens) nmod:of(fnding, advice) dep(advice, breax) advmod(done, generally) pnct(done, ,) nsbjpass(done, which) axpass(done, is) acl(breax, done) case(government, by) amod(government, local) nmod:agent(done, government) pnct(want, ,) cc(want, and) det(qality, the) conj:and(want, qality) case(work, of) nmod:of(qality, work) dobj(do, that) nsbj(do, they) acl:relcl(qality, do) pnct(qality, ,) cc(qality, and) det(fnding, the) conj:and(want, fnding) conj:and(qality, fnding) case(association, of) det(association, the) amod(association, national) nmod:of(fnding, association) pnct(association, ,) det(body, a) amod(body, professional) compond(body, servicing) appos(association, body) pnct(association, ,) nsbjpass(fnded, which) axpass(fnded, is) acl:relcl(association, fnded) case(Government, by) det(Government, the) nmod:agent(fnded, Government) pnct(want, .)","root(,VB) mark(VB,IN) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) mark(VB,TO) xcomp(VB,VB) dobj(VB,PRP) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) advmod(VB,RB) case(NN,IN) det(NN,DT) nmod:between(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NNS) nmod:of(NN,NN) dep(NN,NN) advmod(VBN,RB) pnct(VBN,VBN) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl(NN,VBN) case(NN,IN) amod(NN,JJ) nmod:agent(VBN,NN) pnct(VB,VB) cc(VB,CC) det(NN,DT) conj:and(VB,NN) case(NN,IN) nmod:of(NN,NN) VBPbj(VBP,IN) nsbj(VBP,PRP) acl:relcl(NN,VBP) pnct(NN,NN) cc(NN,CC) det(NN,DT) conj:and(VB,NN) conj:and(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN) det(NN,DT) amod(NN,JJ) compond(NN,NN) appos(NN,NN) pnct(NN,NN) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl:relcl(NN,VBN) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) pnct(VB,VB)","[which, Government, association, funded]","[which, Government, association, funded]",6,"[which, Government, association, funded]","[which, Government, association, funded]",WDT_which NNP_Government NN_association VBN_funded ,"[which, Government, association, funded]","[which, Government, association, funded]",WDT_which NNP_Government NN_association VBN_funded ,"[which, Government, association, funded]",WDT_which NNP_Government NN_association VBN_funded ,"[which, Government, association, funded]",WDT_which NNP_Government NN_association VBN_funded ,-3,0,2,0,0,0,0,0,0,0
While joining my hon. Friend in paying tribute to the work that the CAB does locally throughout the country  through thousands of volunteers  may I ask him to confirm that the review will be truly independent and will report at an early date?,WhileIN joiningVBG myPRP$ honNN FriendNNP inIN payingVBG tributeNN toTO theDT workNN thatIN theDT CABNNP doesVBZ locallyRB throughoutIN theDT countryNN throughIN thousandsNNS ofIN volunteersNNS mayMD IPRP askVB himPRP toTO confirmVB thatIN theDT reviewNN willMD beVB trulyRB independentJJ andCC willMD reportVB atIN anDT earlyJJ dateNN ,"root(ROOT-0, joining-2) mark(joining-2, While-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) dobj(joining-2, Friend-5) mark(paying-7, in-6) advcl(joining-2, paying-7) dobj(paying-7, tribute-8) case(work-11, to-9) det(work-11, the-10) nmod:to(paying-7, work-11) mark(country-19, that-12) det(CAB-14, the-13) nsubj(country-19, CAB-14) aux(country-19, does-15) advmod(country-19, locally-16) case(country-19, throughout-17) det(country-19, the-18) ccomp(work-11, country-19) punct(country-19, ,-20) case(thousands-22, through-21) nmod:through(country-19, thousands-22) case(volunteers-24, of-23) nmod:of(thousands-22, volunteers-24) punct(country-19, ,-25) aux(ask-28, may-26) nsubj(ask-28, I-27) nsubj(report-41, I-27) dep(country-19, ask-28) dobj(ask-28, him-29) mark(confirm-31, to-30) xcomp(ask-28, confirm-31) mark(independent-38, that-32) det(review-34, the-33) nsubj(independent-38, review-34) aux(independent-38, will-35) cop(independent-38, be-36) advmod(independent-38, truly-37) ccomp(confirm-31, independent-38) cc(ask-28, and-39) aux(report-41, will-40) dep(country-19, report-41) conj:and(ask-28, report-41) case(date-45, at-42) det(date-45, an-43) amod(date-45, early-44) nmod:at(report-41, date-45) punct(joining-2, ?-46)",0,0,0,"root(ROOT, joining) mark(joining, While) nmod:poss(Friend, my) compond(Friend, hon.) dobj(joining, Friend) mark(paying, in) advcl(joining, paying) dobj(paying, tribte) case(work, to) det(work, the) nmod:to(paying, work) mark(contry, that) det(CAB, the) nsbj(contry, CAB) ax(contry, does) advmod(contry, locally) case(contry, throghot) det(contry, the) ccomp(work, contry) pnct(contry, ,) case(thosands, throgh) nmod:throgh(contry, thosands) case(volnteers, of) nmod:of(thosands, volnteers) pnct(contry, ,) ax(ask, may) nsbj(ask, I) nsbj(report, I) dep(contry, ask) dobj(ask, him) mark(confirm, to) xcomp(ask, confirm) mark(independent, that) det(review, the) nsbj(independent, review) ax(independent, will) cop(independent, be) advmod(independent, trly) ccomp(confirm, independent) cc(ask, and) ax(report, will) dep(contry, report) conj:and(ask, report) case(date, at) det(date, an) amod(date, early) nmod:at(report, date) pnct(joining, ?)","root(,VBG) mark(VBG,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) dobj(VBG,NNP) mark(VBG,IN) advcl(VBG,VBG) dobj(VBG,NN) case(NN,TO) det(NN,DT) nmod:to(VBG,NN) mark(NN,IN) det(NNP,DT) nsbj(NN,NNP) ax(NN,VBZ) advmod(NN,RB) case(NN,IN) det(NN,DT) ccomp(NN,NN) pnct(NN,NN) case(NNS,IN) nmod:throgh(NN,NNS) case(NNS,IN) nmod:of(NNS,NNS) pnct(NN,NN) ax(VB,MD) nsbj(VB,PRP) nsbj(VB,PRP) dep(NN,VB) dobj(VB,PRP) mark(VB,TO) xcomp(VB,VB) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) ccomp(VB,JJ) cc(VB,CC) ax(VB,MD) dep(NN,VB) conj:and(VB,VB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:at(VB,NN) pnct(VBG,VBG)","[ROOT, Friend, joining, my, paying]","[ROOT, Friend, joining, my, paying]",9,"[ROOT, Friend, joining, my, paying]","[ROOT, Friend, joining, my, paying]",NNP_Friend VBG_joining PRP$_my VBG_paying ,"[ROOT, Friend, joining, my, paying]","[ROOT, Friend, joining, my, paying]",NNP_Friend VBG_joining PRP$_my VBG_paying ,"[ROOT, Friend, joining, my, paying]",NNP_Friend VBG_joining PRP$_my VBG_paying ,"[ROOT, Friend, joining, my, paying]",NNP_Friend VBG_joining PRP$_my VBG_paying ,-3,0,1,0,0,0,0,0,0,0
I urge other hon. Members to follow the line that my hon. Friend has just put forward.,IPRP urgeVBP otherJJ honJJ MembersNNS toTO followVB theDT lineNN thatIN myPRP$ honNN FriendNNP hasVBZ justRB putVBN forwardRB ,"root(ROOT-0, urge-2) nsubj(urge-2, I-1) amod(Members-5, other-3) compound(Members-5, hon.-4) dobj(urge-2, Members-5) mark(follow-7, to-6) xcomp(urge-2, follow-7) det(line-9, the-8) dobj(follow-7, line-9) dobj(put-16, that-10) nmod:poss(Friend-13, my-11) compound(Friend-13, hon.-12) nsubj(put-16, Friend-13) aux(put-16, has-14) advmod(put-16, just-15) acl:relcl(line-9, put-16) compound:prt(put-16, forward-17) punct(urge-2, .-18)",0,1,0,"root(ROOT, rge) nsbj(rge, I) amod(Members, other) compond(Members, hon.) dobj(rge, Members) mark(follow, to) xcomp(rge, follow) det(line, the) dobj(follow, line) dobj(pt, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(pt, Friend) ax(pt, has) advmod(pt, jst) acl:relcl(line, pt) compond:prt(pt, forward) pnct(rge, .)","root(,VBP) nsbj(VBP,PRP) amod(NNS,JJ) compond(NNS,NNS) dobj(VBP,NNS) mark(VB,TO) xcomp(VBP,VB) det(NN,DT) dobj(VB,NN) dobj(VBN,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) advmod(VBN,RB) acl:relcl(NN,VBN) compond:prt(VBN,RB) pnct(VBP,VBP)","[Friend, that, just, my, line, put]","[Friend, that, just, my, line, put]",10,[ ],[ ],NNP_Friend IN_that RB_just PRP$_my NN_line VBN_put ,"[Friend, that, just, my, line, put]","[Friend, that, just, my, line, put]",NNP_Friend IN_that RB_just PRP$_my NN_line VBN_put ,"[Friend, that, just, my, line, put]",NNP_Friend IN_that RB_just PRP$_my NN_line VBN_put ,"[Friend, that, just, my, line, put]",NNP_Friend IN_that RB_just PRP$_my NN_line VBN_put ,-3,0,2,0,0,0,0,0,0,0
It is vital that these matters are kept in perspective.,ItPRP isVBZ vitalJJ thatIN theseDT mattersNNS areVBP keptVBN inIN perspectiveNN ,"root(ROOT-0, vital-3) nsubj(vital-3, It-1) cop(vital-3, is-2) mark(kept-8, that-4) det(matters-6, these-5) nsubjpass(kept-8, matters-6) auxpass(kept-8, are-7) ccomp(vital-3, kept-8) case(perspective-10, in-9) nmod:in(kept-8, perspective-10) punct(vital-3, .-11)",0,0,0,"root(ROOT, vital) nsbj(vital, It) cop(vital, is) mark(kept, that) det(matters, these) nsbjpass(kept, matters) axpass(kept, are) ccomp(vital, kept) case(perspective, in) nmod:in(kept, perspective) pnct(vital, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(JJ,VBN) case(NN,IN) nmod:in(VBN,NN) pnct(JJ,JJ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
"As the Minister responsible for funding NACAB  I have agreed with it the need for a review  and that is now being progressed as rapidly as possible  and I stress ""rapidly"".",AsIN theDT MinisterNNP responsibleJJ forIN fundingVBG NACABNNP IPRP haveVBP agreedVBN withIN itPRP theDT needNN forIN aDT reviewNN andCC thatDT isVBZ nowRB beingVBG progressedVBN asRB rapidlyRB asIN possibleJJ andCC IPRP stressVBP ```` rapidlyRB '''' ,"root(ROOT-0, agreed-11) mark(responsible-4, As-1) det(Minister-3, the-2) nsubj(responsible-4, Minister-3) advcl(agreed-11, responsible-4) mark(funding-6, for-5) advcl(responsible-4, funding-6) dobj(funding-6, NACAB-7) punct(agreed-11, ,-8) nsubj(agreed-11, I-9) aux(agreed-11, have-10) case(it-13, with-12) nmod:with(agreed-11, it-13) det(need-15, the-14) dep(it-13, need-15) case(review-18, for-16) det(review-18, a-17) nmod:for(need-15, review-18) punct(need-15, ,-19) cc(need-15, and-20) nsubjpass(progressed-25, that-21) aux(progressed-25, is-22) advmod(progressed-25, now-23) auxpass(progressed-25, being-24) dep(it-13, progressed-25) conj:and(need-15, progressed-25) case(rapidly-27, as-26) advmod(progressed-25, rapidly-27) case(possible-29, as-28) advcl:as(rapidly-27, possible-29) punct(agreed-11, ,-30) cc(agreed-11, and-31) nsubj(stress-33, I-32) conj:and(agreed-11, stress-33) punct(stress-33, ``-34) advmod(stress-33, rapidly-35) punct(stress-33, ''-36) punct(agreed-11, .-37)",0,0,0,"root(ROOT, agreed) mark(responsible, As) det(Minister, the) nsbj(responsible, Minister) advcl(agreed, responsible) mark(fnding, for) advcl(responsible, fnding) dobj(fnding, NACAB) pnct(agreed, ,) nsbj(agreed, I) ax(agreed, have) case(it, with) nmod:with(agreed, it) det(need, the) dep(it, need) case(review, for) det(review, a) nmod:for(need, review) pnct(need, ,) cc(need, and) nsbjpass(progressed, that) ax(progressed, is) advmod(progressed, now) axpass(progressed, being) dep(it, progressed) conj:and(need, progressed) case(rapidly, as) advmod(progressed, rapidly) case(possible, as) advcl:as(rapidly, possible) pnct(agreed, ,) cc(agreed, and) nsbj(stress, I) conj:and(agreed, stress) pnct(stress, ``) advmod(stress, rapidly) ""pnct(stress, )"", pnct(agreed, .)","root(,VBN) mark(JJ,IN) det(NNP,DT) nsbj(JJ,NNP) advcl(VBN,JJ) mark(VBG,IN) advcl(JJ,VBG) dobj(VBG,NNP) pnct(VBN,VBN) nsbj(VBN,PRP) ax(VBN,VBP) case(PRP,IN) nmod:with(VBN,PRP) det(NN,DT) dep(PRP,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) pnct(NN,NN) cc(NN,CC) nsbjpass(VBN,DT) ax(VBN,VBZ) advmod(VBN,RB) axpass(VBN,VBG) dep(PRP,VBN) conj:and(NN,VBN) case(RB,IN) advmod(VBN,RB) case(JJ,IN) advcl:as(RB,JJ) pnct(VBN,VBN) cc(VBN,CC) nsbj(VBP,PRP) conj:and(VBN,VBP) pnct(VBP,``) advmod(VBP,RB) ""pnct(VBP,)"", pnct(VBN,VBN)","[funding, responsible, agreed, Minister]","[funding, responsible, agreed, Minister]",10,"[funding, responsible, agreed, Minister]","[funding, responsible, agreed, Minister]",NN_funding JJ_responsible VBD_agreed NNP_Minister ,"[funding, responsible, agreed, Minister]","[funding, responsible, agreed, Minister]",NN_funding JJ_responsible VBD_agreed NNP_Minister ,"[funding, responsible, agreed, Minister]",NN_funding JJ_responsible VBD_agreed NNP_Minister ,"[funding, responsible, agreed, Minister]",NN_funding JJ_responsible VBD_agreed NNP_Minister ,-3,0,2,0,0,0,0,0,0,0
asked the Chancellor of the Exchequer whether the forecast contained in the Budget Statement and Financial Review 1983 84 of a surplus on current account balance of payments of £1½ billion remains his best estimate of the likely outturn of this item.,askedVBN theDT ChancellorNNP ofIN theDT ExchequerNNP whetherIN theDT forecastNN containedVBN inIN theDT BudgetNNP StatementNNP andCC FinancialNNP ReviewNNP 1983CD 84CD ofIN aDT surplusNN onIN currentJJ accountNN balanceNN ofIN paymentsNNS ofIN £1½JJ billionCD remainsVBZ hisPRP$ bestJJS estimateNN ofIN theDT likelyJJ outturnNN ofIN thisDT itemNN ,"root(ROOT-0, remains-34) csubj(remains-34, asked-1) det(Chancellor-3, the-2) dobj(asked-1, Chancellor-3) case(Exchequer-6, of-4) det(Exchequer-6, the-5) nmod:of(Chancellor-3, Exchequer-6) mark(contained-10, whether-7) det(forecast-9, the-8) nsubj(contained-10, forecast-9) ccomp(asked-1, contained-10) case(Statement-14, in-11) det(Statement-14, the-12) compound(Statement-14, Budget-13) nmod:in(contained-10, Statement-14) cc(Statement-14, and-15) compound(Review-17, Financial-16) nmod:in(contained-10, Review-17) conj:and(Statement-14, Review-17) compound(84-19, 1983-18) nummod(Review-17, 84-19) case(surplus-22, of-20) det(surplus-22, a-21) nmod:of(Statement-14, surplus-22) case(balance-26, on-23) amod(balance-26, current-24) compound(balance-26, account-25) nmod:on(surplus-22, balance-26) case(payments-28, of-27) nmod:of(balance-26, payments-28) case(billion-33, of-29) compound(billion-33, #-30) compound(1/2-32, 1-31) compound(billion-33, 1/2-32) nmod:of(payments-28, billion-33) nmod:poss(estimate-37, his-35) amod(estimate-37, best-36) dobj(remains-34, estimate-37) case(outturn-41, of-38) det(outturn-41, the-39) amod(outturn-41, likely-40) nmod:of(estimate-37, outturn-41) case(item-44, of-42) det(item-44, this-43) nmod:of(outturn-41, item-44) punct(remains-34, .-45)",0,0,0,"root(ROOT, remains) csbj(remains, asked) det(Chancellor, the) dobj(asked, Chancellor) case(Excheqer, of) det(Excheqer, the) nmod:of(Chancellor, Excheqer) mark(contained, whether) det(forecast, the) nsbj(contained, forecast) ccomp(asked, contained) case(Statement, in) det(Statement, the) compond(Statement, Bdget) nmod:in(contained, Statement) cc(Statement, and) compond(Review, Financial) nmod:in(contained, Review) conj:and(Statement, Review) compond(84, 1983) nmmod(Review, 84) case(srpls, of) det(srpls, a) nmod:of(Statement, srpls) case(balance, on) amod(balance, crrent) compond(balance, accont) nmod:on(srpls, balance) case(payments, of) nmod:of(balance, payments) case(billion, of) compond(billion, #) compond(1/2, 1) compond(billion, 1/2) nmod:of(payments, billion) nmod:poss(estimate, his) amod(estimate, best) dobj(remains, estimate) case(ottrn, of) det(ottrn, the) amod(ottrn, likely) nmod:of(estimate, ottrn) case(item, of) det(item, this) nmod:of(ottrn, item) pnct(remains, .)","root(,VBZ) csbj(VBZ,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) mark(VBN,IN) det(NN,DT) nsbj(VBN,NN) ccomp(VBN,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(VBN,NNP) cc(NNP,CC) compond(NNP,NNP) nmod:in(VBN,NNP) conj:and(NNP,NNP) compond(CD,CD) nmmod(NNP,CD) case(NN,IN) det(NN,DT) nmod:of(NNP,NN) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:on(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(CD,IN) compond(CD,CD) compond(CD,CD) compond(CD,CD) nmod:of(NNS,CD) nmod:poss(NN,PRP$) amod(NN,JJS) dobj(VBZ,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBZ,VBZ)","[asked, contained, Chancellor, Exchequer, remains]","[contained, Exchequer, remains, his, Chancellor, asked, outturn, estimate, best]",1,"[contained, Exchequer, remains, his, Chancellor, asked, outturn, estimate, best]","[contained, Exchequer, remains, his, Chancellor, asked, outturn, estimate, best]",VBN_contained NNP_Exchequer VBZ_remains PRP$_his NNP_Chancellor VBN_asked NN_outturn NN_estimate JJS_best ,"[contained, Exchequer, remains, his, Chancellor, asked, outturn, estimate, best]","[contained, Exchequer, remains, his, Chancellor, asked, outturn, estimate, best]",VBN_contained NNP_Exchequer VBZ_remains PRP$_his NNP_Chancellor VBN_asked NN_outturn NN_estimate JJS_best ,"[contained, Exchequer, remains, his, Chancellor, asked, outturn, estimate, best]",VBN_contained NNP_Exchequer VBZ_remains PRP$_his NNP_Chancellor VBN_asked NN_outturn NN_estimate JJS_best ,"[contained, Exchequer, remains, his, Chancellor, asked, outturn, estimate, best]",VBN_contained NNP_Exchequer VBZ_remains PRP$_his NNP_Chancellor VBN_asked NN_outturn NN_estimate JJS_best ,-3,0,2,1,1,1,2,0,1,2
A new forecast will be given in my right hon. Friend's autumn statement.,ADT newJJ forecastNN willMD beVB givenVBN inIN myPRP$ rightJJ honNN FriendNNP 'sPOS autumnNN statementNN ,"root(ROOT-0, given-6) det(forecast-3, A-1) amod(forecast-3, new-2) nsubjpass(given-6, forecast-3) aux(given-6, will-4) auxpass(given-6, be-5) case(statement-14, in-7) nmod:poss(Friend-11, my-8) amod(Friend-11, right-9) compound(Friend-11, hon.-10) nmod:poss(statement-14, Friend-11) case(Friend-11, 's-12) compound(statement-14, autumn-13) nmod:in(given-6, statement-14) punct(given-6, .-15)",0,1,1,"root(ROOT, given) det(forecast, A) amod(forecast, new) nsbjpass(given, forecast) ax(given, will) axpass(given, be) case(statement, in) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:poss(statement, Friend) ""case(Friend, s)"", compond(statement, atmn) nmod:in(given, statement) pnct(given, .)","root(,VBN) det(NN,DT) amod(NN,JJ) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) case(NN,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,NN) nmod:in(VBN,NN) pnct(VBN,VBN)","[my, Friend, right, statement, given]","[my, Friend, statement, given]",2,"[my, Friend, statement, given]","[my, Friend, statement, given]",PRP$_my NNP_Friend NN_statement VBN_given ,"[my, Friend, statement, given]","[my, Friend, statement, given]",PRP$_my NNP_Friend NN_statement VBN_given ,"[my, Friend, statement, given]",PRP$_my NNP_Friend NN_statement VBN_given ,"[my, Friend, statement, given]",PRP$_my NNP_Friend NN_statement VBN_given ,-3,0,1,0,0,0,0,0,0,0
Is it not a disgrace that Britain's manufacturing trade is running at a deficit of £4 billion?,IsVBZ itPRP notRB aDT disgraceNN thatIN BritainNNP 'sPOS manufacturingNN tradeNN isVBZ runningVBG atIN aDT deficitNN ofIN £4NNP billionCD ,"root(ROOT-0, disgrace-5) cop(disgrace-5, Is-1) nsubj(disgrace-5, it-2) neg(disgrace-5, not-3) det(disgrace-5, a-4) mark(running-12, that-6) nmod:poss(trade-10, Britain-7) case(Britain-7, 's-8) compound(trade-10, manufacturing-9) nsubj(running-12, trade-10) aux(running-12, is-11) ccomp(disgrace-5, running-12) case(deficit-15, at-13) det(deficit-15, a-14) nmod:at(running-12, deficit-15) case(billion-19, of-16) compound(billion-19, #-17) compound(billion-19, 4-18) nmod:of(deficit-15, billion-19) punct(disgrace-5, ?-20)",0,0,0,"root(ROOT, disgrace) cop(disgrace, Is) nsbj(disgrace, it) neg(disgrace, not) det(disgrace, a) mark(rnning, that) nmod:poss(trade, Britain) ""case(Britain, s)"", compond(trade, manfactring) nsbj(rnning, trade) ax(rnning, is) ccomp(disgrace, rnning) case(deficit, at) det(deficit, a) nmod:at(rnning, deficit) case(billion, of) compond(billion, #) compond(billion, 4) nmod:of(deficit, billion) pnct(disgrace, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) mark(VBG,IN) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,NN) nsbj(VBG,NN) ax(VBG,VBZ) ccomp(NN,VBG) case(NN,IN) det(NN,DT) nmod:at(VBG,NN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NN,CD) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the Minister agree that that is the worst trading figure since Tudor times?,DoesVBZ theDT MinisterNNP agreeVBP thatIN thatDT isVBZ theDT worstJJS tradingNN figureNN sinceIN TudorNNP timesNNS ,"root(ROOT-0, agree-4) aux(agree-4, Does-1) det(Minister-3, the-2) nsubj(agree-4, Minister-3) mark(figure-11, that-5) nsubj(figure-11, that-6) cop(figure-11, is-7) det(figure-11, the-8) amod(figure-11, worst-9) compound(figure-11, trading-10) ccomp(agree-4, figure-11) case(times-14, since-12) compound(times-14, Tudor-13) nmod:since(figure-11, times-14) punct(agree-4, ?-15)",0,0,0,"root(ROOT, agree) ax(agree, Does) det(Minister, the) nsbj(agree, Minister) mark(figre, that) nsbj(figre, that) cop(figre, is) det(figre, the) amod(figre, worst) compond(figre, trading) ccomp(agree, figre) case(times, since) compond(times, Tdor) nmod:since(figre, times) pnct(agree, ?)","root(,VBP) ax(VBP,VBZ) det(NNP,DT) nsbj(VBP,NNP) mark(NN,DT) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJS) compond(NN,NN) ccomp(VBP,NN) case(NNS,IN) compond(NNS,NNP) nmod:since(NN,NNS) pnct(VBP,VBP)","[ROOT, figure, agree, Minister]","[ROOT, figure, agree, Minister]",3,[ ],[ ],NN_figure VB_agree NNP_Minister ,"[ROOT, figure, agree, Minister]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is extraordinarly difficult to expect a word of congratulation for Britain's workers on the recently announced September surplus of £270 million.,ItPRP isVBZ extraordinarlyRB difficultJJ toTO expectVB aDT wordNN ofIN congratulationNN forIN BritainNNP 'sPOS workersNNS onIN theDT recentlyRB announcedVBD SeptemberNNP surplusNN ofIN £270CD millionCD ,"root(ROOT-0, difficult-4) nsubj(difficult-4, It-1) cop(difficult-4, is-2) advmod(difficult-4, extraordinarly-3) mark(expect-6, to-5) xcomp(difficult-4, expect-6) det(word-8, a-7) dobj(expect-6, word-8) case(congratulation-10, of-9) nmod:of(word-8, congratulation-10) case(workers-14, for-11) nmod:poss(workers-14, Britain-12) case(Britain-12, 's-13) nmod:for(word-8, workers-14) case(surplus-20, on-15) det(surplus-20, the-16) advmod(announced-18, recently-17) amod(surplus-20, announced-18) compound(surplus-20, September-19) nmod:on(workers-14, surplus-20) case(million-24, of-21) compound(million-24, #-22) compound(million-24, 270-23) nmod:of(surplus-20, million-24) punct(difficult-4, .-25)",0,0,0,"root(ROOT, difficlt) nsbj(difficlt, It) cop(difficlt, is) advmod(difficlt, extraordinarly) mark(expect, to) xcomp(difficlt, expect) det(word, a) dobj(expect, word) case(congratlation, of) nmod:of(word, congratlation) case(workers, for) nmod:poss(workers, Britain) ""case(Britain, s)"", nmod:for(word, workers) case(srpls, on) det(srpls, the) advmod(annonced, recently) amod(srpls, annonced) compond(srpls, September) nmod:on(workers, srpls) case(million, of) compond(million, #) compond(million, 270) nmod:of(srpls, million) pnct(difficlt, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) nmod:poss(NNS,NNP) case(NNP,POS) nmod:for(NN,NNS) case(NN,IN) det(NN,DT) advmod(VBD,RB) amod(NN,VBD) compond(NN,NNP) nmod:on(NNS,NN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NN,CD) pnct(JJ,JJ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I should have thought that hon. Members on both sides of the House would welcome that.,IPRP shouldMD haveVB thoughtVBN thatIN honJJ MembersNNS onIN bothDT sidesNNS ofIN theDT HouseNNP wouldMD welcomeVB thatIN ,"root(ROOT-0, thought-4) nsubj(thought-4, I-1) aux(thought-4, should-2) aux(thought-4, have-3) mark(welcome-15, that-5) compound(Members-7, hon.-6) nsubj(welcome-15, Members-7) case(sides-10, on-8) det(sides-10, both-9) nmod:on(Members-7, sides-10) case(House-13, of-11) det(House-13, the-12) nmod:of(sides-10, House-13) aux(welcome-15, would-14) ccomp(thought-4, welcome-15) dobj(welcome-15, that-16) punct(thought-4, .-17)",0,0,0,"root(ROOT, thoght) nsbj(thoght, I) ax(thoght, shold) ax(thoght, have) mark(welcome, that) compond(Members, hon.) nsbj(welcome, Members) case(sides, on) det(sides, both) nmod:on(Members, sides) case(Hose, of) det(Hose, the) nmod:of(sides, Hose) ax(welcome, wold) ccomp(thoght, welcome) dobj(welcome, that) pnct(thoght, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,MD) ax(VBN,VB) mark(VB,IN) compond(NNS,NNS) nsbj(VB,NNS) case(NNS,IN) det(NNS,DT) nmod:on(NNS,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) ax(VB,MD) ccomp(VBN,VB) dobj(VB,IN) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Opposition Members might find it helpful to know that  although manufacturing is an important part of our economy  it employs only 27 per cent.,OppositionNN MembersNNS mightMD findVB itPRP helpfulJJ toTO knowVB thatIN althoughIN manufacturingNN isVBZ anDT importantJJ partNN ofIN ourPRP$ economyNN itPRP employsVBZ onlyRB 27CD perIN centNN ,"root(ROOT-0, find-4) compound(Members-2, Opposition-1) nsubj(find-4, Members-2) aux(find-4, might-3) nsubj(helpful-6, it-5) xcomp(find-4, helpful-6) mark(know-8, to-7) xcomp(helpful-6, know-8) mark(employs-22, that-9) punct(employs-22, ,-10) mark(part-16, although-11) nsubj(part-16, manufacturing-12) cop(part-16, is-13) det(part-16, an-14) amod(part-16, important-15) advcl(employs-22, part-16) case(economy-19, of-17) nmod:poss(economy-19, our-18) nmod:of(part-16, economy-19) punct(employs-22, ,-20) nsubj(employs-22, it-21) ccomp(know-8, employs-22) advmod(27-24, only-23) dobj(employs-22, 27-24) case(cent-26, per-25) nmod:per(27-24, cent-26) punct(find-4, .-27)",0,0,0,"root(ROOT, find) compond(Members, Opposition) nsbj(find, Members) ax(find, might) nsbj(helpfl, it) xcomp(find, helpfl) mark(know, to) xcomp(helpfl, know) mark(employs, that) pnct(employs, ,) mark(part, althogh) nsbj(part, manfactring) cop(part, is) det(part, an) amod(part, important) advcl(employs, part) case(economy, of) nmod:poss(economy, or) nmod:of(part, economy) pnct(employs, ,) nsbj(employs, it) ccomp(know, employs) advmod(27, only) dobj(employs, 27) case(cent, per) nmod:per(27, cent) pnct(find, .)","root(,VB) compond(NNS,NN) nsbj(VB,NNS) ax(VB,MD) nsbj(JJ,PRP) xcomp(VB,JJ) mark(VB,TO) xcomp(JJ,VB) mark(VBZ,IN) pnct(VBZ,VBZ) mark(NN,IN) nsbj(NN,NN) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) advcl(VBZ,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(VBZ,VBZ) nsbj(VBZ,PRP) ccomp(VB,VBZ) advmod(CD,RB) dobj(VBZ,CD) case(NN,IN) nmod:per(CD,NN) pnct(VB,VB)","[find, Members]",[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the nation's work force.,ofIN theDT nationNN 'sPOS workNN forceNN ,"root(ROOT-0, force-6) case(force-6, of-1) det(nation-3, the-2) nmod:poss(force-6, nation-3) case(nation-3, 's-4) compound(force-6, work-5) punct(force-6, .-7)",0,0,1,"root(ROOT, force) case(force, of) det(nation, the) nmod:poss(force, nation) ""case(nation, s)"", compond(force, work) pnct(force, .)","root(,NN) case(NN,IN) det(NN,DT) nmod:poss(NN,NN) case(NN,POS) compond(NN,NN) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
How many jobs in manufacturing industry have been lost because of the £4 billion deficit?,HowWRB manyJJ jobsNNS inIN manufacturingNN industryNN haveVBP beenVBN lostVBN becauseIN ofIN theDT £4NNP billionCD deficitNN ,"root(ROOT-0, lost-9) advmod(many-2, How-1) amod(jobs-3, many-2) nsubjpass(lost-9, jobs-3) case(industry-6, in-4) amod(industry-6, manufacturing-5) nmod:in(jobs-3, industry-6) aux(lost-9, have-7) auxpass(lost-9, been-8) case(deficit-16, because-10) mwe(because-10, of-11) det(deficit-16, the-12) compound(billion-15, #-13) compound(billion-15, 4-14) nummod(deficit-16, billion-15) nmod:because_of(lost-9, deficit-16) punct(lost-9, ?-17)",0,0,0,"root(ROOT, lost) advmod(many, How) amod(jobs, many) nsbjpass(lost, jobs) case(indstry, in) amod(indstry, manfactring) nmod:in(jobs, indstry) ax(lost, have) axpass(lost, been) case(deficit, becase) mwe(becase, of) det(deficit, the) compond(billion, #) compond(billion, 4) nmmod(deficit, billion) nmod:becase_of(lost, deficit) pnct(lost, ?)","root(,VBN) advmod(JJ,WRB) amod(NNS,JJ) nsbjpass(VBN,NNS) case(NN,IN) amod(NN,NN) nmod:in(NNS,NN) ax(VBN,VBP) axpass(VBN,VBN) case(NN,IN) mwe(IN,IN) det(NN,DT) compond(CD,CD) compond(CD,CD) nmmod(NN,CD) nmod:becase_of(VBN,NN) pnct(VBN,VBN)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The House will be much more interested to learn that  in a changing and competitive economy  the percentage of Britain's working population employed in manufacturing industry is similar to that in West Germany and France.,TheDT HouseNNP willMD beVB muchRB moreRBR interestedJJ toTO learnVB thatIN inIN aDT changingNN andCC competitiveJJ economyNN theDT percentageNN ofIN BritainNNP 'sPOS workingVBG populationNN employedVBN inIN manufacturingNN industryNN isVBZ similarJJ toTO thatDT inIN WestNNP GermanyNNP andCC FranceNNP ,"root(ROOT-0, interested-7) det(House-2, The-1) nsubj(interested-7, House-2) aux(interested-7, will-3) cop(interested-7, be-4) advmod(more-6, much-5) advmod(interested-7, more-6) mark(learn-9, to-8) xcomp(interested-7, learn-9) mark(similar-31, that-10) punct(similar-31, ,-11) case(economy-17, in-12) det(economy-17, a-13) amod(economy-17, changing-14) cc(changing-14, and-15) conj:and(changing-14, competitive-16) amod(economy-17, competitive-16) nmod:in(similar-31, economy-17) punct(similar-31, ,-18) det(percentage-20, the-19) nsubj(similar-31, percentage-20) case(population-25, of-21) nmod:poss(population-25, Britain-22) case(Britain-22, 's-23) amod(population-25, working-24) nmod:of(percentage-20, population-25) acl(population-25, employed-26) case(industry-29, in-27) amod(industry-29, manufacturing-28) nmod:in(employed-26, industry-29) cop(similar-31, is-30) ccomp(learn-9, similar-31) case(that-33, to-32) nmod:to(similar-31, that-33) case(Germany-36, in-34) compound(Germany-36, West-35) nmod:in(that-33, Germany-36) cc(Germany-36, and-37) nmod:in(that-33, France-38) conj:and(Germany-36, France-38) punct(interested-7, .-39)",0,0,0,"root(ROOT, interested) det(Hose, The) nsbj(interested, Hose) ax(interested, will) cop(interested, be) advmod(more, mch) advmod(interested, more) mark(learn, to) xcomp(interested, learn) mark(similar, that) pnct(similar, ,) case(economy, in) det(economy, a) amod(economy, changing) cc(changing, and) conj:and(changing, competitive) amod(economy, competitive) nmod:in(similar, economy) pnct(similar, ,) det(percentage, the) nsbj(similar, percentage) case(poplation, of) nmod:poss(poplation, Britain) ""case(Britain, s)"", amod(poplation, working) nmod:of(percentage, poplation) acl(poplation, employed) case(indstry, in) amod(indstry, manfactring) nmod:in(employed, indstry) cop(similar, is) ccomp(learn, similar) case(that, to) nmod:to(similar, that) case(Germany, in) compond(Germany, West) nmod:in(that, Germany) cc(Germany, and) nmod:in(that, France) conj:and(Germany, France) pnct(interested, .)","root(,JJ) det(NNP,DT) nsbj(JJ,NNP) ax(JJ,MD) cop(JJ,VB) advmod(RBR,RB) advmod(JJ,RBR) mark(VB,TO) xcomp(JJ,VB) mark(JJ,DT) pnct(JJ,JJ) case(NN,IN) det(NN,DT) amod(NN,NN) cc(NN,CC) conj:and(NN,JJ) amod(NN,JJ) nmod:in(JJ,NN) pnct(JJ,JJ) det(NN,DT) nsbj(JJ,NN) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,VBG) nmod:of(NN,NN) acl(NN,VBN) case(NN,IN) amod(NN,NN) nmod:in(VBN,NN) cop(JJ,VBZ) ccomp(VB,JJ) case(DT,TO) nmod:to(JJ,DT) case(NNP,IN) compond(NNP,NNP) nmod:in(DT,NNP) cc(NNP,CC) nmod:in(DT,NNP) conj:and(NNP,NNP) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If we are to continue exporting successfully  as we have been doing in the past four years  is it not vital that we keep control over wage increases?,IfIN wePRP areVBP toTO continueVB exportingVBG successfullyRB asIN wePRP haveVBP beenVBN doingVBG inIN theDT pastJJ fourCD yearsNNS isVBZ itPRP notRB vitalJJ thatIN wePRP keepVBP controlNN overIN wageNN increasesNNS ,"root(ROOT-0, doing-13) mark(are-3, If-1) nsubj(are-3, we-2) advcl(doing-13, are-3) mark(continue-5, to-4) xcomp(are-3, continue-5) xcomp(continue-5, exporting-6) advmod(exporting-6, successfully-7) punct(doing-13, ,-8) mark(doing-13, as-9) nsubj(doing-13, we-10) aux(doing-13, have-11) aux(doing-13, been-12) case(years-18, in-14) det(years-18, the-15) amod(years-18, past-16) nummod(years-18, four-17) nmod:in(doing-13, years-18) punct(doing-13, ,-19) cop(vital-23, is-20) nsubj(vital-23, it-21) neg(vital-23, not-22) parataxis(doing-13, vital-23) mark(keep-26, that-24) nsubj(keep-26, we-25) ccomp(vital-23, keep-26) dobj(keep-26, control-27) case(increases-30, over-28) compound(increases-30, wage-29) nmod:over(control-27, increases-30) punct(doing-13, ?-31)",0,0,0,"root(ROOT, doing) mark(are, If) nsbj(are, we) advcl(doing, are) mark(contine, to) xcomp(are, contine) xcomp(contine, exporting) advmod(exporting, sccessflly) pnct(doing, ,) mark(doing, as) nsbj(doing, we) ax(doing, have) ax(doing, been) case(years, in) det(years, the) amod(years, past) nmmod(years, for) nmod:in(doing, years) pnct(doing, ,) cop(vital, is) nsbj(vital, it) neg(vital, not) parataxis(doing, vital) mark(keep, that) nsbj(keep, we) ccomp(vital, keep) dobj(keep, control) case(increases, over) compond(increases, wage) nmod:over(control, increases) pnct(doing, ?)","root(,VBG) mark(VBP,IN) nsbj(VBP,PRP) advcl(VBG,VBP) mark(VB,TO) xcomp(VBP,VB) xcomp(VB,VBG) advmod(VBG,RB) pnct(VBG,VBG) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBP) ax(VBG,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:in(VBG,NNS) pnct(VBG,VBG) cop(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) parataxis(VBG,JJ) mark(VBP,IN) nsbj(VBP,PRP) ccomp(JJ,VBP) dobj(VBP,NN) case(NNS,IN) compond(NNS,NN) nmod:over(NN,NNS) pnct(VBG,VBG)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Wage increases are one of the factors involved in maintaining cost competitiveness  which is essential if we are to hold our markets.,WageNN increasesNNS areVBP oneCD ofIN theDT factorsNNS involvedVBN inIN maintainingVBG costNN competitivenessNN whichWDT isVBZ essentialJJ ifIN wePRP areVBP toTO holdVB ourPRP$ marketsNNS ,"root(ROOT-0, one-4) compound(increases-2, Wage-1) nsubj(one-4, increases-2) cop(one-4, are-3) case(factors-7, of-5) det(factors-7, the-6) nmod:of(one-4, factors-7) acl(factors-7, involved-8) mark(maintaining-10, in-9) advcl(involved-8, maintaining-10) compound(competitiveness-12, cost-11) dobj(maintaining-10, competitiveness-12) punct(factors-7, ,-13) nsubj(essential-16, which-14) cop(essential-16, is-15) acl:relcl(factors-7, essential-16) mark(are-19, if-17) nsubj(are-19, we-18) advcl(essential-16, are-19) mark(hold-21, to-20) xcomp(are-19, hold-21) nmod:poss(markets-23, our-22) dobj(hold-21, markets-23) punct(one-4, .-24)",0,0,0,"root(ROOT, one) compond(increases, Wage) nsbj(one, increases) cop(one, are) case(factors, of) det(factors, the) nmod:of(one, factors) acl(factors, involved) mark(maintaining, in) advcl(involved, maintaining) compond(competitiveness, cost) dobj(maintaining, competitiveness) pnct(factors, ,) nsbj(essential, which) cop(essential, is) acl:relcl(factors, essential) mark(are, if) nsbj(are, we) advcl(essential, are) mark(hold, to) xcomp(are, hold) nmod:poss(markets, or) dobj(hold, markets) pnct(one, .)","root(,CD) compond(NNS,NN) nsbj(CD,NNS) cop(CD,VBP) case(NNS,IN) det(NNS,DT) nmod:of(CD,NNS) acl(NNS,VBN) mark(VBG,IN) advcl(VBN,VBG) compond(NN,NN) dobj(VBG,NN) pnct(NNS,NNS) nsbj(JJ,WDT) cop(JJ,VBZ) acl:relcl(NNS,JJ) mark(VBP,IN) nsbj(VBP,PRP) advcl(JJ,VBP) mark(VB,TO) xcomp(VBP,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) pnct(CD,CD)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As the balance of payments is substantially affected by import penetration which must be a source of anxiety to the Treasury is my hon. Friend  whom I welcome to his new responsibilities  keen on encouraging infrastructure or capital investment  which usually has a low import content and therefore does not cause difficulty with the balance of payments?,AsIN theDT balanceNN ofIN paymentsNNS isVBZ substantiallyRB affectedVBN byIN importNN penetrationNN whichWDT mustMD beVB aDT sourceNN ofIN anxietyNN toTO theDT TreasuryNNP isVBZ myPRP$ honNN FriendNNP whomWP IPRP welcomeVBP toTO hisPRP$ newJJ responsibilitiesNNS keenVBP onIN encouragingJJ infrastructureNN orCC capitalNN investmentNN whichWDT usuallyRB hasVBZ aDT lowJJ importNN contentNN andCC thereforeRB doesVBZ notRB causeVB difficultyNN withIN theDT balanceNN ofIN paymentsNNS ,"root(ROOT-0, affected-8) case(balance-3, As-1) det(balance-3, the-2) nmod:as(affected-8, balance-3) case(payments-5, of-4) nmod:of(balance-3, payments-5) auxpass(affected-8, is-6) advmod(affected-8, substantially-7) case(penetration-11, by-9) compound(penetration-11, import-10) nmod:agent(affected-8, penetration-11) nsubj(source-16, which-12) aux(source-16, must-13) cop(source-16, be-14) det(source-16, a-15) acl:relcl(penetration-11, source-16) case(anxiety-18, of-17) nmod:of(source-16, anxiety-18) case(Treasury-21, to-19) det(Treasury-21, the-20) nmod:to(anxiety-18, Treasury-21) cop(Friend-25, is-22) nmod:poss(Friend-25, my-23) compound(Friend-25, hon.-24) dep(affected-8, Friend-25) punct(Friend-25, ,-26) dobj(welcome-29, whom-27) nsubj(welcome-29, I-28) acl:relcl(Friend-25, welcome-29) case(responsibilities-33, to-30) nmod:poss(responsibilities-33, his-31) amod(responsibilities-33, new-32) nmod:to(welcome-29, responsibilities-33) punct(welcome-29, ,-34) xcomp(welcome-29, keen-35) mark(encouraging-37, on-36) advcl(keen-35, encouraging-37) dobj(encouraging-37, infrastructure-38) cc(infrastructure-38, or-39) compound(investment-41, capital-40) dobj(encouraging-37, investment-41) conj:or(infrastructure-38, investment-41) punct(infrastructure-38, ,-42) nsubj(has-45, which-43) nsubj(cause-54, which-43) advmod(has-45, usually-44) acl:relcl(infrastructure-38, has-45) det(content-49, a-46) amod(content-49, low-47) compound(content-49, import-48) dobj(has-45, content-49) cc(has-45, and-50) advmod(cause-54, therefore-51) aux(cause-54, does-52) neg(cause-54, not-53) acl:relcl(infrastructure-38, cause-54) conj:and(has-45, cause-54) dobj(cause-54, difficulty-55) case(balance-58, with-56) det(balance-58, the-57) nmod:with(difficulty-55, balance-58) case(payments-60, of-59) nmod:of(balance-58, payments-60) punct(affected-8, ?-61)",0,0,0,"root(ROOT, affected) case(balance, As) det(balance, the) nmod:as(affected, balance) case(payments, of) nmod:of(balance, payments) axpass(affected, is) advmod(affected, sbstantially) case(penetration, by) compond(penetration, import) nmod:agent(affected, penetration) nsbj(sorce, which) ax(sorce, mst) cop(sorce, be) det(sorce, a) acl:relcl(penetration, sorce) case(anxiety, of) nmod:of(sorce, anxiety) case(Treasry, to) det(Treasry, the) nmod:to(anxiety, Treasry) cop(Friend, is) nmod:poss(Friend, my) compond(Friend, hon.) dep(affected, Friend) pnct(Friend, ,) dobj(welcome, whom) nsbj(welcome, I) acl:relcl(Friend, welcome) case(responsibilities, to) nmod:poss(responsibilities, his) amod(responsibilities, new) nmod:to(welcome, responsibilities) pnct(welcome, ,) xcomp(welcome, keen) mark(encoraging, on) advcl(keen, encoraging) dobj(encoraging, infrastrctre) cc(infrastrctre, or) compond(investment, capital) dobj(encoraging, investment) conj:or(infrastrctre, investment) pnct(infrastrctre, ,) nsbj(has, which) nsbj(case, which) advmod(has, sally) acl:relcl(infrastrctre, has) det(content, a) amod(content, low) compond(content, import) dobj(has, content) cc(has, and) advmod(case, therefore) ax(case, does) neg(case, not) acl:relcl(infrastrctre, case) conj:and(has, case) dobj(case, difficlty) case(balance, with) det(balance, the) nmod:with(difficlty, balance) case(payments, of) nmod:of(balance, payments) pnct(affected, ?)","root(,VBN) case(NN,IN) det(NN,DT) nmod:as(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) axpass(VBN,VBZ) advmod(VBN,RB) case(NN,IN) compond(NN,NN) nmod:agent(VBN,NN) nsbj(NN,WDT) ax(NN,MD) cop(NN,VB) det(NN,DT) acl:relcl(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,TO) det(NNP,DT) nmod:to(NN,NNP) cop(NNP,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) dep(VBN,NNP) pnct(NNP,NNP) dobj(VBP,WP) nsbj(VBP,PRP) acl:relcl(NNP,VBP) case(NNS,TO) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:to(VBP,NNS) pnct(VBP,VBP) xcomp(VBP,VBP) mark(JJ,IN) advcl(VBP,JJ) dobj(JJ,NN) cc(NN,CC) compond(NN,NN) dobj(JJ,NN) conj:or(NN,NN) pnct(NN,NN) nsbj(VBZ,WDT) nsbj(VB,WDT) advmod(VBZ,RB) acl:relcl(NN,VBZ) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VBZ,NN) cc(VBZ,CC) advmod(VB,RB) ax(VB,VBZ) neg(VB,RB) acl:relcl(NN,VB) conj:and(VBZ,VB) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:with(NN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBN,VBN)","[ , has, source, welcome, cause, I, substantially, my, responsibilities, anxiety, whom, keen, penetration, balance, affected, Friend, infrastructure, balance, encouraging, content, ROOT, difficulty]","[ , has, Friend, source, welcome, cause, I, substantially, my, responsibilities, anxiety, new, whom, keen, penetration, balance, affected, his, infrastructure, balance, encouraging, content, ROOT, difficulty]",9,"[ , has, Friend, source, welcome, cause, I, substantially, my, responsibilities, anxiety, new, whom, keen, penetration, balance, affected, his, infrastructure, balance, encouraging, content, ROOT, difficulty]","[ , has, Friend, source, welcome, cause, I, substantially, my, responsibilities, anxiety, new, whom, keen, penetration, balance, affected, his, infrastructure, balance, encouraging, content, ROOT, difficulty]",VBZ_has NNP_Friend NN_source JJ_welcome RB_cause PRP_I RB_substantially PRP$_my NNS_responsibilities NN_anxiety JJ_new WP_whom VBP_keen NN_penetration NN_balance VBN_affected PRP$_his NN_infrastructure NN_balance JJ_encouraging NN_content NN_difficulty ,"[ , has, Friend, source, welcome, cause, I, substantially, my, responsibilities, anxiety, new, whom, keen, penetration, balance, affected, his, infrastructure, balance, encouraging, content, ROOT, difficulty]","[ , has, Friend, source, welcome, cause, I, substantially, my, responsibilities, anxiety, new, whom, keen, penetration, balance, affected, his, infrastructure, balance, encouraging, content, ROOT, difficulty]",VBZ_has NNP_Friend NN_source JJ_welcome RB_cause PRP_I RB_substantially PRP$_my NNS_responsibilities NN_anxiety JJ_new WP_whom VBP_keen NN_penetration NN_balance VBN_affected PRP$_his NN_infrastructure NN_balance JJ_encouraging NN_content NN_difficulty ,"[ , has, Friend, source, welcome, cause, I, substantially, my, responsibilities, anxiety, new, whom, keen, penetration, balance, affected, his, infrastructure, balance, encouraging, content, ROOT, difficulty]",VBZ_has NNP_Friend NN_source JJ_welcome RB_cause PRP_I RB_substantially PRP$_my NNS_responsibilities NN_anxiety JJ_new WP_whom VBP_keen NN_penetration NN_balance VBN_affected PRP$_his NN_infrastructure NN_balance JJ_encouraging NN_content NN_difficulty ,"[ , has, Friend, source, welcome, cause, I, substantially, my, responsibilities, anxiety, new, whom, keen, penetration, balance, affected, his, infrastructure, balance, encouraging, content, ROOT, difficulty]",VBZ_has NNP_Friend NN_source JJ_welcome RB_cause PRP_I RB_substantially PRP$_my NNS_responsibilities NN_anxiety JJ_new WP_whom VBP_keen NN_penetration NN_balance VBN_affected PRP$_his NN_infrastructure NN_balance JJ_encouraging NN_content NN_difficulty ,-3,0,1,1,1,1,2,2,2,1
The key to it is profitability in an industry  which will attract investment to that industry  which in turn  added to effective cost competition in labour expenses  will enable us to win back world markets.,TheDT keyNN toTO itPRP isVBZ profitabilityNN inIN anDT industryNN whichWDT willMD attractVB investmentNN toTO thatDT industryNN whichWDT inIN turnNN addedVBN toTO effectiveJJ costNN competitionNN inIN labourNN expensesNNS willMD enableVB usPRP toTO winVB backRP worldNN marketsNNS ,"root(ROOT-0, enable-33) det(key-2, The-1) nsubj(profitability-6, key-2) case(it-4, to-3) nmod:to(key-2, it-4) cop(profitability-6, is-5) nsubj(enable-33, profitability-6) case(industry-9, in-7) det(industry-9, an-8) nmod:in(profitability-6, industry-9) punct(industry-9, ,-10) nsubj(attract-13, which-11) aux(attract-13, will-12) acl:relcl(industry-9, attract-13) dobj(attract-13, investment-14) case(industry-17, to-15) det(industry-17, that-16) nmod:to(attract-13, industry-17) punct(industry-17, ,-18) nsubj(added-23, which-19) case(turn-21, in-20) nmod:in(added-23, turn-21) punct(added-23, ,-22) acl:relcl(industry-17, added-23) case(competition-27, to-24) amod(competition-27, effective-25) compound(competition-27, cost-26) nmod:to(added-23, competition-27) case(expenses-30, in-28) compound(expenses-30, labour-29) nmod:in(competition-27, expenses-30) punct(industry-9, ,-31) aux(enable-33, will-32) dobj(enable-33, us-34) mark(win-36, to-35) xcomp(enable-33, win-36) amod(markets-39, back-37) compound(markets-39, world-38) dobj(win-36, markets-39) punct(enable-33, .-40)",0,0,0,"root(ROOT, enable) det(key, The) nsbj(profitability, key) case(it, to) nmod:to(key, it) cop(profitability, is) nsbj(enable, profitability) case(indstry, in) det(indstry, an) nmod:in(profitability, indstry) pnct(indstry, ,) nsbj(attract, which) ax(attract, will) acl:relcl(indstry, attract) dobj(attract, investment) case(indstry, to) det(indstry, that) nmod:to(attract, indstry) pnct(indstry, ,) nsbj(added, which) case(trn, in) nmod:in(added, trn) pnct(added, ,) acl:relcl(indstry, added) case(competition, to) amod(competition, effective) compond(competition, cost) nmod:to(added, competition) case(expenses, in) compond(expenses, labor) nmod:in(competition, expenses) pnct(indstry, ,) ax(enable, will) dobj(enable, s) mark(win, to) xcomp(enable, win) amod(markets, back) compond(markets, world) dobj(win, markets) pnct(enable, .)","root(,VB) det(NN,DT) nsbj(NN,NN) case(PRP,TO) nmod:to(NN,PRP) cop(NN,VBZ) nsbj(VB,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(NN,NN) nsbj(VB,WDT) ax(VB,MD) acl:relcl(NN,VB) dobj(VB,NN) case(NN,TO) det(NN,DT) nmod:to(VB,NN) pnct(NN,NN) nsbj(VBN,WDT) case(NN,IN) nmod:in(VBN,NN) pnct(VBN,VBN) acl:relcl(NN,VBN) case(NN,TO) amod(NN,JJ) compond(NN,NN) nmod:to(VBN,NN) case(NNS,IN) compond(NNS,NN) nmod:in(NN,NNS) pnct(NN,NN) ax(VB,MD) dobj(VB,PRP) mark(VB,TO) xcomp(VB,VB) amod(NNS,RP) compond(NNS,NN) dobj(VB,NNS) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Is it not a fact that the balance of payments has been shored up by oil exports?,IsVBZ itPRP notRB aDT factNN thatIN theDT balanceNN ofIN paymentsNNS hasVBZ beenVBN shoredVBN upRP byIN oilNN exportsNNS ,"root(ROOT-0, fact-5) cop(fact-5, Is-1) nsubj(fact-5, it-2) neg(fact-5, not-3) det(fact-5, a-4) mark(shored-13, that-6) det(balance-8, the-7) nsubjpass(shored-13, balance-8) case(payments-10, of-9) nmod:of(balance-8, payments-10) aux(shored-13, has-11) auxpass(shored-13, been-12) ccomp(fact-5, shored-13) compound:prt(shored-13, up-14) case(exports-17, by-15) compound(exports-17, oil-16) nmod:agent(shored-13, exports-17) punct(fact-5, ?-18)",0,1,0,"root(ROOT, fact) cop(fact, Is) nsbj(fact, it) neg(fact, not) det(fact, a) mark(shored, that) det(balance, the) nsbjpass(shored, balance) case(payments, of) nmod:of(balance, payments) ax(shored, has) axpass(shored, been) ccomp(fact, shored) compond:prt(shored, p) case(exports, by) compond(exports, oil) nmod:agent(shored, exports) pnct(fact, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) ax(VBN,VBZ) axpass(VBN,VBN) ccomp(NN,VBN) compond:prt(VBN,RP) case(NNS,IN) compond(NNS,NN) nmod:agent(VBN,NNS) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will not those oil exports decline steadily during the coming years  and what plans do the Government have to shore up what will then be a catastrophic state of affairs?,WillMD notRB thoseDT oilNN exportsNNS declineVBP steadilyRB duringIN theDT comingVBG yearsNNS andCC whatWP plansNNS doVBP theDT GovernmentNNP haveVBP toTO shoreVB upRP whatWP willMD thenRB beVB aDT catastrophicJJ stateNN ofIN affairsNNS ,"root(ROOT-0, decline-6) aux(decline-6, Will-1) neg(exports-5, not-2) det(exports-5, those-3) compound(exports-5, oil-4) nsubj(decline-6, exports-5) advmod(decline-6, steadily-7) case(years-11, during-8) det(years-11, the-9) amod(years-11, coming-10) nmod:during(decline-6, years-11) punct(decline-6, ,-12) cc(decline-6, and-13) dobj(have-19, what-14) nsubj(have-19, plans-15) aux(have-19, do-16) det(Government-18, the-17) nsubj(have-19, Government-18) conj:and(decline-6, have-19) mark(shore-21, to-20) xcomp(have-19, shore-21) compound:prt(shore-21, up-22) nsubj(state-29, what-23) aux(state-29, will-24) advmod(state-29, then-25) cop(state-29, be-26) det(state-29, a-27) amod(state-29, catastrophic-28) ccomp(shore-21, state-29) case(affairs-31, of-30) nmod:of(state-29, affairs-31) punct(decline-6, ?-32)",0,0,0,"root(ROOT, decline) ax(decline, Will) neg(exports, not) det(exports, those) compond(exports, oil) nsbj(decline, exports) advmod(decline, steadily) case(years, dring) det(years, the) amod(years, coming) nmod:dring(decline, years) pnct(decline, ,) cc(decline, and) dobj(have, what) nsbj(have, plans) ax(have, do) det(Government, the) nsbj(have, Government) conj:and(decline, have) mark(shore, to) xcomp(have, shore) compond:prt(shore, p) nsbj(state, what) ax(state, will) advmod(state, then) cop(state, be) det(state, a) amod(state, catastrophic) ccomp(shore, state) case(affairs, of) nmod:of(state, affairs) pnct(decline, ?)","root(,VBP) ax(VBP,MD) neg(NNS,RB) det(NNS,DT) compond(NNS,NN) nsbj(VBP,NNS) advmod(VBP,RB) case(NNS,IN) det(NNS,DT) amod(NNS,VBG) nmod:dring(VBP,NNS) pnct(VBP,VBP) cc(VBP,CC) dobj(VBP,WP) nsbj(VBP,NNS) ax(VBP,VBP) det(NNP,DT) nsbj(VBP,NNP) conj:and(VBP,VBP) mark(VB,TO) xcomp(VBP,VB) compond:prt(VB,RP) nsbj(NN,WP) ax(NN,MD) advmod(NN,RB) cop(NN,VB) det(NN,DT) amod(NN,JJ) ccomp(VB,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBP,VBP)","[Government, what, plans, have, shore]","[Government, what, plans, have, shore]",11,[ ],[ ],NNP_Government WP_what NNS_plans VBP_have VB_shore ,"[Government, what, plans, have, shore]","[Government, what, plans, have, shore]",NNP_Government WP_what NNS_plans VBP_have VB_shore ,"[Government, what, plans, have, shore]",NNP_Government WP_what NNS_plans VBP_have VB_shore ,"[Government, what, plans, have, shore]",NNP_Government WP_what NNS_plans VBP_have VB_shore ,-3,0,2,0,0,0,0,0,0,0
I cannot understand why its Members assume that the 100 000 odd jobs that have been created by an investment of £35 billion from the private sector into such a successful industry should be ignored.,IPRP canMD notRB understandVB whyWRB itsPRP$ MembersNNS assumeVBP thatIN theDT 100CD 000CD oddNN jobsNNS thatWDT haveVBP beenVBN createdVBN byIN anDT investmentNN ofIN £35JJ billionCD fromIN theDT privateJJ sectorNN intoIN suchJJ aDT successfulJJ industryNN shouldMD beVB ignoredVBN ,"root(ROOT-0, understand-4) nsubj(understand-4, I-1) aux(understand-4, can-2) neg(understand-4, not-3) advmod(assume-8, why-5) nmod:poss(Members-7, its-6) nsubj(assume-8, Members-7) ccomp(understand-4, assume-8) mark(ignored-36, that-9) det(jobs-13, the-10) nummod(jobs-13, 100,000-11) amod(jobs-13, odd-12) nsubjpass(ignored-36, jobs-13) nsubjpass(created-17, that-14) aux(created-17, have-15) auxpass(created-17, been-16) acl:relcl(jobs-13, created-17) case(investment-20, by-18) det(investment-20, an-19) nmod:agent(created-17, investment-20) case(billion-24, of-21) compound(billion-24, #-22) compound(billion-24, 35-23) nmod:of(investment-20, billion-24) case(sector-28, from-25) det(sector-28, the-26) amod(sector-28, private-27) nmod:from(investment-20, sector-28) case(industry-33, into-29) amod(industry-33, such-30) det(industry-33, a-31) amod(industry-33, successful-32) nmod:into(investment-20, industry-33) aux(ignored-36, should-34) auxpass(ignored-36, be-35) ccomp(assume-8, ignored-36) punct(understand-4, .-37)",0,0,0,"root(ROOT, nderstand) nsbj(nderstand, I) ax(nderstand, can) neg(nderstand, not) advmod(assme, why) nmod:poss(Members, its) nsbj(assme, Members) ccomp(nderstand, assme) mark(ignored, that) det(jobs, the) nmmod(jobs, 100,000) amod(jobs, odd) nsbjpass(ignored, jobs) nsbjpass(created, that) ax(created, have) axpass(created, been) acl:relcl(jobs, created) case(investment, by) det(investment, an) nmod:agent(created, investment) case(billion, of) compond(billion, #) compond(billion, 35) nmod:of(investment, billion) case(sector, from) det(sector, the) amod(sector, private) nmod:from(investment, sector) case(indstry, into) amod(indstry, sch) det(indstry, a) amod(indstry, sccessfl) nmod:into(investment, indstry) ax(ignored, shold) axpass(ignored, be) ccomp(assme, ignored) pnct(nderstand, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) advmod(VBP,WRB) nmod:poss(NNS,PRP$) nsbj(VBP,NNS) ccomp(VB,VBP) mark(VBN,WDT) det(NNS,DT) nmmod(NNS,NNS) amod(NNS,NN) nsbjpass(VBN,NNS) nsbjpass(VBN,WDT) ax(VBN,VBP) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:agent(VBN,NN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NN,CD) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:from(NN,NN) case(NN,IN) amod(NN,JJ) det(NN,DT) amod(NN,JJ) nmod:into(NN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(VBP,VBN) pnct(VB,VB)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is also difficult to understand how they can ignore the enormous achievement in the creation of a massive overseas asset.,ItPRP isVBZ alsoRB difficultJJ toTO understandVB howWRB theyPRP canMD ignoreVB theDT enormousJJ achievementNN inIN theDT creationNN ofIN aDT massiveJJ overseasJJ assetNN ,"root(ROOT-0, difficult-4) nsubj(difficult-4, It-1) cop(difficult-4, is-2) advmod(difficult-4, also-3) mark(understand-6, to-5) xcomp(difficult-4, understand-6) advmod(ignore-10, how-7) nsubj(ignore-10, they-8) aux(ignore-10, can-9) ccomp(understand-6, ignore-10) det(achievement-13, the-11) amod(achievement-13, enormous-12) dobj(ignore-10, achievement-13) case(creation-16, in-14) det(creation-16, the-15) nmod:in(achievement-13, creation-16) case(asset-21, of-17) det(asset-21, a-18) amod(asset-21, massive-19) amod(asset-21, overseas-20) nmod:of(creation-16, asset-21) punct(difficult-4, .-22)",0,0,0,"root(ROOT, difficlt) nsbj(difficlt, It) cop(difficlt, is) advmod(difficlt, also) mark(nderstand, to) xcomp(difficlt, nderstand) advmod(ignore, how) nsbj(ignore, they) ax(ignore, can) ccomp(nderstand, ignore) det(achievement, the) amod(achievement, enormos) dobj(ignore, achievement) case(creation, in) det(creation, the) nmod:in(achievement, creation) case(asset, of) det(asset, a) amod(asset, massive) amod(asset, overseas) nmod:of(creation, asset) pnct(difficlt, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) mark(VB,TO) xcomp(JJ,VB) advmod(VB,WRB) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:of(NN,NN) pnct(JJ,JJ)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We now have net assets overseas worth £42 billion  as opposed to £10 billion in 1978  which are already producing net portfolio remittances of about £ 1.6 billion a year  as opposed to £400 million a year in 1978.,WePRP nowRB haveVBP netJJ assetsNNS overseasRB worthJJ £42NNP billionCD asIN opposedVBN toTO £10VB billionCD inIN 1978CD whichWDT areVBP alreadyRB producingVBG netJJ portfolioNN remittancesNNS ofIN aboutIN £$ 16CD billionCD aDT yearNN asIN opposedVBN toTO £400VB millionCD aDT yearNN inIN 1978CD ,"root(ROOT-0, have-3) nsubj(have-3, We-1) advmod(have-3, now-2) amod(assets-5, net-4) dobj(have-3, assets-5) advmod(billion-10, overseas-6) amod(billion-10, worth-7) compound(billion-10, #-8) compound(billion-10, 42-9) nummod(assets-5, billion-10) punct(have-3, ,-11) mark(opposed-13, as-12) advcl(have-3, opposed-13) case(billion-17, to-14) compound(billion-17, #-15) compound(billion-17, 10-16) nmod:to(opposed-13, billion-17) case(1978-19, in-18) nmod:in(billion-17, 1978-19) punct(billion-17, ,-20) nsubj(producing-24, which-21) aux(producing-24, are-22) advmod(producing-24, already-23) acl:relcl(billion-17, producing-24) amod(remittances-27, net-25) compound(remittances-27, portfolio-26) dobj(producing-24, remittances-27) case(billion-32, of-28) advmod(billion-32, about-29) compound(billion-32, #-30) compound(billion-32, 1.6-31) nmod:of(remittances-27, billion-32) det(year-34, a-33) nmod:npmod(billion-32, year-34) punct(have-3, ,-35) mark(opposed-37, as-36) advcl(have-3, opposed-37) case(million-41, to-38) compound(million-41, #-39) compound(million-41, 400-40) nmod:to(opposed-37, million-41) det(year-43, a-42) nmod:npmod(million-41, year-43) case(1978-45, in-44) nmod:in(opposed-37, 1978-45) punct(have-3, .-46)",0,0,0,"root(ROOT, have) nsbj(have, We) advmod(have, now) amod(assets, net) dobj(have, assets) advmod(billion, overseas) amod(billion, worth) compond(billion, #) compond(billion, 42) nmmod(assets, billion) pnct(have, ,) mark(opposed, as) advcl(have, opposed) case(billion, to) compond(billion, #) compond(billion, 10) nmod:to(opposed, billion) case(1978, in) nmod:in(billion, 1978) pnct(billion, ,) nsbj(prodcing, which) ax(prodcing, are) advmod(prodcing, already) acl:relcl(billion, prodcing) amod(remittances, net) compond(remittances, portfolio) dobj(prodcing, remittances) case(billion, of) advmod(billion, abot) compond(billion, #) compond(billion, 1.6) nmod:of(remittances, billion) det(year, a) nmod:npmod(billion, year) pnct(have, ,) mark(opposed, as) advcl(have, opposed) case(million, to) compond(million, #) compond(million, 400) nmod:to(opposed, million) det(year, a) nmod:npmod(million, year) case(1978, in) nmod:in(opposed, 1978) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) amod(NNS,JJ) dobj(VBP,NNS) advmod(CD,RB) amod(CD,JJ) compond(CD,CD) compond(CD,CD) nmmod(NNS,CD) pnct(VBP,VBP) mark(VBN,IN) advcl(VBP,VBN) case(CD,TO) compond(CD,CD) compond(CD,CD) nmod:to(VBN,CD) case(CD,IN) nmod:in(CD,CD) pnct(CD,CD) nsbj(VBG,WDT) ax(VBG,VBP) advmod(VBG,RB) acl:relcl(CD,VBG) amod(NNS,JJ) compond(NNS,NN) dobj(VBG,NNS) case(CD,IN) advmod(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NNS,CD) det(NN,DT) nmod:npmod(CD,NN) pnct(VBP,VBP) mark(VBN,IN) advcl(VBP,VBN) case(CD,TO) compond(CD,CD) compond(CD,CD) nmod:to(VBN,CD) det(NN,DT) nmod:npmod(CD,NN) case(CD,IN) nmod:in(VBN,CD) pnct(VBP,VBP)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I  too  congratulate the Minister on his promotion within the Treasury  and I wish him good fortune  especially in solving the growing new problem of balance of payments deficits.,IPRP tooRB congratulateVBP theDT MinisterNNP onIN hisPRP$ promotionNN withinIN theDT TreasuryNNP andCC IPRP wishVBP himPRP goodJJ fortuneNN especiallyRB inIN solvingVBG theDT growingVBG newJJ problemNN ofIN balanceNN ofIN paymentsNNS deficitsNNS ,"root(ROOT-0, congratulate-5) nsubj(congratulate-5, I-1) punct(congratulate-5, ,-2) advmod(congratulate-5, too-3) punct(congratulate-5, ,-4) det(Minister-7, the-6) dobj(congratulate-5, Minister-7) case(promotion-10, on-8) nmod:poss(promotion-10, his-9) nmod:on(congratulate-5, promotion-10) case(Treasury-13, within-11) det(Treasury-13, the-12) nmod:within(promotion-10, Treasury-13) punct(congratulate-5, ,-14) cc(congratulate-5, and-15) nsubj(wish-17, I-16) conj:and(congratulate-5, wish-17) nsubj(fortune-20, him-18) amod(fortune-20, good-19) ccomp(wish-17, fortune-20) punct(fortune-20, ,-21) advmod(solving-24, especially-22) mark(solving-24, in-23) advcl(fortune-20, solving-24) det(problem-28, the-25) amod(problem-28, growing-26) amod(problem-28, new-27) dobj(solving-24, problem-28) case(balance-30, of-29) nmod:of(problem-28, balance-30) case(deficits-33, of-31) compound(deficits-33, payments-32) nmod:of(balance-30, deficits-33) punct(congratulate-5, .-34)",0,0,0,"root(ROOT, congratlate) nsbj(congratlate, I) pnct(congratlate, ,) advmod(congratlate, too) pnct(congratlate, ,) det(Minister, the) dobj(congratlate, Minister) case(promotion, on) nmod:poss(promotion, his) nmod:on(congratlate, promotion) case(Treasry, within) det(Treasry, the) nmod:within(promotion, Treasry) pnct(congratlate, ,) cc(congratlate, and) nsbj(wish, I) conj:and(congratlate, wish) nsbj(fortne, him) amod(fortne, good) ccomp(wish, fortne) pnct(fortne, ,) advmod(solving, especially) mark(solving, in) advcl(fortne, solving) det(problem, the) amod(problem, growing) amod(problem, new) dobj(solving, problem) case(balance, of) nmod:of(problem, balance) case(deficits, of) compond(deficits, payments) nmod:of(balance, deficits) pnct(congratlate, .)","root(,VBP) nsbj(VBP,PRP) pnct(VBP,VBP) advmod(VBP,RB) pnct(VBP,VBP) det(NNP,DT) dobj(VBP,NNP) case(NN,IN) nmod:poss(NN,PRP$) nmod:on(VBP,NN) case(NNP,IN) det(NNP,DT) nmod:within(NN,NNP) pnct(VBP,VBP) cc(VBP,CC) nsbj(VBP,PRP) conj:and(VBP,VBP) nsbj(NN,PRP) amod(NN,JJ) ccomp(VBP,NN) pnct(NN,NN) advmod(VBG,RB) mark(VBG,IN) advcl(NN,VBG) det(NN,DT) amod(NN,VBG) amod(NN,JJ) dobj(VBG,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) compond(NNS,NNS) nmod:of(NN,NNS) pnct(VBP,VBP)","[I, Minister, and, congratulate, too, ROOT, promotion]","[his, and, congratulate, too, I, Minister, ROOT, promotion, Treasury]",13,"[his, and, congratulate, too, I, Minister, ROOT, promotion, Treasury]","[his, and, congratulate, too, I, Minister, ROOT, promotion, Treasury]",PRP$_his CC_and VBP_congratulate RB_too PRP_I NNP_Minister NN_promotion NNP_Treasury ,"[his, and, congratulate, too, I, Minister, ROOT, promotion, Treasury]","[his, and, congratulate, too, I, Minister, ROOT, promotion, Treasury]",PRP$_his CC_and VBP_congratulate RB_too PRP_I NNP_Minister NN_promotion NNP_Treasury ,"[his, and, congratulate, too, I, Minister, ROOT, promotion, Treasury]",PRP$_his CC_and VBP_congratulate RB_too PRP_I NNP_Minister NN_promotion NNP_Treasury ,"[his, and, congratulate, too, I, Minister, ROOT, promotion, Treasury]",PRP$_his CC_and VBP_congratulate RB_too PRP_I NNP_Minister NN_promotion NNP_Treasury ,-3,0,1,1,1,1,1,1,1,1
Surely the Minister understands and recognises that  of all the figures that have been exchanged across the Floor of the House during this Question Time and many previous ones  nothing is more grievously damaging to the fortunes and prospects of Britain than the massive deterioration in the balance of payments that has taken place this year.,SurelyRB theDT MinisterNNP understandsNNS andCC recognisesVBZ thatIN ofIN allPDT theDT figuresNNS thatWDT haveVBP beenVBN exchangedVBN acrossIN theDT FloorNNP ofIN theDT HouseNNP duringIN thisDT QuestionNN TimeNNP andCC manyJJ previousJJ onesNNS nothingNN isVBZ moreRBR grievouslyRB damagingVBG toTO theDT fortunesNNS andCC prospectsNNS ofIN BritainNNP thanIN theDT massiveJJ deteriorationNN inIN theDT balanceNN ofIN paymentsNNS thatWDT hasVBZ takenVBN placeNN thisDT yearNN ,"root(ROOT-0, understands-4) advmod(understands-4, Surely-1) det(Minister-3, the-2) nsubj(understands-4, Minister-3) nsubj(recognises-6, Minister-3) cc(understands-4, and-5) conj:and(understands-4, recognises-6) dep(recognises-6, that-7) punct(that-7, ,-8) case(figures-12, of-9) det:predet(figures-12, all-10) det(figures-12, the-11) nmod:of(,-8, figures-12) nsubjpass(exchanged-16, that-13) aux(exchanged-16, have-14) auxpass(exchanged-16, been-15) acl:relcl(figures-12, exchanged-16) case(Floor-19, across-17) det(Floor-19, the-18) nmod:across(exchanged-16, Floor-19) case(House-22, of-20) det(House-22, the-21) nmod:of(Floor-19, House-22) case(Time-26, during-23) det(Time-26, this-24) compound(Time-26, Question-25) nmod:during(exchanged-16, Time-26) cc(exchanged-16, and-27) amod(ones-30, many-28) amod(ones-30, previous-29) acl:relcl(figures-12, ones-30) conj:and(exchanged-16, ones-30) punct(ones-30, ,-31) nsubj(damaging-36, nothing-32) aux(damaging-36, is-33) advmod(grievously-35, more-34) advmod(damaging-36, grievously-35) acl:relcl(ones-30, damaging-36) case(fortunes-39, to-37) det(fortunes-39, the-38) nmod:to(damaging-36, fortunes-39) cc(fortunes-39, and-40) nmod:to(damaging-36, prospects-41) conj:and(fortunes-39, prospects-41) case(Britain-43, of-42) nmod:of(fortunes-39, Britain-43) case(deterioration-47, than-44) det(deterioration-47, the-45) amod(deterioration-47, massive-46) nmod:than(fortunes-39, deterioration-47) case(balance-50, in-48) det(balance-50, the-49) nmod:in(deterioration-47, balance-50) case(payments-52, of-51) nmod:of(balance-50, payments-52) nsubj(taken-55, that-53) aux(taken-55, has-54) acl:relcl(payments-52, taken-55) dobj(taken-55, place-56) det(year-58, this-57) nmod:tmod(taken-55, year-58) punct(figures-12, .-59)",0,0,0,"root(ROOT, nderstands) advmod(nderstands, Srely) det(Minister, the) nsbj(nderstands, Minister) nsbj(recognises, Minister) cc(nderstands, and) conj:and(nderstands, recognises) dep(recognises, that) pnct(that, ,) case(figres, of) det:predet(figres, all) det(figres, the) nmod:of(,, figres) nsbjpass(exchanged, that) ax(exchanged, have) axpass(exchanged, been) acl:relcl(figres, exchanged) case(Floor, across) det(Floor, the) nmod:across(exchanged, Floor) case(Hose, of) det(Hose, the) nmod:of(Floor, Hose) case(Time, dring) det(Time, this) compond(Time, Qestion) nmod:dring(exchanged, Time) cc(exchanged, and) amod(ones, many) amod(ones, previos) acl:relcl(figres, ones) conj:and(exchanged, ones) pnct(ones, ,) nsbj(damaging, nothing) ax(damaging, is) advmod(grievosly, more) advmod(damaging, grievosly) acl:relcl(ones, damaging) case(fortnes, to) det(fortnes, the) nmod:to(damaging, fortnes) cc(fortnes, and) nmod:to(damaging, prospects) conj:and(fortnes, prospects) case(Britain, of) nmod:of(fortnes, Britain) case(deterioration, than) det(deterioration, the) amod(deterioration, massive) nmod:than(fortnes, deterioration) case(balance, in) det(balance, the) nmod:in(deterioration, balance) case(payments, of) nmod:of(balance, payments) nsbj(taken, that) ax(taken, has) acl:relcl(payments, taken) dobj(taken, place) det(year, this) nmod:tmod(taken, year) pnct(figres, .)","root(,NNS) advmod(NNS,RB) det(NNP,DT) nsbj(NNS,NNP) nsbj(VBZ,NNP) cc(NNS,CC) conj:and(NNS,VBZ) dep(VBZ,WDT) pnct(WDT,WDT) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:of(DTDTNNS) nsbjpass(VBN,WDT) ax(VBN,VBP) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(NNP,IN) det(NNP,DT) nmod:across(VBN,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,NN) nmod:dring(VBN,NNP) cc(VBN,CC) amod(NNS,JJ) amod(NNS,JJ) acl:relcl(NNS,NNS) conj:and(VBN,NNS) pnct(NNS,NNS) nsbj(VBG,NN) ax(VBG,VBZ) advmod(RB,RBR) advmod(VBG,RB) acl:relcl(NNS,VBG) case(NNS,TO) det(NNS,DT) nmod:to(VBG,NNS) cc(NNS,CC) nmod:to(VBG,NNS) conj:and(NNS,NNS) case(NNP,IN) nmod:of(NNS,NNP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:than(NNS,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNS,IN) nmod:of(NN,NNS) nsbj(VBN,WDT) ax(VBN,VBZ) acl:relcl(NNS,VBN) dobj(VBN,NN) det(NN,DT) nmod:tmod(VBN,NN) pnct(NNS,NNS)","[Minister, Surely, ROOT, understands, and, that, recognises]","[Minister, Surely, ROOT, understands, and, that, recognises]",13,"[Minister, Surely, ROOT, understands, and, that, recognises]","[Minister, Surely, ROOT, understands, and, that, recognises]",NNP_Minister RB_Surely NNS_understands CC_and IN_that VBZ_recognises ,"[Minister, Surely, ROOT, understands, and, that, recognises]","[Minister, Surely, ROOT, understands, and, that, recognises]",NNP_Minister RB_Surely NNS_understands CC_and IN_that VBZ_recognises ,"[Minister, Surely, ROOT, understands, and, that, recognises]",NNP_Minister RB_Surely NNS_understands CC_and IN_that VBZ_recognises ,"[Minister, Surely, ROOT, understands, and, that, recognises]",NNP_Minister RB_Surely NNS_understands CC_and IN_that VBZ_recognises ,-3,0,2,0,0,0,0,0,0,0
Does he agree that within the past 12 months our balance of payments has deteriorated by no less than £5 000 million and that we are heading for the most serious crisis in our balance of payments in the year ahead?,DoesVBZ hePRP agreeVB thatIN withinIN theDT pastJJ 12CD monthsNNS ourPRP$ balanceNN ofIN paymentsNNS hasVBZ deterioratedVBN byIN noDT lessJJR thanIN £5$ 000CD millionCD andCC thatIN wePRP areVBP headingVBG forIN theDT mostRBS seriousJJ crisisNN inIN ourPRP$ balanceNN ofIN paymentsNNS inIN theDT yearNN aheadRB ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(deteriorated-15, that-4) case(months-9, within-5) det(months-9, the-6) amod(months-9, past-7) nummod(months-9, 12-8) nmod:within(deteriorated-15, months-9) nmod:poss(balance-11, our-10) nsubj(deteriorated-15, balance-11) case(payments-13, of-12) nmod:of(balance-11, payments-13) aux(deteriorated-15, has-14) ccomp(agree-3, deteriorated-15) advmod(deteriorated-15, by-16) dep(by-16, no-17) amod(no-17, less-18) case(million-22, than-19) compound(million-22, #-20) compound(million-22, 5,000-21) nmod:than(less-18, million-22) cc(no-17, and-23) mark(heading-27, that-24) nsubj(heading-27, we-25) aux(heading-27, are-26) dep(by-16, heading-27) conj:and(no-17, heading-27) case(crisis-32, for-28) det(crisis-32, the-29) advmod(serious-31, most-30) amod(crisis-32, serious-31) nmod:for(heading-27, crisis-32) case(balance-35, in-33) nmod:poss(balance-35, our-34) nmod:in(crisis-32, balance-35) case(payments-37, of-36) nmod:of(balance-35, payments-37) case(year-40, in-38) det(year-40, the-39) nmod:in(payments-37, year-40) advmod(heading-27, ahead-41) punct(agree-3, ?-42)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(deteriorated, that) case(months, within) det(months, the) amod(months, past) nmmod(months, 12) nmod:within(deteriorated, months) nmod:poss(balance, or) nsbj(deteriorated, balance) case(payments, of) nmod:of(balance, payments) ax(deteriorated, has) ccomp(agree, deteriorated) advmod(deteriorated, by) dep(by, no) amod(no, less) case(million, than) compond(million, #) compond(million, 5,000) nmod:than(less, million) cc(no, and) mark(heading, that) nsbj(heading, we) ax(heading, are) dep(by, heading) conj:and(no, heading) case(crisis, for) det(crisis, the) advmod(serios, most) amod(crisis, serios) nmod:for(heading, crisis) case(balance, in) nmod:poss(balance, or) nmod:in(crisis, balance) case(payments, of) nmod:of(balance, payments) case(year, in) det(year, the) nmod:in(payments, year) advmod(heading, ahead) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBN,IN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:within(VBN,NNS) nmod:poss(NN,PRP$) nsbj(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) ax(VBN,VBZ) ccomp(VB,VBN) advmod(VBN,IN) dep(IN,DT) amod(DT,JJR) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:than(JJR,CD) cc(DT,CC) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBP) dep(IN,VBG) conj:and(DT,VBG) case(NN,IN) det(NN,DT) advmod(JJ,RBS) amod(NN,JJ) nmod:for(VBG,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) advmod(VBG,RB) pnct(VB,VB)","[he, ROOT, agree]","[he, ROOT, agree]",13,[ ],[ ],PRP_he VB_agree ,"[he, ROOT, agree]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What will he do to restore the competitiveness of British industry so that we can resist import penetration and promote our exports?,WhatWP willMD hePRP doVB toTO restoreVB theDT competitivenessNN ofIN BritishJJ industryNN soRB thatIN wePRP canMD resistVB importNN penetrationNN andCC promoteVB ourPRP$ exportsNNS ,"root(ROOT-0, do-4) dobj(do-4, What-1) aux(do-4, will-2) nsubj(do-4, he-3) mark(restore-6, to-5) xcomp(do-4, restore-6) det(competitiveness-8, the-7) dobj(restore-6, competitiveness-8) case(industry-11, of-9) amod(industry-11, British-10) nmod:of(competitiveness-8, industry-11) mark(resist-16, so-12) mark(resist-16, that-13) nsubj(resist-16, we-14) nsubj(promote-20, we-14) aux(resist-16, can-15) advcl(do-4, resist-16) compound(penetration-18, import-17) dobj(resist-16, penetration-18) cc(resist-16, and-19) advcl(do-4, promote-20) conj:and(resist-16, promote-20) nmod:poss(exports-22, our-21) dobj(promote-20, exports-22) punct(do-4, ?-23)",0,0,0,"root(ROOT, do) dobj(do, What) ax(do, will) nsbj(do, he) mark(restore, to) xcomp(do, restore) det(competitiveness, the) dobj(restore, competitiveness) case(indstry, of) amod(indstry, British) nmod:of(competitiveness, indstry) mark(resist, so) mark(resist, that) nsbj(resist, we) nsbj(promote, we) ax(resist, can) advcl(do, resist) compond(penetration, import) dobj(resist, penetration) cc(resist, and) advcl(do, promote) conj:and(resist, promote) nmod:poss(exports, or) dobj(promote, exports) pnct(do, ?)","root(,VB) VBbj(VB,WP) ax(VB,MD) nsbj(VB,PRP) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) mark(VB,RB) mark(VB,IN) nsbj(VB,PRP) nsbj(VB,PRP) ax(VB,MD) advcl(VB,VB) compond(NN,NN) dobj(VB,NN) cc(VB,CC) advcl(VB,VB) conj:and(VB,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) pnct(VB,VB)","[promote, restore, ROOT, he, What, resist, do]","[promote, restore, ROOT, he, What, resist, do]",13,[ ],[ ],VB_promote VB_restore PRP_he WP_What VB_resist VB_do ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
How will he handle the continuing problem of a massive outflow of capital from Britain?,HowWRB willMD hePRP handleVB theDT continuingVBG problemNN ofIN aDT massiveJJ outflowNN ofIN capitalNN fromIN BritainNNP ,"root(ROOT-0, handle-4) advmod(handle-4, How-1) aux(handle-4, will-2) nsubj(handle-4, he-3) det(problem-7, the-5) amod(problem-7, continuing-6) dobj(handle-4, problem-7) case(outflow-11, of-8) det(outflow-11, a-9) amod(outflow-11, massive-10) nmod:of(problem-7, outflow-11) case(capital-13, of-12) nmod:of(outflow-11, capital-13) case(Britain-15, from-14) nmod:from(outflow-11, Britain-15) punct(handle-4, ?-16)",0,0,1,"root(ROOT, handle) advmod(handle, How) ax(handle, will) nsbj(handle, he) det(problem, the) amod(problem, contining) dobj(handle, problem) case(otflow, of) det(otflow, a) amod(otflow, massive) nmod:of(problem, otflow) case(capital, of) nmod:of(otflow, capital) case(Britain, from) nmod:from(otflow, Britain) pnct(handle, ?)","root(,VB) advmod(VB,WRB) ax(VB,MD) nsbj(VB,PRP) det(NN,DT) amod(NN,VBG) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,IN) nmod:from(NN,NNP) pnct(VB,VB)","[problem, ROOT, How, handle, he]","[problem, ROOT, How, handle, he]",13,[ ],[ ],NN_problem WRB_How VB_handle PRP_he ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I thank the right hon. Gentleman for his kind words.,IPRP thankVBP theDT rightJJ honNN GentlemanNNP forIN hisPRP$ kindNN wordsNNS ,"root(ROOT-0, thank-2) nsubj(thank-2, I-1) det(Gentleman-6, the-3) amod(Gentleman-6, right-4) compound(Gentleman-6, hon.-5) dobj(thank-2, Gentleman-6) case(words-10, for-7) nmod:poss(words-10, his-8) compound(words-10, kind-9) nmod:for(thank-2, words-10) punct(thank-2, .-11)",0,1,0,"root(ROOT, thank) nsbj(thank, I) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) dobj(thank, Gentleman) case(words, for) nmod:poss(words, his) compond(words, kind) nmod:for(thank, words) pnct(thank, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) dobj(VBP,NNP) case(NNS,IN) nmod:poss(NNS,PRP$) compond(NNS,NN) nmod:for(VBP,NNS) pnct(VBP,VBP)","[I, thank, ROOT, Gentleman, right, words]","[I, thank, ROOT, his, Gentleman, words]",14,"[I, thank, ROOT, his, Gentleman, words]","[I, thank, ROOT, his, Gentleman, words]",PRP_I VBP_thank PRP$_his NNP_Gentleman NNS_words ,"[I, thank, ROOT, his, Gentleman, words]","[I, thank, ROOT, his, Gentleman, words]",PRP_I VBP_thank PRP$_his NNP_Gentleman NNS_words ,"[I, thank, ROOT, his, Gentleman, words]",PRP_I VBP_thank PRP$_his NNP_Gentleman NNS_words ,"[I, thank, ROOT, his, Gentleman, words]",PRP_I VBP_thank PRP$_his NNP_Gentleman NNS_words ,-3,0,1,0,0,0,0,0,0,0
It might be useful to correct the misapprehension that the outside world might have.,ItPRP mightMD beVB usefulJJ toTO correctVB theDT misapprehensionNN thatIN theDT outsideJJ worldNN mightMD haveVB ,"root(ROOT-0, useful-4) nsubj(useful-4, It-1) aux(useful-4, might-2) cop(useful-4, be-3) mark(correct-6, to-5) xcomp(useful-4, correct-6) det(misapprehension-8, the-7) dobj(correct-6, misapprehension-8) dobj(have-14, that-9) det(world-12, the-10) amod(world-12, outside-11) nsubj(have-14, world-12) aux(have-14, might-13) acl:relcl(misapprehension-8, have-14) punct(useful-4, .-15)",0,0,0,"root(ROOT, sefl) nsbj(sefl, It) ax(sefl, might) cop(sefl, be) mark(correct, to) xcomp(sefl, correct) det(misapprehension, the) dobj(correct, misapprehension) dobj(have, that) det(world, the) amod(world, otside) nsbj(have, world) ax(have, might) acl:relcl(misapprehension, have) pnct(sefl, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) dobj(VB,IN) det(NN,DT) amod(NN,JJ) nsbj(VB,NN) ax(VB,MD) acl:relcl(NN,VB) pnct(JJ,JJ)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We are not in balance of payments deficit.,WePRP areVBP notRB inIN balanceNN ofIN paymentsNNS deficitNN ,"root(ROOT-0, balance-5) nsubj(balance-5, We-1) cop(balance-5, are-2) neg(balance-5, not-3) case(balance-5, in-4) case(deficit-8, of-6) compound(deficit-8, payments-7) nmod:of(balance-5, deficit-8) punct(balance-5, .-9)",0,0,0,"root(ROOT, balance) nsbj(balance, We) cop(balance, are) neg(balance, not) case(balance, in) case(deficit, of) compond(deficit, payments) nmod:of(balance, deficit) pnct(balance, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBP) neg(NN,RB) case(NN,IN) case(NN,IN) compond(NN,NNS) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The figures for the first nine months of this year show an approximate surplus of more than £550 million.,TheDT figuresNNS forIN theDT firstJJ nineCD monthsNNS ofIN thisDT yearNN showVBP anDT approximateJJ surplusNN ofIN moreJJR thanIN £550CD millionCD ,"root(ROOT-0, show-11) det(figures-2, The-1) nsubj(show-11, figures-2) case(months-7, for-3) det(months-7, the-4) amod(months-7, first-5) nummod(months-7, nine-6) nmod:for(figures-2, months-7) case(year-10, of-8) det(year-10, this-9) nmod:of(months-7, year-10) det(surplus-14, an-12) amod(surplus-14, approximate-13) dobj(show-11, surplus-14) case(million-20, of-15) advmod(million-20, more-16) mwe(more-16, than-17) compound(million-20, #-18) compound(million-20, 550-19) nmod:of(surplus-14, million-20) punct(show-11, .-21)",0,0,0,"root(ROOT, show) det(figres, The) nsbj(show, figres) case(months, for) det(months, the) amod(months, first) nmmod(months, nine) nmod:for(figres, months) case(year, of) det(year, this) nmod:of(months, year) det(srpls, an) amod(srpls, approximate) dobj(show, srpls) case(million, of) advmod(million, more) mwe(more, than) compond(million, #) compond(million, 550) nmod:of(srpls, million) pnct(show, .)","root(,VBP) det(NNS,DT) nsbj(VBP,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:for(NNS,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) case(CD,IN) advmod(CD,JJR) mwe(JJR,IN) compond(CD,CD) compond(CD,CD) nmod:of(NN,CD) pnct(VBP,VBP)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I recognise that manufacturing figures are down  but one of the happy factors in the longterm development of Britain is that our economic development is ahead of that of most of our European competitors.,IPRP recogniseVBP thatIN manufacturingNN figuresNNS areVBP downRB butCC oneCD ofIN theDT happyJJ factorsNNS inIN theDT longtermJJ developmentNN ofIN BritainNNP isVBZ thatIN ourPRP$ economicJJ developmentNN isVBZ aheadRB ofIN thatDT ofIN mostJJS ofIN ourPRP$ EuropeanJJ competitorsNNS ,"root(ROOT-0, recognise-2) nsubj(recognise-2, I-1) mark(down-7, that-3) amod(figures-5, manufacturing-4) nsubj(down-7, figures-5) cop(down-7, are-6) ccomp(recognise-2, down-7) punct(down-7, ,-8) cc(down-7, but-9) nsubj(is-21, one-10) case(factors-14, of-11) det(factors-14, the-12) amod(factors-14, happy-13) nmod:of(one-10, factors-14) case(development-18, in-15) det(development-18, the-16) amod(development-18, longterm-17) nmod:in(factors-14, development-18) case(Britain-20, of-19) nmod:of(development-18, Britain-20) ccomp(recognise-2, is-21) conj:but(down-7, is-21) xcomp(is-21, that-22) nmod:poss(development-25, our-23) amod(development-25, economic-24) dep(that-22, development-25) amod(development-25, is-26) advmod(is-26, ahead-27) case(that-29, of-28) nmod:of(ahead-27, that-29) case(most-31, of-30) nmod:of(that-29, most-31) case(competitors-35, of-32) nmod:poss(competitors-35, our-33) amod(competitors-35, European-34) nmod:of(most-31, competitors-35) punct(recognise-2, .-36)",0,0,0,"root(ROOT, recognise) nsbj(recognise, I) mark(down, that) amod(figres, manfactring) nsbj(down, figres) cop(down, are) ccomp(recognise, down) pnct(down, ,) cc(down, bt) nsbj(is, one) case(factors, of) det(factors, the) amod(factors, happy) nmod:of(one, factors) case(development, in) det(development, the) amod(development, longterm) nmod:in(factors, development) case(Britain, of) nmod:of(development, Britain) ccomp(recognise, is) conj:bt(down, is) xcomp(is, that) nmod:poss(development, or) amod(development, economic) dep(that, development) amod(development, is) advmod(is, ahead) case(that, of) nmod:of(ahead, that) case(most, of) nmod:of(that, most) case(competitors, of) nmod:poss(competitors, or) amod(competitors, Eropean) nmod:of(most, competitors) pnct(recognise, .)","root(,VBP) nsbj(VBP,PRP) mark(RB,DT) amod(NNS,NN) nsbj(RB,NNS) cop(RB,VBP) ccomp(VBP,RB) pnct(RB,RB) cc(RB,CC) nsbj(VBZ,CD) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(CD,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) ccomp(VBP,VBZ) conj:bt(RB,VBZ) xcomp(VBZ,DT) nmod:poss(NN,PRP$) amod(NN,JJ) dep(DT,NN) amod(NN,VBZ) advmod(VBZ,RB) case(DT,IN) nmod:of(RB,DT) case(JJS,IN) nmod:of(DT,JJS) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:of(JJS,NNS) pnct(VBP,VBP)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Defence if he has had any representations from other Governments about the targeting of cruise missiles to be deployed in the United Kingdom.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN DefenceNNP ifIN hePRP hasVBZ hadVBN anyDT representationsNNS fromIN otherJJ GovernmentsNNS aboutIN theDT targetingNN ofIN cruiseNN missilesNNS toTO beVB deployedVBN inIN theDT UnitedNNP KingdomNNP ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Defence-7, for-6) nmod:for(asked-1, Defence-7) mark(had-11, if-8) nsubj(had-11, he-9) aux(had-11, has-10) advcl(asked-1, had-11) det(representations-13, any-12) dobj(had-11, representations-13) case(Governments-16, from-14) amod(Governments-16, other-15) nmod:from(representations-13, Governments-16) case(targeting-19, about-17) det(targeting-19, the-18) nmod:about(had-11, targeting-19) case(missiles-22, of-20) compound(missiles-22, cruise-21) nmod:of(targeting-19, missiles-22) mark(deployed-25, to-23) auxpass(deployed-25, be-24) acl(targeting-19, deployed-25) case(Kingdom-29, in-26) det(Kingdom-29, the-27) compound(Kingdom-29, United-28) nmod:in(deployed-25, Kingdom-29) punct(asked-1, .-30)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Defence, for) nmod:for(asked, Defence) mark(had, if) nsbj(had, he) ax(had, has) advcl(asked, had) det(representations, any) dobj(had, representations) case(Governments, from) amod(Governments, other) nmod:from(representations, Governments) case(targeting, abot) det(targeting, the) nmod:abot(had, targeting) case(missiles, of) compond(missiles, crise) nmod:of(targeting, missiles) mark(deployed, to) axpass(deployed, be) acl(targeting, deployed) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(deployed, Kingdom) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(VBN,NNP) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBZ) advcl(VBN,VBN) det(NNS,DT) dobj(VBN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:from(NNS,NNS) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) mark(VBN,TO) axpass(VBN,VB) acl(NN,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(VBN,NNP) pnct(VBN,VBN)","[had, State, he, Secretary, ROOT, targeting, asked, Defence, representations]","[had, State, he, Secretary, ROOT, targeting, asked, Defence, representations]",1,"[had, Secretary, ROOT, asked, State, Defence]","[had, Secretary, ROOT, asked, State, Defence]",VBN_had NNP_State PRP_he NNP_Secretary NN_targeting VBN_asked NNP_Defence VBZ_representations ,"[had, State, he, Secretary, ROOT, targeting, asked, Defence, representations]","[had, State, he, Secretary, ROOT, targeting, asked, Defence, representations]",VBN_had NNP_State PRP_he NNP_Secretary NN_targeting VBN_asked NNP_Defence VBZ_representations ,"[had, State, he, Secretary, ROOT, targeting, asked, Defence, representations]",VBN_had NNP_State PRP_he NNP_Secretary NN_targeting VBN_asked NNP_Defence VBZ_representations ,"[had, State, he, Secretary, ROOT, targeting, asked, Defence, representations]",VBN_had NNP_State PRP_he NNP_Secretary NN_targeting VBN_asked NNP_Defence VBZ_representations ,-3,0,2,0,0,0,0,0,0,0
Her Majesty's Government have discussed NATO's twin track decision on INF deployment and arms control with a wide range of foreign Governments.,HerPRP$ MajestyNNP 'sPOS GovernmentNNP haveVBP discussedVBN NATONNP 'sPOS twinJJ trackNN decisionNN onIN INFNNP deploymentNN andCC armsNNS controlNN withIN aDT wideJJ rangeNN ofIN foreignJJ GovernmentsNNS ,"root(ROOT-0, discussed-6) nmod:poss(Government-4, Her-1) nmod:poss(Government-4, Majesty-2) case(Majesty-2, 's-3) nsubj(discussed-6, Government-4) aux(discussed-6, have-5) nmod:poss(decision-11, NATO-7) case(NATO-7, 's-8) amod(decision-11, twin-9) compound(decision-11, track-10) dobj(discussed-6, decision-11) case(deployment-14, on-12) compound(deployment-14, INF-13) nmod:on(decision-11, deployment-14) cc(deployment-14, and-15) compound(control-17, arms-16) nmod:on(decision-11, control-17) conj:and(deployment-14, control-17) case(range-21, with-18) det(range-21, a-19) amod(range-21, wide-20) nmod:with(decision-11, range-21) case(Governments-24, of-22) amod(Governments-24, foreign-23) nmod:of(range-21, Governments-24) punct(discussed-6, .-25)",0,1,0,"root(ROOT, discssed) nmod:poss(Government, Her) nmod:poss(Government, Majesty) ""case(Majesty, s)"", nsbj(discssed, Government) ax(discssed, have) nmod:poss(decision, NATO) ""case(NATO, s)"", amod(decision, twin) compond(decision, track) dobj(discssed, decision) case(deployment, on) compond(deployment, INF) nmod:on(decision, deployment) cc(deployment, and) compond(control, arms) nmod:on(decision, control) conj:and(deployment, control) case(range, with) det(range, a) amod(range, wide) nmod:with(decision, range) case(Governments, of) amod(Governments, foreign) nmod:of(range, Governments) pnct(discssed, .)","root(,VBN) nmod:poss(NNP,PRP$) nmod:poss(NNP,NNP) case(NNP,POS) nsbj(VBN,NNP) ax(VBN,VBP) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) compond(NN,NN) dobj(VBN,NN) case(NN,IN) compond(NN,NNP) nmod:on(NN,NN) cc(NN,CC) compond(NN,NNS) nmod:on(NN,NN) conj:and(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) pnct(VBN,VBN)","[Majesty, Her, Government, ROOT, decision, discussed]","[Majesty, Her, Government, ROOT, decision, discussed]",2,[ ],[ ],NNP_Majesty PRP$_Her NNP_Government NN_decision VBN_discussed ,"[Majesty, Her, Government, ROOT, decision, discussed]","[Majesty, Her, Government, ROOT, decision, discussed]",NNP_Majesty PRP$_Her NNP_Government NN_decision VBN_discussed ,"[Majesty, Her, Government, ROOT, decision, discussed]",NNP_Majesty PRP$_Her NNP_Government NN_decision VBN_discussed ,"[Majesty, Her, Government, ROOT, decision, discussed]",NNP_Majesty PRP$_Her NNP_Government NN_decision VBN_discussed ,-3,0,2,1,1,1,1,1,1,2
I do not  however  propose to disclose the contents of the discussions.,IPRP doVBP notRB howeverRB proposeVB toTO discloseVB theDT contentsNNS ofIN theDT discussionsNNS ,"root(ROOT-0, propose-7) nsubj(propose-7, I-1) aux(propose-7, do-2) neg(propose-7, not-3) punct(propose-7, ,-4) advmod(propose-7, however-5) punct(propose-7, ,-6) mark(disclose-9, to-8) xcomp(propose-7, disclose-9) det(contents-11, the-10) dobj(disclose-9, contents-11) case(discussions-14, of-12) det(discussions-14, the-13) nmod:of(contents-11, discussions-14) punct(propose-7, .-15)",0,0,0,"root(ROOT, propose) nsbj(propose, I) ax(propose, do) neg(propose, not) pnct(propose, ,) advmod(propose, however) pnct(propose, ,) mark(disclose, to) xcomp(propose, disclose) det(contents, the) dobj(disclose, contents) case(discssions, of) det(discssions, the) nmod:of(contents, discssions) pnct(propose, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) pnct(VB,VB) advmod(VB,RB) pnct(VB,VB) mark(VB,TO) xcomp(VB,VB) det(NNS,DT) dobj(VB,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) pnct(VB,VB)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Secretary of State give an assurance that none of the cruise missiles deployed in this country will be targeted on inhabited areas such as the Ruhr which are within the perimeters of our NATO allies?,WillMD theDT SecretaryNNP ofIN StateNNP giveVB anDT assuranceNN thatIN noneNN ofIN theDT cruiseNN missilesNNS deployedVBN inIN thisDT countryNN willMD beVB targetedVBN onIN inhabitedJJ areasNNS suchJJ asIN theDT RuhrNNP whichWDT areVBP withinIN theDT perimetersNNS ofIN ourPRP$ NATONNP alliesNNS ,"root(ROOT-0, give-6) aux(give-6, Will-1) det(Secretary-3, the-2) nsubj(give-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) det(assurance-8, an-7) dobj(give-6, assurance-8) dobj(targeted-21, that-9) nsubjpass(targeted-21, none-10) case(missiles-14, of-11) det(missiles-14, the-12) compound(missiles-14, cruise-13) nmod:of(none-10, missiles-14) acl(missiles-14, deployed-15) case(country-18, in-16) det(country-18, this-17) nmod:in(deployed-15, country-18) aux(targeted-21, will-19) auxpass(targeted-21, be-20) acl:relcl(assurance-8, targeted-21) case(areas-24, on-22) amod(areas-24, inhabited-23) nmod:on(targeted-21, areas-24) case(Ruhr-28, such-25) mwe(such-25, as-26) det(Ruhr-28, the-27) nmod:such_as(areas-24, Ruhr-28) nsubj(perimeters-33, which-29) cop(perimeters-33, are-30) case(perimeters-33, within-31) det(perimeters-33, the-32) acl:relcl(Ruhr-28, perimeters-33) case(allies-37, of-34) nmod:poss(allies-37, our-35) compound(allies-37, NATO-36) nmod:of(perimeters-33, allies-37) punct(give-6, ?-38)",0,1,0,"root(ROOT, give) ax(give, Will) det(Secretary, the) nsbj(give, Secretary) case(State, of) nmod:of(Secretary, State) det(assrance, an) dobj(give, assrance) dobj(targeted, that) nsbjpass(targeted, none) case(missiles, of) det(missiles, the) compond(missiles, crise) nmod:of(none, missiles) acl(missiles, deployed) case(contry, in) det(contry, this) nmod:in(deployed, contry) ax(targeted, will) axpass(targeted, be) acl:relcl(assrance, targeted) case(areas, on) amod(areas, inhabited) nmod:on(targeted, areas) case(Rhr, sch) mwe(sch, as) det(Rhr, the) nmod:sch_as(areas, Rhr) nsbj(perimeters, which) cop(perimeters, are) case(perimeters, within) det(perimeters, the) acl:relcl(Rhr, perimeters) case(allies, of) nmod:poss(allies, or) compond(allies, NATO) nmod:of(perimeters, allies) pnct(give, ?)","root(,VB) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) det(NN,DT) dobj(VB,NN) dobj(VBN,IN) nsbjpass(VBN,NN) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:of(NN,NNS) acl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NN,VBN) case(NNS,IN) amod(NNS,JJ) nmod:on(VBN,NNS) case(NNP,JJ) mwe(JJ,IN) det(NNP,DT) nmod:sch_as(NNS,NNP) nsbj(NNS,WDT) cop(NNS,VBP) case(NNS,IN) det(NNS,DT) acl:relcl(NNP,NNS) case(NNS,IN) nmod:poss(NNS,PRP$) compond(NNS,NNP) nmod:of(NNS,NNS) pnct(VB,VB)","[ROOT, State, assurance, give, Secretary]","[ROOT, State, assurance, give, Secretary]",3,[ ],[ ],NNP_State NN_assurance VB_give NNP_Secretary ,"[ROOT, State, assurance, give, Secretary]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Targeting policy is therefore bound to be designed with that object in mind.,TargetingVBG policyNN isVBZ thereforeRB boundVBN toTO beVB designedVBN withIN thatDT objectNN inIN mindNN ,"root(ROOT-0, bound-5) compound(policy-2, Targeting-1) nsubjpass(bound-5, policy-2) auxpass(bound-5, is-3) advmod(bound-5, therefore-4) mark(designed-8, to-6) auxpass(designed-8, be-7) xcomp(bound-5, designed-8) case(object-11, with-9) det(object-11, that-10) nmod:with(designed-8, object-11) case(mind-13, in-12) nmod:in(object-11, mind-13) punct(bound-5, .-14)",0,0,1,"root(ROOT, bond) compond(policy, Targeting) nsbjpass(bond, policy) axpass(bond, is) advmod(bond, therefore) mark(designed, to) axpass(designed, be) xcomp(bond, designed) case(object, with) det(object, that) nmod:with(designed, object) case(mind, in) nmod:in(object, mind) pnct(bond, .)","root(,VBN) compond(NN,VBG) nsbjpass(VBN,NN) axpass(VBN,VBZ) advmod(VBN,RB) mark(VBN,TO) axpass(VBN,VB) xcomp(VBN,VBN) case(NN,IN) det(NN,DT) nmod:with(VBN,NN) case(NN,IN) nmod:in(NN,NN) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is my right hon. Friend satisfied with Ministry of Defence arrangements for informing the Soviet Union of the nuclear free zones in the United Kingdom so that that country's targeting can be kept continually up to date?,IsVBZ myPRP$ rightJJ honNN FriendNNP satisfiedVBD withIN MinistryNNP ofIN DefenceNNP arrangementsNNS forIN informingVBG theDT SovietNNP UnionNNP ofIN theDT nuclearJJ freeJJ zonesNNS inIN theDT UnitedNNP KingdomNNP soIN thatIN thatDT countryNN 'sPOS targetingNN canMD beVB keptVBN continuallyRB upIN toTO dateNN ,"root(ROOT-0, Is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(Is-1, Friend-5) acl(Friend-5, satisfied-6) case(Ministry-8, with-7) nmod:with(satisfied-6, Ministry-8) case(arrangements-11, of-9) compound(arrangements-11, Defence-10) nmod:of(Ministry-8, arrangements-11) mark(informing-13, for-12) advcl(satisfied-6, informing-13) det(Union-16, the-14) compound(Union-16, Soviet-15) dobj(informing-13, Union-16) case(zones-21, of-17) det(zones-21, the-18) amod(zones-21, nuclear-19) amod(zones-21, free-20) nmod:of(Union-16, zones-21) case(Kingdom-25, in-22) det(Kingdom-25, the-23) compound(Kingdom-25, United-24) nmod:in(zones-21, Kingdom-25) mark(kept-34, so-26) mark(kept-34, that-27) det(country-29, that-28) nmod:poss(targeting-31, country-29) case(country-29, 's-30) nsubjpass(kept-34, targeting-31) aux(kept-34, can-32) auxpass(kept-34, be-33) advcl(informing-13, kept-34) advmod(up-36, continually-35) advmod(kept-34, up-36) case(date-38, to-37) nmod:to(up-36, date-38) punct(Is-1, ?-39)",0,1,1,"root(ROOT, Is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(Is, Friend) acl(Friend, satisfied) case(Ministry, with) nmod:with(satisfied, Ministry) case(arrangements, of) compond(arrangements, Defence) nmod:of(Ministry, arrangements) mark(informing, for) advcl(satisfied, informing) det(Union, the) compond(Union, Soviet) dobj(informing, Union) case(zones, of) det(zones, the) amod(zones, nclear) amod(zones, free) nmod:of(Union, zones) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(zones, Kingdom) mark(kept, so) mark(kept, that) det(contry, that) nmod:poss(targeting, contry) ""case(contry, s)"", nsbjpass(kept, targeting) ax(kept, can) axpass(kept, be) advcl(informing, kept) advmod(p, continally) advmod(kept, p) case(date, to) nmod:to(p, date) pnct(Is, ?)","root(,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) acl(NNP,VBD) case(NNP,IN) nmod:with(VBD,NNP) case(NNS,IN) compond(NNS,NNP) nmod:of(NNP,NNS) mark(VBG,IN) advcl(VBD,VBG) det(NNP,DT) compond(NNP,NNP) dobj(VBG,NNP) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) nmod:of(NNP,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NNS,NNP) mark(VBN,IN) mark(VBN,DT) det(NN,DT) nmod:poss(NN,NN) case(NN,POS) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) advcl(VBG,VBN) advmod(IN,RB) advmod(VBN,IN) case(NN,TO) nmod:to(IN,NN) pnct(VBZ,VBZ)","[right, Is, Friend, Ministry, my, informing, ROOT, satisfied]","[Ministry, my, informing, ROOT, Is, Friend, satisfied]",5,"[Ministry, my, informing, ROOT, Is, Friend, satisfied]","[Ministry, my, informing, ROOT, Is, Friend, satisfied]",NNP_Ministry PRP$_my VBG_informing VBZ_Is NNP_Friend JJ_satisfied ,"[Ministry, my, informing, ROOT, Is, Friend, satisfied]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Is the Secretary of State aware and if so has he discussed this with his NATO allies   that an announcement by the joint cruise missile project office stated that on 19 November this year a cruise missile identical to those that have been installed in Britain failed on a test trial after a very short journey and that only 84 out of 130 missiles had been successful?,IsVBZ theDT SecretaryNNP ofIN StateNNP awareJJ andCC ifIN soRB hasVBZ hePRP discussedVBD thisDT withIN hisPRP$ NATONNP alliesNNS thatIN anDT announcementNN byIN theDT jointJJ cruiseNN missileNN projectNN officeNN statedVBD thatIN onIN 19CD NovemberNNP thisDT yearNN aDT cruiseNN missileNN identicalJJ toTO thoseDT thatWDT haveVBP beenVBN installedVBN inIN BritainNNP failedVBD onIN aDT testNN trialNN afterIN aDT veryRB shortJJ journeyNN andCC thatIN onlyRB 84CD outIN ofIN 130CD missilesNNS hadVBD beenVBN successfulJJ ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) det(Secretary-3, the-2) nsubj(aware-6, Secretary-3) nsubj(has-10, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) cc(aware-6, and-7) mark(has-10, if-8) advmod(has-10, so-9) conj:and(aware-6, has-10) nsubj(discussed-12, he-11) ccomp(has-10, discussed-12) dobj(discussed-12, this-13) case(allies-17, with-14) nmod:poss(allies-17, his-15) compound(allies-17, NATO-16) nmod:with(discussed-12, allies-17) mark(stated-28, that-18) det(announcement-20, an-19) nsubj(stated-28, announcement-20) case(office-27, by-21) det(office-27, the-22) amod(office-27, joint-23) compound(office-27, cruise-24) compound(office-27, missile-25) compound(office-27, project-26) nmod:by(announcement-20, office-27) ccomp(allies-17, stated-28) mark(failed-47, that-29) case(November-32, on-30) nummod(November-32, 19-31) nmod:on(failed-47, November-32) det(year-34, this-33) nmod:tmod(failed-47, year-34) det(missile-37, a-35) compound(missile-37, cruise-36) nsubj(failed-47, missile-37) amod(missile-37, identical-38) case(those-40, to-39) nmod:to(identical-38, those-40) nsubjpass(installed-44, that-41) aux(installed-44, have-42) auxpass(installed-44, been-43) acl:relcl(those-40, installed-44) case(Britain-46, in-45) nmod:in(installed-44, Britain-46) ccomp(stated-28, failed-47) case(trial-51, on-48) det(trial-51, a-49) compound(trial-51, test-50) nmod:on(failed-47, trial-51) case(journey-56, after-52) det(journey-56, a-53) advmod(short-55, very-54) amod(journey-56, short-55) nmod:after(failed-47, journey-56) cc(failed-47, and-57) mark(successful-67, that-58) advmod(84-60, only-59) nsubj(successful-67, 84-60) advmod(84-60, out-61) case(missiles-64, of-62) nummod(missiles-64, 130-63) nmod:of(out-61, missiles-64) aux(successful-67, had-65) cop(successful-67, been-66) ccomp(stated-28, successful-67) conj:and(failed-47, successful-67) punct(aware-6, ?-68)",0,0,0,"root(ROOT, aware) cop(aware, Is) det(Secretary, the) nsbj(aware, Secretary) nsbj(has, Secretary) case(State, of) nmod:of(Secretary, State) cc(aware, and) mark(has, if) advmod(has, so) conj:and(aware, has) nsbj(discssed, he) ccomp(has, discssed) dobj(discssed, this) case(allies, with) nmod:poss(allies, his) compond(allies, NATO) nmod:with(discssed, allies) mark(stated, that) det(annoncement, an) nsbj(stated, annoncement) case(office, by) det(office, the) amod(office, joint) compond(office, crise) compond(office, missile) compond(office, project) nmod:by(annoncement, office) ccomp(allies, stated) mark(failed, that) case(November, on) nmmod(November, 19) nmod:on(failed, November) det(year, this) nmod:tmod(failed, year) det(missile, a) compond(missile, crise) nsbj(failed, missile) amod(missile, identical) case(those, to) nmod:to(identical, those) nsbjpass(installed, that) ax(installed, have) axpass(installed, been) acl:relcl(those, installed) case(Britain, in) nmod:in(installed, Britain) ccomp(stated, failed) case(trial, on) det(trial, a) compond(trial, test) nmod:on(failed, trial) case(jorney, after) det(jorney, a) advmod(short, very) amod(jorney, short) nmod:after(failed, jorney) cc(failed, and) mark(sccessfl, that) advmod(84, only) nsbj(sccessfl, 84) advmod(84, ot) case(missiles, of) nmmod(missiles, 130) nmod:of(ot, missiles) ax(sccessfl, had) cop(sccessfl, been) ccomp(stated, sccessfl) conj:and(failed, sccessfl) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) det(NNP,DT) nsbj(JJ,NNP) nsbj(VBZ,NNP) case(NNP,IN) nmod:of(NNP,NNP) cc(JJ,CC) mark(VBZ,IN) advmod(VBZ,RB) conj:and(JJ,VBZ) nsbj(VBD,PRP) ccomp(VBZ,VBD) dobj(VBD,DT) case(NNS,IN) nmod:poss(NNS,PRP$) compond(NNS,NNP) nmod:with(VBD,NNS) mark(VBD,IN) det(NN,DT) nsbj(VBD,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) compond(NN,NN) compond(NN,NN) nmod:by(NN,NN) ccomp(NNS,VBD) mark(VBD,IN) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) det(NN,DT) nmod:tmod(VBD,NN) det(NN,DT) compond(NN,NN) nsbj(VBD,NN) amod(NN,JJ) case(DT,TO) nmod:to(JJ,DT) nsbjpass(VBN,IN) ax(VBN,VBP) axpass(VBN,VBN) acl:relcl(DT,VBN) case(NNP,IN) nmod:in(VBN,NNP) ccomp(VBD,VBD) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:on(VBD,NN) case(NN,IN) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) nmod:after(VBD,NN) cc(VBD,CC) mark(JJ,IN) advmod(CD,RB) nsbj(JJ,CD) advmod(CD,IN) case(NNS,IN) nmmod(NNS,CD) nmod:of(IN,NNS) ax(JJ,VBD) cop(JJ,VBN) ccomp(VBD,JJ) conj:and(VBD,JJ) pnct(JJ,JJ)","[aware, he, State, has, allies, so, Secretary, ROOT, discussed, this, and]","[aware, he, State, has, allies, so, his, Secretary, ROOT, stated, discussed, this, and]",7,"[aware, he, State, has, allies, so, his, Secretary, ROOT, stated, discussed, this, and]","[his, stated, he, this, discussed, has, allies]",JJ_aware PRP_he NNP_State VBZ_has NNS_allies RB_so PRP$_his NNP_Secretary VBN_stated VBN_discussed DT_this CC_and ,"[aware, he, State, has, allies, so, his, Secretary, ROOT, stated, discussed, this, and]","[aware, he, State, has, allies, so, his, Secretary, ROOT, stated, discussed, this, and]",JJ_aware PRP_he NNP_State VBZ_has NNS_allies RB_so PRP$_his NNP_Secretary VBN_stated VBN_discussed DT_this CC_and ,"[aware, he, State, has, allies, so, his, Secretary, ROOT, stated, discussed, this, and]",JJ_aware PRP_he NNP_State VBZ_has NNS_allies RB_so PRP$_his NNP_Secretary VBN_stated VBN_discussed DT_this CC_and ,"[aware, he, State, has, allies, so, his, Secretary, ROOT, stated, discussed, this, and]",JJ_aware PRP_he NNP_State VBZ_has NNS_allies RB_so PRP$_his NNP_Secretary VBN_stated VBN_discussed DT_this CC_and ,-3,0,2,0,0,0,0,0,0,0
I am certain that our NATO allies are not so confident about the safety of the cruise missiles that we have in Britain.,IPRP amVBP certainJJ thatIN ourPRP$ NATONNP alliesNNS areVBP notRB soRB confidentJJ aboutIN theDT safetyNN ofIN theDT cruiseNN missilesVBZ thatIN wePRP haveVBP inIN BritainNNP ,"root(ROOT-0, certain-3) nsubj(certain-3, I-1) cop(certain-3, am-2) mark(confident-11, that-4) nmod:poss(allies-7, our-5) compound(allies-7, NATO-6) nsubj(confident-11, allies-7) cop(confident-11, are-8) neg(confident-11, not-9) advmod(confident-11, so-10) ccomp(certain-3, confident-11) case(safety-14, about-12) det(safety-14, the-13) nmod:about(confident-11, safety-14) case(missiles-18, of-15) det(missiles-18, the-16) compound(missiles-18, cruise-17) nmod:of(safety-14, missiles-18) mark(have-21, that-19) nsubj(have-21, we-20) ccomp(confident-11, have-21) case(Britain-23, in-22) nmod:in(have-21, Britain-23) punct(certain-3, .-24)",0,0,1,"root(ROOT, certain) nsbj(certain, I) cop(certain, am) mark(confident, that) nmod:poss(allies, or) compond(allies, NATO) nsbj(confident, allies) cop(confident, are) neg(confident, not) advmod(confident, so) ccomp(certain, confident) case(safety, abot) det(safety, the) nmod:abot(confident, safety) case(missiles, of) det(missiles, the) compond(missiles, crise) nmod:of(safety, missiles) mark(have, that) nsbj(have, we) ccomp(confident, have) case(Britain, in) nmod:in(have, Britain) pnct(certain, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(JJ,IN) nmod:poss(NNS,PRP$) compond(NNS,NNP) nsbj(JJ,NNS) cop(JJ,VBP) neg(JJ,RB) advmod(JJ,RB) ccomp(JJ,JJ) case(NN,IN) det(NN,DT) nmod:abot(JJ,NN) case(VBZ,IN) det(VBZ,DT) compond(VBZ,NN) nmod:of(NN,VBZ) mark(VBP,IN) nsbj(VBP,PRP) ccomp(JJ,VBP) case(NNP,IN) nmod:in(VBP,NNP) pnct(JJ,JJ)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. Gentleman will be aware that there is a nuclear safety committee which advises the Government and which has satisfied itself about the safety of these weapon systems.,TheDT honNN GentlemanNNP willMD beVB awareJJ thatIN thereEX isVBZ aDT nuclearJJ safetyNN committeeNN whichWDT advisesVBZ theDT GovernmentNNP andCC whichWDT hasVBZ satisfiedVBN itselfPRP aboutIN theDT safetyNN ofIN theseDT weaponNNS systemsNNS ,"root(ROOT-0, aware-6) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(aware-6, Gentleman-3) aux(aware-6, will-4) cop(aware-6, be-5) mark(is-9, that-7) expl(is-9, there-8) ccomp(aware-6, is-9) det(committee-13, a-10) amod(committee-13, nuclear-11) compound(committee-13, safety-12) nsubj(is-9, committee-13) nsubj(advises-15, which-14) acl:relcl(committee-13, advises-15) det(Government-17, the-16) dobj(advises-15, Government-17) cc(Government-17, and-18) nsubj(satisfied-21, which-19) aux(satisfied-21, has-20) dobj(advises-15, satisfied-21) conj:and(Government-17, satisfied-21) dobj(satisfied-21, itself-22) case(safety-25, about-23) det(safety-25, the-24) nmod:about(satisfied-21, safety-25) case(systems-29, of-26) det(systems-29, these-27) compound(systems-29, weapon-28) nmod:of(safety-25, systems-29) punct(aware-6, .-30)",0,1,0,"root(ROOT, aware) det(Gentleman, The) compond(Gentleman, hon.) nsbj(aware, Gentleman) ax(aware, will) cop(aware, be) mark(is, that) expl(is, there) ccomp(aware, is) det(committee, a) amod(committee, nclear) compond(committee, safety) nsbj(is, committee) nsbj(advises, which) acl:relcl(committee, advises) det(Government, the) dobj(advises, Government) cc(Government, and) nsbj(satisfied, which) ax(satisfied, has) dobj(advises, satisfied) conj:and(Government, satisfied) dobj(satisfied, itself) case(safety, abot) det(safety, the) nmod:abot(satisfied, safety) case(systems, of) det(systems, these) compond(systems, weapon) nmod:of(safety, systems) pnct(aware, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) ax(JJ,MD) cop(JJ,VB) mark(VBZ,IN) expl(VBZ,EX) ccomp(JJ,VBZ) det(NN,DT) amod(NN,JJ) compond(NN,NN) nsbj(VBZ,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) det(NNP,DT) dobj(VBZ,NNP) cc(NNP,CC) nsbj(VBN,WDT) ax(VBN,VBZ) dobj(VBZ,VBN) conj:and(NNP,VBN) dobj(VBN,PRP) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(NNS,IN) det(NNS,DT) compond(NNS,NNS) nmod:of(NN,NNS) pnct(JJ,JJ)","[is, aware, and, Government, satisfied, advises, safety, which, itself, ROOT, which, committee, Gentleman]","[is, aware, and, Government, satisfied, advises, safety, which, itself, ROOT, which, committee, Gentleman]",8,"[and, Government, satisfied, advises, safety, which, itself, which, committee]","[and, Government, satisfied, advises, safety, which, itself, which, committee]",VBZ_is JJ_aware CC_and NNP_Government JJ_satisfied VBZ_advises NN_safety WDT_which PRP_itself WDT_which NN_committee NNP_Gentleman ,"[is, aware, and, Government, satisfied, advises, safety, which, itself, ROOT, which, committee, Gentleman]","[is, aware, and, Government, satisfied, advises, safety, which, itself, ROOT, which, committee, Gentleman]",VBZ_is JJ_aware CC_and NNP_Government JJ_satisfied VBZ_advises NN_safety WDT_which PRP_itself WDT_which NN_committee NNP_Gentleman ,"[is, aware, and, Government, satisfied, advises, safety, which, itself, ROOT, which, committee, Gentleman]",VBZ_is JJ_aware CC_and NNP_Government JJ_satisfied VBZ_advises NN_safety WDT_which PRP_itself WDT_which NN_committee NNP_Gentleman ,"[is, aware, and, Government, satisfied, advises, safety, which, itself, ROOT, which, committee, Gentleman]",VBZ_is JJ_aware CC_and NNP_Government JJ_satisfied VBZ_advises NN_safety WDT_which PRP_itself WDT_which NN_committee NNP_Gentleman ,-3,0,2,1,1,1,1,1,1,2
Can my right hon. Friend give us some idea not so much about the targeting of cruise as about the briefing that he may have given to his right hon. and learned Friend the Foreign Secretary prior to the talks in Stockholm  with regard to cruise particularly?,CanMD myPRP$ rightJJ honNN FriendNNP giveVBP usPRP someDT ideaNN notRB soRB muchJJ aboutIN theDT targetingNN ofIN cruiseNN asIN aboutIN theDT briefingNN thatIN hePRP mayMD haveVB givenVBN toTO hisPRP$ rightJJ honNN andCC learnedVBD FriendNNP theDT ForeignNNP SecretaryNNP priorRB toTO theDT talksNNS inIN StockholmNNP withIN regardNN toTO cruiseVB particularlyRB ,"root(ROOT-0, give-6) aux(give-6, Can-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(give-6, Friend-5) iobj(give-6, us-7) det(idea-9, some-8) dobj(give-6, idea-9) neg(much-12, not-10) advmod(much-12, so-11) dep(idea-9, much-12) case(targeting-15, about-13) det(targeting-15, the-14) nmod:about(much-12, targeting-15) case(cruise-17, of-16) nmod:of(targeting-15, cruise-17) case(briefing-21, as-18) case(briefing-21, about-19) det(briefing-21, the-20) nmod:about(much-12, briefing-21) mark(given-26, that-22) nsubj(given-26, he-23) aux(given-26, may-24) aux(given-26, have-25) ccomp(briefing-21, given-26) case(hon.-30, to-27) nmod:poss(hon.-30, his-28) amod(hon.-30, right-29) nmod:to(given-26, hon.-30) cc(much-12, and-31) dep(idea-9, learned-32) conj:and(much-12, learned-32) xcomp(learned-32, Friend-33) det(Secretary-36, the-34) compound(Secretary-36, Foreign-35) dep(Friend-33, Secretary-36) amod(Secretary-36, prior-37) case(talks-40, to-38) det(talks-40, the-39) nmod:to(prior-37, talks-40) case(Stockholm-42, in-41) nmod:in(talks-40, Stockholm-42) punct(Secretary-36, ,-43) case(regard-45, with-44) nmod:with(Secretary-36, regard-45) case(cruise-47, to-46) nmod:to(regard-45, cruise-47) advmod(Secretary-36, particularly-48) punct(give-6, ?-49)",0,0,0,"root(ROOT, give) ax(give, Can) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(give, Friend) iobj(give, s) det(idea, some) dobj(give, idea) neg(mch, not) advmod(mch, so) dep(idea, mch) case(targeting, abot) det(targeting, the) nmod:abot(mch, targeting) case(crise, of) nmod:of(targeting, crise) case(briefing, as) case(briefing, abot) det(briefing, the) nmod:abot(mch, briefing) mark(given, that) nsbj(given, he) ax(given, may) ax(given, have) ccomp(briefing, given) case(hon., to) nmod:poss(hon., his) amod(hon., right) nmod:to(given, hon.) cc(mch, and) dep(idea, learned) conj:and(mch, learned) xcomp(learned, Friend) det(Secretary, the) compond(Secretary, Foreign) dep(Friend, Secretary) amod(Secretary, prior) case(talks, to) det(talks, the) nmod:to(prior, talks) case(Stockholm, in) nmod:in(talks, Stockholm) pnct(Secretary, ,) case(regard, with) nmod:with(Secretary, regard) case(crise, to) nmod:to(regard, crise) advmod(Secretary, particlarly) pnct(give, ?)","root(,VBP) ax(VBP,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBP,NNP) iobj(VBP,PRP) det(NN,DT) dobj(VBP,NN) neg(JJ,RB) advmod(JJ,RB) dep(NN,JJ) case(NN,IN) det(NN,DT) nmod:abot(JJ,NN) case(VB,IN) nmod:of(NN,VB) case(NN,IN) case(NN,IN) det(NN,DT) nmod:abot(JJ,NN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,MD) ax(VBN,VB) ccomp(NN,VBN) case(VBN,TO) nmod:poss(TO,PRP$) amod(PRP$,JJ) nmod:to(VBN,VBN) cc(JJ,CC) dep(NN,VBD) conj:and(JJ,VBD) xcomp(VBD,NNP) det(NNP,DT) compond(NNP,NNP) dep(NNP,NNP) amod(NNP,RB) case(NNS,TO) det(NNS,DT) nmod:to(RB,NNS) case(NNP,IN) nmod:in(NNS,NNP) pnct(NNP,NNP) case(NN,IN) nmod:with(NNP,NN) case(VB,TO) nmod:to(NN,VB) advmod(NNP,RB) pnct(VBP,VBP)","[ , Secretary, regard, talks, us, right, hon., learned, given, Friend, targeting, much, give, idea, prior, he, Friend, my, cruise, briefing, particularly, ROOT]","[ , Secretary, regard, talks, us, hon., learned, given, Friend, targeting, much, right, idea, prior, his, he, give, Friend, my, cruise, briefing, particularly, ROOT]",9,"[Secretary,  , regard, particularly, much, learned, given, targeting, hon., give, idea, prior, his, right, Friend, cruise, briefing, talks, ROOT]","[Secretary,  , regard, particularly, much, learned, given, targeting, hon., give, idea, prior, his, right, Friend, cruise, briefing, talks, ROOT]",NNP_Secretary NN_regard NNS_talks PRP_us VBD_learned VBN_given NNP_Friend NN_targeting RB_much JJ_right NN_idea RB_prior PRP$_his PRP_he VB_give NNP_Friend PRP$_my NN_cruise NN_briefing RB_particularly ,"[ , Secretary, regard, talks, us, hon., learned, given, Friend, targeting, much, right, idea, prior, his, he, give, Friend, my, cruise, briefing, particularly, ROOT]","[ , Secretary, regard, talks, us, hon., learned, given, Friend, targeting, much, right, idea, prior, his, he, give, Friend, my, cruise, briefing, particularly, ROOT]",NNP_Secretary NN_regard NNS_talks PRP_us VBD_learned VBN_given NNP_Friend NN_targeting RB_much JJ_right NN_idea RB_prior PRP$_his PRP_he VB_give NNP_Friend PRP$_my NN_cruise NN_briefing RB_particularly ,"[ , Secretary, regard, talks, us, hon., learned, given, Friend, targeting, much, right, idea, prior, his, he, give, Friend, my, cruise, briefing, particularly, ROOT]",NNP_Secretary NN_regard NNS_talks PRP_us VBD_learned VBN_given NNP_Friend NN_targeting RB_much JJ_right NN_idea RB_prior PRP$_his PRP_he VB_give NNP_Friend PRP$_my NN_cruise NN_briefing RB_particularly ,"[ , Secretary, regard, talks, us, hon., learned, given, Friend, targeting, much, right, idea, prior, his, he, give, Friend, my, cruise, briefing, particularly, ROOT]",NNP_Secretary NN_regard NNS_talks PRP_us VBD_learned VBN_given NNP_Friend NN_targeting RB_much JJ_right NN_idea RB_prior PRP$_his PRP_he VB_give NNP_Friend PRP$_my NN_cruise NN_briefing RB_particularly ,-3,0,1,1,1,1,1,1,1,1
I am very grateful to my hon. Friend  who I know has taken a great deal of interest in these matters.,IPRP amVBP veryRB gratefulJJ toTO myPRP$ honNN FriendNNP whoWP IPRP knowVBP hasVBZ takenVBN aDT greatJJ dealNN ofIN interestNN inIN theseDT mattersNNS ,"root(ROOT-0, grateful-4) nsubj(grateful-4, I-1) cop(grateful-4, am-2) advmod(grateful-4, very-3) case(Friend-8, to-5) nmod:poss(Friend-8, my-6) compound(Friend-8, hon.-7) nmod:to(grateful-4, Friend-8) punct(Friend-8, ,-9) dobj(know-12, who-10) nsubj(know-12, I-11) acl:relcl(Friend-8, know-12) aux(taken-14, has-13) ccomp(know-12, taken-14) det(deal-17, a-15) amod(deal-17, great-16) dobj(taken-14, deal-17) case(interest-19, of-18) nmod:of(deal-17, interest-19) case(matters-22, in-20) det(matters-22, these-21) nmod:in(taken-14, matters-22) punct(grateful-4, .-23)",0,0,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) advmod(gratefl, very) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gratefl, Friend) pnct(Friend, ,) dobj(know, who) nsbj(know, I) acl:relcl(Friend, know) ax(taken, has) ccomp(know, taken) det(deal, a) amod(deal, great) dobj(taken, deal) case(interest, of) nmod:of(deal, interest) case(matters, in) det(matters, these) nmod:in(taken, matters) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RB) case(NNP,TO) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:to(JJ,NNP) pnct(NNP,NNP) dobj(VBP,WP) nsbj(VBP,PRP) acl:relcl(NNP,VBP) ax(VBN,VBZ) ccomp(VBP,VBN) det(NN,DT) amod(NN,JJ) dobj(VBN,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) det(NNS,DT) nmod:in(VBN,NNS) pnct(JJ,JJ)","[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]","[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]",10,"[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]","[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]",VB_deal VBN_taken PRP_I RB_very PRP_I VB_know PRP$_my JJ_grateful WP_who NNP_Friend ,"[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]","[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]",VB_deal VBN_taken PRP_I RB_very PRP_I VB_know PRP$_my JJ_grateful WP_who NNP_Friend ,"[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]",VB_deal VBN_taken PRP_I RB_very PRP_I VB_know PRP$_my JJ_grateful WP_who NNP_Friend ,"[ , deal, taken, I, very, I, know, my, ROOT, grateful, who, Friend]",VB_deal VBN_taken PRP_I RB_very PRP_I VB_know PRP$_my JJ_grateful WP_who NNP_Friend ,-3,0,2,1,1,0,2,2,2,2
My right hon. and learned Friend the Foreign Secretary and myself  as members of the Government  have a very clear joint objective for the Stockholm talks  and that is to persuade the Soviet Union to take them seriously and seek meaningful arrangements  which are readily available from the Western Alliance.,MyPRP$ rightJJ honNN andCC learnedVBD FriendNNP theDT ForeignNNP SecretaryNNP andCC myselfPRP asIN membersNNS ofIN theDT GovernmentNNP haveVBP aDT veryRB clearJJ jointNN objectiveNN forIN theDT StockholmNNP talksNNS andCC thatDT isVBZ toTO persuadeVB theDT SovietNNP UnionNNP toTO takeVB themPRP seriouslyRB andCC seekVB meaningfulJJ arrangementsNNS whichWDT areVBP readilyRB availableJJ fromIN theDT WesternJJ AllianceNNP ,"root(ROOT-0, hon.-3) nmod:poss(hon.-3, My-1) amod(hon.-3, right-2) cc(hon.-3, and-4) conj:and(hon.-3, learned-5) dobj(learned-5, Friend-6) det(Secretary-9, the-7) compound(Secretary-9, Foreign-8) nsubj(have-19, Secretary-9) cc(Secretary-9, and-10) conj:and(Secretary-9, myself-11) nsubj(have-19, myself-11) punct(Secretary-9, ,-12) case(members-14, as-13) nmod:as(Secretary-9, members-14) case(Government-17, of-15) det(Government-17, the-16) nmod:of(members-14, Government-17) punct(Secretary-9, ,-18) acl:relcl(Friend-6, have-19) det(objective-24, a-20) advmod(clear-22, very-21) amod(objective-24, clear-22) amod(objective-24, joint-23) dobj(have-19, objective-24) case(talks-28, for-25) det(talks-28, the-26) compound(talks-28, Stockholm-27) nmod:for(objective-24, talks-28) punct(Friend-6, ,-29) cc(Friend-6, and-30) nsubj(is-32, that-31) dobj(learned-5, is-32) conj:and(Friend-6, is-32) mark(persuade-34, to-33) xcomp(is-32, persuade-34) det(Union-37, the-35) compound(Union-37, Soviet-36) dobj(persuade-34, Union-37) mark(take-39, to-38) xcomp(persuade-34, take-39) dobj(take-39, them-40) advmod(take-39, seriously-41) cc(take-39, and-42) xcomp(persuade-34, seek-43) conj:and(take-39, seek-43) amod(arrangements-45, meaningful-44) dobj(seek-43, arrangements-45) punct(take-39, ,-46) nsubj(available-50, which-47) cop(available-50, are-48) advmod(available-50, readily-49) ccomp(take-39, available-50) case(Alliance-54, from-51) det(Alliance-54, the-52) compound(Alliance-54, Western-53) nmod:from(available-50, Alliance-54) punct(hon.-3, .-55)",0,0,0,"root(ROOT, hon.) nmod:poss(hon., My) amod(hon., right) cc(hon., and) conj:and(hon., learned) dobj(learned, Friend) det(Secretary, the) compond(Secretary, Foreign) nsbj(have, Secretary) cc(Secretary, and) conj:and(Secretary, myself) nsbj(have, myself) pnct(Secretary, ,) case(members, as) nmod:as(Secretary, members) case(Government, of) det(Government, the) nmod:of(members, Government) pnct(Secretary, ,) acl:relcl(Friend, have) det(objective, a) advmod(clear, very) amod(objective, clear) amod(objective, joint) dobj(have, objective) case(talks, for) det(talks, the) compond(talks, Stockholm) nmod:for(objective, talks) pnct(Friend, ,) cc(Friend, and) nsbj(is, that) dobj(learned, is) conj:and(Friend, is) mark(persade, to) xcomp(is, persade) det(Union, the) compond(Union, Soviet) dobj(persade, Union) mark(take, to) xcomp(persade, take) dobj(take, them) advmod(take, seriosly) cc(take, and) xcomp(persade, seek) conj:and(take, seek) amod(arrangements, meaningfl) dobj(seek, arrangements) pnct(take, ,) nsbj(available, which) cop(available, are) advmod(available, readily) ccomp(take, available) case(Alliance, from) det(Alliance, the) compond(Alliance, Western) nmod:from(available, Alliance) pnct(hon., .)","root(,) nmod:poss(,PRP$) amod(PRP$,JJ) cc(JJ,CC) conj:and(CC,VBD) dobj(VBD,NNP) det(NNP,DT) compond(NNP,NNP) nsbj(VBP,NNP) cc(NNP,CC) conj:and(NNP,PRP) nsbj(VBP,PRP) pnct(NNP,NNP) case(NNS,IN) nmod:as(NNP,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) pnct(NNP,NNP) acl:relcl(NNP,VBP) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) amod(NN,NN) dobj(VBP,NN) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:for(NN,NNS) pnct(NNP,NNP) cc(NNP,CC) nsbj(VBZ,DT) dobj(VBD,VBZ) conj:and(NNP,VBZ) mark(VB,TO) xcomp(VBZ,VB) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) mark(VB,TO) xcomp(VB,VB) dobj(VB,PRP) advmod(VB,RB) cc(VB,CC) xcomp(VB,VB) conj:and(VB,VB) amod(NNS,JJ) dobj(VB,NNS) pnct(VB,VB) nsbj(JJ,WDT) cop(JJ,VBP) advmod(JJ,RB) ccomp(VB,JJ) case(NNP,IN) det(NNP,DT) compond(NNP,JJ) nmod:from(JJ,NNP) pnct(NNP,NNP)","[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]","[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]",10,"[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]","[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]",IN_that JJ_clear NNP_Friend NNS_arrangements NNP_Government VBP_have VB_seek NN_objective CC_and VB_take VB_persuade CC_and PRP_myself VBD_learned VBZ_is JJ_available NNP_Secretary NNS_members ,"[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]","[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]",IN_that JJ_clear NNP_Friend NNS_arrangements NNP_Government VBP_have VB_seek NN_objective CC_and VB_take VB_persuade CC_and PRP_myself VBD_learned VBZ_is JJ_available NNP_Secretary NNS_members ,"[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]",IN_that JJ_clear NNP_Friend NNS_arrangements NNP_Government VBP_have VB_seek NN_objective CC_and VB_take VB_persuade CC_and PRP_myself VBD_learned VBZ_is JJ_available NNP_Secretary NNS_members ,"[ , that, clear, Friend, hon., arrangements, Government, have, seek, objective, and, take, persuade, and, myself, ROOT, learned, is, available, Secretary, members]",IN_that JJ_clear NNP_Friend NNS_arrangements NNP_Government VBP_have VB_seek NN_objective CC_and VB_take VB_persuade CC_and PRP_myself VBD_learned VBZ_is JJ_available NNP_Secretary NNS_members ,-3,0,1,1,1,1,1,1,1,1
The Secretary of State may be reluctant to talk about targeting  but is it not clear from literature published in the United States and in Europe that the cruise missile is targeted on military targets which would be considered significant if a war were to break out in Europe?,TheDT SecretaryNNP ofIN StateNNP mayMD beVB reluctantJJ toTO talkVB aboutIN targetingVBG butCC isVBZ itPRP notRB clearJJ fromIN literatureNN publishedVBN inIN theDT UnitedNNP StatesNNPS andCC inIN EuropeNNP thatIN theDT cruiseNN missileNN isVBZ targetedVBN onIN militaryJJ targetsNNS whichWDT wouldMD beVB consideredVBN significantJJ ifIN aDT warNN wereVBD toTO breakVB outRP inIN EuropeNNP ,"root(ROOT-0, reluctant-7) det(Secretary-2, The-1) nsubj(reluctant-7, Secretary-2) case(State-4, of-3) nmod:of(Secretary-2, State-4) aux(reluctant-7, may-5) cop(reluctant-7, be-6) mark(talk-9, to-8) xcomp(reluctant-7, talk-9) mark(targeting-11, about-10) advcl(talk-9, targeting-11) punct(reluctant-7, ,-12) cc(reluctant-7, but-13) aux(clear-17, is-14) nsubj(clear-17, it-15) neg(clear-17, not-16) conj:but(reluctant-7, clear-17) case(literature-19, from-18) nmod:from(clear-17, literature-19) acl(literature-19, published-20) case(States-24, in-21) det(States-24, the-22) compound(States-24, United-23) nmod:in(published-20, States-24) cc(clear-17, and-25) case(Europe-27, in-26) conj:but(reluctant-7, Europe-27) conj:and(clear-17, Europe-27) mark(targeted-33, that-28) det(missile-31, the-29) compound(missile-31, cruise-30) nsubjpass(targeted-33, missile-31) auxpass(targeted-33, is-32) ccomp(Europe-27, targeted-33) case(targets-36, on-34) amod(targets-36, military-35) nmod:on(targeted-33, targets-36) nsubjpass(considered-40, which-37) aux(considered-40, would-38) auxpass(considered-40, be-39) acl:relcl(targets-36, considered-40) xcomp(considered-40, significant-41) mark(were-45, if-42) det(war-44, a-43) nsubj(were-45, war-44) advcl(considered-40, were-45) mark(break-47, to-46) xcomp(were-45, break-47) compound:prt(break-47, out-48) case(Europe-50, in-49) nmod:in(break-47, Europe-50) punct(reluctant-7, ?-51)",0,0,0,"root(ROOT, relctant) det(Secretary, The) nsbj(relctant, Secretary) case(State, of) nmod:of(Secretary, State) ax(relctant, may) cop(relctant, be) mark(talk, to) xcomp(relctant, talk) mark(targeting, abot) advcl(talk, targeting) pnct(relctant, ,) cc(relctant, bt) ax(clear, is) nsbj(clear, it) neg(clear, not) conj:bt(relctant, clear) case(literatre, from) nmod:from(clear, literatre) acl(literatre, pblished) case(States, in) det(States, the) compond(States, United) nmod:in(pblished, States) cc(clear, and) case(Erope, in) conj:bt(relctant, Erope) conj:and(clear, Erope) mark(targeted, that) det(missile, the) compond(missile, crise) nsbjpass(targeted, missile) axpass(targeted, is) ccomp(Erope, targeted) case(targets, on) amod(targets, military) nmod:on(targeted, targets) nsbjpass(considered, which) ax(considered, wold) axpass(considered, be) acl:relcl(targets, considered) xcomp(considered, significant) mark(were, if) det(war, a) nsbj(were, war) advcl(considered, were) mark(break, to) xcomp(were, break) compond:prt(break, ot) case(Erope, in) nmod:in(break, Erope) pnct(relctant, ?)","root(,JJ) det(NNP,DT) nsbj(JJ,NNP) case(NNP,IN) nmod:of(NNP,NNP) ax(JJ,MD) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) mark(VBG,IN) advcl(VB,VBG) pnct(JJ,JJ) cc(JJ,CC) ax(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) conj:bt(JJ,JJ) case(NN,IN) nmod:from(JJ,NN) acl(NN,VBN) case(NNPS,IN) det(NNPS,DT) compond(NNPS,NNP) nmod:in(VBN,NNPS) cc(JJ,CC) case(NNP,IN) conj:bt(JJ,NNP) conj:and(JJ,NNP) mark(VBN,IN) det(NN,DT) compond(NN,NN) nsbjpass(VBN,NN) axpass(VBN,VBZ) ccomp(NNP,VBN) case(NNS,IN) amod(NNS,JJ) nmod:on(VBN,NNS) nsbjpass(VBN,WDT) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NNS,VBN) xcomp(VBN,JJ) mark(VBD,IN) det(NN,DT) nsbj(VBD,NN) advcl(VBN,VBD) mark(VB,TO) xcomp(VBD,VB) compond:prt(VB,RP) case(NNP,IN) nmod:in(VB,NNP) pnct(JJ,JJ)","[reluctant, Secretary, talk, but, ROOT, State]","[reluctant, Secretary, talk, but, ROOT, State]",11,[ ],[ ],JJ_reluctant NNP_Secretary VB_talk CC_but NNP_State ,"[reluctant, Secretary, talk, but, ROOT, State]","[reluctant, Secretary, talk, but, ROOT, State]",JJ_reluctant NNP_Secretary VB_talk CC_but NNP_State ,"[reluctant, Secretary, talk, but, ROOT, State]",JJ_reluctant NNP_Secretary VB_talk CC_but NNP_State ,"[reluctant, Secretary, talk, but, ROOT, State]",JJ_reluctant NNP_Secretary VB_talk CC_but NNP_State ,-3,0,2,2,1,2,2,2,2,2
Is it not a fact that  rather than be obsessed with cruise missiles  he should try to move [Interruption.],IsVBZ itPRP notRB aDT factNN thatIN ratherRB thanIN beVB obsessedVBN withIN cruiseNN missilesNNS hePRP shouldMD tryVB toTO moveVB [NNP InterruptionNNP ]NN ,"root(ROOT-0, fact-5) cop(fact-5, Is-1) nsubj(fact-5, it-2) neg(fact-5, not-3) det(fact-5, a-4) mark(try-18, that-6) punct(try-18, ,-7) mark(obsessed-11, rather-8) mwe(rather-8, than-9) auxpass(obsessed-11, be-10) advcl(try-18, obsessed-11) case(missiles-14, with-12) compound(missiles-14, cruise-13) nmod:with(obsessed-11, missiles-14) punct(try-18, ,-15) nsubj(try-18, he-16) aux(try-18, should-17) ccomp(fact-5, try-18) mark(move-20, to-19) xcomp(try-18, move-20) punct(Interruption-22, -LSB--21) dep(move-20, Interruption-22) punct(Interruption-22, .-23) punct(fact-5, -RSB--24)",0,0,0,"root(ROOT, fact) cop(fact, Is) nsbj(fact, it) neg(fact, not) det(fact, a) mark(try, that) pnct(try, ,) mark(obsessed, rather) mwe(rather, than) axpass(obsessed, be) advcl(try, obsessed) case(missiles, with) compond(missiles, crise) nmod:with(obsessed, missiles) pnct(try, ,) nsbj(try, he) ax(try, shold) ccomp(fact, try) mark(move, to) xcomp(try, move) pnct(Interrption, ) dep(move, Interrption) pnct(Interrption, .) pnct(fact, )","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) mark(VB,IN) pnct(VB,VB) mark(VBN,RB) mwe(RB,IN) axpass(VBN,VB) advcl(VB,VBN) case(NNS,IN) compond(NNS,NN) nmod:with(VBN,NNS) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) ccomp(NN,VB) mark(VB,TO) xcomp(VB,VB) pnct(NNP,) dep(VB,NNP) pnct(NNP,NNP) pnct(NN,)","[try, fact, obsessed, he, move]","[try, fact, obsessed, he, move]",11,[ ],[ ],VB_try NN_fact VBN_obsessed PRP_he VB_move ,"[try, fact, obsessed, he, move]","[try, fact, obsessed, he, move]",VB_try NN_fact VBN_obsessed PRP_he VB_move ,"[try, fact, obsessed, he, move]",VB_try NN_fact VBN_obsessed PRP_he VB_move ,"[try, fact, obsessed, he, move]",VB_try NN_fact VBN_obsessed PRP_he VB_move ,-3,0,2,0,0,0,0,0,0,0
If we could move NATO away from the first use of nuclear weapons  is it not the case that cruise weapons  like battlefield nuclear weapons  would not be necessary?,IfIN wePRP couldMD moveVB NATONNP awayRB fromIN theDT firstJJ useNN ofIN nuclearJJ weaponsNNS isVBZ itPRP notRB theDT caseNN thatWDT cruiseVBP weaponsNNS likeIN battlefieldJJ nuclearJJ weaponsNNS wouldMD notRB beVB necessaryJJ ,"root(ROOT-0, case-19) mark(move-4, If-1) nsubj(move-4, we-2) aux(move-4, could-3) advcl(case-19, move-4) dobj(move-4, NATO-5) advmod(move-4, away-6) case(use-10, from-7) det(use-10, the-8) amod(use-10, first-9) nmod:from(away-6, use-10) case(weapons-13, of-11) amod(weapons-13, nuclear-12) nmod:of(use-10, weapons-13) punct(case-19, ,-14) cop(case-19, is-15) nsubj(case-19, it-16) neg(case-19, not-17) det(case-19, the-18) nsubj(cruise-21, that-20) acl:relcl(case-19, cruise-21) dobj(cruise-21, weapons-22) punct(cruise-21, ,-23) case(weapons-27, like-24) compound(weapons-27, battlefield-25) amod(weapons-27, nuclear-26) nmod:like(cruise-21, weapons-27) punct(cruise-21, ,-28) aux(necessary-32, would-29) neg(necessary-32, not-30) cop(necessary-32, be-31) dep(cruise-21, necessary-32) punct(case-19, ?-33)",0,0,0,"root(ROOT, case) mark(move, If) nsbj(move, we) ax(move, cold) advcl(case, move) dobj(move, NATO) advmod(move, away) case(se, from) det(se, the) amod(se, first) nmod:from(away, se) case(weapons, of) amod(weapons, nclear) nmod:of(se, weapons) pnct(case, ,) cop(case, is) nsbj(case, it) neg(case, not) det(case, the) nsbj(crise, that) acl:relcl(case, crise) dobj(crise, weapons) pnct(crise, ,) case(weapons, like) compond(weapons, battlefield) amod(weapons, nclear) nmod:like(crise, weapons) pnct(crise, ,) ax(necessary, wold) neg(necessary, not) cop(necessary, be) dep(crise, necessary) pnct(case, ?)","root(,NN) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(NN,VB) dobj(VB,NNP) advmod(VB,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:from(RB,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) pnct(NN,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) nsbj(VBP,WDT) acl:relcl(NN,VBP) dobj(VBP,NNS) pnct(VBP,VBP) case(NNS,IN) compond(NNS,JJ) amod(NNS,JJ) nmod:like(VBP,NNS) pnct(VBP,VBP) ax(JJ,MD) neg(JJ,RB) cop(JJ,VB) dep(VBP,JJ) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Defence if he is satisfied with the present arrangements for the dispersal of cruise missiles from Greenham common for training purposes.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN DefenceNNP ifIN hePRP isVBZ satisfiedJJ withIN theDT presentJJ arrangementsNNS forIN theDT dispersalNN ofIN cruiseNN missilesNNS fromIN GreenhamNNP commonJJ forIN trainingNN purposesNNS ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Defence-7, for-6) nmod:for(asked-1, Defence-7) mark(satisfied-11, if-8) nsubjpass(satisfied-11, he-9) auxpass(satisfied-11, is-10) advcl(asked-1, satisfied-11) case(arrangements-15, with-12) det(arrangements-15, the-13) amod(arrangements-15, present-14) nmod:with(satisfied-11, arrangements-15) case(dispersal-18, for-16) det(dispersal-18, the-17) nmod:for(arrangements-15, dispersal-18) case(missiles-21, of-19) compound(missiles-21, cruise-20) nmod:of(dispersal-18, missiles-21) case(Greenham-23, from-22) nmod:from(dispersal-18, Greenham-23) amod(Greenham-23, common-24) case(purposes-27, for-25) compound(purposes-27, training-26) nmod:for(common-24, purposes-27) punct(asked-1, .-28)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Defence, for) nmod:for(asked, Defence) mark(satisfied, if) nsbjpass(satisfied, he) axpass(satisfied, is) advcl(asked, satisfied) case(arrangements, with) det(arrangements, the) amod(arrangements, present) nmod:with(satisfied, arrangements) case(dispersal, for) det(dispersal, the) nmod:for(arrangements, dispersal) case(missiles, of) compond(missiles, crise) nmod:of(dispersal, missiles) case(Greenham, from) nmod:from(dispersal, Greenham) amod(Greenham, common) case(prposes, for) compond(prposes, training) nmod:for(common, prposes) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(VBN,NNP) mark(JJ,IN) nsbjpass(JJ,PRP) axpass(JJ,VBZ) advcl(VBN,JJ) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:with(JJ,NNS) case(NN,IN) det(NN,DT) nmod:for(NNS,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) case(NNP,IN) nmod:from(NN,NNP) amod(NNP,JJ) case(NNS,IN) compond(NNS,NN) nmod:for(JJ,NNS) pnct(VBN,VBN)","[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]","[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]",13,"[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]","[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]",NNP_State JJ_satisfied PRP_he NNP_Secretary VBN_asked NNS_arrangements NNP_Defence ,"[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]","[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]",NNP_State JJ_satisfied PRP_he NNP_Secretary VBN_asked NNS_arrangements NNP_Defence ,"[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]",NNP_State JJ_satisfied PRP_he NNP_Secretary VBN_asked NNS_arrangements NNP_Defence ,"[State, satisfied, ROOT, he, Secretary, asked, arrangements, Defence]",NNP_State JJ_satisfied PRP_he NNP_Secretary VBN_asked NNS_arrangements NNP_Defence ,-3,0,2,1,1,1,1,1,1,2
As I have already made clear  the arrangements will be adequate to enable the personnel to train fully for their operational role.,AsIN IPRP haveVBP alreadyRB madeVBN clearJJ theDT arrangementsNNS willMD beVB adequateJJ toTO enableVB theDT personnelNNS toTO trainVB fullyRB forIN theirPRP$ operationalJJ roleNN ,"root(ROOT-0, adequate-12) mark(made-5, As-1) nsubj(made-5, I-2) aux(made-5, have-3) advmod(made-5, already-4) advcl(adequate-12, made-5) xcomp(made-5, clear-6) punct(adequate-12, ,-7) det(arrangements-9, the-8) nsubj(adequate-12, arrangements-9) aux(adequate-12, will-10) cop(adequate-12, be-11) mark(enable-14, to-13) xcomp(adequate-12, enable-14) det(personnel-16, the-15) dobj(enable-14, personnel-16) mark(train-18, to-17) xcomp(enable-14, train-18) advmod(train-18, fully-19) case(role-23, for-20) nmod:poss(role-23, their-21) amod(role-23, operational-22) nmod:for(train-18, role-23) punct(adequate-12, .-24)",0,0,0,"root(ROOT, adeqate) mark(made, As) nsbj(made, I) ax(made, have) advmod(made, already) advcl(adeqate, made) xcomp(made, clear) pnct(adeqate, ,) det(arrangements, the) nsbj(adeqate, arrangements) ax(adeqate, will) cop(adeqate, be) mark(enable, to) xcomp(adeqate, enable) det(personnel, the) dobj(enable, personnel) mark(train, to) xcomp(enable, train) advmod(train, flly) case(role, for) nmod:poss(role, their) amod(role, operational) nmod:for(train, role) pnct(adeqate, .)","root(,JJ) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) advcl(JJ,VBN) xcomp(VBN,JJ) pnct(JJ,JJ) det(NNS,DT) nsbj(JJ,NNS) ax(JJ,MD) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) det(NNS,DT) dobj(VB,NNS) mark(VB,TO) xcomp(VB,VB) advmod(VB,RB) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:for(VB,NN) pnct(JJ,JJ)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I am not prepared to discuss details.,IPRP amVBP notRB preparedVBN toTO discussVB detailsNNS ,"root(ROOT-0, prepared-4) nsubjpass(prepared-4, I-1) auxpass(prepared-4, am-2) neg(prepared-4, not-3) mark(discuss-6, to-5) xcomp(prepared-4, discuss-6) dobj(discuss-6, details-7) punct(prepared-4, .-8)",0,0,1,"root(ROOT, prepared) nsbjpass(prepared, I) axpass(prepared, am) neg(prepared, not) mark(discss, to) xcomp(prepared, discss) dobj(discss, details) pnct(prepared, .)","root(,VBN) nsbjpass(VBN,PRP) axpass(VBN,VBP) neg(VBN,RB) mark(VB,TO) xcomp(VBN,VB) dobj(VB,NNS) pnct(VBN,VBN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Secretary of State confirm that to enable cruise missiles to be maintained at a state of operational readiness they will have to be dispersed throughout the countryside?,WillMD theDT SecretaryNNP ofIN StateNNP confirmNN thatWDT toTO enableVB cruiseNN missilesNNS toTO beVB maintainedVBN atIN aDT stateNN ofIN operationalJJ readinessNN theyPRP willMD haveVB toTO beVB dispersedVBN throughoutIN theDT countrysideNN ,"root(ROOT-0, confirm-6) aux(confirm-6, Will-1) det(Secretary-3, the-2) nsubj(confirm-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) dobj(confirm-6, that-7) mark(enable-9, to-8) root(that-7, enable-9) compound(missiles-11, cruise-10) dobj(enable-9, missiles-11) mark(maintained-14, to-12) auxpass(maintained-14, be-13) xcomp(enable-9, maintained-14) case(state-17, at-15) det(state-17, a-16) nmod:at(have-23, state-17) case(readiness-20, of-18) amod(readiness-20, operational-19) nmod:of(state-17, readiness-20) nsubj(have-23, they-21) aux(have-23, will-22) ccomp(maintained-14, have-23) mark(dispersed-26, to-24) auxpass(dispersed-26, be-25) xcomp(have-23, dispersed-26) case(countryside-29, throughout-27) det(countryside-29, the-28) nmod:throughout(dispersed-26, countryside-29) punct(enable-9, ?-30)",0,1,0,"root(ROOT, confirm) ax(confirm, Will) det(Secretary, the) nsbj(confirm, Secretary) case(State, of) nmod:of(Secretary, State) dobj(confirm, that) mark(enable, to) root(that, enable) compond(missiles, crise) dobj(enable, missiles) mark(maintained, to) axpass(maintained, be) xcomp(enable, maintained) case(state, at) det(state, a) nmod:at(have, state) case(readiness, of) amod(readiness, operational) nmod:of(state, readiness) nsbj(have, they) ax(have, will) ccomp(maintained, have) mark(dispersed, to) axpass(dispersed, be) xcomp(have, dispersed) case(contryside, throghot) det(contryside, the) nmod:throghot(dispersed, contryside) pnct(enable, ?)","root(,NN) ax(NN,MD) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) dobj(NN,WDT) mark(VB,TO) root(WDT,VB) compond(NNS,NN) dobj(VB,NNS) mark(VBN,TO) axpass(VBN,VB) xcomp(VB,VBN) case(NN,IN) det(NN,DT) nmod:at(VB,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBN,VB) mark(VBN,TO) axpass(VBN,VB) xcomp(VB,VBN) case(NN,IN) det(NN,DT) nmod:throghot(VBN,NN) pnct(VB,VB)","[confirm, ROOT, State, Secretary, that]","[confirm, ROOT, State, Secretary, that]",15,[ ],[ ],NN_confirm NNP_State NNP_Secretary IN_that ,"[confirm, ROOT, State, Secretary, that]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he say whether  in the event of peaceful demonstrations which will undoubtedly accompany the dispersal of those missiles  the security of those missiles and the policing of those demonstrations will be the responsibility of unarmed British policemen or of armed American service men?,WillMD hePRP sayVB whetherIN inIN theDT eventNN ofIN peacefulJJ demonstrationsNNS whichWDT willMD undoubtedlyRB accompanyVB theDT dispersalNN ofIN thoseDT missilesNNS theDT securityNN ofIN thoseDT missilesNNS andCC theDT policingNN ofIN thoseDT demonstrationsNNS willMD beVB theDT responsibilityNN ofIN unarmedJJ BritishJJ policemenNNS orCC ofIN armedJJ AmericanJJ serviceNN menNNS ,"root(ROOT-0, say-3) aux(say-3, Will-1) nsubj(say-3, he-2) mark(responsibility-36, whether-4) punct(responsibility-36, ,-5) case(event-8, in-6) det(event-8, the-7) nmod:in(responsibility-36, event-8) case(demonstrations-11, of-9) amod(demonstrations-11, peaceful-10) nmod:of(event-8, demonstrations-11) nsubj(accompany-15, which-12) aux(accompany-15, will-13) advmod(accompany-15, undoubtedly-14) acl:relcl(demonstrations-11, accompany-15) det(dispersal-17, the-16) dobj(accompany-15, dispersal-17) case(missiles-20, of-18) det(missiles-20, those-19) nmod:of(dispersal-17, missiles-20) punct(responsibility-36, ,-21) det(security-23, the-22) nsubj(responsibility-36, security-23) case(missiles-26, of-24) det(missiles-26, those-25) nmod:of(security-23, missiles-26) cc(security-23, and-27) det(policing-29, the-28) conj:and(security-23, policing-29) nsubj(responsibility-36, policing-29) case(demonstrations-32, of-30) det(demonstrations-32, those-31) nmod:of(policing-29, demonstrations-32) aux(responsibility-36, will-33) cop(responsibility-36, be-34) det(responsibility-36, the-35) ccomp(say-3, responsibility-36) ccomp(say-3, responsibility-36'') conj:or(responsibility-36, responsibility-36'') case(policemen-40, of-37) amod(policemen-40, unarmed-38) amod(policemen-40, British-39) nmod:of(responsibility-36, policemen-40) cc(responsibility-36, or-41) case(men-46, of-42) amod(men-46, armed-43) amod(men-46, American-44) compound(men-46, service-45) nmod:of(responsibility-36'', men-46) punct(say-3, ?-47)",0,0,0,"root(ROOT, say) ax(say, Will) nsbj(say, he) mark(responsibility, whether) pnct(responsibility, ,) case(event, in) det(event, the) nmod:in(responsibility, event) case(demonstrations, of) amod(demonstrations, peacefl) nmod:of(event, demonstrations) nsbj(accompany, which) ax(accompany, will) advmod(accompany, ndobtedly) acl:relcl(demonstrations, accompany) det(dispersal, the) dobj(accompany, dispersal) case(missiles, of) det(missiles, those) nmod:of(dispersal, missiles) pnct(responsibility, ,) det(secrity, the) nsbj(responsibility, secrity) case(missiles, of) det(missiles, those) nmod:of(secrity, missiles) cc(secrity, and) det(policing, the) conj:and(secrity, policing) nsbj(responsibility, policing) case(demonstrations, of) det(demonstrations, those) nmod:of(policing, demonstrations) ax(responsibility, will) cop(responsibility, be) det(responsibility, the) ccomp(say, responsibility) ccomp(say, responsibility) conj:or(responsibility, responsibility) case(policemen, of) amod(policemen, narmed) amod(policemen, British) nmod:of(responsibility, policemen) cc(responsibility, or) case(men, of) amod(men, armed) amod(men, American) compond(men, service) nmod:of(responsibility, men) pnct(say, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) mark(NN,IN) pnct(NN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) nsbj(VB,WDT) ax(VB,MD) advmod(VB,RB) acl:relcl(NNS,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(NN,NN) det(NN,DT) nsbj(NN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) cc(NN,CC) det(NN,DT) conj:and(NN,NN) nsbj(NN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) ax(NN,MD) cop(NN,VB) det(NN,DT) ccomp(VB,NN) ccomp(VB,NN) conj:or(NN,NN) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:of(NN,NNS) cc(NN,CC) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) pnct(VB,VB)","[he, ROOT, say, responsibility, responsibility]","[he, ROOT, say, responsibility, responsibility]",15,[ ],[ ],PRP_he VB_say NN_responsibility NN_responsibility ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
On the first question that the hon. Gentleman puts to me about the need to deploy off base  the weapons systems could be fired from within the base  but  as the last White Paper made clear  the system is designed to be widely deployed off base.,OnIN theDT firstJJ questionNN thatIN theDT honNN GentlemanNNP putsVBZ toTO mePRP aboutIN theDT needNN toTO deployVB offRP baseNN theDT weaponsNNS systemsNNS couldMD beVB firedVBN fromIN withinIN theDT baseNN butCC asIN theDT lastJJ WhiteNNP PaperNNP madeVBD clearJJ theDT systemNN isVBZ designedVBN toTO beVB widelyRB deployedVBN offRP baseNN ,"root(ROOT-0, fired-25) case(question-4, On-1) det(question-4, the-2) amod(question-4, first-3) nmod:on(fired-25, question-4) mark(puts-9, that-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nsubj(puts-9, Gentleman-8) ccomp(question-4, puts-9) case(me-11, to-10) nmod:to(puts-9, me-11) case(need-14, about-12) det(need-14, the-13) nmod:about(puts-9, need-14) mark(deploy-16, to-15) acl(need-14, deploy-16) compound:prt(deploy-16, off-17) dobj(deploy-16, base-18) punct(fired-25, ,-19) det(systems-22, the-20) compound(systems-22, weapons-21) nsubjpass(fired-25, systems-22) aux(fired-25, could-23) auxpass(fired-25, be-24) case(base-29, from-26) case(base-29, within-27) det(base-29, the-28) nmod:within(fired-25, base-29) punct(fired-25, ,-30) cc(fired-25, but-31) punct(fired-25, ,-32) mark(made-38, as-33) det(Paper-37, the-34) amod(Paper-37, last-35) compound(Paper-37, White-36) nsubj(made-38, Paper-37) advcl(designed-44, made-38) xcomp(made-38, clear-39) punct(designed-44, ,-40) det(system-42, the-41) nsubjpass(designed-44, system-42) auxpass(designed-44, is-43) conj:but(fired-25, designed-44) mark(deployed-48, to-45) auxpass(deployed-48, be-46) advmod(deployed-48, widely-47) xcomp(designed-44, deployed-48) compound:prt(deployed-48, off-49) dobj(deployed-48, base-50) punct(fired-25, .-51)",0,0,0,"root(ROOT, fired) case(qestion, On) det(qestion, the) amod(qestion, first) nmod:on(fired, qestion) mark(pts, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(pts, Gentleman) ccomp(qestion, pts) case(me, to) nmod:to(pts, me) case(need, abot) det(need, the) nmod:abot(pts, need) mark(deploy, to) acl(need, deploy) compond:prt(deploy, off) dobj(deploy, base) pnct(fired, ,) det(systems, the) compond(systems, weapons) nsbjpass(fired, systems) ax(fired, cold) axpass(fired, be) case(base, from) case(base, within) det(base, the) nmod:within(fired, base) pnct(fired, ,) cc(fired, bt) pnct(fired, ,) mark(made, as) det(Paper, the) amod(Paper, last) compond(Paper, White) nsbj(made, Paper) advcl(designed, made) xcomp(made, clear) pnct(designed, ,) det(system, the) nsbjpass(designed, system) axpass(designed, is) conj:bt(fired, designed) mark(deployed, to) axpass(deployed, be) advmod(deployed, widely) xcomp(designed, deployed) compond:prt(deployed, off) dobj(deployed, base) pnct(fired, .)","root(,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VBN,NN) mark(VBZ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(NN,VBZ) case(PRP,TO) nmod:to(VBZ,PRP) case(NN,IN) det(NN,DT) nmod:abot(VBZ,NN) mark(VB,TO) acl(NN,VB) compond:prt(VB,RP) dobj(VB,NN) pnct(VBN,VBN) det(NNS,DT) compond(NNS,NNS) nsbjpass(VBN,NNS) ax(VBN,MD) axpass(VBN,VB) case(NN,IN) case(NN,IN) det(NN,DT) nmod:within(VBN,NN) pnct(VBN,VBN) cc(VBN,CC) pnct(VBN,VBN) mark(VBD,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) advcl(VBN,VBD) xcomp(VBD,JJ) pnct(VBN,VBN) det(NN,DT) nsbjpass(VBN,NN) axpass(VBN,VBZ) conj:bt(VBN,VBN) mark(VBN,TO) axpass(VBN,VB) advmod(VBN,RB) xcomp(VBN,VBN) compond:prt(VBN,RP) dobj(VBN,NN) pnct(VBN,VBN)","[question, me, need, puts, Gentleman]","[question, me, need, puts, Gentleman]",16,"[question, me, need, puts, Gentleman]","[question, me, need, puts, Gentleman]",NN_question PRP_me NN_need VBZ_puts NNP_Gentleman ,"[question, me, need, puts, Gentleman]","[question, me, need, puts, Gentleman]",NN_question PRP_me NN_need VBZ_puts NNP_Gentleman ,"[question, me, need, puts, Gentleman]",NN_question PRP_me NN_need VBZ_puts NNP_Gentleman ,"[question, me, need, puts, Gentleman]",NN_question PRP_me NN_need VBZ_puts NNP_Gentleman ,-3,0,2,0,0,0,0,0,0,0
If training exercises take place  the position is that they will not be training exercises using live weapons systems.,IfIN trainingNN exercisesNNS takeVBP placeNN theDT positionNN isVBZ thatIN theyPRP willMD notRB beVB trainingVBG exercisesNNS usingVBG liveJJ weaponsNNS systemsNNS ,"root(ROOT-0, is-9) mark(take-4, If-1) compound(exercises-3, training-2) nsubj(take-4, exercises-3) advcl(is-9, take-4) dobj(take-4, place-5) punct(is-9, ,-6) det(position-8, the-7) nsubj(is-9, position-8) mark(training-15, that-10) nsubj(training-15, they-11) aux(training-15, will-12) neg(training-15, not-13) aux(training-15, be-14) ccomp(is-9, training-15) dobj(training-15, exercises-16) advcl(training-15, using-17) amod(systems-20, live-18) compound(systems-20, weapons-19) dobj(using-17, systems-20) punct(is-9, .-21)",0,0,0,"root(ROOT, is) mark(take, If) compond(exercises, training) nsbj(take, exercises) advcl(is, take) dobj(take, place) pnct(is, ,) det(position, the) nsbj(is, position) mark(training, that) nsbj(training, they) ax(training, will) neg(training, not) ax(training, be) ccomp(is, training) dobj(training, exercises) advcl(training, sing) amod(systems, live) compond(systems, weapons) dobj(sing, systems) pnct(is, .)","root(,VBZ) mark(VBP,IN) compond(NNS,VBG) nsbj(VBP,NNS) advcl(VBZ,VBP) dobj(VBP,NN) pnct(VBZ,VBZ) det(NN,DT) nsbj(VBZ,NN) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,MD) neg(VBG,RB) ax(VBG,VB) ccomp(VBZ,VBG) dobj(VBG,NNS) advcl(VBG,VBG) amod(NNS,JJ) compond(NNS,NNS) dobj(VBG,NNS) pnct(VBZ,VBZ)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I imagine that the proper answer to the hon. Gentleman in that context is that there will not be a need for the guards accompanying those deployments to be armed with live weapons.,IPRP imagineVBP thatIN theDT properJJ answerNN toTO theDT honNN GentlemanNNP inIN thatDT contextNN isVBZ thatIN thereEX willMD notRB beVB aDT needNN forIN theDT guardsNNS accompanyingVBG thoseDT deploymentsNNS toTO beVB armedVBN withIN liveJJ weaponsNNS ,"root(ROOT-0, imagine-2) nsubj(imagine-2, I-1) mark(is-14, that-3) det(answer-6, the-4) amod(answer-6, proper-5) nsubj(is-14, answer-6) case(Gentleman-10, to-7) det(Gentleman-10, the-8) compound(Gentleman-10, hon.-9) nmod:to(answer-6, Gentleman-10) case(context-13, in-11) det(context-13, that-12) nmod:in(answer-6, context-13) ccomp(imagine-2, is-14) mark(need-21, that-15) expl(need-21, there-16) aux(need-21, will-17) neg(need-21, not-18) cop(need-21, be-19) det(need-21, a-20) ccomp(is-14, need-21) case(guards-24, for-22) det(guards-24, the-23) nmod:for(need-21, guards-24) acl(guards-24, accompanying-25) det(deployments-27, those-26) dobj(accompanying-25, deployments-27) mark(armed-30, to-28) auxpass(armed-30, be-29) acl(deployments-27, armed-30) case(weapons-33, with-31) amod(weapons-33, live-32) nmod:with(armed-30, weapons-33) punct(imagine-2, .-34)",0,0,1,"root(ROOT, imagine) nsbj(imagine, I) mark(is, that) det(answer, the) amod(answer, proper) nsbj(is, answer) case(Gentleman, to) det(Gentleman, the) compond(Gentleman, hon.) nmod:to(answer, Gentleman) case(context, in) det(context, that) nmod:in(answer, context) ccomp(imagine, is) mark(need, that) expl(need, there) ax(need, will) neg(need, not) cop(need, be) det(need, a) ccomp(is, need) case(gards, for) det(gards, the) nmod:for(need, gards) acl(gards, accompanying) det(deployments, those) dobj(accompanying, deployments) mark(armed, to) axpass(armed, be) acl(deployments, armed) case(weapons, with) amod(weapons, live) nmod:with(armed, weapons) pnct(imagine, .)","root(,VBP) nsbj(VBP,PRP) mark(VBZ,IN) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(NN,NNP) case(NN,IN) det(NN,IN) nmod:in(NN,NN) ccomp(VBP,VBZ) mark(NN,IN) expl(NN,EX) ax(NN,MD) neg(NN,RB) cop(NN,VB) det(NN,DT) ccomp(VBZ,NN) case(NNS,IN) det(NNS,DT) nmod:for(NN,NNS) acl(NNS,VBG) det(NNS,DT) dobj(VBG,NNS) mark(VBN,TO) axpass(VBN,VB) acl(NNS,VBN) case(NNS,IN) amod(NNS,JJ) nmod:with(VBN,NNS) pnct(VBP,VBP)","[proper, Gentleman, answer, context, is]","[proper, Gentleman, answer, context, is]",18,"[proper, Gentleman, answer, context, is]","[proper, Gentleman, answer, context, is]",JJ_proper NNP_Gentleman NN_answer NN_context VBZ_is ,"[proper, Gentleman, answer, context, is]","[proper, Gentleman, answer, context, is]",JJ_proper NNP_Gentleman NN_answer NN_context VBZ_is ,"[proper, Gentleman, answer, context, is]",JJ_proper NNP_Gentleman NN_answer NN_context VBZ_is ,"[proper, Gentleman, answer, context, is]",JJ_proper NNP_Gentleman NN_answer NN_context VBZ_is ,-3,0,2,1,1,1,1,1,1,2
asked the Secretary of State for Wales what assessment he has made of the effect of the current miners' strike on the economy in Wales.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN WalesNNP whatWP assessmentNN hePRP hasVBZ madeVBN ofIN theDT effectNN ofIN theDT currentJJ minersNNS 'POS strikeNN onIN theDT economyNN inIN WalesNNP ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Wales-7, for-6) nmod:for(Secretary-3, Wales-7) det(assessment-9, what-8) dobj(made-12, assessment-9) nsubj(made-12, he-10) aux(made-12, has-11) acl:relcl(Secretary-3, made-12) case(effect-15, of-13) det(effect-15, the-14) nmod:of(made-12, effect-15) case(strike-21, of-16) det(miners-19, the-17) amod(miners-19, current-18) nmod:poss(strike-21, miners-19) case(miners-19, '-20) nmod:of(effect-15, strike-21) case(economy-24, on-22) det(economy-24, the-23) nmod:on(effect-15, economy-24) case(Wales-26, in-25) nmod:in(economy-24, Wales-26) punct(asked-1, .-27)",0,0,0,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Wales, for) nmod:for(Secretary, Wales) det(assessment, what) dobj(made, assessment) nsbj(made, he) ax(made, has) acl:relcl(Secretary, made) case(effect, of) det(effect, the) nmod:of(made, effect) case(strike, of) det(miners, the) amod(miners, crrent) nmod:poss(strike, miners) ""case(miners, )"", nmod:of(effect, strike) case(economy, on) det(economy, the) nmod:on(effect, economy) case(Wales, in) nmod:in(economy, Wales) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) det(NN,WP) dobj(VBN,NN) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NNP,VBN) case(NN,IN) det(NN,DT) nmod:of(VBN,NN) case(NN,IN) det(NNS,DT) amod(NNS,JJ) nmod:poss(NN,NNS) case(NNS,POS) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VBN,VBN)","[effect, he, State, Secretary, ROOT, assessment, asked, Wales, made]","[effect, he, State, Secretary, ROOT, assessment, asked, Wales, made]",1,"[effect, State, Secretary, ROOT, assessment, asked, Wales, made]","[effect, State, Secretary, ROOT, assessment, asked, Wales, made]",NN_effect PRP_he NNP_State NNP_Secretary NN_assessment VBN_asked NNP_Wales VBN_made ,"[effect, he, State, Secretary, ROOT, assessment, asked, Wales, made]","[effect, he, State, Secretary, ROOT, assessment, asked, Wales, made]",NN_effect PRP_he NNP_State NNP_Secretary NN_assessment VBN_asked NNP_Wales VBN_made ,"[effect, he, State, Secretary, ROOT, assessment, asked, Wales, made]",NN_effect PRP_he NNP_State NNP_Secretary NN_assessment VBN_asked NNP_Wales VBN_made ,"[effect, he, State, Secretary, ROOT, assessment, asked, Wales, made]",NN_effect PRP_he NNP_State NNP_Secretary NN_assessment VBN_asked NNP_Wales VBN_made ,-3,0,2,0,0,0,0,0,0,0
All reports confirm that Welsh industry generally is continuing to operate without serious disruption.,AllDT reportsNNS confirmVBP thatIN WelshNNP industryNN generallyRB isVBZ continuingVBG toTO operateVB withoutIN seriousJJ disruptionNN ,"root(ROOT-0, confirm-3) det(reports-2, All-1) nsubj(confirm-3, reports-2) mark(continuing-9, that-4) compound(industry-6, Welsh-5) nsubj(continuing-9, industry-6) advmod(continuing-9, generally-7) aux(continuing-9, is-8) ccomp(confirm-3, continuing-9) mark(operate-11, to-10) xcomp(continuing-9, operate-11) case(disruption-14, without-12) amod(disruption-14, serious-13) nmod:without(operate-11, disruption-14) punct(confirm-3, .-15)",0,1,1,"root(ROOT, confirm) det(reports, All) nsbj(confirm, reports) mark(contining, that) compond(indstry, Welsh) nsbj(contining, indstry) advmod(contining, generally) ax(contining, is) ccomp(confirm, contining) mark(operate, to) xcomp(contining, operate) case(disrption, withot) amod(disrption, serios) nmod:withot(operate, disrption) pnct(confirm, .)","root(,VBP) det(NNS,DT) nsbj(VBP,NNS) mark(VBG,IN) compond(NN,NNP) nsbj(VBG,NN) advmod(VBG,RB) ax(VBG,VBZ) ccomp(VBP,VBG) mark(VB,TO) xcomp(VBG,VB) case(NN,IN) amod(NN,JJ) nmod:withot(VB,NN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am rather surprised.,IPRP amVBP ratherRB surprisedJJ ,"root(ROOT-0, surprised-4) nsubjpass(surprised-4, I-1) auxpass(surprised-4, am-2) advmod(surprised-4, rather-3) punct(surprised-4, .-5)",0,0,0,"root(ROOT, srprised) nsbjpass(srprised, I) axpass(srprised, am) advmod(srprised, rather) pnct(srprised, .)","root(,JJ) nsbjpass(JJ,PRP) axpass(JJ,VBP) advmod(JJ,RB) pnct(JJ,JJ)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Where does his statistical evidence come from?,WhereWRB doesVBZ hisPRP$ statisticalJJ evidenceNN comeNN fromIN ,"root(ROOT-0, come-6) advmod(come-6, Where-1) aux(come-6, does-2) nmod:poss(evidence-5, his-3) amod(evidence-5, statistical-4) nsubj(come-6, evidence-5) nmod(come-6, from-7) punct(come-6, ?-8)",0,0,0,"root(ROOT, come) advmod(come, Where) ax(come, does) nmod:poss(evidence, his) amod(evidence, statistical) nsbj(come, evidence) nmod(come, from) pnct(come, ?)","root(,NN) advmod(NN,WRB) ax(NN,VBZ) nmod:poss(NN,PRP$) amod(NN,JJ) nsbj(NN,NN) nmod(NN,IN) pnct(NN,NN)",[ ],"[his, evidence, statistical, come]",3,"[his, evidence, statistical, come]","[his, evidence, statistical, come]",PRP$_his NN_evidence JJ_statistical NN_come ,"[his, evidence, statistical, come]","[his, evidence, statistical, come]",PRP$_his NN_evidence JJ_statistical NN_come ,"[his, evidence, statistical, come]",PRP$_his NN_evidence JJ_statistical NN_come ,"[his, evidence, statistical, come]",PRP$_his NN_evidence JJ_statistical NN_come ,-3,0,2,0,0,0,0,0,0,0
Apparently  the CBI has said something completely different Ask a question.,ApparentlyRB theDT CBINNP hasVBZ saidVBD somethingNN completelyRB differentJJ ,"root(ROOT-0, said-6) advmod(said-6, Apparently-1) punct(said-6, ,-2) det(CBI-4, the-3) nsubj(said-6, CBI-4) aux(said-6, has-5) nsubj(different-9, something-7) advmod(different-9, completely-8) ccomp(said-6, different-9)",0,0,0,"root(ROOT, said) advmod(said, Apparently) pnct(said, ,) det(CBI, the) nsbj(said, CBI) ax(said, has) nsbj(different, something) advmod(different, completely) ccomp(said, different)","root(,VBD) advmod(VBD,RB) pnct(VBD,VBD) det(NNP,DT) nsbj(VBD,NNP) ax(VBD,VBZ) nsbj(JJ,NN) advmod(JJ,RB) ccomp(VBD,JJ)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the hon. Member for Ynys Môn (Mr. Best) wish to intervene?,DoesVBZ theDT honNN MemberNNP forIN YnysNNP MônNNP (( MrNNP BestNNP )) wishNN toTO interveneVB ,"root(ROOT-0, wish-12) aux(wish-12, Does-1) det(Member-4, the-2) compound(Member-4, hon.-3) nsubj(wish-12, Member-4) case(Môn-7, for-5) compound(Môn-7, Ynys-6) nmod:for(Member-4, Môn-7) punct(Best-10, -LRB--8) compound(Best-10, Mr.-9) dep(wish-12, Best-10) punct(Best-10, -RRB--11) mark(intervene-14, to-13) xcomp(wish-12, intervene-14) punct(wish-12, ?-15)",0,0,0,"root(ROOT, wish) ax(wish, Does) det(Member, the) compond(Member, hon.) nsbj(wish, Member) case(M\xf4n, for) compond(M\xf4n, Ynys) nmod:for(Member, M\xf4n) pnct(Best, ) compond(Best, Mr.) dep(wish, Best) pnct(Best, ) mark(intervene, to) xcomp(wish, intervene) pnct(wish, ?)","root(,NN) ax(NN,VBZ) det(NNP,DT) compond(NNP,NNP) nsbj(NN,NNP) case(NNP,IN) compond(IN,NNP) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) dep(NN,NNP) pnct(NNP,) mark(VB,TO) xcomp(NN,VB) pnct(NN,NN)","[Member, wish, intervene, ROOT, Môn, Best]","[Member, wish, intervene, ROOT, Môn, Best]",5,[ ],[ ],NNP_Member VBP_wish VB_intervene NNP_Best ,"[Member, wish, intervene, ROOT, Môn, Best]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Has the Secretary of State looked into the number of people in Wales who have been made unemployed as a result of the mining strike?,HasVBZ theDT SecretaryNNP ofIN StateNNP lookedVBD intoIN theDT numberNN ofIN peopleNNS inIN WalesNNP whoWP haveVBP beenVBN madeVBN unemployedJJ asIN aDT resultNN ofIN theDT miningNN strikeNN ,"root(ROOT-0, looked-6) aux(looked-6, Has-1) det(Secretary-3, the-2) nsubj(looked-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(number-9, into-7) det(number-9, the-8) nmod:into(looked-6, number-9) case(people-11, of-10) nmod:of(number-9, people-11) case(Wales-13, in-12) nmod:in(people-11, Wales-13) nsubjpass(made-17, who-14) aux(made-17, have-15) auxpass(made-17, been-16) acl:relcl(people-11, made-17) xcomp(made-17, unemployed-18) case(result-21, as-19) det(result-21, a-20) nmod:as(made-17, result-21) case(strike-25, of-22) det(strike-25, the-23) compound(strike-25, mining-24) nmod:of(result-21, strike-25) punct(looked-6, ?-26)",0,0,0,"root(ROOT, looked) ax(looked, Has) det(Secretary, the) nsbj(looked, Secretary) case(State, of) nmod:of(Secretary, State) case(nmber, into) det(nmber, the) nmod:into(looked, nmber) case(people, of) nmod:of(nmber, people) case(Wales, in) nmod:in(people, Wales) nsbjpass(made, who) ax(made, have) axpass(made, been) acl:relcl(people, made) xcomp(made, nemployed) case(reslt, as) det(reslt, a) nmod:as(made, reslt) case(strike, of) det(strike, the) compond(strike, mining) nmod:of(reslt, strike) pnct(looked, ?)","root(,VBD) ax(VBD,VBZ) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NN,IN) det(NN,DT) nmod:into(VBD,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNP,IN) nmod:in(NNS,NNP) nsbjpass(VBN,WP) ax(VBN,VBP) axpass(VBN,VBN) acl:relcl(NNS,VBN) xcomp(VBN,JJ) case(NN,IN) det(NN,DT) nmod:as(VBN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) pnct(VBD,VBD)","[ROOT, State, looked, Secretary, number]","[ROOT, State, looked, Secretary, number]",5,[ ],[ ],NNP_State VBN_looked NNP_Secretary NN_number ,"[ROOT, State, looked, Secretary, number]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he realise that billions of pounds have been wiped off the balance of trade figures because of the use of oil instead of coal?,DoesVBZ hePRP realiseVB thatIN billionsNNS ofIN poundsNNS haveVBP beenVBN wipedVBN offRP theDT balanceNN ofIN tradeNN figuresNNS becauseIN ofIN theDT useNN ofIN oilNN insteadRB ofIN coalNN ,"root(ROOT-0, realise-3) aux(realise-3, Does-1) nsubj(realise-3, he-2) det(billions-5, that-4) nsubjpass(wiped-10, billions-5) case(pounds-7, of-6) nmod:of(billions-5, pounds-7) aux(wiped-10, have-8) auxpass(wiped-10, been-9) ccomp(realise-3, wiped-10) compound:prt(wiped-10, off-11) det(balance-13, the-12) dobj(wiped-10, balance-13) case(figures-16, of-14) compound(figures-16, trade-15) nmod:of(balance-13, figures-16) case(use-20, because-17) mwe(because-17, of-18) det(use-20, the-19) nmod:because_of(wiped-10, use-20) case(oil-22, of-21) nmod:of(use-20, oil-22) cc(oil-22, instead-23) mwe(instead-23, of-24) nmod:of(use-20, coal-25) conj:negcc(oil-22, coal-25) punct(realise-3, ?-26)",0,0,0,"root(ROOT, realise) ax(realise, Does) nsbj(realise, he) det(billions, that) nsbjpass(wiped, billions) case(ponds, of) nmod:of(billions, ponds) ax(wiped, have) axpass(wiped, been) ccomp(realise, wiped) compond:prt(wiped, off) det(balance, the) dobj(wiped, balance) case(figres, of) compond(figres, trade) nmod:of(balance, figres) case(se, becase) mwe(becase, of) det(se, the) nmod:becase_of(wiped, se) case(oil, of) nmod:of(se, oil) cc(oil, instead) mwe(instead, of) nmod:of(se, coal) conj:negcc(oil, coal) pnct(realise, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) det(NNS,IN) nsbjpass(VBN,NNS) case(NNS,IN) nmod:of(NNS,NNS) ax(VBN,VBP) axpass(VBN,VBN) ccomp(VB,VBN) compond:prt(VBN,RP) det(NN,DT) dobj(VBN,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) case(NN,IN) mwe(IN,IN) det(NN,DT) nmod:becase_of(VBN,NN) case(NN,IN) nmod:of(NN,NN) cc(NN,RB) mwe(RB,IN) nmod:of(NN,NN) conj:negcc(NN,NN) pnct(VB,VB)","[realise, ROOT, wiped, he]","[realise, ROOT, wiped, he]",5,[ ],[ ],VBP_realise VBN_wiped PRP_he ,"[realise, ROOT, wiped, he]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he appreciate the different views that industrialists are expressing about the number of people being made unemployed by the miners' strike?,DoesVBZ hePRP appreciateVB theDT differentJJ viewsNNS thatIN industrialistsNNS areVBP expressingVBG aboutIN theDT numberNN ofIN peopleNNS beingVBG madeVBN unemployedVBN byIN theDT minersNNS 'POS strikeNN ,"root(ROOT-0, appreciate-3) aux(appreciate-3, Does-1) nsubj(appreciate-3, he-2) det(views-6, the-4) amod(views-6, different-5) dobj(appreciate-3, views-6) dobj(expressing-10, that-7) nsubj(expressing-10, industrialists-8) aux(expressing-10, are-9) acl:relcl(views-6, expressing-10) case(number-13, about-11) det(number-13, the-12) nmod:about(expressing-10, number-13) case(people-15, of-14) nmod:of(number-13, people-15) auxpass(made-17, being-16) acl(people-15, made-17) xcomp(made-17, unemployed-18) case(strike-23, by-19) det(miners-21, the-20) nmod:poss(strike-23, miners-21) case(miners-21, '-22) nmod:by(unemployed-18, strike-23) punct(appreciate-3, ?-24)",0,0,0,"root(ROOT, appreciate) ax(appreciate, Does) nsbj(appreciate, he) det(views, the) amod(views, different) dobj(appreciate, views) dobj(expressing, that) nsbj(expressing, indstrialists) ax(expressing, are) acl:relcl(views, expressing) case(nmber, abot) det(nmber, the) nmod:abot(expressing, nmber) case(people, of) nmod:of(nmber, people) axpass(made, being) acl(people, made) xcomp(made, nemployed) case(strike, by) det(miners, the) nmod:poss(strike, miners) ""case(miners, )"", nmod:by(nemployed, strike) pnct(appreciate, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) dobj(VBG,IN) nsbj(VBG,NNS) ax(VBG,VBP) acl:relcl(NNS,VBG) case(NN,IN) det(NN,DT) nmod:abot(VBG,NN) case(NNS,IN) nmod:of(NN,NNS) axpass(VBN,VBG) acl(NNS,VBN) xcomp(VBN,VBN) case(NN,IN) det(NNS,DT) nmod:poss(NN,NNS) case(NNS,POS) nmod:by(VBN,NN) pnct(VB,VB)","[he, ROOT, appreciate, views]","[he, ROOT, appreciate, views]",5,[ ],[ ],PRP_he VB_appreciate NNS_views ,"[he, ROOT, appreciate, views]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I receive daily reports of the industrial situation in Wales.,IPRP receiveVBP dailyJJ reportsNNS ofIN theDT industrialJJ situationNN inIN WalesNNP ,"root(ROOT-0, receive-2) nsubj(receive-2, I-1) amod(reports-4, daily-3) dobj(receive-2, reports-4) case(situation-8, of-5) det(situation-8, the-6) amod(situation-8, industrial-7) nmod:of(reports-4, situation-8) case(Wales-10, in-9) nmod:in(situation-8, Wales-10) punct(receive-2, .-11)",0,1,0,"root(ROOT, receive) nsbj(receive, I) amod(reports, daily) dobj(receive, reports) case(sitation, of) det(sitation, the) amod(sitation, indstrial) nmod:of(reports, sitation) case(Wales, in) nmod:in(sitation, Wales) pnct(receive, .)","root(,VBP) nsbj(VBP,PRP) amod(NNS,JJ) dobj(VBP,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The CBI says that the coal dispute has had little impact so far although  regrettably of course  it is having an impact on the coal industry.,TheDT CBINNP saysVBZ thatIN theDT coalNN disputeNN hasVBZ hadVBN littleJJ impactNN soRB farRB althoughIN regrettablyRB ofIN courseNN itPRP isVBZ havingVBG anDT impactNN onIN theDT coalNN industryNN ,"root(ROOT-0, says-3) det(CBI-2, The-1) nsubj(says-3, CBI-2) mark(had-9, that-4) det(dispute-7, the-5) compound(dispute-7, coal-6) nsubj(had-9, dispute-7) aux(had-9, has-8) ccomp(says-3, had-9) amod(impact-11, little-10) dobj(had-9, impact-11) advmod(far-13, so-12) advmod(had-9, far-13) mark(having-22, although-14) punct(having-22, ,-15) advmod(having-22, regrettably-16) case(course-18, of-17) nmod:of(regrettably-16, course-18) punct(having-22, ,-19) nsubj(having-22, it-20) aux(having-22, is-21) advcl(far-13, having-22) det(impact-24, an-23) dobj(having-22, impact-24) case(industry-28, on-25) det(industry-28, the-26) compound(industry-28, coal-27) nmod:on(impact-24, industry-28) punct(says-3, .-29)",0,0,0,"root(ROOT, says) det(CBI, The) nsbj(says, CBI) mark(had, that) det(dispte, the) compond(dispte, coal) nsbj(had, dispte) ax(had, has) ccomp(says, had) amod(impact, little) dobj(had, impact) advmod(far, so) advmod(had, far) mark(having, althogh) pnct(having, ,) advmod(having, regrettably) case(corse, of) nmod:of(regrettably, corse) pnct(having, ,) nsbj(having, it) ax(having, is) advcl(far, having) det(impact, an) dobj(having, impact) case(indstry, on) det(indstry, the) compond(indstry, coal) nmod:on(impact, indstry) pnct(says, .)","root(,VBZ) det(NNP,DT) nsbj(VBZ,NNP) mark(VBN,IN) det(NN,DT) compond(NN,NN) nsbj(VBN,NN) ax(VBN,VBZ) ccomp(VBZ,VBN) amod(NN,JJ) dobj(VBN,NN) advmod(RB,RB) advmod(VBN,RB) mark(VBG,IN) pnct(VBG,VBG) advmod(VBG,RB) case(NN,IN) nmod:of(RB,NN) pnct(VBG,VBG) nsbj(VBG,PRP) ax(VBG,VBZ) advcl(RB,VBG) det(NN,DT) dobj(VBG,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:on(NN,NN) pnct(VBZ,VBZ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I hope that the hon. Gentleman will encourage those who are seeking to persuade the miners in this damaging dispute.,IPRP hopeVBP thatIN theDT honNN GentlemanNNP willMD encourageVB thoseDT whoWP areVBP seekingVBG toTO persuadeVB theDT minersNNS inIN thisDT damagingJJ disputeNN ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(encourage-8, that-3) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) nsubj(encourage-8, Gentleman-6) aux(encourage-8, will-7) ccomp(hope-2, encourage-8) dobj(encourage-8, those-9) nsubj(seeking-12, who-10) aux(seeking-12, are-11) acl:relcl(those-9, seeking-12) mark(persuade-14, to-13) xcomp(seeking-12, persuade-14) det(miners-16, the-15) dobj(persuade-14, miners-16) case(dispute-20, in-17) det(dispute-20, this-18) amod(dispute-20, damaging-19) nmod:in(persuade-14, dispute-20) punct(hope-2, .-21)",0,0,1,"root(ROOT, hope) nsbj(hope, I) mark(encorage, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(encorage, Gentleman) ax(encorage, will) ccomp(hope, encorage) dobj(encorage, those) nsbj(seeking, who) ax(seeking, are) acl:relcl(those, seeking) mark(persade, to) xcomp(seeking, persade) det(miners, the) dobj(persade, miners) case(dispte, in) det(dispte, this) amod(dispte, damaging) nmod:in(persade, dispte) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(VBP,VB) dobj(VB,DT) nsbj(VBG,WP) ax(VBG,VBP) acl:relcl(DT,VBG) mark(VB,TO) xcomp(VBG,VB) det(NNS,DT) dobj(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VB,NN) pnct(VBP,VBP)","[those, Gentleman, hope, encourage]","[those, Gentleman, hope, encourage]",6,[ ],[ ],DT_those NNP_Gentleman VBP_hope VB_encourage ,"[those, Gentleman, hope, encourage]","[those, Gentleman, hope, encourage]",DT_those NNP_Gentleman VBP_hope VB_encourage ,"[those, Gentleman, hope, encourage]",DT_those NNP_Gentleman VBP_hope VB_encourage ,"[those, Gentleman, hope, encourage]",DT_those NNP_Gentleman VBP_hope VB_encourage ,-3,0,2,1,1,1,2,2,2,2
Has my right hon. Friend been able to make any estimate of the number of jobs in the coal industry in Wales which may have been lost as a result of the loss of markets in this strike  and has he any assessment of the number of pits which may have become permanently damaged in consequence of the strike?,HasNNP myPRP$ rightJJ honNN FriendNNP beenVBN ableJJ toTO makeVB anyDT estimateNN ofIN theDT numberNN ofIN jobsNNS inIN theDT coalNN industryNN inIN WalesNNP whichWDT mayMD haveVB beenVBN lostVBN asIN aDT resultNN ofIN theDT lossNN ofIN marketsNNS inIN thisDT strikeNN andCC hasVBZ hePRP anyDT assessmentNN ofIN theDT numberNN ofIN pitsNNS whichWDT mayMD haveVB becomeVBN permanentlyRB damagedVBN inIN consequenceNN ofIN theDT strikeNN ,"root(ROOT-0, able-7) aux(able-7, Has-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(able-7, Friend-5) nsubj(has-41, Friend-5) cop(able-7, been-6) mark(make-9, to-8) xcomp(able-7, make-9) det(estimate-11, any-10) dobj(make-9, estimate-11) case(number-14, of-12) det(number-14, the-13) nmod:of(estimate-11, number-14) case(jobs-16, of-15) nmod:of(number-14, jobs-16) case(industry-20, in-17) det(industry-20, the-18) compound(industry-20, coal-19) nmod:in(jobs-16, industry-20) case(Wales-22, in-21) nmod:in(industry-20, Wales-22) nsubjpass(lost-27, which-23) aux(lost-27, may-24) aux(lost-27, have-25) auxpass(lost-27, been-26) acl:relcl(jobs-16, lost-27) case(result-30, as-28) det(result-30, a-29) nmod:as(lost-27, result-30) case(loss-33, of-31) det(loss-33, the-32) nmod:of(result-30, loss-33) case(markets-35, of-34) nmod:of(loss-33, markets-35) case(strike-38, in-36) det(strike-38, this-37) nmod:in(loss-33, strike-38) punct(able-7, ,-39) cc(able-7, and-40) conj:and(able-7, has-41) dobj(has-41, he-42) det(assessment-44, any-43) dep(he-42, assessment-44) case(number-47, of-45) det(number-47, the-46) nmod:of(assessment-44, number-47) case(pits-49, of-48) nmod:of(number-47, pits-49) nsubj(become-53, which-50) aux(become-53, may-51) aux(become-53, have-52) acl:relcl(pits-49, become-53) advmod(damaged-55, permanently-54) xcomp(become-53, damaged-55) case(consequence-57, in-56) nmod:in(damaged-55, consequence-57) case(strike-60, of-58) det(strike-60, the-59) nmod:of(consequence-57, strike-60) punct(able-7, ?-61)",0,0,0,"root(ROOT, able) ax(able, Has) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(able, Friend) nsbj(has, Friend) cop(able, been) mark(make, to) xcomp(able, make) det(estimate, any) dobj(make, estimate) case(nmber, of) det(nmber, the) nmod:of(estimate, nmber) case(jobs, of) nmod:of(nmber, jobs) case(indstry, in) det(indstry, the) compond(indstry, coal) nmod:in(jobs, indstry) case(Wales, in) nmod:in(indstry, Wales) nsbjpass(lost, which) ax(lost, may) ax(lost, have) axpass(lost, been) acl:relcl(jobs, lost) case(reslt, as) det(reslt, a) nmod:as(lost, reslt) case(loss, of) det(loss, the) nmod:of(reslt, loss) case(markets, of) nmod:of(loss, markets) case(strike, in) det(strike, this) nmod:in(loss, strike) pnct(able, ,) cc(able, and) conj:and(able, has) dobj(has, he) det(assessment, any) dep(he, assessment) case(nmber, of) det(nmber, the) nmod:of(assessment, nmber) case(pits, of) nmod:of(nmber, pits) nsbj(become, which) ax(become, may) ax(become, have) acl:relcl(pits, become) advmod(damaged, permanently) xcomp(become, damaged) case(conseqence, in) nmod:in(damaged, conseqence) case(strike, of) det(strike, the) nmod:of(conseqence, strike) pnct(able, ?)","root(,JJ) ax(JJ,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(JJ,NNP) nsbj(VBZ,NNP) cop(JJ,VBN) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NNS,NN) case(NNP,IN) nmod:in(NN,NNP) nsbjpass(VBN,WDT) ax(VBN,MD) ax(VBN,VB) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:as(VBN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(JJ,JJ) cc(JJ,CC) conj:and(JJ,VBZ) dobj(VBZ,PRP) det(NN,DT) dep(PRP,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNS,IN) nmod:of(NN,NNS) nsbj(VBN,WDT) ax(VBN,MD) ax(VBN,VB) acl:relcl(NNS,VBN) advmod(VBN,RB) xcomp(VBN,VBN) case(NN,IN) nmod:in(VBN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(JJ,JJ)","[has, right, make, Friend, able, assessment, my, number, ROOT, he, and]","[has, make, Friend, able, assessment, my, number, ROOT, he, and]",7,"[he, assessment, has, number]","[he, assessment, has, number]",VBZ_has VB_make NNP_Friend JJ_able NN_assessment PRP$_my NN_number PRP_he CC_and ,"[has, make, Friend, able, assessment, my, number, ROOT, he, and]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have no figures  but it must be clear that if markets are lost  or if pits are not adequately maintained  there may be consequences in terms of future job losses.,IPRP haveVBP noDT figuresNNS butCC itPRP mustMD beVB clearJJ thatIN ifIN marketsNNS areVBP lostVBN orCC ifIN pitsNNS areVBP notRB adequatelyRB maintainedVBN thereEX mayMD beVB consequencesNNS inIN termsNNS ofIN futureJJ jobNN lossesNNS ,"root(ROOT-0, have-2) nsubj(have-2, I-1) neg(figures-4, no-3) dobj(have-2, figures-4) punct(have-2, ,-5) cc(have-2, but-6) nsubj(clear-10, it-7) aux(clear-10, must-8) cop(clear-10, be-9) conj:but(have-2, clear-10) mark(consequences-28, that-11) mark(lost-15, if-12) nsubjpass(lost-15, markets-13) auxpass(lost-15, are-14) advcl(consequences-28, lost-15) punct(lost-15, ,-16) cc(lost-15, or-17) mark(maintained-23, if-18) nsubjpass(maintained-23, pits-19) auxpass(maintained-23, are-20) neg(maintained-23, not-21) advmod(maintained-23, adequately-22) conj:or(lost-15, maintained-23) advcl(consequences-28, maintained-23) punct(consequences-28, ,-24) expl(consequences-28, there-25) aux(consequences-28, may-26) cop(consequences-28, be-27) ccomp(clear-10, consequences-28) case(terms-30, in-29) nmod:in(consequences-28, terms-30) case(losses-34, of-31) amod(losses-34, future-32) compound(losses-34, job-33) nmod:of(terms-30, losses-34) punct(have-2, .-35)",0,0,0,"root(ROOT, have) nsbj(have, I) neg(figres, no) dobj(have, figres) pnct(have, ,) cc(have, bt) nsbj(clear, it) ax(clear, mst) cop(clear, be) conj:bt(have, clear) mark(conseqences, that) mark(lost, if) nsbjpass(lost, markets) axpass(lost, are) advcl(conseqences, lost) pnct(lost, ,) cc(lost, or) mark(maintained, if) nsbjpass(maintained, pits) axpass(maintained, are) neg(maintained, not) advmod(maintained, adeqately) conj:or(lost, maintained) advcl(conseqences, maintained) pnct(conseqences, ,) expl(conseqences, there) ax(conseqences, may) cop(conseqences, be) ccomp(clear, conseqences) case(terms, in) nmod:in(conseqences, terms) case(losses, of) amod(losses, ftre) compond(losses, job) nmod:of(terms, losses) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) neg(NNS,DT) dobj(VBP,NNS) pnct(VBP,VBP) cc(VBP,CC) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) conj:bt(VBP,JJ) mark(NNS,IN) mark(VBN,IN) nsbjpass(VBN,NNS) axpass(VBN,VBP) advcl(NNS,VBN) pnct(VBN,VBN) cc(VBN,CC) mark(VBN,IN) nsbjpass(VBN,NNS) axpass(VBN,VBP) neg(VBN,RB) advmod(VBN,RB) conj:or(VBN,VBN) advcl(NNS,VBN) pnct(NNS,NNS) expl(NNS,EX) ax(NNS,MD) cop(NNS,VB) ccomp(JJ,NNS) case(NNS,IN) nmod:in(NNS,NNS) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:of(NNS,NNS) pnct(VBP,VBP)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We understand that  as part of a package deal  the NCB is offering new investment in the affected areas.,WePRP understandVBP thatIN asIN partNN ofIN aDT packageNN dealNN theDT NCBNNP isVBZ offeringVBG newJJ investmentNN inIN theDT affectedJJ areasNNS ,"root(ROOT-0, understand-2) nsubj(understand-2, We-1) mark(offering-15, that-3) punct(offering-15, ,-4) case(part-6, as-5) nmod:as(offering-15, part-6) case(deal-10, of-7) det(deal-10, a-8) compound(deal-10, package-9) nmod:of(part-6, deal-10) punct(offering-15, ,-11) det(NCB-13, the-12) nsubj(offering-15, NCB-13) aux(offering-15, is-14) ccomp(understand-2, offering-15) amod(investment-17, new-16) dobj(offering-15, investment-17) case(areas-21, in-18) det(areas-21, the-19) amod(areas-21, affected-20) nmod:in(investment-17, areas-21) punct(understand-2, .-22)",0,0,0,"root(ROOT, nderstand) nsbj(nderstand, We) mark(offering, that) pnct(offering, ,) case(part, as) nmod:as(offering, part) case(deal, of) det(deal, a) compond(deal, package) nmod:of(part, deal) pnct(offering, ,) det(NCB, the) nsbj(offering, NCB) ax(offering, is) ccomp(nderstand, offering) amod(investment, new) dobj(offering, investment) case(areas, in) det(areas, the) amod(areas, affected) nmod:in(investment, areas) pnct(nderstand, .)","root(,VBP) nsbj(VBP,PRP) mark(VBG,IN) pnct(VBG,VBG) case(NN,IN) nmod:as(VBG,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) pnct(VBG,VBG) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBZ) ccomp(VBP,VBG) amod(NN,JJ) dobj(VBG,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:in(NN,NNS) pnct(VBP,VBP)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If that is so  will the Secretary of State ensure that the Margam pit investment is high on that agenda?,IfIN thatDT isVBZ soRB willMD theDT SecretaryNNP ofIN StateNNP ensureVB thatIN theDT MargamNNP pitNN investmentNN isVBZ highJJ onIN thatDT agendaNN ,"root(ROOT-0, ensure-11) mark(so-4, If-1) nsubj(so-4, that-2) cop(so-4, is-3) advcl(ensure-11, so-4) punct(ensure-11, ,-5) aux(ensure-11, will-6) det(Secretary-8, the-7) nsubj(ensure-11, Secretary-8) case(State-10, of-9) nmod:of(Secretary-8, State-10) mark(high-18, that-12) det(investment-16, the-13) compound(investment-16, Margam-14) compound(investment-16, pit-15) nsubj(high-18, investment-16) cop(high-18, is-17) ccomp(ensure-11, high-18) case(agenda-21, on-19) det(agenda-21, that-20) nmod:on(high-18, agenda-21) punct(ensure-11, ?-22)",0,0,0,"root(ROOT, ensre) mark(so, If) nsbj(so, that) cop(so, is) advcl(ensre, so) pnct(ensre, ,) ax(ensre, will) det(Secretary, the) nsbj(ensre, Secretary) case(State, of) nmod:of(Secretary, State) mark(high, that) det(investment, the) compond(investment, Margam) compond(investment, pit) nsbj(high, investment) cop(high, is) ccomp(ensre, high) case(agenda, on) det(agenda, that) nmod:on(high, agenda) pnct(ensre, ?)","root(,VB) mark(RB,IN) nsbj(RB,DT) cop(RB,VBZ) advcl(VB,RB) pnct(VB,VB) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(JJ,DT) det(NN,DT) compond(NN,NNP) compond(NN,NN) nsbj(JJ,NN) cop(JJ,VBZ) ccomp(VB,JJ) case(NN,IN) det(NN,DT) nmod:on(JJ,NN) pnct(VB,VB)","[State, ROOT, ensure, high, so, Secretary]","[State, ROOT, ensure, high, so, Secretary]",9,[ ],[ ],NNP_State VB_ensure JJ_high RB_so NNP_Secretary ,"[State, ROOT, ensure, high, so, Secretary]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have already told the House that the board is reconsidering a possible investment in the Margam pit  and it is of course for the board to take decisions on that matter.,IPRP haveVBP alreadyRB toldVBN theDT HouseNNP thatIN theDT boardNN isVBZ reconsideringVBG aDT possibleJJ investmentNN inIN theDT MargamNNP pitNN andCC itPRP isVBZ ofIN courseNN forIN theDT boardNN toTO takeVB decisionsNNS onIN thatDT matterNN ,"root(ROOT-0, told-4) nsubj(told-4, I-1) aux(told-4, have-2) advmod(told-4, already-3) det(House-6, the-5) dobj(told-4, House-6) mark(reconsidering-11, that-7) det(board-9, the-8) nsubj(reconsidering-11, board-9) aux(reconsidering-11, is-10) ccomp(told-4, reconsidering-11) det(investment-14, a-12) amod(investment-14, possible-13) dobj(reconsidering-11, investment-14) case(pit-18, in-15) det(pit-18, the-16) compound(pit-18, Margam-17) nmod:in(investment-14, pit-18) punct(reconsidering-11, ,-19) cc(reconsidering-11, and-20) nsubj(course-24, it-21) cop(course-24, is-22) case(course-24, of-23) ccomp(told-4, course-24) conj:and(reconsidering-11, course-24) case(board-27, for-25) det(board-27, the-26) nmod:for(course-24, board-27) mark(take-29, to-28) acl(course-24, take-29) dobj(take-29, decisions-30) case(matter-33, on-31) det(matter-33, that-32) nmod:on(take-29, matter-33) punct(told-4, .-34)",0,0,0,"root(ROOT, told) nsbj(told, I) ax(told, have) advmod(told, already) det(Hose, the) dobj(told, Hose) mark(reconsidering, that) det(board, the) nsbj(reconsidering, board) ax(reconsidering, is) ccomp(told, reconsidering) det(investment, a) amod(investment, possible) dobj(reconsidering, investment) case(pit, in) det(pit, the) compond(pit, Margam) nmod:in(investment, pit) pnct(reconsidering, ,) cc(reconsidering, and) nsbj(corse, it) cop(corse, is) case(corse, of) ccomp(told, corse) conj:and(reconsidering, corse) case(board, for) det(board, the) nmod:for(corse, board) mark(take, to) acl(corse, take) dobj(take, decisions) case(matter, on) det(matter, that) nmod:on(take, matter) pnct(told, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) det(NNP,DT) dobj(VBN,NNP) mark(VBG,DT) det(NN,DT) nsbj(VBG,NN) ax(VBG,VBZ) ccomp(VBN,VBG) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:in(NN,NN) pnct(VBG,VBG) cc(VBG,CC) nsbj(NN,PRP) cop(NN,VBZ) case(NN,IN) ccomp(VBN,NN) conj:and(VBG,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) mark(VB,TO) acl(NN,VB) dobj(VB,NNS) case(NN,IN) det(NN,DT) nmod:on(VB,NN) pnct(VBN,VBN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What remains true  as it has throughout the dispute  is that a large number of miners are continuing to work  and many more wish to work.,WhatWP remainsVBZ trueJJ asIN itPRP hasVBZ throughoutIN theDT disputeNN isVBZ thatIN aDT largeJJ numberNN ofIN minersNNS areVBP continuingVBG toTO workVB andCC manyJJ moreJJR wishJJ toTO workVB ,"root(ROOT-0, remains-2) nsubj(remains-2, What-1) xcomp(remains-2, true-3) punct(remains-2, ,-4) mark(has-7, as-5) nsubj(has-7, it-6) advcl(remains-2, has-7) case(dispute-10, throughout-8) det(dispute-10, the-9) nmod:throughout(has-7, dispute-10) punct(remains-2, ,-11) xcomp(remains-2, is-12) mark(continuing-20, that-13) det(number-16, a-14) amod(number-16, large-15) nsubj(continuing-20, number-16) case(miners-18, of-17) nmod:of(number-16, miners-18) aux(continuing-20, are-19) ccomp(is-12, continuing-20) mark(work-22, to-21) xcomp(continuing-20, work-22) punct(continuing-20, ,-23) cc(continuing-20, and-24) amod(wish-27, many-25) amod(wish-27, more-26) ccomp(is-12, wish-27) conj:and(continuing-20, wish-27) mark(work-29, to-28) acl(wish-27, work-29) punct(remains-2, .-30)",0,0,0,"root(ROOT, remains) nsbj(remains, What) xcomp(remains, tre) pnct(remains, ,) mark(has, as) nsbj(has, it) advcl(remains, has) case(dispte, throghot) det(dispte, the) nmod:throghot(has, dispte) pnct(remains, ,) xcomp(remains, is) mark(contining, that) det(nmber, a) amod(nmber, large) nsbj(contining, nmber) case(miners, of) nmod:of(nmber, miners) ax(contining, are) ccomp(is, contining) mark(work, to) xcomp(contining, work) pnct(contining, ,) cc(contining, and) amod(wish, many) amod(wish, more) ccomp(is, wish) conj:and(contining, wish) mark(work, to) acl(wish, work) pnct(remains, .)","root(,VBZ) nsbj(VBZ,WP) xcomp(VBZ,JJ) pnct(VBZ,VBZ) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VBZ,VBZ) case(NN,IN) det(NN,DT) nmod:throghot(VBZ,NN) pnct(VBZ,VBZ) xcomp(VBZ,VBZ) mark(VBG,IN) det(NN,DT) amod(NN,JJ) nsbj(VBG,NN) case(NNS,IN) nmod:of(NN,NNS) ax(VBG,VBP) ccomp(VBZ,VBG) mark(VB,TO) xcomp(VBG,VB) pnct(VBG,VBG) cc(VBG,CC) amod(JJ,JJ) amod(JJ,JJR) ccomp(VBZ,JJ) conj:and(VBG,JJ) mark(VB,TO) acl(JJ,VB) pnct(VBZ,VBZ)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
As the great majority of miners who are affected by closures have been offered jobs in other pits  will the Secretary of State urge the miners to go back to work forthwith in Wales?,AsIN theDT greatJJ majorityNN ofIN minersNNS whoWP areVBP affectedVBN byIN closuresNNS haveVBP beenVBN offeredVBN jobsNNS inIN otherJJ pitsNNS willMD theDT SecretaryNNP ofIN StateNNP urgeIN theDT minersNNS toTO goVB backRB toTO workVB forthwithNN inIN WalesNNP ,"root(ROOT-0, offered-14) case(majority-4, As-1) det(majority-4, the-2) amod(majority-4, great-3) nmod:as(offered-14, majority-4) case(miners-6, of-5) nmod:of(majority-4, miners-6) nsubjpass(affected-9, who-7) auxpass(affected-9, are-8) acl:relcl(miners-6, affected-9) case(closures-11, by-10) nmod:agent(affected-9, closures-11) aux(offered-14, have-12) auxpass(offered-14, been-13) dobj(offered-14, jobs-15) case(pits-18, in-16) amod(pits-18, other-17) nmod:in(jobs-15, pits-18) punct(offered-14, ,-19) aux(urge-25, will-20) det(Secretary-22, the-21) nsubj(urge-25, Secretary-22) case(State-24, of-23) nmod:of(Secretary-22, State-24) parataxis(offered-14, urge-25) det(miners-27, the-26) dobj(urge-25, miners-27) mark(go-29, to-28) xcomp(urge-25, go-29) advmod(go-29, back-30) mark(work-32, to-31) xcomp(go-29, work-32) advmod(work-32, forthwith-33) case(Wales-35, in-34) nmod:in(forthwith-33, Wales-35) punct(offered-14, ?-36)",0,0,0,"root(ROOT, offered) case(majority, As) det(majority, the) amod(majority, great) nmod:as(offered, majority) case(miners, of) nmod:of(majority, miners) nsbjpass(affected, who) axpass(affected, are) acl:relcl(miners, affected) case(closres, by) nmod:agent(affected, closres) ax(offered, have) axpass(offered, been) dobj(offered, jobs) case(pits, in) amod(pits, other) nmod:in(jobs, pits) pnct(offered, ,) ax(rge, will) det(Secretary, the) nsbj(rge, Secretary) case(State, of) nmod:of(Secretary, State) parataxis(offered, rge) det(miners, the) dobj(rge, miners) mark(go, to) xcomp(rge, go) advmod(go, back) mark(work, to) xcomp(go, work) advmod(work, forthwith) case(Wales, in) nmod:in(forthwith, Wales) pnct(offered, ?)","root(,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:as(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(NNS,VBN) case(NNS,IN) nmod:agent(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBN) dobj(VBN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:in(NNS,NNS) pnct(VBN,VBN) ax(IN,MD) det(NNP,DT) nsbj(IN,NNP) case(NNP,IN) nmod:of(NNP,NNP) parataxis(VBN,IN) det(NNS,DT) dobj(IN,NNS) mark(VB,TO) xcomp(IN,VB) advmod(VB,RB) mark(VB,TO) xcomp(VB,VB) advmod(VB,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VBN,VBN)","[miners, State, Secretary, go, urge]","[miners, State, Secretary, go, urge]",13,[ ],[ ],NNS_miners NNP_State NNP_Secretary VB_go VBP_urge ,"[miners, State, Secretary, go, urge]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Quite clearly  the sooner this damaging strike is ended  the better.,QuiteRB clearlyRB theDT soonerNN thisDT damagingNN strikeNN isVBZ endedVBN theDT betterJJR ,"root(ROOT-0, better-13) advmod(clearly-2, Quite-1) advmod(ended-10, clearly-2) punct(ended-10, ,-3) det(sooner-5, the-4) advmod(ended-10, sooner-5) det(strike-8, this-6) amod(strike-8, damaging-7) nsubjpass(ended-10, strike-8) auxpass(ended-10, is-9) dep(better-13, ended-10) punct(better-13, ,-11) det(better-13, the-12) punct(better-13, .-14)",0,0,0,"root(ROOT, better) advmod(clearly, Qite) advmod(ended, clearly) pnct(ended, ,) det(sooner, the) advmod(ended, sooner) det(strike, this) amod(strike, damaging) nsbjpass(ended, strike) axpass(ended, is) dep(better, ended) pnct(better, ,) det(better, the) pnct(better, .)","root(,JJR) advmod(RB,RB) advmod(VBN,RB) pnct(VBN,VBN) det(NN,DT) advmod(VBN,NN) det(NN,DT) amod(NN,NN) nsbjpass(VBN,NN) axpass(VBN,VBZ) dep(JJR,VBN) pnct(JJR,JJR) det(JJR,DT) pnct(JJR,JJR)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Secretary of State speak to his hon. Friend the Minister for Social Security and ensure that that Minister does not penalise the families of strikers in south Wales who are making sacrifices to defend the jobs of their husbands and their sons?,WillMD theDT SecretaryNNP ofIN StateNNP speakNN toTO hisPRP$ honNN FriendNNP theDT MinisterNNP forIN SocialNNP SecurityNNP andCC ensureVB thatIN thatDT MinisterNNP doesVBZ notRB penaliseVB theDT familiesNNS ofIN strikersNNS inIN southJJ WalesNNPS whoWP areVBP makingVBG sacrificesNNS toTO defendVB theDT jobsNNS ofIN theirPRP$ husbandsNNS andCC theirPRP$ sonsNNS ,"root(ROOT-0, speak-6) aux(speak-6, Will-1) det(Secretary-3, the-2) nsubj(speak-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Friend-10, to-7) nmod:poss(Friend-10, his-8) compound(Friend-10, hon.-9) nmod:to(speak-6, Friend-10) det(Minister-12, the-11) dep(Friend-10, Minister-12) case(Security-15, for-13) compound(Security-15, Social-14) nmod:for(Minister-12, Security-15) cc(Minister-12, and-16) dep(Friend-10, ensure-17) conj:and(Minister-12, ensure-17) mark(penalise-23, that-18) det(Minister-20, that-19) nsubj(penalise-23, Minister-20) aux(penalise-23, does-21) neg(penalise-23, not-22) ccomp(ensure-17, penalise-23) det(families-25, the-24) dobj(penalise-23, families-25) case(strikers-27, of-26) nmod:of(families-25, strikers-27) case(Wales-30, in-28) amod(Wales-30, south-29) nmod:in(strikers-27, Wales-30) nsubj(making-33, who-31) aux(making-33, are-32) acl:relcl(strikers-27, making-33) dobj(making-33, sacrifices-34) mark(defend-36, to-35) acl(sacrifices-34, defend-36) det(jobs-38, the-37) dobj(defend-36, jobs-38) case(husbands-41, of-39) nmod:poss(husbands-41, their-40) nmod:of(jobs-38, husbands-41) cc(husbands-41, and-42) nmod:poss(sons-44, their-43) nmod:of(jobs-38, sons-44) conj:and(husbands-41, sons-44) punct(speak-6, ?-45)",0,1,1,"root(ROOT, speak) ax(speak, Will) det(Secretary, the) nsbj(speak, Secretary) case(State, of) nmod:of(Secretary, State) case(Friend, to) nmod:poss(Friend, his) compond(Friend, hon.) nmod:to(speak, Friend) det(Minister, the) dep(Friend, Minister) case(Secrity, for) compond(Secrity, Social) nmod:for(Minister, Secrity) cc(Minister, and) dep(Friend, ensre) conj:and(Minister, ensre) mark(penalise, that) det(Minister, that) nsbj(penalise, Minister) ax(penalise, does) neg(penalise, not) ccomp(ensre, penalise) det(families, the) dobj(penalise, families) case(strikers, of) nmod:of(families, strikers) case(Wales, in) amod(Wales, soth) nmod:in(strikers, Wales) nsbj(making, who) ax(making, are) acl:relcl(strikers, making) dobj(making, sacrifices) mark(defend, to) acl(sacrifices, defend) det(jobs, the) dobj(defend, jobs) case(hsbands, of) nmod:poss(hsbands, their) nmod:of(jobs, hsbands) cc(hsbands, and) nmod:poss(sons, their) nmod:of(jobs, sons) conj:and(hsbands, sons) pnct(speak, ?)","root(,NN) ax(NN,MD) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,TO) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:to(NN,NNP) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) compond(NNP,NNP) nmod:for(NNP,NNP) cc(NNP,CC) dep(NNP,VB) conj:and(NNP,VB) mark(VB,DT) det(NNP,DT) nsbj(VB,NNP) ax(VB,VBZ) neg(VB,RB) ccomp(VB,VB) det(NNS,DT) dobj(VB,NNS) case(NNS,IN) nmod:of(NNS,NNS) case(NNPS,IN) amod(NNPS,JJ) nmod:in(NNS,NNPS) nsbj(VBG,WP) ax(VBG,VBP) acl:relcl(NNS,VBG) dobj(VBG,NNS) mark(VB,TO) acl(NNS,VB) det(NNS,DT) dobj(VB,NNS) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:of(NNS,NNS) cc(NNS,CC) nmod:poss(NNS,PRP$) nmod:of(NNS,NNS) conj:and(NNS,NNS) pnct(NN,NN)","[Security, Friend, Minister, penalise, not, and, State, Minister, Secretary, speak, ROOT, his, ensure, families]","[Security, Friend, Minister, penalise, not, and, State, Minister, Secretary, speak, ROOT, his, ensure, families]",15,"[Friend, Minister, penalise, and, Security, speak, ROOT, his, ensure]","[Friend, Minister, penalise, and, Security, speak, ROOT, his, ensure]",NNP_Security NNP_Friend NNP_Minister VB_penalise RB_not CC_and NNP_State NNP_Minister NNP_Secretary NN_speak PRP$_his VB_ensure NNS_families ,"[Security, Friend, Minister, penalise, not, and, State, Minister, Secretary, speak, ROOT, his, ensure, families]","[Security, Friend, Minister, penalise, not, and, State, Minister, Secretary, speak, ROOT, his, ensure, families]",NNP_Security NNP_Friend NNP_Minister VB_penalise RB_not CC_and NNP_State NNP_Minister NNP_Secretary NN_speak PRP$_his VB_ensure NNS_families ,"[Security, Friend, Minister, penalise, not, and, State, Minister, Secretary, speak, ROOT, his, ensure, families]",NNP_Security NNP_Friend NNP_Minister VB_penalise RB_not CC_and NNP_State NNP_Minister NNP_Secretary NN_speak PRP$_his VB_ensure NNS_families ,"[Security, Friend, Minister, penalise, not, and, State, Minister, Secretary, speak, ROOT, his, ensure, families]",NNP_Security NNP_Friend NNP_Minister VB_penalise RB_not CC_and NNP_State NNP_Minister NNP_Secretary NN_speak PRP$_his VB_ensure NNS_families ,-3,0,2,2,1,2,2,2,2,2
I shall draw my hon. Friend's attention to the question that has been put.,IPRP shallMD drawVB myPRP$ honNN FriendNNP 'sPOS attentionNN toTO theDT questionNN thatWDT hasVBZ beenVBN putVBN ,"root(ROOT-0, draw-3) nsubj(draw-3, I-1) aux(draw-3, shall-2) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) nmod:poss(attention-8, Friend-6) case(Friend-6, 's-7) dobj(draw-3, attention-8) case(question-11, to-9) det(question-11, the-10) nmod:to(draw-3, question-11) nsubjpass(put-15, that-12) aux(put-15, has-13) auxpass(put-15, been-14) acl:relcl(question-11, put-15) punct(draw-3, .-16)",0,1,1,"root(ROOT, draw) nsbj(draw, I) ax(draw, shall) nmod:poss(Friend, my) compond(Friend, hon.) nmod:poss(attention, Friend) ""case(Friend, s)"", dobj(draw, attention) case(qestion, to) det(qestion, the) nmod:to(draw, qestion) nsbjpass(pt, that) ax(pt, has) axpass(pt, been) acl:relcl(qestion, pt) pnct(draw, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) dobj(VB,NN) case(NN,TO) det(NN,DT) nmod:to(VB,NN) nsbjpass(VBN,WDT) ax(VBN,VBZ) axpass(VBN,VBN) acl:relcl(NN,VBN) pnct(VB,VB)","[draw, Friend, attention, my]","[draw, Friend, attention, my]",16,"[draw, Friend, attention, my]","[draw, Friend, attention, my]",VB_draw NNP_Friend NN_attention PRP$_my ,"[draw, Friend, attention, my]","[draw, Friend, attention, my]",VB_draw NNP_Friend NN_attention PRP$_my ,"[draw, Friend, attention, my]",VB_draw NNP_Friend NN_attention PRP$_my ,"[draw, Friend, attention, my]",VB_draw NNP_Friend NN_attention PRP$_my ,-3,0,1,0,0,0,0,0,0,0
Is my right hon. Friend aware how much financial contribution  if any  miners' leaders have made to the striking miners  since £35 million of the National Union of Mineworkers is stacked away  and the miners  according to some Opposition Members  are going hungry?,IsVBZ myPRP$ rightJJ honNN FriendNNP awareVBZ howWRB muchJJ financialJJ contributionNN ifIN anyDT minersNNS 'POS leadersNNS haveVBP madeVBN toTO theDT strikingJJ minersNNS sinceIN £35CD millionCD ofIN theDT NationalNNP UnionNNP ofIN MineworkersNNP isVBZ stackedVBN awayRB andCC theDT minersNNS accordingVBG toTO someDT OppositionNNP MembersNNS areVBP goingVBG hungryJJ ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(aware-6, Friend-5) advmod(much-8, how-7) amod(contribution-10, much-8) amod(contribution-10, financial-9) dobj(aware-6, contribution-10) punct(contribution-10, ,-11) mark(made-19, if-12) advmod(made-19, any-13) punct(made-19, ,-14) nmod:poss(leaders-17, miners-15) case(miners-15, '-16) nsubj(made-19, leaders-17) aux(made-19, have-18) dep(contribution-10, made-19) case(miners-23, to-20) det(miners-23, the-21) amod(miners-23, striking-22) nmod:to(made-19, miners-23) punct(made-19, ,-24) case(million-28, since-25) compound(million-28, #-26) compound(million-28, 35-27) nmod:since(made-19, million-28) case(Union-32, of-29) det(Union-32, the-30) compound(Union-32, National-31) nmod:of(million-28, Union-32) case(Mineworkers-34, of-33) nmod:of(Union-32, Mineworkers-34) auxpass(stacked-36, is-35) dep(made-19, stacked-36) advmod(stacked-36, away-37) punct(made-19, ,-38) cc(made-19, and-39) det(miners-41, the-40) nsubj(going-50, miners-41) punct(miners-41, ,-42) case(Members-47, according-43) mwe(according-43, to-44) det(Members-47, some-45) compound(Members-47, Opposition-46) nmod:according_to(miners-41, Members-47) punct(miners-41, ,-48) aux(going-50, are-49) dep(contribution-10, going-50) conj:and(made-19, going-50) xcomp(going-50, hungry-51) punct(aware-6, ?-52)",0,0,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(aware, Friend) advmod(mch, how) amod(contribtion, mch) amod(contribtion, financial) dobj(aware, contribtion) pnct(contribtion, ,) mark(made, if) advmod(made, any) pnct(made, ,) nmod:poss(leaders, miners) ""case(miners, )"", nsbj(made, leaders) ax(made, have) dep(contribtion, made) case(miners, to) det(miners, the) amod(miners, striking) nmod:to(made, miners) pnct(made, ,) case(million, since) compond(million, #) compond(million, 35) nmod:since(made, million) case(Union, of) det(Union, the) compond(Union, National) nmod:of(million, Union) case(Mineworkers, of) nmod:of(Union, Mineworkers) axpass(stacked, is) dep(made, stacked) advmod(stacked, away) pnct(made, ,) cc(made, and) det(miners, the) nsbj(going, miners) pnct(miners, ,) case(Members, according) mwe(according, to) det(Members, some) compond(Members, Opposition) nmod:according_to(miners, Members) pnct(miners, ,) ax(going, are) dep(contribtion, going) conj:and(made, going) xcomp(going, hngry) pnct(aware, ?)","root(,VBZ) cop(VBZ,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) advmod(JJ,WRB) amod(NN,JJ) amod(NN,JJ) dobj(VBZ,NN) pnct(NN,NN) mark(VBN,IN) advmod(VBN,DT) pnct(VBN,VBN) nmod:poss(NNS,NNS) case(NNS,POS) nsbj(VBN,NNS) ax(VBN,VBP) dep(NN,VBN) case(NNS,TO) det(NNS,DT) amod(NNS,JJ) nmod:to(VBN,NNS) pnct(VBN,VBN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:since(VBN,CD) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(CD,NNP) case(NNP,IN) nmod:of(NNP,NNP) axpass(VBN,VBZ) dep(VBN,VBN) advmod(VBN,RB) pnct(VBN,VBN) cc(VBN,CC) det(NNS,DT) nsbj(VBG,NNS) pnct(NNS,NNS) case(NNS,VBG) mwe(VBG,TO) det(NNS,DT) compond(NNS,NNP) nmod:according_to(NNS,NNS) pnct(NNS,NNS) ax(VBG,VBP) dep(NN,VBG) conj:and(VBN,VBG) xcomp(VBG,JJ) pnct(VBZ,VBZ)","[aware, right, contribution, ROOT, Friend, my, Members, miners]","[Friend, my, Members, aware, miners, contribution, ROOT]",17,"[Friend, my, Members, aware, miners, contribution, ROOT]","[miners, Members]",NNP_Friend PRP$_my NNS_Members JJ_aware NNS_miners NN_contribution ,"[Friend, my, Members, aware, miners, contribution, ROOT]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Fortunately  I have no responsibility for that matter  and therefore I do not propose to answer questions on it.,FortunatelyRB IPRP haveVBP noDT responsibilityNN forIN thatDT matterNN andCC thereforeRB IPRP doVBP notRB proposeVB toTO answerVB questionsNNS onIN itPRP ,"root(ROOT-0, have-4) advmod(have-4, Fortunately-1) punct(have-4, ,-2) nsubj(have-4, I-3) neg(responsibility-6, no-5) dobj(have-4, responsibility-6) case(matter-9, for-7) det(matter-9, that-8) nmod:for(responsibility-6, matter-9) punct(have-4, ,-10) cc(have-4, and-11) advmod(propose-16, therefore-12) nsubj(propose-16, I-13) aux(propose-16, do-14) neg(propose-16, not-15) conj:and(have-4, propose-16) mark(answer-18, to-17) xcomp(propose-16, answer-18) dobj(answer-18, questions-19) case(it-21, on-20) nmod:on(answer-18, it-21) punct(have-4, .-22)",0,0,0,"root(ROOT, have) advmod(have, Fortnately) pnct(have, ,) nsbj(have, I) neg(responsibility, no) dobj(have, responsibility) case(matter, for) det(matter, that) nmod:for(responsibility, matter) pnct(have, ,) cc(have, and) advmod(propose, therefore) nsbj(propose, I) ax(propose, do) neg(propose, not) conj:and(have, propose) mark(answer, to) xcomp(propose, answer) dobj(answer, qestions) case(it, on) nmod:on(answer, it) pnct(have, .)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) nsbj(VBP,PRP) neg(NN,DT) dobj(VBP,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) pnct(VBP,VBP) cc(VBP,CC) advmod(VB,RB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) conj:and(VBP,VB) mark(VB,TO) xcomp(VB,VB) dobj(VB,NNS) case(PRP,IN) nmod:on(VB,PRP) pnct(VBP,VBP)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The proposed pit closures could mean the economic and social death of valley communities in south east Wales.,TheDT proposedVBN pitNN closuresNNS couldMD meanVB theDT economicJJ andCC socialJJ deathNN ofIN valleyNN communitiesNNS inIN southJJ eastJJ WalesNNS ,"root(ROOT-0, mean-6) det(closures-4, The-1) amod(closures-4, proposed-2) compound(closures-4, pit-3) nsubj(mean-6, closures-4) aux(mean-6, could-5) det(death-11, the-7) amod(death-11, economic-8) cc(economic-8, and-9) conj:and(economic-8, social-10) amod(death-11, social-10) dobj(mean-6, death-11) case(communities-14, of-12) compound(communities-14, valley-13) nmod:of(death-11, communities-14) case(Wales-18, in-15) amod(Wales-18, south-16) amod(Wales-18, east-17) nmod:in(death-11, Wales-18) punct(mean-6, .-19)",0,1,0,"root(ROOT, mean) det(closres, The) amod(closres, proposed) compond(closres, pit) nsbj(mean, closres) ax(mean, cold) det(death, the) amod(death, economic) cc(economic, and) conj:and(economic, social) amod(death, social) dobj(mean, death) case(commnities, of) compond(commnities, valley) nmod:of(death, commnities) case(Wales, in) amod(Wales, soth) amod(Wales, east) nmod:in(death, Wales) pnct(mean, .)","root(,VB) det(NNS,DT) amod(NNS,VBN) compond(NNS,NN) nsbj(VB,NNS) ax(VB,MD) det(NN,DT) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) dobj(VB,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:in(NN,NNS) pnct(VB,VB)",[ ],[ ],19,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the right hon. Gentleman agree that what is now required is an urgent  statesmanlike intervention by the Secretary of State for Energy and the Secretary of State for Employment so that genuine negotiations with a view to a settlement rather than Cabinet disengagement might come forward?,DoesVBZ theDT rightJJ honNN GentlemanNNP agreeVBZ thatIN whatWP isVBZ nowRB requiredVBN isVBZ anDT urgentJJ statesmanlikeNN interventionNN byIN theDT SecretaryNNP ofIN StateNNP forIN EnergyNNP andCC theDT SecretaryNNP ofIN StateNNP forIN EmploymentNNP soIN thatDT genuineJJ negotiationsNNS withIN aDT viewNN toTO aDT settlementNN ratherRB thanIN CabinetNNP disengagementNN mightMD comeVB forwardRB ,"root(ROOT-0, agree-6) aux(agree-6, Does-1) det(Gentleman-5, the-2) amod(Gentleman-5, right-3) compound(Gentleman-5, hon.-4) nsubj(agree-6, Gentleman-5) mark(required-11, that-7) nsubjpass(required-11, what-8) auxpass(required-11, is-9) advmod(required-11, now-10) ccomp(agree-6, required-11) ccomp(required-11, is-12) nsubj(is-12, an-13) dep(an-13, urgent-14) punct(urgent-14, ,-15) amod(intervention-17, statesmanlike-16) root(,-15, intervention-17) case(Secretary-20, by-18) det(Secretary-20, the-19) nmod:by(intervention-17, Secretary-20) case(State-22, of-21) nmod:of(Secretary-20, State-22) case(Energy-24, for-23) nmod:for(intervention-17, Energy-24) cc(Energy-24, and-25) det(Secretary-27, the-26) nmod:for(intervention-17, Secretary-27) conj:and(Energy-24, Secretary-27) case(State-29, of-28) nmod:of(Secretary-27, State-29) case(Employment-31, for-30) nmod:for(Secretary-27, Employment-31) mark(come-47, so-32) mark(come-47, that-33) amod(negotiations-35, genuine-34) nsubj(come-47, negotiations-35) case(view-38, with-36) det(view-38, a-37) nmod:with(negotiations-35, view-38) case(settlement-41, to-39) det(settlement-41, a-40) nmod:to(view-38, settlement-41) case(disengagement-45, rather-42) mwe(rather-42, than-43) compound(disengagement-45, Cabinet-44) nmod:rather_than(view-38, disengagement-45) aux(come-47, might-46) dep(intervention-17, come-47) advmod(come-47, forward-48) punct(intervention-17, ?-49)",0,0,0,"root(ROOT, agree) ax(agree, Does) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(agree, Gentleman) mark(reqired, that) nsbjpass(reqired, what) axpass(reqired, is) advmod(reqired, now) ccomp(agree, reqired) ccomp(reqired, is) nsbj(is, an) dep(an, rgent) pnct(rgent, ,) amod(intervention, statesmanlike) root(,, intervention) case(Secretary, by) det(Secretary, the) nmod:by(intervention, Secretary) case(State, of) nmod:of(Secretary, State) case(Energy, for) nmod:for(intervention, Energy) cc(Energy, and) det(Secretary, the) nmod:for(intervention, Secretary) conj:and(Energy, Secretary) case(State, of) nmod:of(Secretary, State) case(Employment, for) nmod:for(Secretary, Employment) mark(come, so) mark(come, that) amod(negotiations, genine) nsbj(come, negotiations) case(view, with) det(view, a) nmod:with(negotiations, view) case(settlement, to) det(settlement, a) nmod:to(view, settlement) case(disengagement, rather) mwe(rather, than) compond(disengagement, Cabinet) nmod:rather_than(view, disengagement) ax(come, might) dep(intervention, come) advmod(come, forward) pnct(intervention, ?)","root(,VBZ) ax(VBZ,VBZ) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBN,DT) nsbjpass(VBN,WP) axpass(VBN,VBZ) advmod(VBN,RB) ccomp(VBZ,VBN) ccomp(VBN,VBZ) nsbj(VBZ,DT) dep(DT,JJ) pnct(JJ,JJ) amod(NN,NN) root(NNNNNN) case(NNP,IN) det(NNP,DT) nmod:by(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NN,NNP) cc(NNP,CC) det(NNP,DT) nmod:for(NN,NNP) conj:and(NNP,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) mark(VB,IN) mark(VB,DT) amod(NNS,JJ) nsbj(VB,NNS) case(NN,IN) det(NN,DT) nmod:with(NNS,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) case(NN,RB) mwe(RB,IN) compond(NN,NNP) nmod:rather_than(NN,NN) ax(VB,MD) dep(NN,VB) advmod(VB,RB) pnct(NN,NN)","[ , Secretary, Secretary, right, required, Gentleman, intervention, come, State, Employment, Energy, and, statesmanlike, State, ROOT, agree]","[ , Secretary, State, Energy, Secretary, come, and, required, statesmanlike, Employment, Gentleman, ROOT, State, agree, intervention]",19,"[ , Secretary, State, Secretary, Energy, come, and, statesmanlike, State, Employment, intervention]","[ , Secretary, State, Secretary, Energy, come, and, statesmanlike, State, Employment, intervention]",NNP_Secretary NNP_State NNP_Energy NNP_Secretary NN_come CC_and VBN_required NN_statesmanlike NNP_Employment NNP_Gentleman NNP_State VB_agree NN_intervention ,"[ , Secretary, State, Energy, Secretary, come, and, required, statesmanlike, Employment, Gentleman, ROOT, State, agree, intervention]","[ , Secretary, State, Energy, Secretary, come, and, required, statesmanlike, Employment, Gentleman, ROOT, State, agree, intervention]",NNP_Secretary NNP_State NNP_Energy NNP_Secretary NN_come CC_and VBN_required NN_statesmanlike NNP_Employment NNP_Gentleman NNP_State VB_agree NN_intervention ,"[ , Secretary, State, Energy, Secretary, come, and, required, statesmanlike, Employment, Gentleman, ROOT, State, agree, intervention]",NNP_Secretary NNP_State NNP_Energy NNP_Secretary NN_come CC_and VBN_required NN_statesmanlike NNP_Employment NNP_Gentleman NNP_State VB_agree NN_intervention ,"[ , Secretary, State, Energy, Secretary, come, and, required, statesmanlike, Employment, Gentleman, ROOT, State, agree, intervention]",NNP_Secretary NNP_State NNP_Energy NNP_Secretary NN_come CC_and VBN_required NN_statesmanlike NNP_Employment NNP_Gentleman NNP_State VB_agree NN_intervention ,-3,0,1,0,0,0,0,0,0,0
Will he undertake to intervene in this direction  and will he say that he will fight for more new pits in south Wales and for more investment in the coalfields?,WillMD hePRP undertakeVB toTO interveneVB inIN thisDT directionNN andCC willMD hePRP sayVB thatIN hePRP willMD fightVB forIN moreJJR newJJ pitsNNS inIN southJJ WalesNNP andCC forIN moreJJR investmentNN inIN theDT coalfieldsNNS ,"root(ROOT-0, undertake-3) aux(undertake-3, Will-1) nsubj(undertake-3, he-2) mark(intervene-5, to-4) xcomp(undertake-3, intervene-5) case(direction-8, in-6) det(direction-8, this-7) nmod:in(intervene-5, direction-8) punct(undertake-3, ,-9) cc(undertake-3, and-10) aux(say-13, will-11) nsubj(say-13, he-12) conj:and(undertake-3, say-13) mark(fight-17, that-14) nsubj(fight-17, he-15) nsubj(fight-17'', he-15) aux(fight-17, will-16) ccomp(say-13, fight-17) ccomp(say-13, fight-17'') conj:and(fight-17, fight-17'') case(pits-21, for-18) amod(pits-21, more-19) amod(pits-21, new-20) nmod:for(fight-17, pits-21) case(Wales-24, in-22) amod(Wales-24, south-23) nmod:in(pits-21, Wales-24) cc(fight-17, and-25) case(investment-28, for-26) amod(investment-28, more-27) nmod:for(fight-17'', investment-28) case(coalfields-31, in-29) det(coalfields-31, the-30) nmod:in(investment-28, coalfields-31) punct(undertake-3, ?-32)",0,0,0,"root(ROOT, ndertake) ax(ndertake, Will) nsbj(ndertake, he) mark(intervene, to) xcomp(ndertake, intervene) case(direction, in) det(direction, this) nmod:in(intervene, direction) pnct(ndertake, ,) cc(ndertake, and) ax(say, will) nsbj(say, he) conj:and(ndertake, say) mark(fight, that) nsbj(fight, he) nsbj(fight, he) ax(fight, will) ccomp(say, fight) ccomp(say, fight) conj:and(fight, fight) case(pits, for) amod(pits, more) amod(pits, new) nmod:for(fight, pits) case(Wales, in) amod(Wales, soth) nmod:in(pits, Wales) cc(fight, and) case(investment, for) amod(investment, more) nmod:for(fight, investment) case(coalfields, in) det(coalfields, the) nmod:in(investment, coalfields) pnct(ndertake, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) mark(VB,TO) xcomp(VB,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) pnct(VB,VB) cc(VB,CC) ax(VB,MD) nsbj(VB,PRP) conj:and(VB,VB) mark(VB,IN) nsbj(VB,PRP) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) ccomp(VB,VB) conj:and(VB,VB) case(NNS,IN) amod(NNS,JJR) amod(NNS,JJ) nmod:for(VB,NNS) case(NNP,IN) amod(NNP,JJ) nmod:in(NNS,NNP) cc(VB,CC) case(NN,IN) amod(NN,JJR) nmod:for(VB,NN) case(NNS,IN) det(NNS,DT) nmod:in(NN,NNS) pnct(VB,VB)","[and, pits, fight, undertake, and, he, investment, he, fight, say, he, ROOT, intervene]","[and, pits, fight, undertake, and, he, investment, he, fight, say, he, ROOT, intervene]",19,[ ],[ ],CC_and NNS_pits VB_fight VB_undertake CC_and PRP_he NN_investment PRP_he VB_fight VB_say PRP_he VB_intervene ,"[and, pits, fight, undertake, and, he, investment, he, fight, say, he, ROOT, intervene]","[and, pits, fight, undertake, and, he, investment, he, fight, say, he, ROOT, intervene]",CC_and NNS_pits VB_fight VB_undertake CC_and PRP_he NN_investment PRP_he VB_fight VB_say PRP_he VB_intervene ,"[and, pits, fight, undertake, and, he, investment, he, fight, say, he, ROOT, intervene]",CC_and NNS_pits VB_fight VB_undertake CC_and PRP_he NN_investment PRP_he VB_fight VB_say PRP_he VB_intervene ,"[and, pits, fight, undertake, and, he, investment, he, fight, say, he, ROOT, intervene]",CC_and NNS_pits VB_fight VB_undertake CC_and PRP_he NN_investment PRP_he VB_fight VB_say PRP_he VB_intervene ,-3,0,2,0,0,0,0,0,0,0
I do not believe that Government intervention is required to produce genuine discussion and negotiation.,IPRP doVBP notRB believeVB thatIN GovernmentNNP interventionNN isVBZ requiredVBN toTO produceVB genuineJJ discussionNN andCC negotiationNN ,"root(ROOT-0, believe-4) nsubj(believe-4, I-1) aux(believe-4, do-2) neg(believe-4, not-3) mark(required-9, that-5) compound(intervention-7, Government-6) nsubjpass(required-9, intervention-7) auxpass(required-9, is-8) ccomp(believe-4, required-9) mark(produce-11, to-10) xcomp(required-9, produce-11) amod(discussion-13, genuine-12) dobj(produce-11, discussion-13) cc(discussion-13, and-14) dobj(produce-11, negotiation-15) conj:and(discussion-13, negotiation-15) punct(believe-4, .-16)",0,1,1,"root(ROOT, believe) nsbj(believe, I) ax(believe, do) neg(believe, not) mark(reqired, that) compond(intervention, Government) nsbjpass(reqired, intervention) axpass(reqired, is) ccomp(believe, reqired) mark(prodce, to) xcomp(reqired, prodce) amod(discssion, genine) dobj(prodce, discssion) cc(discssion, and) dobj(prodce, negotiation) conj:and(discssion, negotiation) pnct(believe, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) mark(VBN,IN) compond(NN,NNP) nsbjpass(VBN,NN) axpass(VBN,VBZ) ccomp(VB,VBN) mark(VB,TO) xcomp(VBN,VB) amod(NN,JJ) dobj(VB,NN) cc(NN,CC) dobj(VB,NN) conj:and(NN,NN) pnct(VB,VB)","[intervention, required]",[ ],20,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Minister of Agriculture  Fisheries and Food whether he is satisfied that the dairy quotas are being implemented properly in other European Economic Community countries.,askedVBN theDT MinisterNNP ofIN AgricultureNNP FisheriesNNP andCC FoodNNP whetherIN hePRP isVBZ satisfiedJJ thatIN theDT dairyNN quotasNNS areVBP beingVBG implementedVBN properlyRB inIN otherJJ EuropeanJJ EconomicNNP CommunityNNP countriesNNS ,"root(ROOT-0, asked-1) det(Minister-3, the-2) dobj(asked-1, Minister-3) case(Agriculture-5, of-4) nmod:of(Minister-3, Agriculture-5) punct(Agriculture-5, ,-6) nmod:of(Minister-3, Fisheries-7) conj:and(Agriculture-5, Fisheries-7) cc(Agriculture-5, and-8) nmod:of(Minister-3, Food-9) conj:and(Agriculture-5, Food-9) mark(satisfied-13, whether-10) nsubj(satisfied-13, he-11) cop(satisfied-13, is-12) ccomp(asked-1, satisfied-13) mark(implemented-20, that-14) det(quotas-17, the-15) compound(quotas-17, dairy-16) nsubjpass(implemented-20, quotas-17) aux(implemented-20, are-18) auxpass(implemented-20, being-19) ccomp(satisfied-13, implemented-20) advmod(implemented-20, properly-21) case(countries-27, in-22) amod(countries-27, other-23) amod(countries-27, European-24) compound(countries-27, Economic-25) compound(countries-27, Community-26) nmod:in(implemented-20, countries-27) punct(asked-1, .-28)",0,0,0,"root(ROOT, asked) det(Minister, the) dobj(asked, Minister) case(Agricltre, of) nmod:of(Minister, Agricltre) pnct(Agricltre, ,) nmod:of(Minister, Fisheries) conj:and(Agricltre, Fisheries) cc(Agricltre, and) nmod:of(Minister, Food) conj:and(Agricltre, Food) mark(satisfied, whether) nsbj(satisfied, he) cop(satisfied, is) ccomp(asked, satisfied) mark(implemented, that) det(qotas, the) compond(qotas, dairy) nsbjpass(implemented, qotas) ax(implemented, are) axpass(implemented, being) ccomp(satisfied, implemented) advmod(implemented, properly) case(contries, in) amod(contries, other) amod(contries, Eropean) compond(contries, Economic) compond(contries, Commnity) nmod:in(implemented, contries) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NNP,NNP) nmod:of(NNP,NNP) conj:and(NNP,NNP) cc(NNP,CC) nmod:of(NNP,NNP) conj:and(NNP,NNP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) ccomp(VBN,JJ) mark(VBN,IN) det(NNS,DT) compond(NNS,NN) nsbjpass(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBG) ccomp(JJ,VBN) advmod(VBN,RB) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) compond(NNS,NNP) compond(NNS,NNP) nmod:in(VBN,NNS) pnct(VBN,VBN)","[Agriculture, Food, and, he, Minister, ROOT, implemented, Fisheries, satisfied, asked]","[Agriculture, Food, and, he, Minister, ROOT, implemented, Fisheries, satisfied, asked]",1,"[Agriculture, Food, and, he, Minister, ROOT, implemented, Fisheries, satisfied, asked]","[Agriculture, Food, satisfied, ROOT, and, Fisheries, Minister, asked]",NNP_Agriculture NNP_Food CC_and PRP_he NNP_Minister VBN_implemented NNP_Fisheries JJ_satisfied VBN_asked ,"[Agriculture, Food, and, he, Minister, ROOT, implemented, Fisheries, satisfied, asked]","[Agriculture, Food, and, he, Minister, ROOT, implemented, Fisheries, satisfied, asked]",NNP_Agriculture NNP_Food CC_and PRP_he NNP_Minister VBN_implemented NNP_Fisheries JJ_satisfied VBN_asked ,"[Agriculture, Food, and, he, Minister, ROOT, implemented, Fisheries, satisfied, asked]",NNP_Agriculture NNP_Food CC_and PRP_he NNP_Minister VBN_implemented NNP_Fisheries JJ_satisfied VBN_asked ,"[Agriculture, Food, and, he, Minister, ROOT, implemented, Fisheries, satisfied, asked]",NNP_Agriculture NNP_Food CC_and PRP_he NNP_Minister VBN_implemented NNP_Fisheries JJ_satisfied VBN_asked ,-3,0,1,1,1,1,1,1,1,1
I have raised this question in the Agriculture Council  and it is clear that most member states are making strenuous efforts to ensure that the supplementary levy is properly applied.,IPRP haveVBP raisedVBN thisDT questionNN inIN theDT AgricultureNNP CouncilNNP andCC itPRP isVBZ clearJJ thatIN mostJJS memberNN statesNNS areVBP makingVBG strenuousJJ effortsNNS toTO ensureVB thatIN theDT supplementaryJJ levyNN isVBZ properlyRB appliedVBN ,"root(ROOT-0, raised-3) nsubj(raised-3, I-1) aux(raised-3, have-2) det(question-5, this-4) dobj(raised-3, question-5) case(Council-9, in-6) det(Council-9, the-7) compound(Council-9, Agriculture-8) nmod:in(raised-3, Council-9) punct(raised-3, ,-10) cc(raised-3, and-11) nsubj(clear-14, it-12) cop(clear-14, is-13) conj:and(raised-3, clear-14) mark(making-20, that-15) amod(states-18, most-16) compound(states-18, member-17) nsubj(making-20, states-18) aux(making-20, are-19) ccomp(clear-14, making-20) amod(efforts-22, strenuous-21) dobj(making-20, efforts-22) mark(ensure-24, to-23) acl(efforts-22, ensure-24) mark(applied-31, that-25) det(levy-28, the-26) amod(levy-28, supplementary-27) nsubjpass(applied-31, levy-28) auxpass(applied-31, is-29) advmod(applied-31, properly-30) ccomp(ensure-24, applied-31) punct(raised-3, .-32)",0,0,0,"root(ROOT, raised) nsbj(raised, I) ax(raised, have) det(qestion, this) dobj(raised, qestion) case(Concil, in) det(Concil, the) compond(Concil, Agricltre) nmod:in(raised, Concil) pnct(raised, ,) cc(raised, and) nsbj(clear, it) cop(clear, is) conj:and(raised, clear) mark(making, that) amod(states, most) compond(states, member) nsbj(making, states) ax(making, are) ccomp(clear, making) amod(efforts, strenos) dobj(making, efforts) mark(ensre, to) acl(efforts, ensre) mark(applied, that) det(levy, the) amod(levy, spplementary) nsbjpass(applied, levy) axpass(applied, is) advmod(applied, properly) ccomp(ensre, applied) pnct(raised, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) det(NN,DT) dobj(VBN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(VBN,NNP) pnct(VBN,VBN) cc(VBN,CC) nsbj(JJ,PRP) cop(JJ,VBZ) conj:and(VBN,JJ) mark(VBG,IN) amod(NNS,JJS) compond(NNS,NN) nsbj(VBG,NNS) ax(VBG,VBP) ccomp(JJ,VBG) amod(NNS,JJ) dobj(VBG,NNS) mark(VB,TO) acl(NNS,VB) mark(VBN,IN) det(NN,DT) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBZ) advmod(VBN,RB) ccomp(VB,VBN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I have pressed the Commission to take the necessary action to ensure that any failures to apply the levy are dealt with.,IPRP haveVBP pressedVBN theDT CommissionNNP toTO takeVB theDT necessaryJJ actionNN toTO ensureVB thatIN anyDT failuresNNS toTO applyVB theDT levyNN areVBP dealtVBN withIN ,"root(ROOT-0, pressed-3) nsubj(pressed-3, I-1) aux(pressed-3, have-2) det(Commission-5, the-4) dobj(pressed-3, Commission-5) mark(take-7, to-6) xcomp(pressed-3, take-7) det(action-10, the-8) amod(action-10, necessary-9) dobj(take-7, action-10) mark(ensure-12, to-11) advcl(take-7, ensure-12) mark(dealt-21, that-13) det(failures-15, any-14) nsubjpass(dealt-21, failures-15) mark(apply-17, to-16) acl(failures-15, apply-17) det(levy-19, the-18) dobj(apply-17, levy-19) auxpass(dealt-21, are-20) ccomp(ensure-12, dealt-21) advmod(dealt-21, with-22) punct(pressed-3, .-23)",0,0,1,"root(ROOT, pressed) nsbj(pressed, I) ax(pressed, have) det(Commission, the) dobj(pressed, Commission) mark(take, to) xcomp(pressed, take) det(action, the) amod(action, necessary) dobj(take, action) mark(ensre, to) advcl(take, ensre) mark(dealt, that) det(failres, any) nsbjpass(dealt, failres) mark(apply, to) acl(failres, apply) det(levy, the) dobj(apply, levy) axpass(dealt, are) ccomp(ensre, dealt) advmod(dealt, with) pnct(pressed, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) det(NNP,DT) dobj(VBN,NNP) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) mark(VB,TO) advcl(VB,VB) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) mark(VB,TO) acl(NNS,VB) det(NN,DT) dobj(VB,NN) axpass(VBN,VBP) ccomp(VB,VBN) advmod(VBN,IN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he press for penalties against those countries?,WillMD hePRP pressVB forIN penaltiesNNS againstIN thoseDT countriesNNS ,"root(ROOT-0, press-3) aux(press-3, Will-1) nsubj(press-3, he-2) case(penalties-5, for-4) nmod:for(press-3, penalties-5) case(countries-8, against-6) det(countries-8, those-7) nmod:against(penalties-5, countries-8) punct(press-3, ?-9)",0,0,0,"root(ROOT, press) ax(press, Will) nsbj(press, he) case(penalties, for) nmod:for(press, penalties) case(contries, against) det(contries, those) nmod:against(penalties, contries) pnct(press, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) case(NNS,IN) nmod:for(VB,NNS) case(NNS,IN) det(NNS,DT) nmod:against(NNS,NNS) pnct(VB,VB)","[he, ROOT, press, penalties]","[he, ROOT, press, penalties]",3,[ ],[ ],PRP_he VBP_press NNS_penalties ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What relief can he offer the British farmer who has cut back fully and is now seen as the fall guy of Europe?,WhatWP reliefNN canMD hePRP offerVB theDT BritishJJ farmerNN whoWP hasVBZ cutVBN backRP fullyRB andCC isVBZ nowRB seenVBN asIN theDT fallNN guyNN ofIN EuropeNNP ,"root(ROOT-0, offer-5) det(relief-2, What-1) nsubj(offer-5, relief-2) aux(offer-5, can-3) nsubj(offer-5, he-4) det(farmer-8, the-6) amod(farmer-8, British-7) dobj(offer-5, farmer-8) nsubj(cut-11, who-9) nsubjpass(seen-17, who-9) aux(cut-11, has-10) acl:relcl(farmer-8, cut-11) compound:prt(cut-11, back-12) advmod(cut-11, fully-13) cc(cut-11, and-14) auxpass(seen-17, is-15) advmod(seen-17, now-16) acl:relcl(farmer-8, seen-17) conj:and(cut-11, seen-17) case(guy-21, as-18) det(guy-21, the-19) compound(guy-21, fall-20) nmod:as(seen-17, guy-21) case(Europe-23, of-22) nmod:of(guy-21, Europe-23) punct(offer-5, ?-24)",0,0,1,"root(ROOT, offer) det(relief, What) nsbj(offer, relief) ax(offer, can) nsbj(offer, he) det(farmer, the) amod(farmer, British) dobj(offer, farmer) nsbj(ct, who) nsbjpass(seen, who) ax(ct, has) acl:relcl(farmer, ct) compond:prt(ct, back) advmod(ct, flly) cc(ct, and) axpass(seen, is) advmod(seen, now) acl:relcl(farmer, seen) conj:and(ct, seen) case(gy, as) det(gy, the) compond(gy, fall) nmod:as(seen, gy) case(Erope, of) nmod:of(gy, Erope) pnct(offer, ?)","root(,VB) det(NN,WP) nsbj(VB,NN) ax(VB,MD) nsbj(VB,PRP) det(NN,DT) amod(NN,JJ) dobj(VB,NN) nsbj(VBN,WP) nsbjpass(VBN,WP) ax(VBN,VBZ) acl:relcl(NN,VBN) compond:prt(VBN,RP) advmod(VBN,RB) cc(VBN,CC) axpass(VBN,VBZ) advmod(VBN,RB) acl:relcl(NN,VBN) conj:and(VBN,VBN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:as(VBN,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(VB,VB)","[ROOT, farmer, offer, relief, he]","[ROOT, farmer, offer, relief, he]",3,[ ],[ ],NN_farmer VB_offer NN_relief PRP_he ,"[ROOT, farmer, offer, relief, he]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Agriculture Commissioner has made it clear that most member states have the necessary national legislation in force.,TheDT AgricultureNNP CommissionerNNP hasVBZ madeVBN itPRP clearJJ thatIN mostJJS memberNN statesNNS haveVBP theDT necessaryJJ nationalJJ legislationNN inIN forceNN ,"root(ROOT-0, made-5) det(Commissioner-3, The-1) compound(Commissioner-3, Agriculture-2) nsubj(made-5, Commissioner-3) aux(made-5, has-4) nsubj(clear-7, it-6) xcomp(made-5, clear-7) mark(have-12, that-8) amod(states-11, most-9) compound(states-11, member-10) nsubj(have-12, states-11) ccomp(clear-7, have-12) det(legislation-16, the-13) amod(legislation-16, necessary-14) amod(legislation-16, national-15) dobj(have-12, legislation-16) case(force-18, in-17) nmod:in(legislation-16, force-18) punct(made-5, .-19)",0,1,0,"root(ROOT, made) det(Commissioner, The) compond(Commissioner, Agricltre) nsbj(made, Commissioner) ax(made, has) nsbj(clear, it) xcomp(made, clear) mark(have, that) amod(states, most) compond(states, member) nsbj(have, states) ccomp(clear, have) det(legislation, the) amod(legislation, necessary) amod(legislation, national) dobj(have, legislation) case(force, in) nmod:in(legislation, force) pnct(made, .)","root(,VBN) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) nsbj(JJ,PRP) xcomp(VBN,JJ) mark(VBP,IN) amod(NNS,JJS) compond(NNS,NN) nsbj(VBP,NNS) ccomp(JJ,VBP) det(NN,DT) amod(NN,JJ) amod(NN,JJ) dobj(VBP,NN) case(NN,IN) nmod:in(NN,NN) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Considerable progress has been made in establishing the administrative procedures.,ConsiderableJJ progressNN hasVBZ beenVBN madeVBN inIN establishingVBG theDT administrativeJJ proceduresNNS ,"root(ROOT-0, made-5) amod(progress-2, Considerable-1) nsubjpass(made-5, progress-2) aux(made-5, has-3) auxpass(made-5, been-4) mark(establishing-7, in-6) advcl(made-5, establishing-7) det(procedures-10, the-8) amod(procedures-10, administrative-9) dobj(establishing-7, procedures-10) punct(made-5, .-11)",0,0,0,"root(ROOT, made) amod(progress, Considerable) nsbjpass(made, progress) ax(made, has) axpass(made, been) mark(establishing, in) advcl(made, establishing) det(procedres, the) amod(procedres, administrative) dobj(establishing, procedres) pnct(made, .)","root(,VBN) amod(NN,JJ) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) mark(VBG,IN) advcl(VBN,VBG) det(NNS,DT) amod(NNS,JJ) dobj(VBG,NNS) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I remind my hon. Friend that there is no ban on production outside quotas.,IPRP remindVBP myPRP$ honNN FriendVBP thatIN thereEX isVBZ noDT banNN onIN productionNN outsideIN quotasNNS ,"root(ROOT-0, remind-2) nsubj(remind-2, I-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) dobj(remind-2, Friend-5) mark(is-8, that-6) expl(is-8, there-7) ccomp(remind-2, is-8) neg(ban-10, no-9) nsubj(is-8, ban-10) case(production-12, on-11) nmod:on(ban-10, production-12) case(quotas-14, outside-13) nmod:outside(production-12, quotas-14) punct(remind-2, .-15)",0,0,0,"root(ROOT, remind) nsbj(remind, I) nmod:poss(Friend, my) compond(Friend, hon.) dobj(remind, Friend) mark(is, that) expl(is, there) ccomp(remind, is) neg(ban, no) nsbj(is, ban) case(prodction, on) nmod:on(ban, prodction) case(qotas, otside) nmod:otside(prodction, qotas) pnct(remind, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(VBP,PRP$) compond(VBP,VBP) dobj(VBP,VBP) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBP,VBZ) neg(NN,DT) nsbj(VBZ,NN) case(NN,IN) nmod:on(NN,NN) case(NNS,IN) nmod:otside(NN,NNS) pnct(VBP,VBP)","[I, remind, is, Friend, ROOT, my]","[I, remind, is, Friend, ROOT, my]",4,"[I, remind, is, Friend, ROOT, my]","[I, remind, is, Friend, ROOT, my]",PRP_I VBP_remind VBZ_is NNP_Friend PRP$_my ,"[I, remind, is, Friend, ROOT, my]","[I, remind, is, Friend, ROOT, my]",PRP_I VBP_remind VBZ_is NNP_Friend PRP$_my ,"[I, remind, is, Friend, ROOT, my]",PRP_I VBP_remind VBZ_is NNP_Friend PRP$_my ,"[I, remind, is, Friend, ROOT, my]",PRP_I VBP_remind VBZ_is NNP_Friend PRP$_my ,-3,0,2,0,0,0,0,0,0,0
Provided that member states collect the appropriate amount of levy from those responsible for the surplus  they will be complying with the supplementary levy regulations.,ProvidedVBD thatIN memberNN statesNNS collectVBP theDT appropriateJJ amountNN ofIN levyNN fromIN thoseDT responsibleJJ forIN theDT surplusNN theyPRP willMD beVB complyingVBG withIN theDT supplementaryJJ levyNN regulationsNNS ,"root(ROOT-0, complying-21) advcl(complying-21, Provided-1) mark(collect-5, that-2) compound(states-4, member-3) nsubj(collect-5, states-4) ccomp(Provided-1, collect-5) det(amount-8, the-6) amod(amount-8, appropriate-7) dobj(collect-5, amount-8) case(levy-10, of-9) nmod:of(amount-8, levy-10) case(those-12, from-11) nmod:from(collect-5, those-12) amod(those-12, responsible-13) case(surplus-16, for-14) det(surplus-16, the-15) nmod:for(responsible-13, surplus-16) punct(complying-21, ,-17) nsubj(complying-21, they-18) aux(complying-21, will-19) aux(complying-21, be-20) case(regulations-26, with-22) det(regulations-26, the-23) amod(regulations-26, supplementary-24) compound(regulations-26, levy-25) nmod:with(complying-21, regulations-26) punct(complying-21, .-27)",0,0,0,"root(ROOT, complying) advcl(complying, Provided) mark(collect, that) compond(states, member) nsbj(collect, states) ccomp(Provided, collect) det(amont, the) amod(amont, appropriate) dobj(collect, amont) case(levy, of) nmod:of(amont, levy) case(those, from) nmod:from(collect, those) amod(those, responsible) case(srpls, for) det(srpls, the) nmod:for(responsible, srpls) pnct(complying, ,) nsbj(complying, they) ax(complying, will) ax(complying, be) case(reglations, with) det(reglations, the) amod(reglations, spplementary) compond(reglations, levy) nmod:with(complying, reglations) pnct(complying, .)","root(,VBG) advcl(VBG,VBD) mark(VBP,IN) compond(NNS,NN) nsbj(VBP,NNS) ccomp(VBD,VBP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) case(NN,IN) nmod:of(NN,NN) case(DT,IN) nmod:from(VBP,DT) amod(DT,JJ) case(NN,IN) det(NN,DT) nmod:for(JJ,NN) pnct(VBG,VBG) nsbj(VBG,PRP) ax(VBG,MD) ax(VBG,VB) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) compond(NNS,NN) nmod:with(VBG,NNS) pnct(VBG,VBG)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is the Minister aware that the Select Committee on Agriculture is going to Brussels next week to try to find out whether other member states are implementing the levy?,IsVBZ theDT MinisterNNP awareNN thatIN theDT SelectNNP CommitteeNNP onIN AgricultureNNP isVBZ goingVBG toTO BrusselsNNP nextJJ weekNN toTO tryVB toTO findVB outRP whetherIN otherJJ memberNN statesNNS areVBP implementingVBG theDT levyNN ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) det(Minister-3, the-2) nsubj(aware-4, Minister-3) mark(going-12, that-5) det(Committee-8, the-6) compound(Committee-8, Select-7) nsubj(going-12, Committee-8) case(Agriculture-10, on-9) nmod:on(Committee-8, Agriculture-10) aux(going-12, is-11) ccomp(aware-4, going-12) case(Brussels-14, to-13) nmod:to(going-12, Brussels-14) amod(week-16, next-15) nmod:tmod(going-12, week-16) mark(try-18, to-17) xcomp(going-12, try-18) mark(find-20, to-19) xcomp(try-18, find-20) compound:prt(find-20, out-21) mark(implementing-27, whether-22) amod(states-25, other-23) compound(states-25, member-24) nsubj(implementing-27, states-25) aux(implementing-27, are-26) ccomp(find-20, implementing-27) det(levy-29, the-28) dobj(implementing-27, levy-29) punct(aware-4, ?-30)",0,1,0,"root(ROOT, aware) cop(aware, Is) det(Minister, the) nsbj(aware, Minister) mark(going, that) det(Committee, the) compond(Committee, Select) nsbj(going, Committee) case(Agricltre, on) nmod:on(Committee, Agricltre) ax(going, is) ccomp(aware, going) case(Brssels, to) nmod:to(going, Brssels) amod(week, next) nmod:tmod(going, week) mark(try, to) xcomp(going, try) mark(find, to) xcomp(try, find) compond:prt(find, ot) mark(implementing, whether) amod(states, other) compond(states, member) nsbj(implementing, states) ax(implementing, are) ccomp(find, implementing) det(levy, the) dobj(implementing, levy) pnct(aware, ?)","root(,NN) cop(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) mark(VBG,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBG,NNP) case(NNP,IN) nmod:on(NNP,NNP) ax(VBG,VBZ) ccomp(NN,VBG) case(NNP,TO) nmod:to(VBG,NNP) amod(NN,JJ) nmod:tmod(VBG,NN) mark(VB,TO) xcomp(VBG,VB) mark(VB,TO) xcomp(VB,VB) compond:prt(VB,RP) mark(VBG,IN) amod(NNS,JJ) compond(NNS,NN) nsbj(VBG,NNS) ax(VBG,VBP) ccomp(VB,VBG) det(NN,DT) dobj(VBG,NN) pnct(NN,NN)","[ROOT, aware, going, Minister]","[ROOT, aware, going, Minister]",5,"[ROOT, aware, going, Minister]",[ ],JJ_aware VBG_going NNP_Minister ,"[ROOT, aware, going, Minister]","[ROOT, aware, going, Minister]",JJ_aware VBG_going NNP_Minister ,"[ROOT, aware, going, Minister]",JJ_aware VBG_going NNP_Minister ,"[ROOT, aware, going, Minister]",JJ_aware VBG_going NNP_Minister ,-3,0,2,0,0,0,0,0,0,0
If the Select Committee discovers that they are not implementing the levy  or not implementing it correctly  will the right hon. Gentleman undertake to abolish the implementation of the levy in the United Kingdom?,IfIN theDT SelectNNP CommitteeNNP discoversNNS thatIN theyPRP areVBP notRB implementingVBG theDT levyNN orCC notRB implementingVBG itPRP correctlyRB willMD theDT rightJJ honNN GentlemanNNP undertakeNN toTO abolishVB theDT implementationNN ofIN theDT levyNN inIN theDT UnitedNNP KingdomNNP ,"root(ROOT-0, undertake-25) mark(discovers-5, If-1) det(Committee-4, the-2) compound(Committee-4, Select-3) nsubj(discovers-5, Committee-4) advcl(undertake-25, discovers-5) mark(implementing-10, that-6) nsubj(implementing-10, they-7) aux(implementing-10, are-8) neg(implementing-10, not-9) ccomp(discovers-5, implementing-10) det(levy-12, the-11) dobj(implementing-10, levy-12) punct(levy-12, ,-13) cc(levy-12, or-14) neg(implementing-16, not-15) dobj(implementing-10, implementing-16) conj:or(levy-12, implementing-16) dobj(implementing-16, it-17) advmod(implementing-16, correctly-18) punct(undertake-25, ,-19) aux(undertake-25, will-20) det(Gentleman-24, the-21) amod(Gentleman-24, right-22) compound(Gentleman-24, hon.-23) nsubj(undertake-25, Gentleman-24) mark(abolish-27, to-26) xcomp(undertake-25, abolish-27) det(implementation-29, the-28) dobj(abolish-27, implementation-29) case(levy-32, of-30) det(levy-32, the-31) nmod:of(implementation-29, levy-32) case(Kingdom-36, in-33) det(Kingdom-36, the-34) compound(Kingdom-36, United-35) nmod:in(levy-32, Kingdom-36) punct(undertake-25, ?-37)",0,0,0,"root(ROOT, ndertake) mark(discovers, If) det(Committee, the) compond(Committee, Select) nsbj(discovers, Committee) advcl(ndertake, discovers) mark(implementing, that) nsbj(implementing, they) ax(implementing, are) neg(implementing, not) ccomp(discovers, implementing) det(levy, the) dobj(implementing, levy) pnct(levy, ,) cc(levy, or) neg(implementing, not) dobj(implementing, implementing) conj:or(levy, implementing) dobj(implementing, it) advmod(implementing, correctly) pnct(ndertake, ,) ax(ndertake, will) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(ndertake, Gentleman) mark(abolish, to) xcomp(ndertake, abolish) det(implementation, the) dobj(abolish, implementation) case(levy, of) det(levy, the) nmod:of(implementation, levy) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(levy, Kingdom) pnct(ndertake, ?)","root(,NN) mark(NNS,IN) det(NNP,DT) compond(NNP,NNP) nsbj(NNS,NNP) advcl(NN,NNS) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBP) neg(VBG,RB) ccomp(NNS,VBG) det(NN,DT) dobj(VBG,NN) pnct(NN,NN) cc(NN,CC) neg(VBG,RB) dobj(VBG,VBG) conj:or(NN,VBG) dobj(VBG,PRP) advmod(VBG,RB) pnct(NN,NN) ax(NN,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) mark(VB,TO) xcomp(NN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) pnct(NN,NN)","[Gentleman, discovers, right, ROOT, abolish, undertake]","[ROOT, abolish, Gentleman, discovers, undertake]",5,[ ],[ ],VB_abolish NNP_Gentleman NNS_discovers VB_undertake ,"[ROOT, abolish, Gentleman, discovers, undertake]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I wish the hon. Gentleman a pleasant trip to Brussels next week.,IPRP wishVBP theDT honNN GentlemanNNP aDT pleasantJJ tripNN toTO BrusselsNNP nextJJ weekNN ,"root(ROOT-0, wish-2) nsubj(wish-2, I-1) det(Gentleman-5, the-3) compound(Gentleman-5, hon.-4) nsubj(trip-8, Gentleman-5) det(trip-8, a-6) amod(trip-8, pleasant-7) ccomp(wish-2, trip-8) case(Brussels-10, to-9) nmod:to(trip-8, Brussels-10) amod(week-12, next-11) nmod:tmod(trip-8, week-12) punct(wish-2, .-13)",0,1,0,"root(ROOT, wish) nsbj(wish, I) det(Gentleman, the) compond(Gentleman, hon.) nsbj(trip, Gentleman) det(trip, a) amod(trip, pleasant) ccomp(wish, trip) case(Brssels, to) nmod:to(trip, Brssels) amod(week, next) nmod:tmod(trip, week) pnct(wish, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) compond(NNP,NNP) nsbj(NN,NNP) det(NN,DT) amod(NN,JJ) ccomp(VBP,NN) case(NNP,TO) nmod:to(NN,NNP) amod(NN,JJ) nmod:tmod(NN,NN) pnct(VBP,VBP)","[pleasant, week, Gentleman, Brussels, wish, trip]","[pleasant, week, Gentleman, Brussels, wish, trip]",6,"[pleasant, week, Gentleman, Brussels, wish, trip]","[pleasant, week, Gentleman, Brussels, wish, trip]",JJ_pleasant NN_week NNP_Gentleman NNP_Brussels VBP_wish NN_trip ,"[pleasant, week, Gentleman, Brussels, wish, trip]","[pleasant, week, Gentleman, Brussels, wish, trip]",JJ_pleasant NN_week NNP_Gentleman NNP_Brussels VBP_wish NN_trip ,"[pleasant, week, Gentleman, Brussels, wish, trip]",JJ_pleasant NN_week NNP_Gentleman NNP_Brussels VBP_wish NN_trip ,"[pleasant, week, Gentleman, Brussels, wish, trip]",JJ_pleasant NN_week NNP_Gentleman NNP_Brussels VBP_wish NN_trip ,-3,0,2,1,1,1,2,0,1,2
I welcome the efforts of the Select Committee in persuading the Commission to make sure that every member state implements the rules properly.,IPRP welcomeVBP theDT effortsNNS ofIN theDT SelectNNP CommitteeNNP inIN persuadingVBG theDT CommissionNNP toTO makeVB sureJJ thatIN everyDT memberNN stateNN implementsNNS theDT rulesNNS properlyRB ,"root(ROOT-0, welcome-2) nsubj(welcome-2, I-1) det(efforts-4, the-3) dobj(welcome-2, efforts-4) case(Committee-8, of-5) det(Committee-8, the-6) compound(Committee-8, Select-7) nmod:of(efforts-4, Committee-8) mark(persuading-10, in-9) acl(efforts-4, persuading-10) det(Commission-12, the-11) dobj(persuading-10, Commission-12) mark(make-14, to-13) xcomp(persuading-10, make-14) xcomp(make-14, sure-15) mark(implements-20, that-16) det(state-19, every-17) compound(state-19, member-18) nsubj(implements-20, state-19) ccomp(sure-15, implements-20) det(rules-22, the-21) dobj(implements-20, rules-22) advmod(implements-20, properly-23) punct(welcome-2, .-24)",0,0,0,"root(ROOT, welcome) nsbj(welcome, I) det(efforts, the) dobj(welcome, efforts) case(Committee, of) det(Committee, the) compond(Committee, Select) nmod:of(efforts, Committee) mark(persading, in) acl(efforts, persading) det(Commission, the) dobj(persading, Commission) mark(make, to) xcomp(persading, make) xcomp(make, sre) mark(implements, that) det(state, every) compond(state, member) nsbj(implements, state) ccomp(sre, implements) det(rles, the) dobj(implements, rles) advmod(implements, properly) pnct(welcome, .)","root(,VBP) nsbj(VBP,PRP) det(NNS,DT) dobj(VBP,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NNS,NNP) mark(VBG,IN) acl(NNS,VBG) det(NNP,DT) dobj(VBG,NNP) mark(VB,TO) xcomp(VBG,VB) xcomp(VB,JJ) mark(NNS,IN) det(NN,DT) compond(NN,NN) nsbj(NNS,NN) ccomp(JJ,NNS) det(NNS,DT) dobj(NNS,NNS) advmod(NNS,RB) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
With the exception of Italy  which in fact has a particular derogation until the end of the quota year  my own feeling is a good deal more optimistic than it was that other member states are implementing the rules.,WithIN theDT exceptionNN ofIN ItalyNNP whichWDT inIN factNN hasVBZ aDT particularJJ derogationNN untilIN theDT endNN ofIN theDT quotaJJ yearNN myPRP$ ownJJ feelingNN isVBZ aDT goodJJ dealNN moreRBR optimisticJJ thanIN itPRP wasVBD thatIN otherJJ memberNN statesNNS areVBP implementingVBG theDT rulesNNS ,"root(ROOT-0, deal-28) case(exception-3, With-1) det(exception-3, the-2) nmod:with(deal-28, exception-3) case(Italy-5, of-4) nmod:of(exception-3, Italy-5) punct(Italy-5, ,-6) nsubj(has-10, which-7) case(fact-9, in-8) nmod:in(has-10, fact-9) acl:relcl(Italy-5, has-10) det(derogation-13, a-11) amod(derogation-13, particular-12) dobj(has-10, derogation-13) case(end-16, until-14) det(end-16, the-15) nmod:until(has-10, end-16) case(year-20, of-17) det(year-20, the-18) compound(year-20, quota-19) nmod:of(end-16, year-20) punct(deal-28, ,-21) nmod:poss(feeling-24, my-22) amod(feeling-24, own-23) nsubj(deal-28, feeling-24) cop(deal-28, is-25) det(deal-28, a-26) amod(deal-28, good-27) advmod(optimistic-30, more-29) amod(deal-28, optimistic-30) mark(implementing-39, than-31) nsubj(implementing-39, it-32) dep(implementing-39, was-33) mark(implementing-39, that-34) amod(states-37, other-35) compound(states-37, member-36) nsubj(implementing-39, states-37) aux(implementing-39, are-38) advcl(optimistic-30, implementing-39) det(rules-41, the-40) dobj(implementing-39, rules-41) punct(deal-28, .-42)",0,0,0,"root(ROOT, deal) case(exception, With) det(exception, the) nmod:with(deal, exception) case(Italy, of) nmod:of(exception, Italy) pnct(Italy, ,) nsbj(has, which) case(fact, in) nmod:in(has, fact) acl:relcl(Italy, has) det(derogation, a) amod(derogation, particlar) dobj(has, derogation) case(end, ntil) det(end, the) nmod:ntil(has, end) case(year, of) det(year, the) compond(year, qota) nmod:of(end, year) pnct(deal, ,) nmod:poss(feeling, my) amod(feeling, own) nsbj(deal, feeling) cop(deal, is) det(deal, a) amod(deal, good) advmod(optimistic, more) amod(deal, optimistic) mark(implementing, than) nsbj(implementing, it) dep(implementing, was) mark(implementing, that) amod(states, other) compond(states, member) nsbj(implementing, states) ax(implementing, are) advcl(optimistic, implementing) det(rles, the) dobj(implementing, rles) pnct(deal, .)","root(,NN) case(NN,IN) det(NN,DT) nmod:with(NN,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(NNP,NNP) nsbj(VBZ,WDT) case(NN,IN) nmod:in(VBZ,NN) acl:relcl(NNP,VBZ) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:ntil(VBZ,NN) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:of(NN,NN) pnct(NN,NN) nmod:poss(NN,PRP$) amod(NN,JJ) nsbj(NN,NN) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) advmod(JJ,RBR) amod(NN,JJ) mark(VBG,IN) nsbj(VBG,PRP) dep(VBG,VBD) mark(VBG,IN) amod(NNS,JJ) compond(NNS,NN) nsbj(VBG,NNS) ax(VBG,VBP) advcl(JJ,VBG) det(NNS,DT) dobj(VBG,NNS) pnct(NN,NN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I thank my hon. Friend for his initial remarks  but I remind him that I have raised that issue at the last three meetings of the Council of Ministers.,IPRP thankVBP myPRP$ honNN FriendNN forIN hisPRP$ initialJJ remarksNNS butCC IPRP remindVBP himPRP thatIN IPRP haveVBP raisedVBN thatIN issueNN atIN theDT lastJJ threeCD meetingsNNS ofIN theDT CouncilNNP ofIN MinistersNNP ,"root(ROOT-0, thank-2) nsubj(thank-2, I-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) dobj(thank-2, Friend-5) case(remarks-9, for-6) nmod:poss(remarks-9, his-7) amod(remarks-9, initial-8) nmod:for(thank-2, remarks-9) punct(thank-2, ,-10) cc(thank-2, but-11) nsubj(remind-13, I-12) conj:but(thank-2, remind-13) dobj(remind-13, him-14) mark(raised-18, that-15) nsubj(raised-18, I-16) aux(raised-18, have-17) ccomp(remind-13, raised-18) det(issue-20, that-19) dobj(raised-18, issue-20) case(meetings-25, at-21) det(meetings-25, the-22) amod(meetings-25, last-23) nummod(meetings-25, three-24) nmod:at(raised-18, meetings-25) case(Council-28, of-26) det(Council-28, the-27) nmod:of(meetings-25, Council-28) case(Ministers-30, of-29) nmod:of(Council-28, Ministers-30) punct(thank-2, .-31)",0,0,0,"root(ROOT, thank) nsbj(thank, I) nmod:poss(Friend, my) compond(Friend, hon.) dobj(thank, Friend) case(remarks, for) nmod:poss(remarks, his) amod(remarks, initial) nmod:for(thank, remarks) pnct(thank, ,) cc(thank, bt) nsbj(remind, I) conj:bt(thank, remind) dobj(remind, him) mark(raised, that) nsbj(raised, I) ax(raised, have) ccomp(remind, raised) det(isse, that) dobj(raised, isse) case(meetings, at) det(meetings, the) amod(meetings, last) nmmod(meetings, three) nmod:at(raised, meetings) case(Concil, of) det(Concil, the) nmod:of(meetings, Concil) case(Ministers, of) nmod:of(Concil, Ministers) pnct(thank, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NN,PRP$) compond(NN,NN) dobj(VBP,NN) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:for(VBP,NNS) pnct(VBP,VBP) cc(VBP,CC) nsbj(VBP,PRP) conj:bt(VBP,VBP) dobj(VBP,PRP) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(VBP,VBN) det(NN,IN) dobj(VBN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:at(VBN,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VBP,VBP)","[I, thank, ROOT, but, my, Friend]","[I, thank, ROOT, but, my, Friend]",8,"[I, thank, ROOT, but, my, Friend]","[I, thank, ROOT, but, my, Friend]",PRP_I VBP_thank CC_but PRP$_my NNP_Friend ,"[I, thank, ROOT, but, my, Friend]","[I, thank, ROOT, but, my, Friend]",PRP_I VBP_thank CC_but PRP$_my NNP_Friend ,"[I, thank, ROOT, but, my, Friend]",PRP_I VBP_thank CC_but PRP$_my NNP_Friend ,"[I, thank, ROOT, but, my, Friend]",PRP_I VBP_thank CC_but PRP$_my NNP_Friend ,-3,0,2,0,0,0,0,0,0,0
As I said earlier  there is no ban on production outside quotas.,AsIN IPRP saidVBD earlierRBR thereEX isVBZ noDT banNN onIN productionNN outsideIN quotasNNS ,"root(ROOT-0, is-7) mark(said-3, As-1) nsubj(said-3, I-2) advcl(is-7, said-3) advmod(said-3, earlier-4) punct(is-7, ,-5) expl(is-7, there-6) neg(ban-9, no-8) nsubj(is-7, ban-9) case(production-11, on-10) nmod:on(ban-9, production-11) case(quotas-13, outside-12) nmod:outside(production-11, quotas-13) punct(is-7, .-14)",0,0,0,"root(ROOT, is) mark(said, As) nsbj(said, I) advcl(is, said) advmod(said, earlier) pnct(is, ,) expl(is, there) neg(ban, no) nsbj(is, ban) case(prodction, on) nmod:on(ban, prodction) case(qotas, otside) nmod:otside(prodction, qotas) pnct(is, .)","root(,VBZ) mark(VBD,IN) nsbj(VBD,PRP) advcl(VBZ,VBD) advmod(VBD,RBR) pnct(VBZ,VBZ) expl(VBZ,EX) neg(NN,DT) nsbj(VBZ,NN) case(NN,IN) nmod:on(NN,NN) case(NNS,IN) nmod:otside(NN,NNS) pnct(VBZ,VBZ)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
With a levy of up to 100 per cent.,WithIN aDT levyNN ofIN upIN toTO 100CD perIN centNN ,"root(ROOT-0, levy-3) case(levy-3, With-1) det(levy-3, a-2) case(100-7, of-4) advmod(100-7, up-5) case(100-7, to-6) nmod:to(levy-3, 100-7) case(cent-9, per-8) nmod:per(100-7, cent-9) punct(levy-3, .-10)",0,0,0,"root(ROOT, levy) case(levy, With) det(levy, a) case(100, of) advmod(100, p) case(100, to) nmod:to(levy, 100) case(cent, per) nmod:per(100, cent) pnct(levy, .)","root(,NN) case(NN,IN) det(NN,DT) case(CD,IN) advmod(CD,IN) case(CD,TO) nmod:to(NN,CD) case(NN,IN) nmod:per(CD,NN) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the target price  we expect most producers to make a strenuous effort to comply with their quotas over the year as a whole.,ofIN theDT targetNN priceNN wePRP expectVBP mostRBS producersNNS toTO makeVB aDT strenuousJJ effortNN toTO complyVB withIN theirPRP$ quotasNNS overIN theDT yearNN asIN aDT wholeNN ,"root(ROOT-0, expect-7) case(price-4, of-1) det(price-4, the-2) compound(price-4, target-3) nmod:of(expect-7, price-4) punct(expect-7, ,-5) nsubj(expect-7, we-6) amod(producers-9, most-8) dobj(expect-7, producers-9) mark(make-11, to-10) xcomp(expect-7, make-11) det(effort-14, a-12) amod(effort-14, strenuous-13) dobj(make-11, effort-14) mark(comply-16, to-15) acl(effort-14, comply-16) case(quotas-19, with-17) nmod:poss(quotas-19, their-18) nmod:with(comply-16, quotas-19) case(year-22, over-20) det(year-22, the-21) nmod:over(comply-16, year-22) case(whole-25, as-23) det(whole-25, a-24) nmod:as(comply-16, whole-25) punct(expect-7, .-26)",0,0,0,"root(ROOT, expect) case(price, of) det(price, the) compond(price, target) nmod:of(expect, price) pnct(expect, ,) nsbj(expect, we) amod(prodcers, most) dobj(expect, prodcers) mark(make, to) xcomp(expect, make) det(effort, a) amod(effort, strenos) dobj(make, effort) mark(comply, to) acl(effort, comply) case(qotas, with) nmod:poss(qotas, their) nmod:with(comply, qotas) case(year, over) det(year, the) nmod:over(comply, year) case(whole, as) det(whole, a) nmod:as(comply, whole) pnct(expect, .)","root(,VBP) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(VBP,NN) pnct(VBP,VBP) nsbj(VBP,PRP) amod(NNS,RBS) dobj(VBP,NNS) mark(VB,TO) xcomp(VBP,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) mark(VB,TO) acl(NN,VB) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:with(VB,NNS) case(NN,IN) det(NN,DT) nmod:over(VB,NN) case(NN,IN) det(NN,DT) nmod:as(VB,NN) pnct(VBP,VBP)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Frankly  it is an expensive business if one does not comply with one's quota.,FranklyIN itPRP isVBZ anDT expensiveJJ businessNN ifIN oneCD doesVBZ notRB complyVB withIN oneCD 'sPOS quotaNN ,"root(ROOT-0, business-7) advmod(business-7, Frankly-1) punct(business-7, ,-2) nsubj(business-7, it-3) cop(business-7, is-4) det(business-7, an-5) amod(business-7, expensive-6) mark(comply-12, if-8) nsubj(comply-12, one-9) aux(comply-12, does-10) neg(comply-12, not-11) advcl(business-7, comply-12) case(quota-16, with-13) nmod:poss(quota-16, one-14) case(one-14, 's-15) nmod:with(comply-12, quota-16) punct(business-7, .-17)",0,0,0,"root(ROOT, bsiness) advmod(bsiness, Frankly) pnct(bsiness, ,) nsbj(bsiness, it) cop(bsiness, is) det(bsiness, an) amod(bsiness, expensive) mark(comply, if) nsbj(comply, one) ax(comply, does) neg(comply, not) advcl(bsiness, comply) case(qota, with) nmod:poss(qota, one) ""case(one, s)"", nmod:with(comply, qota) pnct(bsiness, .)","root(,NN) advmod(NN,IN) pnct(NN,NN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) mark(VB,IN) nsbj(VB,CD) ax(VB,VBZ) neg(VB,RB) advcl(NN,VB) case(NN,IN) nmod:poss(NN,CD) case(CD,POS) nmod:with(VB,NN) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he now consider establishing a proposal for Wales to have an extra quota at next year's price review and negotiations?,WillMD hePRP nowRB considerVBP establishingVBG aDT proposalNN forIN WalesNNP toTO haveVB anDT extraJJ quotaNN atIN nextJJ yearNN 'sPOS priceNN reviewNN andCC negotiationsNNS ,"root(ROOT-0, consider-4) aux(consider-4, Will-1) nsubj(consider-4, he-2) advmod(consider-4, now-3) xcomp(consider-4, establishing-5) det(proposal-7, a-6) dobj(establishing-5, proposal-7) case(Wales-9, for-8) nmod:for(proposal-7, Wales-9) mark(have-11, to-10) advcl(establishing-5, have-11) det(quota-14, an-12) amod(quota-14, extra-13) dobj(have-11, quota-14) case(review-20, at-15) amod(year-17, next-16) nmod:poss(review-20, year-17) case(year-17, 's-18) compound(review-20, price-19) nmod:at(have-11, review-20) cc(review-20, and-21) nmod:at(have-11, negotiations-22) conj:and(review-20, negotiations-22) punct(consider-4, ?-23)",0,0,1,"root(ROOT, consider) ax(consider, Will) nsbj(consider, he) advmod(consider, now) xcomp(consider, establishing) det(proposal, a) dobj(establishing, proposal) case(Wales, for) nmod:for(proposal, Wales) mark(have, to) advcl(establishing, have) det(qota, an) amod(qota, extra) dobj(have, qota) case(review, at) amod(year, next) nmod:poss(review, year) ""case(year, s)"", compond(review, price) nmod:at(have, review) cc(review, and) nmod:at(have, negotiations) conj:and(review, negotiations) pnct(consider, ?)","root(,VBP) ax(VBP,MD) nsbj(VBP,PRP) advmod(VBP,RB) xcomp(VBP,VBG) det(NN,DT) dobj(VBG,NN) case(NNP,IN) nmod:for(NN,NNP) mark(VB,TO) advcl(VBG,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:poss(NN,NN) case(NN,POS) compond(NN,NN) nmod:at(VB,NN) cc(NN,CC) nmod:at(VB,NNS) conj:and(NN,NNS) pnct(VBP,VBP)","[consider, ROOT, now, he, establishing]","[consider, ROOT, now, he, establishing]",9,[ ],[ ],VBP_consider RB_now PRP_he VBG_establishing ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If the hon. Gentleman were to look at the outgoers scheme  bearing in mind that there is a large preponderence of small farmers in his part of Wales .,IfIN theDT honNN GentlemanNNP wereVBD toTO lookVB atIN theDT outgoersNNS schemeVBP bearingVBG inIN mindNN thatIN thereEX isVBZ aDT largeJJ preponderenceNN ofIN smallJJ farmersNNS inIN hisPRP$ partNN ofIN WalesNNP ,"root(ROOT-0, bearing-13) mark(were-5, If-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(were-5, Gentleman-4) advcl(bearing-13, were-5) mark(look-7, to-6) xcomp(were-5, look-7) case(scheme-11, at-8) det(scheme-11, the-9) compound(scheme-11, outgoers-10) nmod:at(look-7, scheme-11) punct(bearing-13, ,-12) case(mind-15, in-14) nmod:in(bearing-13, mind-15) mark(is-18, that-16) expl(is-18, there-17) ccomp(bearing-13, is-18) det(preponderence-21, a-19) amod(preponderence-21, large-20) nsubj(is-18, preponderence-21) case(farmers-24, of-22) amod(farmers-24, small-23) nmod:of(preponderence-21, farmers-24) case(part-27, in-25) nmod:poss(part-27, his-26) nmod:in(is-18, part-27) case(Wales-29, of-28) nmod:of(part-27, Wales-29) punct(bearing-13, ,-30) punct(bearing-13, .-31)",0,0,0,"root(ROOT, bearing) mark(were, If) det(Gentleman, the) compond(Gentleman, hon.) nsbj(were, Gentleman) advcl(bearing, were) mark(look, to) xcomp(were, look) case(scheme, at) det(scheme, the) compond(scheme, otgoers) nmod:at(look, scheme) pnct(bearing, ,) case(mind, in) nmod:in(bearing, mind) mark(is, that) expl(is, there) ccomp(bearing, is) det(preponderence, a) amod(preponderence, large) nsbj(is, preponderence) case(farmers, of) amod(farmers, small) nmod:of(preponderence, farmers) case(part, in) nmod:poss(part, his) nmod:in(is, part) case(Wales, of) nmod:of(part, Wales) pnct(bearing, ,) pnct(bearing, .)","root(,VBG) mark(VBD,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) advcl(VBG,VBD) mark(VB,TO) xcomp(VBD,VB) case(VBP,IN) det(VBP,DT) compond(VBP,NNS) nmod:at(VB,VBP) pnct(VBG,VBG) case(NN,IN) nmod:in(VBG,NN) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBG,VBZ) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(VBZ,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(VBG,VBG) pnct(VBG,VBG)","[Gentleman, look, bearing, were]","[look, part, were, is, Gentleman, Wales, his, bearing]",10,"[look, part, were, is, Gentleman, Wales, his, bearing]","[look, part, were, is, Gentleman, Wales, his, bearing]",NN_look NN_part VBD_were VBZ_is NNP_Gentleman NNP_Wales PRP$_his VBG_bearing ,"[look, part, were, is, Gentleman, Wales, his, bearing]","[look, part, were, is, Gentleman, Wales, his, bearing]",NN_look NN_part VBD_were VBZ_is NNP_Gentleman NNP_Wales PRP$_his VBG_bearing ,"[look, part, were, is, Gentleman, Wales, his, bearing]",NN_look NN_part VBD_were VBZ_is NNP_Gentleman NNP_Wales PRP$_his VBG_bearing ,"[look, part, were, is, Gentleman, Wales, his, bearing]",NN_look NN_part VBD_were VBZ_is NNP_Gentleman NNP_Wales PRP$_his VBG_bearing ,-3,0,2,0,0,0,0,0,0,0
I think he will agree that my intention to give preference through the scheme  to redistribute the quota particularly to smaller farmers  will be of particular benefit to farmers in both Wales and the south west of England.,IPRP thinkVBP hePRP willMD agreeVB thatIN myPRP$ intentionNN toTO giveVB preferenceNN throughIN theDT schemeNN toTO redistributeVB theDT quotaNN particularlyRB toTO smallerJJR farmersNNS willMD beVB ofIN particularJJ benefitNN toTO farmersNNS inIN bothDT WalesNNP andCC theDT southJJ westNN ofIN EnglandNNP ,"root(ROOT-0, think-2) nsubj(think-2, I-1) nsubj(agree-5, he-3) aux(agree-5, will-4) ccomp(think-2, agree-5) mark(benefit-29, that-6) nmod:poss(intention-8, my-7) nsubj(benefit-29, intention-8) mark(give-10, to-9) acl(intention-8, give-10) dobj(give-10, preference-11) case(scheme-14, through-12) det(scheme-14, the-13) nmod:through(give-10, scheme-14) punct(intention-8, ,-15) mark(redistribute-17, to-16) acl(intention-8, redistribute-17) det(quota-19, the-18) dobj(redistribute-17, quota-19) advmod(farmers-23, particularly-20) case(farmers-23, to-21) amod(farmers-23, smaller-22) nmod:to(redistribute-17, farmers-23) punct(intention-8, ,-24) aux(benefit-29, will-25) cop(benefit-29, be-26) case(benefit-29, of-27) amod(benefit-29, particular-28) ccomp(agree-5, benefit-29) case(farmers-31, to-30) nmod:to(benefit-29, farmers-31) case(Wales-34, in-32) cc:preconj(Wales-34, both-33) nmod:in(benefit-29, Wales-34) cc(Wales-34, and-35) det(west-38, the-36) amod(west-38, south-37) nmod:in(benefit-29, west-38) conj:and(Wales-34, west-38) case(England-40, of-39) nmod:of(west-38, England-40) punct(think-2, .-41)",0,0,0,"root(ROOT, think) nsbj(think, I) nsbj(agree, he) ax(agree, will) ccomp(think, agree) mark(benefit, that) nmod:poss(intention, my) nsbj(benefit, intention) mark(give, to) acl(intention, give) dobj(give, preference) case(scheme, throgh) det(scheme, the) nmod:throgh(give, scheme) pnct(intention, ,) mark(redistribte, to) acl(intention, redistribte) det(qota, the) dobj(redistribte, qota) advmod(farmers, particlarly) case(farmers, to) amod(farmers, smaller) nmod:to(redistribte, farmers) pnct(intention, ,) ax(benefit, will) cop(benefit, be) case(benefit, of) amod(benefit, particlar) ccomp(agree, benefit) case(farmers, to) nmod:to(benefit, farmers) case(Wales, in) cc:preconj(Wales, both) nmod:in(benefit, Wales) cc(Wales, and) det(west, the) amod(west, soth) nmod:in(benefit, west) conj:and(Wales, west) case(England, of) nmod:of(west, England) pnct(think, .)","root(,VBP) nsbj(VBP,PRP) nsbj(VB,PRP) ax(VB,MD) ccomp(VBP,VB) mark(NN,IN) nmod:poss(NN,PRP$) nsbj(NN,NN) mark(VB,TO) acl(NN,VB) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:throgh(VB,NN) pnct(NN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) advmod(NNS,RB) case(NNS,TO) amod(NNS,JJR) nmod:to(VB,NNS) pnct(NN,NN) ax(NN,MD) cop(NN,VB) case(NN,IN) amod(NN,JJ) ccomp(VB,NN) case(NNS,TO) nmod:to(NN,NNS) case(NNP,IN) cc:preconj(NNP,DT) nmod:in(NN,NNP) cc(NNP,CC) det(NN,DT) amod(NN,JJ) nmod:in(NN,NN) conj:and(NNP,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(VBP,VBP)","[he, think, agree, benefit]","[he, think, agree, benefit]",10,[ ],[ ],PRP_he VBP_think VB_agree NN_benefit ,"[he, think, agree, benefit]","[he, think, agree, benefit]",PRP_he VBP_think VB_agree NN_benefit ,"[he, think, agree, benefit]",PRP_he VBP_think VB_agree NN_benefit ,"[he, think, agree, benefit]",PRP_he VBP_think VB_agree NN_benefit ,-3,0,2,1,1,1,1,1,1,2
Despite all that my right hon. Friend has just said  is he aware that dairy farmers in this country have presided over a 9 per cent.,DespiteIN allPDT thatDT myPRP$ rightJJ honNN FriendNNP hasVBZ justRB saidVBD isVBZ hePRP awareJJ thatIN dairyNN farmersNNS inIN thisDT countryNN haveVBP presidedVBN overIN aDT 9CD perIN centNN ,"root(ROOT-0, aware-14) case(all-2, Despite-1) nmod:despite(aware-14, all-2) dobj(said-10, that-3) nmod:poss(Friend-7, my-4) amod(Friend-7, right-5) compound(Friend-7, hon.-6) nsubj(said-10, Friend-7) aux(said-10, has-8) advmod(said-10, just-9) acl:relcl(all-2, said-10) punct(aware-14, ,-11) cop(aware-14, is-12) nsubj(aware-14, he-13) mark(presided-22, that-15) compound(farmers-17, dairy-16) nsubj(presided-22, farmers-17) case(country-20, in-18) det(country-20, this-19) nmod:in(farmers-17, country-20) aux(presided-22, have-21) ccomp(aware-14, presided-22) advmod(presided-22, over-23) dep(over-23, a-24) amod(a-24, 9-25) case(cent-27, per-26) nmod:per(9-25, cent-27) punct(aware-14, .-28)",0,0,0,"root(ROOT, aware) case(all, Despite) nmod:despite(aware, all) dobj(said, that) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(said, Friend) ax(said, has) advmod(said, jst) acl:relcl(all, said) pnct(aware, ,) cop(aware, is) nsbj(aware, he) mark(presided, that) compond(farmers, dairy) nsbj(presided, farmers) case(contry, in) det(contry, this) nmod:in(farmers, contry) ax(presided, have) ccomp(aware, presided) advmod(presided, over) dep(over, a) amod(a, 9) case(cent, per) nmod:per(9, cent) pnct(aware, .)","root(,JJ) case(PDT,IN) nmod:despite(JJ,PDT) dobj(VBD,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) ax(VBD,VBZ) advmod(VBD,RB) acl:relcl(PDT,VBD) pnct(JJ,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) mark(VBN,IN) compond(NNS,NN) nsbj(VBN,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) ax(VBN,VBP) ccomp(JJ,VBN) advmod(VBN,IN) dep(IN,DT) DTmod(DT,CD) case(NN,IN) nmod:per(CD,NN) pnct(JJ,JJ)","[aware, he, right, Friend, presided, my, that, ROOT, said, all, just]","[aware, he, Friend, presided, my, that, ROOT, said, all, just]",11,"[aware, ROOT, he, presided, all]",[ ],JJ_aware PRP_he NNP_Friend VBN_presided PRP$_my IN_that VBD_said DT_all RB_just ,"[aware, he, Friend, presided, my, that, ROOT, said, all, just]","[aware, he, Friend, presided, my, that, ROOT, said, all, just]",JJ_aware PRP_he NNP_Friend VBN_presided PRP$_my IN_that VBD_said DT_all RB_just ,"[aware, he, Friend, presided, my, that, ROOT, said, all, just]",JJ_aware PRP_he NNP_Friend VBN_presided PRP$_my IN_that VBD_said DT_all RB_just ,"[aware, he, Friend, presided, my, that, ROOT, said, all, just]",JJ_aware PRP_he NNP_Friend VBN_presided PRP$_my IN_that VBD_said DT_all RB_just ,-3,0,1,0,0,0,0,0,0,0
reduction in production and witnessed a £1 875 loss of income?,reductionNN inIN productionNN andCC witnessedVBD aDT £1JJ 875CD lossNN ofIN incomeNN ,"root(ROOT-0, reduction-1) case(production-3, in-2) nmod:in(reduction-1, production-3) cc(reduction-1, and-4) conj:and(reduction-1, witnessed-5) det(loss-9, a-6) compound(loss-9, #-7) nummod(loss-9, 1,875-8) dobj(witnessed-5, loss-9) case(income-11, of-10) nmod:of(loss-9, income-11) punct(reduction-1, ?-12)",0,0,0,"root(ROOT, redction) case(prodction, in) nmod:in(redction, prodction) cc(redction, and) conj:and(redction, witnessed) det(loss, a) compond(loss, #) nmmod(loss, 1,875) dobj(witnessed, loss) case(income, of) nmod:of(loss, income) pnct(redction, ?)","root(,NN) case(NN,IN) nmod:in(NN,NN) cc(NN,CC) conj:and(NN,VBD) det(NN,DT) compond(NN,NN) nmmod(NN,NN) dobj(VBD,NN) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The cut that British dairy farmers have to make is not 9 per cent.  as my hon. Friend said  but 6.5 per cent.,TheDT cutNN thatWDT BritishJJ dairyNN farmersNNS haveVBP toTO makeVB isVBZ notRB 9CD perJJ centNN asIN myPRP$ honNN FriendNNP saidVBD butCC 65CD perIN centNN ,"root(ROOT-0, 9-12) det(cut-2, The-1) nsubj(9-12, cut-2) dobj(have-7, that-3) amod(farmers-6, British-4) compound(farmers-6, dairy-5) nsubj(have-7, farmers-6) acl:relcl(cut-2, have-7) mark(make-9, to-8) xcomp(have-7, make-9) cop(9-12, is-10) neg(9-12, not-11) case(cent.-14, per-13) nmod:per(9-12, cent.-14) punct(9-12, ,-15) mark(said-20, as-16) nmod:poss(Friend-19, my-17) compound(Friend-19, hon.-18) nsubj(said-20, Friend-19) advcl(9-12, said-20) punct(said-20, ,-21) cc(said-20, but-22) advcl(9-12, 6.5-23) conj:but(said-20, 6.5-23) case(cent-25, per-24) nmod:per(6.5-23, cent-25) punct(9-12, .-26)",0,0,0,"root(ROOT, 9) det(ct, The) nsbj(9, ct) dobj(have, that) amod(farmers, British) compond(farmers, dairy) nsbj(have, farmers) acl:relcl(ct, have) mark(make, to) xcomp(have, make) cop(9, is) neg(9, not) case(cent., per) nmod:per(9, cent.) pnct(9, ,) mark(said, as) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(said, Friend) advcl(9, said) pnct(said, ,) cc(said, bt) advcl(9, 6.5) conj:bt(said, 6.5) case(cent, per) nmod:per(6.5, cent) pnct(9, .)","root(,CD) det(NN,DT) nsbj(CD,NN) dobj(VBP,WDT) amod(NNS,JJ) compond(NNS,NN) nsbj(VBP,NNS) acl:relcl(NN,VBP) mark(VB,TO) xcomp(VBP,VB) cop(CD,VBZ) neg(CD,RB) case(RB,IN) nmod:per(CD,CD) pnct(CD,CD) mark(VBD,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBD,NNP) advcl(CD,VBD) pnct(VBD,VBD) cc(VBD,CC) advcl(CD,CD) conj:bt(VBD,VBD) case(NN,IN) nmod:per(IN,NN) pnct(CD,CD)","[but, said, Friend, my, 9]","[but, said, Friend, my, 9]",12,"[but, said, Friend, my, 9]","[but, said, Friend, my, 9]",CC_but VBD_said NNP_Friend PRP$_my CD_9 ,"[but, said, Friend, my, 9]","[but, said, Friend, my, 9]",CC_but VBD_said NNP_Friend PRP$_my CD_9 ,[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Within the Community I see evidence that member states are moving towards their levy quantity.,WithinIN theDT CommunityNNP IPRP seeVBP evidenceNN thatIN memberNN statesNNS areVBP movingVBG towardsNNS theirPRP$ levyNN quantityNN ,"root(ROOT-0, see-5) case(Community-3, Within-1) det(Community-3, the-2) nmod:within(see-5, Community-3) nsubj(see-5, I-4) dobj(see-5, evidence-6) mark(moving-11, that-7) compound(states-9, member-8) nsubj(moving-11, states-9) aux(moving-11, are-10) ccomp(evidence-6, moving-11) case(quantity-15, towards-12) nmod:poss(quantity-15, their-13) compound(quantity-15, levy-14) nmod:towards(moving-11, quantity-15) punct(see-5, .-16)",0,0,0,"root(ROOT, see) case(Commnity, Within) det(Commnity, the) nmod:within(see, Commnity) nsbj(see, I) dobj(see, evidence) mark(moving, that) compond(states, member) nsbj(moving, states) ax(moving, are) ccomp(evidence, moving) case(qantity, towards) nmod:poss(qantity, their) compond(qantity, levy) nmod:towards(moving, qantity) pnct(see, .)","root(,VBP) case(NNP,IN) det(NNP,DT) nmod:within(VBP,NNP) nsbj(VBP,PRP) dobj(VBP,NN) mark(VBG,IN) compond(NNS,NN) nsbj(VBG,NNS) ax(VBG,VBP) ccomp(NN,VBG) case(NN,NNS) nmod:poss(NN,PRP$) compond(NN,NN) nmod:towards(VBG,NN) pnct(VBP,VBP)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The latest information that I understand the Commission has about the French dairy industry is that the French authorities expect that the current trend in milk production in France and the response from their outgoers scheme will mean that no levy will become due at the end of the year.,TheDT latestJJS informationNN thatIN IPRP understandVBP theDT CommissionNNP hasVBZ aboutIN theDT FrenchJJ dairyNN industryNN isVBZ thatIN theDT FrenchJJ authoritiesNNS expectVBP thatIN theDT currentJJ trendNN inIN milkNN productionNN inIN FranceNNP andCC theDT responseNN fromIN theirPRP$ outgoersNNS schemeVBP willMD meanVB thatIN noDT levyNN willMD becomeVB dueJJ atIN theDT endNN ofIN theDT yearNN ,"root(ROOT-0, has-9) det(information-3, The-1) amod(information-3, latest-2) nsubj(has-9, information-3) mark(understand-6, that-4) nsubj(understand-6, I-5) acl:relcl(information-3, understand-6) det(Commission-8, the-7) dobj(understand-6, Commission-8) case(industry-14, about-10) det(industry-14, the-11) amod(industry-14, French-12) compound(industry-14, dairy-13) nmod:about(has-9, industry-14) dep(has-9, is-15) mark(expect-20, that-16) det(authorities-19, the-17) amod(authorities-19, French-18) nsubj(expect-20, authorities-19) ccomp(is-15, expect-20) mark(mean-38, that-21) det(trend-24, the-22) amod(trend-24, current-23) nsubj(mean-38, trend-24) case(production-27, in-25) compound(production-27, milk-26) nmod:in(trend-24, production-27) case(France-29, in-28) nmod:in(production-27, France-29) cc(production-27, and-30) det(response-32, the-31) nmod:in(trend-24, response-32) conj:and(production-27, response-32) case(scheme-36, from-33) nmod:poss(scheme-36, their-34) compound(scheme-36, outgoers-35) nmod:from(response-32, scheme-36) aux(mean-38, will-37) ccomp(expect-20, mean-38) mark(become-43, that-39) neg(levy-41, no-40) nsubj(become-43, levy-41) aux(become-43, will-42) ccomp(mean-38, become-43) xcomp(become-43, due-44) case(end-47, at-45) det(end-47, the-46) nmod:at(due-44, end-47) case(year-50, of-48) det(year-50, the-49) nmod:of(end-47, year-50) punct(has-9, .-51)",0,0,1,"root(ROOT, has) det(information, The) amod(information, latest) nsbj(has, information) mark(nderstand, that) nsbj(nderstand, I) acl:relcl(information, nderstand) det(Commission, the) dobj(nderstand, Commission) case(indstry, abot) det(indstry, the) amod(indstry, French) compond(indstry, dairy) nmod:abot(has, indstry) dep(has, is) mark(expect, that) det(athorities, the) amod(athorities, French) nsbj(expect, athorities) ccomp(is, expect) mark(mean, that) det(trend, the) amod(trend, crrent) nsbj(mean, trend) case(prodction, in) compond(prodction, milk) nmod:in(trend, prodction) case(France, in) nmod:in(prodction, France) cc(prodction, and) det(response, the) nmod:in(trend, response) conj:and(prodction, response) case(scheme, from) nmod:poss(scheme, their) compond(scheme, otgoers) nmod:from(response, scheme) ax(mean, will) ccomp(expect, mean) mark(become, that) neg(levy, no) nsbj(become, levy) ax(become, will) ccomp(mean, become) xcomp(become, de) case(end, at) det(end, the) nmod:at(de, end) case(year, of) det(year, the) nmod:of(end, year) pnct(has, .)","root(,VBZ) det(NN,DT) amod(NN,JJS) nsbj(VBZ,NN) mark(VBP,IN) nsbj(VBP,PRP) acl:relcl(NN,VBP) det(NNP,DT) dobj(VBP,NNP) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:abot(VBZ,NN) dep(VBZ,VBZ) mark(VBP,IN) det(NNS,DT) amod(NNS,JJ) nsbj(VBP,NNS) ccomp(VBZ,VBP) mark(VB,IN) det(NN,DT) amod(NN,JJ) nsbj(VB,NN) case(NN,IN) compond(NN,NN) nmod:in(NN,NN) case(NNP,IN) nmod:in(NN,NNP) cc(NN,CC) det(NN,DT) nmod:in(NN,NN) conj:and(NN,NN) case(VBP,IN) nmod:poss(VBP,PRP$) compond(VBP,NNS) nmod:from(NN,VBP) ax(VB,MD) ccomp(VBP,VB) mark(VB,IN) neg(NN,DT) nsbj(VB,NN) ax(VB,MD) ccomp(VB,VB) xcomp(VB,JJ) case(NN,IN) det(NN,DT) nmod:at(JJ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBZ,VBZ)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Can the Minister tell us how many farm workers have lost their jobs because of the imposition of quotas?,CanMD theDT MinisterNNP tellVBP usPRP howWRB manyJJ farmNN workersNNS haveVBP lostVBN theirPRP$ jobsNNS becauseIN ofIN theDT impositionNN ofIN quotasNNS ,"root(ROOT-0, tell-4) aux(tell-4, Can-1) det(Minister-3, the-2) nsubj(tell-4, Minister-3) dobj(tell-4, us-5) advmod(many-7, how-6) amod(workers-9, many-7) compound(workers-9, farm-8) nsubj(lost-11, workers-9) aux(lost-11, have-10) ccomp(tell-4, lost-11) nmod:poss(jobs-13, their-12) dobj(lost-11, jobs-13) case(imposition-17, because-14) mwe(because-14, of-15) det(imposition-17, the-16) nmod:because_of(lost-11, imposition-17) case(quotas-19, of-18) nmod:of(imposition-17, quotas-19) punct(tell-4, ?-20)",0,1,0,"root(ROOT, tell) ax(tell, Can) det(Minister, the) nsbj(tell, Minister) dobj(tell, s) advmod(many, how) amod(workers, many) compond(workers, farm) nsbj(lost, workers) ax(lost, have) ccomp(tell, lost) nmod:poss(jobs, their) dobj(lost, jobs) case(imposition, becase) mwe(becase, of) det(imposition, the) nmod:becase_of(lost, imposition) case(qotas, of) nmod:of(imposition, qotas) pnct(tell, ?)","root(,VBP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) dobj(VBP,PRP) advmod(JJ,WRB) amod(NNS,JJ) compond(NNS,NN) nsbj(VBN,NNS) ax(VBN,VBP) ccomp(VBP,VBN) nmod:poss(NNS,PRP$) dobj(VBN,NNS) case(NN,IN) mwe(IN,IN) det(NN,DT) nmod:becase_of(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBP,VBP)","[tell, ROOT, us, lost, Minister]","[tell, ROOT, us, lost, Minister]",13,[ ],[ ],VB_tell PRP_us VBN_lost NNP_Minister ,"[tell, ROOT, us, lost, Minister]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he give further consideration to the payment of compensation to any farm worker who loses his job because of quotas?,WillMD hePRP giveVB furtherJJ considerationNN toTO theDT paymentNN ofIN compensationNN toTO anyDT farmNN workerNN whoWP losesVBZ hisPRP$ jobNN becauseIN ofIN quotasNNS ,"root(ROOT-0, give-3) aux(give-3, Will-1) nsubj(give-3, he-2) amod(consideration-5, further-4) dobj(give-3, consideration-5) case(payment-8, to-6) det(payment-8, the-7) nmod:to(give-3, payment-8) case(compensation-10, of-9) nmod:of(payment-8, compensation-10) case(worker-14, to-11) det(worker-14, any-12) compound(worker-14, farm-13) nmod:to(payment-8, worker-14) nsubj(loses-16, who-15) acl:relcl(worker-14, loses-16) nmod:poss(job-18, his-17) dobj(loses-16, job-18) case(quotas-21, because-19) mwe(because-19, of-20) nmod:because_of(loses-16, quotas-21) punct(give-3, ?-22)",0,0,1,"root(ROOT, give) ax(give, Will) nsbj(give, he) amod(consideration, frther) dobj(give, consideration) case(payment, to) det(payment, the) nmod:to(give, payment) case(compensation, of) nmod:of(payment, compensation) case(worker, to) det(worker, any) compond(worker, farm) nmod:to(payment, worker) nsbj(loses, who) acl:relcl(worker, loses) nmod:poss(job, his) dobj(loses, job) case(qotas, becase) mwe(becase, of) nmod:becase_of(loses, qotas) pnct(give, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) amod(NN,JJ) dobj(VB,NN) case(NN,TO) det(NN,DT) nmod:to(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(NN,NN) nsbj(VBZ,WP) acl:relcl(NN,VBZ) nmod:poss(NN,PRP$) dobj(VBZ,NN) case(NNS,IN) mwe(IN,IN) nmod:becase_of(VBZ,NNS) pnct(VB,VB)","[he, ROOT, give, payment, consideration]","[loses, consideration, he, his, ROOT, payment, give, job]",13,"[his, loses, job]","[his, loses, job]",VBZ_loses NN_consideration PRP_he PRP$_his NN_payment VB_give NN_job ,"[loses, consideration, he, his, ROOT, payment, give, job]","[loses, consideration, he, his, ROOT, payment, give, job]",VBZ_loses NN_consideration PRP_he PRP$_his NN_payment VB_give NN_job ,"[loses, consideration, he, his, ROOT, payment, give, job]",VBZ_loses NN_consideration PRP_he PRP$_his NN_payment VB_give NN_job ,"[loses, consideration, he, his, ROOT, payment, give, job]",VBZ_loses NN_consideration PRP_he PRP$_his NN_payment VB_give NN_job ,-3,0,2,2,1,2,2,2,2,2
I have answered that question before.,IPRP haveVBP answeredVBN thatIN questionNN beforeIN ,"root(ROOT-0, answered-3) nsubj(answered-3, I-1) aux(answered-3, have-2) det(question-5, that-4) dobj(answered-3, question-5) advmod(answered-3, before-6) punct(answered-3, .-7)",0,1,0,"root(ROOT, answered) nsbj(answered, I) ax(answered, have) det(qestion, that) dobj(answered, qestion) advmod(answered, before) pnct(answered, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) det(NN,IN) dobj(VBN,NN) advmod(VBN,IN) pnct(VBN,VBN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have no knowledge of the number of farm workers who may or may not have lost their jobs  but I have told the House before about the arrangements to compensate those who are unfortunate enough to lose their jobs.,IPRP haveVBP noDT knowledgeNN ofIN theDT numberNN ofIN farmNN workersNNS whoWP mayMD orCC mayMD notRB haveVB lostVBN theirPRP$ jobsNNS butCC IPRP haveVBP toldVBN theDT HouseNNP beforeIN aboutIN theDT arrangementsNNS toTO compensateVB thoseDT whoWP areVBP unfortunateJJ enoughRB toTO loseVB theirPRP$ jobsNNS ,"root(ROOT-0, have-2) nsubj(have-2, I-1) neg(knowledge-4, no-3) dobj(have-2, knowledge-4) case(number-7, of-5) det(number-7, the-6) nmod:of(knowledge-4, number-7) case(workers-10, of-8) compound(workers-10, farm-9) nmod:of(number-7, workers-10) dep(workers-10, who-11) dep(who-11, may-12) cc(may-12, or-13) aux(lost-17, may-14) neg(lost-17, not-15) aux(lost-17, have-16) dep(who-11, lost-17) conj:or(may-12, lost-17) nmod:poss(jobs-19, their-18) dobj(lost-17, jobs-19) punct(may-12, ,-20) cc(may-12, but-21) nsubj(told-24, I-22) aux(told-24, have-23) dep(who-11, told-24) conj:or(may-12, told-24) det(House-26, the-25) dobj(told-24, House-26) case(arrangements-30, before-27) case(arrangements-30, about-28) det(arrangements-30, the-29) nmod:about(told-24, arrangements-30) mark(compensate-32, to-31) acl(arrangements-30, compensate-32) dobj(compensate-32, those-33) nsubj(unfortunate-36, who-34) cop(unfortunate-36, are-35) acl:relcl(those-33, unfortunate-36) xcomp(unfortunate-36, enough-37) mark(lose-39, to-38) xcomp(enough-37, lose-39) nmod:poss(jobs-41, their-40) dobj(lose-39, jobs-41) punct(have-2, .-42)",0,0,0,"root(ROOT, have) nsbj(have, I) neg(knowledge, no) dobj(have, knowledge) case(nmber, of) det(nmber, the) nmod:of(knowledge, nmber) case(workers, of) compond(workers, farm) nmod:of(nmber, workers) dep(workers, who) dep(who, may) cc(may, or) ax(lost, may) neg(lost, not) ax(lost, have) dep(who, lost) conj:or(may, lost) nmod:poss(jobs, their) dobj(lost, jobs) pnct(may, ,) cc(may, bt) nsbj(told, I) ax(told, have) dep(who, told) conj:or(may, told) det(Hose, the) dobj(told, Hose) case(arrangements, before) case(arrangements, abot) det(arrangements, the) nmod:abot(told, arrangements) mark(compensate, to) acl(arrangements, compensate) dobj(compensate, those) nsbj(nfortnate, who) cop(nfortnate, are) acl:relcl(those, nfortnate) xcomp(nfortnate, enogh) mark(lose, to) xcomp(enogh, lose) nmod:poss(jobs, their) dobj(lose, jobs) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) neg(NN,DT) dobj(VBP,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) dep(NNS,WP) dep(WP,MD) cc(MD,CC) ax(VBN,MD) neg(VBN,RB) ax(VBN,VBP) dep(WP,VBN) conj:or(MD,VBN) nmod:poss(NNS,PRP$) dobj(VBN,NNS) pnct(MD,MD) cc(MD,CC) nsbj(VBN,PRP) ax(VBN,VBP) dep(WP,VBN) conj:or(MD,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNS,IN) case(NNS,IN) det(NNS,DT) nmod:abot(VBN,NNS) mark(VB,TO) acl(NNS,VB) dobj(VB,DT) nsbj(JJ,WP) cop(JJ,VBP) acl:relcl(DT,JJ) xcomp(JJ,RB) mark(VB,TO) xcomp(RB,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) pnct(VBP,VBP)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What reassurance can my right hon. Friend give to small dairy farmers producing 200 000 litres and less that their quotas will be brought back to 1983 production levels?,WhatWP reassuranceNN canMD myPRP$ rightJJ honNN FriendNNP giveNN toTO smallJJ dairyNN farmersNNS producingVBG 200CD 000CD litresNNS andCC lessJJR thatIN theirPRP$ quotasNNS willMD beVB broughtVBN backRB toTO 1983CD productionNN levelsNNS ,"root(ROOT-0, give-8) det(reassurance-2, What-1) dobj(give-8, reassurance-2) aux(give-8, can-3) nmod:poss(Friend-7, my-4) amod(Friend-7, right-5) compound(Friend-7, hon.-6) nsubj(give-8, Friend-7) case(farmers-12, to-9) amod(farmers-12, small-10) compound(farmers-12, dairy-11) nmod:to(give-8, farmers-12) acl(farmers-12, producing-13) nummod(litres-15, 200,000-14) dobj(producing-13, litres-15) cc(litres-15, and-16) dobj(producing-13, less-17) conj:and(litres-15, less-17) mark(brought-23, that-18) nmod:poss(quotas-20, their-19) nsubjpass(brought-23, quotas-20) aux(brought-23, will-21) auxpass(brought-23, be-22) ccomp(less-17, brought-23) advmod(brought-23, back-24) case(levels-28, to-25) nummod(levels-28, 1983-26) compound(levels-28, production-27) nmod:to(back-24, levels-28) punct(give-8, ?-29)",0,0,0,"root(ROOT, give) det(reassrance, What) dobj(give, reassrance) ax(give, can) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(give, Friend) case(farmers, to) amod(farmers, small) compond(farmers, dairy) nmod:to(give, farmers) acl(farmers, prodcing) nmmod(litres, 200,000) dobj(prodcing, litres) cc(litres, and) dobj(prodcing, less) conj:and(litres, less) mark(broght, that) nmod:poss(qotas, their) nsbjpass(broght, qotas) ax(broght, will) axpass(broght, be) ccomp(less, broght) advmod(broght, back) case(levels, to) nmmod(levels, 1983) compond(levels, prodction) nmod:to(back, levels) pnct(give, ?)","root(,NN) det(NN,WP) dobj(NN,NN) ax(NN,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) case(NNS,TO) amod(NNS,JJ) compond(NNS,NN) nmod:to(NN,NNS) acl(NNS,VBG) nmmod(NNS,NNS) dobj(VBG,NNS) cc(NNS,CC) dobj(VBG,JJR) conj:and(NNS,JJR) mark(VBN,IN) nmod:poss(NNS,PRP$) nsbjpass(VBN,NNS) ax(VBN,MD) axpass(VBN,VB) ccomp(JJR,VBN) advmod(VBN,RB) case(NNS,TO) nmmod(NNS,CD) compond(NNS,NN) nmod:to(RB,NNS) pnct(NN,NN)","[Friend, give, my, ROOT, reassurance, farmers, right]","[Friend, give, my, ROOT, reassurance, farmers]",15,[ ],[ ],NNP_Friend VB_give PRP$_my NN_reassurance NNS_farmers ,"[Friend, give, my, ROOT, reassurance, farmers]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Our outgoers scheme has been oversubscribed in terms of applicants.,OurPRP$ outgoersNNS schemeNN hasVBZ beenVBN oversubscribedVBN inIN termsNNS ofIN applicantsNNS ,"root(ROOT-0, oversubscribed-6) nmod:poss(scheme-3, Our-1) compound(scheme-3, outgoers-2) nsubjpass(oversubscribed-6, scheme-3) aux(oversubscribed-6, has-4) auxpass(oversubscribed-6, been-5) case(terms-8, in-7) nmod:in(oversubscribed-6, terms-8) case(applicants-10, of-9) nmod:of(terms-8, applicants-10) punct(oversubscribed-6, .-11)",0,1,0,"root(ROOT, oversbscribed) nmod:poss(scheme, Or) compond(scheme, otgoers) nsbjpass(oversbscribed, scheme) ax(oversbscribed, has) axpass(oversbscribed, been) case(terms, in) nmod:in(oversbscribed, terms) case(applicants, of) nmod:of(terms, applicants) pnct(oversbscribed, .)","root(,VBN) nmod:poss(NN,PRP$) compond(NN,NNS) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) case(NNS,IN) nmod:in(VBN,NNS) case(NNS,IN) nmod:of(NNS,NNS) pnct(VBN,VBN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We have already issued invitations to a sufficient number of applicants to reach the 2.25 per cent.,WePRP haveVBP alreadyRB issuedVBN invitationsNNS toTO aDT sufficientJJ numberNN ofIN applicantsNNS toTO reachVB theDT 225CD perIN centNN ,"root(ROOT-0, issued-4) nsubj(issued-4, We-1) aux(issued-4, have-2) advmod(issued-4, already-3) dobj(issued-4, invitations-5) case(number-9, to-6) det(number-9, a-7) amod(number-9, sufficient-8) nmod:to(invitations-5, number-9) case(applicants-11, of-10) nmod:of(number-9, applicants-11) mark(reach-13, to-12) advcl(issued-4, reach-13) det(2.25-15, the-14) dobj(reach-13, 2.25-15) case(cent-17, per-16) nmod:per(2.25-15, cent-17) punct(issued-4, .-18)",0,0,0,"root(ROOT, issed) nsbj(issed, We) ax(issed, have) advmod(issed, already) dobj(issed, invitations) case(nmber, to) det(nmber, a) amod(nmber, sfficient) nmod:to(invitations, nmber) case(applicants, of) nmod:of(nmber, applicants) mark(reach, to) advcl(issed, reach) det(2.25, the) dobj(reach, 2.25) case(cent, per) nmod:per(2.25, cent) pnct(issed, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) dobj(VBN,NNS) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(NNS,NN) case(NNS,IN) nmod:of(NN,NNS) mark(VB,TO) advcl(VBN,VB) det(VB,DT) dobj(VB,VB) case(NN,IN) nmod:per(IN,NN) pnct(VBN,VBN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of quota which will take up the £50 million that I have provided.,ofIN quotaNN whichWDT willMD takeVB upRP theDT £50NN millionCD thatIN IPRP haveVBP providedVBN ,"root(ROOT-0, quota-2) case(quota-2, of-1) nsubj(take-5, which-3) aux(take-5, will-4) acl:relcl(quota-2, take-5) compound:prt(take-5, up-6) det(million-10, the-7) compound(million-10, #-8) compound(million-10, 50-9) dobj(take-5, million-10) dobj(provided-14, that-11) nsubj(provided-14, I-12) aux(provided-14, have-13) ccomp(take-5, provided-14) punct(quota-2, .-15)",0,0,0,"root(ROOT, qota) case(qota, of) nsbj(take, which) ax(take, will) acl:relcl(qota, take) compond:prt(take, p) det(million, the) compond(million, #) compond(million, 50) dobj(take, million) dobj(provided, that) nsbj(provided, I) ax(provided, have) ccomp(take, provided) pnct(qota, .)","root(,NN) case(NN,IN) nsbj(VB,WDT) ax(VB,MD) acl:relcl(NN,VB) compond:prt(VB,RP) det(CD,DT) compond(CD,CD) compond(CD,CD) dobj(VB,CD) dobj(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(VB,VBN) pnct(NN,NN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
So long as that amount of quota is made available for redistribution  I hope that the smaller dairy farmers will enjoy most of the benefits by having their quotas brought back to 1983 production patterns.,SoRB longRB asIN thatDT amountNN ofIN quotaNN isVBZ madeVBN availableJJ forIN redistributionNN IPRP hopeVBP thatIN theDT smallerJJR dairyNN farmersNNS willMD enjoyVB mostJJS ofIN theDT benefitsNNS byIN havingVBG theirPRP$ quotasNNS broughtVBN backRB toTO 1983CD productionNN patternsNNS ,"root(ROOT-0, hope-15) advmod(long-2, So-1) advmod(made-9, long-2) case(amount-5, as-3) det(amount-5, that-4) nmod:as(long-2, amount-5) case(quota-7, of-6) nmod:of(amount-5, quota-7) auxpass(made-9, is-8) advcl(hope-15, made-9) xcomp(made-9, available-10) case(redistribution-12, for-11) nmod:for(available-10, redistribution-12) punct(hope-15, ,-13) nsubj(hope-15, I-14) mark(enjoy-22, that-16) det(farmers-20, the-17) amod(farmers-20, smaller-18) compound(farmers-20, dairy-19) nsubj(enjoy-22, farmers-20) aux(enjoy-22, will-21) ccomp(hope-15, enjoy-22) dobj(enjoy-22, most-23) case(benefits-26, of-24) det(benefits-26, the-25) nmod:of(most-23, benefits-26) mark(having-28, by-27) advcl(enjoy-22, having-28) nmod:poss(quotas-30, their-29) nsubj(brought-31, quotas-30) ccomp(having-28, brought-31) advmod(brought-31, back-32) case(patterns-36, to-33) nummod(patterns-36, 1983-34) compound(patterns-36, production-35) nmod:to(brought-31, patterns-36) punct(hope-15, .-37)",0,0,0,"root(ROOT, hope) advmod(long, So) advmod(made, long) case(amont, as) det(amont, that) nmod:as(long, amont) case(qota, of) nmod:of(amont, qota) axpass(made, is) advcl(hope, made) xcomp(made, available) case(redistribtion, for) nmod:for(available, redistribtion) pnct(hope, ,) nsbj(hope, I) mark(enjoy, that) det(farmers, the) amod(farmers, smaller) compond(farmers, dairy) nsbj(enjoy, farmers) ax(enjoy, will) ccomp(hope, enjoy) dobj(enjoy, most) case(benefits, of) det(benefits, the) nmod:of(most, benefits) mark(having, by) advcl(enjoy, having) nmod:poss(qotas, their) nsbj(broght, qotas) ccomp(having, broght) advmod(broght, back) case(patterns, to) nmmod(patterns, 1983) compond(patterns, prodction) nmod:to(broght, patterns) pnct(hope, .)","root(,VBP) advmod(RB,RB) advmod(VBN,RB) case(NN,IN) det(NN,IN) nmod:as(RB,NN) case(NN,IN) nmod:of(NN,NN) axpass(VBN,VBZ) advcl(VBP,VBN) xcomp(VBN,JJ) case(NN,IN) nmod:for(JJ,NN) pnct(VBP,VBP) nsbj(VBP,PRP) mark(VB,IN) det(NNS,DT) amod(NNS,JJR) compond(NNS,NN) nsbj(VB,NNS) ax(VB,MD) ccomp(VBP,VB) dobj(VB,JJS) case(NNS,IN) det(NNS,DT) nmod:of(JJS,NNS) mark(VBG,IN) advcl(VB,VBG) nmod:poss(NNS,PRP$) nsbj(VBN,NNS) ccomp(VBG,VBN) advmod(VBN,RB) case(NNS,TO) nmmod(NNS,CD) compond(NNS,NN) nmod:to(VBN,NNS) pnct(VBP,VBP)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We all know that the quotas are not being properly implemented in other European countries  whereas in the United Kingdom they are being properly implemented.,WePRP allDT knowVBP thatIN theDT quotasNNS areVBP notRB beingVBG properlyRB implementedVBN inIN otherJJ EuropeanJJ countriesNNS whereasVBP inIN theDT UnitedNNP KingdomNNP theyPRP areVBP beingVBG properlyRB implementedVBN ,"root(ROOT-0, know-3) nsubj(know-3, We-1) nsubj(know-3, all-2) mark(implemented-11, that-4) det(quotas-6, the-5) nsubjpass(implemented-11, quotas-6) aux(implemented-11, are-7) neg(implemented-11, not-8) auxpass(implemented-11, being-9) advmod(implemented-11, properly-10) ccomp(know-3, implemented-11) case(countries-15, in-12) amod(countries-15, other-13) amod(countries-15, European-14) nmod:in(implemented-11, countries-15) punct(implemented-11, ,-16) mark(implemented-26, whereas-17) case(Kingdom-21, in-18) det(Kingdom-21, the-19) compound(Kingdom-21, United-20) nmod:in(implemented-26, Kingdom-21) nsubjpass(implemented-26, they-22) aux(implemented-26, are-23) auxpass(implemented-26, being-24) advmod(implemented-26, properly-25) advcl(implemented-11, implemented-26) punct(know-3, .-27)",0,0,0,"root(ROOT, know) nsbj(know, We) nsbj(know, all) mark(implemented, that) det(qotas, the) nsbjpass(implemented, qotas) ax(implemented, are) neg(implemented, not) axpass(implemented, being) advmod(implemented, properly) ccomp(know, implemented) case(contries, in) amod(contries, other) amod(contries, Eropean) nmod:in(implemented, contries) pnct(implemented, ,) mark(implemented, whereas) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(implemented, Kingdom) nsbjpass(implemented, they) ax(implemented, are) axpass(implemented, being) advmod(implemented, properly) advcl(implemented, implemented) pnct(know, .)","root(,VBP) nsbj(VBP,PRP) nsbj(VBP,DT) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) ax(VBN,VBP) neg(VBN,RB) axpass(VBN,VBG) advmod(VBN,RB) ccomp(VBP,VBN) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:in(VBN,NNS) pnct(VBN,VBN) mark(VBN,VBP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(VBN,NNP) nsbjpass(VBN,PRP) ax(VBN,VBP) axpass(VBN,VBG) advmod(VBN,RB) advcl(VBN,VBN) pnct(VBP,VBP)",[ ],[ ],17,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Nowhere is that more apparent than in Northern Ireland  where 5 000 dairy farmers stand to pay a levy of £5.2 million.,NowhereRB isVBZ thatIN moreRBR apparentJJ thanIN inIN NorthernNNP IrelandNNP whereWRB 5CD 000CD dairyNN farmersNNS standVBP toTO payVB aDT levyNN ofIN £52CD millionCD ,"root(ROOT-0, Nowhere-1) dep(Nowhere-1, is-2) xcomp(is-2, that-3) advmod(apparent-5, more-4) dep(that-3, apparent-5) case(Ireland-9, than-6) case(Ireland-9, in-7) compound(Ireland-9, Northern-8) nmod:in(apparent-5, Ireland-9) punct(apparent-5, ,-10) advmod(stand-15, where-11) nummod(farmers-14, 5,000-12) compound(farmers-14, dairy-13) nsubj(stand-15, farmers-14) advcl(apparent-5, stand-15) mark(pay-17, to-16) xcomp(stand-15, pay-17) det(levy-19, a-18) dobj(pay-17, levy-19) case(million-23, of-20) compound(million-23, #-21) compound(million-23, 5.2-22) nmod:of(levy-19, million-23) punct(Nowhere-1, .-24)",0,0,0,"root(ROOT, Nowhere) dep(Nowhere, is) xcomp(is, that) advmod(apparent, more) dep(that, apparent) case(Ireland, than) case(Ireland, in) compond(Ireland, Northern) nmod:in(apparent, Ireland) pnct(apparent, ,) advmod(stand, where) nmmod(farmers, 5,000) compond(farmers, dairy) nsbj(stand, farmers) advcl(apparent, stand) mark(pay, to) xcomp(stand, pay) det(levy, a) dobj(pay, levy) case(million, of) compond(million, #) compond(million, 5.2) nmod:of(levy, million) pnct(Nowhere, .)","root(,RB) dep(RB,VBZ) xcomp(VBZ,IN) advmod(JJ,RBR) dep(IN,JJ) case(NNP,IN) case(NNP,IN) compond(NNP,NNP) nmod:in(JJ,NNP) pnct(JJ,JJ) advmod(VBP,WRB) nmmod(NNS,NNS) compond(NNS,NN) nsbj(VBP,NNS) advcl(JJ,VBP) mark(VB,TO) xcomp(VBP,VB) det(NN,DT) dobj(VB,NN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NN,CD) pnct(RB,RB)",[ ],[ ],17,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am aware that a smaller proportion of Northern Ireland dairy farmers than we expected have applied for the outgoers scheme.,IPRP amVBP awareJJ thatIN aDT smallerJJR proportionNN ofIN NorthernNNP IrelandNNP dairyNN farmersNNS thanIN wePRP expectedVBD haveVBP appliedVBN forIN theDT outgoersNNS schemeVBP ,"root(ROOT-0, aware-3) nsubj(aware-3, I-1) cop(aware-3, am-2) dep(aware-3, that-4) det(proportion-7, a-5) amod(proportion-7, smaller-6) dep(that-4, proportion-7) case(farmers-12, of-8) amod(farmers-12, Northern-9) compound(farmers-12, Ireland-10) compound(farmers-12, dairy-11) nmod:of(proportion-7, farmers-12) mark(expected-15, than-13) nsubj(expected-15, we-14) acl(proportion-7, expected-15) aux(applied-17, have-16) xcomp(expected-15, applied-17) case(scheme-21, for-18) det(scheme-21, the-19) compound(scheme-21, outgoers-20) nmod:for(applied-17, scheme-21) punct(aware-3, .-22)",0,1,0,"root(ROOT, aware) nsbj(aware, I) cop(aware, am) dep(aware, that) det(proportion, a) amod(proportion, smaller) dep(that, proportion) case(farmers, of) amod(farmers, Northern) compond(farmers, Ireland) compond(farmers, dairy) nmod:of(proportion, farmers) mark(expected, than) nsbj(expected, we) acl(proportion, expected) ax(applied, have) xcomp(expected, applied) case(scheme, for) det(scheme, the) compond(scheme, otgoers) nmod:for(applied, scheme) pnct(aware, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) dep(JJ,IN) det(NN,DT) amod(NN,JJR) dep(IN,NN) case(NNS,IN) amod(NNS,NNP) compond(NNS,NNP) compond(NNS,NN) nmod:of(NN,NNS) mark(VBD,IN) nsbj(VBD,PRP) acl(NN,VBD) ax(VBN,VBP) xcomp(VBD,VBN) case(VBP,IN) det(VBP,DT) compond(VBP,NNS) nmod:for(VBN,VBP) pnct(JJ,JJ)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Many dairy farmers throughout the Community will be liable to pay a levy  but for Northern Ireland producers who have overshot their quota the Commission recently agreed that 50 per cent.,ManyJJ dairyNN farmersNNS throughoutIN theDT CommunityNNP willMD beVB liableJJ toTO payVB aDT levyNN butCC forIN NorthernNNP IrelandNNP producersNNS whoWP haveVBP overshotVBN theirPRP$ quotaNN theDT CommissionNNP recentlyRB agreedVBD thatIN 50CD perIN centNN ,"root(ROOT-0, liable-9) amod(farmers-3, Many-1) compound(farmers-3, dairy-2) nsubj(liable-9, farmers-3) case(Community-6, throughout-4) det(Community-6, the-5) nmod:throughout(farmers-3, Community-6) aux(liable-9, will-7) cop(liable-9, be-8) mark(pay-11, to-10) xcomp(liable-9, pay-11) det(levy-13, a-12) dobj(pay-11, levy-13) punct(liable-9, ,-14) cc(liable-9, but-15) case(producers-19, for-16) amod(producers-19, Northern-17) compound(producers-19, Ireland-18) conj:but(liable-9, producers-19) nsubj(overshot-22, who-20) aux(overshot-22, have-21) acl:relcl(producers-19, overshot-22) nmod:poss(quota-24, their-23) nsubj(agreed-28, quota-24) det(Commission-26, the-25) nsubj(agreed-28, Commission-26) advmod(agreed-28, recently-27) ccomp(overshot-22, agreed-28) dobj(agreed-28, that-29) dep(that-29, 50-30) case(cent-32, per-31) nmod:per(50-30, cent-32) punct(liable-9, .-33)",0,0,0,"root(ROOT, liable) amod(farmers, Many) compond(farmers, dairy) nsbj(liable, farmers) case(Commnity, throghot) det(Commnity, the) nmod:throghot(farmers, Commnity) ax(liable, will) cop(liable, be) mark(pay, to) xcomp(liable, pay) det(levy, a) dobj(pay, levy) pnct(liable, ,) cc(liable, bt) case(prodcers, for) amod(prodcers, Northern) compond(prodcers, Ireland) conj:bt(liable, prodcers) nsbj(overshot, who) ax(overshot, have) acl:relcl(prodcers, overshot) nmod:poss(qota, their) nsbj(agreed, qota) det(Commission, the) nsbj(agreed, Commission) advmod(agreed, recently) ccomp(overshot, agreed) dobj(agreed, that) dep(that, 50) case(cent, per) nmod:per(50, cent) pnct(liable, .)","root(,JJ) amod(NNS,JJ) compond(NNS,NN) nsbj(JJ,NNS) case(NNP,IN) det(NNP,DT) nmod:throghot(NNS,NNP) ax(JJ,MD) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) pnct(JJ,JJ) cc(JJ,CC) case(NNS,IN) amod(NNS,NNP) compond(NNS,NNP) conj:bt(JJ,NNS) nsbj(VBN,WP) ax(VBN,VBP) acl:relcl(NNS,VBN) nmod:poss(NN,PRP$) nsbj(VBD,NN) det(NNP,DT) nsbj(VBD,NNP) advmod(VBD,RB) ccomp(VBN,VBD) dobj(VBD,IN) dep(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(JJ,JJ)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the levy should be collected as planned at the end of the present quarter  but that the remainder would be due at the end of the 1984 85 marketing year.,ofIN theDT levyNN shouldMD beVB collectedVBN asIN plannedVBN atIN theDT endNN ofIN theDT presentJJ quarterNN butCC thatIN theDT remainderNN wouldMD beVB dueJJ atIN theDT endNN ofIN theDT 1984CD 85CD marketingNN yearNN ,"root(ROOT-0, collected-6) case(levy-3, of-1) det(levy-3, the-2) nsubjpass(collected-6, levy-3) aux(collected-6, should-4) auxpass(collected-6, be-5) mark(planned-8, as-7) advcl(collected-6, planned-8) case(end-11, at-9) det(end-11, the-10) nmod:at(planned-8, end-11) case(quarter-15, of-12) det(quarter-15, the-13) amod(quarter-15, present-14) nmod:of(end-11, quarter-15) punct(collected-6, ,-16) cc(collected-6, but-17) mark(due-23, that-18) det(remainder-20, the-19) nsubj(due-23, remainder-20) aux(due-23, would-21) cop(due-23, be-22) conj:but(collected-6, due-23) case(end-26, at-24) det(end-26, the-25) nmod:at(due-23, end-26) case(year-32, of-27) det(year-32, the-28) compound(85-30, 1984-29) nummod(year-32, 85-30) compound(year-32, marketing-31) nmod:of(end-26, year-32) punct(collected-6, .-33)",0,0,0,"root(ROOT, collected) case(levy, of) det(levy, the) nsbjpass(collected, levy) ax(collected, shold) axpass(collected, be) mark(planned, as) advcl(collected, planned) case(end, at) det(end, the) nmod:at(planned, end) case(qarter, of) det(qarter, the) amod(qarter, present) nmod:of(end, qarter) pnct(collected, ,) cc(collected, bt) mark(de, that) det(remainder, the) nsbj(de, remainder) ax(de, wold) cop(de, be) conj:bt(collected, de) case(end, at) det(end, the) nmod:at(de, end) case(year, of) det(year, the) compond(85, 1984) nmmod(year, 85) compond(year, marketing) nmod:of(end, year) pnct(collected, .)","root(,VBN) case(NN,IN) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) mark(VBN,IN) advcl(VBN,VBN) case(NN,IN) det(NN,DT) nmod:at(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) pnct(VBN,VBN) cc(VBN,CC) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) ax(JJ,MD) cop(JJ,VB) conj:bt(VBN,JJ) case(NN,IN) det(NN,DT) nmod:at(JJ,NN) case(NN,IN) det(NN,DT) compond(CD,CD) nmmod(NN,CD) compond(NN,NN) nmod:of(NN,NN) pnct(VBN,VBN)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What protection has our domestic market against over quota production of butter in the Republic of Ireland being dumped here?,WhatWP protectionNN hasVBZ ourPRP$ domesticJJ marketNN againstIN overIN quotaJJ productionNN ofIN butterNN inIN theDT RepublicNNP ofIN IrelandNNP beingVBG dumpedVBN hereRB ,"root(ROOT-0, has-3) det(protection-2, What-1) nsubj(has-3, protection-2) nmod:poss(market-6, our-4) amod(market-6, domestic-5) dobj(has-3, market-6) case(production-10, against-7) case(production-10, over-8) compound(production-10, quota-9) nmod:over(market-6, production-10) case(butter-12, of-11) nmod:of(production-10, butter-12) case(Republic-15, in-13) det(Republic-15, the-14) nmod:in(has-3, Republic-15) case(Ireland-17, of-16) nmod:of(Republic-15, Ireland-17) auxpass(dumped-19, being-18) acl(Republic-15, dumped-19) advmod(dumped-19, here-20) punct(has-3, ?-21)",0,1,1,"root(ROOT, has) det(protection, What) nsbj(has, protection) nmod:poss(market, or) amod(market, domestic) dobj(has, market) case(prodction, against) case(prodction, over) compond(prodction, qota) nmod:over(market, prodction) case(btter, of) nmod:of(prodction, btter) case(Repblic, in) det(Repblic, the) nmod:in(has, Repblic) case(Ireland, of) nmod:of(Repblic, Ireland) axpass(dmped, being) acl(Repblic, dmped) advmod(dmped, here) pnct(has, ?)","root(,VBZ) det(NN,WP) nsbj(VBZ,NN) nmod:poss(NN,PRP$) amod(NN,JJ) dobj(VBZ,NN) case(NN,IN) case(NN,IN) compond(NN,JJ) nmod:over(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) nmod:in(VBZ,NNP) case(NNP,IN) nmod:of(NNP,NNP) axpass(VBN,VBG) acl(NNP,VBN) advmod(VBN,RB) pnct(VBZ,VBZ)",[ ],[ ],19,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As my hon. Friend knows  there is a free market for dairy produce of certain types within the Community and there is a relatively free market in butter between member states.,AsIN myPRP$ honNN FriendNNP knowsVBZ thereEX isVBZ aDT freeJJ marketNN forIN dairyNN produceNN ofIN certainJJ typesNNS withinIN theDT CommunityNNP andCC thereEX isVBZ aDT relativelyRB freeJJ marketNN inIN butterNN betweenIN memberNN statesNNS ,"root(ROOT-0, is-8) mark(knows-5, As-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(knows-5, Friend-4) advcl(is-8, knows-5) punct(is-8, ,-6) expl(is-8, there-7) det(market-11, a-9) amod(market-11, free-10) nsubj(is-8, market-11) case(produce-14, for-12) compound(produce-14, dairy-13) nmod:for(market-11, produce-14) case(types-17, of-15) amod(types-17, certain-16) nmod:of(produce-14, types-17) case(Community-20, within-18) det(Community-20, the-19) nmod:within(types-17, Community-20) cc(market-11, and-21) expl(is-23, there-22) nsubj(is-8, is-23) conj:and(market-11, is-23) det(market-27, a-24) advmod(free-26, relatively-25) amod(market-27, free-26) nsubj(is-23, market-27) case(butter-29, in-28) nmod:in(market-27, butter-29) case(states-32, between-30) compound(states-32, member-31) nmod:between(butter-29, states-32) punct(is-8, .-33)",0,0,0,"root(ROOT, is) mark(knows, As) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(knows, Friend) advcl(is, knows) pnct(is, ,) expl(is, there) det(market, a) amod(market, free) nsbj(is, market) case(prodce, for) compond(prodce, dairy) nmod:for(market, prodce) case(types, of) amod(types, certain) nmod:of(prodce, types) case(Commnity, within) det(Commnity, the) nmod:within(types, Commnity) cc(market, and) expl(is, there) nsbj(is, is) conj:and(market, is) det(market, a) advmod(free, relatively) amod(market, free) nsbj(is, market) case(btter, in) nmod:in(market, btter) case(states, between) compond(states, member) nmod:between(btter, states) pnct(is, .)","root(,VBZ) mark(VBZ,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(VBZ,VBZ) pnct(VBZ,VBZ) expl(VBZ,EX) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) compond(NN,NN) nmod:for(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) case(NNP,IN) det(NNP,DT) nmod:within(NNS,NNP) cc(NN,CC) expl(VBZ,EX) nsbj(VBZ,VBZ) conj:and(NN,VBZ) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) nmod:in(NN,NN) case(NNS,IN) compond(NNS,NN) nmod:between(NN,NNS) pnct(VBZ,VBZ)","[my, knows, Friend, is]","[my, knows, Friend, is]",20,"[my, knows, Friend, is]","[my, knows, Friend, is]",PRP$_my VBZ_knows NNP_Friend VBZ_is ,"[my, knows, Friend, is]","[my, knows, Friend, is]",PRP$_my VBZ_knows NNP_Friend VBZ_is ,"[my, knows, Friend, is]",PRP$_my VBZ_knows NNP_Friend VBZ_is ,"[my, knows, Friend, is]",PRP$_my VBZ_knows NNP_Friend VBZ_is ,-3,0,1,0,0,0,0,0,0,0
Will the Minister publish a comprehensive review of the legislative and adminstrative arrangements which other EEC countries intend to make to collect the levy so that we all know exactly what is happening?,WillMD theDT MinisterNNP publishVB aDT comprehensiveJJ reviewNN ofIN theDT legislativeJJ andCC adminstrativeJJ arrangementsNNS whichWDT otherJJ EECNNP countriesNNS intendVBP toTO makeVB toTO collectVB theDT levyNN soRB thatIN wePRP allDT knowVBP exactlyRB whatWP isVBZ happeningVBG ,"root(ROOT-0, publish-4) aux(publish-4, Will-1) det(Minister-3, the-2) nsubj(publish-4, Minister-3) det(review-7, a-5) amod(review-7, comprehensive-6) dobj(publish-4, review-7) case(arrangements-13, of-8) det(arrangements-13, the-9) amod(arrangements-13, legislative-10) cc(legislative-10, and-11) conj:and(legislative-10, adminstrative-12) amod(arrangements-13, adminstrative-12) nmod:of(review-7, arrangements-13) dobj(intend-18, which-14) amod(countries-17, other-15) compound(countries-17, EEC-16) nsubj(intend-18, countries-17) acl:relcl(arrangements-13, intend-18) mark(make-20, to-19) xcomp(intend-18, make-20) mark(collect-22, to-21) xcomp(make-20, collect-22) det(levy-24, the-23) dobj(collect-22, levy-24) mark(know-29, so-25) mark(know-29, that-26) nsubj(know-29, we-27) det(we-27, all-28) advcl(publish-4, know-29) advmod(know-29, exactly-30) nsubj(happening-33, what-31) aux(happening-33, is-32) ccomp(know-29, happening-33) punct(publish-4, ?-34)",0,1,0,"root(ROOT, pblish) ax(pblish, Will) det(Minister, the) nsbj(pblish, Minister) det(review, a) amod(review, comprehensive) dobj(pblish, review) case(arrangements, of) det(arrangements, the) amod(arrangements, legislative) cc(legislative, and) conj:and(legislative, adminstrative) amod(arrangements, adminstrative) nmod:of(review, arrangements) dobj(intend, which) amod(contries, other) compond(contries, EEC) nsbj(intend, contries) acl:relcl(arrangements, intend) mark(make, to) xcomp(intend, make) mark(collect, to) xcomp(make, collect) det(levy, the) dobj(collect, levy) mark(know, so) mark(know, that) nsbj(know, we) det(we, all) advcl(pblish, know) advmod(know, exactly) nsbj(happening, what) ax(happening, is) ccomp(know, happening) pnct(pblish, ?)","root(,VB) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NNS,JJ) nmod:of(NN,NNS) dobj(VBP,WDT) amod(NNS,JJ) compond(NNS,NNP) nsbj(VBP,NNS) acl:relcl(NNS,VBP) mark(VB,TO) xcomp(VBP,VB) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) mark(VBP,RB) mark(VBP,IN) nsbj(VBP,PRP) det(PRP,DT) advcl(VB,VBP) advmod(VBP,RB) nsbj(VBG,WP) ax(VBG,VBZ) ccomp(VBP,VBG) pnct(VB,VB)","[ROOT, publish, review, know, Minister]","[ROOT, publish, review, know, Minister]",21,[ ],[ ],VB_publish NN_review VB_know NNP_Minister ,"[ROOT, publish, review, know, Minister]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I should point out  however  that many Community countries were reducing their milk production towards quota levels in the first months of the scheme.,IPRP shouldMD pointVB outRP howeverRB thatIN manyJJ CommunityNNP countriesNNS wereVBD reducingVBG theirPRP$ milkNN productionNN towardsNNS quotaNN levelsNNS inIN theDT firstJJ monthsNNS ofIN theDT schemeNN ,"root(ROOT-0, point-3) nsubj(point-3, I-1) aux(point-3, should-2) compound:prt(point-3, out-4) punct(point-3, ,-5) advmod(point-3, however-6) punct(point-3, ,-7) mark(reducing-13, that-8) amod(countries-11, many-9) compound(countries-11, Community-10) nsubj(reducing-13, countries-11) aux(reducing-13, were-12) ccomp(point-3, reducing-13) nmod:poss(production-16, their-14) compound(production-16, milk-15) dobj(reducing-13, production-16) case(levels-19, towards-17) compound(levels-19, quota-18) nmod:towards(reducing-13, levels-19) case(months-23, in-20) det(months-23, the-21) amod(months-23, first-22) nmod:in(levels-19, months-23) case(scheme-26, of-24) det(scheme-26, the-25) nmod:of(months-23, scheme-26) punct(point-3, .-27)",0,0,0,"root(ROOT, point) nsbj(point, I) ax(point, shold) compond:prt(point, ot) pnct(point, ,) advmod(point, however) pnct(point, ,) mark(redcing, that) amod(contries, many) compond(contries, Commnity) nsbj(redcing, contries) ax(redcing, were) ccomp(point, redcing) nmod:poss(prodction, their) compond(prodction, milk) dobj(redcing, prodction) case(levels, towards) compond(levels, qota) nmod:towards(redcing, levels) case(months, in) det(months, the) amod(months, first) nmod:in(levels, months) case(scheme, of) det(scheme, the) nmod:of(months, scheme) pnct(point, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) compond:prt(VB,RP) pnct(VB,VB) advmod(VB,RB) pnct(VB,VB) mark(VBG,IN) amod(NNS,JJ) compond(NNS,NNP) nsbj(VBG,NNS) ax(VBG,VBD) ccomp(VB,VBG) nmod:poss(NN,PRP$) compond(NN,NN) dobj(VBG,NN) case(NNS,NNS) compond(NNS,NN) nmod:towards(VBG,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:in(NNS,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(VB,VB)",[ ],[ ],22,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
For instance  the Netherlands  Denmark  Germany  Belgium and Luxembourg made reductions in the April to July period.,ForIN instanceNN theDT NetherlandsNNP DenmarkNNP GermanyNNP BelgiumNNP andCC LuxembourgNNP madeVBD reductionsNNS inIN theDT AprilNNP toTO JulyNNP periodNN ,"root(ROOT-0, made-14) case(instance-2, For-1) nmod:for(made-14, instance-2) punct(made-14, ,-3) det(Netherlands-5, the-4) nsubj(made-14, Netherlands-5) punct(Netherlands-5, ,-6) conj:and(Netherlands-5, Denmark-7) nsubj(made-14, Denmark-7) punct(Netherlands-5, ,-8) conj:and(Netherlands-5, Germany-9) nsubj(made-14, Germany-9) punct(Netherlands-5, ,-10) conj:and(Netherlands-5, Belgium-11) nsubj(made-14, Belgium-11) cc(Netherlands-5, and-12) conj:and(Netherlands-5, Luxembourg-13) nsubj(made-14, Luxembourg-13) dobj(made-14, reductions-15) case(April-18, in-16) det(April-18, the-17) nmod:in(made-14, April-18) case(period-21, to-19) compound(period-21, July-20) nmod:to(made-14, period-21) punct(made-14, .-22)",0,0,0,"root(ROOT, made) case(instance, For) nmod:for(made, instance) pnct(made, ,) det(Netherlands, the) nsbj(made, Netherlands) pnct(Netherlands, ,) conj:and(Netherlands, Denmark) nsbj(made, Denmark) pnct(Netherlands, ,) conj:and(Netherlands, Germany) nsbj(made, Germany) pnct(Netherlands, ,) conj:and(Netherlands, Belgim) nsbj(made, Belgim) cc(Netherlands, and) conj:and(Netherlands, Lxemborg) nsbj(made, Lxemborg) dobj(made, redctions) case(April, in) det(April, the) nmod:in(made, April) case(period, to) compond(period, Jly) nmod:to(made, period) pnct(made, .)","root(,VBD) case(NN,IN) nmod:for(VBD,NN) pnct(VBD,VBD) det(NNP,DT) nsbj(VBD,NNP) pnct(NNP,NNP) conj:and(NNP,NNP) nsbj(VBD,NNP) pnct(NNP,NNP) conj:and(NNP,NNP) nsbj(VBD,NNP) pnct(NNP,NNP) conj:and(NNP,NNP) nsbj(VBD,NNP) cc(NNP,CC) conj:and(NNP,NNP) nsbj(VBD,NNP) dobj(VBD,NNS) case(NNP,IN) det(NNP,DT) nmod:in(VBD,NNP) case(NN,TO) compond(NN,NNP) nmod:to(VBD,NN) pnct(VBD,VBD)",[ ],[ ],22,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As the hon. Gentleman and I well know  however  the United Kingdom reduction has been greatly accelerated due to the exceptionally dry weather which our dairy industry had to put up with in the summer.,AsIN theDT honNN GentlemanNNP andCC IPRP wellRB knowVBP howeverRB theDT UnitedNNP KingdomNNP reductionNN hasVBZ beenVBN greatlyRB acceleratedVBN dueJJ toTO theDT exceptionallyRB dryJJ weatherNN whichWDT ourPRP$ dairyNN industryNN hadVBD toTO putVB upRP withIN inIN theDT summerNN ,"root(ROOT-0, accelerated-19) case(Gentleman-4, As-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nmod:as(accelerated-19, Gentleman-4) cc(Gentleman-4, and-5) nsubj(know-8, I-6) advmod(know-8, well-7) conj:and(Gentleman-4, know-8) nmod:as(accelerated-19, know-8) punct(accelerated-19, ,-9) advmod(accelerated-19, however-10) punct(accelerated-19, ,-11) det(reduction-15, the-12) compound(reduction-15, United-13) compound(reduction-15, Kingdom-14) nsubjpass(accelerated-19, reduction-15) aux(accelerated-19, has-16) auxpass(accelerated-19, been-17) advmod(accelerated-19, greatly-18) xcomp(accelerated-19, due-20) case(weather-25, to-21) det(weather-25, the-22) advmod(dry-24, exceptionally-23) amod(weather-25, dry-24) nmod:to(due-20, weather-25) dobj(had-30, which-26) nmod:poss(industry-29, our-27) compound(industry-29, dairy-28) nsubj(had-30, industry-29) acl:relcl(weather-25, had-30) mark(put-32, to-31) xcomp(had-30, put-32) compound:prt(put-32, up-33) case(summer-37, with-34) case(summer-37, in-35) det(summer-37, the-36) nmod:in(put-32, summer-37) punct(accelerated-19, .-38)",0,0,0,"root(ROOT, accelerated) case(Gentleman, As) det(Gentleman, the) compond(Gentleman, hon.) nmod:as(accelerated, Gentleman) cc(Gentleman, and) nsbj(know, I) advmod(know, well) conj:and(Gentleman, know) nmod:as(accelerated, know) pnct(accelerated, ,) advmod(accelerated, however) pnct(accelerated, ,) det(redction, the) compond(redction, United) compond(redction, Kingdom) nsbjpass(accelerated, redction) ax(accelerated, has) axpass(accelerated, been) advmod(accelerated, greatly) xcomp(accelerated, de) case(weather, to) det(weather, the) advmod(dry, exceptionally) amod(weather, dry) nmod:to(de, weather) dobj(had, which) nmod:poss(indstry, or) compond(indstry, dairy) nsbj(had, indstry) acl:relcl(weather, had) mark(pt, to) xcomp(had, pt) compond:prt(pt, p) case(smmer, with) case(smmer, in) det(smmer, the) nmod:in(pt, smmer) pnct(accelerated, .)","root(,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:as(VBN,NNP) cc(NNP,CC) nsbj(VBP,PRP) advmod(VBP,RB) conj:and(NNP,VBP) nmod:as(VBN,VBP) pnct(VBN,VBN) advmod(VBN,RB) pnct(VBN,VBN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) advmod(VBN,RB) xcomp(VBN,JJ) case(NN,TO) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) nmod:to(JJ,NN) dobj(VBD,WDT) nmod:poss(NN,PRP$) compond(NN,NN) nsbj(VBD,NN) acl:relcl(NN,VBD) mark(VB,TO) xcomp(VBD,VB) compond:prt(VB,RP) case(NN,IN) case(NN,IN) det(NN,DT) nmod:in(VB,NN) pnct(VBN,VBN)","[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]","[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]",22,"[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]","[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]",RB_however JJ_due VB_know RB_well RB_greatly NN_reduction PRP_I NNP_Gentleman CC_and VBN_accelerated ,"[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]","[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]",RB_however JJ_due VB_know RB_well RB_greatly NN_reduction PRP_I NNP_Gentleman CC_and VBN_accelerated ,"[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]",RB_however JJ_due VB_know RB_well RB_greatly NN_reduction PRP_I NNP_Gentleman CC_and VBN_accelerated ,"[however, due, know, well, ROOT, greatly, reduction, I, Gentleman, and, accelerated]",RB_however JJ_due VB_know RB_well RB_greatly NN_reduction PRP_I NNP_Gentleman CC_and VBN_accelerated ,-3,0,1,2,1,2,2,0,1,1
asked the Minister of Agriculture  Fisheries and Food if he will make a statement on the future of the beef premium and the sheepmeat regime.,askedVBN theDT MinisterNNP ofIN AgricultureNNP FisheriesNNP andCC FoodNNP ifIN hePRP willMD makeVB aDT statementNN onIN theDT futureNN ofIN theDT beefNN premiumNN andCC theDT sheepmeatNN regimeNN ,"root(ROOT-0, asked-1) det(Minister-3, the-2) dobj(asked-1, Minister-3) case(Agriculture-5, of-4) nmod:of(Minister-3, Agriculture-5) punct(Agriculture-5, ,-6) nmod:of(Minister-3, Fisheries-7) conj:and(Agriculture-5, Fisheries-7) cc(Agriculture-5, and-8) nmod:of(Minister-3, Food-9) conj:and(Agriculture-5, Food-9) mark(make-13, if-10) nsubj(make-13, he-11) aux(make-13, will-12) advcl(asked-1, make-13) det(statement-15, a-14) dobj(make-13, statement-15) case(future-18, on-16) det(future-18, the-17) nmod:on(statement-15, future-18) case(premium-22, of-19) det(premium-22, the-20) compound(premium-22, beef-21) nmod:of(future-18, premium-22) cc(make-13, and-23) det(regime-26, the-24) compound(regime-26, sheepmeat-25) advcl(asked-1, regime-26) conj:and(make-13, regime-26) punct(asked-1, .-27)",0,0,0,"root(ROOT, asked) det(Minister, the) dobj(asked, Minister) case(Agricltre, of) nmod:of(Minister, Agricltre) pnct(Agricltre, ,) nmod:of(Minister, Fisheries) conj:and(Agricltre, Fisheries) cc(Agricltre, and) nmod:of(Minister, Food) conj:and(Agricltre, Food) mark(make, if) nsbj(make, he) ax(make, will) advcl(asked, make) det(statement, a) dobj(make, statement) case(ftre, on) det(ftre, the) nmod:on(statement, ftre) case(premim, of) det(premim, the) compond(premim, beef) nmod:of(ftre, premim) cc(make, and) det(regime, the) compond(regime, sheepmeat) advcl(asked, regime) conj:and(make, regime) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NNP,NNP) nmod:of(NNP,NNP) conj:and(NNP,NNP) cc(NNP,CC) nmod:of(NNP,NNP) conj:and(NNP,NNP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VBN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) cc(VB,CC) det(NN,DT) compond(NN,NN) advcl(VBN,NN) conj:and(VB,NN) pnct(VBN,VBN)","[Agriculture, Food, he, ROOT, and, and, Fisheries, Minister, make, asked, statement, regime]","[Agriculture, Food, he, ROOT, and, and, Fisheries, Minister, make, asked, statement, regime]",1,"[Agriculture, Food, ROOT, and, Fisheries, Minister, make, asked, regime]","[Agriculture, Food, ROOT, and, Fisheries, Minister, make, asked, regime]",NNP_Agriculture NNP_Food PRP_he CC_and CC_and NNP_Fisheries NNP_Minister VB_make VBN_asked NN_statement NN_regime ,"[Agriculture, Food, he, ROOT, and, and, Fisheries, Minister, make, asked, statement, regime]","[Agriculture, Food, he, ROOT, and, and, Fisheries, Minister, make, asked, statement, regime]",NNP_Agriculture NNP_Food PRP_he CC_and CC_and NNP_Fisheries NNP_Minister VB_make VBN_asked NN_statement NN_regime ,"[Agriculture, Food, he, ROOT, and, and, Fisheries, Minister, make, asked, statement, regime]",NNP_Agriculture NNP_Food PRP_he CC_and CC_and NNP_Fisheries NNP_Minister VB_make VBN_asked NN_statement NN_regime ,"[Agriculture, Food, he, ROOT, and, and, Fisheries, Minister, make, asked, statement, regime]",NNP_Agriculture NNP_Food PRP_he CC_and CC_and NNP_Fisheries NNP_Minister VB_make VBN_asked NN_statement NN_regime ,-3,0,2,0,0,0,0,0,0,0
In its proposals for the 1985 common agricultural policy price fixing the Commission has made no provision for keeping the beef variable premium scheme.,InIN itsPRP$ proposalsNNS forIN theDT 1985CD commonJJ agriculturalJJ policyNN priceNN fixingVBG theDT CommissionNNP hasVBZ madeVBN noDT provisionNN forIN keepingVBG theDT beefNN variableJJ premiumNN schemeNN ,"root(ROOT-0, made-15) case(proposals-3, In-1) nmod:poss(proposals-3, its-2) nmod:in(made-15, proposals-3) case(price-10, for-4) det(price-10, the-5) nummod(price-10, 1985-6) amod(price-10, common-7) amod(price-10, agricultural-8) compound(price-10, policy-9) nmod:for(proposals-3, price-10) acl(price-10, fixing-11) det(Commission-13, the-12) dobj(fixing-11, Commission-13) aux(made-15, has-14) neg(provision-17, no-16) dobj(made-15, provision-17) mark(keeping-19, for-18) acl(provision-17, keeping-19) det(scheme-24, the-20) compound(scheme-24, beef-21) amod(scheme-24, variable-22) compound(scheme-24, premium-23) dobj(keeping-19, scheme-24) punct(made-15, .-25)",0,1,0,"root(ROOT, made) case(proposals, In) nmod:poss(proposals, its) nmod:in(made, proposals) case(price, for) det(price, the) nmmod(price, 1985) amod(price, common) amod(price, agricltral) compond(price, policy) nmod:for(proposals, price) acl(price, fixing) det(Commission, the) dobj(fixing, Commission) ax(made, has) neg(provision, no) dobj(made, provision) mark(keeping, for) acl(provision, keeping) det(scheme, the) compond(scheme, beef) amod(scheme, variable) compond(scheme, premim) dobj(keeping, scheme) pnct(made, .)","root(,VBN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:in(VBN,NNS) case(NN,IN) det(NN,DT) nmmod(NN,CD) amod(NN,JJ) amod(NN,JJ) compond(NN,NN) nmod:for(NNS,NN) acl(NN,VBG) det(NNP,DT) dobj(VBG,NNP) ax(VBN,VBZ) neg(NN,DT) dobj(VBN,NN) mark(VBG,IN) acl(NN,VBG) det(NN,DT) compond(NN,NN) amod(NN,JJ) compond(NN,NN) dobj(VBG,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I believe that the scheme has served producers and consumers well and  in the current market situation for beef  should be maintained.,IPRP believeVBP thatIN theDT schemeNN hasVBZ servedVBN producersNNS andCC consumersNNS wellRB andCC inIN theDT currentJJ marketNN situationNN forIN beefNN shouldMD beVB maintainedVBN ,"root(ROOT-0, believe-2) nsubj(believe-2, I-1) mark(served-7, that-3) det(scheme-5, the-4) nsubj(served-7, scheme-5) aux(served-7, has-6) ccomp(believe-2, served-7) dobj(served-7, producers-8) cc(producers-8, and-9) dobj(served-7, consumers-10) conj:and(producers-8, consumers-10) advmod(and-12, well-11) cc(producers-8, and-12) punct(producers-8, ,-13) case(situation-18, in-14) det(situation-18, the-15) amod(situation-18, current-16) compound(situation-18, market-17) nmod:in(maintained-24, situation-18) case(beef-20, for-19) nmod:for(situation-18, beef-20) punct(maintained-24, ,-21) aux(maintained-24, should-22) auxpass(maintained-24, be-23) dobj(served-7, maintained-24) conj:and(producers-8, maintained-24) punct(believe-2, .-25)",0,0,0,"root(ROOT, believe) nsbj(believe, I) mark(served, that) det(scheme, the) nsbj(served, scheme) ax(served, has) ccomp(believe, served) dobj(served, prodcers) cc(prodcers, and) dobj(served, consmers) conj:and(prodcers, consmers) advmod(and, well) cc(prodcers, and) pnct(prodcers, ,) case(sitation, in) det(sitation, the) amod(sitation, crrent) compond(sitation, market) nmod:in(maintained, sitation) case(beef, for) nmod:for(sitation, beef) pnct(maintained, ,) ax(maintained, shold) axpass(maintained, be) dobj(served, maintained) conj:and(prodcers, maintained) pnct(believe, .)","root(,VBP) nsbj(VBP,PRP) mark(VBN,IN) det(NN,DT) nsbj(VBN,NN) ax(VBN,VBZ) ccomp(VBP,VBN) dobj(VBN,NNS) cc(NNS,CC) dobj(VBN,NNS) conj:and(NNS,NNS) advmod(CC,RB) cc(NNS,CC) pnct(NNS,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:in(VBN,NN) case(NN,IN) nmod:for(NN,NN) pnct(VBN,VBN) ax(VBN,MD) axpass(VBN,VB) dobj(VBN,VBN) conj:and(NNS,VBN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As in previous years  we shall be pressing for its continuation.,AsIN inIN previousJJ yearsNNS wePRP shallMD beVB pressingVBG forIN itsPRP$ continuationNN ,"root(ROOT-0, pressing-9) case(years-4, As-1) case(years-4, in-2) amod(years-4, previous-3) nmod:in(pressing-9, years-4) punct(pressing-9, ,-5) nsubj(pressing-9, we-6) aux(pressing-9, shall-7) aux(pressing-9, be-8) case(continuation-12, for-10) nmod:poss(continuation-12, its-11) nmod:for(pressing-9, continuation-12) punct(pressing-9, .-13)",0,0,0,"root(ROOT, pressing) case(years, As) case(years, in) amod(years, previos) nmod:in(pressing, years) pnct(pressing, ,) nsbj(pressing, we) ax(pressing, shall) ax(pressing, be) case(contination, for) nmod:poss(contination, its) nmod:for(pressing, contination) pnct(pressing, .)","root(,VBG) case(NNS,IN) case(NNS,IN) amod(NNS,JJ) nmod:in(VBG,NNS) pnct(VBG,VBG) nsbj(VBG,PRP) ax(VBG,MD) ax(VBG,VB) case(NN,IN) nmod:poss(NN,PRP$) nmod:for(VBG,NN) pnct(VBG,VBG)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As to the sheepmeat regime  it has worked reasonably well but we shall continue to seek changes which will make it easier for our lamb to be exported to the rest of the Community and which will improve the stability of the home market.,AsIN toTO theDT sheepmeatNN regimeNN itPRP hasVBZ workedVBN reasonablyRB wellRB butCC wePRP shallMD continueVB toTO seekVB changesNNS whichWDT willMD makeVB itPRP easierJJR forIN ourPRP$ lambNN toTO beVB exportedVBN toTO theDT restNN ofIN theDT CommunityNNP andCC whichWDT willMD improveVB theDT stabilityNN ofIN theDT homeNN marketNN ,"root(ROOT-0, worked-9) case(regime-5, As-1) mwe(As-1, to-2) det(regime-5, the-3) compound(regime-5, sheepmeat-4) nmod:as_to(worked-9, regime-5) punct(worked-9, ,-6) nsubj(worked-9, it-7) aux(worked-9, has-8) advmod(well-11, reasonably-10) advmod(worked-9, well-11) cc(worked-9, but-12) nsubj(continue-15, we-13) aux(continue-15, shall-14) conj:but(worked-9, continue-15) mark(seek-17, to-16) xcomp(continue-15, seek-17) dobj(seek-17, changes-18) nsubj(make-21, which-19) aux(make-21, will-20) acl:relcl(changes-18, make-21) nsubj(easier-23, it-22) xcomp(make-21, easier-23) mark(exported-29, for-24) nmod:poss(lamb-26, our-25) nsubjpass(exported-29, lamb-26) mark(exported-29, to-27) auxpass(exported-29, be-28) advcl(easier-23, exported-29) case(rest-32, to-30) det(rest-32, the-31) nmod:to(exported-29, rest-32) case(Community-35, of-33) det(Community-35, the-34) nmod:of(rest-32, Community-35) cc(Community-35, and-36) nsubj(improve-39, which-37) aux(improve-39, will-38) nmod:of(rest-32, improve-39) conj:and(Community-35, improve-39) det(stability-41, the-40) dobj(improve-39, stability-41) case(market-45, of-42) det(market-45, the-43) compound(market-45, home-44) nmod:of(stability-41, market-45) punct(worked-9, .-46)",0,0,0,"root(ROOT, worked) case(regime, As) mwe(As, to) det(regime, the) compond(regime, sheepmeat) nmod:as_to(worked, regime) pnct(worked, ,) nsbj(worked, it) ax(worked, has) advmod(well, reasonably) advmod(worked, well) cc(worked, bt) nsbj(contine, we) ax(contine, shall) conj:bt(worked, contine) mark(seek, to) xcomp(contine, seek) dobj(seek, changes) nsbj(make, which) ax(make, will) acl:relcl(changes, make) nsbj(easier, it) xcomp(make, easier) mark(exported, for) nmod:poss(lamb, or) nsbjpass(exported, lamb) mark(exported, to) axpass(exported, be) advcl(easier, exported) case(rest, to) det(rest, the) nmod:to(exported, rest) case(Commnity, of) det(Commnity, the) nmod:of(rest, Commnity) cc(Commnity, and) nsbj(improve, which) ax(improve, will) nmod:of(rest, improve) conj:and(Commnity, improve) det(stability, the) dobj(improve, stability) case(market, of) det(market, the) compond(market, home) nmod:of(stability, market) pnct(worked, .)","root(,VBN) case(NN,IN) mwe(IN,TO) det(NN,DT) compond(NN,NN) nmod:as_to(VBN,NN) pnct(VBN,VBN) nsbj(VBN,PRP) ax(VBN,VBZ) advmod(RB,RB) advmod(VBN,RB) cc(VBN,CC) nsbj(VB,PRP) ax(VB,MD) conj:bt(VBN,VB) mark(VB,TO) xcomp(VB,VB) dobj(VB,NNS) nsbj(VB,WDT) ax(VB,MD) acl:relcl(NNS,VB) nsbj(JJR,PRP) xcomp(VB,JJR) mark(VBN,IN) nmod:poss(NN,PRP$) nsbjpass(VBN,NN) mark(VBN,TO) axpass(VBN,VB) advcl(JJR,VBN) case(NN,TO) det(NN,DT) nmod:to(VBN,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) cc(NNP,CC) nsbj(VB,WDT) ax(VB,MD) nmod:of(NN,VB) conj:and(NNP,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Is my hon. Friend aware of the crucial importance of these two subsidies to the livestock areas of the west and north?,IsVBZ myPRP$ honJJ FriendNNP awareNN ofIN theDT crucialJJ importanceNN ofIN theseDT twoCD subsidiesNNS toTO theDT livestockNN areasNNS ofIN theDT westNN andCC northJJ ,"root(ROOT-0, Is-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(Is-1, Friend-4) amod(Friend-4, aware-5) case(importance-9, of-6) det(importance-9, the-7) amod(importance-9, crucial-8) nmod:of(aware-5, importance-9) case(subsidies-13, of-10) det(subsidies-13, these-11) nummod(subsidies-13, two-12) nmod:of(importance-9, subsidies-13) case(areas-17, to-14) det(areas-17, the-15) compound(areas-17, livestock-16) nmod:to(importance-9, areas-17) case(west-20, of-18) det(west-20, the-19) nmod:of(areas-17, west-20) cc(west-20, and-21) nmod:of(areas-17, north-22) conj:and(west-20, north-22) punct(Is-1, ?-23)",0,1,0,"root(ROOT, Is) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(Is, Friend) amod(Friend, aware) case(importance, of) det(importance, the) amod(importance, crcial) nmod:of(aware, importance) case(sbsidies, of) det(sbsidies, these) nmmod(sbsidies, two) nmod:of(importance, sbsidies) case(areas, to) det(areas, the) compond(areas, livestock) nmod:to(importance, areas) case(west, of) det(west, the) nmod:of(areas, west) cc(west, and) nmod:of(areas, north) conj:and(west, north) pnct(Is, ?)","root(,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) amod(NNP,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NNS,IN) det(NNS,DT) nmmod(NNS,CD) nmod:of(NN,NNS) case(NNS,TO) det(NNS,DT) compond(NNS,NN) nmod:to(NN,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) cc(NN,CC) nmod:of(NNS,JJ) conj:and(NN,JJ) pnct(VBZ,VBZ)","[my, Friend, importance, ROOT, Is, aware]","[my, Friend, importance, ROOT, Is, aware]",3,"[my, Friend, importance, ROOT, Is, aware]","[my, Friend, importance, ROOT, Is, aware]",PRP$_my NNP_Friend NN_importance VBZ_Is JJ_aware ,"[my, Friend, importance, ROOT, Is, aware]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is he further aware that  without those subsidies  income from the hills of the west and north will be affected disastrously and that he must make every conceivable effort to ensure that the subsidies are maintained this year and in the future?,IsVBZ hePRP furtherRB awareJJ thatIN withoutIN thoseDT subsidiesNNS incomeNN fromIN theDT hillsNNS ofIN theDT westNN andCC northNN willMD beVB affectedVBN disastrouslyRB andCC thatIN hePRP mustMD makeVB everyDT conceivableJJ effortNN toTO ensureVB thatIN theDT subsidiesNNS areVBP maintainedVBN thisDT yearNN andCC inIN theDT futureNN ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) nsubj(aware-4, he-2) advmod(aware-4, further-3) mark(affected-22, that-5) punct(affected-22, ,-6) case(subsidies-9, without-7) det(subsidies-9, those-8) nmod:without(affected-22, subsidies-9) punct(affected-22, ,-10) nsubjpass(affected-22, income-11) case(hills-14, from-12) det(hills-14, the-13) nmod:from(income-11, hills-14) case(west-17, of-15) det(west-17, the-16) nmod:of(hills-14, west-17) cc(income-11, and-18) conj:and(income-11, north-19) nsubjpass(affected-22, north-19) aux(affected-22, will-20) auxpass(affected-22, be-21) ccomp(aware-4, affected-22) advmod(affected-22, disastrously-23) cc(affected-22, and-24) mark(make-28, that-25) nsubj(make-28, he-26) aux(make-28, must-27) ccomp(aware-4, make-28) conj:and(affected-22, make-28) det(effort-31, every-29) amod(effort-31, conceivable-30) dobj(make-28, effort-31) mark(ensure-33, to-32) acl(effort-31, ensure-33) mark(maintained-38, that-34) det(subsidies-36, the-35) nsubjpass(maintained-38, subsidies-36) auxpass(maintained-38, are-37) ccomp(ensure-33, maintained-38) det(year-40, this-39) nmod:tmod(maintained-38, year-40) cc(maintained-38, and-41) case(future-44, in-42) det(future-44, the-43) ccomp(ensure-33, future-44) conj:and(maintained-38, future-44) punct(aware-4, ?-45)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) advmod(aware, frther) mark(affected, that) pnct(affected, ,) case(sbsidies, withot) det(sbsidies, those) nmod:withot(affected, sbsidies) pnct(affected, ,) nsbjpass(affected, income) case(hills, from) det(hills, the) nmod:from(income, hills) case(west, of) det(west, the) nmod:of(hills, west) cc(income, and) conj:and(income, north) nsbjpass(affected, north) ax(affected, will) axpass(affected, be) ccomp(aware, affected) advmod(affected, disastrosly) cc(affected, and) mark(make, that) nsbj(make, he) ax(make, mst) ccomp(aware, make) conj:and(affected, make) det(effort, every) amod(effort, conceivable) dobj(make, effort) mark(ensre, to) acl(effort, ensre) mark(maintained, that) det(sbsidies, the) nsbjpass(maintained, sbsidies) axpass(maintained, are) ccomp(ensre, maintained) det(year, this) nmod:tmod(maintained, year) cc(maintained, and) case(ftre, in) det(ftre, the) ccomp(ensre, ftre) conj:and(maintained, ftre) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) advmod(JJ,RB) mark(VBN,IN) pnct(VBN,VBN) case(NNS,IN) det(NNS,DT) nmod:withot(VBN,NNS) pnct(VBN,VBN) nsbjpass(VBN,NN) case(NNS,IN) det(NNS,DT) nmod:from(NN,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) cc(NN,CC) conj:and(NN,NN) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) advmod(VBN,RB) cc(VBN,CC) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(JJ,VB) conj:and(VBN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) mark(VB,TO) acl(NN,VB) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(VB,VBN) det(NN,DT) nmod:tmod(VBN,NN) cc(VBN,CC) case(NN,IN) det(NN,DT) ccomp(VB,NN) conj:and(VBN,NN) pnct(JJ,JJ)","[affected, he, aware, effort, he, ROOT, make, further]","[affected, he, aware, effort, he, ROOT, make, further]",3,"[affected, he, ROOT, aware, make, further]",[ ],VBN_affected PRP_he JJ_aware NN_effort PRP_he VB_make JJ_further ,"[affected, he, aware, effort, he, ROOT, make, further]","[affected, he, aware, effort, he, ROOT, make, further]",VBN_affected PRP_he JJ_aware NN_effort PRP_he VB_make JJ_further ,"[affected, he, aware, effort, he, ROOT, make, further]",VBN_affected PRP_he JJ_aware NN_effort PRP_he VB_make JJ_further ,"[affected, he, aware, effort, he, ROOT, make, further]",VBN_affected PRP_he JJ_aware NN_effort PRP_he VB_make JJ_further ,-3,0,2,0,0,0,0,0,0,0
We shall do everything that we can to persuade other member states of the merits of the scheme  which we believe benefits both producers and consumers and reduces the need for costly intervention.,WePRP shallMD doVB everythingNN thatIN wePRP canMD toTO persuadeVB otherJJ memberNN statesNNS ofIN theDT meritsNNS ofIN theDT schemeNN whichWDT wePRP believeVBP benefitsNNS bothDT producersNNS andCC consumersNNS andCC reducesVBZ theDT needNN forIN costlyJJ interventionNN ,"root(ROOT-0, do-3) nsubj(do-3, We-1) aux(do-3, shall-2) dobj(do-3, everything-4) mark(can-7, that-5) nsubj(can-7, we-6) ccomp(everything-4, can-7) mark(persuade-9, to-8) xcomp(can-7, persuade-9) amod(states-12, other-10) compound(states-12, member-11) dobj(persuade-9, states-12) case(merits-15, of-13) det(merits-15, the-14) nmod:of(states-12, merits-15) case(scheme-18, of-16) det(scheme-18, the-17) nmod:of(merits-15, scheme-18) punct(scheme-18, ,-19) dobj(believe-22, which-20) nsubj(believe-22, we-21) acl:relcl(scheme-18, believe-22) dobj(believe-22, benefits-23) cc:preconj(producers-25, both-24) dobj(benefits-23, producers-25) cc(producers-25, and-26) dobj(benefits-23, consumers-27) conj:and(producers-25, consumers-27) cc(producers-25, and-28) dobj(benefits-23, reduces-29) conj:and(producers-25, reduces-29) det(need-31, the-30) dobj(reduces-29, need-31) case(intervention-34, for-32) amod(intervention-34, costly-33) nmod:for(need-31, intervention-34) punct(do-3, .-35)",0,0,0,"root(ROOT, do) nsbj(do, We) ax(do, shall) dobj(do, everything) mark(can, that) nsbj(can, we) ccomp(everything, can) mark(persade, to) xcomp(can, persade) amod(states, other) compond(states, member) dobj(persade, states) case(merits, of) det(merits, the) nmod:of(states, merits) case(scheme, of) det(scheme, the) nmod:of(merits, scheme) pnct(scheme, ,) dobj(believe, which) nsbj(believe, we) acl:relcl(scheme, believe) dobj(believe, benefits) cc:preconj(prodcers, both) dobj(benefits, prodcers) cc(prodcers, and) dobj(benefits, consmers) conj:and(prodcers, consmers) cc(prodcers, and) dobj(benefits, redces) conj:and(prodcers, redces) det(need, the) dobj(redces, need) case(intervention, for) amod(intervention, costly) nmod:for(need, intervention) pnct(do, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) VBbj(VB,NN) mark(MD,IN) nsbj(MD,PRP) ccomp(NN,MD) mark(VB,TO) xcomp(MD,VB) amod(NNS,JJ) compond(NNS,NN) dobj(VB,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(NN,NN) dobj(VBP,WDT) nsbj(VBP,PRP) acl:relcl(NN,VBP) dobj(VBP,NNS) cc:preconj(NNS,DT) dobj(NNS,NNS) cc(NNS,CC) dobj(NNS,NNS) conj:and(NNS,NNS) cc(NNS,CC) dobj(NNS,VBZ) conj:and(NNS,VBZ) det(NN,DT) dobj(VBZ,NN) case(NN,IN) amod(NN,JJ) nmod:for(NN,NN) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We shall resist any changes to the sheepmeat regime that discriminate against our producers.,WePRP shallMD resistVB anyDT changesNNS toTO theDT sheepmeatNN regimeNN thatWDT discriminateNN againstIN ourPRP$ producersNNS ,"root(ROOT-0, resist-3) nsubj(resist-3, We-1) aux(resist-3, shall-2) det(changes-5, any-4) dobj(resist-3, changes-5) case(regime-9, to-6) det(regime-9, the-7) compound(regime-9, sheepmeat-8) nmod:to(changes-5, regime-9) nsubj(discriminate-11, that-10) acl:relcl(regime-9, discriminate-11) case(producers-14, against-12) nmod:poss(producers-14, our-13) nmod:against(discriminate-11, producers-14) punct(resist-3, .-15)",0,0,1,"root(ROOT, resist) nsbj(resist, We) ax(resist, shall) det(changes, any) dobj(resist, changes) case(regime, to) det(regime, the) compond(regime, sheepmeat) nmod:to(changes, regime) nsbj(discriminate, that) acl:relcl(regime, discriminate) case(prodcers, against) nmod:poss(prodcers, or) nmod:against(discriminate, prodcers) pnct(resist, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NNS,DT) dobj(VB,NNS) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(NNS,NN) nsbj(NN,WDT) acl:relcl(NN,NN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:against(NN,NNS) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In view of the continuing delay in the payment of the 1984 85 ewe premium  will he ensure that an interim payment is made to alleviate the hardship that is felt especially by hill livestock producers?,InIN viewNN ofIN theDT continuingVBG delayNN inIN theDT paymentNN ofIN theDT 1984CD 85CD eweJJ premiumNN willMD hePRP ensureVB thatIN anDT interimJJ paymentNN isVBZ madeVBN toTO alleviateVB theDT hardshipNN thatWDT isVBZ feltVBN especiallyRB byIN hillJJ livestockNN producersNNS ,"root(ROOT-0, ensure-19) case(view-2, In-1) nmod:in(ensure-19, view-2) case(delay-6, of-3) det(delay-6, the-4) amod(delay-6, continuing-5) nmod:of(view-2, delay-6) case(payment-9, in-7) det(payment-9, the-8) nmod:in(delay-6, payment-9) case(premium-15, of-10) det(premium-15, the-11) compound(85-13, 1984-12) nummod(premium-15, 85-13) compound(premium-15, ewe-14) nmod:of(payment-9, premium-15) punct(ensure-19, ,-16) aux(ensure-19, will-17) nsubj(ensure-19, he-18) mark(made-25, that-20) det(payment-23, an-21) amod(payment-23, interim-22) nsubjpass(made-25, payment-23) auxpass(made-25, is-24) ccomp(ensure-19, made-25) mark(alleviate-27, to-26) xcomp(made-25, alleviate-27) det(hardship-29, the-28) dobj(alleviate-27, hardship-29) nsubjpass(felt-32, that-30) auxpass(felt-32, is-31) acl:relcl(hardship-29, felt-32) advmod(producers-37, especially-33) case(producers-37, by-34) compound(producers-37, hill-35) compound(producers-37, livestock-36) nmod:agent(felt-32, producers-37) punct(ensure-19, ?-38)",0,0,0,"root(ROOT, ensre) case(view, In) nmod:in(ensre, view) case(delay, of) det(delay, the) amod(delay, contining) nmod:of(view, delay) case(payment, in) det(payment, the) nmod:in(delay, payment) case(premim, of) det(premim, the) compond(85, 1984) nmmod(premim, 85) compond(premim, ewe) nmod:of(payment, premim) pnct(ensre, ,) ax(ensre, will) nsbj(ensre, he) mark(made, that) det(payment, an) amod(payment, interim) nsbjpass(made, payment) axpass(made, is) ccomp(ensre, made) mark(alleviate, to) xcomp(made, alleviate) det(hardship, the) dobj(alleviate, hardship) nsbjpass(felt, that) axpass(felt, is) acl:relcl(hardship, felt) advmod(prodcers, especially) case(prodcers, by) compond(prodcers, hill) compond(prodcers, livestock) nmod:agent(felt, prodcers) pnct(ensre, ?)","root(,VB) case(NN,IN) nmod:in(VB,NN) case(NN,IN) det(NN,DT) amod(NN,VBG) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NN,IN) det(NN,DT) compond(CD,CD) nmmod(NN,CD) compond(NN,JJ) nmod:of(NN,NN) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) mark(VBN,WDT) det(NN,DT) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBZ) ccomp(VB,VBN) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) dobj(VB,NN) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl:relcl(NN,VBN) advmod(NNS,RB) case(NNS,IN) compond(NNS,JJ) compond(NNS,NN) nmod:agent(VBN,NNS) pnct(VB,VB)","[ensure, ROOT, made, view, he]","[ensure, ROOT, made, view, he]",5,[ ],[ ],VB_ensure VBN_made NN_view PRP_he ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As for the delay in payment  I think that he is talking about the rates of advance payment in less favoured areas.,AsIN forIN theDT delayNN inIN paymentNN IPRP thinkVBP thatIN hePRP isVBZ talkingVBG aboutIN theDT ratesNNS ofIN advanceJJ paymentNN inIN lessJJR favouredJJ areasNNS ,"root(ROOT-0, think-9) case(delay-4, As-1) mwe(As-1, for-2) det(delay-4, the-3) nmod:as_for(think-9, delay-4) case(payment-6, in-5) nmod:in(delay-4, payment-6) punct(think-9, ,-7) nsubj(think-9, I-8) mark(talking-13, that-10) nsubj(talking-13, he-11) aux(talking-13, is-12) ccomp(think-9, talking-13) case(rates-16, about-14) det(rates-16, the-15) nmod:about(talking-13, rates-16) case(payment-19, of-17) compound(payment-19, advance-18) nmod:of(rates-16, payment-19) case(areas-23, in-20) amod(areas-23, less-21) amod(areas-23, favoured-22) nmod:in(rates-16, areas-23) punct(think-9, .-24)",0,0,0,"root(ROOT, think) case(delay, As) mwe(As, for) det(delay, the) nmod:as_for(think, delay) case(payment, in) nmod:in(delay, payment) pnct(think, ,) nsbj(think, I) mark(talking, that) nsbj(talking, he) ax(talking, is) ccomp(think, talking) case(rates, abot) det(rates, the) nmod:abot(talking, rates) case(payment, of) compond(payment, advance) nmod:of(rates, payment) case(areas, in) amod(areas, less) amod(areas, favored) nmod:in(rates, areas) pnct(think, .)","root(,VBP) case(NN,IN) mwe(IN,IN) det(NN,DT) nmod:as_for(VBP,NN) case(NN,IN) nmod:in(NN,NN) pnct(VBP,VBP) nsbj(VBP,PRP) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBZ) ccomp(VBP,VBG) case(NNS,IN) det(NNS,DT) nmod:abot(VBG,NNS) case(NN,IN) compond(NN,JJ) nmod:of(NNS,NN) case(NNS,IN) amod(NNS,JJR) amod(NNS,JJ) nmod:in(NNS,NNS) pnct(VBP,VBP)","[he, talking, think, rates]","[he, talking, think, rates]",6,[ ],[ ],PRP_he VBG_talking VBP_think NNS_rates ,"[he, talking, think, rates]","[he, talking, think, rates]",PRP_he VBG_talking VBP_think NNS_rates ,"[he, talking, think, rates]",PRP_he VBG_talking VBP_think NNS_rates ,"[he, talking, think, rates]",PRP_he VBG_talking VBP_think NNS_rates ,-3,0,2,0,0,0,0,0,0,0
I know that they are important to farmers at this time of year  but a new method of calculation  which we do not believe is quite right  has been introduced.,IPRP knowVBP thatIN theyPRP areVBP importantJJ toTO farmersNNS atIN thisDT timeNN ofIN yearNN butCC aDT newJJ methodNN ofIN calculationNN whichWDT wePRP doVBP notRB believeVB isVBZ quiteRB rightJJ hasVBZ beenVBN introducedVBN ,"root(ROOT-0, know-2) nsubj(know-2, I-1) mark(important-6, that-3) nsubj(important-6, they-4) cop(important-6, are-5) ccomp(know-2, important-6) case(farmers-8, to-7) nmod:to(important-6, farmers-8) case(time-11, at-9) det(time-11, this-10) nmod:at(important-6, time-11) case(year-13, of-12) nmod:of(time-11, year-13) punct(know-2, ,-14) cc(know-2, but-15) det(method-18, a-16) amod(method-18, new-17) nsubjpass(introduced-33, method-18) case(calculation-20, of-19) nmod:of(method-18, calculation-20) punct(method-18, ,-21) dobj(believe-26, which-22) nsubj(believe-26, we-23) aux(believe-26, do-24) neg(believe-26, not-25) acl:relcl(method-18, believe-26) cop(right-29, is-27) advmod(right-29, quite-28) ccomp(believe-26, right-29) punct(method-18, ,-30) aux(introduced-33, has-31) auxpass(introduced-33, been-32) conj:but(know-2, introduced-33) punct(know-2, .-34)",0,0,0,"root(ROOT, know) nsbj(know, I) mark(important, that) nsbj(important, they) cop(important, are) ccomp(know, important) case(farmers, to) nmod:to(important, farmers) case(time, at) det(time, this) nmod:at(important, time) case(year, of) nmod:of(time, year) pnct(know, ,) cc(know, bt) det(method, a) amod(method, new) nsbjpass(introdced, method) case(calclation, of) nmod:of(method, calclation) pnct(method, ,) dobj(believe, which) nsbj(believe, we) ax(believe, do) neg(believe, not) acl:relcl(method, believe) cop(right, is) advmod(right, qite) ccomp(believe, right) pnct(method, ,) ax(introdced, has) axpass(introdced, been) conj:bt(know, introdced) pnct(know, .)","root(,VBP) nsbj(VBP,PRP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBP) ccomp(VBP,JJ) case(NNS,TO) nmod:to(JJ,NNS) case(NN,IN) det(NN,DT) nmod:at(JJ,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBP,VBP) cc(VBP,CC) det(NN,DT) amod(NN,JJ) nsbjpass(VBN,NN) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN) dobj(VB,WDT) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) acl:relcl(NN,VB) cop(JJ,VBZ) advmod(JJ,RB) ccomp(VB,JJ) pnct(NN,NN) ax(VBN,VBZ) axpass(VBN,VBN) conj:bt(VBP,VBN) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is important that we get it right.,ItPRP isVBZ importantJJ thatIN wePRP getVBP itPRP rightJJ ,"root(ROOT-0, important-3) nsubj(important-3, It-1) cop(important-3, is-2) mark(get-6, that-4) nsubj(get-6, we-5) ccomp(important-3, get-6) dobj(get-6, it-7) advmod(get-6, right-8) punct(important-3, .-9)",0,0,0,"root(ROOT, important) nsbj(important, It) cop(important, is) mark(get, that) nsbj(get, we) ccomp(important, get) dobj(get, it) advmod(get, right) pnct(important, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VBP,IN) nsbj(VBP,PRP) ccomp(JJ,VBP) dobj(VBP,PRP) advmod(VBP,JJ) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
There have been discussions this week on the advance payment issue  and I hope that there will be progress on the matter before too long.,ThereEX haveVBP beenVBN discussionsNNS thisDT weekNN onIN theDT advanceJJ paymentNN issueNN andCC IPRP hopeVBP thatIN thereEX willMD beVB progressNN onIN theDT matterNN beforeIN tooRB longJJ ,"root(ROOT-0, discussions-4) expl(discussions-4, There-1) aux(discussions-4, have-2) cop(discussions-4, been-3) det(week-6, this-5) nmod:tmod(discussions-4, week-6) case(issue-11, on-7) det(issue-11, the-8) compound(issue-11, advance-9) compound(issue-11, payment-10) nmod:on(discussions-4, issue-11) punct(discussions-4, ,-12) cc(discussions-4, and-13) nsubj(hope-15, I-14) conj:and(discussions-4, hope-15) mark(progress-20, that-16) expl(progress-20, there-17) aux(progress-20, will-18) cop(progress-20, be-19) ccomp(hope-15, progress-20) case(matter-23, on-21) det(matter-23, the-22) nmod:on(progress-20, matter-23) case(long-26, before-24) advmod(long-26, too-25) nmod:before(progress-20, long-26) punct(discussions-4, .-27)",0,0,0,"root(ROOT, discssions) expl(discssions, There) ax(discssions, have) cop(discssions, been) det(week, this) nmod:tmod(discssions, week) case(isse, on) det(isse, the) compond(isse, advance) compond(isse, payment) nmod:on(discssions, isse) pnct(discssions, ,) cc(discssions, and) nsbj(hope, I) conj:and(discssions, hope) mark(progress, that) expl(progress, there) ax(progress, will) cop(progress, be) ccomp(hope, progress) case(matter, on) det(matter, the) nmod:on(progress, matter) case(long, before) advmod(long, too) nmod:before(progress, long) pnct(discssions, .)","root(,NNS) expl(NNS,EX) ax(NNS,VBP) cop(NNS,VBN) det(NN,DT) nmod:tmod(NNS,NN) case(NN,IN) det(NN,DT) compond(NN,JJ) compond(NN,NN) nmod:on(NNS,NN) pnct(NNS,NNS) cc(NNS,CC) nsbj(VBP,PRP) conj:and(NNS,VBP) mark(NN,IN) expl(NN,EX) ax(NN,MD) cop(NN,VB) ccomp(VBP,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(JJ,IN) advmod(JJ,RB) nmod:before(NN,JJ) pnct(NNS,NNS)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my hon. Friend accept that both the beef premium and the sheepmeat regime are vital to the continued viability of farming in hill areas  not merely around Ludlow  but elsewhere?,DoesNNP myPRP$ honNN FriendNNP acceptVBZ thatIN bothDT theDT beefNN premiumNN andCC theDT sheepmeatNN regimeNN areVBP vitalJJ toTO theDT continuedVBN viabilityNN ofIN farmingVBG inIN hillNN areasNNS notRB merelyRB aroundIN LudlowNNP butCC elsewhereRB ,"root(ROOT-0, accept-5) aux(accept-5, Does-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(accept-5, Friend-4) mark(vital-16, that-6) cc:preconj(premium-10, both-7) det(premium-10, the-8) compound(premium-10, beef-9) nsubj(vital-16, premium-10) cc(premium-10, and-11) det(regime-14, the-12) compound(regime-14, sheepmeat-13) conj:and(premium-10, regime-14) nsubj(vital-16, regime-14) cop(vital-16, are-15) ccomp(accept-5, vital-16) case(viability-20, to-17) det(viability-20, the-18) amod(viability-20, continued-19) nmod:to(vital-16, viability-20) case(farming-22, of-21) nmod:of(viability-20, farming-22) case(areas-25, in-23) compound(areas-25, hill-24) nmod:in(farming-22, areas-25) punct(vital-16, ,-26) neg(merely-28, not-27) cc:preconj(Ludlow-30, merely-28) case(Ludlow-30, around-29) nmod:around(vital-16, Ludlow-30) punct(Ludlow-30, ,-31) cc(Ludlow-30, but-32) nmod:around(vital-16, elsewhere-33) conj:but(Ludlow-30, elsewhere-33) punct(accept-5, ?-34)",0,0,0,"root(ROOT, accept) ax(accept, Does) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(accept, Friend) mark(vital, that) cc:preconj(premim, both) det(premim, the) compond(premim, beef) nsbj(vital, premim) cc(premim, and) det(regime, the) compond(regime, sheepmeat) conj:and(premim, regime) nsbj(vital, regime) cop(vital, are) ccomp(accept, vital) case(viability, to) det(viability, the) amod(viability, contined) nmod:to(vital, viability) case(farming, of) nmod:of(viability, farming) case(areas, in) compond(areas, hill) nmod:in(farming, areas) pnct(vital, ,) neg(merely, not) cc:preconj(Ldlow, merely) case(Ldlow, arond) nmod:arond(vital, Ldlow) pnct(Ldlow, ,) cc(Ldlow, bt) nmod:arond(vital, elsewhere) conj:bt(Ldlow, elsewhere) pnct(accept, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) mark(JJ,IN) cc:preconj(NN,DT) det(NN,DT) compond(NN,NN) nsbj(JJ,NN) cc(NN,CC) det(NN,DT) compond(NN,NN) conj:and(NN,NN) nsbj(JJ,NN) cop(JJ,VBP) ccomp(VBZ,JJ) case(NN,TO) det(NN,DT) amod(NN,VBN) nmod:to(JJ,NN) case(VBG,IN) nmod:of(NN,VBG) case(NNS,IN) compond(NNS,NN) nmod:in(VBG,NNS) pnct(JJ,JJ) neg(RB,RB) cc:preconj(NNP,RB) case(NNP,IN) nmod:arond(JJ,NNP) pnct(NNP,NNP) cc(NNP,CC) nmod:arond(JJ,RB) conj:bt(NNP,RB) pnct(VBZ,VBZ)","[ROOT, accept, my, vital, Friend]","[ROOT, accept, my, vital, Friend]",7,[ ],[ ],VBD_accept PRP$_my JJ_vital NNP_Friend ,"[ROOT, accept, my, vital, Friend]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he agree that if the two schemes were to be ended it would be a sad day  because many hill farms would cease to be viable?,DoesVBZ hePRP agreeVB thatIN ifIN theDT twoCD schemesNNS wereVBD toTO beVB endedVBN itPRP wouldMD beVB aDT sadJJ dayNN becauseIN manyJJ hillNN farmsNNS wouldMD ceaseVB toTO beVB viableJJ ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(were-9, that-4) mark(were-9, if-5) det(schemes-8, the-6) nummod(schemes-8, two-7) nsubj(were-9, schemes-8) ccomp(agree-3, were-9) mark(ended-12, to-10) auxpass(ended-12, be-11) xcomp(were-9, ended-12) nsubj(day-18, it-13) aux(day-18, would-14) cop(day-18, be-15) det(day-18, a-16) amod(day-18, sad-17) ccomp(ended-12, day-18) punct(cease-25, ,-19) mark(cease-25, because-20) amod(farms-23, many-21) compound(farms-23, hill-22) nsubj(cease-25, farms-23) aux(cease-25, would-24) parataxis(were-9, cease-25) mark(viable-28, to-26) cop(viable-28, be-27) xcomp(cease-25, viable-28) punct(cease-25, ?-29)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(were, that) mark(were, if) det(schemes, the) nmmod(schemes, two) nsbj(were, schemes) ccomp(agree, were) mark(ended, to) axpass(ended, be) xcomp(were, ended) nsbj(day, it) ax(day, wold) cop(day, be) det(day, a) amod(day, sad) ccomp(ended, day) pnct(cease, ,) mark(cease, becase) amod(farms, many) compond(farms, hill) nsbj(cease, farms) ax(cease, wold) parataxis(were, cease) mark(viable, to) cop(viable, be) xcomp(cease, viable) pnct(cease, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBD,IN) mark(VBD,IN) det(NNS,DT) nmmod(NNS,CD) nsbj(VBD,NNS) ccomp(VB,VBD) mark(VBN,TO) axpass(VBN,VB) xcomp(VBD,VBN) nsbj(NN,PRP) ax(NN,MD) cop(NN,VB) det(NN,DT) amod(NN,JJ) ccomp(VBN,NN) pnct(VB,VB) mark(VB,IN) amod(NNS,JJ) compond(NNS,NN) nsbj(VB,NNS) ax(VB,MD) parataxis(VBD,VB) mark(JJ,TO) cop(JJ,VB) xcomp(VB,JJ) pnct(VB,VB)","[he, ROOT, agree, were]","[he, ROOT, agree, were]",7,[ ],[ ],PRP_he VB_agree VBD_were ,"[he, ROOT, agree, were]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I hear what my hon. Friend says.,IPRP hearVBP whatWP myPRP$ honNN FriendNNP saysVBZ ,"root(ROOT-0, hear-2) nsubj(hear-2, I-1) dobj(says-7, what-3) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) nsubj(says-7, Friend-6) ccomp(hear-2, says-7) punct(hear-2, .-8)",0,1,0,"root(ROOT, hear) nsbj(hear, I) dobj(says, what) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(says, Friend) ccomp(hear, says) pnct(hear, .)","root(,VBP) nsbj(VBP,PRP) dobj(VBZ,WP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(VBP,VBZ) pnct(VBP,VBP)","[what, Friend, hear, my, says]","[what, Friend, hear, my, says]",8,"[what, Friend, hear, my, says]","[what, Friend, hear, my, says]",WP_what NNP_Friend VB_hear PRP$_my VBZ_says ,"[what, Friend, hear, my, says]","[what, Friend, hear, my, says]",WP_what NNP_Friend VB_hear PRP$_my VBZ_says ,"[what, Friend, hear, my, says]",WP_what NNP_Friend VB_hear PRP$_my VBZ_says ,"[what, Friend, hear, my, says]",WP_what NNP_Friend VB_hear PRP$_my VBZ_says ,-3,0,2,0,0,0,0,0,0,0
I am sure that he also welcomed the improvements in the hill livestock compensatory amounts last year for hill farmers  in that they are now also payable in marginal areas.,IPRP amVBP sureJJ thatIN hePRP alsoRB welcomedVBD theDT improvementsNNS inIN theDT hillNN livestockVBZ compensatoryNN amountsNNS lastJJ yearNN forIN hillNN farmersNNS inIN thatDT theyPRP areVBP nowRB alsoRB payableJJ inIN marginalJJ areasNNS ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) mark(welcomed-7, that-4) nsubj(welcomed-7, he-5) advmod(welcomed-7, also-6) ccomp(sure-3, welcomed-7) det(improvements-9, the-8) dobj(welcomed-7, improvements-9) case(amounts-15, in-10) det(amounts-15, the-11) compound(amounts-15, hill-12) compound(amounts-15, livestock-13) amod(amounts-15, compensatory-14) nmod:in(improvements-9, amounts-15) amod(year-17, last-16) nmod:tmod(welcomed-7, year-17) case(farmers-20, for-18) compound(farmers-20, hill-19) nmod:for(welcomed-7, farmers-20) punct(welcomed-7, ,-21) mark(payable-28, in-22) mark(payable-28, that-23) nsubj(payable-28, they-24) cop(payable-28, are-25) advmod(payable-28, now-26) advmod(payable-28, also-27) advcl(welcomed-7, payable-28) case(areas-31, in-29) amod(areas-31, marginal-30) nmod:in(payable-28, areas-31) punct(sure-3, .-32)",0,0,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) mark(welcomed, that) nsbj(welcomed, he) advmod(welcomed, also) ccomp(sre, welcomed) det(improvements, the) dobj(welcomed, improvements) case(amonts, in) det(amonts, the) compond(amonts, hill) compond(amonts, livestock) amod(amonts, compensatory) nmod:in(improvements, amonts) amod(year, last) nmod:tmod(welcomed, year) case(farmers, for) compond(farmers, hill) nmod:for(welcomed, farmers) pnct(welcomed, ,) mark(payable, in) mark(payable, that) nsbj(payable, they) cop(payable, are) advmod(payable, now) advmod(payable, also) advcl(welcomed, payable) case(areas, in) amod(areas, marginal) nmod:in(payable, areas) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VBD,DT) nsbj(VBD,PRP) advmod(VBD,RB) ccomp(JJ,VBD) det(NNS,DT) dobj(VBD,NNS) case(NNS,IN) det(NNS,DT) compond(NNS,NN) compond(NNS,VBZ) amod(NNS,NN) nmod:in(NNS,NNS) amod(NN,JJ) nmod:tmod(VBD,NN) case(NNS,IN) compond(NNS,NN) nmod:for(VBD,NNS) pnct(VBD,VBD) mark(JJ,IN) mark(JJ,DT) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RB) advmod(JJ,RB) advcl(VBD,JJ) case(NNS,IN) amod(NNS,JJ) nmod:in(JJ,NNS) pnct(JJ,JJ)","[farmers, also, improvements, payable, year, welcomed, sure, he]","[farmers, also, improvements, payable, year, welcomed, sure, he]",8,"[farmers, also, improvements, payable, year, welcomed, sure, he]","[farmers, also, improvements, payable, year, welcomed, sure, he]",NNS_farmers RB_also NNS_improvements JJ_payable NN_year VBD_welcomed RB_sure PRP_he ,"[farmers, also, improvements, payable, year, welcomed, sure, he]","[farmers, also, improvements, payable, year, welcomed, sure, he]",NNS_farmers RB_also NNS_improvements JJ_payable NN_year VBD_welcomed RB_sure PRP_he ,"[farmers, also, improvements, payable, year, welcomed, sure, he]",NNS_farmers RB_also NNS_improvements JJ_payable NN_year VBD_welcomed RB_sure PRP_he ,"[farmers, also, improvements, payable, year, welcomed, sure, he]",NNS_farmers RB_also NNS_improvements JJ_payable NN_year VBD_welcomed RB_sure PRP_he ,-3,0,2,1,1,1,1,1,1,2
Is it not scandalous that yet again the variable premium is under threat?,IsVBZ itPRP notRB scandalousJJ thatIN yetRB againRB theDT variableJJ premiumNN isVBZ underIN threatNN ,"root(ROOT-0, scandalous-4) cop(scandalous-4, Is-1) nsubj(scandalous-4, it-2) neg(scandalous-4, not-3) mark(threat-13, that-5) advmod(premium-10, yet-6) advmod(premium-10, again-7) det(premium-10, the-8) amod(premium-10, variable-9) nsubj(threat-13, premium-10) cop(threat-13, is-11) case(threat-13, under-12) ccomp(scandalous-4, threat-13) punct(scandalous-4, ?-14)",0,1,0,"root(ROOT, scandalos) cop(scandalos, Is) nsbj(scandalos, it) neg(scandalos, not) mark(threat, that) advmod(premim, yet) advmod(premim, again) det(premim, the) amod(premim, variable) nsbj(threat, premim) cop(threat, is) case(threat, nder) ccomp(scandalos, threat) pnct(scandalos, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) mark(NN,IN) advmod(NN,RB) advmod(NN,RB) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) cop(NN,VBZ) case(NN,IN) ccomp(JJ,NN) pnct(JJ,JJ)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is difficult to get the beef variable premium on the table every year.,ItPRP isVBZ difficultJJ toTO getVB theDT beefNN variableJJ premiumNN onIN theDT tableNN everyDT yearNN ,"root(ROOT-0, difficult-3) nsubj(difficult-3, It-1) cop(difficult-3, is-2) mark(get-5, to-4) xcomp(difficult-3, get-5) det(premium-9, the-6) compound(premium-9, beef-7) amod(premium-9, variable-8) dobj(get-5, premium-9) case(table-12, on-10) det(table-12, the-11) nmod:on(get-5, table-12) det(year-14, every-13) nmod:tmod(get-5, year-14) punct(difficult-3, .-15)",0,0,0,"root(ROOT, difficlt) nsbj(difficlt, It) cop(difficlt, is) mark(get, to) xcomp(difficlt, get) det(premim, the) compond(premim, beef) amod(premim, variable) dobj(get, premim) case(table, on) det(table, the) nmod:on(get, table) det(year, every) nmod:tmod(get, year) pnct(difficlt, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) compond(NN,NN) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:on(VB,NN) det(NN,DT) nmod:tmod(VB,NN) pnct(JJ,JJ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As I said  we did it last year  and we continue to believe that it is not in the Community's interest to end the scheme.,AsIN IPRP saidVBD wePRP didVBD itPRP lastJJ yearNN andCC wePRP continueVBP toTO believeVB thatIN itPRP isVBZ notRB inIN theDT CommunityNNP 'sPOS interestNN toTO endVB theDT schemeNN ,"root(ROOT-0, said-3) mark(said-3, As-1) nsubj(said-3, I-2) punct(did-6, ,-4) nsubj(did-6, we-5) ccomp(said-3, did-6) dobj(did-6, it-7) amod(year-9, last-8) nmod:tmod(did-6, year-9) punct(did-6, ,-10) cc(did-6, and-11) nsubj(continue-13, we-12) ccomp(said-3, continue-13) conj:and(did-6, continue-13) mark(believe-15, to-14) xcomp(continue-13, believe-15) mark(interest-24, that-16) nsubj(interest-24, it-17) cop(interest-24, is-18) neg(interest-24, not-19) case(interest-24, in-20) det(Community-22, the-21) nmod:poss(interest-24, Community-22) case(Community-22, 's-23) ccomp(believe-15, interest-24) mark(end-26, to-25) acl(interest-24, end-26) det(scheme-28, the-27) dobj(end-26, scheme-28) punct(said-3, .-29)",0,0,0,"root(ROOT, said) mark(said, As) nsbj(said, I) pnct(did, ,) nsbj(did, we) ccomp(said, did) dobj(did, it) amod(year, last) nmod:tmod(did, year) pnct(did, ,) cc(did, and) nsbj(contine, we) ccomp(said, contine) conj:and(did, contine) mark(believe, to) xcomp(contine, believe) mark(interest, that) nsbj(interest, it) cop(interest, is) neg(interest, not) case(interest, in) det(Commnity, the) nmod:poss(interest, Commnity) ""case(Commnity, s)"", ccomp(believe, interest) mark(end, to) acl(interest, end) det(scheme, the) dobj(end, scheme) pnct(said, .)","root(,VBD) mark(VBD,IN) nsbj(VBD,PRP) pnct(VBD,VBD) nsbj(VBD,PRP) ccomp(VBD,VBD) dobj(VBD,PRP) amod(NN,JJ) nmod:tmod(VBD,NN) pnct(VBD,VBD) cc(VBD,CC) nsbj(VBP,PRP) ccomp(VBD,VBP) conj:and(VBD,VBP) mark(VB,TO) xcomp(VBP,VB) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) neg(NN,RB) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) ccomp(VB,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) pnct(VBD,VBD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am grateful to my hon. Friend.,IPRP amVBP gratefulJJ toTO myPRP$ honNN FriendNN ,"root(ROOT-0, grateful-3) nsubj(grateful-3, I-1) cop(grateful-3, am-2) case(Friend-7, to-4) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) nmod:to(grateful-3, Friend-7) punct(grateful-3, .-8)",0,1,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gratefl, Friend) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) case(NN,TO) nmod:poss(NN,PRP$) compond(NN,NN) nmod:to(JJ,NN) pnct(JJ,JJ)","[Friend, ROOT, I, grateful, my]","[Friend, ROOT, I, grateful, my]",12,"[Friend, ROOT, I, grateful, my]","[Friend, ROOT, I, grateful, my]",NNP_Friend PRP_I JJ_grateful PRP$_my ,"[Friend, ROOT, I, grateful, my]","[Friend, ROOT, I, grateful, my]",NNP_Friend PRP_I JJ_grateful PRP$_my ,"[Friend, ROOT, I, grateful, my]",NNP_Friend PRP_I JJ_grateful PRP$_my ,"[Friend, ROOT, I, grateful, my]",NNP_Friend PRP_I JJ_grateful PRP$_my ,-3,0,2,1,1,0,2,2,2,2
In addition to the threat emanating from the European Community Commission's proposals on the sheepmeat regime  will the Minister take careful account of the problem faced particularly by Scottish producers because they do not have access to the new qualifying group of animals?,InIN additionNN toTO theDT threatNN emanatingVBG fromIN theDT EuropeanNNP CommunityNNP CommissionNNP 'sPOS proposalsNNS onIN theDT sheepmeatNN regimeNN willMD theDT MinisterNNP takeVB carefulJJ accountNN ofIN theDT problemNN facedVBD particularlyRB byIN ScottishJJ producersNNS becauseIN theyPRP doVBP notRB haveVB accessNN toTO theDT newJJ qualifyingVBG groupNN ofIN animalsNNS ,"root(ROOT-0, take-22) case(addition-2, In-1) nmod:in(take-22, addition-2) case(threat-5, to-3) det(threat-5, the-4) nmod:to(addition-2, threat-5) acl(threat-5, emanating-6) case(proposals-13, from-7) det(Commission-11, the-8) compound(Commission-11, European-9) compound(Commission-11, Community-10) nmod:poss(proposals-13, Commission-11) case(Commission-11, 's-12) nmod:from(emanating-6, proposals-13) case(regime-17, on-14) det(regime-17, the-15) compound(regime-17, sheepmeat-16) nmod:on(proposals-13, regime-17) punct(take-22, ,-18) aux(take-22, will-19) det(Minister-21, the-20) nsubj(take-22, Minister-21) amod(account-24, careful-23) dobj(take-22, account-24) case(problem-27, of-25) det(problem-27, the-26) nmod:of(account-24, problem-27) dep(take-22, faced-28) advmod(producers-32, particularly-29) case(producers-32, by-30) amod(producers-32, Scottish-31) nmod:by(faced-28, producers-32) mark(have-37, because-33) nsubj(have-37, they-34) aux(have-37, do-35) neg(have-37, not-36) advcl(faced-28, have-37) dobj(have-37, access-38) case(group-43, to-39) det(group-43, the-40) amod(group-43, new-41) amod(group-43, qualifying-42) nmod:to(access-38, group-43) case(animals-45, of-44) nmod:of(group-43, animals-45) punct(take-22, ?-46)",0,0,0,"root(ROOT, take) case(addition, In) nmod:in(take, addition) case(threat, to) det(threat, the) nmod:to(addition, threat) acl(threat, emanating) case(proposals, from) det(Commission, the) compond(Commission, Eropean) compond(Commission, Commnity) nmod:poss(proposals, Commission) ""case(Commission, s)"", nmod:from(emanating, proposals) case(regime, on) det(regime, the) compond(regime, sheepmeat) nmod:on(proposals, regime) pnct(take, ,) ax(take, will) det(Minister, the) nsbj(take, Minister) amod(accont, carefl) dobj(take, accont) case(problem, of) det(problem, the) nmod:of(accont, problem) dep(take, faced) advmod(prodcers, particlarly) case(prodcers, by) amod(prodcers, Scottish) nmod:by(faced, prodcers) mark(have, becase) nsbj(have, they) ax(have, do) neg(have, not) advcl(faced, have) dobj(have, access) case(grop, to) det(grop, the) amod(grop, new) amod(grop, qalifying) nmod:to(access, grop) case(animals, of) nmod:of(grop, animals) pnct(take, ?)","root(,VB) case(NN,IN) nmod:in(VB,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) acl(NN,VBG) case(NNS,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) nmod:from(VBG,NNS) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:on(NNS,NN) pnct(VB,VB) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) dep(VB,VBD) advmod(NNS,RB) case(NNS,IN) amod(NNS,JJ) nmod:by(VBD,NNS) mark(VB,IN) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) advcl(VBD,VB) dobj(VB,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) amod(NN,VBG) nmod:to(NN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VB,VB)","[account, ROOT, faced, take, Minister, addition]","[account, ROOT, faced, take, Minister, addition]",13,[ ],[ ],NN_account VBD_faced VB_take NNP_Minister NN_addition ,"[account, ROOT, faced, take, Minister, addition]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am not sure precisely what the hon. Gentleman has in mind.,IPRP amVBP notRB sureJJ preciselyRB whatWP theDT honNN GentlemanNNP hasVBZ inIN mindNN ,"root(ROOT-0, sure-4) nsubj(sure-4, I-1) cop(sure-4, am-2) neg(sure-4, not-3) advmod(has-10, precisely-5) dobj(has-10, what-6) det(Gentleman-9, the-7) compound(Gentleman-9, hon.-8) nsubj(has-10, Gentleman-9) ccomp(sure-4, has-10) case(mind-12, in-11) nmod:in(has-10, mind-12) punct(sure-4, .-13)",0,1,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) neg(sre, not) advmod(has, precisely) dobj(has, what) det(Gentleman, the) compond(Gentleman, hon.) nsbj(has, Gentleman) ccomp(sre, has) case(mind, in) nmod:in(has, mind) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) neg(JJ,RB) advmod(VBZ,RB) dobj(VBZ,WP) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(JJ,VBZ) case(NN,IN) nmod:in(VBZ,NN) pnct(JJ,JJ)","[Gentleman, sure, mind, has, what, precisely]","[Gentleman, sure, mind, has, what, precisely]",14,"[Gentleman, sure, mind, has, what, precisely]","[Gentleman, sure, mind, has, what, precisely]",NNP_Gentleman RB_sure NN_mind VBZ_has WP_what RB_precisely ,"[Gentleman, sure, mind, has, what, precisely]","[Gentleman, sure, mind, has, what, precisely]",NNP_Gentleman RB_sure NN_mind VBZ_has WP_what RB_precisely ,"[Gentleman, sure, mind, has, what, precisely]",NNP_Gentleman RB_sure NN_mind VBZ_has WP_what RB_precisely ,"[Gentleman, sure, mind, has, what, precisely]",NNP_Gentleman RB_sure NN_mind VBZ_has WP_what RB_precisely ,-3,0,2,2,1,2,2,2,2,2
One or two points are worth taking up with the Commission  and perhaps the hon. Gentleman will write to me about the matter.,OneCD orCC twoCD pointsNNS areVBP worthJJ takingVBG upRP withIN theDT CommissionNNP andCC perhapsRB theDT honNN GentlemanNNP willMD writeVB toTO mePRP aboutIN theDT matterNN ,"root(ROOT-0, worth-6) nummod(points-4, One-1) cc(One-1, or-2) conj:or(One-1, two-3) nummod(points-4, two-3) nsubj(worth-6, points-4) cop(worth-6, are-5) ccomp(worth-6, taking-7) compound:prt(taking-7, up-8) case(Commission-11, with-9) det(Commission-11, the-10) nmod:with(taking-7, Commission-11) punct(worth-6, ,-12) cc(worth-6, and-13) advmod(write-19, perhaps-14) det(Gentleman-17, the-15) compound(Gentleman-17, hon.-16) nsubj(write-19, Gentleman-17) aux(write-19, will-18) conj:and(worth-6, write-19) case(me-21, to-20) nmod:to(write-19, me-21) case(matter-24, about-22) det(matter-24, the-23) nmod:about(write-19, matter-24) punct(worth-6, .-25)",0,0,0,"root(ROOT, worth) nmmod(points, One) cc(One, or) conj:or(One, two) nmmod(points, two) nsbj(worth, points) cop(worth, are) ccomp(worth, taking) compond:prt(taking, p) case(Commission, with) det(Commission, the) nmod:with(taking, Commission) pnct(worth, ,) cc(worth, and) advmod(write, perhaps) det(Gentleman, the) compond(Gentleman, hon.) nsbj(write, Gentleman) ax(write, will) conj:and(worth, write) case(me, to) nmod:to(write, me) case(matter, abot) det(matter, the) nmod:abot(write, matter) pnct(worth, .)","root(,JJ) nmmod(NNS,CD) cc(CD,CC) conj:or(CD,CD) nmmod(NNS,CD) nsbj(JJ,NNS) cop(JJ,VBP) ccomp(JJ,VBG) compond:prt(VBG,RP) case(NNP,IN) det(NNP,DT) nmod:with(VBG,NNP) pnct(JJ,JJ) cc(JJ,CC) advmod(VB,RB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) conj:and(JJ,VB) case(PRP,TO) nmod:to(VB,PRP) case(NN,IN) det(NN,DT) nmod:abot(VB,NN) pnct(JJ,JJ)","[matter, write, perhaps, Gentleman, me]","[matter, write, perhaps, Gentleman, me]",14,[ ],[ ],NN_matter VB_write RB_perhaps NNP_Gentleman PRP_me ,"[matter, write, perhaps, Gentleman, me]","[matter, write, perhaps, Gentleman, me]",NN_matter VB_write RB_perhaps NNP_Gentleman PRP_me ,"[matter, write, perhaps, Gentleman, me]",NN_matter VB_write RB_perhaps NNP_Gentleman PRP_me ,"[matter, write, perhaps, Gentleman, me]",NN_matter VB_write RB_perhaps NNP_Gentleman PRP_me ,-3,0,2,0,0,0,0,0,0,0
Is my hon. Friend aware that although most beef producers have received the beef premium for most of the weeks of the present year  beef has still been largely unprofitable and people are already leaving beef production?,IsVBZ myPRP$ honJJ FriendNNP awareNN thatIN althoughIN mostJJS beefNN producersNNS haveVBP receivedVBN theDT beefNN premiumNN forIN mostJJS ofIN theDT weeksNNS ofIN theDT presentJJ yearNN beefNN hasVBZ stillRB beenVBN largelyRB unprofitableJJ andCC peopleNNS areVBP alreadyRB leavingVBG beefNN productionNN ,"root(ROOT-0, aware-5) cop(aware-5, Is-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(aware-5, Friend-4) mark(unprofitable-31, that-6) mark(received-12, although-7) amod(producers-10, most-8) compound(producers-10, beef-9) nsubj(received-12, producers-10) aux(received-12, have-11) advcl(unprofitable-31, received-12) det(premium-15, the-13) compound(premium-15, beef-14) dobj(received-12, premium-15) case(most-17, for-16) nmod:for(received-12, most-17) case(weeks-20, of-18) det(weeks-20, the-19) nmod:of(most-17, weeks-20) case(year-24, of-21) det(year-24, the-22) amod(year-24, present-23) nmod:of(weeks-20, year-24) punct(unprofitable-31, ,-25) nsubj(unprofitable-31, beef-26) aux(unprofitable-31, has-27) advmod(unprofitable-31, still-28) cop(unprofitable-31, been-29) advmod(unprofitable-31, largely-30) ccomp(aware-5, unprofitable-31) cc(unprofitable-31, and-32) nsubj(leaving-36, people-33) aux(leaving-36, are-34) advmod(leaving-36, already-35) ccomp(aware-5, leaving-36) conj:and(unprofitable-31, leaving-36) compound(production-38, beef-37) dobj(leaving-36, production-38) punct(aware-5, ?-39)",0,0,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(aware, Friend) mark(nprofitable, that) mark(received, althogh) amod(prodcers, most) compond(prodcers, beef) nsbj(received, prodcers) ax(received, have) advcl(nprofitable, received) det(premim, the) compond(premim, beef) dobj(received, premim) case(most, for) nmod:for(received, most) case(weeks, of) det(weeks, the) nmod:of(most, weeks) case(year, of) det(year, the) amod(year, present) nmod:of(weeks, year) pnct(nprofitable, ,) nsbj(nprofitable, beef) ax(nprofitable, has) advmod(nprofitable, still) cop(nprofitable, been) advmod(nprofitable, largely) ccomp(aware, nprofitable) cc(nprofitable, and) nsbj(leaving, people) ax(leaving, are) advmod(leaving, already) ccomp(aware, leaving) conj:and(nprofitable, leaving) compond(prodction, beef) dobj(leaving, prodction) pnct(aware, ?)","root(,NN) cop(NN,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) mark(JJ,IN) mark(VBN,IN) amod(NNS,JJS) compond(NNS,NN) nsbj(VBN,NNS) ax(VBN,VBP) advcl(JJ,VBN) det(NN,DT) compond(NN,NN) dobj(VBN,NN) case(JJS,IN) nmod:for(VBN,JJS) case(NNS,IN) det(NNS,DT) nmod:of(JJS,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) pnct(JJ,JJ) nsbj(JJ,NN) ax(JJ,VBZ) advmod(JJ,RB) cop(JJ,VBN) advmod(JJ,RB) ccomp(NN,JJ) cc(JJ,CC) nsbj(VBG,NNS) ax(VBG,VBP) advmod(VBG,RB) ccomp(NN,VBG) conj:and(JJ,VBG) compond(NN,NN) dobj(VBG,NN) pnct(NN,NN)","[my, unprofitable, Friend, leaving, ROOT, aware]","[my, unprofitable, Friend, leaving, ROOT, aware]",15,"[my, unprofitable, Friend, leaving, ROOT, aware]",[ ],PRP$_my JJ_unprofitable NNP_Friend VBG_leaving JJ_aware ,"[my, unprofitable, Friend, leaving, ROOT, aware]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he do whatever he can to ensure that the scheme  which is so valuable  continues  otherwise  with the milk quota production  whole sections of the British countryside will change their character as people leave horn and find an alternative?,WillMD hePRP doVB whateverRB hePRP canMD toTO ensureVB thatIN theDT schemeNN whichWDT isVBZ soRB valuableJJ continuesVBZ otherwiseRB withIN theDT milkNN quotaNN productionNN wholeJJ sectionsNNS ofIN theDT BritishJJ countrysideNN willMD changeVB theirPRP$ characterNN asIN peopleNNS leaveVBP hornVBN andCC findVB anDT alternativeNN ,"root(ROOT-0, do-3) aux(do-3, Will-1) nsubj(do-3, he-2) dobj(do-3, whatever-4) nsubj(can-6, he-5) acl:relcl(whatever-4, can-6) mark(ensure-8, to-7) xcomp(can-6, ensure-8) mark(continues-18, that-9) det(scheme-11, the-10) nsubj(continues-18, scheme-11) punct(scheme-11, ,-12) nsubj(valuable-16, which-13) cop(valuable-16, is-14) advmod(valuable-16, so-15) acl:relcl(scheme-11, valuable-16) punct(scheme-11, ,-17) ccomp(ensure-8, continues-18) punct(continues-18, ,-19) advmod(continues-18, otherwise-20) punct(continues-18, ,-21) case(production-26, with-22) det(production-26, the-23) compound(production-26, milk-24) compound(production-26, quota-25) nsubj(change-35, production-26) punct(production-26, ,-27) amod(sections-29, whole-28) appos(production-26, sections-29) case(countryside-33, of-30) det(countryside-33, the-31) amod(countryside-33, British-32) nmod:of(sections-29, countryside-33) aux(change-35, will-34) ccomp(continues-18, change-35) nmod:poss(character-37, their-36) dobj(change-35, character-37) mark(leave-40, as-38) nsubj(leave-40, people-39) nsubj(find-43, people-39) advcl(change-35, leave-40) dobj(leave-40, horn-41) cc(leave-40, and-42) advcl(change-35, find-43) conj:and(leave-40, find-43) det(alternative-45, an-44) dobj(find-43, alternative-45) punct(do-3, ?-46)",0,0,0,"root(ROOT, do) ax(do, Will) nsbj(do, he) dobj(do, whatever) nsbj(can, he) acl:relcl(whatever, can) mark(ensre, to) xcomp(can, ensre) mark(contines, that) det(scheme, the) nsbj(contines, scheme) pnct(scheme, ,) nsbj(valable, which) cop(valable, is) advmod(valable, so) acl:relcl(scheme, valable) pnct(scheme, ,) ccomp(ensre, contines) pnct(contines, ,) advmod(contines, otherwise) pnct(contines, ,) case(prodction, with) det(prodction, the) compond(prodction, milk) compond(prodction, qota) nsbj(change, prodction) pnct(prodction, ,) amod(sections, whole) appos(prodction, sections) case(contryside, of) det(contryside, the) amod(contryside, British) nmod:of(sections, contryside) ax(change, will) ccomp(contines, change) nmod:poss(character, their) dobj(change, character) mark(leave, as) nsbj(leave, people) nsbj(find, people) advcl(change, leave) dobj(leave, horn) cc(leave, and) advcl(change, find) conj:and(leave, find) det(alternative, an) dobj(find, alternative) pnct(do, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) VBbj(VB,RB) nsbj(MD,PRP) acl:relcl(RB,MD) mark(VB,TO) xcomp(MD,VB) mark(VBZ,IN) det(NN,DT) nsbj(VBZ,NN) pnct(NN,NN) nsbj(JJ,WDT) cop(JJ,VBZ) advmod(JJ,RB) acl:relcl(NN,JJ) pnct(NN,NN) ccomp(VB,VBZ) pnct(VBZ,VBZ) advmod(VBZ,RB) pnct(VBZ,VBZ) case(NN,IN) det(NN,DT) compond(NN,NN) compond(NN,NN) nsbj(VB,NN) pnct(NN,NN) amod(NNS,JJ) appos(NN,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) ax(VB,MD) ccomp(VBZ,VB) nmod:poss(NN,PRP$) dobj(VB,NN) mark(VBP,IN) nsbj(VBP,NNS) nsbj(VB,NNS) advcl(VB,VBP) dobj(VBP,VBN) cc(VBP,CC) advcl(VB,VB) conj:and(VBP,VB) det(NN,DT) dobj(VB,NN) pnct(VB,VB)","[ensure, whatever, he, ROOT, do, can, he]","[ensure, whatever, he, ROOT, do, can, he]",15,"[ensure, whatever, can, he]","[ensure, whatever, can, he]",VB_ensure RB_whatever PRP_he VB_do MD_can PRP_he ,"[ensure, whatever, he, ROOT, do, can, he]","[ensure, whatever, he, ROOT, do, can, he]",VB_ensure RB_whatever PRP_he VB_do MD_can PRP_he ,"[ensure, whatever, he, ROOT, do, can, he]",VB_ensure RB_whatever PRP_he VB_do MD_can PRP_he ,"[ensure, whatever, he, ROOT, do, can, he]",VB_ensure RB_whatever PRP_he VB_do MD_can PRP_he ,-3,0,2,0,0,0,0,0,0,0
Both the variable premium scheme and the changes in the intervention system have had a beneficial effect on the market this year  in that the returns to the producers have been about 98 per cent.,BothDT theDT variableJJ premiumJJ schemeNN andCC theDT changesNNS inIN theDT interventionNN systemNN haveVBP hadVBN aDT beneficialJJ effectNN onIN theDT marketNN thisDT yearNN inIN thatIN theDT returnsNNS toTO theDT producersNNS haveVBP beenVBN aboutIN 98CD perIN centNN ,"root(ROOT-0, had-14) cc:preconj(scheme-5, Both-1) det(scheme-5, the-2) amod(scheme-5, variable-3) compound(scheme-5, premium-4) nsubj(had-14, scheme-5) cc(scheme-5, and-6) det(changes-8, the-7) conj:and(scheme-5, changes-8) nsubj(had-14, changes-8) case(system-12, in-9) det(system-12, the-10) compound(system-12, intervention-11) nmod:in(changes-8, system-12) aux(had-14, have-13) det(effect-17, a-15) amod(effect-17, beneficial-16) dobj(had-14, effect-17) case(market-20, on-18) det(market-20, the-19) nmod:on(effect-17, market-20) det(year-22, this-21) nmod:tmod(had-14, year-22) punct(had-14, ,-23) nmod(had-14, in-24) mark(98-34, that-25) det(returns-27, the-26) nsubj(98-34, returns-27) case(producers-30, to-28) det(producers-30, the-29) nmod:to(returns-27, producers-30) aux(98-34, have-31) cop(98-34, been-32) advmod(98-34, about-33) ccomp(in-24, 98-34) case(cent-36, per-35) nmod:per(98-34, cent-36) punct(had-14, .-37)",0,0,0,"root(ROOT, had) cc:preconj(scheme, Both) det(scheme, the) amod(scheme, variable) compond(scheme, premim) nsbj(had, scheme) cc(scheme, and) det(changes, the) conj:and(scheme, changes) nsbj(had, changes) case(system, in) det(system, the) compond(system, intervention) nmod:in(changes, system) ax(had, have) det(effect, a) amod(effect, beneficial) dobj(had, effect) case(market, on) det(market, the) nmod:on(effect, market) det(year, this) nmod:tmod(had, year) pnct(had, ,) nmod(had, in) mark(98, that) det(retrns, the) nsbj(98, retrns) case(prodcers, to) det(prodcers, the) nmod:to(retrns, prodcers) ax(98, have) cop(98, been) advmod(98, abot) ccomp(in, 98) case(cent, per) nmod:per(98, cent) pnct(had, .)","root(,VBN) cc:preconj(NN,DT) det(NN,DT) amod(NN,JJ) compond(NN,JJ) nsbj(VBN,NN) cc(NN,CC) det(NNS,DT) conj:and(NN,NNS) nsbj(VBN,NNS) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NNS,NN) ax(VBN,VBP) det(NN,DT) amod(NN,JJ) dobj(VBN,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) det(NN,DT) nmod:tmod(VBN,NN) pnct(VBN,VBN) nmod(VBN,IN) mark(CD,IN) det(NNS,DT) nsbj(CD,NNS) case(NNS,TO) det(NNS,DT) nmod:to(NNS,NNS) ax(CD,VBP) cop(CD,VBN) advmod(CD,IN) ccomp(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBN,VBN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the target price.,ofIN theDT targetNN priceNN ,"root(ROOT-0, price-4) case(price-4, of-1) det(price-4, the-2) compound(price-4, target-3) punct(price-4, .-5)",0,0,0,"root(ROOT, price) case(price, of) det(price, the) compond(price, target) pnct(price, .)","root(,NN) case(NN,IN) det(NN,DT) compond(NN,NN) pnct(NN,NN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I repeat that the variable premium scheme is beneficial to both producers and consumers and ensures that beef is consumed instead of going into intervention.,IPRP repeatVBP thatIN theDT variableJJ premiumJJ schemeNN isVBZ beneficialJJ toTO bothDT producersNNS andCC consumersNNS andCC ensuresVBZ thatDT beefNN isVBZ consumedVBN insteadRB ofIN goingVBG intoIN interventionNN ,"root(ROOT-0, repeat-2) nsubj(repeat-2, I-1) mark(beneficial-9, that-3) det(scheme-7, the-4) amod(scheme-7, variable-5) compound(scheme-7, premium-6) nsubj(beneficial-9, scheme-7) nsubj(ensures-16, scheme-7) cop(beneficial-9, is-8) ccomp(repeat-2, beneficial-9) case(producers-12, to-10) cc:preconj(producers-12, both-11) nmod:to(beneficial-9, producers-12) cc(producers-12, and-13) nmod:to(beneficial-9, consumers-14) conj:and(producers-12, consumers-14) cc(beneficial-9, and-15) ccomp(repeat-2, ensures-16) conj:and(beneficial-9, ensures-16) mark(consumed-20, that-17) nsubjpass(consumed-20, beef-18) auxpass(consumed-20, is-19) ccomp(ensures-16, consumed-20) mark(going-23, instead-21) mwe(instead-21, of-22) advcl(consumed-20, going-23) case(intervention-25, into-24) nmod:into(going-23, intervention-25) punct(repeat-2, .-26)",0,0,1,"root(ROOT, repeat) nsbj(repeat, I) mark(beneficial, that) det(scheme, the) amod(scheme, variable) compond(scheme, premim) nsbj(beneficial, scheme) nsbj(ensres, scheme) cop(beneficial, is) ccomp(repeat, beneficial) case(prodcers, to) cc:preconj(prodcers, both) nmod:to(beneficial, prodcers) cc(prodcers, and) nmod:to(beneficial, consmers) conj:and(prodcers, consmers) cc(beneficial, and) ccomp(repeat, ensres) conj:and(beneficial, ensres) mark(consmed, that) nsbjpass(consmed, beef) axpass(consmed, is) ccomp(ensres, consmed) mark(going, instead) mwe(instead, of) advcl(consmed, going) case(intervention, into) nmod:into(going, intervention) pnct(repeat, .)","root(,VBP) nsbj(VBP,PRP) mark(JJ,DT) det(NN,DT) amod(NN,JJ) compond(NN,JJ) nsbj(JJ,NN) nsbj(VBZ,NN) cop(JJ,VBZ) ccomp(VBP,JJ) case(NNS,TO) cc:preconj(NNS,DT) nmod:to(JJ,NNS) cc(NNS,CC) nmod:to(JJ,NNS) conj:and(NNS,NNS) cc(JJ,CC) ccomp(VBP,VBZ) conj:and(JJ,VBZ) mark(VBN,DT) nsbjpass(VBN,NN) axpass(VBN,VBZ) ccomp(VBZ,VBN) mark(VBG,RB) mwe(RB,IN) advcl(VBN,VBG) case(NN,IN) nmod:into(VBG,NN) pnct(VBP,VBP)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Our position on subsidies for products in surplus is extremely clear.,OurPRP$ positionNN onIN subsidiesNNS forIN productsNNS inIN surplusNN isVBZ extremelyRB clearJJ ,"root(ROOT-0, clear-11) nmod:poss(position-2, Our-1) nsubj(clear-11, position-2) case(subsidies-4, on-3) nmod:on(position-2, subsidies-4) case(products-6, for-5) nmod:for(subsidies-4, products-6) case(surplus-8, in-7) nmod:in(products-6, surplus-8) cop(clear-11, is-9) advmod(clear-11, extremely-10) punct(clear-11, .-12)",0,1,0,"root(ROOT, clear) nmod:poss(position, Or) nsbj(clear, position) case(sbsidies, on) nmod:on(position, sbsidies) case(prodcts, for) nmod:for(sbsidies, prodcts) case(srpls, in) nmod:in(prodcts, srpls) cop(clear, is) advmod(clear, extremely) pnct(clear, .)","root(,JJ) nmod:poss(NN,PRP$) nsbj(JJ,NN) case(NNS,IN) nmod:on(NN,NNS) case(NNS,IN) nmod:for(NNS,NNS) case(NN,IN) nmod:in(NNS,NN) cop(JJ,VBZ) advmod(JJ,RB) pnct(JJ,JJ)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Last year we had considerable difficulties with the schemes  and obviously we shall have to see how we get on in the negotiations.,LastJJ yearNN wePRP hadVBD considerableJJ difficultiesNNS withIN theDT schemesNNS andCC obviouslyRB wePRP shallMD haveVB toTO seeVB howWRB wePRP getVBP onIN inIN theDT negotiationsNNS ,"root(ROOT-0, had-4) amod(year-2, Last-1) nmod:tmod(had-4, year-2) nsubj(had-4, we-3) amod(difficulties-6, considerable-5) dobj(had-4, difficulties-6) case(schemes-9, with-7) det(schemes-9, the-8) nmod:with(had-4, schemes-9) punct(had-4, ,-10) cc(had-4, and-11) advmod(have-15, obviously-12) nsubj(have-15, we-13) aux(have-15, shall-14) conj:and(had-4, have-15) mark(see-17, to-16) xcomp(have-15, see-17) advmod(get-20, how-18) nsubj(get-20, we-19) ccomp(see-17, get-20) case(negotiations-24, on-21) case(negotiations-24, in-22) det(negotiations-24, the-23) nmod:in(get-20, negotiations-24) punct(had-4, .-25)",0,0,0,"root(ROOT, had) amod(year, Last) nmod:tmod(had, year) nsbj(had, we) amod(difficlties, considerable) dobj(had, difficlties) case(schemes, with) det(schemes, the) nmod:with(had, schemes) pnct(had, ,) cc(had, and) advmod(have, obviosly) nsbj(have, we) ax(have, shall) conj:and(had, have) mark(see, to) xcomp(have, see) advmod(get, how) nsbj(get, we) ccomp(see, get) case(negotiations, on) case(negotiations, in) det(negotiations, the) nmod:in(get, negotiations) pnct(had, .)","root(,VBD) amod(NN,JJ) nmod:tmod(VBD,NN) nsbj(VBD,PRP) amod(NNS,JJ) dobj(VBD,NNS) case(NNS,IN) det(NNS,DT) nmod:with(VBD,NNS) pnct(VBD,VBD) cc(VBD,CC) advmod(VB,RB) nsbj(VB,PRP) ax(VB,MD) conj:and(VBD,VB) mark(VB,TO) xcomp(VB,VB) advmod(VBP,WRB) nsbj(VBP,PRP) ccomp(VB,VBP) case(NNS,IN) case(NNS,IN) det(NNS,DT) nmod:in(VBP,NNS) pnct(VBD,VBD)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Foreign and Commonwealth Affairs what representations Her Majesty's Government have received on the continuing imprisonment of Nelson Mandela in South Africa; and what has been the response of those representations.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN ForeignNNP andCC CommonwealthNNP AffairsNNP whatWP representationsVBZ HerPRP$ MajestyNNP 'sPOS GovernmentNNP haveVBP receivedVBN onIN theDT continuingVBG imprisonmentNN ofIN NelsonNNP MandelaNNP inIN SouthNNP AfricaNNP ;: andCC whatWDT hasVBZ beenVBN theDT responseNN ofIN thoseDT representationsNNS ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Affairs-10, for-6) compound(Affairs-10, Foreign-7) cc(Foreign-7, and-8) conj:and(Foreign-7, Commonwealth-9) compound(Affairs-10, Commonwealth-9) nmod:for(Secretary-3, Affairs-10) det(representations-12, what-11) dobj(received-18, representations-12) nmod:poss(Government-16, Her-13) nmod:poss(Government-16, Majesty-14) case(Majesty-14, 's-15) nsubj(received-18, Government-16) aux(received-18, have-17) acl:relcl(Affairs-10, received-18) case(imprisonment-22, on-19) det(imprisonment-22, the-20) amod(imprisonment-22, continuing-21) nmod:on(received-18, imprisonment-22) case(Mandela-25, of-23) compound(Mandela-25, Nelson-24) nmod:of(imprisonment-22, Mandela-25) case(Africa-28, in-26) compound(Africa-28, South-27) nmod:in(imprisonment-22, Africa-28) punct(asked-1, ;-29) cc(asked-1, and-30) nsubj(response-35, what-31) aux(response-35, has-32) cop(response-35, been-33) det(response-35, the-34) conj:and(asked-1, response-35) case(representations-38, of-36) det(representations-38, those-37) nmod:of(response-35, representations-38) punct(asked-1, .-39)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Affairs, for) compond(Affairs, Foreign) cc(Foreign, and) conj:and(Foreign, Commonwealth) compond(Affairs, Commonwealth) nmod:for(Secretary, Affairs) det(representations, what) dobj(received, representations) nmod:poss(Government, Her) nmod:poss(Government, Majesty) ""case(Majesty, s)"", nsbj(received, Government) ax(received, have) acl:relcl(Affairs, received) case(imprisonment, on) det(imprisonment, the) amod(imprisonment, contining) nmod:on(received, imprisonment) case(Mandela, of) compond(Mandela, Nelson) nmod:of(imprisonment, Mandela) case(Africa, in) compond(Africa, Soth) nmod:in(imprisonment, Africa) pnct(asked, ;) cc(asked, and) nsbj(response, what) ax(response, has) cop(response, been) det(response, the) conj:and(asked, response) case(representations, of) det(representations, those) nmod:of(response, representations) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) compond(NNP,NNP) cc(NNP,CC) conj:and(NNP,NNP) compond(NNP,NNP) nmod:for(NNP,NNP) det(NNS,WDT) dobj(VBN,NNS) nmod:poss(NNP,PRP$) nmod:poss(NNP,NNP) case(NNP,POS) nsbj(VBN,NNP) ax(VBN,VBP) acl:relcl(NNP,VBN) case(NN,IN) det(NN,DT) amod(NN,VBG) nmod:on(VBN,NN) case(NNP,IN) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) compond(NNP,NNP) nmod:in(NN,NNP) pnct(VBN,:) cc(VBN,CC) nsbj(NN,WDT) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) conj:and(VBN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(VBN,VBN)","[State, and, Majesty, Her, imprisonment, representations, Secretary, Government, ROOT, asked, received, Affairs]","[State, and, Majesty, Her, imprisonment, representations, Secretary, Government, ROOT, asked, received, Affairs]",1,"[Secretary, ROOT, asked, State, and, received, Affairs]","[Secretary, ROOT, asked, State, and, received, Affairs]",NNP_State CC_and NNP_Majesty PRP$_Her NN_imprisonment VBZ_representations NNP_Secretary NNP_Government VBN_asked VBN_received NNP_Affairs ,"[State, and, Majesty, Her, imprisonment, representations, Secretary, Government, ROOT, asked, received, Affairs]","[State, and, Majesty, Her, imprisonment, representations, Secretary, Government, ROOT, asked, received, Affairs]",NNP_State CC_and NNP_Majesty PRP$_Her NN_imprisonment VBZ_representations NNP_Secretary NNP_Government VBN_asked VBN_received NNP_Affairs ,"[State, and, Majesty, Her, imprisonment, representations, Secretary, Government, ROOT, asked, received, Affairs]",NNP_State CC_and NNP_Majesty PRP$_Her NN_imprisonment VBZ_representations NNP_Secretary NNP_Government VBN_asked VBN_received NNP_Affairs ,"[State, and, Majesty, Her, imprisonment, representations, Secretary, Government, ROOT, asked, received, Affairs]",NNP_State CC_and NNP_Majesty PRP$_Her NN_imprisonment VBZ_representations NNP_Secretary NNP_Government VBN_asked VBN_received NNP_Affairs ,-3,0,2,2,1,2,2,2,2,2
We receive many representations  from individuals and organisations  in accord with our view that Nelson Mandela should be released immediately and unconditionally.,WePRP receiveVBP manyJJ representationsNNS fromIN individualsNNS andCC organisationsNNS inIN accordNN withIN ourPRP$ viewNN thatIN NelsonNNP MandelaNNP shouldMD beVB releasedVBN immediatelyRB andCC unconditionallyRB ,"root(ROOT-0, receive-2) nsubj(receive-2, We-1) amod(representations-4, many-3) dobj(receive-2, representations-4) punct(receive-2, ,-5) case(individuals-7, from-6) nmod:from(receive-2, individuals-7) cc(individuals-7, and-8) nmod:from(receive-2, organisations-9) conj:and(individuals-7, organisations-9) punct(receive-2, ,-10) case(accord-12, in-11) nmod:in(receive-2, accord-12) case(view-15, with-13) nmod:poss(view-15, our-14) nmod:with(accord-12, view-15) mark(released-21, that-16) compound(Mandela-18, Nelson-17) nsubjpass(released-21, Mandela-18) aux(released-21, should-19) auxpass(released-21, be-20) ccomp(view-15, released-21) advmod(released-21, immediately-22) cc(released-21, and-23) ccomp(view-15, unconditionally-24) conj:and(released-21, unconditionally-24) punct(receive-2, .-25)",0,0,0,"root(ROOT, receive) nsbj(receive, We) amod(representations, many) dobj(receive, representations) pnct(receive, ,) case(individals, from) nmod:from(receive, individals) cc(individals, and) nmod:from(receive, organisations) conj:and(individals, organisations) pnct(receive, ,) case(accord, in) nmod:in(receive, accord) case(view, with) nmod:poss(view, or) nmod:with(accord, view) mark(released, that) compond(Mandela, Nelson) nsbjpass(released, Mandela) ax(released, shold) axpass(released, be) ccomp(view, released) advmod(released, immediately) cc(released, and) ccomp(view, nconditionally) conj:and(released, nconditionally) pnct(receive, .)","root(,VBP) nsbj(VBP,PRP) amod(NNS,JJ) dobj(VBP,NNS) pnct(VBP,VBP) case(NNS,IN) nmod:from(VBP,NNS) cc(NNS,CC) nmod:from(VBP,NNS) conj:and(NNS,NNS) pnct(VBP,VBP) case(NN,IN) nmod:in(VBP,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:with(NN,NN) mark(VBN,IN) compond(NNP,NNP) nsbjpass(VBN,NNP) ax(VBN,MD) axpass(VBN,VB) ccomp(NN,VBN) advmod(VBN,RB) cc(VBN,CC) ccomp(NN,RB) conj:and(VBN,RB) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We shall continue to press for this.,WePRP shallMD continueVB toTO pressVB forIN thisDT ,"root(ROOT-0, continue-3) nsubj(continue-3, We-1) aux(continue-3, shall-2) mark(press-5, to-4) xcomp(continue-3, press-5) case(this-7, for-6) nmod:for(press-5, this-7) punct(continue-3, .-8)",0,0,1,"root(ROOT, contine) nsbj(contine, We) ax(contine, shall) mark(press, to) xcomp(contine, press) case(this, for) nmod:for(press, this) pnct(contine, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) mark(VB,TO) xcomp(VB,VB) case(DT,IN) nmod:for(VB,DT) pnct(VB,VB)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Do those representations include the petition presented to the Prime Minister two weeks ago by 45 lord mayors and lord provosts  including the Lord Mayor of Stoke on Trent  Councillor John Birkin?,DoVBP thoseDT representationsNNS includeVBP theDT petitionNN presentedVBD toTO theDT PrimeNNP MinisterNNP twoCD weeksNNS agoRB byIN 45CD lordNN mayorsNNS andCC lordNN provostsNNS includingVBG theDT LordNNP MayorNNP ofIN StokeNNP onIN TrentNNP CouncillorNNP JohnNNP BirkinNNP ,"root(ROOT-0, include-4) aux(include-4, Do-1) det(representations-3, those-2) nsubj(include-4, representations-3) det(petition-6, the-5) dobj(include-4, petition-6) acl(petition-6, presented-7) case(Minister-11, to-8) det(Minister-11, the-9) compound(Minister-11, Prime-10) nmod:to(presented-7, Minister-11) nummod(weeks-13, two-12) nmod:npmod(ago-14, weeks-13) advmod(presented-7, ago-14) case(mayors-18, by-15) nummod(mayors-18, 45-16) compound(mayors-18, lord-17) nmod:by(presented-7, mayors-18) cc(mayors-18, and-19) compound(provosts-21, lord-20) nmod:by(presented-7, provosts-21) conj:and(mayors-18, provosts-21) punct(petition-6, ,-22) case(Mayor-26, including-23) det(Mayor-26, the-24) compound(Mayor-26, Lord-25) nmod:including(petition-6, Mayor-26) case(Stoke-28, of-27) nmod:of(Mayor-26, Stoke-28) case(Trent-30, on-29) nmod:on(Mayor-26, Trent-30) punct(Mayor-26, ,-31) compound(Birkin-34, Councillor-32) compound(Birkin-34, John-33) appos(Mayor-26, Birkin-34) punct(include-4, ?-35)",0,0,0,"root(ROOT, inclde) ax(inclde, Do) det(representations, those) nsbj(inclde, representations) det(petition, the) dobj(inclde, petition) acl(petition, presented) case(Minister, to) det(Minister, the) compond(Minister, Prime) nmod:to(presented, Minister) nmmod(weeks, two) nmod:npmod(ago, weeks) advmod(presented, ago) case(mayors, by) nmmod(mayors, 45) compond(mayors, lord) nmod:by(presented, mayors) cc(mayors, and) compond(provosts, lord) nmod:by(presented, provosts) conj:and(mayors, provosts) pnct(petition, ,) case(Mayor, inclding) det(Mayor, the) compond(Mayor, Lord) nmod:inclding(petition, Mayor) case(Stoke, of) nmod:of(Mayor, Stoke) case(Trent, on) nmod:on(Mayor, Trent) pnct(Mayor, ,) compond(Birkin, Concillor) compond(Birkin, John) appos(Mayor, Birkin) pnct(inclde, ?)","root(,VBP) ax(VBP,VBP) det(NNS,DT) nsbj(VBP,NNS) det(NN,DT) dobj(VBP,NN) acl(NN,VBD) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VBD,NNP) nmmod(NNS,CD) nmod:npmod(RB,NNS) advmod(VBD,RB) case(NNS,IN) nmmod(NNS,CD) compond(NNS,NN) nmod:by(VBD,NNS) cc(NNS,CC) compond(NNS,NN) nmod:by(VBD,NNS) conj:and(NNS,NNS) pnct(NN,NN) case(NNP,VBG) det(NNP,DT) compond(NNP,NNP) nmod:inclding(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:on(NNP,NNP) pnct(NNP,NNP) compond(NNP,NNP) compond(NNP,NNP) appos(NNP,NNP) pnct(VBP,VBP)","[provosts, petition, ago, Minister, presented, mayors]","[provosts, petition, ago, Minister, presented, mayors]",3,"[provosts, petition, ago, Minister, presented, mayors]","[provosts, petition, ago, Minister, presented, mayors]",NNS_provosts NN_petition RB_ago NNP_Minister VBD_presented NNS_mayors ,"[provosts, petition, ago, Minister, presented, mayors]","[provosts, petition, ago, Minister, presented, mayors]",NNS_provosts NN_petition RB_ago NNP_Minister VBD_presented NNS_mayors ,"[provosts, petition, ago, Minister, presented, mayors]",NNS_provosts NN_petition RB_ago NNP_Minister VBD_presented NNS_mayors ,[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Foreign Secretary raise this issue at Milan and consider a joint initiative with European  EC and Commonwealth Heads of State to put some pressure on the South African Government?,WillMD theDT ForeignNNP SecretaryNNP raiseVB thisDT issueNN atIN MilanNNP andCC considerVB aDT jointJJ initiativeNN withIN EuropeanJJ ECNNP andCC CommonwealthNNP HeadsNNP ofIN StateNNP toTO putVB someDT pressureNN onIN theDT SouthJJ AfricanJJ GovernmentNN ,"root(ROOT-0, raise-5) aux(raise-5, Will-1) det(Secretary-4, the-2) compound(Secretary-4, Foreign-3) nsubj(raise-5, Secretary-4) nsubj(consider-11, Secretary-4) det(issue-7, this-6) dobj(raise-5, issue-7) case(Milan-9, at-8) nmod:at(raise-5, Milan-9) cc(raise-5, and-10) conj:and(raise-5, consider-11) det(initiative-14, a-12) amod(initiative-14, joint-13) dobj(consider-11, initiative-14) case(European-16, with-15) nmod:with(initiative-14, European-16) punct(European-16, ,-17) nmod:with(initiative-14, EC-18) conj:and(European-16, EC-18) cc(European-16, and-19) compound(Heads-21, Commonwealth-20) nmod:with(initiative-14, Heads-21) conj:and(European-16, Heads-21) case(State-23, of-22) nmod:of(European-16, State-23) mark(put-25, to-24) xcomp(consider-11, put-25) det(pressure-27, some-26) dobj(put-25, pressure-27) case(Government-32, on-28) det(Government-32, the-29) amod(African-31, South-30) amod(Government-32, African-31) nmod:on(put-25, Government-32) punct(raise-5, ?-33)",0,0,0,"root(ROOT, raise) ax(raise, Will) det(Secretary, the) compond(Secretary, Foreign) nsbj(raise, Secretary) nsbj(consider, Secretary) det(isse, this) dobj(raise, isse) case(Milan, at) nmod:at(raise, Milan) cc(raise, and) conj:and(raise, consider) det(initiative, a) amod(initiative, joint) dobj(consider, initiative) case(Eropean, with) nmod:with(initiative, Eropean) pnct(Eropean, ,) nmod:with(initiative, EC) conj:and(Eropean, EC) cc(Eropean, and) compond(Heads, Commonwealth) nmod:with(initiative, Heads) conj:and(Eropean, Heads) case(State, of) nmod:of(Eropean, State) mark(pt, to) xcomp(consider, pt) det(pressre, some) dobj(pt, pressre) case(Government, on) det(Government, the) amod(African, Soth) amod(Government, African) nmod:on(pt, Government) pnct(raise, ?)","root(,VB) ax(VB,MD) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) nsbj(VB,NNP) det(NN,DT) dobj(VB,NN) case(NNP,IN) nmod:at(VB,NNP) cc(VB,CC) conj:and(VB,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(JJ,IN) nmod:with(NN,JJ) pnct(JJ,JJ) nmod:with(NN,NNP) conj:and(JJ,NNP) cc(JJ,CC) compond(NNP,NNP) nmod:with(NN,NNP) conj:and(JJ,NNP) case(NNP,IN) nmod:of(JJ,NNP) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(JJ,JJ) amod(NN,JJ) nmod:on(VB,NN) pnct(VB,VB)","[and, issue, initiative, Milan, put, consider, South, Secretary, raise, African, Government, ROOT, pressure]","[and, issue, initiative, Milan, put, consider, South, Secretary, raise, African, Government, ROOT, pressure]",3,"[put, African, Government, consider, pressure, South]","[put, African, Government, consider, pressure, South]",CC_and NN_issue NN_initiative NNP_Milan VBN_put VBP_consider NNP_South NNP_Secretary VB_raise JJ_African NNP_Government NN_pressure ,"[and, issue, initiative, Milan, put, consider, South, Secretary, raise, African, Government, ROOT, pressure]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I can confirm that the representations received include representations from local authorities  including those from the specific individual about whom the hon. Gentleman is so concerned.,IPRP canMD confirmVB thatIN theDT representationsNNS receivedVBD includeJJ representationsNNS fromIN localJJ authoritiesNNS includingVBG thoseDT fromIN theDT specificJJ individualJJ aboutIN whomWP theDT honNN GentlemanNNP isVBZ soRB concernedJJ ,"root(ROOT-0, confirm-3) nsubj(confirm-3, I-1) aux(confirm-3, can-2) mark(received-7, that-4) det(representations-6, the-5) nsubj(received-7, representations-6) ccomp(confirm-3, received-7) xcomp(received-7, include-8) dobj(include-8, representations-9) case(authorities-12, from-10) amod(authorities-12, local-11) nmod:from(representations-9, authorities-12) punct(representations-9, ,-13) case(those-15, including-14) nmod:including(representations-9, those-15) case(individual-19, from-16) det(individual-19, the-17) amod(individual-19, specific-18) nmod:from(those-15, individual-19) case(whom-21, about-20) nmod:about(concerned-27, whom-21) det(Gentleman-24, the-22) compound(Gentleman-24, hon.-23) nsubj(concerned-27, Gentleman-24) cop(concerned-27, is-25) advmod(concerned-27, so-26) acl:relcl(individual-19, concerned-27) punct(confirm-3, .-28)",0,0,0,"root(ROOT, confirm) nsbj(confirm, I) ax(confirm, can) mark(received, that) det(representations, the) nsbj(received, representations) ccomp(confirm, received) xcomp(received, inclde) dobj(inclde, representations) case(athorities, from) amod(athorities, local) nmod:from(representations, athorities) pnct(representations, ,) case(those, inclding) nmod:inclding(representations, those) case(individal, from) det(individal, the) amod(individal, specific) nmod:from(those, individal) case(whom, abot) nmod:abot(concerned, whom) det(Gentleman, the) compond(Gentleman, hon.) nsbj(concerned, Gentleman) cop(concerned, is) advmod(concerned, so) acl:relcl(individal, concerned) pnct(confirm, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) mark(VBD,IN) det(NNS,DT) nsbj(VBD,NNS) ccomp(VB,VBD) xcomp(VBD,JJ) dobj(JJ,NNS) case(NNS,IN) amod(NNS,JJ) nmod:from(NNS,NNS) pnct(NNS,NNS) case(DT,VBG) nmod:inclding(NNS,DT) case(JJ,IN) det(JJ,DT) amod(JJ,JJ) nmod:from(DT,JJ) case(WP,IN) nmod:abot(JJ,WP) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) advmod(JJ,RB) acl:relcl(JJ,JJ) pnct(VB,VB)","[concerned, whom, Gentleman, individual, so]","[concerned, whom, Gentleman, individual, so]",4,"[concerned, whom, Gentleman, individual, so]",[ ],JJ_concerned WP_whom NNP_Gentleman JJ_individual RB_so ,"[concerned, whom, Gentleman, individual, so]","[concerned, whom, Gentleman, individual, so]",JJ_concerned WP_whom NNP_Gentleman JJ_individual RB_so ,"[concerned, whom, Gentleman, individual, so]",JJ_concerned WP_whom NNP_Gentleman JJ_individual RB_so ,"[concerned, whom, Gentleman, individual, so]",JJ_concerned WP_whom NNP_Gentleman JJ_individual RB_so ,-3,0,2,2,1,2,2,2,2,2
Have not the South African Government made it clear that they are prepared to release Nelson Mandela on condition that he renounces terrorism and violence?,HaveNNP notRB theDT SouthJJ AfricanJJ GovernmentNNP madeVBD itPRP clearJJ thatIN theyPRP areVBP preparedJJ toTO releaseVB NelsonNNP MandelaNNP onIN conditionNN thatIN hePRP renouncesVBZ terrorismNN andCC violenceNN ,"root(ROOT-0, made-7) aux(made-7, Have-1) neg(Government-6, not-2) det(Government-6, the-3) amod(Government-6, South-4) amod(Government-6, African-5) nsubj(made-7, Government-6) nsubj(clear-9, it-8) xcomp(made-7, clear-9) mark(prepared-13, that-10) nsubjpass(prepared-13, they-11) auxpass(prepared-13, are-12) ccomp(clear-9, prepared-13) mark(release-15, to-14) xcomp(prepared-13, release-15) compound(Mandela-17, Nelson-16) dobj(release-15, Mandela-17) case(condition-19, on-18) nmod:on(release-15, condition-19) mark(renounces-22, that-20) nsubj(renounces-22, he-21) ccomp(condition-19, renounces-22) dobj(renounces-22, terrorism-23) cc(terrorism-23, and-24) dobj(renounces-22, violence-25) conj:and(terrorism-23, violence-25) punct(made-7, ?-26)",0,1,0,"root(ROOT, made) ax(made, Have) neg(Government, not) det(Government, the) amod(Government, Soth) amod(Government, African) nsbj(made, Government) nsbj(clear, it) xcomp(made, clear) mark(prepared, that) nsbjpass(prepared, they) axpass(prepared, are) ccomp(clear, prepared) mark(release, to) xcomp(prepared, release) compond(Mandela, Nelson) dobj(release, Mandela) case(condition, on) nmod:on(release, condition) mark(renonces, that) nsbj(renonces, he) ccomp(condition, renonces) dobj(renonces, terrorism) cc(terrorism, and) dobj(renonces, violence) conj:and(terrorism, violence) pnct(made, ?)","root(,VBD) ax(VBD,NNP) neg(NNP,RB) det(NNP,DT) amod(NNP,JJ) amod(NNP,JJ) nsbj(VBD,NNP) nsbj(JJ,PRP) xcomp(VBD,JJ) mark(JJ,IN) nsbjpass(JJ,PRP) axpass(JJ,VBP) ccomp(JJ,JJ) mark(VB,TO) xcomp(JJ,VB) compond(NNP,NNP) dobj(VB,NNP) case(NN,IN) nmod:on(VB,NN) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(NN,VBZ) dobj(VBZ,NN) cc(NN,CC) dobj(VBZ,NN) conj:and(NN,NN) pnct(VBD,VBD)","[he, not, Government, South, African, condition, made, terrorism, ROOT, violence, renounces, clear]","[he, not, Government, South, African, condition, made, terrorism, ROOT, violence, renounces, clear]",5,"[he, renounces, violence, terrorism, condition]","[he, renounces, violence, terrorism, condition]",PRP_he RB_not NNP_Government NNP_South JJ_African NN_condition VBN_made NN_terrorism NN_violence VBZ_renounces JJ_clear ,"[he, not, Government, South, African, condition, made, terrorism, ROOT, violence, renounces, clear]","[he, not, Government, South, African, condition, made, terrorism, ROOT, violence, renounces, clear]",PRP_he RB_not NNP_Government NNP_South JJ_African NN_condition VBN_made NN_terrorism NN_violence VBZ_renounces JJ_clear ,"[he, not, Government, South, African, condition, made, terrorism, ROOT, violence, renounces, clear]",PRP_he RB_not NNP_Government NNP_South JJ_African NN_condition VBN_made NN_terrorism NN_violence VBZ_renounces JJ_clear ,"[he, not, Government, South, African, condition, made, terrorism, ROOT, violence, renounces, clear]",PRP_he RB_not NNP_Government NNP_South JJ_African NN_condition VBN_made NN_terrorism NN_violence VBZ_renounces JJ_clear ,-3,0,2,2,1,2,2,2,2,2
Is there to be a distinction so that some are to be allowed legitimately to pursue terrorism and violence as long as it is against South Africa?,IsVBZ thereEX toTO beVB aDT distinctionNN soIN thatIN someDT areVBP toTO beVB allowedVBN legitimatelyRB toTO pursueVB terrorismNN andCC violenceNN asRB longRB asIN itPRP isVBZ againstIN SouthNNP AfricaNNP ,"root(ROOT-0, distinction-6) cop(distinction-6, Is-1) expl(distinction-6, there-2) mark(distinction-6, to-3) cop(distinction-6, be-4) det(distinction-6, a-5) mark(are-10, so-7) mark(are-10, that-8) nsubj(are-10, some-9) advcl(distinction-6, are-10) mark(allowed-13, to-11) auxpass(allowed-13, be-12) xcomp(are-10, allowed-13) advmod(allowed-13, legitimately-14) mark(pursue-16, to-15) xcomp(legitimately-14, pursue-16) dobj(pursue-16, terrorism-17) cc(terrorism-17, and-18) dobj(pursue-16, violence-19) conj:and(terrorism-17, violence-19) advmod(long-21, as-20) advmod(pursue-16, long-21) mark(Africa-27, as-22) nsubj(Africa-27, it-23) cop(Africa-27, is-24) case(Africa-27, against-25) compound(Africa-27, South-26) advcl:against(long-21, Africa-27) punct(distinction-6, ?-28)",0,0,0,"root(ROOT, distinction) cop(distinction, Is) expl(distinction, there) mark(distinction, to) cop(distinction, be) det(distinction, a) mark(are, so) mark(are, that) nsbj(are, some) advcl(distinction, are) mark(allowed, to) axpass(allowed, be) xcomp(are, allowed) advmod(allowed, legitimately) mark(prse, to) xcomp(legitimately, prse) dobj(prse, terrorism) cc(terrorism, and) dobj(prse, violence) conj:and(terrorism, violence) advmod(long, as) advmod(prse, long) mark(Africa, as) nsbj(Africa, it) cop(Africa, is) case(Africa, against) compond(Africa, Soth) advcl:against(long, Africa) pnct(distinction, ?)","root(,NN) cop(NN,VBZ) expl(NN,EX) mark(NN,TO) cop(NN,VB) det(NN,DT) mark(VBP,IN) mark(VBP,IN) nsbj(VBP,DT) advcl(NN,VBP) mark(VBN,TO) axpass(VBN,VB) xcomp(VBP,VBN) advmod(VBN,RB) mark(VB,TO) xcomp(RB,VB) dobj(VB,NN) cc(NN,CC) dobj(VB,NN) conj:and(NN,NN) advmod(RB,IN) advmod(VB,RB) mark(NNP,IN) nsbj(NNP,PRP) cop(NNP,VBZ) case(NNP,IN) compond(NNP,NNP) advcl:against(RB,NNP) pnct(NN,NN)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I remind my hon. Friend that South Africa is one of the 13 of the founder members of the League of Nations whose Governments have not been changed by force since the first world war.,IPRP remindVBP myPRP$ honNN FriendNNP thatIN SouthNNP AfricaNNP isVBZ oneCD ofIN theDT 13CD ofIN theDT founderNN membersNNS ofIN theDT LeagueNNP ofIN NationsNNP whoseWP$ GovernmentsNNS haveVBP notRB beenVBN changedVBN byIN forceNN sinceIN theDT firstJJ worldNN warNN ,"root(ROOT-0, remind-2) nsubj(remind-2, I-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) dobj(remind-2, Friend-5) dobj(one-10, that-6) compound(Africa-8, South-7) nsubj(one-10, Africa-8) cop(one-10, is-9) acl:relcl(Friend-5, one-10) case(13-13, of-11) det(13-13, the-12) nmod:of(one-10, 13-13) case(members-17, of-14) det(members-17, the-15) compound(members-17, founder-16) nmod:of(13-13, members-17) case(League-20, of-18) det(League-20, the-19) nmod:of(members-17, League-20) case(Nations-22, of-21) nmod:of(League-20, Nations-22) nmod:poss(Governments-24, whose-23) nsubjpass(changed-28, Governments-24) aux(changed-28, have-25) neg(changed-28, not-26) auxpass(changed-28, been-27) acl:relcl(Nations-22, changed-28) case(force-30, by-29) nmod:agent(changed-28, force-30) case(war-35, since-31) det(war-35, the-32) amod(war-35, first-33) compound(war-35, world-34) nmod:since(changed-28, war-35) punct(remind-2, .-36)",0,0,1,"root(ROOT, remind) nsbj(remind, I) nmod:poss(Friend, my) compond(Friend, hon.) dobj(remind, Friend) dobj(one, that) compond(Africa, Soth) nsbj(one, Africa) cop(one, is) acl:relcl(Friend, one) case(13, of) det(13, the) nmod:of(one, 13) case(members, of) det(members, the) compond(members, fonder) nmod:of(13, members) case(Leage, of) det(Leage, the) nmod:of(members, Leage) case(Nations, of) nmod:of(Leage, Nations) nmod:poss(Governments, whose) nsbjpass(changed, Governments) ax(changed, have) neg(changed, not) axpass(changed, been) acl:relcl(Nations, changed) case(force, by) nmod:agent(changed, force) case(war, since) det(war, the) amod(war, first) compond(war, world) nmod:since(changed, war) pnct(remind, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NNP,PRP$) compond(NNP,NNP) dobj(VBP,NNP) dobj(CD,IN) compond(NNP,NNP) nsbj(CD,NNP) cop(CD,VBZ) acl:relcl(NNP,CD) case(CD,IN) det(CD,DT) nmod:of(CD,CD) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:of(CD,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) case(NNP,IN) nmod:of(NNP,NNP) nmod:poss(NNS,WP$) nsbjpass(VBN,NNS) ax(VBN,VBP) neg(VBN,RB) axpass(VBN,VBN) acl:relcl(NNP,VBN) case(NN,IN) nmod:agent(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:since(VBN,NN) pnct(VBP,VBP)","[remind, one, Africa, Friend, I, my, 13, ROOT, that]","[remind, one, Africa, Friend, I, my, 13, ROOT, that]",5,"[remind, one, Africa, Friend, I, my, 13, ROOT, that]","[remind, one, Africa, Friend, I, my, 13, ROOT, that]",VBP_remind CD_one NNP_Africa NNP_Friend PRP_I PRP$_my CD_13 IN_that ,"[remind, one, Africa, Friend, I, my, 13, ROOT, that]","[remind, one, Africa, Friend, I, my, 13, ROOT, that]",VBP_remind CD_one NNP_Africa NNP_Friend PRP_I PRP$_my CD_13 IN_that ,"[remind, one, Africa, Friend, I, my, 13, ROOT, that]",VBP_remind CD_one NNP_Africa NNP_Friend PRP_I PRP$_my CD_13 IN_that ,"[remind, one, Africa, Friend, I, my, 13, ROOT, that]",VBP_remind CD_one NNP_Africa NNP_Friend PRP_I PRP$_my CD_13 IN_that ,-3,0,2,0,0,0,0,0,0,0
Bearing in mind that Nelson Mandela has been in prison but was never convicted of any personal act of violence  and that it is somewhat unusual  to say the least  to impose conditions on the release of persons in prison  either in South Africa or any other country  neither I nor Her Majesty's Government believe that it is appropriate to require statements from Mr. Mandela before he is released.,BearingVBG inIN mindNN thatIN NelsonNNP MandelaNNP hasVBZ beenVBN inIN prisonNN butCC wasVBD neverRB convictedVBN ofIN anyDT personalJJ actNN ofIN violenceNN andCC thatIN itPRP isVBZ somewhatRB unusualJJ toTO sayVB theDT leastJJS toTO imposeVB conditionsNNS onIN theDT releaseNN ofIN personsNNS inIN prisonNN eitherCC inIN SouthNNP AfricaNNP orCC anyDT otherJJ countryNN neitherCC IPRP norCC HerNNP MajestyNNP 'sPOS GovernmentNNP believeVBP thatIN itPRP isVBZ appropriateJJ toTO requireVB statementsNNS fromIN MrNNP MandelaNNP beforeIN hePRP isVBZ releasedVBN ,"root(ROOT-0, Bearing-1) case(mind-3, in-2) nmod:in(Bearing-1, mind-3) dobj(prison-10, that-4) compound(Mandela-6, Nelson-5) nsubj(prison-10, Mandela-6) nsubjpass(convicted-14, Mandela-6) aux(prison-10, has-7) cop(prison-10, been-8) case(prison-10, in-9) acl:relcl(mind-3, prison-10) cc(prison-10, but-11) auxpass(convicted-14, was-12) neg(convicted-14, never-13) acl:relcl(mind-3, convicted-14) conj:but(prison-10, convicted-14) case(act-18, of-15) det(act-18, any-16) amod(act-18, personal-17) nmod:of(convicted-14, act-18) case(violence-20, of-19) nmod:of(act-18, violence-20) punct(Bearing-1, ,-21) cc(Bearing-1, and-22) mark(unusual-27, that-23) nsubj(unusual-27, it-24) cop(unusual-27, is-25) advmod(unusual-27, somewhat-26) conj:and(Bearing-1, unusual-27) punct(unusual-27, ,-28) mark(say-30, to-29) xcomp(unusual-27, say-30) det(least-32, the-31) dobj(say-30, least-32) punct(least-32, ,-33) mark(impose-35, to-34) acl(least-32, impose-35) dobj(impose-35, conditions-36) case(release-39, on-37) det(release-39, the-38) nmod:on(impose-35, release-39) case(persons-41, of-40) nmod:of(release-39, persons-41) case(prison-43, in-42) nmod:in(persons-41, prison-43) punct(least-32, ,-44) cc:preconj(Africa-48, either-45) case(Africa-48, in-46) compound(Africa-48, South-47) nmod:in(least-32, Africa-48) cc(Africa-48, or-49) det(country-52, any-50) amod(country-52, other-51) nmod:in(least-32, country-52) conj:or(Africa-48, country-52) punct(Bearing-1, ,-53) cc:preconj(I-55, neither-54) nsubj(believe-61, I-55) cc(I-55, nor-56) nmod:poss(Government-60, Her-57) nmod:poss(Government-60, Majesty-58) case(Majesty-58, 's-59) conj:nor(I-55, Government-60) nsubj(believe-61, Government-60) acl:relcl(Bearing-1, believe-61) mark(appropriate-65, that-62) nsubj(appropriate-65, it-63) cop(appropriate-65, is-64) ccomp(believe-61, appropriate-65) mark(require-67, to-66) xcomp(appropriate-65, require-67) dobj(require-67, statements-68) case(Mandela-71, from-69) compound(Mandela-71, Mr.-70) nmod:from(statements-68, Mandela-71) mark(released-75, before-72) nsubjpass(released-75, he-73) auxpass(released-75, is-74) advcl(require-67, released-75) punct(Bearing-1, .-76)",0,0,0,"root(ROOT, Bearing) case(mind, in) nmod:in(Bearing, mind) dobj(prison, that) compond(Mandela, Nelson) nsbj(prison, Mandela) nsbjpass(convicted, Mandela) ax(prison, has) cop(prison, been) case(prison, in) acl:relcl(mind, prison) cc(prison, bt) axpass(convicted, was) neg(convicted, never) acl:relcl(mind, convicted) conj:bt(prison, convicted) case(act, of) det(act, any) amod(act, personal) nmod:of(convicted, act) case(violence, of) nmod:of(act, violence) pnct(Bearing, ,) cc(Bearing, and) mark(nsal, that) nsbj(nsal, it) cop(nsal, is) advmod(nsal, somewhat) conj:and(Bearing, nsal) pnct(nsal, ,) mark(say, to) xcomp(nsal, say) det(least, the) dobj(say, least) pnct(least, ,) mark(impose, to) acl(least, impose) dobj(impose, conditions) case(release, on) det(release, the) nmod:on(impose, release) case(persons, of) nmod:of(release, persons) case(prison, in) nmod:in(persons, prison) pnct(least, ,) cc:preconj(Africa, either) case(Africa, in) compond(Africa, Soth) nmod:in(least, Africa) cc(Africa, or) det(contry, any) amod(contry, other) nmod:in(least, contry) conj:or(Africa, contry) pnct(Bearing, ,) cc:preconj(I, neither) nsbj(believe, I) cc(I, nor) nmod:poss(Government, Her) nmod:poss(Government, Majesty) ""case(Majesty, s)"", conj:nor(I, Government) nsbj(believe, Government) acl:relcl(Bearing, believe) mark(appropriate, that) nsbj(appropriate, it) cop(appropriate, is) ccomp(believe, appropriate) mark(reqire, to) xcomp(appropriate, reqire) dobj(reqire, statements) case(Mandela, from) compond(Mandela, Mr.) nmod:from(statements, Mandela) mark(released, before) nsbjpass(released, he) axpass(released, is) advcl(reqire, released) pnct(Bearing, .)","root(,VBG) case(NN,IN) nmod:in(VBG,NN) dobj(NN,IN) compond(NNP,NNP) nsbj(NN,NNP) nsbjpass(VBN,NNP) ax(NN,VBZ) cop(NN,VBN) case(NN,IN) acl:relcl(NN,NN) cc(NN,CC) axpass(VBN,VBD) neg(VBN,RB) acl:relcl(NN,VBN) conj:bt(NN,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(VBN,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBG,VBG) cc(VBG,CC) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) conj:and(VBG,JJ) pnct(JJ,JJ) mark(VB,TO) xcomp(JJ,VB) det(JJS,DT) dobj(VB,JJS) pnct(JJS,JJS) mark(VB,TO) acl(JJS,VB) dobj(VB,NNS) case(NN,IN) det(NN,DT) nmod:on(VB,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) nmod:in(NNS,NN) pnct(JJS,JJS) cc:preconj(NNP,CC) case(NNP,IN) compond(NNP,NNP) nmod:in(JJS,NNP) cc(NNP,CC) det(NN,DT) amod(NN,JJ) nmod:in(JJS,NN) conj:or(NNP,NN) pnct(VBG,VBG) cc:preconj(PRP,CC) nsbj(VBP,PRP) cc(PRP,CC) nmod:poss(NNP,NNP) nmod:poss(NNP,NNP) case(NNP,POS) conj:nor(PRP,NNP) nsbj(VBP,NNP) acl:relcl(VBG,VBP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) ccomp(VBP,JJ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,NNS) case(NNP,IN) compond(NNP,NNP) nmod:from(NNS,NNP) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) advcl(VB,VBN) pnct(VBG,VBG)","[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]","[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]",6,"[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]","[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]",CC_nor NNP_Government PRP$_Her VBP_believe NNP_Majesty VBN_released PRP_I VBG_Bearing JJ_appropriate PRP_he VBP_require ,"[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]","[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]",CC_nor NNP_Government PRP$_Her VBP_believe NNP_Majesty VBN_released PRP_I VBG_Bearing JJ_appropriate PRP_he VBP_require ,"[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]",CC_nor NNP_Government PRP$_Her VBP_believe NNP_Majesty VBN_released PRP_I VBG_Bearing JJ_appropriate PRP_he VBP_require ,"[nor, Government, Her, believe, Majesty, released, I, Bearing, appropriate, he, require]",CC_nor NNP_Government PRP$_Her VBP_believe NNP_Majesty VBN_released PRP_I VBG_Bearing JJ_appropriate PRP_he VBP_require ,-3,0,2,1,1,1,1,1,1,2
Did my hon. Friend have the opportunity to read the leader in The Times on Monday?,DidNNP myPRP$ honNN FriendNNP haveVBP theDT opportunityNN toTO readVB theDT leaderNN inIN TheDT TimesNNP onIN MondayNNP ,"root(ROOT-0, have-5) aux(have-5, Did-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(have-5, Friend-4) det(opportunity-7, the-6) dobj(have-5, opportunity-7) mark(read-9, to-8) acl(opportunity-7, read-9) det(leader-11, the-10) dobj(read-9, leader-11) case(Times-14, in-12) det(Times-14, The-13) nmod:in(read-9, Times-14) case(Monday-16, on-15) nmod:on(read-9, Monday-16) punct(have-5, ?-17)",0,1,0,"root(ROOT, have) ax(have, Did) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(have, Friend) det(opportnity, the) dobj(have, opportnity) mark(read, to) acl(opportnity, read) det(leader, the) dobj(read, leader) case(Times, in) det(Times, The) nmod:in(read, Times) case(Monday, on) nmod:on(read, Monday) pnct(have, ?)","root(,VBP) ax(VBP,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBP,NNP) det(NN,DT) dobj(VBP,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) case(NNP,IN) det(NNP,DT) nmod:in(VB,NNP) case(NNP,IN) nmod:on(VB,NNP) pnct(VBP,VBP)","[ROOT, have, my, opportunity, Friend]","[ROOT, have, my, opportunity, Friend]",9,[ ],[ ],VBP_have PRP$_my NN_opportunity NNP_Friend ,"[ROOT, have, my, opportunity, Friend]","[ROOT, have, my, opportunity, Friend]",VBP_have PRP$_my NN_opportunity NNP_Friend ,"[ROOT, have, my, opportunity, Friend]",VBP_have PRP$_my NN_opportunity NNP_Friend ,"[ROOT, have, my, opportunity, Friend]",VBP_have PRP$_my NN_opportunity NNP_Friend ,-3,0,2,0,0,0,0,0,0,0
Does he agree with its assertions that terrorism can never be given a political legitimacy no matter where it occurs  and that terrorism against civilian targets must never be justified?,DoesVBZ hePRP agreeVB withIN itsPRP$ assertionsNNS thatIN terrorismNN canMD neverRB beVB givenVBN aDT politicalJJ legitimacyNN noDT matterNN whereWRB itPRP occursVBZ andCC thatIN terrorismNN againstIN civilianJJ targetsNNS mustMD neverRB beVB justifiedVBN ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) case(assertions-6, with-4) nmod:poss(assertions-6, its-5) nmod:with(agree-3, assertions-6) mark(given-12, that-7) nsubjpass(given-12, terrorism-8) aux(given-12, can-9) neg(given-12, never-10) auxpass(given-12, be-11) ccomp(assertions-6, given-12) det(legitimacy-15, a-13) amod(legitimacy-15, political-14) nsubj(matter-17, legitimacy-15) neg(matter-17, no-16) xcomp(given-12, matter-17) advmod(occurs-20, where-18) nsubj(occurs-20, it-19) acl:relcl(matter-17, occurs-20) punct(matter-17, ,-21) cc(matter-17, and-22) mark(justified-31, that-23) nsubjpass(justified-31, terrorism-24) case(targets-27, against-25) amod(targets-27, civilian-26) nmod:against(terrorism-24, targets-27) aux(justified-31, must-28) neg(justified-31, never-29) auxpass(justified-31, be-30) xcomp(given-12, justified-31) conj:and(matter-17, justified-31) punct(agree-3, ?-32)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) case(assertions, with) nmod:poss(assertions, its) nmod:with(agree, assertions) mark(given, that) nsbjpass(given, terrorism) ax(given, can) neg(given, never) axpass(given, be) ccomp(assertions, given) det(legitimacy, a) amod(legitimacy, political) nsbj(matter, legitimacy) neg(matter, no) xcomp(given, matter) advmod(occrs, where) nsbj(occrs, it) acl:relcl(matter, occrs) pnct(matter, ,) cc(matter, and) mark(jstified, that) nsbjpass(jstified, terrorism) case(targets, against) amod(targets, civilian) nmod:against(terrorism, targets) ax(jstified, mst) neg(jstified, never) axpass(jstified, be) xcomp(given, jstified) conj:and(matter, jstified) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:with(VB,NNS) mark(VBN,IN) nsbjpass(VBN,NN) ax(VBN,MD) neg(VBN,RB) axpass(VBN,VB) ccomp(NNS,VBN) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) neg(NN,DT) xcomp(VBN,NN) advmod(VBZ,WRB) nsbj(VBZ,PRP) acl:relcl(NN,VBZ) pnct(NN,NN) cc(NN,CC) mark(VBN,IN) nsbjpass(VBN,NN) case(NNS,IN) amod(NNS,JJ) nmod:against(NN,NNS) ax(VBN,MD) neg(VBN,RB) axpass(VBN,VB) xcomp(VBN,VBN) conj:and(NN,VBN) pnct(VB,VB)","[he, ROOT, assertions, agree]","[he, ROOT, assertions, agree]",9,[ ],[ ],PRP_he NNS_assertions VB_agree ,"[he, ROOT, assertions, agree]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is it not the refusal of Mr. Nelson Mandela to repudiate such acts of violence that means his continued imprisonment?,IsVBZ itPRP notRB theDT refusalNN ofIN MrNNP NelsonNNP MandelaNNP toTO repudiateVB suchJJ actsNNS ofIN violenceNN thatIN meansVBZ hisPRP$ continuedJJ imprisonmentNN ,"root(ROOT-0, refusal-5) cop(refusal-5, Is-1) nsubj(refusal-5, it-2) neg(refusal-5, not-3) det(refusal-5, the-4) case(Mandela-9, of-6) compound(Mandela-9, Mr.-7) compound(Mandela-9, Nelson-8) nmod:of(refusal-5, Mandela-9) mark(repudiate-11, to-10) acl(refusal-5, repudiate-11) amod(acts-13, such-12) dobj(repudiate-11, acts-13) case(violence-15, of-14) nmod:of(acts-13, violence-15) nsubj(means-17, that-16) acl:relcl(acts-13, means-17) nmod:poss(imprisonment-20, his-18) amod(imprisonment-20, continued-19) dobj(means-17, imprisonment-20) punct(refusal-5, ?-21)",0,0,1,"root(ROOT, refsal) cop(refsal, Is) nsbj(refsal, it) neg(refsal, not) det(refsal, the) case(Mandela, of) compond(Mandela, Mr.) compond(Mandela, Nelson) nmod:of(refsal, Mandela) mark(repdiate, to) acl(refsal, repdiate) amod(acts, sch) dobj(repdiate, acts) case(violence, of) nmod:of(acts, violence) nsbj(means, that) acl:relcl(acts, means) nmod:poss(imprisonment, his) amod(imprisonment, contined) dobj(means, imprisonment) pnct(refsal, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NN,NNP) mark(VB,TO) acl(NN,VB) amod(NNS,JJ) dobj(VB,NNS) case(NN,IN) nmod:of(NNS,NN) nsbj(VBZ,IN) acl:relcl(NNS,VBZ) nmod:poss(NN,PRP$) amod(NN,JJ) dobj(VBZ,NN) pnct(NN,NN)",[ ],"[continued, imprisonment, his, means]",9,"[continued, imprisonment, his, means]","[continued, imprisonment, his, means]",VBN_continued NN_imprisonment PRP$_his NNS_means ,"[continued, imprisonment, his, means]","[continued, imprisonment, his, means]",VBN_continued NN_imprisonment PRP$_his NNS_means ,"[continued, imprisonment, his, means]",VBN_continued NN_imprisonment PRP$_his NNS_means ,"[continued, imprisonment, his, means]",VBN_continued NN_imprisonment PRP$_his NNS_means ,-3,0,2,2,1,2,2,2,2,2
While I entirely agree that it would be inappropriate for the Government to have formal contact with an organisation that is committed to acts of violence of the kind described  given the very lengthy period that Mr. Mandela has already spent in prison I do not believe that further conditions need to be imposed before he is released.,WhileIN IPRP entirelyRB agreeVBP thatIN itPRP wouldMD beVB inappropriateJJ forIN theDT GovernmentNNP toTO haveVB formalJJ contactNN withIN anDT organisationNN thatWDT isVBZ committedVBN toTO actsNNS ofIN violenceNN ofIN theDT kindNN describedVBD givenVBN theDT veryRB lengthyJJ periodNN thatIN 904CD MrNNP MandelaNNP hasVBZ alreadyRB spentVBN inIN prisonNN IPRP doVBP notRB believeVB thatIN furtherJJ conditionsNNS needVBP toTO beVB imposedVBN beforeIN hePRP isVBZ releasedVBN ,"root(ROOT-0, agree-4) mark(agree-4, While-1) nsubj(agree-4, I-2) advmod(agree-4, entirely-3) mark(inappropriate-9, that-5) nsubj(inappropriate-9, it-6) aux(inappropriate-9, would-7) cop(inappropriate-9, be-8) ccomp(agree-4, inappropriate-9) case(Government-12, for-10) det(Government-12, the-11) nmod:for(inappropriate-9, Government-12) mark(have-14, to-13) xcomp(inappropriate-9, have-14) amod(contact-16, formal-15) dobj(have-14, contact-16) case(organisation-19, with-17) det(organisation-19, an-18) nmod:with(contact-16, organisation-19) nsubjpass(committed-22, that-20) auxpass(committed-22, is-21) acl:relcl(organisation-19, committed-22) case(acts-24, to-23) nmod:to(committed-22, acts-24) case(violence-26, of-25) nmod:of(acts-24, violence-26) case(kind-29, of-27) det(kind-29, the-28) nmod:of(violence-26, kind-29) acl(kind-29, described-30) punct(agree-4, ,-31) case(period-36, given-32) det(period-36, the-33) advmod(lengthy-35, very-34) amod(period-36, lengthy-35) root(,-31, period-36) dobj(spent-43, that-37) nummod(Mandela-40, 904-38) compound(Mandela-40, Mr.-39) nsubj(spent-43, Mandela-40) aux(spent-43, has-41) advmod(spent-43, already-42) acl:relcl(period-36, spent-43) case(prison-45, in-44) nmod:in(spent-43, prison-45) nsubj(believe-49, I-46) aux(believe-49, do-47) neg(believe-49, not-48) ccomp(spent-43, believe-49) mark(need-53, that-50) amod(conditions-52, further-51) nsubj(need-53, conditions-52) ccomp(believe-49, need-53) mark(imposed-56, to-54) auxpass(imposed-56, be-55) xcomp(need-53, imposed-56) mark(released-60, before-57) nsubjpass(released-60, he-58) auxpass(released-60, is-59) advcl(imposed-56, released-60) punct(period-36, .-61)",0,0,0,"root(ROOT, agree) mark(agree, While) nsbj(agree, I) advmod(agree, entirely) mark(inappropriate, that) nsbj(inappropriate, it) ax(inappropriate, wold) cop(inappropriate, be) ccomp(agree, inappropriate) case(Government, for) det(Government, the) nmod:for(inappropriate, Government) mark(have, to) xcomp(inappropriate, have) amod(contact, formal) dobj(have, contact) case(organisation, with) det(organisation, an) nmod:with(contact, organisation) nsbjpass(committed, that) axpass(committed, is) acl:relcl(organisation, committed) case(acts, to) nmod:to(committed, acts) case(violence, of) nmod:of(acts, violence) case(kind, of) det(kind, the) nmod:of(violence, kind) acl(kind, described) pnct(agree, ,) case(period, given) det(period, the) advmod(lengthy, very) amod(period, lengthy) root(,, period) dobj(spent, that) nmmod(Mandela, 904) compond(Mandela, Mr.) nsbj(spent, Mandela) ax(spent, has) advmod(spent, already) acl:relcl(period, spent) case(prison, in) nmod:in(spent, prison) nsbj(believe, I) ax(believe, do) neg(believe, not) ccomp(spent, believe) mark(need, that) amod(conditions, frther) nsbj(need, conditions) ccomp(believe, need) mark(imposed, to) axpass(imposed, be) xcomp(need, imposed) mark(released, before) nsbjpass(released, he) axpass(released, is) advcl(imposed, released) pnct(period, .)","root(,VBP) mark(VBP,IN) nsbj(VBP,PRP) advmod(VBP,RB) mark(JJ,IN) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) ccomp(VBP,JJ) case(NNP,IN) det(NNP,DT) nmod:for(JJ,NNP) mark(VB,TO) xcomp(JJ,VB) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:with(NN,NN) nsbjpass(VBN,IN) axpass(VBN,VBZ) acl:relcl(NN,VBN) case(NNS,TO) nmod:to(VBN,NNS) case(NN,IN) nmod:of(NNS,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) acl(NN,VBD) pnct(VBP,VBP) case(NN,VBN) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) root(JJJJNN) dobj(VBN,IN) nmmod(NNP,CD) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) advmod(VBN,RB) acl:relcl(NN,VBN) case(NN,IN) nmod:in(VBN,NN) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) ccomp(VBN,VB) mark(VBP,IN) amod(NNS,JJ) nsbj(VBP,NNS) ccomp(VB,VBP) mark(VBN,TO) axpass(VBN,VB) xcomp(VBP,VBN) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) advcl(VBN,VBN) pnct(NN,NN)","[released, he, it, inappropriate, Government, have, imposed, agree]","[released, he, it, inappropriate, Government, have, imposed, agree]",10,"[released, he, it, inappropriate, Government, have, imposed, agree]","[released, he, it, inappropriate, Government, have, imposed, agree]",VBN_released PRP_he PRP_it JJ_inappropriate NNP_Government VBP_have VBN_imposed VB_agree ,"[released, he, it, inappropriate, Government, have, imposed, agree]","[released, he, it, inappropriate, Government, have, imposed, agree]",VBN_released PRP_he PRP_it JJ_inappropriate NNP_Government VBP_have VBN_imposed VB_agree ,"[released, he, it, inappropriate, Government, have, imposed, agree]",VBN_released PRP_he PRP_it JJ_inappropriate NNP_Government VBP_have VBN_imposed VB_agree ,"[released, he, it, inappropriate, Government, have, imposed, agree]",VBN_released PRP_he PRP_it JJ_inappropriate NNP_Government VBP_have VBN_imposed VB_agree ,-3,0,2,2,1,2,2,2,2,2
All those who are seeking a peaceful solution to the problems of South Africa ought to believe that Mr. Mandela's release might help in that direction  and might also help to persuade the ANC as an organisation to renounce the road of violence as a means of achieving political change.,AllPDT thoseDT whoWP areVBP seekingVBG aDT peacefulJJ solutionNN toTO theDT problemsNNS ofIN SouthNNP AfricaNNP oughtMD toTO believeVB thatIN MrNNP MandelaNNP 'sPOS releaseNN mightMD helpVB inIN thatDT directionNN andCC mightMD alsoRB helpVB toTO persuadeVB theDT ANCNNP asIN anDT organisationNN toTO renounceVB theDT roadNN ofIN violenceNN asIN aDT meansNN ofIN achievingVBG politicalJJ changeNN ,"root(ROOT-0, ought-15) det:predet(those-2, All-1) nsubj(ought-15, those-2) nsubj(help-32, those-2) nsubj(seeking-5, who-3) aux(seeking-5, are-4) acl:relcl(those-2, seeking-5) det(solution-8, a-6) amod(solution-8, peaceful-7) dobj(seeking-5, solution-8) case(problems-11, to-9) det(problems-11, the-10) nmod:to(solution-8, problems-11) case(Africa-14, of-12) compound(Africa-14, South-13) nmod:of(problems-11, Africa-14) mark(believe-17, to-16) xcomp(ought-15, believe-17) mark(help-24, that-18) compound(Mandela-20, Mr.-19) nmod:poss(release-22, Mandela-20) case(Mandela-20, 's-21) nsubj(help-24, release-22) aux(help-24, might-23) ccomp(believe-17, help-24) case(direction-27, in-25) det(direction-27, that-26) nmod:in(help-24, direction-27) punct(ought-15, ,-28) cc(ought-15, and-29) aux(help-32, might-30) advmod(help-32, also-31) conj:and(ought-15, help-32) mark(persuade-34, to-33) xcomp(help-32, persuade-34) det(ANC-36, the-35) dobj(persuade-34, ANC-36) case(organisation-39, as-37) det(organisation-39, an-38) nmod:as(persuade-34, organisation-39) mark(renounce-41, to-40) acl(organisation-39, renounce-41) det(road-43, the-42) dobj(renounce-41, road-43) case(violence-45, of-44) nmod:of(road-43, violence-45) case(means-48, as-46) det(means-48, a-47) nmod:as(renounce-41, means-48) mark(achieving-50, of-49) acl(means-48, achieving-50) amod(change-52, political-51) dobj(achieving-50, change-52) punct(ought-15, .-53)",0,0,0,"root(ROOT, oght) det:predet(those, All) nsbj(oght, those) nsbj(help, those) nsbj(seeking, who) ax(seeking, are) acl:relcl(those, seeking) det(soltion, a) amod(soltion, peacefl) dobj(seeking, soltion) case(problems, to) det(problems, the) nmod:to(soltion, problems) case(Africa, of) compond(Africa, Soth) nmod:of(problems, Africa) mark(believe, to) xcomp(oght, believe) mark(help, that) compond(Mandela, Mr.) nmod:poss(release, Mandela) ""case(Mandela, s)"", nsbj(help, release) ax(help, might) ccomp(believe, help) case(direction, in) det(direction, that) nmod:in(help, direction) pnct(oght, ,) cc(oght, and) ax(help, might) advmod(help, also) conj:and(oght, help) mark(persade, to) xcomp(help, persade) det(ANC, the) dobj(persade, ANC) case(organisation, as) det(organisation, an) nmod:as(persade, organisation) mark(renonce, to) acl(organisation, renonce) det(road, the) dobj(renonce, road) case(violence, of) nmod:of(road, violence) case(means, as) det(means, a) nmod:as(renonce, means) mark(achieving, of) acl(means, achieving) amod(change, political) dobj(achieving, change) pnct(oght, .)","root(,MD) det:predet(DT,PDT) nsbj(MD,DT) nsbj(VB,DT) nsbj(VBG,WP) ax(VBG,VBP) acl:relcl(DT,VBG) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) case(NNS,TO) det(NNS,DT) nmod:to(NN,NNS) case(NNP,IN) compond(NNP,NNP) nmod:of(NNS,NNP) mark(VB,TO) xcomp(MD,VB) mark(VB,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nsbj(VB,NN) ax(VB,MD) ccomp(VB,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) pnct(MD,MD) cc(MD,CC) ax(VB,MD) advmod(VB,RB) conj:and(MD,VB) mark(VB,TO) xcomp(VB,VB) det(NNP,DT) dobj(VB,NNP) case(NN,IN) det(NN,DT) nmod:as(VB,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:as(VB,NN) mark(VBG,IN) acl(NN,VBG) amod(NN,JJ) dobj(VBG,NN) pnct(MD,MD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
While the IRA can fight elections if it wants  the ANC cannot  because it is excluded from national franchise.,WhileIN theDT IRANNP canMD fightVB electionsNNS ifIN itPRP wantsVBZ theDT ANCNNP canMD notRB becauseIN itPRP isVBZ excludedVBN fromIN nationalJJ franchiseNN ,"root(ROOT-0, not-14) mark(fight-5, While-1) det(IRA-3, the-2) nsubj(fight-5, IRA-3) aux(fight-5, can-4) advcl(not-14, fight-5) dobj(fight-5, elections-6) mark(wants-9, if-7) nsubj(wants-9, it-8) advcl(fight-5, wants-9) punct(not-14, ,-10) det(ANC-12, the-11) nsubj(not-14, ANC-12) aux(not-14, can-13) punct(not-14, ,-15) mark(excluded-19, because-16) nsubjpass(excluded-19, it-17) auxpass(excluded-19, is-18) advcl(not-14, excluded-19) case(franchise-22, from-20) amod(franchise-22, national-21) nmod:from(excluded-19, franchise-22) punct(not-14, .-23)",0,0,0,"root(ROOT, not) mark(fight, While) det(IRA, the) nsbj(fight, IRA) ax(fight, can) advcl(not, fight) dobj(fight, elections) mark(wants, if) nsbj(wants, it) advcl(fight, wants) pnct(not, ,) det(ANC, the) nsbj(not, ANC) ax(not, can) pnct(not, ,) mark(exclded, becase) nsbjpass(exclded, it) axpass(exclded, is) advcl(not, exclded) case(franchise, from) amod(franchise, national) nmod:from(exclded, franchise) pnct(not, .)","root(,RB) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) advcl(RB,VB) dobj(VB,NNS) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VB,VBZ) pnct(RB,RB) det(NNP,DT) nsbj(RB,NNP) ax(RB,MD) pnct(RB,RB) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) advcl(RB,VBN) case(NN,IN) amod(NN,JJ) nmod:from(VBN,NN) pnct(RB,RB)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is it not impertinent and unrealistic of President Botha to impose the pre condition of disavowal of violence  when the South African authorities constantly carry out acts of violence against the black majority?,IsVBZ itPRP notRB impertinentJJ andCC unrealisticJJ ofIN PresidentNNP BothaNNP toTO imposeVB theDT preJJ conditionNN ofIN disavowalNN ofIN violenceNN whenWRB theDT SouthJJ AfricanJJ authoritiesNNS constantlyRB carryVBP outRP actsNNS ofIN violenceNN againstIN theDT blackJJ majorityNN ,"root(ROOT-0, Is-1) nsubj(impertinent-4, it-2) nsubj(unrealistic-6, it-2) neg(impertinent-4, not-3) xcomp(Is-1, impertinent-4) cc(impertinent-4, and-5) xcomp(Is-1, unrealistic-6) conj:and(impertinent-4, unrealistic-6) case(Botha-9, of-7) compound(Botha-9, President-8) nmod:of(unrealistic-6, Botha-9) mark(impose-11, to-10) xcomp(unrealistic-6, impose-11) det(condition-14, the-12) amod(condition-14, pre-13) dobj(impose-11, condition-14) case(disavowal-16, of-15) nmod:of(condition-14, disavowal-16) case(violence-18, of-17) nmod:of(disavowal-16, violence-18) punct(condition-14, ,-19) advmod(carry-26, when-20) det(authorities-24, the-21) amod(African-23, South-22) amod(authorities-24, African-23) nsubj(carry-26, authorities-24) advmod(carry-26, constantly-25) acl:relcl(condition-14, carry-26) compound:prt(carry-26, out-27) dobj(carry-26, acts-28) case(violence-30, of-29) nmod:of(acts-28, violence-30) case(majority-34, against-31) det(majority-34, the-32) amod(majority-34, black-33) nmod:against(carry-26, majority-34) punct(Is-1, ?-35)",0,0,0,"root(ROOT, Is) nsbj(impertinent, it) nsbj(nrealistic, it) neg(impertinent, not) xcomp(Is, impertinent) cc(impertinent, and) xcomp(Is, nrealistic) conj:and(impertinent, nrealistic) case(Botha, of) compond(Botha, President) nmod:of(nrealistic, Botha) mark(impose, to) xcomp(nrealistic, impose) det(condition, the) amod(condition, pre) dobj(impose, condition) case(disavowal, of) nmod:of(condition, disavowal) case(violence, of) nmod:of(disavowal, violence) pnct(condition, ,) advmod(carry, when) det(athorities, the) amod(African, Soth) amod(athorities, African) nsbj(carry, athorities) advmod(carry, constantly) acl:relcl(condition, carry) compond:prt(carry, ot) dobj(carry, acts) case(violence, of) nmod:of(acts, violence) case(majority, against) det(majority, the) amod(majority, black) nmod:against(carry, majority) pnct(Is, ?)","root(,VBZ) nsbj(JJ,PRP) nsbj(JJ,PRP) neg(JJ,RB) xcomp(VBZ,JJ) cc(JJ,CC) xcomp(VBZ,JJ) conj:and(JJ,JJ) case(NNP,IN) compond(NNP,NNP) nmod:of(JJ,NNP) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN) advmod(VBP,WRB) det(NNS,DT) amod(JJ,JJ) amod(NNS,JJ) nsbj(VBP,NNS) advmod(VBP,RB) acl:relcl(NN,VBP) compond:prt(VBP,RP) dobj(VBP,NNS) case(NN,IN) nmod:of(NNS,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:against(VBP,NN) pnct(VBZ,VBZ)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Of course we hope that Mrs. Mandela will be free to leave South Africa if she wishes  and we hope that the South African Government will act in a responsible and constructive way to any such request.,OfIN courseNN wePRP hopeVBP thatIN MrsNNP MandelaNNP willMD beVB freeJJ toTO leaveVB SouthNNP AfricaNNP ifIN shePRP wishesVBZ andCC wePRP hopeVBP thatIN theDT SouthJJ AfricanJJ GovernmentNNP willMD actVB inIN aDT responsibleJJ andCC constructiveJJ wayNN toTO anyDT suchJJ requestNN ,"root(ROOT-0, hope-4) case(course-2, Of-1) nmod:of(hope-4, course-2) nsubj(hope-4, we-3) mark(free-10, that-5) compound(Mandela-7, Mrs.-6) nsubj(free-10, Mandela-7) aux(free-10, will-8) cop(free-10, be-9) ccomp(hope-4, free-10) mark(leave-12, to-11) xcomp(free-10, leave-12) compound(Africa-14, South-13) dobj(leave-12, Africa-14) mark(wishes-17, if-15) nsubj(wishes-17, she-16) advcl(hope-4, wishes-17) punct(hope-4, ,-18) cc(hope-4, and-19) nsubj(hope-21, we-20) conj:and(hope-4, hope-21) mark(act-28, that-22) det(Government-26, the-23) amod(Government-26, South-24) amod(Government-26, African-25) nsubj(act-28, Government-26) aux(act-28, will-27) ccomp(hope-21, act-28) case(way-34, in-29) det(way-34, a-30) amod(way-34, responsible-31) cc(responsible-31, and-32) conj:and(responsible-31, constructive-33) amod(way-34, constructive-33) nmod:in(act-28, way-34) case(request-38, to-35) det(request-38, any-36) amod(request-38, such-37) nmod:to(way-34, request-38) punct(hope-4, .-39)",0,0,0,"root(ROOT, hope) case(corse, Of) nmod:of(hope, corse) nsbj(hope, we) mark(free, that) compond(Mandela, Mrs.) nsbj(free, Mandela) ax(free, will) cop(free, be) ccomp(hope, free) mark(leave, to) xcomp(free, leave) compond(Africa, Soth) dobj(leave, Africa) mark(wishes, if) nsbj(wishes, she) advcl(hope, wishes) pnct(hope, ,) cc(hope, and) nsbj(hope, we) conj:and(hope, hope) mark(act, that) det(Government, the) amod(Government, Soth) amod(Government, African) nsbj(act, Government) ax(act, will) ccomp(hope, act) case(way, in) det(way, a) amod(way, responsible) cc(responsible, and) conj:and(responsible, constrctive) amod(way, constrctive) nmod:in(act, way) case(reqest, to) det(reqest, any) amod(reqest, sch) nmod:to(way, reqest) pnct(hope, .)","root(,VBP) case(NN,IN) nmod:of(VBP,NN) nsbj(VBP,PRP) mark(JJ,IN) compond(NNP,NNP) nsbj(JJ,NNP) ax(JJ,MD) cop(JJ,VB) ccomp(VBP,JJ) mark(VB,TO) xcomp(JJ,VB) compond(NNP,JJ) dobj(VB,NNP) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VBP,VBZ) pnct(VBP,VBP) cc(VBP,CC) nsbj(VBP,PRP) conj:and(VBP,VBP) mark(VB,IN) det(NNP,DT) amod(NNP,JJ) amod(NNP,JJ) nsbj(VB,NNP) ax(VB,MD) ccomp(VBP,VB) case(NN,IN) det(NN,DT) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) nmod:in(VB,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(NN,NN) pnct(VBP,VBP)","[she, hope, wishes, South, act, African, hope, way, Government]","[she, hope, wishes, South, act, African, hope, way, Government]",12,"[wishes, she, hope]","[wishes, she, hope]",PRP_she VBP_hope VBZ_wishes NNP_South NN_act JJ_African VBP_hope NN_way NNP_Government ,"[she, hope, wishes, South, act, African, hope, way, Government]","[she, hope, wishes, South, act, African, hope, way, Government]",PRP_she VBP_hope VBZ_wishes NNP_South NN_act JJ_African VBP_hope NN_way NNP_Government ,"[she, hope, wishes, South, act, African, hope, way, Government]",PRP_she VBP_hope VBZ_wishes NNP_South NN_act JJ_African VBP_hope NN_way NNP_Government ,"[she, hope, wishes, South, act, African, hope, way, Government]",PRP_she VBP_hope VBZ_wishes NNP_South NN_act JJ_African VBP_hope NN_way NNP_Government ,-3,0,1,0,0,0,0,0,0,0
As to the hon. Gentleman's general points  there is nothing I can add to the comments that I have already made.,AsIN toTO theDT honNN GentlemanNNP 'sPOS generalJJ pointsNNS thereEX isVBZ nothingNN IPRP canMD addVB toTO theDT commentsNNS thatIN IPRP haveVBP alreadyRB madeVBN ,"root(ROOT-0, is-11) case(points-8, As-1) mwe(As-1, to-2) det(Gentleman-5, the-3) compound(Gentleman-5, hon.-4) nmod:poss(points-8, Gentleman-5) case(Gentleman-5, 's-6) amod(points-8, general-7) nmod:as_to(is-11, points-8) punct(is-11, ,-9) expl(is-11, there-10) nsubj(is-11, nothing-12) nsubj(add-15, I-13) aux(add-15, can-14) acl:relcl(nothing-12, add-15) case(comments-18, to-16) det(comments-18, the-17) nmod:to(add-15, comments-18) dobj(made-23, that-19) nsubj(made-23, I-20) aux(made-23, have-21) advmod(made-23, already-22) acl:relcl(comments-18, made-23) punct(is-11, .-24)",0,0,0,"root(ROOT, is) case(points, As) mwe(As, to) det(Gentleman, the) compond(Gentleman, hon.) nmod:poss(points, Gentleman) ""case(Gentleman, s)"", amod(points, general) nmod:as_to(is, points) pnct(is, ,) expl(is, there) nsbj(is, nothing) nsbj(add, I) ax(add, can) acl:relcl(nothing, add) case(comments, to) det(comments, the) nmod:to(add, comments) dobj(made, that) nsbj(made, I) ax(made, have) advmod(made, already) acl:relcl(comments, made) pnct(is, .)","root(,VBZ) case(NNS,IN) mwe(IN,TO) det(NNP,DT) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) amod(NNS,JJ) nmod:as_to(VBZ,NNS) pnct(VBZ,VBZ) expl(VBZ,EX) nsbj(VBZ,NN) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) case(NNS,TO) det(NNS,DT) nmod:to(VB,NNS) dobj(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) acl:relcl(NNS,VBN) pnct(VBZ,VBZ)","[Gentleman, general, points, is]","[Gentleman, general, points, is]",12,"[Gentleman, general, points, is]","[Gentleman, general, points, is]",NNP_Gentleman JJ_general NNS_points VBZ_is ,"[Gentleman, general, points, is]","[Gentleman, general, points, is]",NNP_Gentleman JJ_general NNS_points VBZ_is ,"[Gentleman, general, points, is]",NNP_Gentleman JJ_general NNS_points VBZ_is ,"[Gentleman, general, points, is]",NNP_Gentleman JJ_general NNS_points VBZ_is ,-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Scotland if he will make a statement on progress made in solving the Scottish teachers' dispute.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN ScotlandNNP ifIN hePRP willMD makeVB aDT statementNN onIN progressNN madeVBN inIN solvingVBG theDT ScottishJJ teachersNNS 'POS disputeNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Scotland-7, for-6) nmod:for(Secretary-3, Scotland-7) mark(make-11, if-8) nsubj(make-11, he-9) aux(make-11, will-10) advcl(asked-1, make-11) det(statement-13, a-12) dobj(make-11, statement-13) case(progress-15, on-14) nmod:on(statement-13, progress-15) acl(progress-15, made-16) mark(solving-18, in-17) advcl(made-16, solving-18) det(teachers-21, the-19) amod(teachers-21, Scottish-20) nmod:poss(dispute-23, teachers-21) case(teachers-21, '-22) dobj(solving-18, dispute-23) punct(asked-1, .-24)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Scotland, for) nmod:for(Secretary, Scotland) mark(make, if) nsbj(make, he) ax(make, will) advcl(asked, make) det(statement, a) dobj(make, statement) case(progress, on) nmod:on(statement, progress) acl(progress, made) mark(solving, in) advcl(made, solving) det(teachers, the) amod(teachers, Scottish) nmod:poss(dispte, teachers) ""case(teachers, )"", dobj(solving, dispte) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VBN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:on(NN,NN) acl(NN,VBN) mark(VBG,IN) advcl(VBN,VBG) det(NNS,DT) amod(NNS,JJ) nmod:poss(NN,NNS) case(NNS,POS) dobj(VBG,NN) pnct(VBN,VBN)","[State, he, Secretary, ROOT, asked, make, statement, Scotland]","[State, he, Secretary, ROOT, asked, make, statement, Scotland]",1,"[Secretary, ROOT, asked, State, make, Scotland]","[Secretary, ROOT, asked, State, make, Scotland]",NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NNP_Scotland ,"[State, he, Secretary, ROOT, asked, make, statement, Scotland]","[State, he, Secretary, ROOT, asked, make, statement, Scotland]",NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NNP_Scotland ,"[State, he, Secretary, ROOT, asked, make, statement, Scotland]",NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NNP_Scotland ,"[State, he, Secretary, ROOT, asked, make, statement, Scotland]",NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NNP_Scotland ,-3,0,2,0,0,0,0,0,0,0
I refer the hon. Member to the statement I made in the House on 22 October.,IPRP referVBP theDT honNN MemberNNP toTO theDT statementNN IPRP madeVBD inIN theDT HouseNNP onIN 22CD OctoberNNP ,"root(ROOT-0, refer-2) nsubj(refer-2, I-1) det(Member-5, the-3) compound(Member-5, hon.-4) dobj(refer-2, Member-5) case(statement-8, to-6) det(statement-8, the-7) nmod:to(refer-2, statement-8) nsubj(made-10, I-9) acl:relcl(statement-8, made-10) case(House-13, in-11) det(House-13, the-12) nmod:in(made-10, House-13) case(October-16, on-14) nummod(October-16, 22-15) nmod:on(made-10, October-16) punct(refer-2, .-17)",0,1,1,"root(ROOT, refer) nsbj(refer, I) det(Member, the) compond(Member, hon.) dobj(refer, Member) case(statement, to) det(statement, the) nmod:to(refer, statement) nsbj(made, I) acl:relcl(statement, made) case(Hose, in) det(Hose, the) nmod:in(made, Hose) case(October, on) nmmod(October, 22) nmod:on(made, October) pnct(refer, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) compond(NNP,NNP) dobj(VBP,NNP) case(NN,TO) det(NN,DT) nmod:to(VBP,NN) nsbj(VBD,PRP) acl:relcl(NN,VBD) case(NNP,IN) det(NNP,DT) nmod:in(VBD,NNP) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) pnct(VBP,VBP)","[I, ROOT, Member, refer, statement]","[I, ROOT, Member, refer, statement]",2,"[I, ROOT, Member, refer, statement]","[I, ROOT, Member, refer, statement]",PRP_I NNP_Member VBP_refer NN_statement ,"[I, ROOT, Member, refer, statement]","[I, ROOT, Member, refer, statement]",PRP_I NNP_Member VBP_refer NN_statement ,"[I, ROOT, Member, refer, statement]",PRP_I NNP_Member VBP_refer NN_statement ,"[I, ROOT, Member, refer, statement]",PRP_I NNP_Member VBP_refer NN_statement ,-3,0,2,0,0,0,0,0,0,0
I am glad to welcome the hon. Gentleman's conversion to the message that is being sent round from this side of the House.,IPRP amVBP gladJJ toTO welcomeVB theDT honNN GentlemanNNP 'sPOS conversionNN toTO theDT messageNN thatWDT isVBZ beingVBG sentVBN roundNN fromIN thisDT sideNN ofIN theDT HouseNNP ,"root(ROOT-0, glad-3) nsubj(glad-3, I-1) cop(glad-3, am-2) mark(welcome-5, to-4) xcomp(glad-3, welcome-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nmod:poss(conversion-10, Gentleman-8) case(Gentleman-8, 's-9) dobj(welcome-5, conversion-10) case(message-13, to-11) det(message-13, the-12) nmod:to(conversion-10, message-13) nsubjpass(sent-17, that-14) aux(sent-17, is-15) auxpass(sent-17, being-16) acl:relcl(message-13, sent-17) xcomp(sent-17, round-18) case(side-21, from-19) det(side-21, this-20) nmod:from(round-18, side-21) case(House-24, of-22) det(House-24, the-23) nmod:of(side-21, House-24) punct(glad-3, .-25)",0,1,0,"root(ROOT, glad) nsbj(glad, I) cop(glad, am) mark(welcome, to) xcomp(glad, welcome) det(Gentleman, the) compond(Gentleman, hon.) nmod:poss(conversion, Gentleman) ""case(Gentleman, s)"", dobj(welcome, conversion) case(message, to) det(message, the) nmod:to(conversion, message) nsbjpass(sent, that) ax(sent, is) axpass(sent, being) acl:relcl(message, sent) xcomp(sent, rond) case(side, from) det(side, this) nmod:from(rond, side) case(Hose, of) det(Hose, the) nmod:of(side, Hose) pnct(glad, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VB,TO) xcomp(JJ,VB) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) dobj(VB,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) nsbjpass(VBN,WDT) ax(VBN,VBZ) axpass(VBN,VBG) acl:relcl(NN,VBN) xcomp(VBN,NN) case(NN,IN) det(NN,DT) nmod:from(NN,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(JJ,JJ)","[conversion, message, Gentleman, welcome]","[conversion, message, Gentleman, welcome]",4,"[conversion, message, Gentleman, welcome]","[conversion, message, Gentleman, welcome]",NN_conversion NN_message NNP_Gentleman JJ_welcome ,"[conversion, message, Gentleman, welcome]","[conversion, message, Gentleman, welcome]",NN_conversion NN_message NNP_Gentleman JJ_welcome ,"[conversion, message, Gentleman, welcome]",NN_conversion NN_message NNP_Gentleman JJ_welcome ,"[conversion, message, Gentleman, welcome]",NN_conversion NN_message NNP_Gentleman JJ_welcome ,-3,0,2,1,1,1,1,1,1,2
I have been trying hard to persuade the teachers to accept more money on any reasonable terms since December last.,IPRP haveVBP beenVBN tryingVBG hardJJ toTO persuadeVB theDT teachersNNS toTO acceptVB moreJJR moneyNN onIN anyDT reasonableJJ termsNNS sinceIN DecemberNNP lastJJ ,"root(ROOT-0, trying-4) nsubj(trying-4, I-1) aux(trying-4, have-2) aux(trying-4, been-3) xcomp(trying-4, hard-5) mark(persuade-7, to-6) xcomp(hard-5, persuade-7) det(teachers-9, the-8) dobj(persuade-7, teachers-9) mark(accept-11, to-10) xcomp(persuade-7, accept-11) amod(money-13, more-12) dobj(accept-11, money-13) case(terms-17, on-14) det(terms-17, any-15) amod(terms-17, reasonable-16) nmod:on(accept-11, terms-17) case(December-19, since-18) nmod:since(accept-11, December-19) amod(December-19, last-20) punct(trying-4, .-21)",0,0,0,"root(ROOT, trying) nsbj(trying, I) ax(trying, have) ax(trying, been) xcomp(trying, hard) mark(persade, to) xcomp(hard, persade) det(teachers, the) dobj(persade, teachers) mark(accept, to) xcomp(persade, accept) amod(money, more) dobj(accept, money) case(terms, on) det(terms, any) amod(terms, reasonable) nmod:on(accept, terms) case(December, since) nmod:since(accept, December) amod(December, last) pnct(trying, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) ax(VBG,VBN) xcomp(VBG,JJ) mark(VB,TO) xcomp(JJ,VB) det(NNS,DT) dobj(VB,NNS) mark(VB,TO) xcomp(VB,VB) amod(NN,JJR) dobj(VB,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:on(VB,NNS) case(NNP,IN) nmod:since(VB,NNP) amod(NNP,JJ) pnct(VBG,VBG)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The tragedy is that a very large number of teachers have not yet appreciated how much the offer of extra money that I made them in August involves or could involve.,TheDT tragedyNN isVBZ thatIN aDT veryRB largeJJ numberNN ofIN teachersNNS haveVBP notRB yetRB appreciatedVBN howWRB muchJJ theDT offerNN ofIN extraJJ moneyNN thatIN IPRP madeVBD themPRP inIN AugustNNP involvesNNS orCC couldMD involveVB ,"root(ROOT-0, is-3) det(tragedy-2, The-1) nsubj(is-3, tragedy-2) mark(appreciated-14, that-4) det(number-8, a-5) advmod(large-7, very-6) amod(number-8, large-7) nsubj(appreciated-14, number-8) case(teachers-10, of-9) nmod:of(number-8, teachers-10) aux(appreciated-14, have-11) neg(appreciated-14, not-12) advmod(appreciated-14, yet-13) ccomp(is-3, appreciated-14) advmod(much-16, how-15) advmod(appreciated-14, much-16) det(offer-18, the-17) dep(much-16, offer-18) case(money-21, of-19) amod(money-21, extra-20) nmod:of(offer-18, money-21) mark(made-24, that-22) nsubj(made-24, I-23) dep(offer-18, made-24) dobj(made-24, them-25) case(August-27, in-26) nmod:in(made-24, August-27) dep(made-24, involves-28) cc(involves-28, or-29) aux(involve-31, could-30) dep(made-24, involve-31) conj:or(involves-28, involve-31) punct(is-3, .-32)",0,0,0,"root(ROOT, is) det(tragedy, The) nsbj(is, tragedy) mark(appreciated, that) det(nmber, a) advmod(large, very) amod(nmber, large) nsbj(appreciated, nmber) case(teachers, of) nmod:of(nmber, teachers) ax(appreciated, have) neg(appreciated, not) advmod(appreciated, yet) ccomp(is, appreciated) advmod(mch, how) advmod(appreciated, mch) det(offer, the) dep(mch, offer) case(money, of) amod(money, extra) nmod:of(offer, money) mark(made, that) nsbj(made, I) dep(offer, made) dobj(made, them) case(Agst, in) nmod:in(made, Agst) dep(made, involves) cc(involves, or) ax(involve, cold) dep(made, involve) conj:or(involves, involve) pnct(is, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) mark(VBN,IN) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) nsbj(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) ax(VBN,VBP) neg(VBN,RB) advmod(VBN,RB) ccomp(VBZ,VBN) advmod(JJ,WRB) advmod(VBN,JJ) det(NN,DT) dep(JJ,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) mark(VBD,IN) nsbj(VBD,PRP) dep(NN,VBD) dobj(VBD,PRP) case(NNP,IN) nmod:in(VBD,NNP) dep(VBD,NNS) cc(NNS,CC) ax(VB,MD) dep(VBD,VB) conj:or(NNS,VB) pnct(VBZ,VBZ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I hope very much that they will pay more attention to that.,IPRP hopeVBP veryRB muchJJ thatIN theyPRP willMD payVB moreJJR attentionNN toTO thatDT ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) advmod(much-4, very-3) advmod(hope-2, much-4) mark(pay-8, that-5) nsubj(pay-8, they-6) aux(pay-8, will-7) ccomp(much-4, pay-8) amod(attention-10, more-9) dobj(pay-8, attention-10) case(that-12, to-11) nmod:to(pay-8, that-12) punct(hope-2, .-13)",0,0,1,"root(ROOT, hope) nsbj(hope, I) advmod(mch, very) advmod(hope, mch) mark(pay, that) nsbj(pay, they) ax(pay, will) ccomp(mch, pay) amod(attention, more) dobj(pay, attention) case(that, to) nmod:to(pay, that) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) advmod(JJ,RB) advmod(VBP,JJ) mark(VB,DT) nsbj(VB,PRP) ax(VB,MD) ccomp(JJ,VB) amod(NN,JJR) dobj(VB,NN) case(DT,TO) nmod:to(VB,DT) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is my right hon. Friend aware that many teachers in my constituency would like a first phase interim pay settlement linked to negotiations on contracts of service?,IsVBZ myPRP$ rightJJ honNN FriendNNP awareVBZ thatIN manyJJ teachersNNS inIN myPRP$ constituencyNN wouldMD likeVB aDT firstJJ phaseNN interimJJ payNN settlementNN linkedVBN toTO negotiationsNNS onIN contractsNNS ofIN serviceNN ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(aware-6, Friend-5) mark(like-14, that-7) amod(teachers-9, many-8) nsubj(like-14, teachers-9) case(constituency-12, in-10) nmod:poss(constituency-12, my-11) nmod:in(teachers-9, constituency-12) aux(like-14, would-13) ccomp(aware-6, like-14) det(settlement-20, a-15) amod(settlement-20, first-16) compound(settlement-20, phase-17) amod(settlement-20, interim-18) compound(settlement-20, pay-19) dobj(like-14, settlement-20) acl(settlement-20, linked-21) case(negotiations-23, to-22) nmod:to(linked-21, negotiations-23) case(contracts-25, on-24) nmod:on(negotiations-23, contracts-25) case(service-27, of-26) nmod:of(contracts-25, service-27) punct(aware-6, ?-28)",0,1,1,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(aware, Friend) mark(like, that) amod(teachers, many) nsbj(like, teachers) case(constitency, in) nmod:poss(constitency, my) nmod:in(teachers, constitency) ax(like, wold) ccomp(aware, like) det(settlement, a) amod(settlement, first) compond(settlement, phase) amod(settlement, interim) compond(settlement, pay) dobj(like, settlement) acl(settlement, linked) case(negotiations, to) nmod:to(linked, negotiations) case(contracts, on) nmod:on(negotiations, contracts) case(service, of) nmod:of(contracts, service) pnct(aware, ?)","root(,VBZ) cop(VBZ,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VB,IN) amod(NNS,JJ) nsbj(VB,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NNS,NN) ax(VB,MD) ccomp(VBZ,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) acl(NN,VBN) case(NNS,TO) nmod:to(VBN,NNS) case(NNS,IN) nmod:on(NNS,NNS) case(NN,IN) nmod:of(NNS,NN) pnct(VBZ,VBZ)","[like, my, ROOT, aware, right, Friend]","[aware, ROOT, Friend, my, like]",5,"[aware, ROOT, Friend, my, like]",[ ],JJ_aware NNP_Friend PRP$_my IN_like ,"[aware, ROOT, Friend, my, like]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I am grateful to my hon. Friend for reminding us that the teachers suggested when I met them in late September that that might be a way out of the dispute  but that is not a realistic proposal  amounting as it does to a request for a very large increase in pay now with nothing in return for the public.,IPRP amVBP gratefulJJ toTO myPRP$ honNN FriendNNP forIN remindingVBG usPRP thatIN theDT teachersNNS suggestedVBD whenWRB IPRP metVBD themPRP inIN lateJJ SeptemberNNP thatIN thatDT mightMD beVB aDT wayNN outIN ofIN theDT disputeNN butCC thatDT isVBZ notRB aDT realisticJJ proposalNN amountingVBG asIN itPRP doesVBZ toTO aDT requestNN forIN aDT veryRB largeJJ increaseNN inIN payNN nowRB withIN nothingNN inIN returnNN forIN theDT publicNN ,"root(ROOT-0, grateful-3) nsubj(grateful-3, I-1) cop(grateful-3, am-2) case(Friend-7, to-4) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) nmod:to(grateful-3, Friend-7) mark(reminding-9, for-8) advcl(grateful-3, reminding-9) dobj(reminding-9, us-10) mark(suggested-14, that-11) det(teachers-13, the-12) nsubj(suggested-14, teachers-13) ccomp(reminding-9, suggested-14) advmod(met-17, when-15) nsubj(met-17, I-16) advcl(suggested-14, met-17) dobj(met-17, them-18) case(September-21, in-19) amod(September-21, late-20) nmod:in(met-17, September-21) mark(way-27, that-22) nsubj(way-27, that-23) aux(way-27, might-24) cop(way-27, be-25) det(way-27, a-26) ccomp(met-17, way-27) case(dispute-31, out-28) mwe(out-28, of-29) det(dispute-31, the-30) nmod:out_of(way-27, dispute-31) punct(way-27, ,-32) cc(way-27, but-33) nsubj(proposal-39, that-34) cop(proposal-39, is-35) neg(proposal-39, not-36) det(proposal-39, a-37) amod(proposal-39, realistic-38) ccomp(met-17, proposal-39) conj:but(way-27, proposal-39) punct(proposal-39, ,-40) acl(proposal-39, amounting-41) mark(does-44, as-42) nsubj(does-44, it-43) advcl(amounting-41, does-44) case(request-47, to-45) det(request-47, a-46) nmod:to(does-44, request-47) case(increase-52, for-48) det(increase-52, a-49) advmod(large-51, very-50) amod(increase-52, large-51) nmod:for(request-47, increase-52) case(pay-54, in-53) nmod:in(increase-52, pay-54) advmod(nothing-57, now-55) case(nothing-57, with-56) nmod:with(increase-52, nothing-57) case(return-59, in-58) nmod:in(nothing-57, return-59) case(public-62, for-60) det(public-62, the-61) nmod:for(return-59, public-62) punct(grateful-3, .-63)",0,0,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gratefl, Friend) mark(reminding, for) advcl(gratefl, reminding) dobj(reminding, s) mark(sggested, that) det(teachers, the) nsbj(sggested, teachers) ccomp(reminding, sggested) advmod(met, when) nsbj(met, I) advcl(sggested, met) dobj(met, them) case(September, in) amod(September, late) nmod:in(met, September) mark(way, that) nsbj(way, that) ax(way, might) cop(way, be) det(way, a) ccomp(met, way) case(dispte, ot) mwe(ot, of) det(dispte, the) nmod:ot_of(way, dispte) pnct(way, ,) cc(way, bt) nsbj(proposal, that) cop(proposal, is) neg(proposal, not) det(proposal, a) amod(proposal, realistic) ccomp(met, proposal) conj:bt(way, proposal) pnct(proposal, ,) acl(proposal, amonting) mark(does, as) nsbj(does, it) advcl(amonting, does) case(reqest, to) det(reqest, a) nmod:to(does, reqest) case(increase, for) det(increase, a) advmod(large, very) amod(increase, large) nmod:for(reqest, increase) case(pay, in) nmod:in(increase, pay) advmod(nothing, now) case(nothing, with) nmod:with(increase, nothing) case(retrn, in) nmod:in(nothing, retrn) case(pblic, for) det(pblic, the) nmod:for(retrn, pblic) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) case(NNP,TO) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:to(JJ,NNP) mark(VBG,IN) advcl(JJ,VBG) dobj(VBG,PRP) mark(VBD,DT) det(NNS,DT) nsbj(VBD,NNS) ccomp(VBG,VBD) advmod(VBD,WRB) nsbj(VBD,PRP) advcl(VBD,VBD) dobj(VBD,PRP) case(NNP,IN) amod(NNP,JJ) nmod:in(VBD,NNP) mark(NN,DT) nsbj(NN,DT) ax(NN,MD) cop(NN,VB) det(NN,DT) ccomp(VBD,NN) case(NN,IN) mwe(IN,IN) det(NN,DT) nmod:ot_of(NN,NN) pnct(NN,NN) cc(NN,CC) nsbj(NN,DT) cop(NN,VBZ) neg(NN,RB) det(NN,DT) amod(NN,JJ) ccomp(VBD,NN) conj:bt(NN,NN) pnct(NN,NN) acl(NN,VBG) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VBG,VBZ) case(NN,TO) det(NN,DT) nmod:to(VBZ,NN) case(NN,IN) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) nmod:for(NN,NN) case(NN,IN) nmod:in(NN,NN) advmod(NN,RB) case(NN,IN) nmod:with(NN,NN) case(NN,IN) nmod:in(NN,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) pnct(JJ,JJ)","[reminding, I, my, ROOT, grateful, Friend]","[reminding, I, my, ROOT, grateful, Friend]",6,"[reminding, I, my, ROOT, grateful, Friend]","[reminding, I, my, ROOT, grateful, Friend]",VBG_reminding PRP_I PRP$_my JJ_grateful NNP_Friend ,"[reminding, I, my, ROOT, grateful, Friend]","[reminding, I, my, ROOT, grateful, Friend]",VBG_reminding PRP_I PRP$_my JJ_grateful NNP_Friend ,"[reminding, I, my, ROOT, grateful, Friend]",VBG_reminding PRP_I PRP$_my JJ_grateful NNP_Friend ,"[reminding, I, my, ROOT, grateful, Friend]",VBG_reminding PRP_I PRP$_my JJ_grateful NNP_Friend ,-3,0,2,1,1,0,2,2,2,2
We have to remember that the public must expect to get decent value for the money that they spend on teachers.,WePRP haveVBP toTO rememberVB thatIN theDT publicNN mustMD expectVB toTO getVB decentJJ valueNN forIN theDT moneyNN thatIN theyPRP spendVBP onIN teachersNNS ,"root(ROOT-0, have-2) nsubj(have-2, We-1) mark(remember-4, to-3) xcomp(have-2, remember-4) mark(expect-9, that-5) det(public-7, the-6) nsubj(expect-9, public-7) aux(expect-9, must-8) ccomp(remember-4, expect-9) mark(get-11, to-10) xcomp(expect-9, get-11) amod(value-13, decent-12) dobj(get-11, value-13) case(money-16, for-14) det(money-16, the-15) nmod:for(value-13, money-16) dobj(spend-19, that-17) nsubj(spend-19, they-18) acl:relcl(money-16, spend-19) case(teachers-21, on-20) nmod:on(spend-19, teachers-21) punct(have-2, .-22)",0,0,1,"root(ROOT, have) nsbj(have, We) mark(remember, to) xcomp(have, remember) mark(expect, that) det(pblic, the) nsbj(expect, pblic) ax(expect, mst) ccomp(remember, expect) mark(get, to) xcomp(expect, get) amod(vale, decent) dobj(get, vale) case(money, for) det(money, the) nmod:for(vale, money) dobj(spend, that) nsbj(spend, they) acl:relcl(money, spend) case(teachers, on) nmod:on(spend, teachers) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,TO) xcomp(VBP,VB) mark(VB,IN) det(NN,DT) nsbj(VB,NN) ax(VB,MD) ccomp(VB,VB) mark(VB,TO) xcomp(VB,VB) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) dobj(VBP,IN) nsbj(VBP,PRP) acl:relcl(NN,VBP) case(NNS,IN) nmod:on(VBP,NNS) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It was an offer  over a four year period  of extra money from the Government amounting to 10 per cent.,ItPRP wasVBD anDT offerNN overIN aDT fourCD yearNN periodNN ofIN extraJJ moneyNN fromIN theDT GovernmentNNP amountingVBG toTO 10CD perIN centNN ,"root(ROOT-0, offer-4) nsubj(offer-4, It-1) cop(offer-4, was-2) det(offer-4, an-3) punct(offer-4, ,-5) case(period-10, over-6) det(period-10, a-7) nummod(period-10, four-8) compound(period-10, year-9) nmod:over(offer-4, period-10) punct(offer-4, ,-11) case(money-14, of-12) amod(money-14, extra-13) nmod:of(offer-4, money-14) case(amounting-18, from-15) det(amounting-18, the-16) compound(amounting-18, Government-17) nmod:from(money-14, amounting-18) case(10-20, to-19) nmod:to(money-14, 10-20) case(cent-22, per-21) nmod:per(10-20, cent-22) punct(offer-4, .-23)",0,0,0,"root(ROOT, offer) nsbj(offer, It) cop(offer, was) det(offer, an) pnct(offer, ,) case(period, over) det(period, a) nmmod(period, for) compond(period, year) nmod:over(offer, period) pnct(offer, ,) case(money, of) amod(money, extra) nmod:of(offer, money) case(amonting, from) det(amonting, the) compond(amonting, Government) nmod:from(money, amonting) case(10, to) nmod:to(money, 10) case(cent, per) nmod:per(10, cent) pnct(offer, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBD) det(NN,DT) pnct(NN,NN) case(NN,IN) det(NN,DT) nmmod(NN,CD) compond(NN,NN) nmod:over(NN,NN) pnct(NN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) case(VBG,IN) det(VBG,DT) compond(VBG,NNP) nmod:from(NN,VBG) case(CD,TO) nmod:to(NN,CD) case(NN,IN) nmod:per(CD,NN) pnct(NN,NN)","[money, amounting]","[money, amounting]",8,"[money, amounting]","[money, amounting]",NN_money VBG_amounting ,"[money, amounting]","[money, amounting]",NN_money VBG_amounting ,"[money, amounting]",NN_money VBG_amounting ,"[money, amounting]",NN_money VBG_amounting ,-3,0,2,0,0,0,2,2,2,2
over and above the annual increases negotiated in the normal way.,overIN andCC aboveIN theDT annualJJ increasesNNS negotiatedVBN inIN theDT normalJJ wayNN ,"root(ROOT-0, over-1) cc(over-1, and-2) case(increases-6, above-3) det(increases-6, the-4) amod(increases-6, annual-5) conj:and(over-1, increases-6) acl(increases-6, negotiated-7) case(way-11, in-8) det(way-11, the-9) amod(way-11, normal-10) nmod:in(negotiated-7, way-11) punct(over-1, .-12)",0,0,0,"root(ROOT, over) cc(over, and) case(increases, above) det(increases, the) amod(increases, annal) conj:and(over, increases) acl(increases, negotiated) case(way, in) det(way, the) amod(way, normal) nmod:in(negotiated, way) pnct(over, .)","root(,IN) cc(IN,CC) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) conj:and(IN,NNS) acl(NNS,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VBN,NN) pnct(IN,IN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
There are many workers in many other industries who would be very glad to receive such an offer.,ThereEX areVBP manyJJ workersNNS inIN manyJJ otherJJ industriesNNS whoWP wouldMD beVB veryRB gladJJ toTO receiveVB suchJJ anDT offerNN ,"root(ROOT-0, are-2) expl(are-2, There-1) amod(workers-4, many-3) nsubj(are-2, workers-4) case(industries-8, in-5) amod(industries-8, many-6) amod(industries-8, other-7) nmod:in(workers-4, industries-8) nsubj(glad-13, who-9) aux(glad-13, would-10) cop(glad-13, be-11) advmod(glad-13, very-12) acl:relcl(industries-8, glad-13) mark(receive-15, to-14) xcomp(glad-13, receive-15) det:predet(offer-18, such-16) det(offer-18, an-17) dobj(receive-15, offer-18) punct(are-2, .-19)",0,0,1,"root(ROOT, are) expl(are, There) amod(workers, many) nsbj(are, workers) case(indstries, in) amod(indstries, many) amod(indstries, other) nmod:in(workers, indstries) nsbj(glad, who) ax(glad, wold) cop(glad, be) advmod(glad, very) acl:relcl(indstries, glad) mark(receive, to) xcomp(glad, receive) det:predet(offer, sch) det(offer, an) dobj(receive, offer) pnct(are, .)","root(,VBP) expl(VBP,EX) amod(NNS,JJ) nsbj(VBP,NNS) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:in(NNS,NNS) nsbj(JJ,WP) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) acl:relcl(NNS,JJ) mark(VB,TO) xcomp(JJ,VB) det:predet(NN,JJ) det(NN,DT) dobj(VB,NN) pnct(VBP,VBP)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is my right hon. Friend aware that my constituents are doubly hit by the EIS targeting of Lenzie and the primary school feeders of Kilsyth?,IsVBZ myPRP$ rightJJ honNN FriendNNP awareNN thatIN myPRP$ constituentsNNS areVBP doublyRB hitVBN byIN theDT EISNNP targetingNN ofIN LenzieNNP andCC theDT primaryJJ schoolNN feedersNNS ofIN KilsythNNP ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(aware-6, Friend-5) mark(hit-12, that-7) nmod:poss(constituents-9, my-8) nsubjpass(hit-12, constituents-9) auxpass(hit-12, are-10) advmod(hit-12, doubly-11) ccomp(aware-6, hit-12) case(targeting-16, by-13) det(targeting-16, the-14) compound(targeting-16, EIS-15) nmod:agent(hit-12, targeting-16) case(Lenzie-18, of-17) nmod:of(targeting-16, Lenzie-18) cc(Lenzie-18, and-19) det(feeders-23, the-20) amod(feeders-23, primary-21) compound(feeders-23, school-22) nmod:of(targeting-16, feeders-23) conj:and(Lenzie-18, feeders-23) case(Kilsyth-25, of-24) nmod:of(feeders-23, Kilsyth-25) punct(aware-6, ?-26)",0,1,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(aware, Friend) mark(hit, that) nmod:poss(constitents, my) nsbjpass(hit, constitents) axpass(hit, are) advmod(hit, dobly) ccomp(aware, hit) case(targeting, by) det(targeting, the) compond(targeting, EIS) nmod:agent(hit, targeting) case(Lenzie, of) nmod:of(targeting, Lenzie) cc(Lenzie, and) det(feeders, the) amod(feeders, primary) compond(feeders, school) nmod:of(targeting, feeders) conj:and(Lenzie, feeders) case(Kilsyth, of) nmod:of(feeders, Kilsyth) pnct(aware, ?)","root(,NN) cop(NN,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) mark(VBN,IN) nmod:poss(NNS,PRP$) nsbjpass(VBN,NNS) axpass(VBN,VBP) advmod(VBN,RB) ccomp(NN,VBN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:agent(VBN,NN) case(NNP,IN) nmod:of(NN,NNP) cc(NNP,CC) det(NNS,DT) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) conj:and(NNP,NNS) case(NNP,IN) nmod:of(NNS,NNP) pnct(NN,NN)","[Friend, my, ROOT, aware, right, hit]","[aware, ROOT, Friend, my, hit]",9,"[aware, ROOT, Friend, my, hit]",[ ],JJ_aware NNP_Friend PRP$_my VBN_hit ,"[aware, ROOT, Friend, my, hit]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he think that it is any accident that the bulk of the targeting action is directed against children who go to schools in the constituencies of Conservative Members of Parliament?,DoesVBZ hePRP thinkVB thatIN itPRP isVBZ anyDT accidentNN thatIN theDT bulkNN ofIN theDT targetingVBG actionNN isVBZ directedVBN againstIN childrenNNS whoWP goVBP toTO schoolsNNS inIN theDT constituenciesNNS ofIN ConservativeJJ MembersNNS ofIN ParliamentNNP ,"root(ROOT-0, think-3) aux(think-3, Does-1) nsubj(think-3, he-2) mark(accident-8, that-4) nsubj(accident-8, it-5) cop(accident-8, is-6) det(accident-8, any-7) ccomp(think-3, accident-8) mark(directed-17, that-9) det(bulk-11, the-10) nsubjpass(directed-17, bulk-11) case(action-15, of-12) det(action-15, the-13) amod(action-15, targeting-14) nmod:of(bulk-11, action-15) auxpass(directed-17, is-16) ccomp(accident-8, directed-17) case(children-19, against-18) nmod:against(directed-17, children-19) nsubj(go-21, who-20) acl:relcl(children-19, go-21) case(schools-23, to-22) nmod:to(go-21, schools-23) case(constituencies-26, in-24) det(constituencies-26, the-25) nmod:in(go-21, constituencies-26) case(Members-29, of-27) amod(Members-29, Conservative-28) nmod:of(constituencies-26, Members-29) case(Parliament-31, of-30) nmod:of(Members-29, Parliament-31) punct(think-3, ?-32)",0,0,0,"root(ROOT, think) ax(think, Does) nsbj(think, he) mark(accident, that) nsbj(accident, it) cop(accident, is) det(accident, any) ccomp(think, accident) mark(directed, that) det(blk, the) nsbjpass(directed, blk) case(action, of) det(action, the) amod(action, targeting) nmod:of(blk, action) axpass(directed, is) ccomp(accident, directed) case(children, against) nmod:against(directed, children) nsbj(go, who) acl:relcl(children, go) case(schools, to) nmod:to(go, schools) case(constitencies, in) det(constitencies, the) nmod:in(go, constitencies) case(Members, of) amod(Members, Conservative) nmod:of(constitencies, Members) case(Parliament, of) nmod:of(Members, Parliament) pnct(think, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) ccomp(VB,NN) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,VBG) nmod:of(NN,NN) axpass(VBN,VBZ) ccomp(NN,VBN) case(NNS,IN) nmod:against(VBN,NNS) nsbj(VBP,WP) acl:relcl(NNS,VBP) case(NNS,TO) nmod:to(VBP,NNS) case(NNS,IN) det(NNS,DT) nmod:in(VBP,NNS) case(NNS,IN) amod(NNS,JJ) nmod:of(NNS,NNS) case(NNP,IN) nmod:of(NNS,NNP) pnct(VB,VB)","[Members, Conservative, Parliament, accident, he, ROOT, constituencies, think]","[Members, Conservative, Parliament, accident, he, ROOT, constituencies, think]",9,"[constituencies, Members, Conservative, Parliament]","[constituencies, Members, Conservative, Parliament]",NNS_Members JJ_Conservative NNP_Parliament NN_accident PRP_he NNS_constituencies VBP_think ,"[Members, Conservative, Parliament, accident, he, ROOT, constituencies, think]","[Members, Conservative, Parliament, accident, he, ROOT, constituencies, think]",NNS_Members JJ_Conservative NNP_Parliament NN_accident PRP_he NNS_constituencies VBP_think ,"[Members, Conservative, Parliament, accident, he, ROOT, constituencies, think]",NNS_Members JJ_Conservative NNP_Parliament NN_accident PRP_he NNS_constituencies VBP_think ,"[Members, Conservative, Parliament, accident, he, ROOT, constituencies, think]",NNS_Members JJ_Conservative NNP_Parliament NN_accident PRP_he NNS_constituencies VBP_think ,-3,0,2,2,1,2,2,2,2,2
Does he agree that it is as morally indefensible as the targeting of schools in his constituency and those of his ministerial colleagues?,DoesVBZ hePRP agreeVB thatIN itPRP isVBZ asIN morallyRB indefensibleJJ asIN theDT targetingNN ofIN schoolsNNS inIN hisPRP$ constituencyNN andCC thoseDT ofIN hisPRP$ ministerialJJ colleaguesNNS ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(indefensible-9, that-4) nsubj(indefensible-9, it-5) cop(indefensible-9, is-6) case(indefensible-9, as-7) advmod(indefensible-9, morally-8) ccomp(agree-3, indefensible-9) case(targeting-12, as-10) det(targeting-12, the-11) nmod:as(indefensible-9, targeting-12) case(schools-14, of-13) nmod:of(targeting-12, schools-14) case(constituency-17, in-15) nmod:poss(constituency-17, his-16) nmod:in(schools-14, constituency-17) cc(targeting-12, and-18) nmod:as(indefensible-9, those-19) conj:and(targeting-12, those-19) case(colleagues-23, of-20) nmod:poss(colleagues-23, his-21) amod(colleagues-23, ministerial-22) nmod:of(those-19, colleagues-23) punct(agree-3, ?-24)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(indefensible, that) nsbj(indefensible, it) cop(indefensible, is) case(indefensible, as) advmod(indefensible, morally) ccomp(agree, indefensible) case(targeting, as) det(targeting, the) nmod:as(indefensible, targeting) case(schools, of) nmod:of(targeting, schools) case(constitency, in) nmod:poss(constitency, his) nmod:in(schools, constitency) cc(targeting, and) nmod:as(indefensible, those) conj:and(targeting, those) case(colleages, of) nmod:poss(colleages, his) amod(colleages, ministerial) nmod:of(those, colleages) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) case(JJ,IN) advmod(JJ,RB) ccomp(VB,JJ) case(NN,IN) det(NN,DT) nmod:as(JJ,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NNS,NN) cc(NN,CC) nmod:as(JJ,DT) conj:and(NN,DT) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:of(DT,NNS) pnct(VB,VB)","[he, ROOT, agree, indefensible]","[indefensible, his, constituency, ministerial, his, ROOT, he, colleagues, agree, schools, those]",9,"[ministerial, his, his, colleagues, constituency, schools, those]","[ministerial, his, his, colleagues, constituency, schools, those]",JJ_indefensible PRP$_his NN_constituency JJ_ministerial PRP$_his PRP_he NNS_colleagues VB_agree NNS_schools DT_those ,"[indefensible, his, constituency, ministerial, his, ROOT, he, colleagues, agree, schools, those]","[indefensible, his, constituency, ministerial, his, ROOT, he, colleagues, agree, schools, those]",JJ_indefensible PRP$_his NN_constituency JJ_ministerial PRP$_his PRP_he NNS_colleagues VB_agree NNS_schools DT_those ,"[indefensible, his, constituency, ministerial, his, ROOT, he, colleagues, agree, schools, those]",JJ_indefensible PRP$_his NN_constituency JJ_ministerial PRP$_his PRP_he NNS_colleagues VB_agree NNS_schools DT_those ,"[indefensible, his, constituency, ministerial, his, ROOT, he, colleagues, agree, schools, those]",JJ_indefensible PRP$_his NN_constituency JJ_ministerial PRP$_his PRP_he NNS_colleagues VB_agree NNS_schools DT_those ,-3,0,2,2,1,2,2,2,2,2
Will my right hon. Friend remind the EIS that  since the dispute must be solved by negotiation  the best thing it can do for Scottish education is to respond to his invitation to come back and talk?,WillMD myPRP$ rightJJ honNN FriendNNP remindVBZ theDT EISNNP thatWDT sinceIN theDT disputeNN mustMD beVB solvedVBN byIN negotiationNN theDT bestJJS thingNN itPRP canMD doVB forIN ScottishJJ educationNN isVBZ toTO respondVB toTO hisPRP$ invitationNN toTO comeVB backRB andCC talkVB ,"root(ROOT-0, remind-6) aux(remind-6, Will-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(remind-6, Friend-5) det(EIS-8, the-7) dobj(remind-6, EIS-8) mark(is-29, that-9) punct(is-29, ,-10) mark(solved-16, since-11) det(dispute-13, the-12) nsubjpass(solved-16, dispute-13) aux(solved-16, must-14) auxpass(solved-16, be-15) advcl(is-29, solved-16) case(negotiation-18, by-17) nmod:agent(solved-16, negotiation-18) punct(is-29, ,-19) det(thing-22, the-20) amod(thing-22, best-21) nsubj(is-29, thing-22) nsubj(do-25, it-23) aux(do-25, can-24) acl:relcl(thing-22, do-25) case(education-28, for-26) amod(education-28, Scottish-27) nmod:for(do-25, education-28) ccomp(remind-6, is-29) mark(respond-31, to-30) xcomp(is-29, respond-31) case(invitation-34, to-32) nmod:poss(invitation-34, his-33) nmod:to(respond-31, invitation-34) mark(come-36, to-35) acl(invitation-34, come-36) advmod(come-36, back-37) cc(come-36, and-38) acl(invitation-34, talk-39) conj:and(come-36, talk-39) punct(remind-6, ?-40)",0,0,0,"root(ROOT, remind) ax(remind, Will) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(remind, Friend) det(EIS, the) dobj(remind, EIS) mark(is, that) pnct(is, ,) mark(solved, since) det(dispte, the) nsbjpass(solved, dispte) ax(solved, mst) axpass(solved, be) advcl(is, solved) case(negotiation, by) nmod:agent(solved, negotiation) pnct(is, ,) det(thing, the) amod(thing, best) nsbj(is, thing) nsbj(do, it) ax(do, can) acl:relcl(thing, do) case(edcation, for) amod(edcation, Scottish) nmod:for(do, edcation) ccomp(remind, is) mark(respond, to) xcomp(is, respond) case(invitation, to) nmod:poss(invitation, his) nmod:to(respond, invitation) mark(come, to) acl(invitation, come) advmod(come, back) cc(come, and) acl(invitation, talk) conj:and(come, talk) pnct(remind, ?)","root(,VBZ) ax(VBZ,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) det(NNP,DT) dobj(VBZ,NNP) mark(VBZ,WDT) pnct(VBZ,VBZ) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) advcl(VBZ,VBN) case(NN,IN) nmod:agent(VBN,NN) pnct(VBZ,VBZ) det(NN,DT) amod(NN,JJS) nsbj(VBZ,NN) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) case(NN,IN) amod(NN,JJ) nmod:for(VB,NN) ccomp(VBZ,VBZ) mark(VB,TO) xcomp(VBZ,VB) case(NN,TO) nmod:poss(NN,PRP$) nmod:to(VB,NN) mark(VB,TO) acl(NN,VB) advmod(VB,RB) cc(VB,CC) acl(NN,VB) conj:and(VB,VB) pnct(VBZ,VBZ)","[Friend, my, remind, EIS, right, is, ROOT]","[come, remind, his, respond, invitation, talk, Friend, my, EIS, ROOT, is]",9,"[talk, his, respond, come, invitation]","[talk, his, respond, come, invitation]",NN_come VBP_remind PRP$_his VB_respond NN_invitation VB_talk NNP_Friend PRP$_my NNP_EIS VBZ_is ,"[come, remind, his, respond, invitation, talk, Friend, my, EIS, ROOT, is]","[come, remind, his, respond, invitation, talk, Friend, my, EIS, ROOT, is]",NN_come VBP_remind PRP$_his VB_respond NN_invitation VB_talk NNP_Friend PRP$_my NNP_EIS VBZ_is ,"[come, remind, his, respond, invitation, talk, Friend, my, EIS, ROOT, is]",NN_come VBP_remind PRP$_his VB_respond NN_invitation VB_talk NNP_Friend PRP$_my NNP_EIS VBZ_is ,"[come, remind, his, respond, invitation, talk, Friend, my, EIS, ROOT, is]",NN_come VBP_remind PRP$_his VB_respond NN_invitation VB_talk NNP_Friend PRP$_my NNP_EIS VBZ_is ,-3,0,2,0,0,0,0,0,0,0
Whatever happens  the dispute is bound to end by negotiation.,WhateverWDT happensVBZ theDT disputeNN isVBZ boundVBN toTO endVB byIN negotiationNN ,"root(ROOT-0, bound-7) nsubj(happens-2, Whatever-1) advcl(bound-7, happens-2) punct(bound-7, ,-3) det(dispute-5, the-4) nsubjpass(bound-7, dispute-5) auxpass(bound-7, is-6) mark(end-9, to-8) xcomp(bound-7, end-9) case(negotiation-11, by-10) nmod:by(end-9, negotiation-11) punct(bound-7, .-12)",0,0,0,"root(ROOT, bond) nsbj(happens, Whatever) advcl(bond, happens) pnct(bond, ,) det(dispte, the) nsbjpass(bond, dispte) axpass(bond, is) mark(end, to) xcomp(bond, end) case(negotiation, by) nmod:by(end, negotiation) pnct(bond, .)","root(,VBN) nsbj(VBZ,WDT) advcl(VBN,VBZ) pnct(VBN,VBN) det(NN,DT) nsbjpass(VBN,NN) axpass(VBN,VBZ) mark(VB,TO) xcomp(VBN,VB) case(NN,IN) nmod:by(VB,NN) pnct(VBN,VBN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I do not think that anyone would disagree when I say that I have played my part in trying to get negotiations going between the parties as quickly as possible  and I again urge them to do so.,IPRP doVBP notRB thinkVB thatIN anyoneNN wouldMD disagreeVB whenWRB IPRP sayVBP thatIN IPRP haveVBP playedVBN myPRP$ partNN inIN tryingVBG toTO getVB negotiationsNNS goingVBG betweenIN theDT partiesNNS asRB quicklyRB asIN possibleJJ andCC IPRP againRB urgeVBP themPRP toTO doVB soRB ,"root(ROOT-0, think-4) nsubj(think-4, I-1) aux(think-4, do-2) neg(think-4, not-3) mark(disagree-8, that-5) nsubj(disagree-8, anyone-6) aux(disagree-8, would-7) ccomp(think-4, disagree-8) advmod(say-11, when-9) nsubj(say-11, I-10) advcl(disagree-8, say-11) mark(played-15, that-12) nsubj(played-15, I-13) aux(played-15, have-14) ccomp(say-11, played-15) nmod:poss(part-17, my-16) dobj(played-15, part-17) mark(trying-19, in-18) advcl(played-15, trying-19) mark(get-21, to-20) xcomp(trying-19, get-21) dobj(get-21, negotiations-22) acl(negotiations-22, going-23) case(parties-26, between-24) det(parties-26, the-25) nmod:between(going-23, parties-26) advmod(quickly-28, as-27) advmod(going-23, quickly-28) case(possible-30, as-29) advcl:as(quickly-28, possible-30) punct(think-4, ,-31) cc(think-4, and-32) nsubj(urge-35, I-33) advmod(urge-35, again-34) conj:and(think-4, urge-35) dobj(urge-35, them-36) mark(do-38, to-37) xcomp(urge-35, do-38) advmod(do-38, so-39) punct(think-4, .-40)",0,0,0,"root(ROOT, think) nsbj(think, I) ax(think, do) neg(think, not) mark(disagree, that) nsbj(disagree, anyone) ax(disagree, wold) ccomp(think, disagree) advmod(say, when) nsbj(say, I) advcl(disagree, say) mark(played, that) nsbj(played, I) ax(played, have) ccomp(say, played) nmod:poss(part, my) dobj(played, part) mark(trying, in) advcl(played, trying) mark(get, to) xcomp(trying, get) dobj(get, negotiations) acl(negotiations, going) case(parties, between) det(parties, the) nmod:between(going, parties) advmod(qickly, as) advmod(going, qickly) case(possible, as) advcl:as(qickly, possible) pnct(think, ,) cc(think, and) nsbj(rge, I) advmod(rge, again) conj:and(think, rge) dobj(rge, them) mark(do, to) xcomp(rge, do) advmod(do, so) pnct(think, .)","root(,VB) nsbj(VB,PRP) ax(VB,VB) neg(VB,RB) mark(VB,IN) nsbj(VB,NN) ax(VB,MD) ccomp(VB,VB) advmod(VBP,WRB) nsbj(VBP,PRP) advcl(VB,VBP) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(VBP,VBN) nmod:poss(NN,PRP$) dobj(VBN,NN) mark(VBG,IN) advcl(VBN,VBG) mark(VB,TO) xcomp(VBG,VB) dobj(VB,NNS) acl(NNS,VBG) case(NNS,IN) det(NNS,DT) nmod:between(VBG,NNS) advmod(RB,IN) advmod(VBG,RB) case(JJ,IN) advcl:as(RB,JJ) pnct(VB,VB) cc(VB,CC) nsbj(VBP,PRP) advmod(VBP,RB) conj:and(VB,VBP) dobj(VBP,PRP) mark(VB,TO) xcomp(VBP,VB) advmod(VB,RB) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I express my deepest sympathy to my hon. Friend about the effect of targeting on schoolchildren in his constituency.,IPRP expressVBP myPRP$ deepestNN sympathyNN toTO myPRP$ honNN FriendNN aboutIN theDT effectNN ofIN targetingVBG onIN schoolchildrenNNS inIN hisPRP$ constituencyNN ,"root(ROOT-0, express-2) nsubj(express-2, I-1) nmod:poss(sympathy-5, my-3) amod(sympathy-5, deepest-4) dobj(express-2, sympathy-5) case(Friend-9, to-6) nmod:poss(Friend-9, my-7) compound(Friend-9, hon.-8) nmod:to(express-2, Friend-9) case(effect-12, about-10) det(effect-12, the-11) nmod:about(Friend-9, effect-12) mark(targeting-14, of-13) acl(effect-12, targeting-14) case(schoolchildren-16, on-15) nmod:on(targeting-14, schoolchildren-16) case(constituency-19, in-17) nmod:poss(constituency-19, his-18) nmod:in(schoolchildren-16, constituency-19) punct(express-2, .-20)",0,0,0,"root(ROOT, express) nsbj(express, I) nmod:poss(sympathy, my) amod(sympathy, deepest) dobj(express, sympathy) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(express, Friend) case(effect, abot) det(effect, the) nmod:abot(Friend, effect) mark(targeting, of) acl(effect, targeting) case(schoolchildren, on) nmod:on(targeting, schoolchildren) case(constitency, in) nmod:poss(constitency, his) nmod:in(schoolchildren, constitency) pnct(express, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NN,PRP$) amod(NN,NN) dobj(VBP,NN) case(NN,TO) nmod:poss(NN,PRP$) compond(NN,NN) nmod:to(VBP,NN) case(NN,IN) det(NN,DT) nmod:abot(NN,NN) mark(VBG,IN) acl(NN,VBG) case(NNS,IN) nmod:on(VBG,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NNS,NN) pnct(VBP,VBP)","[express, effect, sympathy, I, targeting, my, ROOT, Friend]","[express, constituency, effect, sympathy, schoolchildren, I, targeting, my, ROOT, his, Friend]",10,"[express, constituency, effect, sympathy, schoolchildren, I, targeting, my, ROOT, his, Friend]","[express, constituency, effect, sympathy, schoolchildren, I, targeting, my, ROOT, his, Friend]",VBP_express NN_constituency NN_effect NN_sympathy NNS_schoolchildren PRP_I NN_targeting PRP$_my PRP$_his NNP_Friend ,"[express, constituency, effect, sympathy, schoolchildren, I, targeting, my, ROOT, his, Friend]","[express, constituency, effect, sympathy, schoolchildren, I, targeting, my, ROOT, his, Friend]",VBP_express NN_constituency NN_effect NN_sympathy NNS_schoolchildren PRP_I NN_targeting PRP$_my PRP$_his NNP_Friend ,"[express, constituency, effect, sympathy, schoolchildren, I, targeting, my, ROOT, his, Friend]",VBP_express NN_constituency NN_effect NN_sympathy NNS_schoolchildren PRP_I NN_targeting PRP$_my PRP$_his NNP_Friend ,"[express, constituency, effect, sympathy, schoolchildren, I, targeting, my, ROOT, his, Friend]",VBP_express NN_constituency NN_effect NN_sympathy NNS_schoolchildren PRP_I NN_targeting PRP$_my PRP$_his NNP_Friend ,-3,0,2,0,0,0,2,2,2,2
Having suffered severely from targeting for most of last year  we have discovered in our area that it is extremely counter productive  as all parents of almost all political persuasions think that it is a grossly unfair practice.,HavingVBG sufferedVBN severelyRB fromIN targetingVBG forIN mostJJS ofIN lastJJ yearNN wePRP haveVBP discoveredVBN inIN ourPRP$ areaNN thatIN itPRP isVBZ extremelyRB counterJJ productiveNN asIN allDT parentsNNS ofIN almostRB allDT politicalJJ persuasionsNNS thinkVBP thatIN itPRP isVBZ aDT grosslyRB unfairJJ practiceNN ,"root(ROOT-0, discovered-14) aux(suffered-2, Having-1) advcl(discovered-14, suffered-2) advmod(suffered-2, severely-3) mark(targeting-5, from-4) advcl(suffered-2, targeting-5) case(most-7, for-6) nmod:for(targeting-5, most-7) case(year-10, of-8) amod(year-10, last-9) nmod:of(most-7, year-10) punct(discovered-14, ,-11) nsubj(discovered-14, we-12) aux(discovered-14, have-13) case(area-17, in-15) nmod:poss(area-17, our-16) nmod:in(discovered-14, area-17) mark(counter-22, that-18) nsubj(counter-22, it-19) cop(counter-22, is-20) advmod(counter-22, extremely-21) ccomp(discovered-14, counter-22) xcomp(counter-22, productive-23) punct(counter-22, ,-24) case(parents-27, as-25) det(parents-27, all-26) nmod:as(counter-22, parents-27) case(persuasions-32, of-28) advmod(persuasions-32, almost-29) det(persuasions-32, all-30) amod(persuasions-32, political-31) nmod:of(parents-27, persuasions-32) dep(counter-22, think-33) mark(practice-40, that-34) nsubj(practice-40, it-35) cop(practice-40, is-36) det(practice-40, a-37) advmod(unfair-39, grossly-38) amod(practice-40, unfair-39) ccomp(think-33, practice-40) punct(discovered-14, .-41)",0,0,0,"root(ROOT, discovered) ax(sffered, Having) advcl(discovered, sffered) advmod(sffered, severely) mark(targeting, from) advcl(sffered, targeting) case(most, for) nmod:for(targeting, most) case(year, of) amod(year, last) nmod:of(most, year) pnct(discovered, ,) nsbj(discovered, we) ax(discovered, have) case(area, in) nmod:poss(area, or) nmod:in(discovered, area) mark(conter, that) nsbj(conter, it) cop(conter, is) advmod(conter, extremely) ccomp(discovered, conter) xcomp(conter, prodctive) pnct(conter, ,) case(parents, as) det(parents, all) nmod:as(conter, parents) case(persasions, of) advmod(persasions, almost) det(persasions, all) amod(persasions, political) nmod:of(parents, persasions) dep(conter, think) mark(practice, that) nsbj(practice, it) cop(practice, is) det(practice, a) advmod(nfair, grossly) amod(practice, nfair) ccomp(think, practice) pnct(discovered, .)","root(,VBN) ax(VBN,VBG) advcl(VBN,VBN) advmod(VBN,RB) mark(VBG,IN) advcl(VBN,VBG) case(JJS,IN) nmod:for(VBG,JJS) case(NN,IN) amod(NN,JJ) nmod:of(JJS,NN) pnct(VBN,VBN) nsbj(VBN,PRP) ax(VBN,VBP) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(VBN,NN) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) ccomp(VBN,JJ) xcomp(JJ,NN) pnct(JJ,JJ) case(NNS,IN) det(NNS,DT) nmod:as(JJ,NNS) case(NNS,IN) advmod(NNS,RB) det(NNS,DT) amod(NNS,JJ) nmod:of(NNS,NNS) dep(JJ,VBP) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) ccomp(VBP,NN) pnct(VBN,VBN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
One of the chief difficulties is that very few people seem to have bothered to find out what the offer amounts to.,OneCD ofIN theDT chiefJJ difficultiesNNS isVBZ thatIN veryRB fewJJ peopleNNS seemVBP toTO haveVB botheredVBN toTO findVB outRP whatWP theDT offerNN amountsVBZ toTO ,"root(ROOT-0, is-6) nsubj(is-6, One-1) case(difficulties-5, of-2) det(difficulties-5, the-3) compound(difficulties-5, chief-4) nmod:of(One-1, difficulties-5) mark(seem-11, that-7) advmod(few-9, very-8) amod(people-10, few-9) nsubj(seem-11, people-10) ccomp(is-6, seem-11) mark(bothered-14, to-12) aux(bothered-14, have-13) xcomp(seem-11, bothered-14) mark(find-16, to-15) xcomp(bothered-14, find-16) compound:prt(find-16, out-17) dobj(amounts-21, what-18) det(offer-20, the-19) nsubj(amounts-21, offer-20) ccomp(find-16, amounts-21) nmod(amounts-21, to-22) punct(is-6, .-23)",0,0,0,"root(ROOT, is) nsbj(is, One) case(difficlties, of) det(difficlties, the) compond(difficlties, chief) nmod:of(One, difficlties) mark(seem, that) advmod(few, very) amod(people, few) nsbj(seem, people) ccomp(is, seem) mark(bothered, to) ax(bothered, have) xcomp(seem, bothered) mark(find, to) xcomp(bothered, find) compond:prt(find, ot) dobj(amonts, what) det(offer, the) nsbj(amonts, offer) ccomp(find, amonts) nmod(amonts, to) pnct(is, .)","root(,VBZ) nsbj(VBZ,CD) case(NNS,IN) det(NNS,DT) compond(NNS,JJ) nmod:of(CD,NNS) mark(VBP,IN) advmod(JJ,RB) amod(NNS,JJ) nsbj(VBP,NNS) ccomp(VBZ,VBP) mark(VBN,TO) ax(VBN,VB) xcomp(VBP,VBN) mark(VB,TO) xcomp(VBN,VB) compond:prt(VB,RP) dobj(VBZ,WP) det(NN,DT) nsbj(VBZ,NN) ccomp(VB,VBZ) nmod(VBZ,TO) pnct(VBZ,VBZ)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The offer to the teachers was of extra Government money over four years amounting to 10 per cent.,TheDT offerNN toTO theDT teachersNNS wasVBD ofIN extraJJ GovernmentNNP moneyNN overIN fourCD yearsNNS amountingVBG toTO 10CD perIN centNN ,"root(ROOT-0, money-10) det(offer-2, The-1) nsubj(money-10, offer-2) case(teachers-5, to-3) det(teachers-5, the-4) nmod:to(offer-2, teachers-5) cop(money-10, was-6) case(money-10, of-7) amod(money-10, extra-8) compound(money-10, Government-9) case(years-13, over-11) nummod(years-13, four-12) nmod:over(money-10, years-13) acl(years-13, amounting-14) case(10-16, to-15) nmod:to(amounting-14, 10-16) case(cent-18, per-17) nmod:per(10-16, cent-18) punct(money-10, .-19)",0,0,0,"root(ROOT, money) det(offer, The) nsbj(money, offer) case(teachers, to) det(teachers, the) nmod:to(offer, teachers) cop(money, was) case(money, of) amod(money, extra) compond(money, Government) case(years, over) nmmod(years, for) nmod:over(money, years) acl(years, amonting) case(10, to) nmod:to(amonting, 10) case(cent, per) nmod:per(10, cent) pnct(money, .)","root(,NN) det(NN,DT) nsbj(NN,NN) case(NNS,TO) det(NNS,DT) nmod:to(NN,NNS) cop(NN,VBD) case(NN,IN) amod(NN,JJ) compond(NN,NNP) case(NNS,IN) nmmod(NNS,CD) nmod:over(NN,NNS) acl(NNS,VBG) case(CD,TO) nmod:to(VBG,CD) case(NN,IN) nmod:per(CD,NN) pnct(NN,NN)","[ROOT, years, offer, money, extra]",[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
over and above the annual increases negotiated.,overIN andCC aboveIN theDT annualJJ increasesNNS negotiatedVBD ,"root(ROOT-0, over-1) cc(over-1, and-2) case(increases-6, above-3) det(increases-6, the-4) amod(increases-6, annual-5) conj:and(over-1, increases-6) acl(increases-6, negotiated-7) punct(over-1, .-8)",0,0,0,"root(ROOT, over) cc(over, and) case(increases, above) det(increases, the) amod(increases, annal) conj:and(over, increases) acl(increases, negotiated) pnct(over, .)","root(,IN) cc(IN,CC) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) conj:and(IN,NNS) acl(NNS,VBD) pnct(IN,IN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The teachers are perfectly aware of the offer on the table  and they have determined repeatedly that they are not willing to accept it.,TheDT teachersNNS areVBP perfectlyRB awareJJ ofIN theDT offerNN onIN theDT tableNN andCC theyPRP haveVBP determinedVBN repeatedlyRB thatIN theyPRP areVBP notRB willingJJ toTO acceptVB itPRP ,"root(ROOT-0, aware-5) det(teachers-2, The-1) nsubj(aware-5, teachers-2) cop(aware-5, are-3) advmod(aware-5, perfectly-4) case(offer-8, of-6) det(offer-8, the-7) nmod:of(aware-5, offer-8) case(table-11, on-9) det(table-11, the-10) nmod:on(offer-8, table-11) punct(aware-5, ,-12) cc(aware-5, and-13) nsubj(determined-16, they-14) aux(determined-16, have-15) conj:and(aware-5, determined-16) advmod(determined-16, repeatedly-17) mark(willing-22, that-18) nsubj(willing-22, they-19) cop(willing-22, are-20) neg(willing-22, not-21) ccomp(determined-16, willing-22) mark(accept-24, to-23) xcomp(willing-22, accept-24) dobj(accept-24, it-25) punct(aware-5, .-26)",0,0,0,"root(ROOT, aware) det(teachers, The) nsbj(aware, teachers) cop(aware, are) advmod(aware, perfectly) case(offer, of) det(offer, the) nmod:of(aware, offer) case(table, on) det(table, the) nmod:on(offer, table) pnct(aware, ,) cc(aware, and) nsbj(determined, they) ax(determined, have) conj:and(aware, determined) advmod(determined, repeatedly) mark(willing, that) nsbj(willing, they) cop(willing, are) neg(willing, not) ccomp(determined, willing) mark(accept, to) xcomp(willing, accept) dobj(accept, it) pnct(aware, .)","root(,JJ) det(NNS,DT) nsbj(JJ,NNS) cop(JJ,VBP) advmod(JJ,RB) case(NN,IN) det(NN,DT) nmod:of(JJ,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) pnct(JJ,JJ) cc(JJ,CC) nsbj(VBN,PRP) ax(VBN,VBP) conj:and(JJ,VBN) advmod(VBN,RB) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBP) neg(JJ,RB) ccomp(VBN,JJ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,PRP) pnct(JJ,JJ)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am looking all the time for any way forward in the dispute.,IPRP amVBP lookingVBG allPDT theDT timeNN forIN anyDT wayNN forwardRB inIN theDT disputeNN ,"root(ROOT-0, looking-3) nsubj(looking-3, I-1) aux(looking-3, am-2) det:predet(time-6, all-4) det(time-6, the-5) nmod:tmod(looking-3, time-6) case(way-9, for-7) det(way-9, any-8) nmod:for(looking-3, way-9) advmod(way-9, forward-10) case(dispute-13, in-11) det(dispute-13, the-12) nmod:in(forward-10, dispute-13) punct(looking-3, .-14)",0,1,0,"root(ROOT, looking) nsbj(looking, I) ax(looking, am) det:predet(time, all) det(time, the) nmod:tmod(looking, time) case(way, for) det(way, any) nmod:for(looking, way) advmod(way, forward) case(dispte, in) det(dispte, the) nmod:in(forward, dispte) pnct(looking, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) det:predet(NN,PDT) det(NN,DT) nmod:tmod(VBG,NN) case(NN,IN) det(NN,DT) nmod:for(VBG,NN) advmod(NN,RB) case(NN,IN) det(NN,DT) nmod:in(RB,NN) pnct(VBG,VBG)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Most of the teachers' representatives would agree that great efforts have been made by the Scottish Office and themselves to find a way forward.,MostJJS ofIN theDT teachersNNS 'POS representativesNNS wouldMD agreeVB thatIN greatJJ effortsNNS haveVBP beenVBN madeVBN byIN theDT ScottishJJ OfficeNNP andCC themselvesPRP toTO findVB aDT wayNN forwardNN ,"root(ROOT-0, agree-8) nsubj(agree-8, Most-1) case(representatives-6, of-2) det(teachers-4, the-3) nmod:poss(representatives-6, teachers-4) case(teachers-4, '-5) nmod:of(Most-1, representatives-6) aux(agree-8, would-7) mark(made-14, that-9) amod(efforts-11, great-10) nsubjpass(made-14, efforts-11) aux(made-14, have-12) auxpass(made-14, been-13) ccomp(agree-8, made-14) case(Office-18, by-15) det(Office-18, the-16) amod(Office-18, Scottish-17) nmod:agent(made-14, Office-18) cc(Office-18, and-19) nmod:agent(made-14, themselves-20) conj:and(Office-18, themselves-20) mark(find-22, to-21) xcomp(made-14, find-22) det(way-24, a-23) dobj(find-22, way-24) advmod(way-24, forward-25) punct(agree-8, .-26)",0,0,0,"root(ROOT, agree) nsbj(agree, Most) case(representatives, of) det(teachers, the) nmod:poss(representatives, teachers) ""case(teachers, )"", nmod:of(Most, representatives) ax(agree, wold) mark(made, that) amod(efforts, great) nsbjpass(made, efforts) ax(made, have) axpass(made, been) ccomp(agree, made) case(Office, by) det(Office, the) amod(Office, Scottish) nmod:agent(made, Office) cc(Office, and) nmod:agent(made, themselves) conj:and(Office, themselves) mark(find, to) xcomp(made, find) det(way, a) dobj(find, way) advmod(way, forward) pnct(agree, .)","root(,VB) nsbj(VB,JJS) case(NNS,IN) det(NNS,DT) nmod:poss(NNS,NNS) case(NNS,POS) nmod:of(JJS,NNS) ax(VB,MD) mark(VBN,IN) amod(NNS,JJ) nsbjpass(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBN) ccomp(VB,VBN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:agent(VBN,NNP) cc(NNP,CC) nmod:agent(VBN,PRP) conj:and(NNP,PRP) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) dobj(VB,NN) advmod(NN,NN) pnct(VB,VB)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am in no doubt whatever that teachers feel that they are under remunerated  under appreciated and badly treated.,IPRP amVBP inIN noDT doubtNN whateverWDT thatIN teachersNNS feelVBP thatIN theyPRP areVBP underIN remuneratedVBN underIN appreciatedVBN andCC badlyRB treatedVBD ,"root(ROOT-0, doubt-5) nsubj(doubt-5, I-1) cop(doubt-5, am-2) case(doubt-5, in-3) neg(doubt-5, no-4) dobj(feel-9, whatever-6) det(teachers-8, that-7) nsubj(feel-9, teachers-8) acl:relcl(doubt-5, feel-9) mark(remunerated-14, that-10) nsubj(remunerated-14, they-11) cop(remunerated-14, are-12) case(remunerated-14, under-13) ccomp(feel-9, remunerated-14) punct(doubt-5, ,-15) case(appreciated-17, under-16) acl:under(doubt-5, appreciated-17) cc(appreciated-17, and-18) advmod(treated-20, badly-19) acl:under(doubt-5, treated-20) conj:and(appreciated-17, treated-20) punct(doubt-5, .-21)",0,0,0,"root(ROOT, dobt) nsbj(dobt, I) cop(dobt, am) case(dobt, in) neg(dobt, no) dobj(feel, whatever) det(teachers, that) nsbj(feel, teachers) acl:relcl(dobt, feel) mark(remnerated, that) nsbj(remnerated, they) cop(remnerated, are) case(remnerated, nder) ccomp(feel, remnerated) pnct(dobt, ,) case(appreciated, nder) acl:nder(dobt, appreciated) cc(appreciated, and) advmod(treated, badly) acl:nder(dobt, treated) conj:and(appreciated, treated) pnct(dobt, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBP) case(NN,IN) neg(NN,DT) dobj(VBP,WDT) det(NNS,IN) nsbj(VBP,NNS) acl:relcl(NN,VBP) mark(VBN,IN) nsbj(VBN,PRP) cop(VBN,VBP) case(VBN,IN) ccomp(VBP,VBN) pnct(NN,NN) case(VBN,IN) acl:nder(NN,VBN) cc(VBN,CC) advmod(VBD,RB) acl:nder(NN,VBD) conj:and(VBN,VBD) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is why I have been trying since December last year to find a way of paying them more money.,ThatDT isVBZ whyWRB IPRP haveVBP beenVBN tryingVBG sinceIN DecemberNNP lastJJ yearNN toTO findVB aDT wayNN ofIN payingVBG themPRP moreJJR moneyNN ,"root(ROOT-0, is-2) nsubj(is-2, That-1) advmod(trying-7, why-3) nsubj(trying-7, I-4) aux(trying-7, have-5) aux(trying-7, been-6) advcl(is-2, trying-7) case(December-9, since-8) nmod:since(trying-7, December-9) amod(year-11, last-10) nmod:tmod(trying-7, year-11) mark(find-13, to-12) xcomp(trying-7, find-13) det(way-15, a-14) dobj(find-13, way-15) mark(paying-17, of-16) acl(way-15, paying-17) iobj(paying-17, them-18) amod(money-20, more-19) dobj(paying-17, money-20) punct(is-2, .-21)",0,0,0,"root(ROOT, is) nsbj(is, That) advmod(trying, why) nsbj(trying, I) ax(trying, have) ax(trying, been) advcl(is, trying) case(December, since) nmod:since(trying, December) amod(year, last) nmod:tmod(trying, year) mark(find, to) xcomp(trying, find) det(way, a) dobj(find, way) mark(paying, of) acl(way, paying) iobj(paying, them) amod(money, more) dobj(paying, money) pnct(is, .)","root(,VBZ) nsbj(VBZ,DT) advmod(VBG,WRB) nsbj(VBG,PRP) ax(VBG,VBP) ax(VBG,VBN) advcl(VBZ,VBG) case(NNP,IN) nmod:since(VBG,NNP) amod(NN,JJ) nmod:tmod(VBG,NN) mark(VB,TO) xcomp(VBG,VB) det(NN,DT) dobj(VB,NN) mark(VBG,IN) acl(NN,VBG) iobj(VBG,PRP) amod(NN,JJR) dobj(VBG,NN) pnct(VBZ,VBZ)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is time that the vast majority of teachers responded and came to discussions to make use of the offers.,ItPRP isVBZ timeNN thatIN theDT vastJJ majorityNN ofIN teachersNNS respondedVBD andCC cameVBD toTO discussionsNNS toTO makeVB useNN ofIN theDT offersNNS ,"root(ROOT-0, time-3) nsubj(time-3, It-1) cop(time-3, is-2) mark(responded-10, that-4) det(majority-7, the-5) amod(majority-7, vast-6) nsubj(responded-10, majority-7) nsubj(came-12, majority-7) case(teachers-9, of-8) nmod:of(majority-7, teachers-9) ccomp(time-3, responded-10) cc(responded-10, and-11) ccomp(time-3, came-12) conj:and(responded-10, came-12) case(discussions-14, to-13) nmod:to(came-12, discussions-14) mark(make-16, to-15) acl(discussions-14, make-16) dobj(make-16, use-17) case(offers-20, of-18) det(offers-20, the-19) nmod:of(use-17, offers-20) punct(time-3, .-21)",0,0,1,"root(ROOT, time) nsbj(time, It) cop(time, is) mark(responded, that) det(majority, the) amod(majority, vast) nsbj(responded, majority) nsbj(came, majority) case(teachers, of) nmod:of(majority, teachers) ccomp(time, responded) cc(responded, and) ccomp(time, came) conj:and(responded, came) case(discssions, to) nmod:to(came, discssions) mark(make, to) acl(discssions, make) dobj(make, se) case(offers, of) det(offers, the) nmod:of(se, offers) pnct(time, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) mark(VBD,IN) det(NN,DT) amod(NN,JJ) nsbj(VBD,NN) nsbj(VBD,NN) case(NNS,IN) nmod:of(NN,NNS) ccomp(NN,VBD) cc(VBD,CC) ccomp(NN,VBD) conj:and(VBD,VBD) case(NNS,TO) nmod:to(VBD,NNS) mark(VB,TO) acl(NNS,VB) dobj(VB,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Secretary of State confirm that the 10 per cent.,WillMD theDT SecretaryNNP ofIN StateNNP confirmNN thatIN theDT 10CD perIN centNN ,"root(ROOT-0, confirm-6) aux(confirm-6, Will-1) det(Secretary-3, the-2) nsubj(confirm-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) dobj(confirm-6, that-7) dep(that-7, the-8) amod(the-8, 10-9) case(cent-11, per-10) nmod:per(10-9, cent-11) punct(confirm-6, .-12)",0,1,0,"root(ROOT, confirm) ax(confirm, Will) det(Secretary, the) nsbj(confirm, Secretary) case(State, of) nmod:of(Secretary, State) dobj(confirm, that) dep(that, the) amod(the, 10) case(cent, per) nmod:per(10, cent) pnct(confirm, .)","root(,NN) ax(NN,MD) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) dobj(NN,IN) dep(IN,DT) amod(DT,CD) case(NN,IN) nmod:per(CD,NN) pnct(NN,NN)","[confirm, ROOT, State, Secretary, that]","[confirm, ROOT, State, Secretary, that]",17,[ ],[ ],NN_confirm NNP_State NNP_Secretary IN_that ,"[confirm, ROOT, State, Secretary, that]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
to which he refers is 10 per cent.,toTO whichWDT hePRP refersVBZ isVBZ 10CD perIN centNN ,"root(ROOT-0, refers-4) case(which-2, to-1) nmod:to(refers-4, which-2) nsubj(refers-4, he-3) xcomp(refers-4, is-5) nsubj(is-5, 10-6) case(cent-8, per-7) nmod:per(10-6, cent-8) punct(refers-4, .-9)",0,0,0,"root(ROOT, refers) case(which, to) nmod:to(refers, which) nsbj(refers, he) xcomp(refers, is) nsbj(is, 10) case(cent, per) nmod:per(10, cent) pnct(refers, .)","root(,VBZ) case(WDT,TO) nmod:to(VBZ,WDT) nsbj(VBZ,PRP) xcomp(VBZ,VBZ) nsbj(VBZ,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBZ,VBZ)","[ROOT, refers, which, is, he]","[ROOT, refers, which, is, he]",17,"[ROOT, refers, which, is, he]","[ROOT, refers, which, is, he]",VBZ_refers WDT_which VBZ_is PRP_he ,"[ROOT, refers, which, is, he]","[ROOT, refers, which, is, he]",VBZ_refers WDT_which VBZ_is PRP_he ,[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the first year's salary  and not this is the impression that he giving 10 per cent.,ofIN theDT firstJJ yearNN 'sPOS salaryNN andCC notRB thisDT isVBZ theDT impressionNN thatIN hePRP givingVBG 10CD perIN centNN ,"root(ROOT-0, salary-6) case(salary-6, of-1) det(year-4, the-2) amod(year-4, first-3) nmod:poss(salary-6, year-4) case(year-4, 's-5) punct(salary-6, ,-7) cc(salary-6, and-8) neg(this-10, not-9) nsubj(impression-13, this-10) cop(impression-13, is-11) det(impression-13, the-12) conj:and(salary-6, impression-13) mark(giving-16, that-14) nsubj(giving-16, he-15) ccomp(impression-13, giving-16) dobj(giving-16, 10-17) case(cent-19, per-18) nmod:per(10-17, cent-19) punct(salary-6, .-20)",0,0,0,"root(ROOT, salary) case(salary, of) det(year, the) amod(year, first) nmod:poss(salary, year) ""case(year, s)"", pnct(salary, ,) cc(salary, and) neg(this, not) nsbj(impression, this) cop(impression, is) det(impression, the) conj:and(salary, impression) mark(giving, that) nsbj(giving, he) ccomp(impression, giving) dobj(giving, 10) case(cent, per) nmod:per(10, cent) pnct(salary, .)","root(,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:poss(NN,NN) case(NN,POS) pnct(NN,NN) cc(NN,CC) neg(DT,RB) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) conj:and(NN,NN) mark(VBG,IN) nsbj(VBG,PRP) ccomp(NN,VBG) dobj(VBG,CD) case(NN,IN) nmod:per(CD,NN) pnct(NN,NN)","[impression, giving, he, 10]","[impression, giving, he, 10]",17,"[impression, giving, he, 10]","[impression, giving, he, 10]",NN_impression VBG_giving PRP_he CD_10 ,"[impression, giving, he, 10]","[impression, giving, he, 10]",NN_impression VBG_giving PRP_he CD_10 ,"[impression, giving, he, 10]",NN_impression VBG_giving PRP_he CD_10 ,"[impression, giving, he, 10]",NN_impression VBG_giving PRP_he CD_10 ,-3,0,2,0,0,0,0,0,0,0
of the third or fourth year's salary.,ofIN theDT thirdJJ orCC fourthJJ yearNN 'sPOS salaryNN ,"root(ROOT-0, salary-8) case(salary-8, of-1) det(year-6, the-2) amod(year-6, third-3) cc(third-3, or-4) conj:or(third-3, fourth-5) amod(year-6, fourth-5) nmod:poss(salary-8, year-6) case(year-6, 's-7) punct(salary-8, .-9)",0,0,0,"root(ROOT, salary) case(salary, of) det(year, the) amod(year, third) cc(third, or) conj:or(third, forth) amod(year, forth) nmod:poss(salary, year) ""case(year, s)"", pnct(salary, .)","root(,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) cc(JJ,CC) conj:or(JJ,JJ) amod(NN,JJ) nmod:poss(NN,NN) case(NN,POS) pnct(NN,NN)",[ ],[ ],17,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is very important that that should be made clear.,ItPRP isVBZ veryRB importantJJ thatIN thatDT shouldMD beVB madeVBN clearJJ ,"root(ROOT-0, important-4) nsubj(important-4, It-1) cop(important-4, is-2) advmod(important-4, very-3) mark(made-9, that-5) nsubjpass(made-9, that-6) aux(made-9, should-7) auxpass(made-9, be-8) ccomp(important-4, made-9) xcomp(made-9, clear-10) punct(important-4, .-11)",0,0,0,"root(ROOT, important) nsbj(important, It) cop(important, is) advmod(important, very) mark(made, that) nsbjpass(made, that) ax(made, shold) axpass(made, be) ccomp(important, made) xcomp(made, clear) pnct(important, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) mark(VBN,DT) nsbjpass(VBN,DT) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) xcomp(VBN,JJ) pnct(JJ,JJ)",[ ],[ ],17,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The Secretary of State said at Gleneagles last week and he has repeated it today that he appreciates that the teachers are fed up and feel that their value to society is not being recognised.,TheDT SecretaryNNP ofIN StateNNP saidVBD atIN GleneaglesNNP lastJJ weekNN andCC hePRP hasVBZ repeatedVBN itPRP todayNN thatIN hePRP appreciatesVBZ thatIN theDT teachersNNS areVBP fedVBN upRP andCC feelVB thatIN theirPRP$ valueNN toTO societyNN isVBZ notRB beingVBG recognisedVBN ,"root(ROOT-0, said-5) det(Secretary-2, The-1) nsubj(said-5, Secretary-2) case(State-4, of-3) nmod:of(Secretary-2, State-4) case(Gleneagles-7, at-6) nmod:at(said-5, Gleneagles-7) amod(week-9, last-8) nmod:tmod(said-5, week-9) cc(said-5, and-10) nsubj(repeated-13, he-11) aux(repeated-13, has-12) conj:and(said-5, repeated-13) dobj(repeated-13, it-14) nmod:tmod(repeated-13, today-15) mark(appreciates-18, that-16) nsubj(appreciates-18, he-17) ccomp(repeated-13, appreciates-18) mark(fed-23, that-19) det(teachers-21, the-20) nsubjpass(fed-23, teachers-21) nsubj(feel-26, teachers-21) auxpass(fed-23, are-22) ccomp(appreciates-18, fed-23) compound:prt(fed-23, up-24) cc(fed-23, and-25) ccomp(appreciates-18, feel-26) conj:and(fed-23, feel-26) mark(recognised-35, that-27) nmod:poss(value-29, their-28) nsubjpass(recognised-35, value-29) case(society-31, to-30) nmod:to(value-29, society-31) aux(recognised-35, is-32) neg(recognised-35, not-33) auxpass(recognised-35, being-34) ccomp(feel-26, recognised-35) punct(said-5, .-36)",0,0,0,"root(ROOT, said) det(Secretary, The) nsbj(said, Secretary) case(State, of) nmod:of(Secretary, State) case(Gleneagles, at) nmod:at(said, Gleneagles) amod(week, last) nmod:tmod(said, week) cc(said, and) nsbj(repeated, he) ax(repeated, has) conj:and(said, repeated) dobj(repeated, it) nmod:tmod(repeated, today) mark(appreciates, that) nsbj(appreciates, he) ccomp(repeated, appreciates) mark(fed, that) det(teachers, the) nsbjpass(fed, teachers) nsbj(feel, teachers) axpass(fed, are) ccomp(appreciates, fed) compond:prt(fed, p) cc(fed, and) ccomp(appreciates, feel) conj:and(fed, feel) mark(recognised, that) nmod:poss(vale, their) nsbjpass(recognised, vale) case(society, to) nmod:to(vale, society) ax(recognised, is) neg(recognised, not) axpass(recognised, being) ccomp(feel, recognised) pnct(said, .)","root(,VBD) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:at(VBD,NNP) amod(NN,JJ) nmod:tmod(VBD,NN) cc(VBD,CC) nsbj(VBN,PRP) ax(VBN,VBZ) conj:and(VBD,VBN) dobj(VBN,PRP) nmod:tmod(VBN,NN) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VBN,VBZ) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) nsbj(VB,NNS) axpass(VBN,VBP) ccomp(VBZ,VBN) compond:prt(VBN,RP) cc(VBN,CC) ccomp(VBZ,VB) conj:and(VBN,VB) mark(VBN,IN) nmod:poss(NN,PRP$) nsbjpass(VBN,NN) case(NN,TO) nmod:to(NN,NN) ax(VBN,VBZ) neg(VBN,RB) axpass(VBN,VBG) ccomp(VB,VBN) pnct(VBD,VBD)","[and, it, Gleneagles, he, feel, State, he, repeated, today, Secretary, appreciates, ROOT, said, week, fed]","[and, it, Gleneagles, he, feel, State, he, repeated, today, Secretary, appreciates, ROOT, said, week, fed]",17,"[and, State, appreciates, feel, Gleneagles, he, repeated, Secretary, ROOT, said, week, fed]","[and, State, appreciates, feel, Gleneagles, he, repeated, Secretary, ROOT, said, week, fed]",CC_and PRP_it NNP_Gleneagles PRP_he VBP_feel NNP_State PRP_he VBN_repeated NN_today NNP_Secretary VBZ_appreciates VBD_said NN_week VBN_fed ,"[and, it, Gleneagles, he, feel, State, he, repeated, today, Secretary, appreciates, ROOT, said, week, fed]","[and, it, Gleneagles, he, feel, State, he, repeated, today, Secretary, appreciates, ROOT, said, week, fed]",CC_and PRP_it NNP_Gleneagles PRP_he VBP_feel NNP_State PRP_he VBN_repeated NN_today NNP_Secretary VBZ_appreciates VBD_said NN_week VBN_fed ,"[and, it, Gleneagles, he, feel, State, he, repeated, today, Secretary, appreciates, ROOT, said, week, fed]",CC_and PRP_it NNP_Gleneagles PRP_he VBP_feel NNP_State PRP_he VBN_repeated NN_today NNP_Secretary VBZ_appreciates VBD_said NN_week VBN_fed ,"[and, it, Gleneagles, he, feel, State, he, repeated, today, Secretary, appreciates, ROOT, said, week, fed]",CC_and PRP_it NNP_Gleneagles PRP_he VBP_feel NNP_State PRP_he VBN_repeated NN_today NNP_Secretary VBZ_appreciates VBD_said NN_week VBN_fed ,-3,0,2,1,1,1,1,1,1,2
What will he do about that in practical terms?,WhatWP willMD hePRP doVB aboutIN thatDT inIN practicalJJ termsNNS ,"root(ROOT-0, do-4) dobj(do-4, What-1) aux(do-4, will-2) nsubj(do-4, he-3) case(that-6, about-5) nmod:about(do-4, that-6) case(terms-9, in-7) amod(terms-9, practical-8) nmod:in(that-6, terms-9) punct(do-4, ?-10)",0,0,0,"root(ROOT, do) dobj(do, What) ax(do, will) nsbj(do, he) case(that, abot) nmod:abot(do, that) case(terms, in) amod(terms, practical) nmod:in(that, terms) pnct(do, ?)","root(,VB) VBbj(VB,WP) ax(VB,MD) nsbj(VB,PRP) case(DT,IN) nmod:abot(VB,DT) case(NNS,IN) amod(NNS,JJ) nmod:in(DT,NNS) pnct(VB,VB)","[ROOT, What, do, that, he]","[ROOT, What, do, that, he]",17,[ ],[ ],WP_What VB_do IN_that PRP_he ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is what has to be understood.,ThatDT isVBZ whatWDT hasVBZ toTO beVB understoodJJ ,"root(ROOT-0, is-2) nsubj(is-2, That-1) nsubj(has-4, what-3) ccomp(is-2, has-4) mark(understood-7, to-5) auxpass(understood-7, be-6) xcomp(has-4, understood-7) punct(is-2, .-8)",0,0,0,"root(ROOT, is) nsbj(is, That) nsbj(has, what) ccomp(is, has) mark(nderstood, to) axpass(nderstood, be) xcomp(has, nderstood) pnct(is, .)","root(,VBZ) nsbj(VBZ,DT) nsbj(VBZ,WDT) ccomp(VBZ,VBZ) mark(JJ,TO) axpass(JJ,VB) xcomp(VBZ,JJ) pnct(VBZ,VBZ)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
There is no doubt whatever that if the boycott by all the teachers of the examination process really does take place  while the Examination Board will do everything it can to run the examinations  such a boycott is bound to cause considerable damage to the examination system.,ThereEX isVBZ noDT doubtNN whateverWDT thatIN ifIN theDT boycottNN byIN allPDT theDT teachersNNS ofIN theDT examinationNN processNN reallyRB doesVBZ takeVB placeNN whileIN theDT ExaminationNNP BoardNNP willMD doVB everythingNN itPRP canMD toTO runVB theDT examinationsNNS suchJJ aDT boycottNN isVBZ boundVBN toTO causeVB considerableJJ damageNN toTO theDT examinationNN systemNN ,"root(ROOT-0, is-2) expl(is-2, There-1) neg(doubt-4, no-3) nsubj(is-2, doubt-4) dep(doubt-4, whatever-5) root(whatever-5, that-6) mark(take-20, if-7) det(boycott-9, the-8) nsubj(take-20, boycott-9) case(teachers-13, by-10) det:predet(teachers-13, all-11) det(teachers-13, the-12) nmod:by(boycott-9, teachers-13) case(process-17, of-14) det(process-17, the-15) compound(process-17, examination-16) nmod:of(teachers-13, process-17) advmod(take-20, really-18) aux(take-20, does-19) dep(that-6, take-20) dobj(take-20, place-21) punct(take-20, ,-22) mark(do-28, while-23) det(Board-26, the-24) compound(Board-26, Examination-25) nsubj(do-28, Board-26) aux(do-28, will-27) root(,-22, do-28) dobj(do-28, everything-29) nsubj(run-33, it-30) aux(run-33, can-31) mark(run-33, to-32) acl:relcl(everything-29, run-33) det(examinations-35, the-34) dobj(run-33, examinations-35) punct(examinations-35, ,-36) det:predet(boycott-39, such-37) det(boycott-39, a-38) nsubjpass(bound-41, boycott-39) auxpass(bound-41, is-40) acl:relcl(examinations-35, bound-41) mark(cause-43, to-42) xcomp(bound-41, cause-43) amod(damage-45, considerable-44) dobj(cause-43, damage-45) case(system-49, to-46) det(system-49, the-47) compound(system-49, examination-48) nmod:to(damage-45, system-49) punct(do-28, .-50)",0,0,0,"root(ROOT, is) expl(is, There) neg(dobt, no) nsbj(is, dobt) dep(dobt, whatever) root(whatever, that) mark(take, if) det(boycott, the) nsbj(take, boycott) case(teachers, by) det:predet(teachers, all) det(teachers, the) nmod:by(boycott, teachers) case(process, of) det(process, the) compond(process, examination) nmod:of(teachers, process) advmod(take, really) ax(take, does) dep(that, take) dobj(take, place) pnct(take, ,) mark(do, while) det(Board, the) compond(Board, Examination) nsbj(do, Board) ax(do, will) root(,, do) dobj(do, everything) nsbj(rn, it) ax(rn, can) mark(rn, to) acl:relcl(everything, rn) det(examinations, the) dobj(rn, examinations) pnct(examinations, ,) det:predet(boycott, sch) det(boycott, a) nsbjpass(bond, boycott) axpass(bond, is) acl:relcl(examinations, bond) mark(case, to) xcomp(bond, case) amod(damage, considerable) dobj(case, damage) case(system, to) det(system, the) compond(system, examination) nmod:to(damage, system) pnct(do, .)","root(,VBZ) expl(VBZ,EX) neg(NN,DT) nsbj(VBZ,NN) dep(NN,WDT) root(WDT,IN) mark(VB,IN) det(NN,DT) nsbj(VB,NN) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:by(NN,NNS) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NNS,NN) advmod(VB,RB) ax(VB,VBZ) dep(IN,VB) dobj(VB,NN) pnct(VB,VB) mark(VB,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) root(MDMDVB) VBbj(VB,NN) nsbj(VB,PRP) ax(VB,MD) mark(VB,TO) acl:relcl(NN,VB) det(NNS,DT) dobj(VB,NNS) pnct(NNS,NNS) det:predet(NN,JJ) det(NN,DT) nsbjpass(VBN,NN) axpass(VBN,VBZ) acl:relcl(NNS,VBN) mark(VB,TO) xcomp(VBN,VB) amod(NN,JJ) dobj(VB,NN) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(NN,NN) pnct(VB,VB)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is an additional reason why all concerned ought to try their best to change their positions to resolve the dispute.,ThatDT isVBZ anDT additionalJJ reasonNN whyWRB allDT concernedVBN oughtMD toTO tryVB theirPRP$ bestJJS toTO changeVB theirPRP$ positionsNNS toTO resolveVB theDT disputeNN ,"root(ROOT-0, reason-5) nsubj(reason-5, That-1) cop(reason-5, is-2) det(reason-5, an-3) amod(reason-5, additional-4) advmod(concerned-8, why-6) nsubj(concerned-8, all-7) acl:relcl(reason-5, concerned-8) ccomp(concerned-8, ought-9) mark(try-11, to-10) xcomp(ought-9, try-11) nmod:poss(best-13, their-12) dobj(try-11, best-13) mark(change-15, to-14) xcomp(try-11, change-15) nmod:poss(positions-17, their-16) dobj(change-15, positions-17) mark(resolve-19, to-18) advcl(change-15, resolve-19) det(dispute-21, the-20) dobj(resolve-19, dispute-21) punct(reason-5, .-22)",0,0,0,"root(ROOT, reason) nsbj(reason, That) cop(reason, is) det(reason, an) amod(reason, additional) advmod(concerned, why) nsbj(concerned, all) acl:relcl(reason, concerned) ccomp(concerned, oght) mark(try, to) xcomp(oght, try) nmod:poss(best, their) dobj(try, best) mark(change, to) xcomp(try, change) nmod:poss(positions, their) dobj(change, positions) mark(resolve, to) advcl(change, resolve) det(dispte, the) dobj(resolve, dispte) pnct(reason, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) advmod(VBN,WRB) nsbj(VBN,DT) acl:relcl(NN,VBN) ccomp(VBN,MD) mark(VB,TO) xcomp(MD,VB) nmod:poss(JJS,PRP$) dobj(VB,JJS) mark(VB,TO) xcomp(VB,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) mark(VB,TO) advcl(VB,VB) det(NN,DT) dobj(VB,NN) pnct(NN,NN)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I shall certainly do all I can to bring that about.,IPRP shallMD certainlyRB doVB allDT IPRP canMD toTO bringVB thatDT aboutIN ,"root(ROOT-0, do-4) nsubj(do-4, I-1) aux(do-4, shall-2) advmod(do-4, certainly-3) det(I-6, all-5) nsubj(can-7, I-6) ccomp(do-4, can-7) mark(bring-9, to-8) xcomp(can-7, bring-9) dobj(bring-9, that-10) advmod(bring-9, about-11) punct(do-4, .-12)",0,0,1,"root(ROOT, do) nsbj(do, I) ax(do, shall) advmod(do, certainly) det(I, all) nsbj(can, I) ccomp(do, can) mark(bring, to) xcomp(can, bring) dobj(bring, that) advmod(bring, abot) pnct(do, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) det(PRP,DT) nsbj(MD,PRP) ccomp(VB,MD) mark(VB,TO) xcomp(MD,VB) dobj(VB,DT) advmod(VB,IN) pnct(VB,VB)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
asked the Secretary of State for Transport if he will make a statement on progress towards the privatisation of British Airways.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN TransportNNP ifIN hePRP willMD makeVB aDT statementNN onIN progressNN towardsIN theDT privatisationNN ofIN BritishNNP AirwaysNNP ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Transport-7, for-6) nmod:for(asked-1, Transport-7) mark(make-11, if-8) nsubj(make-11, he-9) aux(make-11, will-10) advcl(asked-1, make-11) det(statement-13, a-12) dobj(make-11, statement-13) case(progress-15, on-14) nmod:on(make-11, progress-15) case(privatisation-18, towards-16) det(privatisation-18, the-17) nmod:towards(progress-15, privatisation-18) case(Airways-21, of-19) compound(Airways-21, British-20) nmod:of(privatisation-18, Airways-21) punct(asked-1, .-22)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Transport, for) nmod:for(asked, Transport) mark(make, if) nsbj(make, he) ax(make, will) advcl(asked, make) det(statement, a) dobj(make, statement) case(progress, on) nmod:on(make, progress) case(privatisation, towards) det(privatisation, the) nmod:towards(progress, privatisation) case(Airways, of) compond(Airways, British) nmod:of(privatisation, Airways) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(VBN,NNP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VBN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:on(VB,NN) case(NN,IN) det(NN,DT) nmod:towards(NN,NN) case(NNP,IN) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VBN,VBN)","[Transport, State, he, Secretary, ROOT, asked, make, statement, progress]","[Transport, State, he, Secretary, ROOT, asked, make, statement, progress]",1,"[Transport, Secretary, ROOT, asked, State, make]","[Transport, Secretary, ROOT, asked, State, make]",NNP_Transport NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NN_progress ,"[Transport, State, he, Secretary, ROOT, asked, make, statement, progress]","[Transport, State, he, Secretary, ROOT, asked, make, statement, progress]",NNP_Transport NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NN_progress ,"[Transport, State, he, Secretary, ROOT, asked, make, statement, progress]",NNP_Transport NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NN_progress ,"[Transport, State, he, Secretary, ROOT, asked, make, statement, progress]",NNP_Transport NNP_State PRP_he NNP_Secretary VBN_asked VB_make NN_statement NN_progress ,-3,0,2,1,1,1,1,1,1,2
I refer my hon. Friend to the answer I gave to my hon. Friend the Member for the hon. Member for Keighley (Mr. Waller) on 12 March.,IPRP referVBP myPRP$ honNN FriendNNP toTO theDT answerNN IPRP gaveVBD toTO myPRP$ honNN FriendNNP theDT MemberNNP forIN theDT honNN MemberNNP forIN KeighleyNNP (( MrNNP WallerNNP )) onIN 12CD MarchNNP ,"root(ROOT-0, refer-2) nsubj(refer-2, I-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) dobj(refer-2, Friend-5) case(answer-8, to-6) det(answer-8, the-7) nmod:to(refer-2, answer-8) nsubj(gave-10, I-9) acl:relcl(answer-8, gave-10) case(Friend-14, to-11) nmod:poss(Friend-14, my-12) compound(Friend-14, hon.-13) nmod:to(gave-10, Friend-14) det(Member-16, the-15) dep(Friend-14, Member-16) case(Member-20, for-17) det(Member-20, the-18) compound(Member-20, hon.-19) nmod:for(Member-16, Member-20) case(Keighley-22, for-21) nmod:for(Member-20, Keighley-22) punct(Waller-25, -LRB--23) compound(Waller-25, Mr.-24) appos(Member-16, Waller-25) punct(Waller-25, -RRB--26) case(March-29, on-27) nummod(March-29, 12-28) nmod:on(Member-16, March-29) punct(refer-2, .-30)",0,1,1,"root(ROOT, refer) nsbj(refer, I) nmod:poss(Friend, my) compond(Friend, hon.) dobj(refer, Friend) case(answer, to) det(answer, the) nmod:to(refer, answer) nsbj(gave, I) acl:relcl(answer, gave) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gave, Friend) det(Member, the) dep(Friend, Member) case(Member, for) det(Member, the) compond(Member, hon.) nmod:for(Member, Member) case(Keighley, for) nmod:for(Member, Keighley) pnct(Waller, ) compond(Waller, Mr.) appos(Member, Waller) pnct(Waller, ) case(March, on) nmmod(March, 12) nmod:on(Member, March) pnct(refer, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NNP,PRP$) compond(NNP,NNP) dobj(VBP,NNP) case(NN,TO) det(NN,DT) nmod:to(VBP,NN) nsbj(VBD,PRP) acl:relcl(NN,VBD) case(NNP,TO) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:to(VBD,NNP) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:for(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) case(NNP,IN) nmmod(NNP,CD) nmod:on(NNP,NNP) pnct(VBP,VBP)","[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]","[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]",2,"[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]","[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]",NNP_Member NNP_Member PRP_I PRP_I NNP_Friend VBD_gave NNP_Waller NNP_Friend PRP$_my PRP$_my NN_answer NNP_Keighley NNP_March VBP_refer CD_12 ,"[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]","[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]",NNP_Member NNP_Member PRP_I PRP_I NNP_Friend VBD_gave NNP_Waller NNP_Friend PRP$_my PRP$_my NN_answer NNP_Keighley NNP_March VBP_refer CD_12 ,"[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]",NNP_Member NNP_Member PRP_I PRP_I NNP_Friend VBD_gave NNP_Waller NNP_Friend PRP$_my PRP$_my NN_answer NNP_Keighley NNP_March VBP_refer CD_12 ,"[Member, Member, I, I, Friend, ROOT, gave, Waller, Friend, my, my, answer, Keighley, March, refer, 12]",NNP_Member NNP_Member PRP_I PRP_I NNP_Friend VBD_gave NNP_Waller NNP_Friend PRP$_my PRP$_my NN_answer NNP_Keighley NNP_March VBP_refer CD_12 ,-3,0,1,0,0,0,0,0,0,0
Now that privatisation has been postponed  and without prejudice to the current talk of a management buy out  will my right hon. Friend be able to reassure me that the other principal plank of the Government's aviation policy  the cultivation and encouragement of competition among British airlines on the appropriate routes  is not equally likely to be postponed?,NowRB thatDT privatisationNN hasVBZ beenVBN postponedVBN andCC withoutIN prejudiceNN toTO theDT currentJJ talkNN ofIN aDT managementNN buyNN outIN willMD myPRP$ rightJJ honNN FriendNNP beVB ableJJ toTO reassureVB mePRP thatIN theDT otherJJ principalJJ plankNN ofIN theDT GovernmentNNP 'sPOS aviationNN policyNN theDT cultivationNN andCC encouragementNN ofIN competitionNN amongIN BritishNNP airlinesNNS onIN theDT appropriateJJ routesNNS isVBZ notRB equallyRB likelyJJ toTO beVB postponedVBN ,"root(ROOT-0, able-27) advmod(postponed-6, Now-1) mark(postponed-6, that-2) nsubjpass(postponed-6, privatisation-3) aux(postponed-6, has-4) auxpass(postponed-6, been-5) advcl(able-27, postponed-6) punct(postponed-6, ,-7) cc(postponed-6, and-8) case(prejudice-10, without-9) conj:and(postponed-6, prejudice-10) advcl(able-27, prejudice-10) case(talk-14, to-11) det(talk-14, the-12) amod(talk-14, current-13) nmod:to(prejudice-10, talk-14) case(management-17, of-15) det(management-17, a-16) nmod:of(talk-14, management-17) acl(management-17, buy-18) compound:prt(buy-18, out-19) punct(able-27, ,-20) aux(able-27, will-21) nmod:poss(Friend-25, my-22) amod(Friend-25, right-23) compound(Friend-25, hon.-24) nsubj(able-27, Friend-25) cop(able-27, be-26) mark(reassure-29, to-28) xcomp(able-27, reassure-29) dobj(reassure-29, me-30) dep(reassure-29, that-31) det(plank-35, the-32) amod(plank-35, other-33) amod(plank-35, principal-34) root(that-31, plank-35) case(policy-41, of-36) det(Government-38, the-37) nmod:poss(policy-41, Government-38) case(Government-38, 's-39) compound(policy-41, aviation-40) nmod:of(plank-35, policy-41) det(cultivation-43, the-42) nsubj(likely-58, cultivation-43) cc(cultivation-43, and-44) conj:and(cultivation-43, encouragement-45) nsubj(likely-58, encouragement-45) case(competition-47, of-46) nmod:of(cultivation-43, competition-47) case(airlines-50, among-48) amod(airlines-50, British-49) nmod:among(competition-47, airlines-50) case(routes-54, on-51) det(routes-54, the-52) amod(routes-54, appropriate-53) nmod:on(cultivation-43, routes-54) cop(likely-58, is-55) neg(likely-58, not-56) advmod(likely-58, equally-57) acl:relcl(policy-41, likely-58) mark(postponed-61, to-59) auxpass(postponed-61, be-60) xcomp(likely-58, postponed-61) punct(plank-35, ?-62)",0,0,0,"root(ROOT, able) advmod(postponed, Now) mark(postponed, that) nsbjpass(postponed, privatisation) ax(postponed, has) axpass(postponed, been) advcl(able, postponed) pnct(postponed, ,) cc(postponed, and) case(prejdice, withot) conj:and(postponed, prejdice) advcl(able, prejdice) case(talk, to) det(talk, the) amod(talk, crrent) nmod:to(prejdice, talk) case(management, of) det(management, a) nmod:of(talk, management) acl(management, by) compond:prt(by, ot) pnct(able, ,) ax(able, will) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(able, Friend) cop(able, be) mark(reassre, to) xcomp(able, reassre) dobj(reassre, me) dep(reassre, that) det(plank, the) amod(plank, other) amod(plank, principal) root(that, plank) case(policy, of) det(Government, the) nmod:poss(policy, Government) ""case(Government, s)"", compond(policy, aviation) nmod:of(plank, policy) det(cltivation, the) nsbj(likely, cltivation) cc(cltivation, and) conj:and(cltivation, encoragement) nsbj(likely, encoragement) case(competition, of) nmod:of(cltivation, competition) case(airlines, among) amod(airlines, British) nmod:among(competition, airlines) case(rotes, on) det(rotes, the) amod(rotes, appropriate) nmod:on(cltivation, rotes) cop(likely, is) neg(likely, not) advmod(likely, eqally) acl:relcl(policy, likely) mark(postponed, to) axpass(postponed, be) xcomp(likely, postponed) pnct(plank, ?)","root(,JJ) advmod(VBN,RB) mark(VBN,IN) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) advcl(JJ,VBN) pnct(VBN,VBN) cc(VBN,CC) case(NN,IN) conj:and(VBN,NN) advcl(JJ,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) acl(NN,NN) compond:prt(NN,IN) pnct(JJ,JJ) ax(JJ,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) dobj(VB,PRP) dep(VB,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) root(IN,NN) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,NN) nmod:of(NN,NN) det(NN,DT) nsbj(JJ,NN) cc(NN,CC) conj:and(NN,NN) nsbj(JJ,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) amod(NNS,NNP) nmod:among(NN,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:on(NN,NNS) cop(JJ,VBZ) neg(JJ,RB) advmod(JJ,RB) acl:relcl(NN,JJ) mark(VBN,TO) axpass(VBN,VB) xcomp(JJ,VBN) pnct(NN,NN)","[prejudice, Friend, reassure, plank, policy, postponed, my, Government, likely, right, able, ROOT]","[prejudice, Friend, reassure, plank, policy, postponed, my, Government, likely, able, ROOT]",3,"[plank, Government, policy, likely]","[plank, Government, policy, likely]",NN_prejudice NNP_Friend VB_reassure NN_plank NN_policy VBN_postponed PRP$_my NNP_Government JJ_likely JJ_able ,"[prejudice, Friend, reassure, plank, policy, postponed, my, Government, likely, able, ROOT]","[prejudice, Friend, reassure, plank, policy, postponed, my, Government, likely, able, ROOT]",NN_prejudice NNP_Friend VB_reassure NN_plank NN_policy VBN_postponed PRP$_my NNP_Government JJ_likely JJ_able ,"[prejudice, Friend, reassure, plank, policy, postponed, my, Government, likely, able, ROOT]",NN_prejudice NNP_Friend VB_reassure NN_plank NN_policy VBN_postponed PRP$_my NNP_Government JJ_likely JJ_able ,"[prejudice, Friend, reassure, plank, policy, postponed, my, Government, likely, able, ROOT]",NN_prejudice NNP_Friend VB_reassure NN_plank NN_policy VBN_postponed PRP$_my NNP_Government JJ_likely JJ_able ,-3,0,2,2,1,2,2,2,2,2
Has he any new initiatives to announce in that respect this afternoon?,HasNNP hePRP anyDT newJJ initiativesNNS toTO announceVB inIN thatDT respectNN thisDT afternoonNN ,"root(ROOT-0, Has-1) nsubj(Has-1, he-2) det(initiatives-5, any-3) amod(initiatives-5, new-4) dep(he-2, initiatives-5) mark(announce-7, to-6) acl(initiatives-5, announce-7) case(respect-10, in-8) det(respect-10, that-9) nmod:in(announce-7, respect-10) det(afternoon-12, this-11) nmod:tmod(announce-7, afternoon-12) punct(Has-1, ?-13)",0,0,1,"root(ROOT, Has) nsbj(Has, he) det(initiatives, any) amod(initiatives, new) dep(he, initiatives) mark(annonce, to) acl(initiatives, annonce) case(respect, in) det(respect, that) nmod:in(annonce, respect) det(afternoon, this) nmod:tmod(annonce, afternoon) pnct(Has, ?)","root(,NNP) nsbj(NNP,PRP) det(NNS,DT) amod(NNS,JJ) dep(PRP,NNS) mark(VB,TO) acl(NNS,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) det(NN,DT) nmod:tmod(VB,NN) pnct(NNP,NNP)","[he, announce, new, ROOT, initiatives, Has]","[he, announce, new, ROOT, initiatives, Has]",3,"[he, announce, new, ROOT, initiatives, Has]","[he, announce, new, ROOT, initiatives, Has]",PRP_he VB_announce JJ_new NNS_initiatives NNP_Has ,"[he, announce, new, ROOT, initiatives, Has]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
"My hon. Friend knows that the policy on competition was settled in the White Paper ""Airline Competition Policy""  Cmnd.",MyPRP$ honNN FriendNNP knowsVBZ thatIN theDT policyNN onIN competitionNN wasVBD settledVBN inIN theDT WhiteNNP PaperNNP ```` AirlineNNP CompetitionNN PolicyNNP '''' CmndNN ,"root(ROOT-0, knows-4) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(knows-4, Friend-3) mark(settled-11, that-5) det(policy-7, the-6) nsubjpass(settled-11, policy-7) case(competition-9, on-8) nmod:on(policy-7, competition-9) auxpass(settled-11, was-10) ccomp(knows-4, settled-11) case(Paper-15, in-12) det(Paper-15, the-13) compound(Paper-15, White-14) nmod:in(settled-11, Paper-15) punct(Policy-19, ``-16) compound(Policy-19, Airline-17) compound(Policy-19, Competition-18) dep(Paper-15, Policy-19) punct(Policy-19, ''-20) punct(Policy-19, ,-21) appos(Policy-19, Cmnd-22) punct(knows-4, .-23)",0,0,0,"root(ROOT, knows) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(knows, Friend) mark(settled, that) det(policy, the) nsbjpass(settled, policy) case(competition, on) nmod:on(policy, competition) axpass(settled, was) ccomp(knows, settled) case(Paper, in) det(Paper, the) compond(Paper, White) nmod:in(settled, Paper) pnct(Policy, ``) compond(Policy, Airline) compond(Policy, Competition) dep(Paper, Policy) ""pnct(Policy, )"", pnct(Policy, ,) appos(Policy, Cmnd) pnct(knows, .)","root(,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NN,IN) nmod:on(NN,NN) axpass(VBN,VBD) ccomp(VBZ,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(VBN,NNP) pnct(NNP,``) compond(NNP,NNP) compond(NNP,NN) dep(NNP,NNP) ""pnct(NNP,)"", pnct(NNP,NNP) appos(NNP,NN) pnct(VBZ,VBZ)","[My, ROOT, knows, settled, Friend]","[My, ROOT, knows, settled, Friend]",4,"[My, ROOT, knows, settled, Friend]","[My, ROOT, knows, settled, Friend]",PRP$_My VBZ_knows VBN_settled NNP_Friend ,"[My, ROOT, knows, settled, Friend]","[My, ROOT, knows, settled, Friend]",PRP$_My VBZ_knows VBN_settled NNP_Friend ,"[My, ROOT, knows, settled, Friend]",PRP$_My VBZ_knows VBN_settled NNP_Friend ,"[My, ROOT, knows, settled, Friend]",PRP$_My VBZ_knows VBN_settled NNP_Friend ,-3,0,2,0,0,0,0,0,0,0
9366  in October 1984  which was endorsed by the House.,9366CD inIN OctoberNNP 1984CD whichWDT wasVBD endorsedVBN byIN theDT HouseNNP ,"root(ROOT-0, 9366-1) punct(9366-1, ,-2) case(October-4, in-3) nmod:in(9366-1, October-4) nummod(October-4, 1984-5) punct(October-4, ,-6) nsubjpass(endorsed-9, which-7) auxpass(endorsed-9, was-8) acl:relcl(October-4, endorsed-9) case(House-12, by-10) det(House-12, the-11) nmod:agent(endorsed-9, House-12) punct(9366-1, .-13)",0,0,0,"root(ROOT, 9366) pnct(9366, ,) case(October, in) nmod:in(9366, October) nmmod(October, 1984) pnct(October, ,) nsbjpass(endorsed, which) axpass(endorsed, was) acl:relcl(October, endorsed) case(Hose, by) det(Hose, the) nmod:agent(endorsed, Hose) pnct(9366, .)","root(,CD) pnct(CD,CD) case(NNP,IN) nmod:in(CD,NNP) nmmod(NNP,CD) pnct(NNP,NNP) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(NNP,VBN) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) pnct(CD,CD)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I assure him that we will continually watch opportunities for increasing competition in the airline industry  but I have no plans for reopening the whole matter again.,IPRP assureVBP himPRP thatIN wePRP willMD continuallyRB watchVB opportunitiesNNS forIN increasingVBG competitionNN inIN theDT airlineNN industryNN butCC IPRP haveVBP noDT plansNNS forIN reopeningVBG theDT wholeJJ matterNN againRB ,"root(ROOT-0, assure-2) nsubj(assure-2, I-1) dobj(assure-2, him-3) mark(watch-8, that-4) nsubj(watch-8, we-5) aux(watch-8, will-6) advmod(watch-8, continually-7) ccomp(assure-2, watch-8) dobj(watch-8, opportunities-9) case(competition-12, for-10) amod(competition-12, increasing-11) nmod:for(watch-8, competition-12) case(industry-16, in-13) det(industry-16, the-14) compound(industry-16, airline-15) nmod:in(competition-12, industry-16) punct(assure-2, ,-17) cc(assure-2, but-18) nsubj(have-20, I-19) conj:but(assure-2, have-20) neg(plans-22, no-21) dobj(have-20, plans-22) mark(reopening-24, for-23) acl(plans-22, reopening-24) det(matter-27, the-25) amod(matter-27, whole-26) dobj(reopening-24, matter-27) advmod(reopening-24, again-28) punct(assure-2, .-29)",0,0,0,"root(ROOT, assre) nsbj(assre, I) dobj(assre, him) mark(watch, that) nsbj(watch, we) ax(watch, will) advmod(watch, continally) ccomp(assre, watch) dobj(watch, opportnities) case(competition, for) amod(competition, increasing) nmod:for(watch, competition) case(indstry, in) det(indstry, the) compond(indstry, airline) nmod:in(competition, indstry) pnct(assre, ,) cc(assre, bt) nsbj(have, I) conj:bt(assre, have) neg(plans, no) dobj(have, plans) mark(reopening, for) acl(plans, reopening) det(matter, the) amod(matter, whole) dobj(reopening, matter) advmod(reopening, again) pnct(assre, .)","root(,VBP) nsbj(VBP,PRP) dobj(VBP,PRP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) ccomp(VBP,VB) dobj(VB,NNS) case(NN,IN) amod(NN,VBG) nmod:for(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NN,NN) pnct(VBP,VBP) cc(VBP,CC) nsbj(VBP,PRP) conj:bt(VBP,VBP) neg(NNS,DT) dobj(VBP,NNS) mark(VBG,IN) acl(NNS,VBG) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) advmod(VBG,RB) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Secretary of State give a firm assurance to British Airways  whether publicly or privately owned  that neither he nor any member of his Government will prevent British Airways from ordering and purchasing from now until 1995 the appropriate aircraft to keep it in the lead?,WillMD theDT SecretaryNNP ofIN StateNNP giveVB aDT firmNN assuranceNN toTO BritishVB AirwaysNNP whetherIN publiclyRB orCC privatelyRB ownedVBN thatIN neitherCC hePRP norCC anyDT memberNN ofIN hisPRP$ GovernmentNNP willMD preventVB BritishJJ AirwaysNNS fromIN orderingVBG andCC purchasingVBG fromIN nowRB untilIN 1995CD theDT appropriateNN aircraftNN toTO keepVB itPRP inIN theDT leadNN ,"root(ROOT-0, give-6) aux(give-6, Will-1) det(Secretary-3, the-2) nsubj(give-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) det(assurance-9, a-7) compound(assurance-9, firm-8) dobj(give-6, assurance-9) case(Airways-12, to-10) compound(Airways-12, British-11) nmod:to(give-6, Airways-12) punct(give-6, ,-13) mark(owned-18, whether-14) advmod(or-16, publicly-15) cc(owned-18, or-16) advmod(owned-18, privately-17) advcl(give-6, owned-18) punct(give-6, ,-19) mark(prevent-30, that-20) cc:preconj(he-22, neither-21) nsubj(prevent-30, he-22) cc(he-22, nor-23) det(member-25, any-24) conj:nor(he-22, member-25) nsubj(prevent-30, member-25) case(Government-28, of-26) nmod:poss(Government-28, his-27) nmod:of(member-25, Government-28) aux(prevent-30, will-29) ccomp(give-6, prevent-30) compound(Airways-32, British-31) dobj(prevent-30, Airways-32) mark(ordering-34, from-33) advcl(prevent-30, ordering-34) cc(ordering-34, and-35) advcl(prevent-30, purchasing-36) conj:and(ordering-34, purchasing-36) case(now-38, from-37) nmod:from(purchasing-36, now-38) case(aircraft-43, until-39) nummod(aircraft-43, 1995-40) det(aircraft-43, the-41) amod(aircraft-43, appropriate-42) nmod:until(now-38, aircraft-43) mark(keep-45, to-44) acl(aircraft-43, keep-45) dobj(keep-45, it-46) case(lead-49, in-47) det(lead-49, the-48) nmod:in(keep-45, lead-49) punct(give-6, ?-50)",0,0,0,"root(ROOT, give) ax(give, Will) det(Secretary, the) nsbj(give, Secretary) case(State, of) nmod:of(Secretary, State) det(assrance, a) compond(assrance, firm) dobj(give, assrance) case(Airways, to) compond(Airways, British) nmod:to(give, Airways) pnct(give, ,) mark(owned, whether) advmod(or, pblicly) cc(owned, or) advmod(owned, privately) advcl(give, owned) pnct(give, ,) mark(prevent, that) cc:preconj(he, neither) nsbj(prevent, he) cc(he, nor) det(member, any) conj:nor(he, member) nsbj(prevent, member) case(Government, of) nmod:poss(Government, his) nmod:of(member, Government) ax(prevent, will) ccomp(give, prevent) compond(Airways, British) dobj(prevent, Airways) mark(ordering, from) advcl(prevent, ordering) cc(ordering, and) advcl(prevent, prchasing) conj:and(ordering, prchasing) case(now, from) nmod:from(prchasing, now) case(aircraft, ntil) nmmod(aircraft, 1995) det(aircraft, the) amod(aircraft, appropriate) nmod:ntil(now, aircraft) mark(keep, to) acl(aircraft, keep) dobj(keep, it) case(lead, in) det(lead, the) nmod:in(keep, lead) pnct(give, ?)","root(,VB) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) det(NN,DT) compond(NN,NN) dobj(VB,NN) case(NNS,TO) compond(NNS,JJ) nmod:to(VB,NNS) pnct(VB,VB) mark(VBN,IN) advmod(CC,RB) cc(VBN,CC) advmod(VBN,RB) advcl(VB,VBN) pnct(VB,VB) mark(VB,IN) cc:preconj(PRP,CC) nsbj(VB,PRP) cc(PRP,CC) det(NN,DT) conj:nor(PRP,NN) nsbj(VB,NN) case(NNP,IN) nmod:poss(NNP,PRP$) nmod:of(NN,NNP) ax(VB,MD) ccomp(VB,VB) compond(NNS,JJ) dobj(VB,NNS) mark(VBG,IN) advcl(VB,VBG) cc(VBG,CC) advcl(VB,VBG) conj:and(VBG,VBG) case(RB,IN) nmod:from(VBG,RB) case(NN,IN) nmmod(NN,CD) det(NN,DT) amod(NN,NN) nmod:ntil(RB,NN) mark(VB,TO) acl(NN,VB) dobj(VB,PRP) case(NN,IN) det(NN,DT) nmod:in(VB,NN) pnct(VB,VB)","[ordering, Airways, nor, State, owned, prevent, Government, give, member, he, assurance, purchasing, his, Secretary, ROOT, Airways]","[ordering, Airways, nor, State, owned, prevent, Government, give, member, he, assurance, purchasing, his, Secretary, ROOT, Airways]",5,"[prevent, Government, his, member]","[prevent, Government, his, member]",VBG_ordering NNP_Airways CC_nor NNP_State VBN_owned VB_prevent NNP_Government VB_give NN_member PRP_he NN_assurance VBG_purchasing PRP$_his NNP_Secretary NNP_Airways ,"[ordering, Airways, nor, State, owned, prevent, Government, give, member, he, assurance, purchasing, his, Secretary, ROOT, Airways]","[ordering, Airways, nor, State, owned, prevent, Government, give, member, he, assurance, purchasing, his, Secretary, ROOT, Airways]",VBG_ordering NNP_Airways CC_nor NNP_State VBN_owned VB_prevent NNP_Government VB_give NN_member PRP_he NN_assurance VBG_purchasing PRP$_his NNP_Secretary NNP_Airways ,"[ordering, Airways, nor, State, owned, prevent, Government, give, member, he, assurance, purchasing, his, Secretary, ROOT, Airways]",VBG_ordering NNP_Airways CC_nor NNP_State VBN_owned VB_prevent NNP_Government VB_give NN_member PRP_he NN_assurance VBG_purchasing PRP$_his NNP_Secretary NNP_Airways ,"[ordering, Airways, nor, State, owned, prevent, Government, give, member, he, assurance, purchasing, his, Secretary, ROOT, Airways]",VBG_ordering NNP_Airways CC_nor NNP_State VBN_owned VB_prevent NNP_Government VB_give NN_member PRP_he NN_assurance VBG_purchasing PRP$_his NNP_Secretary NNP_Airways ,-3,0,2,1,1,1,2,0,1,2
Yes  Sir.,YesUH SirNNP ,"root(ROOT-0, Sir-3) discourse(Sir-3, Yes-1) punct(Sir-3, ,-2) punct(Sir-3, .-4)",0,0,0,"root(ROOT, Sir) discorse(Sir, Yes) pnct(Sir, ,) pnct(Sir, .)","root(,NNP) discorse(NNP,UH) pnct(NNP,NNP) pnct(NNP,NNP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he consider positively the proposed management staff buy out by British Airways?,WillMD hePRP considerVB positivelyRB theDT proposedVBN managementNN staffNN buyVB outRP byIN BritishJJ AirwaysNNS ,"root(ROOT-0, consider-3) aux(consider-3, Will-1) nsubj(consider-3, he-2) advmod(buy-9, positively-4) det(staff-8, the-5) amod(staff-8, proposed-6) compound(staff-8, management-7) nsubj(buy-9, staff-8) ccomp(consider-3, buy-9) compound:prt(buy-9, out-10) case(Airways-13, by-11) compound(Airways-13, British-12) nmod:by(buy-9, Airways-13) punct(consider-3, ?-14)",0,0,1,"root(ROOT, consider) ax(consider, Will) nsbj(consider, he) advmod(by, positively) det(staff, the) amod(staff, proposed) compond(staff, management) nsbj(by, staff) ccomp(consider, by) compond:prt(by, ot) case(Airways, by) compond(Airways, British) nmod:by(by, Airways) pnct(consider, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) advmod(VB,RB) det(NN,DT) amod(NN,VBN) compond(NN,NN) nsbj(VB,NN) ccomp(VB,VB) compond:prt(VB,RP) case(NNS,IN) compond(NNS,JJ) nmod:by(VB,NNS) pnct(VB,VB)","[he, ROOT, buy, consider]","[he, ROOT, buy, consider]",7,[ ],[ ],PRP_he VB_buy VBP_consider ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The mystery about the alleged management buy out proposal is that nobody seems to know who suggested the idea.,TheDT mysteryNN aboutIN theDT allegedJJ managementNN buyVB outIN proposalNN isVBZ thatIN nobodyNN seemsVBZ toTO knowVB whoWP suggestedVBD theDT ideaNN ,"root(ROOT-0, buy-7) det(mystery-2, The-1) nsubj(buy-7, mystery-2) case(management-6, about-3) det(management-6, the-4) amod(management-6, alleged-5) nmod:about(mystery-2, management-6) compound:prt(buy-7, out-8) dobj(buy-7, proposal-9) dep(buy-7, is-10) mark(seems-13, that-11) nsubj(seems-13, nobody-12) ccomp(is-10, seems-13) mark(know-15, to-14) xcomp(seems-13, know-15) nsubj(suggested-17, who-16) ccomp(know-15, suggested-17) det(idea-19, the-18) dobj(suggested-17, idea-19) punct(buy-7, .-20)",0,0,0,"root(ROOT, by) det(mystery, The) nsbj(by, mystery) case(management, abot) det(management, the) amod(management, alleged) nmod:abot(mystery, management) compond:prt(by, ot) dobj(by, proposal) dep(by, is) mark(seems, that) nsbj(seems, nobody) ccomp(is, seems) mark(know, to) xcomp(seems, know) nsbj(sggested, who) ccomp(know, sggested) det(idea, the) dobj(sggested, idea) pnct(by, .)","root(,VB) det(NN,DT) nsbj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:abot(NN,NN) compond:prt(VB,IN) dobj(VB,NN) dep(VB,VBZ) mark(VBZ,IN) nsbj(VBZ,NN) ccomp(VBZ,VBZ) mark(VB,TO) xcomp(VBZ,VB) nsbj(VBD,WP) ccomp(VB,VBD) det(NN,DT) dobj(VBD,NN) pnct(VB,VB)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The chairman of British Airways has written to my right hon. Friend the Prime Minister and in that letter  which is now in the public domain  to coin a phrase  one paragraph says: We would prefer this the privatisation  to be accomplished by means of a public flotation and will pursue such intention with much vigour while continuing to work closely with Nicholas Ridley and his Department.,TheDT chairmanNN ofIN BritishNNP AirwaysNNP hasVBZ writtenVBN toTO myPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP andCC inIN thatDT letterNN whichWDT isVBZ nowRB inIN theDT publicJJ domainNN toTO coinVB aDT phraseNN oneCD paragraphNN saysVBZ :: WePRP wouldMD preferVB thisDT theDT privatisationNN toTO beVB accomplishedVBN byIN meansNNS ofIN aDT publicJJ flotationNN andCC willMD pursueVB suchJJ intentionNN withIN muchJJ vigourNN whileIN continuingVBG toTO workVB closelyRB withIN NicholasNNP RidleyNNP andCC hisPRP$ DepartmentNNP ,"root(ROOT-0, written-7) det(chairman-2, The-1) nsubj(written-7, chairman-2) case(Airways-5, of-3) compound(Airways-5, British-4) nmod:of(chairman-2, Airways-5) aux(written-7, has-6) case(Friend-12, to-8) nmod:poss(Friend-12, my-9) amod(Friend-12, right-10) compound(Friend-12, hon.-11) nmod:to(written-7, Friend-12) det(Minister-15, the-13) compound(Minister-15, Prime-14) dep(Friend-12, Minister-15) cc(Minister-15, and-16) case(letter-19, in-17) det(letter-19, that-18) dep(Friend-12, letter-19) conj:and(Minister-15, letter-19) punct(Minister-15, ,-20) nsubj(domain-27, which-21) cop(domain-27, is-22) advmod(domain-27, now-23) case(domain-27, in-24) det(domain-27, the-25) amod(domain-27, public-26) acl:relcl(Minister-15, domain-27) punct(Minister-15, ,-28) case(coin-30, to-29) nmod:to(Minister-15, coin-30) det(phrase-32, a-31) dep(coin-30, phrase-32) punct(phrase-32, ,-33) nummod(paragraph-35, one-34) nsubj(says-36, paragraph-35) acl:relcl(phrase-32, says-36) punct(phrase-32, :-37) nsubj(prefer-40, We-38) aux(prefer-40, would-39) acl:relcl(phrase-32, prefer-40) dep(pursue-56, this-41) punct(this-41, ''-42) det(privatisation-44, the-43) nsubj(pursue-56, privatisation-44) mark(accomplished-47, to-45) auxpass(accomplished-47, be-46) acl(privatisation-44, accomplished-47) case(means-49, by-48) nmod:agent(accomplished-47, means-49) case(flotation-53, of-50) det(flotation-53, a-51) amod(flotation-53, public-52) nmod:of(means-49, flotation-53) cc(privatisation-44, and-54) aux(pursue-56, will-55) xcomp(prefer-40, pursue-56) amod(intention-58, such-57) dobj(pursue-56, intention-58) case(vigour-61, with-59) amod(vigour-61, much-60) nmod:with(pursue-56, vigour-61) mark(continuing-63, while-62) advcl(prefer-40, continuing-63) mark(work-65, to-64) xcomp(continuing-63, work-65) advmod(work-65, closely-66) case(Ridley-69, with-67) compound(Ridley-69, Nicholas-68) nmod:with(work-65, Ridley-69) cc(Ridley-69, and-70) nmod:poss(Department-72, his-71) nmod:with(work-65, Department-72) conj:and(Ridley-69, Department-72) punct(written-7, .-73)",0,0,0,"root(ROOT, written) det(chairman, The) nsbj(written, chairman) case(Airways, of) compond(Airways, British) nmod:of(chairman, Airways) ax(written, has) case(Friend, to) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:to(written, Friend) det(Minister, the) compond(Minister, Prime) dep(Friend, Minister) cc(Minister, and) case(letter, in) det(letter, that) dep(Friend, letter) conj:and(Minister, letter) pnct(Minister, ,) nsbj(domain, which) cop(domain, is) advmod(domain, now) case(domain, in) det(domain, the) amod(domain, pblic) acl:relcl(Minister, domain) pnct(Minister, ,) case(coin, to) nmod:to(Minister, coin) det(phrase, a) dep(coin, phrase) pnct(phrase, ,) nmmod(paragraph, one) nsbj(says, paragraph) acl:relcl(phrase, says) pnct(phrase, :) nsbj(prefer, We) ax(prefer, wold) acl:relcl(phrase, prefer) dep(prse, this) ""pnct(this, )"", det(privatisation, the) nsbj(prse, privatisation) mark(accomplished, to) axpass(accomplished, be) acl(privatisation, accomplished) case(means, by) nmod:agent(accomplished, means) case(flotation, of) det(flotation, a) amod(flotation, pblic) nmod:of(means, flotation) cc(privatisation, and) ax(prse, will) xcomp(prefer, prse) amod(intention, sch) dobj(prse, intention) case(vigor, with) amod(vigor, mch) nmod:with(prse, vigor) mark(contining, while) advcl(prefer, contining) mark(work, to) xcomp(contining, work) advmod(work, closely) case(Ridley, with) compond(Ridley, Nicholas) nmod:with(work, Ridley) cc(Ridley, and) nmod:poss(Department, his) nmod:with(work, Department) conj:and(Ridley, Department) pnct(written, .)","root(,VBN) det(NN,DT) nsbj(VBN,NN) case(NNP,IN) compond(NNP,NNP) nmod:of(NN,NNP) ax(VBN,VBZ) case(NNP,TO) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:to(VBN,NNP) det(NNP,DT) compond(NNP,NNP) dep(NNP,NNP) cc(NNP,CC) case(NN,IN) det(NN,DT) dep(NNP,NN) conj:and(NNP,NN) pnct(NNP,NNP) nsbj(NN,WDT) cop(NN,VBZ) advmod(NN,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) acl:relcl(NNP,NN) pnct(NNP,NNP) case(VB,TO) nmod:to(NNP,VB) det(NN,DT) dep(VB,NN) pnct(NN,NN) nmmod(NN,CD) nsbj(VBZ,NN) acl:relcl(NN,VBZ) pnct(NN,:) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) dep(VB,DT) pnct(DT,DT) det(NN,DT) nsbj(VB,NN) mark(VBN,TO) axpass(VBN,VB) acl(NN,VBN) case(NNS,IN) nmod:agent(VBN,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) cc(NN,CC) ax(VB,MD) xcomp(VB,VB) amod(NN,JJ) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:with(VB,NN) mark(VBG,IN) advcl(VB,VBG) mark(VB,TO) xcomp(VBG,VB) advmod(VB,RB) case(NNP,IN) compond(NNP,NNP) nmod:with(VB,NNP) cc(NNP,CC) nmod:poss(NNP,PRP$) nmod:with(VB,NNP) conj:and(NNP,NNP) pnct(VBN,VBN)","[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, right, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]","[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, his, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]",8,"[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, his, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]","[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, his, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]",NN_letter NNP_Minister NN_vigour JJ_public NNP_Department NN_phrase NN_privatisation NN_paragraph NN_intention NN_flotation PRP$_his NN_domain VBG_continuing NNP_Friend RB_now CC_and VBN_written VBN_accomplished NNP_Ridley VBZ_says NNS_means VB_work WDT_which VB_coin NN_chairman PRP$_my VB_prefer VB_pursue ,"[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, his, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]","[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, his, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]",NN_letter NNP_Minister NN_vigour JJ_public NNP_Department NN_phrase NN_privatisation NN_paragraph NN_intention NN_flotation PRP$_his NN_domain VBG_continuing NNP_Friend RB_now CC_and VBN_written VBN_accomplished NNP_Ridley VBZ_says NNS_means VB_work WDT_which VB_coin NN_chairman PRP$_my VB_prefer VB_pursue ,"[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, his, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]",NN_letter NNP_Minister NN_vigour JJ_public NNP_Department NN_phrase NN_privatisation NN_paragraph NN_intention NN_flotation PRP$_his NN_domain VBG_continuing NNP_Friend RB_now CC_and VBN_written VBN_accomplished NNP_Ridley VBZ_says NNS_means VB_work WDT_which VB_coin NN_chairman PRP$_my VB_prefer VB_pursue ,"[ , letter, Minister, vigour, public, Department, phrase, privatisation, paragraph, intention, flotation, his, domain, continuing, Friend, now, and, written, accomplished, Ridley, says, means, work, which, coin, chairman, my, ROOT, prefer, pursue]",NN_letter NNP_Minister NN_vigour JJ_public NNP_Department NN_phrase NN_privatisation NN_paragraph NN_intention NN_flotation PRP$_his NN_domain VBG_continuing NNP_Friend RB_now CC_and VBN_written VBN_accomplished NNP_Ridley VBZ_says NNS_means VB_work WDT_which VB_coin NN_chairman PRP$_my VB_prefer VB_pursue ,-3,0,1,1,1,1,1,1,1,1
Furthermore  we support HMG' s efforts to achieve a successful outcome in the current negotiations with the United States Government over the capacity annex to the Bermuda II agreement.,FurthermoreIN wePRP supportVBP HMGNNP 'POS sNN effortsNNS toTO achieveVB aDT successfulJJ outcomeNN inIN theDT currentJJ negotiationsNNS withIN theDT UnitedNNP StatesNNPS GovernmentNNP overIN theDT capacityNN annexNN toTO theDT BermudaNNP IINNP agreementNN ,"root(ROOT-0, support-4) advmod(support-4, Furthermore-1) punct(support-4, ,-2) nsubj(support-4, we-3) compound(efforts-8, HMG-5) punct(efforts-8, '-6) compound(efforts-8, s-7) dobj(support-4, efforts-8) mark(achieve-10, to-9) acl(efforts-8, achieve-10) det(outcome-13, a-11) amod(outcome-13, successful-12) dobj(achieve-10, outcome-13) case(negotiations-17, in-14) det(negotiations-17, the-15) amod(negotiations-17, current-16) nmod:in(achieve-10, negotiations-17) case(Government-22, with-18) det(Government-22, the-19) compound(Government-22, United-20) compound(Government-22, States-21) nmod:with(negotiations-17, Government-22) case(annex-26, over-23) det(annex-26, the-24) compound(annex-26, capacity-25) nmod:over(negotiations-17, annex-26) case(agreement-31, to-27) det(agreement-31, the-28) compound(agreement-31, Bermuda-29) compound(agreement-31, II-30) nmod:to(annex-26, agreement-31) punct(support-4, .-32)",0,0,0,"root(ROOT, spport) advmod(spport, Frthermore) pnct(spport, ,) nsbj(spport, we) compond(efforts, HMG) ""pnct(efforts, )"", compond(efforts, s) dobj(spport, efforts) mark(achieve, to) acl(efforts, achieve) det(otcome, a) amod(otcome, sccessfl) dobj(achieve, otcome) case(negotiations, in) det(negotiations, the) amod(negotiations, crrent) nmod:in(achieve, negotiations) case(Government, with) det(Government, the) compond(Government, United) compond(Government, States) nmod:with(negotiations, Government) case(annex, over) det(annex, the) compond(annex, capacity) nmod:over(negotiations, annex) case(agreement, to) det(agreement, the) compond(agreement, Bermda) compond(agreement, II) nmod:to(annex, agreement) pnct(spport, .)","root(,VBP) advmod(VBP,IN) pnct(VBP,VBP) nsbj(VBP,PRP) compond(NNS,NNP) pnct(NNS,POS) compond(NNS,NN) dobj(VBP,NNS) mark(VB,TO) acl(NNS,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:in(VB,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNPS) nmod:with(NNS,NNP) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:over(NNS,NN) case(NN,TO) det(NN,DT) compond(NN,NNP) compond(NN,NNP) nmod:to(NN,NN) pnct(VBP,VBP)","[negotiations, current, achieve, Government, annex]",[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am not quite clear what all the row was about.,IPRP amVBP notRB quiteRB clearJJ whatWP allPDT theDT rowNN wasVBD aboutIN ,"root(ROOT-0, clear-5) nsubj(clear-5, I-1) cop(clear-5, am-2) neg(clear-5, not-3) advmod(clear-5, quite-4) dobj(about-11, what-6) det:predet(row-9, all-7) det(row-9, the-8) nsubj(about-11, row-9) cop(about-11, was-10) ccomp(clear-5, about-11) punct(clear-5, .-12)",0,0,1,"root(ROOT, clear) nsbj(clear, I) cop(clear, am) neg(clear, not) advmod(clear, qite) dobj(abot, what) det:predet(row, all) det(row, the) nsbj(abot, row) cop(abot, was) ccomp(clear, abot) pnct(clear, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) neg(JJ,RB) advmod(JJ,RB) dobj(IN,WP) det:predet(NN,PDT) det(NN,DT) nsbj(IN,NN) cop(IN,VBD) ccomp(JJ,IN) pnct(JJ,JJ)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Does the right hon. Gentleman think that that is a good way of spending public money?,DoesVBZ theDT rightJJ honNN GentlemanNNP thinkVBP thatIN thatDT isVBZ aDT goodJJ wayNN ofIN spendingVBG publicJJ moneyNN ,"root(ROOT-0, think-6) aux(think-6, Does-1) det(Gentleman-5, the-2) amod(Gentleman-5, right-3) compound(Gentleman-5, hon.-4) nsubj(think-6, Gentleman-5) mark(way-12, that-7) nsubj(way-12, that-8) cop(way-12, is-9) det(way-12, a-10) amod(way-12, good-11) ccomp(think-6, way-12) mark(spending-14, of-13) acl(way-12, spending-14) amod(money-16, public-15) dobj(spending-14, money-16) punct(think-6, ?-17)",0,0,0,"root(ROOT, think) ax(think, Does) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(think, Gentleman) mark(way, that) nsbj(way, that) cop(way, is) det(way, a) amod(way, good) ccomp(think, way) mark(spending, of) acl(way, spending) amod(money, pblic) dobj(spending, money) pnct(think, ?)","root(,VBP) ax(VBP,VBZ) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBP,NNP) mark(NN,DT) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(VBP,NN) mark(VBG,IN) acl(NN,VBG) amod(NN,JJ) dobj(VBG,NN) pnct(VBP,VBP)","[Gentleman, right, ROOT, think, way]","[Gentleman, ROOT, think, way]",9,[ ],[ ],NNP_Gentleman VBP_think NN_way ,"[Gentleman, ROOT, think, way]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I am sure that the time will come when the board of British Airways will wish to entertain Labour Members.,IPRP amVBP sureJJ thatIN theDT timeNN willMD comeVB whenWRB theDT boardNN ofIN BritishNNP AirwaysNNP willMD wishVB toTO entertainVB LabourJJ MembersNNS ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) mark(come-8, that-4) det(time-6, the-5) nsubj(come-8, time-6) aux(come-8, will-7) ccomp(sure-3, come-8) advmod(wish-16, when-9) det(board-11, the-10) nsubj(wish-16, board-11) case(Airways-14, of-12) compound(Airways-14, British-13) nmod:of(board-11, Airways-14) aux(wish-16, will-15) advcl(come-8, wish-16) mark(entertain-18, to-17) xcomp(wish-16, entertain-18) compound(Members-20, Labour-19) dobj(entertain-18, Members-20) punct(sure-3, .-21)",0,1,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) mark(come, that) det(time, the) nsbj(come, time) ax(come, will) ccomp(sre, come) advmod(wish, when) det(board, the) nsbj(wish, board) case(Airways, of) compond(Airways, British) nmod:of(board, Airways) ax(wish, will) advcl(come, wish) mark(entertain, to) xcomp(wish, entertain) compond(Members, Labor) dobj(entertain, Members) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VB,IN) det(NN,DT) nsbj(VB,NN) ax(VB,MD) ccomp(JJ,VB) advmod(VB,WRB) det(NN,DT) nsbj(VB,NN) case(NNP,IN) compond(NNP,NNP) nmod:of(NN,NNP) ax(VB,MD) advcl(VB,VB) mark(VB,TO) xcomp(VB,VB) compond(NNS,JJ) dobj(VB,NNS) pnct(JJ,JJ)","[Members, entertain]","[Members, entertain]",10,"[Members, entertain]","[Members, entertain]",NNS_Members VB_entertain ,"[Members, entertain]","[Members, entertain]",NNS_Members VB_entertain ,"[Members, entertain]",NNS_Members VB_entertain ,"[Members, entertain]",NNS_Members VB_entertain ,-3,0,2,1,1,1,1,1,1,2
Does my right hon. Friend agree that it is not the purpose of privatisation to give the investor a risk free investment?,DoesNNP myPRP$ rightJJ honNN FriendNNP agreeVBZ thatIN itPRP isVBZ notRB theDT purposeNN ofIN privatisationNN toTO giveVB theDT investorNN aDT riskNN freeJJ investmentNN ,"root(ROOT-0, agree-6) aux(agree-6, Does-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(agree-6, Friend-5) mark(purpose-12, that-7) nsubj(purpose-12, it-8) cop(purpose-12, is-9) neg(purpose-12, not-10) det(purpose-12, the-11) ccomp(agree-6, purpose-12) case(privatisation-14, of-13) nmod:of(purpose-12, privatisation-14) mark(give-16, to-15) acl(purpose-12, give-16) det(investor-18, the-17) iobj(give-16, investor-18) det(risk-20, a-19) nsubj(investment-22, risk-20) amod(investment-22, free-21) dobj(give-16, investment-22) punct(agree-6, ?-23)",0,1,0,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(agree, Friend) mark(prpose, that) nsbj(prpose, it) cop(prpose, is) neg(prpose, not) det(prpose, the) ccomp(agree, prpose) case(privatisation, of) nmod:of(prpose, privatisation) mark(give, to) acl(prpose, give) det(investor, the) iobj(give, investor) det(risk, a) nsbj(investment, risk) amod(investment, free) dobj(give, investment) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) neg(NN,RB) det(NN,DT) ccomp(VBZ,NN) case(NN,IN) nmod:of(NN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) iobj(VB,NN) det(NN,DT) nsbj(NN,NN) amod(NN,JJ) dobj(VB,NN) pnct(VBZ,VBZ)","[Friend, my, ROOT, purpose, right, agree]","[purpose, ROOT, Friend, my, agree]",11,[ ],[ ],NN_purpose NNP_Friend PRP$_my VB_agree ,"[purpose, ROOT, Friend, my, agree]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Does he not further agree that privatised concerns such as British Aerospace  BP not to mention the British Airports Authority  are  indeed  subject to the whim of the Government?,DoesNNS hePRP notRB furtherRBR agreeVBP thatIN privatisedJJ concernsNNS suchJJ asIN BritishJJ AerospaceNNP BPNNP notRB toTO mentionVB theDT BritishJJ AirportsNNP AuthorityNNP areVBP indeedRB subjectJJ toTO theDT whimNN ofIN theDT GovernmentNNP ,"root(ROOT-0, agree-5) aux(agree-5, Does-1) nsubj(agree-5, he-2) neg(further-4, not-3) nsubj(agree-5, further-4) mark(subject-26, that-6) amod(concerns-8, privatised-7) nsubj(subject-26, concerns-8) case(Aerospace-12, such-9) mwe(such-9, as-10) compound(Aerospace-12, British-11) nmod:such_as(concerns-8, Aerospace-12) punct(Aerospace-12, ,-13) appos(Aerospace-12, BP-14) neg(mention-17, not-15) mark(mention-17, to-16) acl(BP-14, mention-17) det(Authority-21, the-18) amod(Authority-21, British-19) compound(Authority-21, Airports-20) dobj(mention-17, Authority-21) cop(subject-26, are-22) punct(subject-26, ,-23) advmod(subject-26, indeed-24) punct(subject-26, ,-25) ccomp(agree-5, subject-26) case(whim-29, to-27) det(whim-29, the-28) nmod:to(subject-26, whim-29) case(Government-32, of-30) det(Government-32, the-31) nmod:of(whim-29, Government-32) punct(agree-5, ?-33)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) neg(frther, not) nsbj(agree, frther) mark(sbject, that) amod(concerns, privatised) nsbj(sbject, concerns) case(Aerospace, sch) mwe(sch, as) compond(Aerospace, British) nmod:sch_as(concerns, Aerospace) pnct(Aerospace, ,) appos(Aerospace, BP) neg(mention, not) mark(mention, to) acl(BP, mention) det(Athority, the) amod(Athority, British) compond(Athority, Airports) dobj(mention, Athority) cop(sbject, are) pnct(sbject, ,) advmod(sbject, indeed) pnct(sbject, ,) ccomp(agree, sbject) case(whim, to) det(whim, the) nmod:to(sbject, whim) case(Government, of) det(Government, the) nmod:of(whim, Government) pnct(agree, ?)","root(,VBP) ax(VBP,NNS) nsbj(VBP,PRP) neg(RBR,RB) nsbj(VBP,RBR) mark(JJ,IN) amod(NNS,JJ) nsbj(JJ,NNS) case(NNP,JJ) mwe(JJ,IN) compond(NNP,JJ) nmod:sch_as(NNS,NNP) pnct(NNP,NNP) appos(NNP,NNP) neg(VB,RB) mark(VB,TO) acl(NNP,VB) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) dobj(VB,NNP) cop(JJ,VBP) pnct(JJ,JJ) advmod(JJ,RB) pnct(JJ,JJ) ccomp(VBP,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(VBP,VBP)","[whim, he, further, ROOT, subject, Government, agree]","[whim, he, further, ROOT, subject, Government, agree]",11,"[whim, Government, subject]","[whim, Government, subject]",NN_whim PRP_he JJ_further NN_subject NNP_Government VB_agree ,"[whim, he, further, ROOT, subject, Government, agree]","[whim, he, further, ROOT, subject, Government, agree]",NN_whim PRP_he JJ_further NN_subject NNP_Government VB_agree ,"[whim, he, further, ROOT, subject, Government, agree]",NN_whim PRP_he JJ_further NN_subject NNP_Government VB_agree ,"[whim, he, further, ROOT, subject, Government, agree]",NN_whim PRP_he JJ_further NN_subject NNP_Government VB_agree ,-3,0,2,0,0,0,2,2,2,2
Moreover  many of us regard it as unacceptable that the flotation of British Airways should be delayed because of an inability to write a prospectus.,MoreoverRB manyJJ ofIN usPRP regardVBP itPRP asIN unacceptableJJ thatIN theDT flotationNN ofIN BritishJJ AirwaysNNS shouldMD beVB delayedVBN becauseIN ofIN anDT inabilityNN toTO writeVB aDT prospectusNN ,"root(ROOT-0, regard-6) advmod(regard-6, Moreover-1) punct(regard-6, ,-2) nsubj(regard-6, many-3) case(us-5, of-4) nmod:of(many-3, us-5) dobj(regard-6, it-7) case(unacceptable-9, as-8) nmod:as(regard-6, unacceptable-9) mark(delayed-18, that-10) det(flotation-12, the-11) nsubjpass(delayed-18, flotation-12) case(Airways-15, of-13) compound(Airways-15, British-14) nmod:of(flotation-12, Airways-15) aux(delayed-18, should-16) auxpass(delayed-18, be-17) ccomp(unacceptable-9, delayed-18) case(inability-22, because-19) mwe(because-19, of-20) det(inability-22, an-21) nmod:because_of(delayed-18, inability-22) mark(write-24, to-23) acl(inability-22, write-24) det(prospectus-26, a-25) dobj(write-24, prospectus-26) punct(regard-6, .-27)",0,0,0,"root(ROOT, regard) advmod(regard, Moreover) pnct(regard, ,) nsbj(regard, many) case(s, of) nmod:of(many, s) dobj(regard, it) case(nacceptable, as) nmod:as(regard, nacceptable) mark(delayed, that) det(flotation, the) nsbjpass(delayed, flotation) case(Airways, of) compond(Airways, British) nmod:of(flotation, Airways) ax(delayed, shold) axpass(delayed, be) ccomp(nacceptable, delayed) case(inability, becase) mwe(becase, of) det(inability, an) nmod:becase_of(delayed, inability) mark(write, to) acl(inability, write) det(prospects, a) dobj(write, prospects) pnct(regard, .)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) nsbj(VBP,JJ) case(PRP,IN) nmod:of(JJ,PRP) dobj(VBP,PRP) case(JJ,IN) nmod:as(VBP,JJ) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NNS,IN) compond(NNS,JJ) nmod:of(NN,NNS) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) case(NN,IN) mwe(IN,IN) det(NN,DT) nmod:becase_of(VBN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) pnct(VBP,VBP)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am sure that my hon. Friend knows enough about the subject to recognise that the writing of a prospectus places a heavy and important legal responsibility on the vendor and the board to ensure that it contains entirely accurate information about the future  upon which investment decisions can be based.,IPRP amVBP sureJJ thatIN myPRP$ honNN FriendNNP knowsVBZ enoughJJ aboutIN theDT subjectNN toTO recogniseVB thatIN theDT writingNN ofIN aDT prospectusNN placesVBZ aDT heavyJJ andCC importantJJ legalJJ responsibilityNN onIN theDT vendorNN andCC theDT boardNN toTO ensureVB thatIN itPRP containsVBZ entirelyRB accurateJJ informationNN aboutIN theDT futureNN uponIN whichWDT investmentNN decisionsNNS canMD beVB basedVBN ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) mark(knows-8, that-4) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) nsubj(knows-8, Friend-7) ccomp(sure-3, knows-8) advmod(subject-12, enough-9) advmod(subject-12, about-10) det(subject-12, the-11) xcomp(knows-8, subject-12) mark(recognise-14, to-13) xcomp(subject-12, recognise-14) mark(places-21, that-15) det(writing-17, the-16) nsubj(places-21, writing-17) case(prospectus-20, of-18) det(prospectus-20, a-19) nmod:of(writing-17, prospectus-20) ccomp(recognise-14, places-21) det(responsibility-27, a-22) amod(responsibility-27, heavy-23) cc(heavy-23, and-24) conj:and(heavy-23, important-25) amod(responsibility-27, important-25) amod(responsibility-27, legal-26) dobj(places-21, responsibility-27) case(vendor-30, on-28) det(vendor-30, the-29) nmod:on(responsibility-27, vendor-30) cc(vendor-30, and-31) det(board-33, the-32) nmod:on(responsibility-27, board-33) conj:and(vendor-30, board-33) mark(ensure-35, to-34) advcl(places-21, ensure-35) mark(contains-38, that-36) nsubj(contains-38, it-37) ccomp(ensure-35, contains-38) advmod(accurate-40, entirely-39) amod(information-41, accurate-40) dobj(contains-38, information-41) case(future-44, about-42) det(future-44, the-43) nmod:about(information-41, future-44) punct(contains-38, ,-45) mark(based-52, upon-46) det(decisions-49, which-47) compound(decisions-49, investment-48) nsubjpass(based-52, decisions-49) aux(based-52, can-50) auxpass(based-52, be-51) advcl(contains-38, based-52) punct(sure-3, .-53)",0,0,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) mark(knows, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(knows, Friend) ccomp(sre, knows) advmod(sbject, enogh) advmod(sbject, abot) det(sbject, the) xcomp(knows, sbject) mark(recognise, to) xcomp(sbject, recognise) mark(places, that) det(writing, the) nsbj(places, writing) case(prospects, of) det(prospects, a) nmod:of(writing, prospects) ccomp(recognise, places) det(responsibility, a) amod(responsibility, heavy) cc(heavy, and) conj:and(heavy, important) amod(responsibility, important) amod(responsibility, legal) dobj(places, responsibility) case(vendor, on) det(vendor, the) nmod:on(responsibility, vendor) cc(vendor, and) det(board, the) nmod:on(responsibility, board) conj:and(vendor, board) mark(ensre, to) advcl(places, ensre) mark(contains, that) nsbj(contains, it) ccomp(ensre, contains) advmod(accrate, entirely) amod(information, accrate) dobj(contains, information) case(ftre, abot) det(ftre, the) nmod:abot(information, ftre) pnct(contains, ,) mark(based, pon) det(decisions, which) compond(decisions, investment) nsbjpass(based, decisions) ax(based, can) axpass(based, be) advcl(contains, based) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VBZ,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(JJ,VBZ) advmod(NN,JJ) advmod(NN,IN) det(NN,DT) xcomp(VBZ,NN) mark(VB,TO) xcomp(NN,VB) mark(VBZ,IN) det(NN,DT) nsbj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) ccomp(VB,VBZ) det(NN,DT) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) amod(NN,JJ) dobj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) cc(NN,CC) det(NN,DT) nmod:on(NN,NN) conj:and(NN,NN) mark(VB,TO) advcl(VBZ,VB) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VB,VBZ) advmod(JJ,RB) amod(NN,JJ) dobj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:abot(NN,NN) pnct(VBZ,VBZ) mark(VBN,IN) det(NNS,WDT) compond(NNS,NN) nsbjpass(VBN,NNS) ax(VBN,MD) axpass(VBN,VB) advcl(VBZ,VBN) pnct(JJ,JJ)","[Friend, knows, subject, my, sure]","[Friend, knows, subject, my, sure]",12,"[Friend, knows, subject, my, sure]","[Friend, knows, subject, my, sure]",NNP_Friend VBZ_knows NN_subject PRP$_my RB_sure ,"[Friend, knows, subject, my, sure]","[Friend, knows, subject, my, sure]",NNP_Friend VBZ_knows NN_subject PRP$_my RB_sure ,"[Friend, knows, subject, my, sure]",NNP_Friend VBZ_knows NN_subject PRP$_my RB_sure ,"[Friend, knows, subject, my, sure]",NNP_Friend VBZ_knows NN_subject PRP$_my RB_sure ,-3,0,2,0,0,0,2,2,2,2
That applies to any company.,ThatDT appliesVBZ toTO anyDT companyNN ,"root(ROOT-0, applies-2) nsubj(applies-2, That-1) case(company-5, to-3) det(company-5, any-4) nmod:to(applies-2, company-5) punct(applies-2, .-6)",0,0,0,"root(ROOT, applies) nsbj(applies, That) case(company, to) det(company, any) nmod:to(applies, company) pnct(applies, .)","root(,VBZ) nsbj(VBZ,DT) case(NN,TO) det(NN,DT) nmod:to(VBZ,NN) pnct(VBZ,VBZ)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I regret to say that at present the difficulties involved in doing that are too great.,IPRP regretVBP toTO sayVB thatIN atIN presentJJ theDT difficultiesNNS involvedVBN inIN doingVBG thatDT areVBP tooRB greatJJ ,"root(ROOT-0, regret-2) nsubj(regret-2, I-1) mark(say-4, to-3) xcomp(regret-2, say-4) dobj(say-4, that-5) case(present-7, at-6) nmod:at(that-5, present-7) det(difficulties-9, the-8) dep(present-7, difficulties-9) acl(difficulties-9, involved-10) mark(doing-12, in-11) advcl(involved-10, doing-12) nsubj(great-16, that-13) cop(great-16, are-14) advmod(great-16, too-15) ccomp(doing-12, great-16) punct(regret-2, .-17)",0,0,0,"root(ROOT, regret) nsbj(regret, I) mark(say, to) xcomp(regret, say) dobj(say, that) case(present, at) nmod:at(that, present) det(difficlties, the) dep(present, difficlties) acl(difficlties, involved) mark(doing, in) advcl(involved, doing) nsbj(great, that) cop(great, are) advmod(great, too) ccomp(doing, great) pnct(regret, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,TO) xcomp(VBP,VB) dobj(VB,DT) case(JJ,IN) nmod:at(DT,JJ) det(NNS,DT) dep(JJ,NNS) acl(NNS,VBN) mark(VBG,IN) advcl(VBN,VBG) nsbj(JJ,DT) cop(JJ,VBP) advmod(JJ,RB) ccomp(VBG,JJ) pnct(VBP,VBP)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  I hope that the time will very soon come when we are able to do it.,HoweverRB IPRP hopeVBP thatIN theDT timeNN willMD veryRB soonRB comeVB whenWRB wePRP areVBP ableJJ toTO doVB itPRP ,"root(ROOT-0, hope-4) advmod(hope-4, However-1) punct(hope-4, ,-2) nsubj(hope-4, I-3) mark(come-11, that-5) det(time-7, the-6) nsubj(come-11, time-7) aux(come-11, will-8) advmod(soon-10, very-9) advmod(come-11, soon-10) ccomp(hope-4, come-11) advmod(able-15, when-12) nsubj(able-15, we-13) cop(able-15, are-14) advcl(come-11, able-15) mark(do-17, to-16) xcomp(able-15, do-17) dobj(do-17, it-18) punct(hope-4, .-19)",0,0,0,"root(ROOT, hope) advmod(hope, However) pnct(hope, ,) nsbj(hope, I) mark(come, that) det(time, the) nsbj(come, time) ax(come, will) advmod(soon, very) advmod(come, soon) ccomp(hope, come) advmod(able, when) nsbj(able, we) cop(able, are) advcl(come, able) mark(do, to) xcomp(able, do) dobj(do, it) pnct(hope, .)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) nsbj(VBP,PRP) mark(VB,IN) det(NN,DT) nsbj(VB,NN) ax(VB,MD) advmod(RB,RB) advmod(VB,RB) ccomp(VBP,VB) advmod(JJ,WRB) nsbj(JJ,PRP) cop(JJ,VBP) advcl(VB,JJ) mark(VB,TO) xcomp(JJ,VB) VBbj(VB,PRP) pnct(VBP,VBP)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he tell us plainly that BA's privatisation will be abandoned and that he will have urgent discussions  I gather there will be an opportunity later this afternoon  with Lord King about the development programme and the replacement of BA's fleet?,WillMD hePRP tellVB usPRP plainlyRB thatIN BANNP 'sPOS privatisationNN willMD beVB abandonedVBN andCC thatIN hePRP willMD haveVB urgentJJ discussionsNNS IPRP gatherVBP thereEX willMD beVB anDT opportunityNN laterRB thisDT afternoonNN withIN LordNNP KingVBG aboutIN theDT developmentNN programmeNN andCC theDT replacementNN ofIN BANNP 'sPOS fleetNN ,"root(ROOT-0, tell-3) aux(tell-3, Will-1) nsubj(tell-3, he-2) dobj(tell-3, us-4) advmod(tell-3, plainly-5) mark(abandoned-12, that-6) nmod:poss(privatisation-9, BA-7) case(BA-7, 's-8) nsubjpass(abandoned-12, privatisation-9) aux(abandoned-12, will-10) auxpass(abandoned-12, be-11) ccomp(tell-3, abandoned-12) cc(abandoned-12, and-13) mark(have-17, that-14) nsubj(have-17, he-15) aux(have-17, will-16) ccomp(tell-3, have-17) conj:and(abandoned-12, have-17) amod(discussions-19, urgent-18) dobj(have-17, discussions-19) nsubj(gather-21, I-20) acl:relcl(discussions-19, gather-21) expl(opportunity-26, there-22) aux(opportunity-26, will-23) cop(opportunity-26, be-24) det(opportunity-26, an-25) ccomp(gather-21, opportunity-26) advmod(opportunity-26, later-27) det(afternoon-29, this-28) nmod:tmod(opportunity-26, afternoon-29) case(King-32, with-30) compound(King-32, Lord-31) nmod:with(opportunity-26, King-32) case(programme-36, about-33) det(programme-36, the-34) compound(programme-36, development-35) nmod:about(King-32, programme-36) cc(King-32, and-37) det(replacement-39, the-38) nmod:with(opportunity-26, replacement-39) conj:and(King-32, replacement-39) case(fleet-43, of-40) nmod:poss(fleet-43, BA-41) case(BA-41, 's-42) nmod:of(replacement-39, fleet-43) punct(tell-3, ?-44)",0,0,0,"root(ROOT, tell) ax(tell, Will) nsbj(tell, he) dobj(tell, s) advmod(tell, plainly) mark(abandoned, that) nmod:poss(privatisation, BA) ""case(BA, s)"", nsbjpass(abandoned, privatisation) ax(abandoned, will) axpass(abandoned, be) ccomp(tell, abandoned) cc(abandoned, and) mark(have, that) nsbj(have, he) ax(have, will) ccomp(tell, have) conj:and(abandoned, have) amod(discssions, rgent) dobj(have, discssions) nsbj(gather, I) acl:relcl(discssions, gather) expl(opportnity, there) ax(opportnity, will) cop(opportnity, be) det(opportnity, an) ccomp(gather, opportnity) advmod(opportnity, later) det(afternoon, this) nmod:tmod(opportnity, afternoon) case(King, with) compond(King, Lord) nmod:with(opportnity, King) case(programme, abot) det(programme, the) compond(programme, development) nmod:abot(King, programme) cc(King, and) det(replacement, the) nmod:with(opportnity, replacement) conj:and(King, replacement) case(fleet, of) nmod:poss(fleet, BA) ""case(BA, s)"", nmod:of(replacement, fleet) pnct(tell, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) dobj(VB,PRP) advmod(VB,RB) mark(VBN,IN) nmod:poss(NN,NNP) case(NNP,POS) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(VB,VBN) cc(VBN,CC) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) conj:and(VBN,VB) amod(NNS,JJ) dobj(VB,NNS) nsbj(VBP,PRP) acl:relcl(NNS,VBP) expl(NN,EX) ax(NN,MD) cop(NN,VB) det(NN,DT) ccomp(VBP,NN) advmod(NN,RB) det(NN,DT) nmod:tmod(NN,NN) case(VBG,IN) compond(VBG,NNP) nmod:with(NN,VBG) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:abot(VBG,NN) cc(VBG,CC) det(NN,DT) nmod:with(NN,NN) conj:and(VBG,NN) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) pnct(VB,VB)","[abandoned, have, tell, us, he, discussions, plainly, he, ROOT]","[abandoned, have, tell, us, he, discussions, plainly, he, ROOT]",13,[ ],[ ],VBN_abandoned VBP_have VB_tell PRP_us PRP_he NNS_discussions RB_plainly PRP_he ,"[abandoned, have, tell, us, he, discussions, plainly, he, ROOT]","[abandoned, have, tell, us, he, discussions, plainly, he, ROOT]",VBN_abandoned VBP_have VB_tell PRP_us PRP_he NNS_discussions RB_plainly PRP_he ,"[abandoned, have, tell, us, he, discussions, plainly, he, ROOT]",VBN_abandoned VBP_have VB_tell PRP_us PRP_he NNS_discussions RB_plainly PRP_he ,"[abandoned, have, tell, us, he, discussions, plainly, he, ROOT]",VBN_abandoned VBP_have VB_tell PRP_us PRP_he NNS_discussions RB_plainly PRP_he ,-3,0,2,0,0,0,2,0,0,0
In particular  will the right hon. Gentleman make it clear to Lord King that the privatisation of the helicopter division of British Airways should cease forthwith?,InIN particularJJ willMD theDT rightJJ honNN GentlemanNNP makeVBP itPRP clearJJ toTO LordNNP KingNNP thatIN theDT privatisationNN ofIN theDT helicopterNN divisionNN ofIN BritishNNP AirwaysNNP shouldMD ceaseVB forthwithNN ,"root(ROOT-0, make-9) case(particular-2, In-1) nmod:in(make-9, particular-2) punct(make-9, ,-3) aux(make-9, will-4) det(Gentleman-8, the-5) amod(Gentleman-8, right-6) compound(Gentleman-8, hon.-7) nsubj(make-9, Gentleman-8) nsubj(cease-26, it-10) dep(cease-26, clear-11) case(King-14, to-12) compound(King-14, Lord-13) nmod:to(clear-11, King-14) mark(cease-26, that-15) det(privatisation-17, the-16) nsubj(cease-26, privatisation-17) case(division-21, of-18) det(division-21, the-19) compound(division-21, helicopter-20) nmod:of(privatisation-17, division-21) case(Airways-24, of-22) compound(Airways-24, British-23) nmod:of(division-21, Airways-24) aux(cease-26, should-25) xcomp(make-9, cease-26) dobj(cease-26, forthwith-27) punct(make-9, ?-28)",0,0,0,"root(ROOT, make) case(particlar, In) nmod:in(make, particlar) pnct(make, ,) ax(make, will) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(make, Gentleman) nsbj(cease, it) dep(cease, clear) case(King, to) compond(King, Lord) nmod:to(clear, King) mark(cease, that) det(privatisation, the) nsbj(cease, privatisation) case(division, of) det(division, the) compond(division, helicopter) nmod:of(privatisation, division) case(Airways, of) compond(Airways, British) nmod:of(division, Airways) ax(cease, shold) xcomp(make, cease) dobj(cease, forthwith) pnct(make, ?)","root(,VBP) case(JJ,IN) nmod:in(VBP,JJ) pnct(VBP,VBP) ax(VBP,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBP,NNP) nsbj(VB,PRP) dep(VB,JJ) case(NNP,TO) compond(NNP,NNP) nmod:to(JJ,NNP) mark(VB,IN) det(NN,DT) nsbj(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) case(NNP,IN) compond(NNP,NNP) nmod:of(NN,NNP) ax(VB,MD) xcomp(VBP,VB) dobj(VB,NN) pnct(VBP,VBP)","[particular, Gentleman, cease, ROOT, make, right]","[particular, ROOT, make, Gentleman, cease]",13,[ ],[ ],JJ_particular VB_make NNP_Gentleman VB_cease ,"[particular, ROOT, make, Gentleman, cease]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I have not postponed BA's privatisation.,IPRP haveVBP notRB postponedVBN BANNP 'sPOS privatisationNN ,"root(ROOT-0, postponed-4) nsubj(postponed-4, I-1) aux(postponed-4, have-2) neg(postponed-4, not-3) nmod:poss(privatisation-7, BA-5) case(BA-5, 's-6) dobj(postponed-4, privatisation-7) punct(postponed-4, .-8)",0,0,0,"root(ROOT, postponed) nsbj(postponed, I) ax(postponed, have) neg(postponed, not) nmod:poss(privatisation, BA) ""case(BA, s)"", dobj(postponed, privatisation) pnct(postponed, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) neg(VBN,RB) nmod:poss(NN,NNP) case(NNP,POS) dobj(VBN,NN) pnct(VBN,VBN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The position before last week was that we hoped that it would be possible to privatise it during the coming financial year.,TheDT positionNN beforeIN lastJJ weekNN wasVBD thatIN wePRP hopedVBD thatIN itPRP wouldMD beVB possibleJJ toTO privatiseVB itPRP duringIN theDT comingVBG financialJJ yearNN ,"root(ROOT-0, was-6) det(position-2, The-1) nsubj(was-6, position-2) case(week-5, before-3) amod(week-5, last-4) nmod:before(position-2, week-5) mark(hoped-9, that-7) nsubj(hoped-9, we-8) ccomp(was-6, hoped-9) mark(possible-14, that-10) nsubj(possible-14, it-11) aux(possible-14, would-12) cop(possible-14, be-13) ccomp(hoped-9, possible-14) mark(privatise-16, to-15) xcomp(possible-14, privatise-16) dobj(privatise-16, it-17) case(year-22, during-18) det(year-22, the-19) amod(year-22, coming-20) amod(year-22, financial-21) nmod:during(privatise-16, year-22) punct(was-6, .-23)",0,0,0,"root(ROOT, was) det(position, The) nsbj(was, position) case(week, before) amod(week, last) nmod:before(position, week) mark(hoped, that) nsbj(hoped, we) ccomp(was, hoped) mark(possible, that) nsbj(possible, it) ax(possible, wold) cop(possible, be) ccomp(hoped, possible) mark(privatise, to) xcomp(possible, privatise) dobj(privatise, it) case(year, dring) det(year, the) amod(year, coming) amod(year, financial) nmod:dring(privatise, year) pnct(was, .)","root(,VBD) det(NN,DT) nsbj(VBD,NN) case(NN,IN) amod(NN,JJ) nmod:before(NN,NN) mark(VBD,IN) nsbj(VBD,PRP) ccomp(VBD,VBD) mark(JJ,IN) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) ccomp(VBD,JJ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,PRP) case(NN,IN) det(NN,DT) amod(NN,VBG) amod(NN,JJ) nmod:dring(VB,NN) pnct(VBD,VBD)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is still the position.,ThatDT isVBZ stillRB theDT positionNN ,"root(ROOT-0, position-5) nsubj(position-5, That-1) cop(position-5, is-2) advmod(position-5, still-3) det(position-5, the-4) punct(position-5, .-6)",0,0,0,"root(ROOT, position) nsbj(position, That) cop(position, is) advmod(position, still) det(position, the) pnct(position, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) advmod(NN,RB) det(NN,DT) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Government never mentioned a summer date.,TheDT GovernmentNNP neverRB mentionedVBD aDT summerNN dateNN ,"root(ROOT-0, mentioned-4) det(Government-2, The-1) nsubj(mentioned-4, Government-2) neg(mentioned-4, never-3) det(date-7, a-5) compound(date-7, summer-6) dobj(mentioned-4, date-7) punct(mentioned-4, .-8)",0,0,0,"root(ROOT, mentioned) det(Government, The) nsbj(mentioned, Government) neg(mentioned, never) det(date, a) compond(date, smmer) dobj(mentioned, date) pnct(mentioned, .)","root(,VBD) det(NNP,DT) nsbj(VBD,NNP) neg(VBD,RB) det(NN,DT) compond(NN,NN) dobj(VBD,NN) pnct(VBD,VBD)","[Government, ROOT, date, mentioned, never]","[Government, ROOT, date, mentioned, never]",14,"[Government, ROOT, date, mentioned, never]","[Government, ROOT, date, mentioned, never]",NNP_Government NN_date VBD_mentioned RB_never ,"[Government, ROOT, date, mentioned, never]","[Government, ROOT, date, mentioned, never]",NNP_Government NN_date VBD_mentioned RB_never ,"[Government, ROOT, date, mentioned, never]",NNP_Government NN_date VBD_mentioned RB_never ,"[Government, ROOT, date, mentioned, never]",NNP_Government NN_date VBD_mentioned RB_never ,-3,0,2,0,0,0,0,0,0,0
I have already given the assurance that equipment that is needed by BA  and which passes the viability test  will be sanctioned by the Government.,IPRP haveVBP alreadyRB givenVBN theDT assuranceNN thatWDT equipmentNN thatWDT isVBZ neededVBN byIN BANNP andCC whichWDT passesVBZ theDT viabilityNN testNN willMD beVB sanctionedVBN byIN theDT GovernmentNNP ,"root(ROOT-0, given-4) nsubj(given-4, I-1) aux(given-4, have-2) advmod(given-4, already-3) det(assurance-6, the-5) dobj(given-4, assurance-6) det(equipment-8, that-7) dep(assurance-6, equipment-8) nsubjpass(needed-11, that-9) auxpass(needed-11, is-10) acl:relcl(equipment-8, needed-11) case(BA-13, by-12) nmod:agent(needed-11, BA-13) punct(equipment-8, ,-14) cc(equipment-8, and-15) nsubj(passes-17, which-16) dep(assurance-6, passes-17) conj:and(equipment-8, passes-17) det(test-20, the-18) compound(test-20, viability-19) dobj(passes-17, test-20) punct(passes-17, ,-21) aux(sanctioned-24, will-22) auxpass(sanctioned-24, be-23) parataxis(passes-17, sanctioned-24) case(Government-27, by-25) det(Government-27, the-26) nmod:agent(sanctioned-24, Government-27) punct(given-4, .-28)",0,0,0,"root(ROOT, given) nsbj(given, I) ax(given, have) advmod(given, already) det(assrance, the) dobj(given, assrance) det(eqipment, that) dep(assrance, eqipment) nsbjpass(needed, that) axpass(needed, is) acl:relcl(eqipment, needed) case(BA, by) nmod:agent(needed, BA) pnct(eqipment, ,) cc(eqipment, and) nsbj(passes, which) dep(assrance, passes) conj:and(eqipment, passes) det(test, the) compond(test, viability) dobj(passes, test) pnct(passes, ,) ax(sanctioned, will) axpass(sanctioned, be) parataxis(passes, sanctioned) case(Government, by) det(Government, the) nmod:agent(sanctioned, Government) pnct(given, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) det(NN,DT) dobj(VBN,NN) det(NN,WDT) dep(NN,NN) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl:relcl(NN,VBN) case(NNP,IN) nmod:agent(VBN,NNP) pnct(NN,NN) cc(NN,CC) nsbj(VBZ,WDT) dep(NN,VBZ) conj:and(NN,VBZ) det(NN,DT) compond(NN,NN) dobj(VBZ,NN) pnct(VBZ,VBZ) ax(VBN,MD) axpass(VBN,VB) parataxis(VBZ,VBN) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) pnct(VBN,VBN)","[sanctioned, Government]","[sanctioned, Government]",14,"[sanctioned, Government]","[sanctioned, Government]",VBN_sanctioned NNP_Government ,"[sanctioned, Government]","[sanctioned, Government]",VBN_sanctioned NNP_Government ,"[sanctioned, Government]",VBN_sanctioned NNP_Government ,"[sanctioned, Government]",VBN_sanctioned NNP_Government ,-3,0,2,0,0,0,0,0,0,0
Moreover  I have no intention of interfering with commercial decisions that BA may or may not take on disposing of its helicopter subsidiary.,MoreoverRB IPRP haveVBP noDT intentionNN ofIN interferingVBG withIN commercialJJ decisionsNNS thatIN BANNP mayMD orCC mayMD notRB takeVB onIN disposingVBG ofIN itsPRP$ helicopterNN subsidiaryNN ,"root(ROOT-0, have-4) advmod(have-4, Moreover-1) punct(have-4, ,-2) nsubj(have-4, I-3) neg(intention-6, no-5) dobj(have-4, intention-6) mark(interfering-8, of-7) acl(intention-6, interfering-8) case(decisions-11, with-9) amod(decisions-11, commercial-10) nmod:with(interfering-8, decisions-11) dep(decisions-11, that-12) dep(that-12, BA-13) dep(BA-13, may-14) cc(may-14, or-15) aux(take-18, may-16) neg(take-18, not-17) dep(BA-13, take-18) conj:or(may-14, take-18) compound:prt(take-18, on-19) xcomp(take-18, disposing-20) case(subsidiary-24, of-21) nmod:poss(subsidiary-24, its-22) compound(subsidiary-24, helicopter-23) nmod:of(disposing-20, subsidiary-24) punct(have-4, .-25)",0,0,0,"root(ROOT, have) advmod(have, Moreover) pnct(have, ,) nsbj(have, I) neg(intention, no) dobj(have, intention) mark(interfering, of) acl(intention, interfering) case(decisions, with) amod(decisions, commercial) nmod:with(interfering, decisions) dep(decisions, that) dep(that, BA) dep(BA, may) cc(may, or) ax(take, may) neg(take, not) dep(BA, take) conj:or(may, take) compond:prt(take, on) xcomp(take, disposing) case(sbsidiary, of) nmod:poss(sbsidiary, its) compond(sbsidiary, helicopter) nmod:of(disposing, sbsidiary) pnct(have, .)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) nsbj(VBP,PRP) neg(NN,DT) dobj(VBP,NN) mark(VBG,IN) acl(NN,VBG) case(NNS,IN) amod(NNS,JJ) nmod:with(VBG,NNS) dep(NNS,IN) dep(IN,NNP) dep(NNP,MD) cc(MD,CC) ax(VB,MD) neg(VB,RB) dep(NNP,VB) conj:or(MD,VB) compond:prt(VB,IN) xcomp(VB,VBG) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NN) nmod:of(VBG,NN) pnct(VBP,VBP)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my right hon. Friend agree that the success of BA's privatisation is likely to be much greater if outstanding problems are resolved before the publication of the prospectus  rather than afterwards?,DoesNNP myPRP$ rightJJ honNN FriendNNP agreeVBZ thatIN theDT successNN ofIN BANNP 'sPOS privatisationNN isVBZ likelyJJ toTO beVB muchRB greaterJJR ifIN outstandingJJ problemsNNS areVBP resolvedVBN beforeIN theDT publicationNN ofIN theDT prospectusNN ratherRB thanIN afterwardsNNS ,"root(ROOT-0, agree-6) aux(agree-6, Does-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(agree-6, Friend-5) mark(likely-15, that-7) det(success-9, the-8) nsubj(likely-15, success-9) case(privatisation-13, of-10) nmod:poss(privatisation-13, BA-11) case(BA-11, 's-12) nmod:of(success-9, privatisation-13) cop(likely-15, is-14) ccomp(agree-6, likely-15) mark(greater-19, to-16) cop(greater-19, be-17) advmod(greater-19, much-18) xcomp(likely-15, greater-19) mark(resolved-24, if-20) amod(problems-22, outstanding-21) nsubjpass(resolved-24, problems-22) auxpass(resolved-24, are-23) advcl(greater-19, resolved-24) case(publication-27, before-25) det(publication-27, the-26) nmod:before(resolved-24, publication-27) case(prospectus-30, of-28) det(prospectus-30, the-29) nmod:of(publication-27, prospectus-30) punct(agree-6, ,-31) case(afterwards-34, rather-32) mwe(rather-32, than-33) advmod(agree-6, afterwards-34) punct(agree-6, ?-35)",0,0,0,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(agree, Friend) mark(likely, that) det(sccess, the) nsbj(likely, sccess) case(privatisation, of) nmod:poss(privatisation, BA) ""case(BA, s)"", nmod:of(sccess, privatisation) cop(likely, is) ccomp(agree, likely) mark(greater, to) cop(greater, be) advmod(greater, mch) xcomp(likely, greater) mark(resolved, if) amod(problems, otstanding) nsbjpass(resolved, problems) axpass(resolved, are) advcl(greater, resolved) case(pblication, before) det(pblication, the) nmod:before(resolved, pblication) case(prospects, of) det(prospects, the) nmod:of(pblication, prospects) pnct(agree, ,) case(afterwards, rather) mwe(rather, than) advmod(agree, afterwards) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) cop(JJ,VBZ) ccomp(VBZ,JJ) mark(JJR,TO) cop(JJR,VB) advmod(JJR,RB) xcomp(JJ,JJR) mark(VBN,IN) amod(NNS,JJ) nsbjpass(VBN,NNS) axpass(VBN,VBP) advcl(JJR,VBN) case(NN,IN) det(NN,DT) nmod:before(VBN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBZ,VBZ) case(NNS,RB) mwe(RB,IN) advmod(VBZ,NNS) pnct(VBZ,VBZ)","[afterwards, Friend, my, ROOT, right, likely, agree]","[afterwards, Friend, my, ROOT, likely, agree]",15,[ ],[ ],NNS_afterwards NNP_Friend PRP$_my JJ_likely VB_agree ,"[afterwards, Friend, my, ROOT, likely, agree]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
That is true.,ThatDT isVBZ trueJJ ,"root(ROOT-0, true-3) nsubj(true-3, That-1) cop(true-3, is-2) punct(true-3, .-4)",0,1,0,"root(ROOT, tre) nsbj(tre, That) cop(tre, is) pnct(tre, .)","root(,JJ) nsbj(JJ,DT) cop(JJ,VBZ) pnct(JJ,JJ)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As we hope to involve the managers and staff of BA  together with many small investors  it is most important that the prospectus is straightforward and does not mislead them.,AsIN wePRP hopeVBP toTO involveVB theDT managersNNS andCC staffNN ofIN BANNP togetherRB withIN manyJJ smallJJ investorsNNS itPRP isVBZ mostRBS importantJJ thatIN theDT prospectusNN isVBZ straightforwardJJ andCC doesVBZ notRB misleadVB themPRP ,"root(ROOT-0, hope-3) mark(hope-3, As-1) nsubj(hope-3, we-2) mark(involve-5, to-4) xcomp(hope-3, involve-5) det(managers-7, the-6) dobj(involve-5, managers-7) cc(managers-7, and-8) dobj(involve-5, staff-9) conj:and(managers-7, staff-9) case(BA-11, of-10) nmod:of(staff-9, BA-11) punct(managers-7, ,-12) advmod(managers-7, together-13) case(investors-17, with-14) amod(investors-17, many-15) amod(investors-17, small-16) nmod:with(together-13, investors-17) punct(managers-7, ,-18) nsubj(important-22, it-19) cop(important-22, is-20) advmod(important-22, most-21) acl:relcl(managers-7, important-22) mark(straightforward-27, that-23) det(prospectus-25, the-24) nsubj(straightforward-27, prospectus-25) nsubj(mislead-31, prospectus-25) cop(straightforward-27, is-26) ccomp(important-22, straightforward-27) cc(straightforward-27, and-28) aux(mislead-31, does-29) neg(mislead-31, not-30) ccomp(important-22, mislead-31) conj:and(straightforward-27, mislead-31) dobj(mislead-31, them-32) punct(hope-3, .-33)",0,0,0,"root(ROOT, hope) mark(hope, As) nsbj(hope, we) mark(involve, to) xcomp(hope, involve) det(managers, the) dobj(involve, managers) cc(managers, and) dobj(involve, staff) conj:and(managers, staff) case(BA, of) nmod:of(staff, BA) pnct(managers, ,) advmod(managers, together) case(investors, with) amod(investors, many) amod(investors, small) nmod:with(together, investors) pnct(managers, ,) nsbj(important, it) cop(important, is) advmod(important, most) acl:relcl(managers, important) mark(straightforward, that) det(prospects, the) nsbj(straightforward, prospects) nsbj(mislead, prospects) cop(straightforward, is) ccomp(important, straightforward) cc(straightforward, and) ax(mislead, does) neg(mislead, not) ccomp(important, mislead) conj:and(straightforward, mislead) dobj(mislead, them) pnct(hope, .)","root(,VBP) mark(VBP,IN) nsbj(VBP,PRP) mark(VB,TO) xcomp(VBP,VB) det(NNS,DT) dobj(VB,NNS) cc(NNS,CC) dobj(VB,NN) conj:and(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(NNS,NNS) advmod(NNS,RB) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:with(RB,NNS) pnct(NNS,NNS) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RBS) acl:relcl(NNS,JJ) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) nsbj(VB,NN) cop(JJ,VBZ) ccomp(JJ,JJ) cc(JJ,CC) ax(VB,VBZ) neg(VB,RB) ccomp(JJ,VB) conj:and(JJ,VB) dobj(VB,PRP) pnct(VBP,VBP)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for the Environment what initiatives he intends to take to solve the problems of homelessness.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN theDT EnvironmentNNP whatWP initiativesVBZ hePRP intendsVBZ toTO takeVB toTO solveVB theDT problemsNNS ofIN homelessnessNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Environment-8, for-6) det(Environment-8, the-7) nmod:for(asked-1, Environment-8) det(initiatives-10, what-9) dobj(intends-12, initiatives-10) nsubj(intends-12, he-11) acl:relcl(Environment-8, intends-12) mark(take-14, to-13) xcomp(intends-12, take-14) mark(solve-16, to-15) xcomp(take-14, solve-16) det(problems-18, the-17) dobj(solve-16, problems-18) case(homelessness-20, of-19) nmod:of(problems-18, homelessness-20) punct(asked-1, .-21)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Environment, for) det(Environment, the) nmod:for(asked, Environment) det(initiatives, what) dobj(intends, initiatives) nsbj(intends, he) acl:relcl(Environment, intends) mark(take, to) xcomp(intends, take) mark(solve, to) xcomp(take, solve) det(problems, the) dobj(solve, problems) case(homelessness, of) nmod:of(problems, homelessness) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) det(NNP,DT) nmod:for(VBN,NNP) det(VBZ,WP) dobj(VBZ,VBZ) nsbj(VBZ,PRP) acl:relcl(NNP,VBZ) mark(VB,TO) xcomp(VBZ,VB) mark(VB,TO) xcomp(VB,VB) det(NNS,DT) dobj(VB,NNS) case(NN,IN) nmod:of(NNS,NN) pnct(VBN,VBN)","[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]","[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]",1,"[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]","[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]",NNP_Environment NNS_initiatives PRP_he NNP_State VBZ_intends VB_take NNP_Secretary VBN_asked ,"[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]","[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]",NNP_Environment NNS_initiatives PRP_he NNP_State VBZ_intends VB_take NNP_Secretary VBN_asked ,"[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]",NNP_Environment NNS_initiatives PRP_he NNP_State VBZ_intends VB_take NNP_Secretary VBN_asked ,"[Environment, initiatives, he, State, intends, take, Secretary, ROOT, asked]",NNP_Environment NNS_initiatives PRP_he NNP_State VBZ_intends VB_take NNP_Secretary VBN_asked ,-3,0,2,0,0,0,0,0,0,0
I refer the hon. Members to the reply that I gave to the hon. Member for Houghton and Washington (Mr. Boyes) on 21 July.,IPRP referVBP theDT honNN MembersNNS toTO theDT replyNN thatIN IPRP gaveVBD toTO theDT honNN MemberNNP forIN HoughtonNNP andCC WashingtonNNP (( MrNNP BoyesNNP )) onIN 21CD JulyNNP ,"root(ROOT-0, refer-2) nsubj(refer-2, I-1) det(Members-5, the-3) compound(Members-5, hon.-4) dobj(refer-2, Members-5) case(reply-8, to-6) det(reply-8, the-7) nmod:to(refer-2, reply-8) mark(gave-11, that-9) nsubj(gave-11, I-10) ccomp(reply-8, gave-11) case(Member-15, to-12) det(Member-15, the-13) compound(Member-15, hon.-14) nmod:to(gave-11, Member-15) case(Houghton-17, for-16) nmod:for(Member-15, Houghton-17) cc(Houghton-17, and-18) nmod:for(Member-15, Washington-19) conj:and(Houghton-17, Washington-19) punct(Boyes-22, -LRB--20) compound(Boyes-22, Mr.-21) appos(Member-15, Boyes-22) punct(Boyes-22, -RRB--23) case(July-26, on-24) nummod(July-26, 21-25) nmod:on(Member-15, July-26) punct(refer-2, .-27)",0,1,1,"root(ROOT, refer) nsbj(refer, I) det(Members, the) compond(Members, hon.) dobj(refer, Members) case(reply, to) det(reply, the) nmod:to(refer, reply) mark(gave, that) nsbj(gave, I) ccomp(reply, gave) case(Member, to) det(Member, the) compond(Member, hon.) nmod:to(gave, Member) case(Hoghton, for) nmod:for(Member, Hoghton) cc(Hoghton, and) nmod:for(Member, Washington) conj:and(Hoghton, Washington) pnct(Boyes, ) compond(Boyes, Mr.) appos(Member, Boyes) pnct(Boyes, ) case(Jly, on) nmmod(Jly, 21) nmod:on(Member, Jly) pnct(refer, .)","root(,VBP) nsbj(VBP,PRP) det(NNS,DT) compond(NNS,NNS) dobj(VBP,NNS) case(NN,TO) det(NN,DT) nmod:to(VBP,NN) mark(VBD,IN) nsbj(VBD,PRP) ccomp(NN,VBD) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VBD,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) case(NNP,IN) nmmod(NNP,CD) nmod:on(NNP,NNP) pnct(VBP,VBP)","[Houghton, Member, and, Boyes, I, Washington, July, gave, reply, 21]",[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the Minister accept that there is a real crisis of homelessness  especially in the London area?,DoesVBZ theDT MinisterNNP acceptVBD thatIN thereEX isVBZ aDT realJJ crisisNN ofIN homelessnessNN especiallyRB inIN theDT LondonNNP areaNN ,"root(ROOT-0, accept-4) aux(accept-4, Does-1) det(Minister-3, the-2) nsubj(accept-4, Minister-3) mark(is-7, that-5) expl(is-7, there-6) ccomp(accept-4, is-7) det(crisis-10, a-8) amod(crisis-10, real-9) nsubj(is-7, crisis-10) case(homelessness-12, of-11) nmod:of(crisis-10, homelessness-12) punct(is-7, ,-13) advmod(area-18, especially-14) case(area-18, in-15) det(area-18, the-16) compound(area-18, London-17) nmod:in(is-7, area-18) punct(accept-4, ?-19)",0,0,0,"root(ROOT, accept) ax(accept, Does) det(Minister, the) nsbj(accept, Minister) mark(is, that) expl(is, there) ccomp(accept, is) det(crisis, a) amod(crisis, real) nsbj(is, crisis) case(homelessness, of) nmod:of(crisis, homelessness) pnct(is, ,) advmod(area, especially) case(area, in) det(area, the) compond(area, London) nmod:in(is, area) pnct(accept, ?)","root(,VBD) ax(VBD,VBZ) det(NNP,DT) nsbj(VBD,NNP) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBD,VBZ) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBZ,VBZ) advmod(NN,RB) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:in(VBZ,NN) pnct(VBD,VBD)","[ROOT, accept, is, Minister]","[ROOT, accept, is, Minister]",3,[ ],[ ],VBD_accept VBZ_is NNP_Minister ,"[ROOT, accept, is, Minister]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is an increase of 16 per cent.,ThatDT isVBZ anDT increaseNN ofIN 16CD perIN centNN ,"root(ROOT-0, increase-4) nsubj(increase-4, That-1) cop(increase-4, is-2) det(increase-4, an-3) case(16-6, of-5) nmod:of(increase-4, 16-6) case(cent-8, per-7) nmod:per(16-6, cent-8) punct(increase-4, .-9)",0,0,0,"root(ROOT, increase) nsbj(increase, That) cop(increase, is) det(increase, an) case(16, of) nmod:of(increase, 16) case(cent, per) nmod:per(16, cent) pnct(increase, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) case(CD,IN) nmod:of(NN,CD) case(NN,IN) nmod:per(CD,NN) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
in three months.,inIN threeCD monthsNNS ,"root(ROOT-0, months-3) case(months-3, in-1) nummod(months-3, three-2) punct(months-3, .-4)",0,0,0,"root(ROOT, months) case(months, in) nmmod(months, three) pnct(months, .)","root(,NNS) case(NNS,IN) nmmod(NNS,CD) pnct(NNS,NNS)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Over a year the cost to local authorities in London has doubled from £13 million to £26 million.,OverIN aDT yearNN theDT costNN toTO localJJ authoritiesNNS inIN LondonNNP hasVBZ doubledVBN fromIN £13CD millionCD toTO £26CD millionCD ,"root(ROOT-0, year-3) case(year-3, Over-1) det(year-3, a-2) det(cost-5, the-4) nsubj(doubled-12, cost-5) case(authorities-8, to-6) amod(authorities-8, local-7) nmod:to(cost-5, authorities-8) case(London-10, in-9) nmod:in(cost-5, London-10) aux(doubled-12, has-11) acl:relcl(year-3, doubled-12) case(million-16, from-13) compound(million-16, #-14) compound(million-16, 13-15) nmod:from(doubled-12, million-16) case(million-20, to-17) compound(million-20, #-18) compound(million-20, 26-19) nmod:to(doubled-12, million-20) punct(year-3, .-21)",0,0,0,"root(ROOT, year) case(year, Over) det(year, a) det(cost, the) nsbj(dobled, cost) case(athorities, to) amod(athorities, local) nmod:to(cost, athorities) case(London, in) nmod:in(cost, London) ax(dobled, has) acl:relcl(year, dobled) case(million, from) compond(million, #) compond(million, 13) nmod:from(dobled, million) case(million, to) compond(million, #) compond(million, 26) nmod:to(dobled, million) pnct(year, .)","root(,NN) case(NN,IN) det(NN,DT) det(NN,DT) nsbj(VBN,NN) case(NNS,TO) amod(NNS,JJ) nmod:to(NN,NNS) case(NNP,IN) nmod:in(NN,NNP) ax(VBN,VBZ) acl:relcl(NN,VBN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:from(VBN,CD) case(CD,TO) compond(CD,CD) compond(CD,CD) nmod:to(VBN,CD) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Keeping families with young children in bed and breakfast accommodation is humiliating and degrading and ought to be brought to an end immediately.,KeepingVBG familiesNNS withIN youngJJ childrenNNS inIN bedNN andCC breakfastNN accommodationNN isVBZ humiliatingVBG andCC degradingVBG andCC oughtMD toTO beVB broughtVBN toTO anDT endNN immediatelyRB ,"root(ROOT-0, humiliating-12) csubj(humiliating-12, Keeping-1) csubj(degrading-14, Keeping-1) dobj(Keeping-1, families-2) case(children-5, with-3) amod(children-5, young-4) nmod:with(Keeping-1, children-5) case(bed-7, in-6) nmod:in(Keeping-1, bed-7) cc(bed-7, and-8) compound(accommodation-10, breakfast-9) nmod:in(Keeping-1, accommodation-10) conj:and(bed-7, accommodation-10) cop(humiliating-12, is-11) cc(humiliating-12, and-13) conj:and(humiliating-12, degrading-14) cc(humiliating-12, and-15) conj:and(humiliating-12, ought-16) mark(brought-19, to-17) auxpass(brought-19, be-18) xcomp(ought-16, brought-19) case(end-22, to-20) det(end-22, an-21) nmod:to(brought-19, end-22) advmod(brought-19, immediately-23) punct(humiliating-12, .-24)",0,0,1,"root(ROOT, hmiliating) csbj(hmiliating, Keeping) csbj(degrading, Keeping) dobj(Keeping, families) case(children, with) amod(children, yong) nmod:with(Keeping, children) case(bed, in) nmod:in(Keeping, bed) cc(bed, and) compond(accommodation, breakfast) nmod:in(Keeping, accommodation) conj:and(bed, accommodation) cop(hmiliating, is) cc(hmiliating, and) conj:and(hmiliating, degrading) cc(hmiliating, and) conj:and(hmiliating, oght) mark(broght, to) axpass(broght, be) xcomp(oght, broght) case(end, to) det(end, an) nmod:to(broght, end) advmod(broght, immediately) pnct(hmiliating, .)","root(,VBG) csbj(VBG,VBG) csbj(VBG,VBG) dobj(VBG,NNS) case(NNS,IN) amod(NNS,JJ) nmod:with(VBG,NNS) case(NN,IN) nmod:in(VBG,NN) cc(NN,CC) compond(NN,NN) nmod:in(VBG,NN) conj:and(NN,NN) cop(VBG,VBZ) cc(VBG,CC) conj:and(VBG,VBG) cc(VBG,CC) conj:and(VBG,MD) mark(VBN,TO) axpass(VBN,VB) xcomp(MD,VBN) case(NN,TO) det(NN,DT) nmod:to(VBN,NN) advmod(VBN,RB) pnct(VBG,VBG)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
This year we have increased by £200 million the provision for housing investment  and we have redistributed it in such a way as to give more benefit to those boroughs that have a homelessness problem.,ThisDT yearNN wePRP haveVBP increasedVBN byIN £200CD millionCD theDT provisionNN forIN housingNN investmentNN andCC wePRP haveVBP redistributedVBN itPRP inIN suchPDT aDT wayNN asIN toTO giveVB moreJJR benefitNN toTO thoseDT boroughsNNS thatWDT haveVBP aDT homelessnessNN problemNN ,"root(ROOT-0, increased-5) det(year-2, This-1) nmod:tmod(increased-5, year-2) nsubj(increased-5, we-3) aux(increased-5, have-4) case(million-9, by-6) compound(million-9, #-7) compound(million-9, 200-8) nmod:by(increased-5, million-9) det(provision-11, the-10) dobj(increased-5, provision-11) case(investment-14, for-12) compound(investment-14, housing-13) nmod:for(provision-11, investment-14) punct(increased-5, ,-15) cc(increased-5, and-16) nsubj(redistributed-19, we-17) aux(redistributed-19, have-18) conj:and(increased-5, redistributed-19) dobj(redistributed-19, it-20) case(way-24, in-21) det:predet(way-24, such-22) det(way-24, a-23) nmod:in(redistributed-19, way-24) mark(give-27, as-25) mark(give-27, to-26) advcl(redistributed-19, give-27) amod(benefit-29, more-28) dobj(give-27, benefit-29) case(boroughs-32, to-30) det(boroughs-32, those-31) nmod:to(give-27, boroughs-32) nsubj(have-34, that-33) acl:relcl(boroughs-32, have-34) det(problem-37, a-35) compound(problem-37, homelessness-36) dobj(have-34, problem-37) punct(increased-5, .-38)",0,0,0,"root(ROOT, increased) det(year, This) nmod:tmod(increased, year) nsbj(increased, we) ax(increased, have) case(million, by) compond(million, #) compond(million, 200) nmod:by(increased, million) det(provision, the) dobj(increased, provision) case(investment, for) compond(investment, hosing) nmod:for(provision, investment) pnct(increased, ,) cc(increased, and) nsbj(redistribted, we) ax(redistribted, have) conj:and(increased, redistribted) dobj(redistribted, it) case(way, in) det:predet(way, sch) det(way, a) nmod:in(redistribted, way) mark(give, as) mark(give, to) advcl(redistribted, give) amod(benefit, more) dobj(give, benefit) case(boroghs, to) det(boroghs, those) nmod:to(give, boroghs) nsbj(have, that) acl:relcl(boroghs, have) det(problem, a) compond(problem, homelessness) dobj(have, problem) pnct(increased, .)","root(,VBN) det(NN,DT) nmod:tmod(VBN,NN) nsbj(VBN,PRP) ax(VBN,VBP) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:by(VBN,CD) det(NN,DT) dobj(VBN,NN) case(NN,IN) compond(NN,NN) nmod:for(NN,NN) pnct(VBN,VBN) cc(VBN,CC) nsbj(VBN,PRP) ax(VBN,VBP) conj:and(VBN,VBN) dobj(VBN,PRP) case(NN,IN) det:predet(NN,PDT) det(NN,DT) nmod:in(VBN,NN) mark(VB,IN) mark(VB,TO) advcl(VBN,VB) amod(NN,JJR) dobj(VB,NN) case(NNS,TO) det(NNS,DT) nmod:to(VB,NNS) nsbj(VBP,WDT) acl:relcl(NNS,VBP) det(NN,DT) compond(NN,NN) dobj(VBP,NN) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We have asked the boroughs to give specific priority to the homeless when they make their investment decisions.,WePRP haveVBP askedVBN theDT boroughsNNS toTO giveVB specificJJ priorityNN toTO theDT homelessNN whenWRB theyPRP makeVBP theirPRP$ investmentNN decisionsNNS ,"root(ROOT-0, asked-3) nsubj(asked-3, We-1) aux(asked-3, have-2) det(boroughs-5, the-4) dobj(asked-3, boroughs-5) mark(give-7, to-6) xcomp(asked-3, give-7) amod(priority-9, specific-8) dobj(give-7, priority-9) case(homeless-12, to-10) det(homeless-12, the-11) nmod:to(give-7, homeless-12) advmod(make-15, when-13) nsubj(make-15, they-14) advcl(give-7, make-15) nmod:poss(decisions-18, their-16) compound(decisions-18, investment-17) dobj(make-15, decisions-18) punct(asked-3, .-19)",0,0,0,"root(ROOT, asked) nsbj(asked, We) ax(asked, have) det(boroghs, the) dobj(asked, boroghs) mark(give, to) xcomp(asked, give) amod(priority, specific) dobj(give, priority) case(homeless, to) det(homeless, the) nmod:to(give, homeless) advmod(make, when) nsbj(make, they) advcl(give, make) nmod:poss(decisions, their) compond(decisions, investment) dobj(make, decisions) pnct(asked, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) det(NNS,DT) dobj(VBN,NNS) mark(VB,TO) xcomp(VBN,VB) amod(NN,JJ) dobj(VB,NN) case(NN,TO) det(NN,DT) nmod:to(VB,NN) advmod(VBP,WRB) nsbj(VBP,PRP) advcl(VB,VBP) nmod:poss(NNS,PRP$) compond(NNS,NN) dobj(VBP,NNS) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is interesting to note that many London boroughs  such as Brent  are not taking up the offers under the Greater London mobility scheme that are available to meet the needs of those in bed and breakfast accommodation.,ItPRP isVBZ interestingVBG toTO noteVB thatIN manyJJ LondonNNP boroughsNNS suchJJ asIN BrentNNP areVBP notRB takingVBG upRP theDT offersNNS underIN theDT GreaterNNP LondonNNP mobilityNN schemeNN thatWDT areVBP availableJJ toTO meetVB theDT needsNNS ofIN thoseDT inIN bedNN andCC breakfastNN accommodationNN ,"root(ROOT-0, interesting-3) nsubj(interesting-3, It-1) cop(interesting-3, is-2) mark(note-5, to-4) xcomp(interesting-3, note-5) mark(taking-17, that-6) amod(boroughs-9, many-7) compound(boroughs-9, London-8) nsubj(taking-17, boroughs-9) punct(boroughs-9, ,-10) case(Brent-13, such-11) mwe(such-11, as-12) nmod:such_as(boroughs-9, Brent-13) punct(boroughs-9, ,-14) aux(taking-17, are-15) neg(taking-17, not-16) ccomp(note-5, taking-17) compound:prt(taking-17, up-18) det(offers-20, the-19) dobj(taking-17, offers-20) case(scheme-26, under-21) det(scheme-26, the-22) compound(scheme-26, Greater-23) compound(scheme-26, London-24) compound(scheme-26, mobility-25) nmod:under(taking-17, scheme-26) nsubj(available-29, that-27) cop(available-29, are-28) acl:relcl(scheme-26, available-29) mark(meet-31, to-30) xcomp(available-29, meet-31) det(needs-33, the-32) dobj(meet-31, needs-33) case(those-35, of-34) nmod:of(needs-33, those-35) case(bed-37, in-36) nmod:in(needs-33, bed-37) cc(bed-37, and-38) compound(accommodation-40, breakfast-39) nmod:in(needs-33, accommodation-40) conj:and(bed-37, accommodation-40) punct(interesting-3, .-41)",0,0,0,"root(ROOT, interesting) nsbj(interesting, It) cop(interesting, is) mark(note, to) xcomp(interesting, note) mark(taking, that) amod(boroghs, many) compond(boroghs, London) nsbj(taking, boroghs) pnct(boroghs, ,) case(Brent, sch) mwe(sch, as) nmod:sch_as(boroghs, Brent) pnct(boroghs, ,) ax(taking, are) neg(taking, not) ccomp(note, taking) compond:prt(taking, p) det(offers, the) dobj(taking, offers) case(scheme, nder) det(scheme, the) compond(scheme, Greater) compond(scheme, London) compond(scheme, mobility) nmod:nder(taking, scheme) nsbj(available, that) cop(available, are) acl:relcl(scheme, available) mark(meet, to) xcomp(available, meet) det(needs, the) dobj(meet, needs) case(those, of) nmod:of(needs, those) case(bed, in) nmod:in(needs, bed) cc(bed, and) compond(accommodation, breakfast) nmod:in(needs, accommodation) conj:and(bed, accommodation) pnct(interesting, .)","root(,VBG) nsbj(VBG,PRP) cop(VBG,VBZ) mark(VB,TO) xcomp(VBG,VB) mark(VBG,WDT) amod(NNS,JJ) compond(NNS,NNP) nsbj(VBG,NNS) pnct(NNS,NNS) case(NNP,JJ) mwe(JJ,IN) nmod:sch_as(NNS,NNP) pnct(NNS,NNS) ax(VBG,VBP) neg(VBG,RB) ccomp(VB,VBG) compond:prt(VBG,RP) det(NNS,DT) dobj(VBG,NNS) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) compond(NN,NN) nmod:nder(VBG,NN) nsbj(JJ,WDT) cop(JJ,VBP) acl:relcl(NN,JJ) mark(VB,TO) xcomp(JJ,VB) det(NNS,DT) dobj(VB,NNS) case(DT,IN) nmod:of(NNS,DT) case(NN,IN) nmod:in(NNS,NN) cc(NN,CC) compond(NN,NN) nmod:in(NNS,NN) conj:and(NN,NN) pnct(VBG,VBG)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As my hon. Friend the Minister said  there is a large amount of empty public authority housing stock in London.,AsIN myPRP$ honNN FriendNNP theDT MinisterNNP saidVBD thereEX isVBZ aDT largeJJ amountNN ofIN emptyJJ publicJJ authorityNN housingNN stockNN inIN LondonNNP ,"root(ROOT-0, is-10) case(Friend-4, As-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nmod:as(is-10, Friend-4) det(Minister-6, the-5) nsubj(said-7, Minister-6) acl:relcl(Friend-4, said-7) punct(is-10, ,-8) expl(is-10, there-9) det(amount-13, a-11) amod(amount-13, large-12) nsubj(is-10, amount-13) case(stock-19, of-14) amod(stock-19, empty-15) amod(stock-19, public-16) compound(stock-19, authority-17) compound(stock-19, housing-18) nmod:of(amount-13, stock-19) case(London-21, in-20) nmod:in(amount-13, London-21) punct(is-10, .-22)",0,0,0,"root(ROOT, is) case(Friend, As) nmod:poss(Friend, my) compond(Friend, hon.) nmod:as(is, Friend) det(Minister, the) nsbj(said, Minister) acl:relcl(Friend, said) pnct(is, ,) expl(is, there) det(amont, a) amod(amont, large) nsbj(is, amont) case(stock, of) amod(stock, empty) amod(stock, pblic) compond(stock, athority) compond(stock, hosing) nmod:of(amont, stock) case(London, in) nmod:in(amont, London) pnct(is, .)","root(,VBZ) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:as(VBZ,NNP) det(NNP,DT) nsbj(VBD,NNP) acl:relcl(NNP,VBD) pnct(VBZ,VBZ) expl(VBZ,EX) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) amod(NN,JJ) amod(NN,JJ) compond(NN,NN) compond(NN,NN) nmod:of(NN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VBZ,VBZ)","[there, Minister, Friend, ROOT, said, my, amount, is]","[there, Minister, Friend, ROOT, said, my, amount, is]",4,"[there, Minister, Friend, ROOT, said, my, amount, is]","[there, Minister, Friend, ROOT, said, my, amount, is]",EX_there NNP_Minister NNP_Friend VBD_said PRP$_my NN_amount VBZ_is ,"[there, Minister, Friend, ROOT, said, my, amount, is]","[there, Minister, Friend, ROOT, said, my, amount, is]",EX_there NNP_Minister NNP_Friend VBD_said PRP$_my NN_amount VBZ_is ,"[there, Minister, Friend, ROOT, said, my, amount, is]",EX_there NNP_Minister NNP_Friend VBD_said PRP$_my NN_amount VBZ_is ,"[there, Minister, Friend, ROOT, said, my, amount, is]",EX_there NNP_Minister NNP_Friend VBD_said PRP$_my NN_amount VBZ_is ,-3,0,1,0,0,0,0,0,0,0
We are determined to bring that back into use to help the homeless.,WePRP areVBP determinedVBN toTO bringVB thatDT backRB intoIN useNN toTO helpVB theDT homelessNN ,"root(ROOT-0, determined-3) nsubjpass(determined-3, We-1) auxpass(determined-3, are-2) mark(bring-5, to-4) xcomp(determined-3, bring-5) dobj(bring-5, that-6) advmod(bring-5, back-7) case(use-9, into-8) nmod:into(bring-5, use-9) mark(help-11, to-10) xcomp(bring-5, help-11) det(homeless-13, the-12) dobj(help-11, homeless-13) punct(determined-3, .-14)",0,0,1,"root(ROOT, determined) nsbjpass(determined, We) axpass(determined, are) mark(bring, to) xcomp(determined, bring) dobj(bring, that) advmod(bring, back) case(se, into) nmod:into(bring, se) mark(help, to) xcomp(bring, help) det(homeless, the) dobj(help, homeless) pnct(determined, .)","root(,VBN) nsbjpass(VBN,PRP) axpass(VBN,VBP) mark(VB,TO) xcomp(VBN,VB) dobj(VB,DT) advmod(VB,RB) case(NN,IN) nmod:into(VB,NN) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
At this moment 400 000 building trade workers are unemployed  but hundreds of thousands of people are out searching for a house and cannot find one.,AtIN thisDT momentNN 400CD 000CD buildingNN tradeNN workersNNS areVBP unemployedJJ butCC hundredsNNS ofIN thousandsNNS ofIN peopleNNS areVBP outRP searchingVBG forIN aDT houseNN andCC canMD notRB findVB oneNN ,"root(ROOT-0, unemployed-9) case(moment-3, At-1) det(moment-3, this-2) nmod:at(unemployed-9, moment-3) nummod(workers-7, 400,000-4) compound(workers-7, building-5) compound(workers-7, trade-6) nsubj(unemployed-9, workers-7) cop(unemployed-9, are-8) punct(unemployed-9, ,-10) cc(unemployed-9, but-11) conj:but(unemployed-9, hundreds-12) case(thousands-14, of-13) nmod:of(hundreds-12, thousands-14) case(people-16, of-15) nmod:of(thousands-14, people-16) acl:relcl(hundreds-12, are-17) mark(searching-19, out-18) dep(are-17, searching-19) case(house-22, for-20) det(house-22, a-21) nmod:for(searching-19, house-22) cc(searching-19, and-23) aux(find-26, can-24) neg(find-26, not-25) dep(are-17, find-26) conj:and(searching-19, find-26) dobj(find-26, one-27) punct(unemployed-9, .-28)",0,0,0,"root(ROOT, nemployed) case(moment, At) det(moment, this) nmod:at(nemployed, moment) nmmod(workers, 400,000) compond(workers, bilding) compond(workers, trade) nsbj(nemployed, workers) cop(nemployed, are) pnct(nemployed, ,) cc(nemployed, bt) conj:bt(nemployed, hndreds) case(thosands, of) nmod:of(hndreds, thosands) case(people, of) nmod:of(thosands, people) acl:relcl(hndreds, are) mark(searching, ot) dep(are, searching) case(hose, for) det(hose, a) nmod:for(searching, hose) cc(searching, and) ax(find, can) neg(find, not) dep(are, find) conj:and(searching, find) dobj(find, one) pnct(nemployed, .)","root(,JJ) case(NN,IN) det(NN,DT) nmod:at(JJ,NN) nmmod(NNS,NNS) compond(NNS,NN) compond(NNS,NN) nsbj(JJ,NNS) cop(JJ,VBP) pnct(JJ,JJ) cc(JJ,CC) conj:bt(JJ,NNS) case(NNS,IN) nmod:of(NNS,NNS) case(NNS,IN) nmod:of(NNS,NNS) acl:relcl(NNS,VBP) mark(VBG,RP) dep(VBP,VBG) case(NN,IN) det(NN,DT) nmod:for(VBG,NN) cc(VBG,CC) ax(VB,MD) neg(VB,RB) dep(VBP,VB) conj:and(VBG,VB) dobj(VB,NN) pnct(JJ,JJ)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is not only me and my hon. Friends who are objecting to those obscene policies  but the Duke of Edinburgh  Prince Charles  the Archbishop of Canterbury and the Queen herself.,ItPRP isVBZ notRB onlyRB mePRP andCC myPRP$ honNN FriendsNNPS whoWP areVBP objectingVBG toTO thoseDT obsceneJJ policiesNNS butCC theDT DukeNNP ofIN EdinburghNNP PrinceNNP CharlesNNP theDT ArchbishopNNP ofIN CanterburyNNP andCC theDT QueenNNP herselfPRP ,"root(ROOT-0, only-4) nsubj(only-4, It-1) cop(only-4, is-2) neg(only-4, not-3) nmod:npmod(only-4, me-5) cc(me-5, and-6) nmod:poss(Friends-9, my-7) compound(Friends-9, hon.-8) nmod:npmod(only-4, Friends-9) conj:and(me-5, Friends-9) nsubj(objecting-12, who-10) aux(objecting-12, are-11) acl:relcl(me-5, objecting-12) case(policies-16, to-13) det(policies-16, those-14) amod(policies-16, obscene-15) nmod:to(objecting-12, policies-16) punct(only-4, ,-17) cc(only-4, but-18) det(Duke-20, the-19) conj:but(only-4, Duke-20) case(Edinburgh-22, of-21) nmod:of(Duke-20, Edinburgh-22) punct(Duke-20, ,-23) compound(Charles-25, Prince-24) appos(Duke-20, Charles-25) punct(Duke-20, ,-26) det(Archbishop-28, the-27) appos(Duke-20, Archbishop-28) case(Canterbury-30, of-29) nmod:of(Archbishop-28, Canterbury-30) cc(Canterbury-30, and-31) det(Queen-33, the-32) nmod:of(Archbishop-28, Queen-33) conj:and(Canterbury-30, Queen-33) nmod:npmod(Queen-33, herself-34) punct(only-4, .-35)",0,0,0,"root(ROOT, only) nsbj(only, It) cop(only, is) neg(only, not) nmod:npmod(only, me) cc(me, and) nmod:poss(Friends, my) compond(Friends, hon.) nmod:npmod(only, Friends) conj:and(me, Friends) nsbj(objecting, who) ax(objecting, are) acl:relcl(me, objecting) case(policies, to) det(policies, those) amod(policies, obscene) nmod:to(objecting, policies) pnct(only, ,) cc(only, bt) det(Dke, the) conj:bt(only, Dke) case(Edinbrgh, of) nmod:of(Dke, Edinbrgh) pnct(Dke, ,) compond(Charles, Prince) appos(Dke, Charles) pnct(Dke, ,) det(Archbishop, the) appos(Dke, Archbishop) case(Canterbry, of) nmod:of(Archbishop, Canterbry) cc(Canterbry, and) det(Qeen, the) nmod:of(Archbishop, Qeen) conj:and(Canterbry, Qeen) nmod:npmod(Qeen, herself) pnct(only, .)","root(,RB) nsbj(RB,PRP) cop(RB,VBZ) neg(RB,RB) nmod:npmod(RB,PRP) cc(PRP,CC) nmod:poss(NNPS,PRP$) compond(NNPS,NNPS) nmod:npmod(RB,NNPS) conj:and(PRP,NNPS) nsbj(VBG,WP) ax(VBG,VBP) acl:relcl(PRP,VBG) case(NNS,TO) det(NNS,DT) amod(NNS,JJ) nmod:to(VBG,NNS) pnct(RB,RB) cc(RB,CC) det(NNP,DT) conj:bt(RB,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NNP,NNP) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,NNP) det(NNP,DT) appos(NNP,NNP) case(NNP,IN) nmod:of(NNP,NNP) cc(NNP,CC) det(NNP,DT) nmod:of(NNP,NNP) conj:and(NNP,NNP) nmod:npmod(NNP,PRP) pnct(RB,RB)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Before the Minister answers I remind the hon. Member and the House that we never introduce the royal family to support our arguments.,BeforeIN theDT MinisterNNP answersNNS IPRP remindVBP theDT honNN MemberNNP andCC theDT HouseNNP thatIN wePRP neverRB introduceVBP theDT royalNN familyNN toTO supportVB ourPRP$ argumentsNNS ,"root(ROOT-0, answers-4) case(answers-4, Before-1) det(answers-4, the-2) compound(answers-4, Minister-3) nsubj(remind-6, I-5) acl:relcl(answers-4, remind-6) det(Member-9, the-7) compound(Member-9, hon.-8) dobj(remind-6, Member-9) cc(Member-9, and-10) det(House-12, the-11) dobj(remind-6, House-12) conj:and(Member-9, House-12) mark(introduce-16, that-13) nsubj(introduce-16, we-14) neg(introduce-16, never-15) ccomp(remind-6, introduce-16) det(family-19, the-17) amod(family-19, royal-18) dobj(introduce-16, family-19) mark(support-21, to-20) advcl(introduce-16, support-21) nmod:poss(arguments-23, our-22) dobj(support-21, arguments-23) punct(answers-4, .-24)",0,0,0,"root(ROOT, answers) case(answers, Before) det(answers, the) compond(answers, Minister) nsbj(remind, I) acl:relcl(answers, remind) det(Member, the) compond(Member, hon.) dobj(remind, Member) cc(Member, and) det(Hose, the) dobj(remind, Hose) conj:and(Member, Hose) mark(introdce, that) nsbj(introdce, we) neg(introdce, never) ccomp(remind, introdce) det(family, the) amod(family, royal) dobj(introdce, family) mark(spport, to) advcl(introdce, spport) nmod:poss(argments, or) dobj(spport, argments) pnct(answers, .)","root(,NNS) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nsbj(VBP,PRP) acl:relcl(NNS,VBP) det(NNP,DT) compond(NNP,NNP) dobj(VBP,NNP) cc(NNP,CC) det(NNP,DT) dobj(VBP,NNP) conj:and(NNP,NNP) mark(VBP,IN) nsbj(VBP,PRP) neg(VBP,RB) ccomp(VBP,VBP) det(NN,DT) amod(NN,NN) dobj(VBP,NN) mark(VB,TO) advcl(VBP,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) pnct(NNS,NNS)","[and, House, remind, introduce, I, ROOT, Member, answers]","[and, House, remind, introduce, I, ROOT, Member, answers]",6,"[and, House, remind, introduce, I, ROOT, Member, answers]","[and, House, remind, introduce, I, ROOT, Member, answers]",CC_and NNP_House VBP_remind VB_introduce PRP_I NNP_Member NNS_answers ,"[and, House, remind, introduce, I, ROOT, Member, answers]","[and, House, remind, introduce, I, ROOT, Member, answers]",CC_and NNP_House VBP_remind VB_introduce PRP_I NNP_Member NNS_answers ,"[and, House, remind, introduce, I, ROOT, Member, answers]",CC_and NNP_House VBP_remind VB_introduce PRP_I NNP_Member NNS_answers ,"[and, House, remind, introduce, I, ROOT, Member, answers]",CC_and NNP_House VBP_remind VB_introduce PRP_I NNP_Member NNS_answers ,-3,0,2,0,0,0,0,0,0,0
We stand on our own.,WePRP standVBP onIN ourPRP$ ownJJ ,"root(ROOT-0, stand-2) nsubj(stand-2, We-1) case(own-5, on-3) nmod:poss(own-5, our-4) nmod:on(stand-2, own-5) punct(stand-2, .-6)",0,0,1,"root(ROOT, stand) nsbj(stand, We) case(own, on) nmod:poss(own, or) nmod:on(stand, own) pnct(stand, .)","root(,VBP) nsbj(VBP,PRP) case(JJ,IN) nmod:poss(JJ,PRP$) nmod:on(VBP,JJ) pnct(VBP,VBP)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Might not the way to bring the private rented sector back into operation be to abolish the Rent Acts and institute a limited form of control along the lines of business tenancy controls under the Landlord and Tenant Act 1954?,MightNNP notRB theDT wayNN toTO bringVB theDT privateJJ rentedVBD sectorNN backRB intoIN operationNN beVB toTO abolishVB theDT RentNNP ActsNNPS andCC instituteVB aDT limitedJJ formNN ofIN controlNN alongIN theDT linesNNS ofIN businessNN tenancyNN controlsNNS underIN theDT LandlordNNP andCC TenantNNP ActNNP 1954CD ,"root(ROOT-0, way-4) nsubj(way-4, Might-1) neg(way-4, not-2) det(way-4, the-3) mark(bring-6, to-5) acl(way-4, bring-6) det(sector-10, the-7) amod(sector-10, private-8) amod(sector-10, rented-9) dobj(bring-6, sector-10) advmod(bring-6, back-11) case(operation-13, into-12) nmod:into(bring-6, operation-13) aux(abolish-16, be-14) mark(abolish-16, to-15) xcomp(bring-6, abolish-16) det(Acts-19, the-17) compound(Acts-19, Rent-18) dobj(abolish-16, Acts-19) cc(abolish-16, and-20) xcomp(bring-6, institute-21) conj:and(abolish-16, institute-21) det(form-24, a-22) amod(form-24, limited-23) dobj(institute-21, form-24) case(control-26, of-25) nmod:of(form-24, control-26) case(lines-29, along-27) det(lines-29, the-28) nmod:along(form-24, lines-29) case(controls-33, of-30) compound(controls-33, business-31) compound(controls-33, tenancy-32) nmod:of(lines-29, controls-33) case(Landlord-36, under-34) det(Landlord-36, the-35) nmod:under(lines-29, Landlord-36) cc(Landlord-36, and-37) compound(Act-39, Tenant-38) nmod:under(lines-29, Act-39) conj:and(Landlord-36, Act-39) nummod(Act-39, 1954-40) punct(way-4, ?-41)",0,1,1,"root(ROOT, way) nsbj(way, Might) neg(way, not) det(way, the) mark(bring, to) acl(way, bring) det(sector, the) amod(sector, private) amod(sector, rented) dobj(bring, sector) advmod(bring, back) case(operation, into) nmod:into(bring, operation) ax(abolish, be) mark(abolish, to) xcomp(bring, abolish) det(Acts, the) compond(Acts, Rent) dobj(abolish, Acts) cc(abolish, and) xcomp(bring, institte) conj:and(abolish, institte) det(form, a) amod(form, limited) dobj(institte, form) case(control, of) nmod:of(form, control) case(lines, along) det(lines, the) nmod:along(form, lines) case(controls, of) compond(controls, bsiness) compond(controls, tenancy) nmod:of(lines, controls) case(Landlord, nder) det(Landlord, the) nmod:nder(lines, Landlord) cc(Landlord, and) compond(Act, Tenant) nmod:nder(lines, Act) conj:and(Landlord, Act) nmmod(Act, 1954) pnct(way, ?)","root(,NN) nsbj(NN,NNP) neg(NN,RB) det(NN,DT) mark(VB,TO) acl(NN,VB) det(NN,DT) amod(NN,JJ) amod(NN,VBD) dobj(VB,NN) advmod(VB,RB) case(NN,IN) nmod:into(VB,NN) ax(VB,VB) mark(VB,TO) xcomp(VB,VB) det(NNPS,DT) compond(NNPS,NNP) dobj(VB,NNPS) cc(VB,CC) xcomp(VB,VB) conj:and(VB,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) det(NNS,DT) nmod:along(NN,NNS) case(NNS,IN) compond(NNS,NN) compond(NNS,NN) nmod:of(NNS,NNS) case(NNP,IN) det(NNP,DT) nmod:nder(NNS,NNP) cc(NNP,CC) compond(NNP,NNP) nmod:nder(NNS,NNP) conj:and(NNP,NNP) nmmod(NNP,CD) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
My right hon. Friend the Member for Wanstead and Woodford (Mr. Jenkin)  the then Secretary of State for the Environment  said in June last year that we would have no major proposals for rent reform in this Parliament  but that we were interested in proposals after the next election.,MyPRP$ rightJJ honNN FriendNNP theDT MemberNNP forIN WansteadNNP andCC WoodfordNNP (( MrNNP JenkinNNP )) theDT thenRB SecretaryNNP ofIN StateNNP forIN theDT EnvironmentNNP saidVBD inIN JuneNNP lastJJ yearNN thatIN wePRP wouldMD haveVB noDT majorJJ proposalsNNS forIN rentNN reformNN inIN thisDT ParliamentNN butCC thatIN wePRP wereVBD interestedJJ inIN proposalsNNS afterIN theDT nextJJ electionNN ,"root(ROOT-0, Friend-4) nmod:poss(Friend-4, My-1) amod(Friend-4, right-2) compound(Friend-4, hon.-3) det(Member-6, the-5) nsubj(said-25, Member-6) case(Wanstead-8, for-7) nmod:for(Member-6, Wanstead-8) cc(Wanstead-8, and-9) nmod:for(Member-6, Woodford-10) conj:and(Wanstead-8, Woodford-10) punct(Jenkin-13, -LRB--11) compound(Jenkin-13, Mr.-12) appos(Member-6, Jenkin-13) punct(Jenkin-13, -RRB--14) punct(Member-6, ,-15) det(Secretary-18, the-16) advmod(Secretary-18, then-17) appos(Member-6, Secretary-18) case(State-20, of-19) nmod:of(Secretary-18, State-20) case(Environment-23, for-21) det(Environment-23, the-22) nmod:for(Secretary-18, Environment-23) punct(Member-6, ,-24) acl:relcl(Friend-4, said-25) case(June-27, in-26) nmod:in(said-25, June-27) amod(year-29, last-28) nmod:tmod(said-25, year-29) mark(have-33, that-30) nsubj(have-33, we-31) aux(have-33, would-32) ccomp(said-25, have-33) neg(proposals-36, no-34) amod(proposals-36, major-35) dobj(have-33, proposals-36) case(reform-39, for-37) compound(reform-39, rent-38) nmod:for(proposals-36, reform-39) case(Parliament-42, in-40) det(Parliament-42, this-41) nmod:in(have-33, Parliament-42) punct(have-33, ,-43) cc(have-33, but-44) mark(interested-48, that-45) nsubj(interested-48, we-46) cop(interested-48, were-47) ccomp(said-25, interested-48) conj:but(have-33, interested-48) case(proposals-50, in-49) nmod:in(interested-48, proposals-50) case(election-54, after-51) det(election-54, the-52) amod(election-54, next-53) nmod:after(proposals-50, election-54) punct(Friend-4, .-55)",0,0,0,"root(ROOT, Friend) nmod:poss(Friend, My) amod(Friend, right) compond(Friend, hon.) det(Member, the) nsbj(said, Member) case(Wanstead, for) nmod:for(Member, Wanstead) cc(Wanstead, and) nmod:for(Member, Woodford) conj:and(Wanstead, Woodford) pnct(Jenkin, ) compond(Jenkin, Mr.) appos(Member, Jenkin) pnct(Jenkin, ) pnct(Member, ,) det(Secretary, the) advmod(Secretary, then) appos(Member, Secretary) case(State, of) nmod:of(Secretary, State) case(Environment, for) det(Environment, the) nmod:for(Secretary, Environment) pnct(Member, ,) acl:relcl(Friend, said) case(Jne, in) nmod:in(said, Jne) amod(year, last) nmod:tmod(said, year) mark(have, that) nsbj(have, we) ax(have, wold) ccomp(said, have) neg(proposals, no) amod(proposals, major) dobj(have, proposals) case(reform, for) compond(reform, rent) nmod:for(proposals, reform) case(Parliament, in) det(Parliament, this) nmod:in(have, Parliament) pnct(have, ,) cc(have, bt) mark(interested, that) nsbj(interested, we) cop(interested, were) ccomp(said, interested) conj:bt(have, interested) case(proposals, in) nmod:in(interested, proposals) case(election, after) det(election, the) amod(election, next) nmod:after(proposals, election) pnct(Friend, .)","root(,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(NNP,NNP) det(NNP,DT) advmod(NNP,RB) appos(NNP,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) det(NNP,DT) nmod:for(NNP,NNP) pnct(NNP,NNP) acl:relcl(NNP,VBD) case(NNP,IN) nmod:in(VBD,NNP) amod(NN,JJ) nmod:tmod(VBD,NN) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBD,VB) neg(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) case(NN,IN) compond(NN,NN) nmod:for(NNS,NN) case(NN,IN) det(NN,DT) nmod:in(VB,NN) pnct(VB,VB) cc(VB,CC) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBD) ccomp(VBD,JJ) conj:bt(VB,JJ) case(NNS,IN) nmod:in(JJ,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:after(NNS,NN) pnct(NNP,NNP)","[ , Secretary, interested, right, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]","[ , Secretary, interested, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]",9,"[ , Secretary, interested, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]","[ , Secretary, interested, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]",NNP_Secretary JJ_interested NNP_Woodford CC_and VBP_have NNP_Friend NN_year NNP_June VBD_said NNP_Wanstead NNS_proposals PRP$_My NNS_proposals NNP_State NNP_Jenkin NN_election NNP_Environment NNP_Member RB_then ,"[ , Secretary, interested, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]","[ , Secretary, interested, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]",NNP_Secretary JJ_interested NNP_Woodford CC_and VBP_have NNP_Friend NN_year NNP_June VBD_said NNP_Wanstead NNS_proposals PRP$_My NNS_proposals NNP_State NNP_Jenkin NN_election NNP_Environment NNP_Member RB_then ,"[ , Secretary, interested, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]",NNP_Secretary JJ_interested NNP_Woodford CC_and VBP_have NNP_Friend NN_year NNP_June VBD_said NNP_Wanstead NNS_proposals PRP$_My NNS_proposals NNP_State NNP_Jenkin NN_election NNP_Environment NNP_Member RB_then ,"[ , Secretary, interested, Woodford, and, have, Friend, year, June, said, Wanstead, proposals, My, proposals, State, Jenkin, election, Environment, Member, then, ROOT]",NNP_Secretary JJ_interested NNP_Woodford CC_and VBP_have NNP_Friend NN_year NNP_June VBD_said NNP_Wanstead NNS_proposals PRP$_My NNS_proposals NNP_State NNP_Jenkin NN_election NNP_Environment NNP_Member RB_then ,-3,0,1,0,0,0,0,0,0,0
Is it not true that if all the council accommodation in Britain which is currently vacant because of inefficient management  mainly by Socialist local authorities  were put to use  virtually all Britain's homeless could be given a home immediately?,IsVBZ itPRP notRB trueJJ thatIN ifIN allPDT theDT councilNN accommodationNN inIN BritainNNP whichWDT isVBZ currentlyRB vacantJJ becauseIN ofIN inefficientJJ managementNN mainlyRB byIN SocialistNNP localJJ authoritiesNNS wereVBD putVBN toTO useVB virtuallyRB allDT BritainNNP 'sPOS homelessNN couldMD beVB givenVBN aDT homeNN immediatelyRB ,"root(ROOT-0, true-4) cop(true-4, Is-1) nsubj(true-4, it-2) neg(true-4, not-3) mark(given-40, that-5) mark(put-29, if-6) det:predet(accommodation-10, all-7) det(accommodation-10, the-8) compound(accommodation-10, council-9) nsubjpass(put-29, accommodation-10) case(Britain-12, in-11) nmod:in(accommodation-10, Britain-12) nsubj(vacant-16, which-13) cop(vacant-16, is-14) advmod(vacant-16, currently-15) acl:relcl(accommodation-10, vacant-16) case(management-20, because-17) mwe(because-17, of-18) amod(management-20, inefficient-19) nmod:because_of(vacant-16, management-20) punct(accommodation-10, ,-21) advmod(authorities-26, mainly-22) case(authorities-26, by-23) compound(authorities-26, Socialist-24) amod(authorities-26, local-25) nmod:by(accommodation-10, authorities-26) punct(accommodation-10, ,-27) auxpass(put-29, were-28) advcl(given-40, put-29) mark(use-31, to-30) xcomp(put-29, use-31) punct(given-40, ,-32) advmod(all-34, virtually-33) dep(homeless-37, all-34) nmod:poss(homeless-37, Britain-35) case(Britain-35, 's-36) nsubjpass(given-40, homeless-37) aux(given-40, could-38) auxpass(given-40, be-39) ccomp(true-4, given-40) det(home-42, a-41) dobj(given-40, home-42) advmod(given-40, immediately-43) punct(true-4, ?-44)",0,0,0,"root(ROOT, tre) cop(tre, Is) nsbj(tre, it) neg(tre, not) mark(given, that) mark(pt, if) det:predet(accommodation, all) det(accommodation, the) compond(accommodation, concil) nsbjpass(pt, accommodation) case(Britain, in) nmod:in(accommodation, Britain) nsbj(vacant, which) cop(vacant, is) advmod(vacant, crrently) acl:relcl(accommodation, vacant) case(management, becase) mwe(becase, of) amod(management, inefficient) nmod:becase_of(vacant, management) pnct(accommodation, ,) advmod(athorities, mainly) case(athorities, by) compond(athorities, Socialist) amod(athorities, local) nmod:by(accommodation, athorities) pnct(accommodation, ,) axpass(pt, were) advcl(given, pt) mark(se, to) xcomp(pt, se) pnct(given, ,) advmod(all, virtally) dep(homeless, all) nmod:poss(homeless, Britain) ""case(Britain, s)"", nsbjpass(given, homeless) ax(given, cold) axpass(given, be) ccomp(tre, given) det(home, a) dobj(given, home) advmod(given, immediately) pnct(tre, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) mark(VBN,IN) mark(VBN,IN) det:predet(NN,DT) det(NN,DT) compond(NN,NN) nsbjpass(VBN,NN) case(NNP,IN) nmod:in(NN,NNP) nsbj(JJ,WDT) cop(JJ,VBZ) advmod(JJ,RB) acl:relcl(NN,JJ) case(NN,IN) mwe(IN,IN) amod(NN,JJ) nmod:becase_of(JJ,NN) pnct(NN,NN) advmod(NNS,RB) case(NNS,IN) compond(NNS,NNP) amod(NNS,JJ) nmod:by(NN,NNS) pnct(NN,NN) axpass(VBN,VBD) advcl(VBN,VBN) mark(VB,TO) xcomp(VBN,VB) pnct(VBN,VBN) advmod(DT,RB) dep(NN,DT) nmod:poss(NN,NNP) case(NNP,POS) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) det(NN,DT) dobj(VBN,NN) advmod(VBN,RB) pnct(JJ,JJ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The same rules apply on both sides of the House.,TheDT sameJJ rulesNNS applyVBP onIN bothDT sidesNNS ofIN theDT HouseNNP ,"root(ROOT-0, apply-4) det(rules-3, The-1) amod(rules-3, same-2) nsubj(apply-4, rules-3) case(sides-7, on-5) det(sides-7, both-6) nmod:on(apply-4, sides-7) case(House-10, of-8) det(House-10, the-9) nmod:of(sides-7, House-10) punct(apply-4, .-11)",0,0,1,"root(ROOT, apply) det(rles, The) amod(rles, same) nsbj(apply, rles) case(sides, on) det(sides, both) nmod:on(apply, sides) case(Hose, of) det(Hose, the) nmod:of(sides, Hose) pnct(apply, .)","root(,VBP) det(NNS,DT) amod(NNS,JJ) nsbj(VBP,NNS) case(NNS,IN) det(NNS,DT) nmod:on(VBP,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) pnct(VBP,VBP)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is not the real problem for local authorities  not that they have a statutory duty to house the homeless  but that the number of homeless people is growing  that the amount of money available for councils to build  as they want to do  is evaporating so that  for example  some 30 000 people in Leicester are on the housing list   and councils are then forced to spend revenue instead of capital on housing people temporarily in bed and breakfast accommodation  which is a rotten  ,IsVBZ notRB theDT realJJ problemNN forIN localJJ authoritiesNNS notRB thatIN theyPRP haveVBP aDT statutoryJJ dutyNN toTO houseNN theDT homelessNN butCC thatIN theDT numberNN ofIN homelessJJ peopleNNS isVBZ growingVBG thatIN theDT amountNN ofIN moneyNN availableJJ forIN councilsNNS toTO buildVB asIN theyPRP wantVBP toTO doVB isVBZ evaporatingVBG soRB thatIN forIN exampleNN someDT 30CD 000CD peopleNNS inIN LeicesterNNP areVBP onIN theDT housingNN listNN andCC councilsNNS areVBP thenRB forcedVBN toTO spendVB revenueNN insteadRB ofIN capitalNN onIN housingNN peopleNNS temporarilyRB inIN bedNN andCC breakfastNN accommodationNN whichWDT isVBZ aDT rottenNN ,"root(ROOT-0, problem-5) cop(problem-5, Is-1) neg(problem-5, not-2) det(problem-5, the-3) amod(problem-5, real-4) case(authorities-8, for-6) amod(authorities-8, local-7) nmod:for(problem-5, authorities-8) punct(problem-5, ,-9) appos(problem-5, not-10) mark(have-13, that-11) nsubj(have-13, they-12) dep(not-10, have-13) det(duty-16, a-14) amod(duty-16, statutory-15) dobj(have-13, duty-16) mark(house-18, to-17) acl(duty-16, house-18) det(homeless-20, the-19) dobj(house-18, homeless-20) punct(have-13, ,-21) cc(have-13, but-22) mark(growing-30, that-23) det(number-25, the-24) nsubj(growing-30, number-25) case(people-28, of-26) amod(people-28, homeless-27) nmod:of(number-25, people-28) aux(growing-30, is-29) dep(not-10, growing-30) conj:but(have-13, growing-30) punct(growing-30, ,-31) mark(available-37, that-32) det(amount-34, the-33) nsubj(available-37, amount-34) case(money-36, of-35) nmod:of(amount-34, money-36) ccomp(growing-30, available-37) case(councils-39, for-38) nmod:for(available-37, councils-39) mark(build-41, to-40) acl(councils-39, build-41) punct(growing-30, ,-42) mark(want-45, as-43) nsubj(want-45, they-44) advcl(growing-30, want-45) mark(do-47, to-46) xcomp(want-45, do-47) punct(growing-30, ,-48) aux(evaporating-50, is-49) parataxis(growing-30, evaporating-50) advmod(that-52, so-51) mark(forced-71, that-52) punct(list-66, ,-53) case(example-55, for-54) nmod:for(list-66, example-55) punct(list-66, ,-56) det(people-59, some-57) nummod(people-59, 30,000-58) nsubj(list-66, people-59) case(Leicester-61, in-60) nmod:in(people-59, Leicester-61) cop(list-66, are-62) case(list-66, on-63) det(list-66, the-64) compound(list-66, housing-65) nsubjpass(forced-71, list-66) cc(list-66, and-67) conj:and(list-66, councils-68) nsubjpass(forced-71, councils-68) auxpass(forced-71, are-69) advmod(forced-71, then-70) ccomp(evaporating-50, forced-71) mark(spend-73, to-72) xcomp(forced-71, spend-73) dobj(spend-73, revenue-74) case(capital-77, instead-75) mwe(instead-75, of-76) nmod:instead_of(spend-73, capital-77) case(people-80, on-78) compound(people-80, housing-79) nmod:on(capital-77, people-80) advmod(bed-83, temporarily-81) case(bed-83, in-82) nmod:in(spend-73, bed-83) cc(bed-83, and-84) compound(accommodation-86, breakfast-85) nmod:in(spend-73, accommodation-86) conj:and(bed-83, accommodation-86) punct(forced-71, ,-87) nsubj(rotten-91, which-88) cop(rotten-91, is-89) det(rotten-91, a-90) parataxis(forced-71, rotten-91)",0,0,0,"root(ROOT, problem) cop(problem, Is) neg(problem, not) det(problem, the) amod(problem, real) case(athorities, for) amod(athorities, local) nmod:for(problem, athorities) pnct(problem, ,) appos(problem, not) mark(have, that) nsbj(have, they) dep(not, have) det(dty, a) amod(dty, stattory) dobj(have, dty) mark(hose, to) acl(dty, hose) det(homeless, the) dobj(hose, homeless) pnct(have, ,) cc(have, bt) mark(growing, that) det(nmber, the) nsbj(growing, nmber) case(people, of) amod(people, homeless) nmod:of(nmber, people) ax(growing, is) dep(not, growing) conj:bt(have, growing) pnct(growing, ,) mark(available, that) det(amont, the) nsbj(available, amont) case(money, of) nmod:of(amont, money) ccomp(growing, available) case(concils, for) nmod:for(available, concils) mark(bild, to) acl(concils, bild) pnct(growing, ,) mark(want, as) nsbj(want, they) advcl(growing, want) mark(do, to) xcomp(want, do) pnct(growing, ,) ax(evaporating, is) parataxis(growing, evaporating) advmod(that, so) mark(forced, that) pnct(list, ,) case(example, for) nmod:for(list, example) pnct(list, ,) det(people, some) nmmod(people, 30,000) nsbj(list, people) case(Leicester, in) nmod:in(people, Leicester) cop(list, are) case(list, on) det(list, the) compond(list, hosing) nsbjpass(forced, list) cc(list, and) conj:and(list, concils) nsbjpass(forced, concils) axpass(forced, are) advmod(forced, then) ccomp(evaporating, forced) mark(spend, to) xcomp(forced, spend) dobj(spend, revene) case(capital, instead) mwe(instead, of) nmod:instead_of(spend, capital) case(people, on) compond(people, hosing) nmod:on(capital, people) advmod(bed, temporarily) case(bed, in) nmod:in(spend, bed) cc(bed, and) compond(accommodation, breakfast) nmod:in(spend, accommodation) conj:and(bed, accommodation) pnct(forced, ,) nsbj(rotten, which) cop(rotten, is) det(rotten, a) parataxis(forced, rotten)","root(,NN) cop(NN,VBZ) neg(NN,RB) det(NN,DT) amod(NN,JJ) case(NNS,IN) amod(NNS,JJ) nmod:for(NN,NNS) pnct(NN,NN) appos(NN,RB) mark(VBP,IN) nsbj(VBP,PRP) dep(RB,VBP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) mark(NN,TO) acl(NN,NN) det(JJ,DT) dobj(NN,JJ) pnct(VBP,VBP) cc(VBP,CC) mark(VBG,IN) det(NN,DT) nsbj(VBG,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) ax(VBG,VBZ) dep(RB,VBG) conj:bt(VBP,VBG) pnct(VBG,VBG) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) case(NN,IN) nmod:of(NN,NN) ccomp(VBG,JJ) case(NNS,IN) nmod:for(JJ,NNS) mark(VB,TO) acl(NNS,VB) pnct(VBG,VBG) mark(VBP,IN) nsbj(VBP,PRP) advcl(VBG,VBP) mark(VB,TO) xcomp(VBP,VB) pnct(VBG,VBG) ax(VBG,VBZ) parataxis(VBG,VBG) advmod(IN,RB) mark(VBN,IN) pnct(NN,NN) case(NN,IN) nmod:for(NN,NN) pnct(NN,NN) det(NNS,DT) nmmod(NNS,NNS) nsbj(NN,NNS) case(NNP,IN) nmod:in(NNS,NNP) cop(NN,VBP) case(NN,IN) det(NN,DT) compond(NN,NN) nsbjpass(VBN,NN) cc(NN,CC) conj:and(NN,NNS) nsbjpass(VBN,NNS) axpass(VBN,VBP) advmod(VBN,RB) ccomp(VBG,VBN) mark(VB,TO) xcomp(VBN,VB) dobj(VB,NN) case(NN,RB) mwe(RB,IN) nmod:instead_of(VB,NN) case(NNS,IN) compond(NNS,NN) nmod:on(NN,NNS) advmod(NN,RB) case(NN,IN) nmod:in(VB,NN) cc(NN,CC) compond(NN,NN) nmod:in(VB,NN) conj:and(NN,NN) pnct(VBN,VBN) nsbj(NN,WDT) cop(NN,VBZ) det(NN,DT) parataxis(VBN,NN)",[ ],[ ],15,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I do not have the figures for Leicester in front of me  but in London it is the case that the number of relets of council housing has gone up since 1978 79  in spite of the right to buy.,IPRP doVBP notRB haveVB theDT figuresNNS forIN LeicesterNNP inIN frontNN ofIN mePRP butCC inIN LondonNNP itPRP isVBZ theDT caseNN thatIN theDT numberNN ofIN reletsNNS ofIN councilNN housingNN hasVBZ goneVBN upRB sinceIN 1978CD 79CD inIN spiteNN ofIN theDT rightNN toTO buyVB ,"root(ROOT-0, have-4) nsubj(have-4, I-1) aux(have-4, do-2) neg(have-4, not-3) det(figures-6, the-5) dobj(have-4, figures-6) case(Leicester-8, for-7) nmod:for(figures-6, Leicester-8) case(front-10, in-9) nmod:in(Leicester-8, front-10) case(me-12, of-11) nmod:of(front-10, me-12) punct(have-4, ,-13) cc(have-4, but-14) case(London-16, in-15) nmod:in(case-20, London-16) nsubj(case-20, it-17) cop(case-20, is-18) det(case-20, the-19) conj:but(have-4, case-20) mark(gone-30, that-21) det(number-23, the-22) nsubj(gone-30, number-23) case(relets-25, of-24) nmod:of(number-23, relets-25) case(housing-28, of-26) compound(housing-28, council-27) nmod:of(relets-25, housing-28) aux(gone-30, has-29) ccomp(case-20, gone-30) compound:prt(gone-30, up-31) case(79-34, since-32) nummod(79-34, 1978-33) nmod:since(gone-30, 79-34) punct(have-4, ,-35) case(spite-37, in-36) nmod:in(have-4, spite-37) case(right-40, of-38) det(right-40, the-39) nmod:of(spite-37, right-40) mark(buy-42, to-41) acl(right-40, buy-42) punct(have-4, .-43)",0,0,0,"root(ROOT, have) nsbj(have, I) ax(have, do) neg(have, not) det(figres, the) dobj(have, figres) case(Leicester, for) nmod:for(figres, Leicester) case(front, in) nmod:in(Leicester, front) case(me, of) nmod:of(front, me) pnct(have, ,) cc(have, bt) case(London, in) nmod:in(case, London) nsbj(case, it) cop(case, is) det(case, the) conj:bt(have, case) mark(gone, that) det(nmber, the) nsbj(gone, nmber) case(relets, of) nmod:of(nmber, relets) case(hosing, of) compond(hosing, concil) nmod:of(relets, hosing) ax(gone, has) ccomp(case, gone) compond:prt(gone, p) case(79, since) nmmod(79, 1978) nmod:since(gone, 79) pnct(have, ,) case(spite, in) nmod:in(have, spite) case(right, of) det(right, the) nmod:of(spite, right) mark(by, to) acl(right, by) pnct(have, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) det(NNS,DT) dobj(VB,NNS) case(NNP,IN) nmod:for(NNS,NNP) case(NN,IN) nmod:in(NNP,NN) case(PRP,IN) nmod:of(NN,PRP) pnct(VB,VB) cc(VB,CC) case(NNP,IN) nmod:in(NN,NNP) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) conj:bt(VB,NN) mark(VBN,IN) det(NN,DT) nsbj(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) compond(NN,NN) nmod:of(NNS,NN) ax(VBN,VBZ) ccomp(NN,VBN) compond:prt(VBN,RB) case(CD,IN) nmmod(CD,CD) nmod:since(VBN,CD) pnct(VB,VB) case(NN,IN) nmod:in(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) mark(VB,TO) acl(NN,VB) pnct(VB,VB)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
So it is not the case that there is a decreasing number of local authority flats available to help the homeless.,SoIN itPRP isVBZ notRB theDT caseNN thatIN thereEX isVBZ aDT decreasingVBG numberNN ofIN localJJ authorityNN flatsNNS availableJJ toTO helpVB theDT homelessNN ,"root(ROOT-0, case-6) mark(case-6, So-1) nsubj(case-6, it-2) cop(case-6, is-3) neg(case-6, not-4) det(case-6, the-5) mark(is-9, that-7) expl(is-9, there-8) ccomp(case-6, is-9) det(number-12, a-10) amod(number-12, decreasing-11) nsubj(available-17, number-12) case(flats-16, of-13) amod(flats-16, local-14) compound(flats-16, authority-15) nmod:of(number-12, flats-16) xcomp(is-9, available-17) mark(help-19, to-18) xcomp(available-17, help-19) det(homeless-21, the-20) dobj(help-19, homeless-21) punct(case-6, .-22)",0,0,0,"root(ROOT, case) mark(case, So) nsbj(case, it) cop(case, is) neg(case, not) det(case, the) mark(is, that) expl(is, there) ccomp(case, is) det(nmber, a) amod(nmber, decreasing) nsbj(available, nmber) case(flats, of) amod(flats, local) compond(flats, athority) nmod:of(nmber, flats) xcomp(is, available) mark(help, to) xcomp(available, help) det(homeless, the) dobj(help, homeless) pnct(case, .)","root(,NN) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) neg(NN,RB) det(NN,DT) mark(VBZ,IN) expl(VBZ,EX) ccomp(NN,VBZ) det(NN,DT) amod(NN,VBG) nsbj(JJ,NN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) xcomp(VBZ,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) pnct(NN,NN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Certainly in most major cities more and more homeless people are being given priority under the Acts and are getting permanent accommodation.,CertainlyRB inIN mostJJS majorJJ citiesNNS moreRBR andCC moreJJR homelessJJ peopleNNS areVBP beingVBG givenVBN priorityNN underIN theDT ActsNNS andCC areVBP gettingVBG permanentJJ accommodationNN ,"root(ROOT-0, given-13) advmod(given-13, Certainly-1) case(cities-5, in-2) amod(cities-5, most-3) amod(cities-5, major-4) nmod:in(given-13, cities-5) advmod(homeless-9, more-6) cc(more-6, and-7) conj:and(more-6, more-8) advmod(homeless-9, more-8) amod(people-10, homeless-9) nsubjpass(given-13, people-10) nsubj(are-19, people-10) aux(given-13, are-11) auxpass(given-13, being-12) dobj(given-13, priority-14) case(Acts-17, under-15) det(Acts-17, the-16) nmod:under(priority-14, Acts-17) cc(given-13, and-18) conj:and(given-13, are-19) xcomp(are-19, getting-20) amod(accommodation-22, permanent-21) dobj(getting-20, accommodation-22) punct(given-13, .-23)",0,0,1,"root(ROOT, given) advmod(given, Certainly) case(cities, in) amod(cities, most) amod(cities, major) nmod:in(given, cities) advmod(homeless, more) cc(more, and) conj:and(more, more) advmod(homeless, more) amod(people, homeless) nsbjpass(given, people) nsbj(are, people) ax(given, are) axpass(given, being) dobj(given, priority) case(Acts, nder) det(Acts, the) nmod:nder(priority, Acts) cc(given, and) conj:and(given, are) xcomp(are, getting) amod(accommodation, permanent) dobj(getting, accommodation) pnct(given, .)","root(,VBN) advmod(VBN,RB) case(NNS,IN) amod(NNS,JJS) amod(NNS,JJ) nmod:in(VBN,NNS) advmod(JJ,JJR) cc(JJR,CC) conj:and(JJR,JJR) advmod(JJ,JJR) amod(NNS,JJ) nsbjpass(VBN,NNS) nsbj(VBP,NNS) ax(VBN,VBP) axpass(VBN,VBG) dobj(VBN,NN) case(NNS,IN) det(NNS,DT) nmod:nder(NN,NNS) cc(VBN,CC) conj:and(VBN,VBP) xcomp(VBP,VBG) amod(NN,JJ) dobj(VBG,NN) pnct(VBN,VBN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As next year is the international year of shelter for the homeless  could not the Government take some special measures to talk about the new initiatives  which were implied in one of the questions that he refused to answer  to deal with the misallocation of money that is implied in funding bed and breakfast accommodation when there are a vast number of unfit empty dwellings in the public and the private sectors?,AsIN nextJJ yearNN isVBZ theDT internationalJJ yearNN ofIN shelterNN forIN theDT homelessNN couldMD notRB theDT GovernmentNNP takeVB someDT specialJJ measuresNNS toTO talkVB aboutIN theDT newJJ initiativesNNS whichWDT wereVBD impliedVBN inIN oneCD ofIN theDT questionsNNS thatIN hePRP refusedVBD toTO answerVB toTO dealVB withIN theDT misallocationNN ofIN moneyNN thatWDT isVBZ impliedVBN inIN fundingNN bedNN andCC breakfastNN accommodationNN whenWRB thereEX areVBP aDT vastJJ numberNN ofIN unfitJJ emptyJJ dwellingsNNS inIN theDT publicNN andCC theDT privateJJ sectorsNNS ,"root(ROOT-0, take-18) mark(year-7, As-1) amod(year-3, next-2) nsubj(year-7, year-3) cop(year-7, is-4) det(year-7, the-5) amod(year-7, international-6) advcl(take-18, year-7) case(shelter-9, of-8) nmod:of(year-7, shelter-9) case(homeless-12, for-10) det(homeless-12, the-11) nmod:for(shelter-9, homeless-12) punct(take-18, ,-13) aux(take-18, could-14) neg(take-18, not-15) det(Government-17, the-16) nsubj(take-18, Government-17) det(measures-21, some-19) amod(measures-21, special-20) dobj(take-18, measures-21) mark(talk-23, to-22) advcl(take-18, talk-23) case(initiatives-27, about-24) det(initiatives-27, the-25) amod(initiatives-27, new-26) nmod:about(talk-23, initiatives-27) punct(initiatives-27, ,-28) nsubjpass(implied-31, which-29) auxpass(implied-31, were-30) acl:relcl(initiatives-27, implied-31) case(one-33, in-32) nmod:in(implied-31, one-33) case(questions-36, of-34) det(questions-36, the-35) nmod:of(one-33, questions-36) mark(refused-39, that-37) nsubj(refused-39, he-38) ccomp(questions-36, refused-39) mark(answer-41, to-40) xcomp(refused-39, answer-41) punct(refused-39, ,-42) mark(deal-44, to-43) xcomp(refused-39, deal-44) case(misallocation-47, with-45) det(misallocation-47, the-46) nmod:with(deal-44, misallocation-47) case(money-49, of-48) nmod:of(misallocation-47, money-49) nsubjpass(implied-52, that-50) auxpass(implied-52, is-51) acl:relcl(money-49, implied-52) case(bed-55, in-53) compound(bed-55, funding-54) nmod:in(implied-52, bed-55) cc(bed-55, and-56) compound(accommodation-58, breakfast-57) nmod:in(implied-52, accommodation-58) conj:and(bed-55, accommodation-58) advmod(are-61, when-59) expl(are-61, there-60) advcl(implied-52, are-61) det(number-64, a-62) amod(number-64, vast-63) nsubj(are-61, number-64) case(dwellings-68, of-65) amod(dwellings-68, unfit-66) amod(dwellings-68, empty-67) nmod:of(number-64, dwellings-68) case(public-71, in-69) det(public-71, the-70) nmod:in(number-64, public-71) cc(public-71, and-72) det(sectors-75, the-73) amod(sectors-75, private-74) nmod:in(number-64, sectors-75) conj:and(public-71, sectors-75) punct(take-18, ?-76)",0,0,0,"root(ROOT, take) mark(year, As) amod(year, next) nsbj(year, year) cop(year, is) det(year, the) amod(year, international) advcl(take, year) case(shelter, of) nmod:of(year, shelter) case(homeless, for) det(homeless, the) nmod:for(shelter, homeless) pnct(take, ,) ax(take, cold) neg(take, not) det(Government, the) nsbj(take, Government) det(measres, some) amod(measres, special) dobj(take, measres) mark(talk, to) advcl(take, talk) case(initiatives, abot) det(initiatives, the) amod(initiatives, new) nmod:abot(talk, initiatives) pnct(initiatives, ,) nsbjpass(implied, which) axpass(implied, were) acl:relcl(initiatives, implied) case(one, in) nmod:in(implied, one) case(qestions, of) det(qestions, the) nmod:of(one, qestions) mark(refsed, that) nsbj(refsed, he) ccomp(qestions, refsed) mark(answer, to) xcomp(refsed, answer) pnct(refsed, ,) mark(deal, to) xcomp(refsed, deal) case(misallocation, with) det(misallocation, the) nmod:with(deal, misallocation) case(money, of) nmod:of(misallocation, money) nsbjpass(implied, that) axpass(implied, is) acl:relcl(money, implied) case(bed, in) compond(bed, fnding) nmod:in(implied, bed) cc(bed, and) compond(accommodation, breakfast) nmod:in(implied, accommodation) conj:and(bed, accommodation) advmod(are, when) expl(are, there) advcl(implied, are) det(nmber, a) amod(nmber, vast) nsbj(are, nmber) case(dwellings, of) amod(dwellings, nfit) amod(dwellings, empty) nmod:of(nmber, dwellings) case(pblic, in) det(pblic, the) nmod:in(nmber, pblic) cc(pblic, and) det(sectors, the) amod(sectors, private) nmod:in(nmber, sectors) conj:and(pblic, sectors) pnct(take, ?)","root(,VB) mark(NN,IN) amod(NN,JJ) nsbj(NN,NN) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) advcl(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) pnct(VB,VB) ax(VB,MD) neg(VB,RB) det(NNP,DT) nsbj(VB,NNP) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) mark(VB,TO) advcl(VB,VB) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:abot(VB,NNS) pnct(NNS,NNS) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(NNS,VBN) case(CD,IN) nmod:in(VBN,CD) case(NNS,IN) det(NNS,DT) nmod:of(CD,NNS) mark(VBD,WDT) nsbj(VBD,PRP) ccomp(NNS,VBD) mark(VB,TO) xcomp(VBD,VB) pnct(VBD,VBD) mark(VB,TO) xcomp(VBD,VB) case(NN,IN) det(NN,DT) nmod:with(VB,NN) case(NN,IN) nmod:of(NN,NN) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl:relcl(NN,VBN) case(NN,IN) compond(NN,NN) nmod:in(VBN,NN) cc(NN,CC) compond(NN,NN) nmod:in(VBN,NN) conj:and(NN,NN) advmod(VBP,WRB) expl(VBP,EX) advcl(VBN,VBP) det(NN,DT) amod(NN,JJ) nsbj(VBP,NN) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NN,NN) cc(NN,CC) det(NNS,DT) amod(NNS,JJ) nmod:in(NN,NNS) conj:and(NN,NNS) pnct(VB,VB)","[measures, Government, talk, he, answer, deal, year, questions, refused, ROOT, not, take]","[measures, Government, talk, he, answer, deal, year, questions, refused, ROOT, not, take]",17,"[deal, he, answer, questions, refused]","[deal, he, answer, questions, refused]",NNS_measures NNP_Government VB_talk PRP_he NN_answer VB_deal NN_year NNS_questions VBD_refused RB_not VB_take ,"[measures, Government, talk, he, answer, deal, year, questions, refused, ROOT, not, take]","[measures, Government, talk, he, answer, deal, year, questions, refused, ROOT, not, take]",NNS_measures NNP_Government VB_talk PRP_he NN_answer VB_deal NN_year NNS_questions VBD_refused RB_not VB_take ,"[measures, Government, talk, he, answer, deal, year, questions, refused, ROOT, not, take]",NNS_measures NNP_Government VB_talk PRP_he NN_answer VB_deal NN_year NNS_questions VBD_refused RB_not VB_take ,"[measures, Government, talk, he, answer, deal, year, questions, refused, ROOT, not, take]",NNS_measures NNP_Government VB_talk PRP_he NN_answer VB_deal NN_year NNS_questions VBD_refused RB_not VB_take ,-3,0,2,2,1,2,2,2,2,2
One of the top priorities for any local authority with its HIP allocation should be to bring back into use the empty properties that it has  many of which have been empty for more than a year.,OneCD ofIN theDT topJJ prioritiesNNS forIN anyDT localJJ authorityNN withIN itsPRP$ HIPNNP allocationNN shouldMD beVB toTO bringVB backRB intoIN useNN theDT emptyJJ propertiesNNS thatIN itPRP hasVBZ manyJJ ofIN whichWDT haveVBP beenVBN emptyJJ forIN moreJJR thanIN aDT yearNN ,"root(ROOT-0, bring-17) nsubj(bring-17, One-1) case(priorities-5, of-2) det(priorities-5, the-3) amod(priorities-5, top-4) nmod:of(One-1, priorities-5) case(authority-9, for-6) det(authority-9, any-7) amod(authority-9, local-8) nmod:for(priorities-5, authority-9) case(allocation-13, with-10) nmod:poss(allocation-13, its-11) compound(allocation-13, HIP-12) nmod:with(authority-9, allocation-13) aux(bring-17, should-14) aux(bring-17, be-15) mark(bring-17, to-16) compound:prt(bring-17, back-18) case(use-20, into-19) nmod:into(bring-17, use-20) det(properties-23, the-21) amod(properties-23, empty-22) dobj(bring-17, properties-23) dobj(has-26, that-24) nsubj(has-26, it-25) acl:relcl(properties-23, has-26) punct(has-26, ,-27) nsubj(empty-33, many-28) case(which-30, of-29) nmod:of(many-28, which-30) aux(empty-33, have-31) cop(empty-33, been-32) ccomp(has-26, empty-33) case(year-38, for-34) advmod(a-37, more-35) mwe(more-35, than-36) nummod(year-38, a-37) nmod:for(empty-33, year-38) punct(bring-17, .-39)",0,0,0,"root(ROOT, bring) nsbj(bring, One) case(priorities, of) det(priorities, the) amod(priorities, top) nmod:of(One, priorities) case(athority, for) det(athority, any) amod(athority, local) nmod:for(priorities, athority) case(allocation, with) nmod:poss(allocation, its) compond(allocation, HIP) nmod:with(athority, allocation) ax(bring, shold) ax(bring, be) mark(bring, to) compond:prt(bring, back) case(se, into) nmod:into(bring, se) det(properties, the) amod(properties, empty) dobj(bring, properties) dobj(has, that) nsbj(has, it) acl:relcl(properties, has) pnct(has, ,) nsbj(empty, many) case(which, of) nmod:of(many, which) ax(empty, have) cop(empty, been) ccomp(has, empty) case(year, for) advmod(a, more) mwe(more, than) nmmod(year, a) nmod:for(empty, year) pnct(bring, .)","root(,VB) nsbj(VB,CD) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(CD,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(NNS,NN) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NNP) nmod:with(NN,NN) ax(VB,MD) ax(VB,VB) mark(VB,TO) compond:prt(VB,RB) case(NN,IN) nmod:into(VB,NN) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) dobj(VBZ,IN) nsbj(VBZ,PRP) acl:relcl(NNS,VBZ) pnct(VBZ,VBZ) nsbj(JJ,JJ) case(WDT,IN) nmod:of(JJ,WDT) ax(JJ,VBP) cop(JJ,VBN) ccomp(VBZ,JJ) case(NN,IN) DTdvmod(DT,JJR) mwe(JJR,IN) nmmod(NN,DT) nmod:for(JJ,NN) pnct(VB,VB)",[ ],[ ],18,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
No  total.,NoDT totalNN ,"root(ROOT-0, total-3) neg(total-3, No-1) punct(total-3, ,-2) punct(total-3, .-4)",0,0,0,"root(ROOT, total) neg(total, No) pnct(total, ,) pnct(total, .)","root(,NN) neg(NN,DT) pnct(NN,NN) pnct(NN,NN)",[ ],[ ],19,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
There has been a recovery in private sector starts.,ThereEX hasVBZ beenVBN aDT recoveryNN inIN privateJJ sectorNN startsNNS ,"root(ROOT-0, starts-9) expl(recovery-5, There-1) aux(recovery-5, has-2) cop(recovery-5, been-3) det(recovery-5, a-4) nsubj(starts-9, recovery-5) case(sector-8, in-6) amod(sector-8, private-7) nmod:in(recovery-5, sector-8) punct(starts-9, .-10)",0,1,0,"root(ROOT, starts) expl(recovery, There) ax(recovery, has) cop(recovery, been) det(recovery, a) nsbj(starts, recovery) case(sector, in) amod(sector, private) nmod:in(recovery, sector) pnct(starts, .)","root(,NNS) expl(NN,EX) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) nsbj(NNS,NN) case(NN,IN) amod(NN,JJ) nmod:in(NN,NN) pnct(NNS,NNS)",[ ],[ ],20,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The figures are at the highest level for 10 years  apart from one year.,TheDT figuresNNS areVBP atIN theDT highestJJS levelNN forIN 10CD yearsNNS apartRB fromIN oneCD yearNN ,"root(ROOT-0, level-7) det(figures-2, The-1) nsubj(level-7, figures-2) cop(level-7, are-3) case(level-7, at-4) det(level-7, the-5) amod(level-7, highest-6) case(years-10, for-8) nummod(years-10, 10-9) nmod:for(level-7, years-10) punct(level-7, ,-11) advmod(level-7, apart-12) case(year-15, from-13) nummod(year-15, one-14) nmod:from(apart-12, year-15) punct(level-7, .-16)",0,0,0,"root(ROOT, level) det(figres, The) nsbj(level, figres) cop(level, are) case(level, at) det(level, the) amod(level, highest) case(years, for) nmmod(years, 10) nmod:for(level, years) pnct(level, ,) advmod(level, apart) case(year, from) nmmod(year, one) nmod:from(apart, year) pnct(level, .)","root(,NN) det(NNS,DT) nsbj(NN,NNS) cop(NN,VBP) case(NN,IN) det(NN,DT) amod(NN,JJS) case(NNS,IN) nmmod(NNS,CD) nmod:for(NN,NNS) pnct(NN,NN) advmod(NN,RB) case(NN,IN) nmmod(NN,CD) nmod:from(RB,NN) pnct(NN,NN)",[ ],[ ],20,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Local authorities of all persuasions are rightly using their allocations to modernise and to bring up to standard properties that they already own rather than embarking on programmes of new build.,LocalJJ authoritiesNNS ofIN allDT persuasionsNNS areVBP rightlyRB usingVBG theirPRP$ allocationsNNS toTO moderniseVB andCC toTO bringVB upRP toTO standardVB propertiesNNS thatIN theyPRP alreadyRB ownVBP ratherRB thanIN embarkingVBG onIN programmesNNS ofIN newJJ buildNN ,"root(ROOT-0, using-8) amod(authorities-2, Local-1) nsubj(using-8, authorities-2) case(persuasions-5, of-3) det(persuasions-5, all-4) nmod:of(authorities-2, persuasions-5) aux(using-8, are-6) advmod(using-8, rightly-7) nmod:poss(allocations-10, their-9) dobj(using-8, allocations-10) mark(modernise-12, to-11) advcl(using-8, modernise-12) cc(modernise-12, and-13) mark(bring-15, to-14) advcl(using-8, bring-15) conj:and(modernise-12, bring-15) compound:prt(bring-15, up-16) case(properties-19, to-17) amod(properties-19, standard-18) nmod:to(bring-15, properties-19) mark(own-23, that-20) nsubj(own-23, they-21) advmod(own-23, already-22) ccomp(bring-15, own-23) mark(embarking-26, rather-24) mwe(rather-24, than-25) advcl(own-23, embarking-26) case(programmes-28, on-27) nmod:on(embarking-26, programmes-28) case(build-31, of-29) amod(build-31, new-30) nmod:of(programmes-28, build-31) punct(using-8, .-32)",0,0,1,"root(ROOT, sing) amod(athorities, Local) nsbj(sing, athorities) case(persasions, of) det(persasions, all) nmod:of(athorities, persasions) ax(sing, are) advmod(sing, rightly) nmod:poss(allocations, their) dobj(sing, allocations) mark(modernise, to) advcl(sing, modernise) cc(modernise, and) mark(bring, to) advcl(sing, bring) conj:and(modernise, bring) compond:prt(bring, p) case(properties, to) amod(properties, standard) nmod:to(bring, properties) mark(own, that) nsbj(own, they) advmod(own, already) ccomp(bring, own) mark(embarking, rather) mwe(rather, than) advcl(own, embarking) case(programmes, on) nmod:on(embarking, programmes) case(bild, of) amod(bild, new) nmod:of(programmes, bild) pnct(sing, .)","root(,VBG) amod(NNS,JJ) nsbj(VBG,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) ax(VBG,VBP) advmod(VBG,RB) nmod:poss(NNS,PRP$) dobj(VBG,NNS) mark(VB,TO) advcl(VBG,VB) cc(VB,CC) mark(VB,TO) advcl(VBG,VB) conj:and(VB,VB) compond:prt(VB,RP) case(NNS,TO) amod(NNS,VB) nmod:to(VB,NNS) mark(VBP,IN) nsbj(VBP,PRP) advmod(VBP,RB) ccomp(VB,VBP) mark(VBG,RB) mwe(RB,IN) advcl(VBP,VBG) case(NNS,IN) nmod:on(VBG,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) pnct(VBG,VBG)",[ ],[ ],20,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
asked the Secretary of State for Foreign and Commonwealth Affairs what representations Her Majesty's Government have received from their allies on the United Kingdom's attitude to arms negotiations; and if he will make a statement.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN ForeignNNP andCC CommonwealthNNP AffairsNNP whatWP representationsVBZ HerPRP$ MajestyNNP 'sPOS GovernmentNNP haveVBP receivedVBN fromIN theirPRP$ alliesNNS onIN theDT UnitedNNP KingdomNNP 'sPOS attitudeNN toTO armsNNS negotiationsNNS ;: andCC ifIN hePRP willMD makeVB aDT statementNN ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Affairs-10, for-6) compound(Affairs-10, Foreign-7) cc(Foreign-7, and-8) conj:and(Foreign-7, Commonwealth-9) compound(Affairs-10, Commonwealth-9) nmod:for(Secretary-3, Affairs-10) det(representations-12, what-11) dobj(received-18, representations-12) nmod:poss(Government-16, Her-13) nmod:poss(Government-16, Majesty-14) case(Majesty-14, 's-15) nsubj(received-18, Government-16) aux(received-18, have-17) acl:relcl(Affairs-10, received-18) case(allies-21, from-19) nmod:poss(allies-21, their-20) nmod:from(received-18, allies-21) case(attitude-27, on-22) det(Kingdom-25, the-23) compound(Kingdom-25, United-24) nmod:poss(attitude-27, Kingdom-25) case(Kingdom-25, 's-26) nmod:on(allies-21, attitude-27) case(negotiations-30, to-28) compound(negotiations-30, arms-29) nmod:to(attitude-27, negotiations-30) punct(asked-1, ;-31) cc(asked-1, and-32) mark(make-36, if-33) nsubj(make-36, he-34) aux(make-36, will-35) conj:and(asked-1, make-36) det(statement-38, a-37) dobj(make-36, statement-38) punct(asked-1, .-39)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Affairs, for) compond(Affairs, Foreign) cc(Foreign, and) conj:and(Foreign, Commonwealth) compond(Affairs, Commonwealth) nmod:for(Secretary, Affairs) det(representations, what) dobj(received, representations) nmod:poss(Government, Her) nmod:poss(Government, Majesty) ""case(Majesty, s)"", nsbj(received, Government) ax(received, have) acl:relcl(Affairs, received) case(allies, from) nmod:poss(allies, their) nmod:from(received, allies) case(attitde, on) det(Kingdom, the) compond(Kingdom, United) nmod:poss(attitde, Kingdom) ""case(Kingdom, s)"", nmod:on(allies, attitde) case(negotiations, to) compond(negotiations, arms) nmod:to(attitde, negotiations) pnct(asked, ;) cc(asked, and) mark(make, if) nsbj(make, he) ax(make, will) conj:and(asked, make) det(statement, a) dobj(make, statement) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) compond(NNP,NNP) cc(NNP,CC) conj:and(NNP,NNP) compond(NNP,NNP) nmod:for(NNP,NNP) det(VBZ,WP) dobj(VBN,VBZ) nmod:poss(NNP,PRP$) nmod:poss(NNP,NNP) case(NNP,POS) nsbj(VBN,NNP) ax(VBN,VBP) acl:relcl(NNP,VBN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:from(VBN,NNS) case(NN,IN) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:on(NNS,NN) case(NNS,TO) compond(NNS,NNS) nmod:to(NN,NNS) pnct(VBN,:) cc(VBN,CC) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) conj:and(VBN,VB) det(NN,DT) dobj(VB,NN) pnct(VBN,VBN)","[allies, make, he, and, State, received, Majesty, Her, representations, Secretary, Government, ROOT, asked, statement, Affairs]","[allies, make, he, and, State, received, Majesty, Her, representations, Secretary, Government, ROOT, asked, statement, Affairs]",1,"[Secretary, asked, and, State, received, Affairs, ROOT]","[Secretary, asked, and, State, received, Affairs, ROOT]",NNS_allies VB_make PRP_he CC_and NNP_State VBN_received NNP_Majesty PRP$_Her VBZ_representations NNP_Secretary NNP_Government VBN_asked NN_statement NNP_Affairs ,"[allies, make, he, and, State, received, Majesty, Her, representations, Secretary, Government, ROOT, asked, statement, Affairs]","[allies, make, he, and, State, received, Majesty, Her, representations, Secretary, Government, ROOT, asked, statement, Affairs]",NNS_allies VB_make PRP_he CC_and NNP_State VBN_received NNP_Majesty PRP$_Her VBZ_representations NNP_Secretary NNP_Government VBN_asked NN_statement NNP_Affairs ,"[allies, make, he, and, State, received, Majesty, Her, representations, Secretary, Government, ROOT, asked, statement, Affairs]",NNS_allies VB_make PRP_he CC_and NNP_State VBN_received NNP_Majesty PRP$_Her VBZ_representations NNP_Secretary NNP_Government VBN_asked NN_statement NNP_Affairs ,"[allies, make, he, and, State, received, Majesty, Her, representations, Secretary, Government, ROOT, asked, statement, Affairs]",NNS_allies VB_make PRP_he CC_and NNP_State VBN_received NNP_Majesty PRP$_Her VBZ_representations NNP_Secretary NNP_Government VBN_asked NN_statement NNP_Affairs ,-3,0,2,1,1,1,1,1,1,2
Since the Reykjavik meeting between President Reagan and Mr. Gorbachev  the process of close Alliance consultations on arms control has continued both multilaterally and bilaterally.,SinceIN theDT ReykjavikNNP meetingNN betweenIN PresidentNNP ReaganNNP andCC MrNNP GorbachevNNP theDT processNN ofIN closeJJ AllianceNNP consultationsNNS onIN armsNNS controlNN hasVBZ continuedVBN bothDT multilaterallyRB andCC bilaterallyRB ,"root(ROOT-0, Since-1) det(meeting-4, the-2) compound(meeting-4, Reykjavik-3) dep(Since-1, meeting-4) case(Reagan-7, between-5) compound(Reagan-7, President-6) nmod:between(meeting-4, Reagan-7) cc(Reagan-7, and-8) compound(Gorbachev-10, Mr.-9) nmod:between(meeting-4, Gorbachev-10) conj:and(Reagan-7, Gorbachev-10) punct(meeting-4, ,-11) det(process-13, the-12) nsubj(continued-22, process-13) case(consultations-17, of-14) amod(consultations-17, close-15) compound(consultations-17, Alliance-16) nmod:of(process-13, consultations-17) case(control-20, on-18) compound(control-20, arms-19) nmod:on(process-13, control-20) aux(continued-22, has-21) acl:relcl(meeting-4, continued-22) cc:preconj(multilaterally-24, both-23) advmod(continued-22, multilaterally-24) cc(multilaterally-24, and-25) advmod(continued-22, bilaterally-26) conj:and(multilaterally-24, bilaterally-26) punct(Since-1, .-27)",0,0,0,"root(ROOT, Since) det(meeting, the) compond(meeting, Reykjavik) dep(Since, meeting) case(Reagan, between) compond(Reagan, President) nmod:between(meeting, Reagan) cc(Reagan, and) compond(Gorbachev, Mr.) nmod:between(meeting, Gorbachev) conj:and(Reagan, Gorbachev) pnct(meeting, ,) det(process, the) nsbj(contined, process) case(consltations, of) amod(consltations, close) compond(consltations, Alliance) nmod:of(process, consltations) case(control, on) compond(control, arms) nmod:on(process, control) ax(contined, has) acl:relcl(meeting, contined) cc:preconj(mltilaterally, both) advmod(contined, mltilaterally) cc(mltilaterally, and) advmod(contined, bilaterally) conj:and(mltilaterally, bilaterally) pnct(Since, .)","root(,IN) det(NN,DT) compond(NN,NNP) dep(IN,NN) case(NNP,IN) compond(NNP,NNP) nmod:between(NN,NNP) cc(NNP,CC) compond(NNP,NNP) nmod:between(NN,NNP) conj:and(NNP,NNP) pnct(NN,NN) det(NN,DT) nsbj(VBN,NN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NNP) nmod:of(NN,NNS) case(NN,IN) compond(NN,NNS) nmod:on(NN,NN) ax(VBN,VBZ) acl:relcl(NN,VBN) cc:preconj(RB,DT) advmod(VBN,RB) cc(RB,CC) advmod(VBN,RB) conj:and(RB,RB) pnct(IN,IN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That has included the meeting of the North Atlantic Council on 13 October and the Nuclear Planning Group meeting in Gleneagles on 21 22 October.,ThatDT hasVBZ includedVBN theDT meetingNN ofIN theDT NorthNNP AtlanticNNP CouncilNNP onIN 13CD OctoberNNP andCC theDT NuclearNNP PlanningNNP GroupNNP meetingNN inIN GleneaglesNNP onIN 21CD 22CD OctoberNNP ,"root(ROOT-0, included-3) nsubj(included-3, That-1) aux(included-3, has-2) det(meeting-5, the-4) dobj(included-3, meeting-5) case(Council-10, of-6) det(Council-10, the-7) compound(Council-10, North-8) compound(Council-10, Atlantic-9) nmod:of(meeting-5, Council-10) case(October-13, on-11) nummod(October-13, 13-12) nmod:on(meeting-5, October-13) cc(October-13, and-14) det(meeting-19, the-15) amod(meeting-19, Nuclear-16) compound(meeting-19, Planning-17) compound(meeting-19, Group-18) nmod:on(meeting-5, meeting-19) conj:and(October-13, meeting-19) case(Gleneagles-21, in-20) nmod:in(meeting-19, Gleneagles-21) case(October-25, on-22) nummod(October-25, 21-23) nummod(October-25, 22-24) nmod:on(meeting-19, October-25) punct(included-3, .-26)",0,0,0,"root(ROOT, inclded) nsbj(inclded, That) ax(inclded, has) det(meeting, the) dobj(inclded, meeting) case(Concil, of) det(Concil, the) compond(Concil, North) compond(Concil, Atlantic) nmod:of(meeting, Concil) case(October, on) nmmod(October, 13) nmod:on(meeting, October) cc(October, and) det(meeting, the) amod(meeting, Nclear) compond(meeting, Planning) compond(meeting, Grop) nmod:on(meeting, meeting) conj:and(October, meeting) case(Gleneagles, in) nmod:in(meeting, Gleneagles) case(October, on) nmmod(October, 21) nmmod(October, 22) nmod:on(meeting, October) pnct(inclded, .)","root(,VBN) nsbj(VBN,DT) ax(VBN,VBZ) det(NN,DT) dobj(VBN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) nmmod(NNP,CD) nmod:on(NN,NNP) cc(NNP,CC) det(NN,DT) amod(NN,NNP) compond(NN,NNP) compond(NN,NNP) nmod:on(NN,NN) conj:and(NNP,NN) case(NNP,IN) nmod:in(NN,NNP) case(NNP,IN) nmmod(NNP,CD) nmmod(NNP,CD) nmod:on(NN,NNP) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
There have  of course  been several bilateral contacts with the USA and France.,ThereEX haveVBP ofIN courseNN beenVBN severalJJ bilateralJJ contactsNNS withIN theDT USANNP andCC FranceNNP ,"root(ROOT-0, have-2) expl(have-2, There-1) punct(have-2, ,-3) case(course-5, of-4) nmod:of(have-2, course-5) punct(have-2, ,-6) cop(contacts-10, been-7) amod(contacts-10, several-8) amod(contacts-10, bilateral-9) dep(have-2, contacts-10) case(USA-13, with-11) det(USA-13, the-12) nmod:with(contacts-10, USA-13) cc(USA-13, and-14) nmod:with(contacts-10, France-15) conj:and(USA-13, France-15) punct(have-2, .-16)",0,0,0,"root(ROOT, have) expl(have, There) pnct(have, ,) case(corse, of) nmod:of(have, corse) pnct(have, ,) cop(contacts, been) amod(contacts, several) amod(contacts, bilateral) dep(have, contacts) case(USA, with) det(USA, the) nmod:with(contacts, USA) cc(USA, and) nmod:with(contacts, France) conj:and(USA, France) pnct(have, .)","root(,VBP) expl(VBP,EX) pnct(VBP,VBP) case(NN,IN) nmod:of(VBP,NN) pnct(VBP,VBP) cop(NNS,VBN) amod(NNS,JJ) amod(NNS,JJ) dep(VBP,NNS) case(NNP,IN) det(NNP,DT) nmod:with(NNS,NNP) cc(NNP,CC) nmod:with(NNS,NNP) conj:and(NNP,NNP) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I certainly agree with my hon. Friend.,IPRP certainlyRB agreeVBP withIN myPRP$ honNN FriendNN ,"root(ROOT-0, agree-3) nsubj(agree-3, I-1) advmod(agree-3, certainly-2) case(Friend-7, with-4) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) nmod:with(agree-3, Friend-7) punct(agree-3, .-8)",0,1,0,"root(ROOT, agree) nsbj(agree, I) advmod(agree, certainly) case(Friend, with) nmod:poss(Friend, my) compond(Friend, hon.) nmod:with(agree, Friend) pnct(agree, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NN) nmod:with(VBP,NN) pnct(VBP,VBP)","[I, Friend, my, ROOT, agree, certainly]","[I, Friend, my, ROOT, agree, certainly]",4,"[I, Friend, my, ROOT, agree, certainly]","[I, Friend, my, ROOT, agree, certainly]",PRP_I NNP_Friend PRP$_my VB_agree RB_certainly ,"[I, Friend, my, ROOT, agree, certainly]","[I, Friend, my, ROOT, agree, certainly]",PRP_I NNP_Friend PRP$_my VB_agree RB_certainly ,"[I, Friend, my, ROOT, agree, certainly]",PRP_I NNP_Friend PRP$_my VB_agree RB_certainly ,"[I, Friend, my, ROOT, agree, certainly]",PRP_I NNP_Friend PRP$_my VB_agree RB_certainly ,-3,0,1,0,0,0,0,0,0,0
Have the Government had representations from their allies about their apparent reluctance to endorse the zero zero option on intermediate range nuclear weapons?,HaveVBP theDT GovernmentNNP hadVBD representationsNNS fromIN theirPRP$ alliesNNS aboutIN theirPRP$ apparentJJ reluctanceNN toTO endorseVB theDT zeroNN zeroNN optionNN onIN intermediateJJ rangeNN nuclearJJ weaponsNNS ,"root(ROOT-0, had-4) aux(had-4, Have-1) det(Government-3, the-2) nsubj(had-4, Government-3) dobj(had-4, representations-5) case(allies-8, from-6) nmod:poss(allies-8, their-7) nmod:from(representations-5, allies-8) case(reluctance-12, about-9) nmod:poss(reluctance-12, their-10) amod(reluctance-12, apparent-11) nmod:about(had-4, reluctance-12) mark(endorse-14, to-13) acl(reluctance-12, endorse-14) det(option-18, the-15) compound(zero-17, zero-16) nummod(option-18, zero-17) dobj(endorse-14, option-18) case(range-21, on-19) amod(range-21, intermediate-20) nmod:on(option-18, range-21) amod(weapons-23, nuclear-22) dobj(range-21, weapons-23) punct(had-4, ?-24)",0,1,0,"root(ROOT, had) ax(had, Have) det(Government, the) nsbj(had, Government) dobj(had, representations) case(allies, from) nmod:poss(allies, their) nmod:from(representations, allies) case(relctance, abot) nmod:poss(relctance, their) amod(relctance, apparent) nmod:abot(had, relctance) mark(endorse, to) acl(relctance, endorse) det(option, the) compond(zero, zero) nmmod(option, zero) dobj(endorse, option) case(range, on) amod(range, intermediate) nmod:on(option, range) amod(weapons, nclear) dobj(range, weapons) pnct(had, ?)","root(,VBD) ax(VBD,VBP) det(NNP,DT) nsbj(VBD,NNP) dobj(VBD,NNS) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:from(NNS,NNS) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:abot(VBD,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) compond(NN,NN) nmmod(NN,NN) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:on(NN,NN) amod(NNS,JJ) dobj(NN,NNS) pnct(VBD,VBD)","[Government, reluctance, had, representations, ROOT]","[Government, reluctance, had, representations, ROOT]",5,[ ],[ ],NNP_Government NN_reluctance VBN_had VBZ_representations ,"[Government, reluctance, had, representations, ROOT]","[Government, reluctance, had, representations, ROOT]",NNP_Government NN_reluctance VBN_had VBZ_representations ,[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the Foreign Secretary accept the repeated statement of the Secretary General of NATO  Lord Carrington  that zero zero was implicit in NATO's original twin track decision of December 1979?,DoesVBZ theDT ForeignNNP SecretaryNNP acceptVBD theDT repeatedJJ statementNN ofIN theDT SecretaryNNP GeneralNNP ofIN NATONNP LordNNP CarringtonNNP thatIN zeroCD zeroNN wasVBD implicitJJ inIN NATONNP 'sPOS originalJJ twinNN trackNN decisionNN ofIN DecemberNNP 1979CD ,"root(ROOT-0, accept-5) aux(accept-5, Does-1) det(Secretary-4, the-2) compound(Secretary-4, Foreign-3) nsubj(accept-5, Secretary-4) det(statement-8, the-6) amod(statement-8, repeated-7) dobj(accept-5, statement-8) case(General-12, of-9) det(General-12, the-10) compound(General-12, Secretary-11) nmod:of(statement-8, General-12) case(NATO-14, of-13) nmod:of(General-12, NATO-14) punct(accept-5, ,-15) compound(Carrington-17, Lord-16) root(,-15, Carrington-17) punct(Carrington-17, ,-18) mark(implicit-23, that-19) compound(zero-21, zero-20) nsubj(implicit-23, zero-21) cop(implicit-23, was-22) dep(Carrington-17, implicit-23) case(decision-30, in-24) nmod:poss(decision-30, NATO-25) case(NATO-25, 's-26) amod(decision-30, original-27) amod(decision-30, twin-28) compound(decision-30, track-29) nmod:in(implicit-23, decision-30) case(December-32, of-31) nmod:of(decision-30, December-32) nummod(December-32, 1979-33) punct(Carrington-17, ?-34)",0,0,0,"root(ROOT, accept) ax(accept, Does) det(Secretary, the) compond(Secretary, Foreign) nsbj(accept, Secretary) det(statement, the) amod(statement, repeated) dobj(accept, statement) case(General, of) det(General, the) compond(General, Secretary) nmod:of(statement, General) case(NATO, of) nmod:of(General, NATO) pnct(accept, ,) compond(Carrington, Lord) root(,, Carrington) pnct(Carrington, ,) mark(implicit, that) compond(zero, zero) nsbj(implicit, zero) cop(implicit, was) dep(Carrington, implicit) case(decision, in) nmod:poss(decision, NATO) ""case(NATO, s)"", amod(decision, original) amod(decision, twin) compond(decision, track) nmod:in(implicit, decision) case(December, of) nmod:of(decision, December) nmmod(December, 1979) pnct(Carrington, ?)","root(,VBD) ax(VBD,VBZ) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VBD,VBD) compond(NNP,NNP) root(NNPNNPNNP) pnct(NNP,NNP) mark(JJ,IN) compond(NN,NN) nsbj(JJ,NN) cop(JJ,VBD) dep(NNP,JJ) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) amod(NN,NN) compond(NN,NN) nmod:in(JJ,NN) case(NNP,IN) nmod:of(NN,NNP) nmmod(NNP,CD) pnct(NNP,NNP)","[NATO, accept, statement, ROOT, General, Secretary]","[NATO, accept, statement, ROOT, General, Secretary]",5,"[NATO, General, statement]","[NATO, General, statement]",NNP_NATO VBD_accept NN_statement NNP_General NNP_Secretary ,"[NATO, accept, statement, ROOT, General, Secretary]","[NATO, accept, statement, ROOT, General, Secretary]",NNP_NATO VBD_accept NN_statement NNP_General NNP_Secretary ,"[NATO, accept, statement, ROOT, General, Secretary]",NNP_NATO VBD_accept NN_statement NNP_General NNP_Secretary ,"[NATO, accept, statement, ROOT, General, Secretary]",NNP_NATO VBD_accept NN_statement NNP_General NNP_Secretary ,-3,0,2,0,0,0,0,0,0,0
Does my right hon. and learned Friend recall that a few minutes ago the right hon. Member for Leeds  East (Mr. Healey) referred to a speech in which Secretary Shultz declared his determination to secure the abolition of certain categories of nuclear weapons within 10 years?,DoesNNP myPRP$ rightNN honNN andCC learnedVBD FriendNNP recallNN thatIN aDT fewJJ minutesNNS agoIN theDT rightJJ honNN MemberNNP forIN LeedsNNP EastNNP (( MrNNP HealeyNNP )) referredVBD toTO aDT speechNN inIN whichWDT SecretaryNNP ShultzNNP declaredVBD hisPRP$ determinationNN toTO secureVB theDT abolitionNN ofIN certainJJ categoriesNNS ofIN nuclearJJ weaponsNNS withinIN 10CD yearsNNS ,"root(ROOT-0, Does-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) dobj(Does-1, hon.-4) cc(Does-1, and-5) amod(recall-8, learned-6) compound(recall-8, Friend-7) conj:and(Does-1, recall-8) dep(recall-8, that-9) det(minutes-12, a-10) amod(minutes-12, few-11) dep(that-9, minutes-12) case(minutes-12, ago-13) det(Member-17, the-14) amod(Member-17, right-15) compound(Member-17, hon.-16) dep(minutes-12, Member-17) case(Leeds-19, for-18) nmod:for(Member-17, Leeds-19) punct(Leeds-19, ,-20) appos(Leeds-19, East-21) punct(Healey-24, -LRB--22) compound(Healey-24, Mr.-23) appos(East-21, Healey-24) punct(Healey-24, -RRB--25) acl(East-21, referred-26) case(speech-29, to-27) det(speech-29, a-28) nmod:to(referred-26, speech-29) case(which-31, in-30) nmod:in(declared-34, which-31) compound(Shultz-33, Secretary-32) nsubj(declared-34, Shultz-33) acl:relcl(speech-29, declared-34) nmod:poss(determination-36, his-35) dobj(declared-34, determination-36) mark(secure-38, to-37) acl(determination-36, secure-38) det(abolition-40, the-39) dobj(secure-38, abolition-40) case(categories-43, of-41) amod(categories-43, certain-42) nmod:of(abolition-40, categories-43) case(weapons-46, of-44) amod(weapons-46, nuclear-45) nmod:of(categories-43, weapons-46) case(years-49, within-47) nummod(years-49, 10-48) nmod:within(secure-38, years-49) punct(Does-1, ?-50)",0,0,0,"root(ROOT, Does) nmod:poss(hon., my) amod(hon., right) dobj(Does, hon.) cc(Does, and) amod(recall, learned) compond(recall, Friend) conj:and(Does, recall) dep(recall, that) det(mintes, a) amod(mintes, few) dep(that, mintes) case(mintes, ago) det(Member, the) amod(Member, right) compond(Member, hon.) dep(mintes, Member) case(Leeds, for) nmod:for(Member, Leeds) pnct(Leeds, ,) appos(Leeds, East) pnct(Healey, ) compond(Healey, Mr.) appos(East, Healey) pnct(Healey, ) acl(East, referred) case(speech, to) det(speech, a) nmod:to(referred, speech) case(which, in) nmod:in(declared, which) compond(Shltz, Secretary) nsbj(declared, Shltz) acl:relcl(speech, declared) nmod:poss(determination, his) dobj(declared, determination) mark(secre, to) acl(determination, secre) det(abolition, the) dobj(secre, abolition) case(categories, of) amod(categories, certain) nmod:of(abolition, categories) case(weapons, of) amod(weapons, nclear) nmod:of(categories, weapons) case(years, within) nmmod(years, 10) nmod:within(secre, years) pnct(Does, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(PRP$,JJ) dobj(NNP,NNP) cc(NNP,CC) amod(NN,VBD) compond(NN,NNP) conj:and(NNP,NN) dep(NN,IN) det(NNS,DT) amod(NNS,JJ) dep(IN,NNS) case(NNS,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) dep(NNS,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,NNP) appos(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) acl(NNP,VBD) case(NN,TO) det(NN,DT) nmod:to(VBD,NN) case(WDT,IN) nmod:in(VBD,WDT) compond(NNP,NNP) nsbj(VBD,NNP) acl:relcl(NN,VBD) nmod:poss(NN,PRP$) dobj(VBD,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:of(NNS,NNS) case(NNS,IN) nmmod(NNS,CD) nmod:within(VB,NNS) pnct(NNP,NNP)","[declared, Member, few, Leeds, learned, that, East, Shultz, minutes, recall, right]","[declared, Member, minutes, Leeds, learned, that, East, Shultz, few, recall]",7,"[declared, Member, minutes, Leeds, learned, that, East, Shultz, few, recall]","[declared, Member, minutes, Leeds, learned, that, East, Shultz, few, recall]",VBD_declared NNP_Member NNS_minutes NNP_Leeds VBD_learned IN_that NNP_East NNP_Shultz JJ_few NN_recall ,"[declared, Member, minutes, Leeds, learned, that, East, Shultz, few, recall]","[declared, Member, minutes, Leeds, learned, that, East, Shultz, few, recall]",VBD_declared NNP_Member NNS_minutes NNP_Leeds VBD_learned IN_that NNP_East NNP_Shultz JJ_few NN_recall ,"[declared, Member, minutes, Leeds, learned, that, East, Shultz, few, recall]",VBD_declared NNP_Member NNS_minutes NNP_Leeds VBD_learned IN_that NNP_East NNP_Shultz JJ_few NN_recall ,"[declared, Member, minutes, Leeds, learned, that, East, Shultz, few, recall]",VBD_declared NNP_Member NNS_minutes NNP_Leeds VBD_learned IN_that NNP_East NNP_Shultz JJ_few NN_recall ,-3,0,1,0,0,0,0,0,0,0
The right hon. Gentleman concluded that that statement threatened the future of our Trident programme  but does my right hon. and learned Friend also recall that in the 1960s both superpowers declared their firm intention to secure general and complete disarmament within 10 years or so?,TheDT rightJJ honNN GentlemanNNP concludedVBD thatIN thatDT statementNN threatenedVBD theDT futureNN ofIN ourPRP$ TridentNNP programmeNN butCC doesVBZ myPRP$ rightJJ honNN andCC learnedVBD FriendNNP alsoRB recallVBP thatIN inIN theDT 1960sCD bothDT superpowersNNS declaredVBD theirPRP$ firmNN intentionNN toTO secureVB generalJJ andCC completeJJ disarmamentNN withinIN 10CD yearsNNS orCC soRB ,"root(ROOT-0, concluded-5) det(Gentleman-4, The-1) amod(Gentleman-4, right-2) compound(Gentleman-4, hon.-3) nsubj(concluded-5, Gentleman-4) dobj(concluded-5, that-6) mark(threatened-9, that-7) nsubj(threatened-9, statement-8) dep(that-6, threatened-9) det(future-11, the-10) dobj(threatened-9, future-11) case(programme-15, of-12) nmod:poss(programme-15, our-13) compound(programme-15, Trident-14) nmod:of(future-11, programme-15) punct(threatened-9, ,-16) cc(threatened-9, but-17) aux(recall-26, does-18) nmod:poss(hon.-21, my-19) amod(hon.-21, right-20) nsubj(recall-26, hon.-21) cc(hon.-21, and-22) amod(Friend-24, learned-23) conj:and(hon.-21, Friend-24) nsubj(recall-26, Friend-24) advmod(recall-26, also-25) dep(that-6, recall-26) conj:but(threatened-9, recall-26) mark(declared-33, that-27) case(1960s-30, in-28) det(1960s-30, the-29) nmod:in(declared-33, 1960s-30) det(superpowers-32, both-31) nsubj(declared-33, superpowers-32) ccomp(recall-26, declared-33) nmod:poss(intention-36, their-34) compound(intention-36, firm-35) dobj(declared-33, intention-36) mark(secure-38, to-37) acl(intention-36, secure-38) amod(disarmament-42, general-39) cc(general-39, and-40) conj:and(general-39, complete-41) amod(disarmament-42, complete-41) dobj(secure-38, disarmament-42) case(years-45, within-43) nummod(years-45, 10-44) nmod:within(secure-38, years-45) cc(secure-38, or-46) advmod(secure-38, so-47) punct(concluded-5, ?-48)",0,0,0,"root(ROOT, conclded) det(Gentleman, The) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(conclded, Gentleman) dobj(conclded, that) mark(threatened, that) nsbj(threatened, statement) dep(that, threatened) det(ftre, the) dobj(threatened, ftre) case(programme, of) nmod:poss(programme, or) compond(programme, Trident) nmod:of(ftre, programme) pnct(threatened, ,) cc(threatened, bt) ax(recall, does) nmod:poss(hon., my) amod(hon., right) nsbj(recall, hon.) cc(hon., and) amod(Friend, learned) conj:and(hon., Friend) nsbj(recall, Friend) advmod(recall, also) dep(that, recall) conj:bt(threatened, recall) mark(declared, that) case(1960s, in) det(1960s, the) nmod:in(declared, 1960s) det(sperpowers, both) nsbj(declared, sperpowers) ccomp(recall, declared) nmod:poss(intention, their) compond(intention, firm) dobj(declared, intention) mark(secre, to) acl(intention, secre) amod(disarmament, general) cc(general, and) conj:and(general, complete) amod(disarmament, complete) dobj(secre, disarmament) case(years, within) nmmod(years, 10) nmod:within(secre, years) cc(secre, or) advmod(secre, so) pnct(conclded, ?)","root(,VBD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) dobj(VBD,IN) mark(VBD,IN) nsbj(VBD,NN) dep(IN,VBD) det(NN,DT) dobj(VBD,NN) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NNP) nmod:of(NN,NN) pnct(VBD,VBD) cc(VBD,CC) ax(VBP,VBZ) nmod:poss(VBZ,PRP$) amod(PRP$,JJ) nsbj(VBP,VBP) cc(VBP,CC) amod(NNP,VBD) conj:and(VBD,NNP) nsbj(VBP,NNP) advmod(VBP,RB) dep(IN,VBP) conj:bt(VBD,VBP) mark(VBD,IN) case(CD,IN) det(CD,DT) nmod:in(VBD,CD) det(NNS,DT) nsbj(VBD,NNS) ccomp(VBP,VBD) nmod:poss(NN,PRP$) compond(NN,NN) dobj(VBD,NN) mark(VB,TO) acl(NN,VB) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) dobj(VB,NN) case(NNS,IN) nmmod(NNS,CD) nmod:within(VB,NNS) cc(VB,CC) advmod(VB,RB) pnct(VBD,VBD)","[hon., my, that, declared, right, recall, Friend, learned, and, right, Gentleman, ROOT, concluded, also]","[my, hon., that, declared, recall, Friend, learned, and, right, ROOT, Gentleman, concluded, also]",7,"[concluded, ROOT, that, Gentleman]","[concluded, ROOT, that, Gentleman]",PRP$_my IN_that VBD_declared NN_recall NNP_Friend VBD_learned CC_and JJ_right NNP_Gentleman VBD_concluded RB_also ,"[my, hon., that, declared, recall, Friend, learned, and, right, ROOT, Gentleman, concluded, also]","[my, hon., that, declared, recall, Friend, learned, and, right, ROOT, Gentleman, concluded, also]",PRP$_my IN_that VBD_declared NN_recall NNP_Friend VBD_learned CC_and JJ_right NNP_Gentleman VBD_concluded RB_also ,"[my, hon., that, declared, recall, Friend, learned, and, right, ROOT, Gentleman, concluded, also]",PRP$_my IN_that VBD_declared NN_recall NNP_Friend VBD_learned CC_and JJ_right NNP_Gentleman VBD_concluded RB_also ,"[my, hon., that, declared, recall, Friend, learned, and, right, ROOT, Gentleman, concluded, also]",PRP$_my IN_that VBD_declared NN_recall NNP_Friend VBD_learned CC_and JJ_right NNP_Gentleman VBD_concluded RB_also ,-3,0,2,1,1,1,1,1,1,2
I recall that.,IPRP recallVBP thatIN ,"root(ROOT-0, recall-2) nsubj(recall-2, I-1) dobj(recall-2, that-3) punct(recall-2, .-4)",0,1,0,"root(ROOT, recall) nsbj(recall, I) dobj(recall, that) pnct(recall, .)","root(,VBP) nsbj(VBP,PRP) dobj(VBP,IN) pnct(VBP,VBP)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It has been an oft proclaimed objective not just of both superpowers but of Governments of all parties in this country  but we must proceed in that direction by realistic steps  and they are as defined and agreed by President Reagan and my right hon. Friend the Prime Minister at Camp David.,ItPRP hasVBZ beenVBN anDT oftJJ proclaimedVBD objectiveJJ notRB justRB ofIN bothDT superpowersNNS butCC ofIN GovernmentsNNS ofIN allDT partiesNNS inIN thisDT countryNN butCC wePRP mustMD proceedVB inIN thatDT directionNN byIN realisticJJ stepsNNS andCC theyPRP areVBP asIN definedJJ andCC agreedVBN byIN PresidentNNP ReaganNNP andCC myPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP atIN CampNNP DavidNNP ,"root(ROOT-0, oft-5) nsubj(oft-5, It-1) aux(oft-5, has-2) cop(oft-5, been-3) det(oft-5, an-4) dep(oft-5, proclaimed-6) amod(superpowers-12, objective-7) neg(superpowers-12, not-8) advmod(superpowers-12, just-9) case(superpowers-12, of-10) cc:preconj(superpowers-12, both-11) dobj(proclaimed-6, superpowers-12) cc(superpowers-12, but-13) case(Governments-15, of-14) dobj(proclaimed-6, Governments-15) conj:but(superpowers-12, Governments-15) case(parties-18, of-16) det(parties-18, all-17) nmod:of(Governments-15, parties-18) case(country-21, in-19) det(country-21, this-20) nmod:in(parties-18, country-21) punct(oft-5, ,-22) cc(oft-5, but-23) nsubj(proceed-26, we-24) aux(proceed-26, must-25) conj:but(oft-5, proceed-26) case(direction-29, in-27) det(direction-29, that-28) nmod:in(proceed-26, direction-29) case(steps-32, by-30) amod(steps-32, realistic-31) nmod:by(proceed-26, steps-32) punct(oft-5, ,-33) cc(oft-5, and-34) nsubjpass(defined-38, they-35) nsubjpass(agreed-40, they-35) auxpass(defined-38, are-36) advmod(defined-38, as-37) conj:but(oft-5, defined-38) cc(defined-38, and-39) conj:but(oft-5, agreed-40) conj:and(defined-38, agreed-40) case(Reagan-43, by-41) compound(Reagan-43, President-42) nmod:agent(defined-38, Reagan-43) cc(Reagan-43, and-44) nmod:poss(Friend-48, my-45) amod(Friend-48, right-46) compound(Friend-48, hon.-47) nmod:agent(defined-38, Friend-48) conj:and(Reagan-43, Friend-48) det(Minister-51, the-49) compound(Minister-51, Prime-50) dep(Friend-48, Minister-51) case(David-54, at-52) compound(David-54, Camp-53) nmod:at(Minister-51, David-54) punct(oft-5, .-55)",0,0,0,"root(ROOT, oft) nsbj(oft, It) ax(oft, has) cop(oft, been) det(oft, an) dep(oft, proclaimed) amod(sperpowers, objective) neg(sperpowers, not) advmod(sperpowers, jst) case(sperpowers, of) cc:preconj(sperpowers, both) dobj(proclaimed, sperpowers) cc(sperpowers, bt) case(Governments, of) dobj(proclaimed, Governments) conj:bt(sperpowers, Governments) case(parties, of) det(parties, all) nmod:of(Governments, parties) case(contry, in) det(contry, this) nmod:in(parties, contry) pnct(oft, ,) cc(oft, bt) nsbj(proceed, we) ax(proceed, mst) conj:bt(oft, proceed) case(direction, in) det(direction, that) nmod:in(proceed, direction) case(steps, by) amod(steps, realistic) nmod:by(proceed, steps) pnct(oft, ,) cc(oft, and) nsbjpass(defined, they) nsbjpass(agreed, they) axpass(defined, are) advmod(defined, as) conj:bt(oft, defined) cc(defined, and) conj:bt(oft, agreed) conj:and(defined, agreed) case(Reagan, by) compond(Reagan, President) nmod:agent(defined, Reagan) cc(Reagan, and) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:agent(defined, Friend) conj:and(Reagan, Friend) det(Minister, the) compond(Minister, Prime) dep(Friend, Minister) case(David, at) compond(David, Camp) nmod:at(Minister, David) pnct(oft, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,VBZ) cop(JJ,VBN) det(JJ,DT) dep(JJ,VBD) amod(NNS,JJ) neg(NNS,RB) advmod(NNS,RB) case(NNS,IN) cc:preconj(NNS,DT) dobj(VBD,NNS) cc(NNS,CC) case(NNS,IN) dobj(VBD,NNS) conj:bt(NNS,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) pnct(JJ,JJ) cc(JJ,CC) nsbj(VB,PRP) ax(VB,MD) conj:bt(JJ,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) case(NNS,IN) amod(NNS,JJ) nmod:by(VB,NNS) pnct(JJ,JJ) cc(JJ,CC) nsbjpass(JJ,PRP) nsbjpass(VBN,PRP) axpass(JJ,VBP) advmod(JJ,IN) conj:bt(JJ,JJ) cc(JJ,CC) conj:bt(JJ,VBN) conj:and(JJ,VBN) case(NNP,IN) compond(NNP,NNP) nmod:agent(JJ,NNP) cc(NNP,CC) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:agent(JJ,NNP) conj:and(NNP,NNP) det(NNP,DT) compond(NNP,NNP) dep(NNP,NNP) case(NNP,IN) compond(NNP,NNP) nmod:at(NNP,NNP) pnct(JJ,JJ)","[Friend, and, my, right, defined, Minister, they, David, and, Reagan, as]","[Friend, and, my, defined, Minister, they, David, and, Reagan, as]",8,"[Friend, and, my, defined, Minister, they, David, and, Reagan, as]","[Friend, and, my, defined, Minister, they, David, and, Reagan, as]",NNP_Friend CC_and PRP$_my JJ_defined NNP_Minister PRP_they NNP_David CC_and NNP_Reagan RB_as ,"[Friend, and, my, defined, Minister, they, David, and, Reagan, as]","[Friend, and, my, defined, Minister, they, David, and, Reagan, as]",NNP_Friend CC_and PRP$_my JJ_defined NNP_Minister PRP_they NNP_David CC_and NNP_Reagan RB_as ,"[Friend, and, my, defined, Minister, they, David, and, Reagan, as]",NNP_Friend CC_and PRP$_my JJ_defined NNP_Minister PRP_they NNP_David CC_and NNP_Reagan RB_as ,"[Friend, and, my, defined, Minister, they, David, and, Reagan, as]",NNP_Friend CC_and PRP$_my JJ_defined NNP_Minister PRP_they NNP_David CC_and NNP_Reagan RB_as ,-3,0,2,0,0,0,0,0,0,0
Does the right hon. and learned Gentleman agree that the Prime Minister is against multilateral as well as unilateral disarmament?,DoesVBZ theDT rightJJ honNN andCC learnedVBD GentlemanNNP agreeVBP thatIN theDT PrimeNNP MinisterNNP isVBZ againstIN multilateralJJ asRB wellRB asIN unilateralJJ disarmamentNN ,"root(ROOT-0, Does-1) det(hon.-4, the-2) amod(hon.-4, right-3) dobj(Does-1, hon.-4) cc(hon.-4, and-5) dobj(Does-1, learned-6) conj:and(hon.-4, learned-6) nsubj(agree-8, Gentleman-7) ccomp(learned-6, agree-8) mark(multilateral-15, that-9) det(Minister-12, the-10) compound(Minister-12, Prime-11) nsubj(multilateral-15, Minister-12) cop(multilateral-15, is-13) case(multilateral-15, against-14) ccomp(agree-8, multilateral-15) cc(multilateral-15, as-16) mwe(as-16, well-17) mwe(as-16, as-18) amod(disarmament-20, unilateral-19) ccomp(agree-8, disarmament-20) conj:and(multilateral-15, disarmament-20) punct(Does-1, ?-21)",0,0,1,"root(ROOT, Does) det(hon., the) amod(hon., right) dobj(Does, hon.) cc(hon., and) dobj(Does, learned) conj:and(hon., learned) nsbj(agree, Gentleman) ccomp(learned, agree) mark(mltilateral, that) det(Minister, the) compond(Minister, Prime) nsbj(mltilateral, Minister) cop(mltilateral, is) case(mltilateral, against) ccomp(agree, mltilateral) cc(mltilateral, as) mwe(as, well) mwe(as, as) amod(disarmament, nilateral) ccomp(agree, disarmament) conj:and(mltilateral, disarmament) pnct(Does, ?)","root(,VBZ) det(VBZ,DT) amod(DT,JJ) dobj(VBZ,VBZ) cc(VBZ,CC) dobj(VBZ,VBD) conj:and(VBD,VBD) nsbj(VBP,NNP) ccomp(VBD,VBP) mark(JJ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) case(JJ,IN) ccomp(VBP,JJ) cc(JJ,IN) mwe(IN,RB) mwe(IN,IN) amod(NN,JJ) ccomp(VBP,NN) conj:and(JJ,NN) pnct(VBZ,VBZ)","[disarmament, as, Minister, agree, learned, Gentleman, multilateral]","[disarmament, as, Minister, agree, learned, Gentleman, multilateral]",9,"[disarmament, as, Minister, agree, learned, Gentleman, multilateral]","[agree, learned, Gentleman, multilateral, disarmament]",NN_disarmament RB_as NNP_Minister VB_agree VBD_learned NNP_Gentleman JJ_multilateral ,"[disarmament, as, Minister, agree, learned, Gentleman, multilateral]","[disarmament, as, Minister, agree, learned, Gentleman, multilateral]",NN_disarmament RB_as NNP_Minister VB_agree VBD_learned NNP_Gentleman JJ_multilateral ,"[disarmament, as, Minister, agree, learned, Gentleman, multilateral]",NN_disarmament RB_as NNP_Minister VB_agree VBD_learned NNP_Gentleman JJ_multilateral ,[ ],[ ],-3,0,1,0,0,0,0,0,0,0
In the absence of advance in that direction  it is also Government policy to recognise the necessity for the nuclear deterrent to remain in place as part of the West's defensive policy.,InIN theDT absenceNN ofIN advanceNN inIN thatDT directionNN itPRP isVBZ alsoRB GovernmentJJ policyNN toTO recogniseVB theDT necessityNN forIN theDT nuclearJJ deterrentNN toTO remainVB inIN placeNN asIN partNN ofIN theDT WestNNP 'sPOS defensiveJJ policyNN ,"root(ROOT-0, policy-14) case(absence-3, In-1) det(absence-3, the-2) nmod:in(policy-14, absence-3) case(advance-5, of-4) nmod:of(absence-3, advance-5) case(direction-8, in-6) det(direction-8, that-7) nmod:in(advance-5, direction-8) punct(policy-14, ,-9) nsubj(policy-14, it-10) cop(policy-14, is-11) advmod(policy-14, also-12) compound(policy-14, Government-13) mark(recognise-16, to-15) xcomp(policy-14, recognise-16) det(necessity-18, the-17) dobj(recognise-16, necessity-18) case(deterrent-22, for-19) det(deterrent-22, the-20) amod(deterrent-22, nuclear-21) nmod:for(necessity-18, deterrent-22) mark(remain-24, to-23) acl(deterrent-22, remain-24) case(place-26, in-25) nmod:in(remain-24, place-26) case(part-28, as-27) nmod:as(remain-24, part-28) case(policy-34, of-29) det(West-31, the-30) nmod:poss(policy-34, West-31) case(West-31, 's-32) amod(policy-34, defensive-33) nmod:of(part-28, policy-34) punct(policy-14, .-35)",0,0,0,"root(ROOT, policy) case(absence, In) det(absence, the) nmod:in(policy, absence) case(advance, of) nmod:of(absence, advance) case(direction, in) det(direction, that) nmod:in(advance, direction) pnct(policy, ,) nsbj(policy, it) cop(policy, is) advmod(policy, also) compond(policy, Government) mark(recognise, to) xcomp(policy, recognise) det(necessity, the) dobj(recognise, necessity) case(deterrent, for) det(deterrent, the) amod(deterrent, nclear) nmod:for(necessity, deterrent) mark(remain, to) acl(deterrent, remain) case(place, in) nmod:in(remain, place) case(part, as) nmod:as(remain, part) case(policy, of) det(West, the) nmod:poss(policy, West) ""case(West, s)"", amod(policy, defensive) nmod:of(part, policy) pnct(policy, .)","root(,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(NN,NN) nsbj(NN,PRP) cop(NN,VBZ) advmod(NN,RB) compond(NN,JJ) mark(VB,TO) xcomp(NN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(NN,NN) mark(VB,TO) acl(NN,VB) case(NN,IN) nmod:in(VB,NN) case(NN,IN) nmod:as(VB,NN) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN)","[also, policy, it, ROOT, recognise, absence]",[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Furthermore  does he agree that the idea of a European ditch has as much chance of success as the Maginot line or Offa's dyke?,FurthermoreRB doesVBZ hePRP agreeVB thatIN theDT ideaNN ofIN aDT EuropeanJJ ditchNN hasVBZ asRB muchJJ chanceNN ofIN successNN asIN theDT MaginotNNP lineNN orCC OffaNNP 'sPOS dykeNN ,"root(ROOT-0, agree-5) advmod(agree-5, Furthermore-1) punct(agree-5, ,-2) aux(agree-5, does-3) nsubj(agree-5, he-4) mark(has-13, that-6) det(idea-8, the-7) nsubj(has-13, idea-8) case(ditch-12, of-9) det(ditch-12, a-10) amod(ditch-12, European-11) nmod:of(idea-8, ditch-12) ccomp(agree-5, has-13) advmod(chance-16, as-14) amod(chance-16, much-15) dobj(has-13, chance-16) case(success-18, of-17) nmod:of(chance-16, success-18) case(line-22, as-19) det(line-22, the-20) compound(line-22, Maginot-21) nmod:as(success-18, line-22) cc(line-22, or-23) nmod:poss(dyke-26, Offa-24) case(Offa-24, 's-25) nmod:as(success-18, dyke-26) conj:or(line-22, dyke-26) punct(agree-5, ?-27)",0,0,0,"root(ROOT, agree) advmod(agree, Frthermore) pnct(agree, ,) ax(agree, does) nsbj(agree, he) mark(has, that) det(idea, the) nsbj(has, idea) case(ditch, of) det(ditch, a) amod(ditch, Eropean) nmod:of(idea, ditch) ccomp(agree, has) advmod(chance, as) amod(chance, mch) dobj(has, chance) case(sccess, of) nmod:of(chance, sccess) case(line, as) det(line, the) compond(line, Maginot) nmod:as(sccess, line) cc(line, or) nmod:poss(dyke, Offa) ""case(Offa, s)"", nmod:as(sccess, dyke) conj:or(line, dyke) pnct(agree, ?)","root(,VB) advmod(VB,RB) pnct(VB,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBZ,IN) det(NN,DT) nsbj(VBZ,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) ccomp(VB,VBZ) advmod(NN,IN) amod(NN,JJ) dobj(VBZ,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:as(NN,NN) cc(NN,CC) nmod:poss(NN,NNP) case(NNP,POS) nmod:as(NN,NN) conj:or(NN,NN) pnct(VB,VB)","[ROOT, Furthermore, agree, he, has]","[ROOT, Furthermore, agree, he, has]",11,[ ],[ ],IN_Furthermore VB_agree PRP_he VBZ_has ,"[ROOT, Furthermore, agree, he, has]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Scotland what was the index of industrial production and construction in Scotland in the fourth quarter of 1986.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN ScotlandNNP whatWDT wasVBD theDT indexNN ofIN industrialJJ productionNN andCC constructionNN inIN ScotlandNNP inIN theDT fourthJJ quarterNN ofIN 1986CD ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Scotland-7, for-6) nmod:for(Secretary-3, Scotland-7) dep(asked-1, what-8) cop(what-8, was-9) det(index-11, the-10) nsubj(what-8, index-11) case(production-14, of-12) amod(production-14, industrial-13) nmod:of(index-11, production-14) cc(production-14, and-15) nmod:of(index-11, construction-16) conj:and(production-14, construction-16) case(Scotland-18, in-17) nmod:in(production-14, Scotland-18) case(quarter-22, in-19) det(quarter-22, the-20) amod(quarter-22, fourth-21) nmod:in(index-11, quarter-22) case(1986-24, of-23) nmod:of(quarter-22, 1986-24) punct(asked-1, .-25)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Scotland, for) nmod:for(Secretary, Scotland) dep(asked, what) cop(what, was) det(index, the) nsbj(what, index) case(prodction, of) amod(prodction, indstrial) nmod:of(index, prodction) cc(prodction, and) nmod:of(index, constrction) conj:and(prodction, constrction) case(Scotland, in) nmod:in(prodction, Scotland) case(qarter, in) det(qarter, the) amod(qarter, forth) nmod:in(index, qarter) case(1986, of) nmod:of(qarter, 1986) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) dep(VBN,WDT) cop(WDT,VBD) det(NN,DT) nsbj(WDT,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) cc(NN,CC) nmod:of(NN,NN) conj:and(NN,NN) case(NNP,IN) nmod:in(NN,NNP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NN,NN) case(CD,IN) nmod:of(NN,CD) pnct(VBN,VBN)","[what, Secretary, ROOT, asked, State, Scotland]","[what, Secretary, ROOT, asked, State, Scotland]",1,"[what, Secretary, ROOT, asked, State, Scotland]","[what, Secretary, ROOT, asked, State, Scotland]",WP_what NNP_Secretary VBN_asked NNP_State NNP_Scotland ,"[what, Secretary, ROOT, asked, State, Scotland]","[what, Secretary, ROOT, asked, State, Scotland]",WP_what NNP_Secretary VBN_asked NNP_State NNP_Scotland ,"[what, Secretary, ROOT, asked, State, Scotland]",WP_what NNP_Secretary VBN_asked NNP_State NNP_Scotland ,"[what, Secretary, ROOT, asked, State, Scotland]",WP_what NNP_Secretary VBN_asked NNP_State NNP_Scotland ,-3,0,2,0,0,0,0,0,0,0
Estimates for the fourth quarter of 1986 are not yet available.,EstimatesNNS forIN theDT fourthJJ quarterNN ofIN 1986CD areVBP notRB yetRB availableJJ ,"root(ROOT-0, available-11) nsubj(available-11, Estimates-1) case(quarter-5, for-2) det(quarter-5, the-3) amod(quarter-5, fourth-4) nmod:for(Estimates-1, quarter-5) case(1986-7, of-6) nmod:of(quarter-5, 1986-7) cop(available-11, are-8) neg(available-11, not-9) advmod(available-11, yet-10) punct(available-11, .-12)",0,1,0,"root(ROOT, available) nsbj(available, Estimates) case(qarter, for) det(qarter, the) amod(qarter, forth) nmod:for(Estimates, qarter) case(1986, of) nmod:of(qarter, 1986) cop(available, are) neg(available, not) advmod(available, yet) pnct(available, .)","root(,JJ) nsbj(JJ,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(NNS,NN) case(CD,IN) nmod:of(NN,CD) cop(JJ,VBP) neg(JJ,RB) advmod(JJ,RB) pnct(JJ,JJ)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In the third quarter the index of industrial production and construction  excluding oil and gas  rose by 2.4 per cent.,InIN theDT thirdJJ quarterNN theDT indexNN ofIN industrialJJ productionNN andCC constructionNN excludingVBG oilNN andCC gasNN roseVBD byIN 24CD perIN centNN ,"root(ROOT-0, rose-18) case(quarter-4, In-1) det(quarter-4, the-2) amod(quarter-4, third-3) nmod:in(rose-18, quarter-4) det(index-6, the-5) nsubj(rose-18, index-6) case(production-9, of-7) amod(production-9, industrial-8) nmod:of(index-6, production-9) cc(production-9, and-10) nmod:of(index-6, construction-11) conj:and(production-9, construction-11) punct(index-6, ,-12) acl(index-6, excluding-13) dobj(excluding-13, oil-14) cc(oil-14, and-15) dobj(excluding-13, gas-16) conj:and(oil-14, gas-16) punct(index-6, ,-17) case(2.4-20, by-19) nmod:by(rose-18, 2.4-20) case(cent-22, per-21) nmod:per(2.4-20, cent-22) punct(rose-18, .-23)",0,0,0,"root(ROOT, rose) case(qarter, In) det(qarter, the) amod(qarter, third) nmod:in(rose, qarter) det(index, the) nsbj(rose, index) case(prodction, of) amod(prodction, indstrial) nmod:of(index, prodction) cc(prodction, and) nmod:of(index, constrction) conj:and(prodction, constrction) pnct(index, ,) acl(index, exclding) dobj(exclding, oil) cc(oil, and) dobj(exclding, gas) conj:and(oil, gas) pnct(index, ,) case(2.4, by) nmod:by(rose, 2.4) case(cent, per) nmod:per(2.4, cent) pnct(rose, .)","root(,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VBD,NN) det(NN,DT) nsbj(VBD,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) cc(NN,CC) nmod:of(NN,NN) conj:and(NN,NN) pnct(NN,NN) acl(NN,VBG) dobj(VBG,NN) cc(NN,CC) dobj(VBG,NN) conj:and(NN,NN) pnct(NN,NN) case(NN,IN) nmod:by(VBD,VBD) case(NN,IN) nmod:per(IN,NN) pnct(VBD,VBD)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
in Scotland  compared with a 1 per cent.,inIN ScotlandNNP comparedVBN withIN aDT 1CD perIN centNN ,"root(ROOT-0, Scotland-2) case(Scotland-2, in-1) punct(Scotland-2, ,-3) root(,-3, compared-4) case(a-6, with-5) nmod:with(compared-4, a-6) amod(a-6, 1-7) case(cent-9, per-8) nmod:per(1-7, cent-9) punct(compared-4, .-10)",0,0,0,"root(ROOT, Scotland) case(Scotland, in) pnct(Scotland, ,) root(,, compared) case(a, with) nmod:with(compared, a) amod(a, 1) case(cent, per) nmod:per(1, cent) pnct(compared, .)","root(,NNP) case(NNP,IN) pnct(NNP,NNP) root(NNPNNPVBN) cDTse(DT,IN) nmod:with(VBN,DT) DTmod(DT,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
rise in the United Kingdom overall.,riseNN inIN theDT UnitedNNP KingdomNNP overallJJ ,"root(ROOT-0, rise-1) case(Kingdom-5, in-2) det(Kingdom-5, the-3) compound(Kingdom-5, United-4) nmod:in(rise-1, Kingdom-5) advmod(rise-1, overall-6) punct(rise-1, .-7)",0,0,1,"root(ROOT, rise) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(rise, Kingdom) advmod(rise, overall) pnct(rise, .)","root(,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) advmod(NN,JJ) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
How can that assist in increasing output in Scotland?,HowWRB canMD thatDT assistVB inIN increasingVBG outputNN inIN ScotlandNNP ,"root(ROOT-0, How-1) dep(How-1, can-2) nsubj(assist-4, that-3) ccomp(can-2, assist-4) case(output-7, in-5) amod(output-7, increasing-6) nmod:in(assist-4, output-7) case(Scotland-9, in-8) nmod:in(output-7, Scotland-9) punct(How-1, ?-10)",0,0,1,"root(ROOT, How) dep(How, can) nsbj(assist, that) ccomp(can, assist) case(otpt, in) amod(otpt, increasing) nmod:in(assist, otpt) case(Scotland, in) nmod:in(otpt, Scotland) pnct(How, ?)","root(,WRB) dep(WRB,MD) nsbj(VB,DT) ccomp(MD,VB) case(NN,IN) amod(NN,VBG) nmod:in(VB,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(WRB,WRB)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am not sure to which part of the Scottish Office budget the hon. Gentleman refers.,IPRP amVBP notRB sureJJ toTO whichWDT partNN ofIN theDT ScottishJJ OfficeNNP budgetNN theDT honNN GentlemanNNP refersNNS ,"root(ROOT-0, sure-4) nsubj(sure-4, I-1) cop(sure-4, am-2) neg(sure-4, not-3) case(which-6, to-5) nmod:to(sure-4, which-6) dep(which-6, part-7) case(budget-12, of-8) det(budget-12, the-9) amod(budget-12, Scottish-10) compound(budget-12, Office-11) nmod:of(part-7, budget-12) det(Gentleman-15, the-13) compound(Gentleman-15, hon.-14) nsubj(refers-16, Gentleman-15) acl:relcl(budget-12, refers-16) punct(sure-4, .-17)",0,1,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) neg(sre, not) case(which, to) nmod:to(sre, which) dep(which, part) case(bdget, of) det(bdget, the) amod(bdget, Scottish) compond(bdget, Office) nmod:of(part, bdget) det(Gentleman, the) compond(Gentleman, hon.) nsbj(refers, Gentleman) acl:relcl(bdget, refers) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) neg(JJ,RB) case(WDT,TO) nmod:to(JJ,WDT) dep(WDT,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NNP) nmod:of(NN,NN) det(NNP,DT) compond(NNP,NNP) nsbj(NNS,NNP) acl:relcl(NN,NNS) pnct(JJ,JJ)","[Gentleman, refers, budget]","[Gentleman, refers, budget]",4,"[Gentleman, refers, budget]","[Gentleman, refers, budget]",NNP_Gentleman VBZ_refers NN_budget ,"[Gentleman, refers, budget]","[Gentleman, refers, budget]",NNP_Gentleman VBZ_refers NN_budget ,[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Certainly it is the case that output in the last few years has been below the level of 1979.,CertainlyRB itPRP isVBZ theDT caseNN thatWDT outputNN inIN theDT lastJJ fewJJ yearsNNS hasVBZ beenVBN belowIN theDT levelNN ofIN 1979CD ,"root(ROOT-0, case-5) advmod(case-5, Certainly-1) nsubj(case-5, it-2) cop(case-5, is-3) det(case-5, the-4) det(output-7, that-6) nsubj(level-17, output-7) case(years-12, in-8) det(years-12, the-9) amod(years-12, last-10) amod(years-12, few-11) nmod:in(output-7, years-12) aux(level-17, has-13) cop(level-17, been-14) case(level-17, below-15) det(level-17, the-16) ccomp(case-5, level-17) case(1979-19, of-18) nmod:of(level-17, 1979-19) punct(case-5, .-20)",0,0,0,"root(ROOT, case) advmod(case, Certainly) nsbj(case, it) cop(case, is) det(case, the) det(otpt, that) nsbj(level, otpt) case(years, in) det(years, the) amod(years, last) amod(years, few) nmod:in(otpt, years) ax(level, has) cop(level, been) case(level, below) det(level, the) ccomp(case, level) case(1979, of) nmod:of(level, 1979) pnct(case, .)","root(,NN) advmod(NN,RB) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) det(NN,WDT) nsbj(NN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) nmod:in(NN,NNS) ax(NN,VBZ) cop(NN,VBN) case(NN,IN) det(NN,DT) ccomp(NN,NN) case(CD,IN) nmod:of(NN,CD) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  it is now very close to that and is being achieved with substantially fewer workers.,HoweverRB itPRP isVBZ nowRB veryRB closeRB toTO thatDT andCC isVBZ beingVBG achievedVBN withIN substantiallyRB fewerJJR workersNNS ,"root(ROOT-0, close-7) advmod(close-7, However-1) punct(close-7, ,-2) nsubj(close-7, it-3) nsubjpass(achieved-13, it-3) cop(close-7, is-4) advmod(close-7, now-5) advmod(close-7, very-6) case(that-9, to-8) nmod:to(close-7, that-9) cc(close-7, and-10) aux(achieved-13, is-11) auxpass(achieved-13, being-12) conj:and(close-7, achieved-13) case(workers-17, with-14) advmod(fewer-16, substantially-15) amod(workers-17, fewer-16) nmod:with(achieved-13, workers-17) punct(close-7, .-18)",0,0,0,"root(ROOT, close) advmod(close, However) pnct(close, ,) nsbj(close, it) nsbjpass(achieved, it) cop(close, is) advmod(close, now) advmod(close, very) case(that, to) nmod:to(close, that) cc(close, and) ax(achieved, is) axpass(achieved, being) conj:and(close, achieved) case(workers, with) advmod(fewer, sbstantially) amod(workers, fewer) nmod:with(achieved, workers) pnct(close, .)","root(,RB) advmod(RB,RB) pnct(RB,RB) nsbj(RB,PRP) nsbjpass(VBN,PRP) cop(RB,VBZ) advmod(RB,RB) advmod(RB,RB) case(DT,TO) nmod:to(RB,DT) cc(RB,CC) ax(VBN,VBZ) axpass(VBN,VBG) conj:and(RB,VBN) case(NNS,IN) advmod(JJR,RB) amod(NNS,JJR) nmod:with(VBN,NNS) pnct(RB,RB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is an achievement?,ThatDT isVBZ anDT achievementNN ,"root(ROOT-0, achievement-4) nsubj(achievement-4, That-1) cop(achievement-4, is-2) det(achievement-4, an-3) punct(achievement-4, ?-5)",0,1,1,"root(ROOT, achievement) nsbj(achievement, That) cop(achievement, is) det(achievement, an) pnct(achievement, ?)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) pnct(NN,NN)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is an achievement in increasing productivity  which is the most secure guarantee of future employment.,ItPRP isVBZ anDT achievementNN inIN increasingVBG productivityNN whichWDT isVBZ theDT mostRBS secureJJ guaranteeNN ofIN futureJJ employmentNN ,"root(ROOT-0, achievement-4) nsubj(achievement-4, It-1) cop(achievement-4, is-2) det(achievement-4, an-3) case(productivity-7, in-5) amod(productivity-7, increasing-6) nmod:in(achievement-4, productivity-7) punct(productivity-7, ,-8) nsubj(guarantee-14, which-9) cop(guarantee-14, is-10) det(guarantee-14, the-11) advmod(secure-13, most-12) amod(guarantee-14, secure-13) acl:relcl(productivity-7, guarantee-14) case(employment-17, of-15) amod(employment-17, future-16) nmod:of(guarantee-14, employment-17) punct(achievement-4, .-18)",0,0,0,"root(ROOT, achievement) nsbj(achievement, It) cop(achievement, is) det(achievement, an) case(prodctivity, in) amod(prodctivity, increasing) nmod:in(achievement, prodctivity) pnct(prodctivity, ,) nsbj(garantee, which) cop(garantee, is) det(garantee, the) advmod(secre, most) amod(garantee, secre) acl:relcl(prodctivity, garantee) case(employment, of) amod(employment, ftre) nmod:of(garantee, employment) pnct(achievement, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) case(NN,IN) amod(NN,VBG) nmod:in(NN,NN) pnct(NN,NN) nsbj(NN,WDT) cop(NN,VBZ) det(NN,DT) advmod(JJ,RBS) amod(NN,JJ) acl:relcl(NN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will my hon. Friend confirm that the improvements in productivity and efficiency in the non oil sector of Scottish industry have resulted in substantial increases in employment?,WillMD myPRP$ honNN FriendNNP confirmNN thatIN theDT improvementsNNS inIN productivityNN andCC efficiencyNN inIN theDT nonJJ oilNN sectorNN ofIN ScottishJJ industryNN haveVBP resultedVBN inIN substantialJJ increasesNNS inIN employmentNN ,"root(ROOT-0, confirm-5) aux(confirm-5, Will-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(confirm-5, Friend-4) mark(resulted-22, that-6) det(improvements-8, the-7) nsubj(resulted-22, improvements-8) case(productivity-10, in-9) nmod:in(improvements-8, productivity-10) cc(productivity-10, and-11) nmod:in(improvements-8, efficiency-12) conj:and(productivity-10, efficiency-12) case(sector-17, in-13) det(sector-17, the-14) amod(sector-17, non-15) compound(sector-17, oil-16) nmod:in(improvements-8, sector-17) case(industry-20, of-18) amod(industry-20, Scottish-19) nmod:of(sector-17, industry-20) aux(resulted-22, have-21) ccomp(confirm-5, resulted-22) case(increases-25, in-23) amod(increases-25, substantial-24) nmod:in(resulted-22, increases-25) case(employment-27, in-26) nmod:in(increases-25, employment-27) punct(confirm-5, ?-28)",0,0,1,"root(ROOT, confirm) ax(confirm, Will) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(confirm, Friend) mark(reslted, that) det(improvements, the) nsbj(reslted, improvements) case(prodctivity, in) nmod:in(improvements, prodctivity) cc(prodctivity, and) nmod:in(improvements, efficiency) conj:and(prodctivity, efficiency) case(sector, in) det(sector, the) amod(sector, non) compond(sector, oil) nmod:in(improvements, sector) case(indstry, of) amod(indstry, Scottish) nmod:of(sector, indstry) ax(reslted, have) ccomp(confirm, reslted) case(increases, in) amod(increases, sbstantial) nmod:in(reslted, increases) case(employment, in) nmod:in(increases, employment) pnct(confirm, ?)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) mark(VBN,IN) det(NNS,DT) nsbj(VBN,NNS) case(NN,IN) nmod:in(NNS,NN) cc(NN,CC) nmod:in(NNS,NN) conj:and(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:in(NNS,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) ax(VBN,VBP) ccomp(NN,VBN) case(NNS,IN) amod(NNS,JJ) nmod:in(VBN,NNS) case(NN,IN) nmod:in(NNS,NN) pnct(NN,NN)","[ROOT, my, confirm, resulted, Friend]","[ROOT, my, confirm, resulted, Friend]",7,[ ],[ ],PRP$_my NN_confirm VBD_resulted NNP_Friend ,"[ROOT, my, confirm, resulted, Friend]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Manufacturing productivity in Scotland generally has been increasing by about 6 per cent.,ManufacturingVBG productivityNN inIN ScotlandNNP generallyRB hasVBZ beenVBN increasingVBG byIN aboutIN 6CD perIN centNN ,"root(ROOT-0, increasing-8) compound(productivity-2, Manufacturing-1) nsubj(increasing-8, productivity-2) case(Scotland-4, in-3) nmod:in(productivity-2, Scotland-4) advmod(increasing-8, generally-5) aux(increasing-8, has-6) aux(increasing-8, been-7) case(6-11, by-9) advmod(6-11, about-10) nmod:by(increasing-8, 6-11) case(cent-13, per-12) nmod:per(6-11, cent-13) punct(increasing-8, .-14)",0,0,0,"root(ROOT, increasing) compond(prodctivity, Manfactring) nsbj(increasing, prodctivity) case(Scotland, in) nmod:in(prodctivity, Scotland) advmod(increasing, generally) ax(increasing, has) ax(increasing, been) case(6, by) advmod(6, abot) nmod:by(increasing, 6) case(cent, per) nmod:per(6, cent) pnct(increasing, .)","root(,VBG) compond(NN,VBG) nsbj(VBG,NN) case(NNP,IN) nmod:in(NN,NNP) advmod(VBG,RB) ax(VBG,VBZ) ax(VBG,VBN) case(CD,IN) advmod(CD,IN) nmod:by(VBG,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBG,VBG)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
over the years 1979 to 1985.,overIN theDT yearsNNS 1979CD toTO 1985CD ,"root(ROOT-0, years-3) case(years-3, over-1) det(years-3, the-2) amod(years-3, 1979-4) case(1985-6, to-5) nmod:to(1979-4, 1985-6) punct(years-3, .-7)",0,0,0,"root(ROOT, years) case(years, over) det(years, the) amod(years, 1979) case(1985, to) nmod:to(1979, 1985) pnct(years, .)","root(,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,CD) case(CD,TO) nmod:to(CD,CD) pnct(NNS,NNS)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Over the same time productivity in England was increasing by only about 4 per cent.,OverIN theDT sameJJ timeNN productivityNN inIN EnglandNNP wasVBD increasingVBG byIN onlyRB aboutIN 4CD perIN centNN ,"root(ROOT-0, increasing-9) case(productivity-5, Over-1) det(productivity-5, the-2) amod(productivity-5, same-3) compound(productivity-5, time-4) nmod:over(increasing-9, productivity-5) case(England-7, in-6) nmod:in(productivity-5, England-7) aux(increasing-9, was-8) case(4-13, by-10) advmod(4-13, only-11) advmod(4-13, about-12) nmod:by(increasing-9, 4-13) case(cent-15, per-14) nmod:per(4-13, cent-15) punct(increasing-9, .-16)",0,0,1,"root(ROOT, increasing) case(prodctivity, Over) det(prodctivity, the) amod(prodctivity, same) compond(prodctivity, time) nmod:over(increasing, prodctivity) case(England, in) nmod:in(prodctivity, England) ax(increasing, was) case(4, by) advmod(4, only) advmod(4, abot) nmod:by(increasing, 4) case(cent, per) nmod:per(4, cent) pnct(increasing, .)","root(,VBG) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:over(VBG,NN) case(NNP,IN) nmod:in(NN,NNP) ax(VBG,VBD) case(CD,IN) advmod(CD,RB) advmod(CD,IN) nmod:by(VBG,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBG,VBG)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Did the Minister see the report in The Independent this week  which showed that out of all the constituencies in Britain the Ross  Cromarty and Skye constituency had the highest percentage increase in long term unemployment   over 64 per cent?,DidNNP theDT MinisterNNP seeVBP theDT reportNN inIN TheDT IndependentNNP thisDT weekNN whichWDT showedVBD thatIN outIN ofIN allPDT theDT constituenciesNNS inIN BritainNNP theDT RossNNP CromartyNNP andCC SkyeNNP constituencyNN hadVBD theDT highestJJS percentageNN increaseNN inIN longJJ termNN unemploymentNN overIN 64CD perIN centNN ,"root(ROOT-0, see-4) aux(see-4, Did-1) det(Minister-3, the-2) nsubj(see-4, Minister-3) det(report-6, the-5) dobj(see-4, report-6) case(Independent-9, in-7) det(Independent-9, The-8) nmod:in(report-6, Independent-9) det(week-11, this-10) nmod:tmod(see-4, week-11) punct(see-4, ,-12) nsubj(showed-14, which-13) dep(see-4, showed-14) mark(had-30, that-15) case(constituencies-20, out-16) mwe(out-16, of-17) det:predet(constituencies-20, all-18) det(constituencies-20, the-19) nmod:out_of(had-30, constituencies-20) case(Britain-22, in-21) nmod:in(had-30, Britain-22) det(Ross-24, the-23) nsubj(had-30, Ross-24) punct(Ross-24, ,-25) conj:and(Ross-24, Cromarty-26) nsubj(had-30, Cromarty-26) cc(Ross-24, and-27) compound(constituency-29, Skye-28) conj:and(Ross-24, constituency-29) nsubj(had-30, constituency-29) ccomp(showed-14, had-30) det(increase-34, the-31) amod(increase-34, highest-32) compound(increase-34, percentage-33) dobj(had-30, increase-34) case(unemployment-38, in-35) amod(unemployment-38, long-36) compound(unemployment-38, term-37) nmod:in(increase-34, unemployment-38) case(64-40, over-39) nmod:over(increase-34, 64-40) case(cent-42, per-41) nmod:per(64-40, cent-42) punct(see-4, ?-43)",0,0,0,"root(ROOT, see) ax(see, Did) det(Minister, the) nsbj(see, Minister) det(report, the) dobj(see, report) case(Independent, in) det(Independent, The) nmod:in(report, Independent) det(week, this) nmod:tmod(see, week) pnct(see, ,) nsbj(showed, which) dep(see, showed) mark(had, that) case(constitencies, ot) mwe(ot, of) det:predet(constitencies, all) det(constitencies, the) nmod:ot_of(had, constitencies) case(Britain, in) nmod:in(had, Britain) det(Ross, the) nsbj(had, Ross) pnct(Ross, ,) conj:and(Ross, Cromarty) nsbj(had, Cromarty) cc(Ross, and) compond(constitency, Skye) conj:and(Ross, constitency) nsbj(had, constitency) ccomp(showed, had) det(increase, the) amod(increase, highest) compond(increase, percentage) dobj(had, increase) case(nemployment, in) amod(nemployment, long) compond(nemployment, term) nmod:in(increase, nemployment) case(64, over) nmod:over(increase, 64) case(cent, per) nmod:per(64, cent) pnct(see, ?)","root(,VBP) ax(VBP,NNP) det(NNP,DT) nsbj(VBP,NNP) det(NN,DT) dobj(VBP,NN) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) det(NN,DT) nmod:tmod(VBP,NN) pnct(VBP,VBP) nsbj(VBD,WDT) dep(VBP,VBD) mark(VBD,IN) case(NNS,IN) mwe(IN,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:ot_of(VBD,NNS) case(NNP,IN) nmod:in(VBD,NNP) det(NNP,DT) nsbj(VBD,NNP) pnct(NNP,NNP) conj:and(NNP,NNP) nsbj(VBD,NNP) cc(NNP,CC) compond(NN,NNP) conj:and(NNP,NN) nsbj(VBD,NN) ccomp(VBD,VBD) det(NN,DT) amod(NN,JJS) compond(NN,NN) dobj(VBD,NN) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:in(NN,NN) case(CD,IN) nmod:over(NN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBP,VBP)","[week, report, Minister, ROOT, see, showed]","[week, report, Minister, ROOT, see, showed]",9,[ ],[ ],NN_week VB_report NNP_Minister VB_see VBD_showed ,"[week, report, Minister, ROOT, see, showed]","[week, report, Minister, ROOT, see, showed]",NN_week VB_report NNP_Minister VB_see VBD_showed ,"[week, report, Minister, ROOT, see, showed]",NN_week VB_report NNP_Minister VB_see VBD_showed ,"[week, report, Minister, ROOT, see, showed]",NN_week VB_report NNP_Minister VB_see VBD_showed ,-3,0,2,0,0,0,0,0,0,0
In terms of industrial production and construction [Interruption.],InIN termsNNS ofIN industrialJJ productionNN andCC constructionNN [NNP InterruptionNNP ]NN ,"root(ROOT-0, terms-2) case(terms-2, In-1) case(production-5, of-3) amod(production-5, industrial-4) nmod:of(terms-2, production-5) cc(production-5, and-6) nmod:of(terms-2, construction-7) conj:and(production-5, construction-7) punct(Interruption-9, -LSB--8) dep(construction-7, Interruption-9) punct(Interruption-9, .-10) punct(terms-2, -RSB--11)",0,0,0,"root(ROOT, terms) case(terms, In) case(prodction, of) amod(prodction, indstrial) nmod:of(terms, prodction) cc(prodction, and) nmod:of(terms, constrction) conj:and(prodction, constrction) pnct(Interrption, ) dep(constrction, Interrption) pnct(Interrption, .) pnct(terms, )","root(,NNS) case(NNS,IN) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) cc(NN,CC) nmod:of(NNS,NN) conj:and(NN,NN) pnct(NNP,) dep(NN,NNP) pnct(NNP,NNP) pnct(NNS,)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Minister look again at the regional aid map?,WillMD theDT MinisterNNP lookNN againRB atIN theDT regionalJJ aidNN mapNN ,"root(ROOT-0, Will-1) det(look-4, the-2) compound(look-4, Minister-3) dobj(Will-1, look-4) advmod(look-4, again-5) case(map-10, at-6) det(map-10, the-7) amod(map-10, regional-8) compound(map-10, aid-9) nmod:at(look-4, map-10) punct(Will-1, ?-11)",0,0,0,"root(ROOT, Will) det(look, the) compond(look, Minister) dobj(Will, look) advmod(look, again) case(map, at) det(map, the) amod(map, regional) compond(map, aid) nmod:at(look, map) pnct(Will, ?)","root(,MD) det(NN,DT) compond(NN,NNP) dobj(MD,NN) advmod(NN,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:at(NN,NN) pnct(MD,MD)","[look, again, Will, map]","[look, again, Will, map]",9,"[look, again, Will, map]","[look, again, Will, map]",NN_look RB_again MD_Will NN_map ,"[look, again, Will, map]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If he does that he will see that the Government reduced substantially the incentives and the assisted area status that had been available to parts of my constituency to attract industry and create jobs.,IfIN hePRP doesVBZ thatIN hePRP willMD seeVB thatIN theDT GovernmentNNP reducedVBD substantiallyRB theDT incentivesNNS andCC theDT assistedJJ areaNN statusNN thatWDT hadVBD beenVBN availableJJ toTO partsNNS ofIN myPRP$ constituencyNN toTO attractVB industryNN andCC createNN jobsNNS ,"root(ROOT-0, does-3) mark(does-3, If-1) nsubj(does-3, he-2) mark(see-7, that-4) nsubj(see-7, he-5) aux(see-7, will-6) ccomp(does-3, see-7) mark(reduced-11, that-8) det(Government-10, the-9) nsubj(reduced-11, Government-10) ccomp(see-7, reduced-11) advmod(reduced-11, substantially-12) det(incentives-14, the-13) dobj(reduced-11, incentives-14) cc(incentives-14, and-15) det(status-19, the-16) amod(status-19, assisted-17) compound(status-19, area-18) dobj(reduced-11, status-19) conj:and(incentives-14, status-19) nsubj(available-23, that-20) aux(available-23, had-21) cop(available-23, been-22) acl:relcl(status-19, available-23) case(parts-25, to-24) nmod:to(available-23, parts-25) case(constituency-28, of-26) nmod:poss(constituency-28, my-27) nmod:of(parts-25, constituency-28) mark(attract-30, to-29) xcomp(available-23, attract-30) dobj(attract-30, industry-31) cc(attract-30, and-32) xcomp(available-23, create-33) conj:and(attract-30, create-33) dobj(create-33, jobs-34) punct(does-3, .-35)",0,0,1,"root(ROOT, does) mark(does, If) nsbj(does, he) mark(see, that) nsbj(see, he) ax(see, will) ccomp(does, see) mark(redced, that) det(Government, the) nsbj(redced, Government) ccomp(see, redced) advmod(redced, sbstantially) det(incentives, the) dobj(redced, incentives) cc(incentives, and) det(stats, the) amod(stats, assisted) compond(stats, area) dobj(redced, stats) conj:and(incentives, stats) nsbj(available, that) ax(available, had) cop(available, been) acl:relcl(stats, available) case(parts, to) nmod:to(available, parts) case(constitency, of) nmod:poss(constitency, my) nmod:of(parts, constitency) mark(attract, to) xcomp(available, attract) dobj(attract, indstry) cc(attract, and) xcomp(available, create) conj:and(attract, create) dobj(create, jobs) pnct(does, .)","root(,VBZ) mark(VBZ,IN) nsbj(VBZ,PRP) mark(VB,WDT) nsbj(VB,PRP) ax(VB,MD) ccomp(VBZ,VB) mark(VBD,WDT) det(NNP,DT) nsbj(VBD,NNP) ccomp(VB,VBD) advmod(VBD,RB) det(NNS,DT) dobj(VBD,NNS) cc(NNS,CC) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VBD,NN) conj:and(NNS,NN) nsbj(JJ,WDT) ax(JJ,VBD) cop(JJ,VBN) acl:relcl(NN,JJ) case(NNS,TO) nmod:to(JJ,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NNS,NN) mark(VB,TO) xcomp(JJ,VB) dobj(VB,NN) cc(VB,CC) xcomp(JJ,NN) conj:and(VB,NN) dobj(NN,NNS) pnct(VBZ,VBZ)","[see, does, Government, reduced, status, substantially, he, ROOT, incentives, he]","[see, does, Government, reduced, status, substantially, he, ROOT, incentives, he]",9,"[see, does, Government, reduced, status, substantially, he, ROOT, incentives]","[see, does, Government, reduced, status, substantially, he, ROOT, incentives]",VB_see VBZ_does NNP_Government VBD_reduced NN_status RB_substantially PRP_he NNS_incentives PRP_he ,"[see, does, Government, reduced, status, substantially, he, ROOT, incentives, he]","[see, does, Government, reduced, status, substantially, he, ROOT, incentives, he]",VB_see VBZ_does NNP_Government VBD_reduced NN_status RB_substantially PRP_he NNS_incentives PRP_he ,"[see, does, Government, reduced, status, substantially, he, ROOT, incentives, he]",VB_see VBZ_does NNP_Government VBD_reduced NN_status RB_substantially PRP_he NNS_incentives PRP_he ,"[see, does, Government, reduced, status, substantially, he, ROOT, incentives, he]",VB_see VBZ_does NNP_Government VBD_reduced NN_status RB_substantially PRP_he NNS_incentives PRP_he ,-3,0,2,0,0,0,0,0,0,0
The significance of the percentage increase to which the hon. Gentleman refers is dependent on the base from which it started.,TheDT significanceNN ofIN theDT percentageNN increaseNN toTO whichWDT theDT honNN GentlemanNNP refersNNS isVBZ dependentJJ onIN theDT baseNN fromIN whichWDT itPRP startedVBD ,"root(ROOT-0, dependent-14) det(significance-2, The-1) nsubj(dependent-14, significance-2) case(increase-6, of-3) det(increase-6, the-4) compound(increase-6, percentage-5) nmod:of(significance-2, increase-6) case(which-8, to-7) nmod:to(refers-12, which-8) det(Gentleman-11, the-9) compound(Gentleman-11, hon.-10) nsubj(refers-12, Gentleman-11) acl:relcl(increase-6, refers-12) cop(dependent-14, is-13) case(base-17, on-15) det(base-17, the-16) nmod:on(dependent-14, base-17) case(which-19, from-18) nmod:from(started-21, which-19) nsubj(started-21, it-20) acl:relcl(base-17, started-21) punct(dependent-14, .-22)",0,1,0,"root(ROOT, dependent) det(significance, The) nsbj(dependent, significance) case(increase, of) det(increase, the) compond(increase, percentage) nmod:of(significance, increase) case(which, to) nmod:to(refers, which) det(Gentleman, the) compond(Gentleman, hon.) nsbj(refers, Gentleman) acl:relcl(increase, refers) cop(dependent, is) case(base, on) det(base, the) nmod:on(dependent, base) case(which, from) nmod:from(started, which) nsbj(started, it) acl:relcl(base, started) pnct(dependent, .)","root(,JJ) det(NN,DT) nsbj(JJ,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) case(WDT,TO) nmod:to(NNS,WDT) det(NNP,DT) compond(NNP,NNP) nsbj(NNS,NNP) acl:relcl(NN,NNS) cop(JJ,VBZ) case(NN,IN) det(NN,DT) nmod:on(JJ,NN) case(WDT,IN) nmod:from(VBD,WDT) nsbj(VBD,PRP) acl:relcl(NN,VBD) pnct(JJ,JJ)","[Gentleman, increase, refers, which]","[Gentleman, increase, refers, which]",10,"[Gentleman, increase, refers, which]","[Gentleman, increase, refers, which]",NNP_Gentleman VB_increase VBZ_refers WDT_which ,"[Gentleman, increase, refers, which]","[Gentleman, increase, refers, which]",NNP_Gentleman VB_increase VBZ_refers WDT_which ,[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
On regional aid  as the hon. Gentleman well knows  about 65 per cent.,OnIN regionalJJ aidNN asIN theDT honNN GentlemanNNP wellRB knowsVBZ aboutIN 65CD perIN centNN ,"root(ROOT-0, knows-10) case(aid-3, On-1) amod(aid-3, regional-2) nmod:on(knows-10, aid-3) punct(knows-10, ,-4) case(Gentleman-8, as-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nsubj(knows-10, Gentleman-8) advmod(knows-10, well-9) punct(knows-10, ,-11) advmod(65-13, about-12) nmod(knows-10, 65-13) case(cent-15, per-14) nmod:per(65-13, cent-15) punct(knows-10, .-16)",0,0,0,"root(ROOT, knows) case(aid, On) amod(aid, regional) nmod:on(knows, aid) pnct(knows, ,) case(Gentleman, as) det(Gentleman, the) compond(Gentleman, hon.) nsbj(knows, Gentleman) advmod(knows, well) pnct(knows, ,) advmod(65, abot) nmod(knows, 65) case(cent, per) nmod:per(65, cent) pnct(knows, .)","root(,VBZ) case(NN,IN) amod(NN,JJ) nmod:on(VBZ,NN) pnct(VBZ,VBZ) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) advmod(VBZ,RB) pnct(VBZ,VBZ) advmod(CD,IN) nmod(VBZ,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBZ,VBZ)","[well, Gentleman, ROOT, knows, 65, aid]","[well, Gentleman, ROOT, knows, 65, aid]",10,"[well, Gentleman, ROOT, knows, 65, aid]","[well, Gentleman, ROOT, knows, 65, aid]",RB_well NNP_Gentleman VBZ_knows CD_65 NN_aid ,"[well, Gentleman, ROOT, knows, 65, aid]","[well, Gentleman, ROOT, knows, 65, aid]",RB_well NNP_Gentleman VBZ_knows CD_65 NN_aid ,"[well, Gentleman, ROOT, knows, 65, aid]",RB_well NNP_Gentleman VBZ_knows CD_65 NN_aid ,"[well, Gentleman, ROOT, knows, 65, aid]",RB_well NNP_Gentleman VBZ_knows CD_65 NN_aid ,-3,0,1,1,1,1,2,1,1,1
of the working population in Scotland are now in assisted areas  compared with only 35 per cent.,ofIN theDT workingVBG populationNN inIN ScotlandNNP areVBP nowRB inIN assistedVBN areasNNS comparedVBN withIN onlyRB 35CD perIN centNN ,"root(ROOT-0, areas-11) case(population-4, of-1) det(population-4, the-2) amod(population-4, working-3) nsubj(areas-11, population-4) case(Scotland-6, in-5) nmod:in(population-4, Scotland-6) cop(areas-11, are-7) advmod(areas-11, now-8) case(areas-11, in-9) amod(areas-11, assisted-10) punct(areas-11, ,-12) case(35-16, compared-13) mwe(compared-13, with-14) advmod(35-16, only-15) acl:compared_with(areas-11, 35-16) case(cent-18, per-17) nmod:per(35-16, cent-18) punct(areas-11, .-19)",0,0,0,"root(ROOT, areas) case(poplation, of) det(poplation, the) amod(poplation, working) nsbj(areas, poplation) case(Scotland, in) nmod:in(poplation, Scotland) cop(areas, are) advmod(areas, now) case(areas, in) amod(areas, assisted) pnct(areas, ,) case(35, compared) mwe(compared, with) advmod(35, only) acl:compared_with(areas, 35) case(cent, per) nmod:per(35, cent) pnct(areas, .)","root(,NNS) case(NN,IN) det(NN,DT) amod(NN,VBG) nsbj(NNS,NN) case(NNP,IN) nmod:in(NN,NNP) cop(NNS,VBP) advmod(NNS,RB) case(NNS,IN) amod(NNS,VBN) pnct(NNS,NNS) case(CD,VBN) mwe(VBN,IN) advmod(CD,RB) acl:compared_with(NNS,CD) case(NN,IN) nmod:per(CD,NN) pnct(NNS,NNS)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
in the United Kingdom.,inIN theDT UnitedNNP KingdomNNP ,"root(ROOT-0, Kingdom-4) case(Kingdom-4, in-1) det(Kingdom-4, the-2) compound(Kingdom-4, United-3) punct(Kingdom-4, .-5)",0,0,0,"root(ROOT, Kingdom) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) pnct(Kingdom, .)","root(,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) pnct(NNP,NNP)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That represents about £62 per head  compared with £19 in the United Kingdom.,ThatDT representsVBZ aboutIN £62FW perIN headNN comparedVBN withIN £19NN inIN theDT UnitedNNP KingdomNNP ,"root(ROOT-0, represents-2) nsubj(represents-2, That-1) case(62-5, about-3) compound(62-5, #-4) nmod:about(represents-2, 62-5) case(head-7, per-6) nmod:per(62-5, head-7) punct(represents-2, ,-8) case(19-12, compared-9) mwe(compared-9, with-10) compound(19-12, #-11) advcl:compared_with(represents-2, 19-12) case(Kingdom-16, in-13) det(Kingdom-16, the-14) compound(Kingdom-16, United-15) nmod:in(19-12, Kingdom-16) punct(represents-2, .-17)",0,0,0,"root(ROOT, represents) nsbj(represents, That) case(62, abot) compond(62, #) nmod:abot(represents, 62) case(head, per) nmod:per(62, head) pnct(represents, ,) case(19, compared) mwe(compared, with) compond(19, #) advcl:compared_with(represents, 19) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(19, Kingdom) pnct(represents, .)","root(,VBZ) nsbj(VBZ,DT) case(DT,IN) compond(IN,IN) nmod:abot(VBZ,VBZ) case(NN,IN) nmod:per(IN,NN) pnct(VBZ,VBZ) case(VBZ,VBN) mwe(VBN,IN) compond(IN,IN) advcl:compared_with(VBZ,VBZ) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NNP,NNP) pnct(VBZ,VBZ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The substantial increase in the coverage of regional aid as a proportion of the total since 1979 is from about 21 to 30 per cent.  which reflects the importance that is attached to that matter in Scotland.,TheDT substantialJJ increaseNN inIN theDT coverageNN ofIN regionalJJ aidNN asIN aDT proportionNN ofIN theDT totalNN sinceIN 1979CD isVBZ fromIN aboutRB 21CD toTO 30CD perIN centNN whichWDT reflectsVBZ theDT importanceNN thatWDT isVBZ attachedVBN toTO thatDT matterNN inIN ScotlandNNP ,"root(ROOT-0, 21-21) det(increase-3, The-1) amod(increase-3, substantial-2) nsubj(21-21, increase-3) case(coverage-6, in-4) det(coverage-6, the-5) nmod:in(increase-3, coverage-6) case(aid-9, of-7) amod(aid-9, regional-8) nmod:of(coverage-6, aid-9) case(proportion-12, as-10) det(proportion-12, a-11) nmod:as(increase-3, proportion-12) case(total-15, of-13) det(total-15, the-14) nmod:of(proportion-12, total-15) case(1979-17, since-16) nmod:since(increase-3, 1979-17) cop(21-21, is-18) case(21-21, from-19) advmod(21-21, about-20) dep(30-23, to-22) nmod(21-21, 30-23) case(cent.-25, per-24) nmod:per(30-23, cent.-25) punct(30-23, ,-26) nsubj(reflects-28, which-27) acl:relcl(30-23, reflects-28) det(importance-30, the-29) dobj(reflects-28, importance-30) nsubjpass(attached-33, that-31) auxpass(attached-33, is-32) acl:relcl(importance-30, attached-33) case(matter-36, to-34) det(matter-36, that-35) nmod:to(attached-33, matter-36) case(Scotland-38, in-37) nmod:in(matter-36, Scotland-38) punct(21-21, .-39)",0,0,0,"root(ROOT, 21) det(increase, The) amod(increase, sbstantial) nsbj(21, increase) case(coverage, in) det(coverage, the) nmod:in(increase, coverage) case(aid, of) amod(aid, regional) nmod:of(coverage, aid) case(proportion, as) det(proportion, a) nmod:as(increase, proportion) case(total, of) det(total, the) nmod:of(proportion, total) case(1979, since) nmod:since(increase, 1979) cop(21, is) case(21, from) advmod(21, abot) dep(30, to) nmod(21, 30) case(cent., per) nmod:per(30, cent.) pnct(30, ,) nsbj(reflects, which) acl:relcl(30, reflects) det(importance, the) dobj(reflects, importance) nsbjpass(attached, that) axpass(attached, is) acl:relcl(importance, attached) case(matter, to) det(matter, that) nmod:to(attached, matter) case(Scotland, in) nmod:in(matter, Scotland) pnct(21, .)","root(,CD) det(NN,DT) amod(NN,JJ) nsbj(CD,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:as(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(CD,IN) nmod:since(NN,CD) cop(CD,VBZ) case(CD,IN) advmod(CD,RB) dep(CD,TO) nmod(CD,CD) case(CD,IN) nmod:per(CD,CD) pnct(CD,CD) nsbj(VBZ,WDT) acl:relcl(CD,VBZ) det(NN,DT) dobj(VBZ,NN) nsbjpass(VBN,DT) axpass(VBN,VBZ) acl:relcl(NN,VBN) case(NN,TO) det(NN,DT) nmod:to(VBN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(CD,CD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Order.,OrderNN ,"root(ROOT-0, Order-1) punct(Order-1, .-2)",0,0,0,"root(ROOT, Order) pnct(Order, .)","root(,NN) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does this come under the heading of industrial production?,DoesVBZ thisDT comeVBN underIN theDT headingNN ofIN industrialJJ productionNN ,"root(ROOT-0, come-3) aux(come-3, Does-1) nsubj(come-3, this-2) case(heading-6, under-4) det(heading-6, the-5) nmod:under(come-3, heading-6) case(production-9, of-7) amod(production-9, industrial-8) nmod:of(heading-6, production-9) punct(come-3, ?-10)",0,0,1,"root(ROOT, come) ax(come, Does) nsbj(come, this) case(heading, nder) det(heading, the) nmod:nder(come, heading) case(prodction, of) amod(prodction, indstrial) nmod:of(heading, prodction) pnct(come, ?)","root(,VBN) ax(VBN,VBZ) nsbj(VBN,DT) case(NN,IN) det(NN,DT) nmod:nder(VBN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) pnct(VBN,VBN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It does indeed.,ItPRP doesVBZ indeedRB ,"root(ROOT-0, does-2) nsubj(does-2, It-1) advmod(does-2, indeed-3) punct(does-2, .-4)",0,1,0,"root(ROOT, does) nsbj(does, It) advmod(does, indeed) pnct(does, .)","root(,VBZ) nsbj(VBZ,PRP) advmod(VBZ,RB) pnct(VBZ,VBZ)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he ensure that our nips are available to their Nips at the same price as their nips are available to their Nips?,WillMD hePRP ensureVB thatIN ourPRP$ nipsNNS areVBP availableJJ toTO theirPRP$ NipsNNS atIN theDT sameJJ priceNN asIN theirPRP$ nipsNNS areVBP availableJJ toTO theirPRP$ NipsNNS ,"root(ROOT-0, ensure-3) aux(ensure-3, Will-1) nsubj(ensure-3, he-2) mark(available-8, that-4) nmod:poss(nips-6, our-5) nsubj(available-8, nips-6) cop(available-8, are-7) ccomp(ensure-3, available-8) case(Nips-11, to-9) nmod:poss(Nips-11, their-10) nmod:to(available-8, Nips-11) case(price-15, at-12) det(price-15, the-13) amod(price-15, same-14) nmod:at(available-8, price-15) mark(available-20, as-16) nmod:poss(nips-18, their-17) nsubj(available-20, nips-18) cop(available-20, are-19) acl(price-15, available-20) case(Nips-23, to-21) nmod:poss(Nips-23, their-22) nmod:to(available-20, Nips-23) punct(ensure-3, ?-24)",0,0,1,"root(ROOT, ensre) ax(ensre, Will) nsbj(ensre, he) mark(available, that) nmod:poss(nips, or) nsbj(available, nips) cop(available, are) ccomp(ensre, available) case(Nips, to) nmod:poss(Nips, their) nmod:to(available, Nips) case(price, at) det(price, the) amod(price, same) nmod:at(available, price) mark(available, as) nmod:poss(nips, their) nsbj(available, nips) cop(available, are) acl(price, available) case(Nips, to) nmod:poss(Nips, their) nmod:to(available, Nips) pnct(ensre, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) mark(JJ,IN) nmod:poss(NNS,PRP$) nsbj(JJ,NNS) cop(JJ,VBP) ccomp(VB,JJ) case(NNS,TO) nmod:poss(NNS,PRP$) nmod:to(JJ,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:at(JJ,NN) mark(JJ,IN) nmod:poss(NNS,PRP$) nsbj(JJ,NNS) cop(JJ,VBP) acl(NN,JJ) case(NNS,TO) nmod:poss(NNS,PRP$) nmod:to(JJ,NNS) pnct(VB,VB)","[he, ROOT, ensure, available]","[he, ROOT, ensure, available]",13,[ ],[ ],PRP_he VB_ensure JJ_available ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
He might have asked me about the electronics industry.,HePRP mightMD haveVB askedVBN mePRP aboutIN theDT electronicsNNS industryNN ,"root(ROOT-0, asked-4) nsubj(asked-4, He-1) aux(asked-4, might-2) aux(asked-4, have-3) dobj(asked-4, me-5) case(industry-9, about-6) det(industry-9, the-7) compound(industry-9, electronics-8) nmod:about(asked-4, industry-9) punct(asked-4, .-10)",0,0,0,"root(ROOT, asked) nsbj(asked, He) ax(asked, might) ax(asked, have) dobj(asked, me) case(indstry, abot) det(indstry, the) compond(indstry, electronics) nmod:abot(asked, indstry) pnct(asked, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,MD) ax(VBN,VB) dobj(VBN,PRP) case(NN,IN) det(NN,DT) compond(NN,NNS) nmod:abot(VBN,NN) pnct(VBN,VBN)","[me, ROOT, industry, He, asked]","[me, ROOT, industry, He, asked]",14,[ ],[ ],PRP_me NN_industry PRP_He VBN_asked ,"[me, ROOT, industry, He, asked]","[me, ROOT, industry, He, asked]",PRP_me NN_industry PRP_He VBN_asked ,"[me, ROOT, industry, He, asked]",PRP_me NN_industry PRP_He VBN_asked ,"[me, ROOT, industry, He, asked]",PRP_me NN_industry PRP_He VBN_asked ,-3,0,2,0,0,0,0,0,0,0
Does the Minister not accept that  taking this year against next year  there is a cut in the industry and economy budget of the Scottish Office from £344 million to £257 million?,DoesVBZ theDT MinisterNNP notRB acceptVB thatIN takingVBG thisDT yearNN againstIN nextJJ yearNN thereEX isVBZ aDT cutNN inIN theDT industryNN andCC economyNN budgetNN ofIN theDT ScottishJJ OfficeNNP fromIN £344NNP millionCD toTO £257CD millionCD ,"root(ROOT-0, accept-5) aux(accept-5, Does-1) det(Minister-3, the-2) nsubj(accept-5, Minister-3) neg(accept-5, not-4) mark(is-16, that-6) punct(is-16, ,-7) advcl(is-16, taking-8) det(year-10, this-9) nmod:tmod(taking-8, year-10) case(year-13, against-11) amod(year-13, next-12) nmod:against(taking-8, year-13) punct(is-16, ,-14) expl(is-16, there-15) ccomp(accept-5, is-16) det(cut-18, a-17) nsubj(is-16, cut-18) case(industry-21, in-19) det(industry-21, the-20) nmod:in(cut-18, industry-21) cc(industry-21, and-22) compound(budget-24, economy-23) nmod:in(cut-18, budget-24) conj:and(industry-21, budget-24) case(Office-28, of-25) det(Office-28, the-26) amod(Office-28, Scottish-27) nmod:of(industry-21, Office-28) case(million-32, from-29) compound(million-32, #-30) compound(million-32, 344-31) nmod:from(cut-18, million-32) case(million-36, to-33) compound(million-36, #-34) compound(million-36, 257-35) nmod:to(million-32, million-36) punct(accept-5, ?-37)",0,0,0,"root(ROOT, accept) ax(accept, Does) det(Minister, the) nsbj(accept, Minister) neg(accept, not) mark(is, that) pnct(is, ,) advcl(is, taking) det(year, this) nmod:tmod(taking, year) case(year, against) amod(year, next) nmod:against(taking, year) pnct(is, ,) expl(is, there) ccomp(accept, is) det(ct, a) nsbj(is, ct) case(indstry, in) det(indstry, the) nmod:in(ct, indstry) cc(indstry, and) compond(bdget, economy) nmod:in(ct, bdget) conj:and(indstry, bdget) case(Office, of) det(Office, the) amod(Office, Scottish) nmod:of(indstry, Office) case(million, from) compond(million, #) compond(million, 344) nmod:from(ct, million) case(million, to) compond(million, #) compond(million, 257) nmod:to(million, million) pnct(accept, ?)","root(,VB) ax(VB,VBZ) det(NNP,DT) nsbj(VB,NNP) neg(VB,RB) mark(VBZ,IN) pnct(VBZ,VBZ) advcl(VBZ,VBG) det(NN,DT) nmod:tmod(VBG,NN) case(NN,IN) amod(NN,JJ) nmod:against(VBG,NN) pnct(VBZ,VBZ) expl(VBZ,EX) ccomp(VB,VBZ) det(NN,DT) nsbj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) cc(NN,CC) compond(NN,NN) nmod:in(NN,NN) conj:and(NN,NN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NN,NNP) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:from(NN,CD) case(CD,TO) compond(CD,CD) compond(CD,CD) nmod:to(CD,CD) pnct(VB,VB)","[ROOT, accept, Minister, not, is]","[ROOT, accept, Minister, not, is]",3,[ ],[ ],VBD_accept NNP_Minister RB_not VBZ_is ,"[ROOT, accept, Minister, not, is]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As the hon. Gentleman knows  the RDG1 scheme is about to end.,AsIN theDT honNN GentlemanNNP knowsVBZ theDT RDG1NNP schemeNN isVBZ aboutIN toTO endVB ,"root(ROOT-0, end-13) mark(knows-5, As-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(knows-5, Gentleman-4) advcl(end-13, knows-5) punct(end-13, ,-6) det(scheme-9, the-7) compound(scheme-9, RDG1-8) nsubj(end-13, scheme-9) cop(end-13, is-10) mark(end-13, about-11) mark(end-13, to-12) punct(end-13, .-14)",0,0,0,"root(ROOT, end) mark(knows, As) det(Gentleman, the) compond(Gentleman, hon.) nsbj(knows, Gentleman) advcl(end, knows) pnct(end, ,) det(scheme, the) compond(scheme, RDG1) nsbj(end, scheme) cop(end, is) mark(end, abot) mark(end, to) pnct(end, .)","root(,VB) mark(VBZ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(VB,VBZ) pnct(VB,VB) det(NN,DT) compond(NN,NNP) nsbj(VB,NN) cop(VB,VBZ) mark(VB,IN) mark(VB,TO) pnct(VB,VB)","[Gentleman, knows, end]","[Gentleman, knows, end]",15,"[Gentleman, knows, end]","[Gentleman, knows, end]",NNP_Gentleman VBZ_knows NN_end ,"[Gentleman, knows, end]","[Gentleman, knows, end]",NNP_Gentleman VBZ_knows NN_end ,"[Gentleman, knows, end]",NNP_Gentleman VBZ_knows NN_end ,"[Gentleman, knows, end]",NNP_Gentleman VBZ_knows NN_end ,-3,0,2,0,0,0,0,0,0,0
Secondly  regional development grant is demand led and cannot therefore be specifically cash tagged in the way that he has suggested.,SecondlyRB regionalJJ developmentNN grantNN isVBZ demandNN ledVBN andCC canMD notRB thereforeRB beVB specificallyRB cashNN taggedVBD inIN theDT wayNN thatIN hePRP hasVBZ suggestedVBN ,"root(ROOT-0, demand-7) advmod(demand-7, Secondly-1) punct(demand-7, ,-2) amod(grant-5, regional-3) compound(grant-5, development-4) nsubj(demand-7, grant-5) cop(demand-7, is-6) dep(demand-7, led-8) cc(led-8, and-9) aux(tagged-16, can-10) neg(cash-15, not-11) advmod(cash-15, therefore-12) cop(cash-15, be-13) advmod(cash-15, specifically-14) nsubj(tagged-16, cash-15) dep(demand-7, tagged-16) conj:and(led-8, tagged-16) case(way-19, in-17) det(way-19, the-18) nmod:in(tagged-16, way-19) dobj(suggested-23, that-20) nsubj(suggested-23, he-21) aux(suggested-23, has-22) acl:relcl(way-19, suggested-23) punct(demand-7, .-24)",0,0,0,"root(ROOT, demand) advmod(demand, Secondly) pnct(demand, ,) amod(grant, regional) compond(grant, development) nsbj(demand, grant) cop(demand, is) dep(demand, led) cc(led, and) ax(tagged, can) neg(cash, not) advmod(cash, therefore) cop(cash, be) advmod(cash, specifically) nsbj(tagged, cash) dep(demand, tagged) conj:and(led, tagged) case(way, in) det(way, the) nmod:in(tagged, way) dobj(sggested, that) nsbj(sggested, he) ax(sggested, has) acl:relcl(way, sggested) pnct(demand, .)","root(,NN) advmod(NN,RB) pnct(NN,NN) amod(NN,JJ) compond(NN,NN) nsbj(NN,NN) cop(NN,VBZ) dep(NN,VBN) cc(VBN,CC) ax(VBD,MD) neg(NN,RB) advmod(NN,RB) cop(NN,VB) advmod(NN,RB) nsbj(VBD,NN) dep(NN,VBD) conj:and(VBN,VBD) case(NN,IN) det(NN,DT) nmod:in(VBD,NN) dobj(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NN,VBN) pnct(NN,NN)","[he, way, that, suggested]","[he, way, that, suggested]",16,[ ],[ ],PRP_he NN_way IN_that VBD_suggested ,"[he, way, that, suggested]","[he, way, that, suggested]",PRP_he NN_way IN_that VBD_suggested ,"[he, way, that, suggested]",PRP_he NN_way IN_that VBD_suggested ,"[he, way, that, suggested]",PRP_he NN_way IN_that VBD_suggested ,-3,0,2,0,0,0,0,0,0,0
Our budget has had to be increased by 26 per cent.,OurPRP$ budgetNN hasVBZ hadVBN toTO beVB increasedVBN byIN 26CD perIN centNN ,"root(ROOT-0, had-4) nmod:poss(budget-2, Our-1) nsubj(had-4, budget-2) aux(had-4, has-3) mark(increased-7, to-5) auxpass(increased-7, be-6) xcomp(had-4, increased-7) case(26-9, by-8) nmod:agent(increased-7, 26-9) case(cent-11, per-10) nmod:per(26-9, cent-11) punct(had-4, .-12)",0,0,0,"root(ROOT, had) nmod:poss(bdget, Or) nsbj(had, bdget) ax(had, has) mark(increased, to) axpass(increased, be) xcomp(had, increased) case(26, by) nmod:agent(increased, 26) case(cent, per) nmod:per(26, cent) pnct(had, .)","root(,VBN) nmod:poss(NN,PRP$) nsbj(VBN,NN) ax(VBN,VBZ) mark(VBN,TO) axpass(VBN,VB) xcomp(VBN,VBN) case(CD,IN) nmod:agent(VBN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBN,VBN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
from what we had anticipated a year ago  because of increased activity.,fromIN whatWP wePRP hadVBD anticipatedVBN aDT yearNN agoRB becauseIN ofIN increasedJJ activityNN ,"root(ROOT-0, anticipated-5) mark(anticipated-5, from-1) dobj(anticipated-5, what-2) nsubj(anticipated-5, we-3) aux(anticipated-5, had-4) det(year-7, a-6) nmod:npmod(ago-8, year-7) advmod(anticipated-5, ago-8) punct(anticipated-5, ,-9) case(activity-13, because-10) mwe(because-10, of-11) amod(activity-13, increased-12) nmod:because_of(anticipated-5, activity-13) punct(anticipated-5, .-14)",0,0,0,"root(ROOT, anticipated) mark(anticipated, from) dobj(anticipated, what) nsbj(anticipated, we) ax(anticipated, had) det(year, a) nmod:npmod(ago, year) advmod(anticipated, ago) pnct(anticipated, ,) case(activity, becase) mwe(becase, of) amod(activity, increased) nmod:becase_of(anticipated, activity) pnct(anticipated, .)","root(,VBN) mark(VBN,IN) dobj(VBN,WP) nsbj(VBN,PRP) ax(VBN,VBD) det(NN,DT) nmod:npmod(RB,NN) advmod(VBN,RB) pnct(VBN,VBN) case(NN,IN) mwe(IN,IN) amod(NN,JJ) nmod:becase_of(VBN,NN) pnct(VBN,VBN)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
asked the Secretary of State for Scotland if he will hold discussions with a view to setting up a Scottish Assembly with legislative powers.,askedVBN theDT SecretaryNNP ofIN StateNNP forIN ScotlandNNP ifIN hePRP willMD holdVB discussionsNNS withIN aDT viewNN toTO settingVBG upRP aDT ScottishJJ AssemblyNN withIN legislativeJJ powersNNS ,"root(ROOT-0, asked-1) det(Secretary-3, the-2) dobj(asked-1, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) case(Scotland-7, for-6) nmod:for(Secretary-3, Scotland-7) mark(hold-11, if-8) nsubj(hold-11, he-9) aux(hold-11, will-10) advcl(asked-1, hold-11) dobj(hold-11, discussions-12) case(view-15, with-13) det(view-15, a-14) nmod:with(hold-11, view-15) mark(setting-17, to-16) acl(view-15, setting-17) compound:prt(setting-17, up-18) det(Assembly-21, a-19) amod(Assembly-21, Scottish-20) dobj(setting-17, Assembly-21) case(powers-24, with-22) amod(powers-24, legislative-23) nmod:with(Assembly-21, powers-24) punct(asked-1, .-25)",0,1,1,"root(ROOT, asked) det(Secretary, the) dobj(asked, Secretary) case(State, of) nmod:of(Secretary, State) case(Scotland, for) nmod:for(Secretary, Scotland) mark(hold, if) nsbj(hold, he) ax(hold, will) advcl(asked, hold) dobj(hold, discssions) case(view, with) det(view, a) nmod:with(hold, view) mark(setting, to) acl(view, setting) compond:prt(setting, p) det(Assembly, a) amod(Assembly, Scottish) dobj(setting, Assembly) case(powers, with) amod(powers, legislative) nmod:with(Assembly, powers) pnct(asked, .)","root(,VBN) det(NNP,DT) dobj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VBN,VB) dobj(VB,NNS) case(NN,IN) det(NN,DT) nmod:with(VB,NN) mark(VBG,TO) acl(NN,VBG) compond:prt(VBG,RP) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) case(NNS,IN) amod(NNS,JJ) nmod:with(NN,NNS) pnct(VBN,VBN)","[State, he, hold, ROOT, asked, discussions, view, Scotland, Secretary]","[State, he, hold, ROOT, asked, discussions, view, Scotland, Secretary]",1,"[hold, ROOT, asked, State, Scotland, Secretary]","[hold, ROOT, asked, State, Scotland, Secretary]",NNP_State PRP_he VB_hold VBN_asked NNS_discussions NN_view NNP_Scotland NNP_Secretary ,"[State, he, hold, ROOT, asked, discussions, view, Scotland, Secretary]","[State, he, hold, ROOT, asked, discussions, view, Scotland, Secretary]",NNP_State PRP_he VB_hold VBN_asked NNS_discussions NN_view NNP_Scotland NNP_Secretary ,"[State, he, hold, ROOT, asked, discussions, view, Scotland, Secretary]",NNP_State PRP_he VB_hold VBN_asked NNS_discussions NN_view NNP_Scotland NNP_Secretary ,"[State, he, hold, ROOT, asked, discussions, view, Scotland, Secretary]",NNP_State PRP_he VB_hold VBN_asked NNS_discussions NN_view NNP_Scotland NNP_Secretary ,-3,0,1,0,0,0,0,0,0,0
I have no proposals for setting up a Scottish Assembly.,IPRP haveVBP noDT proposalsNNS forIN settingVBG upRP aDT ScottishJJ AssemblyNN ,"root(ROOT-0, have-2) nsubj(have-2, I-1) neg(proposals-4, no-3) dobj(have-2, proposals-4) mark(setting-6, for-5) acl(proposals-4, setting-6) compound:prt(setting-6, up-7) det(Assembly-10, a-8) amod(Assembly-10, Scottish-9) dobj(setting-6, Assembly-10) punct(have-2, .-11)",0,1,1,"root(ROOT, have) nsbj(have, I) neg(proposals, no) dobj(have, proposals) mark(setting, for) acl(proposals, setting) compond:prt(setting, p) det(Assembly, a) amod(Assembly, Scottish) dobj(setting, Assembly) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) neg(NNS,DT) dobj(VBP,NNS) mark(VBG,IN) acl(NNS,VBG) compond:prt(VBG,RP) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) pnct(VBP,VBP)",[ ],[ ],1,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Given that during the recent election campaign the Conservative party gave a commitment to enter into discussions on the future government of Scotland if there was evidence of a demand for an Assembly  and given that the Scottish electorate answered that question clearly 76 per cent.,GivenVBN thatIN duringIN theDT recentJJ electionNN campaignNN theDT ConservativeNNP partyNN gaveVBD aDT commitmentNN toTO enterVB intoIN discussionsNNS onIN theDT futureJJ governmentNN ofIN ScotlandNNP ifIN thereEX wasVBD evidenceNN ofIN aDT demandNN forIN anDT AssemblyNN andCC givenVBN thatIN theDT ScottishJJ electorateNN answeredVBD thatIN questionNN clearlyRB 76CD perIN centNN ,"root(ROOT-0, gave-11) mark(gave-11, Given-1) mark(gave-11, that-2) case(campaign-7, during-3) det(campaign-7, the-4) amod(campaign-7, recent-5) compound(campaign-7, election-6) nmod:during(gave-11, campaign-7) det(party-10, the-8) amod(party-10, Conservative-9) nsubj(gave-11, party-10) det(commitment-13, a-12) dobj(gave-11, commitment-13) mark(enter-15, to-14) acl(commitment-13, enter-15) case(discussions-17, into-16) nmod:into(enter-15, discussions-17) case(government-21, on-18) det(government-21, the-19) amod(government-21, future-20) nmod:on(discussions-17, government-21) case(Scotland-23, of-22) nmod:of(government-21, Scotland-23) mark(was-26, if-24) expl(was-26, there-25) advcl(gave-11, was-26) nsubj(was-26, evidence-27) case(demand-30, of-28) det(demand-30, a-29) nmod:of(evidence-27, demand-30) case(Assembly-33, for-31) det(Assembly-33, an-32) nmod:for(demand-30, Assembly-33) punct(gave-11, ,-34) cc(gave-11, and-35) mark(answered-41, given-36) mark(answered-41, that-37) det(electorate-40, the-38) amod(electorate-40, Scottish-39) nsubj(answered-41, electorate-40) conj:and(gave-11, answered-41) dobj(answered-41, that-42) dep(that-42, question-43) advmod(76-45, clearly-44) dep(question-43, 76-45) case(cent-47, per-46) nmod:per(76-45, cent-47) punct(gave-11, .-48)",0,0,0,"root(ROOT, gave) mark(gave, Given) mark(gave, that) case(campaign, dring) det(campaign, the) amod(campaign, recent) compond(campaign, election) nmod:dring(gave, campaign) det(party, the) amod(party, Conservative) nsbj(gave, party) det(commitment, a) dobj(gave, commitment) mark(enter, to) acl(commitment, enter) case(discssions, into) nmod:into(enter, discssions) case(government, on) det(government, the) amod(government, ftre) nmod:on(discssions, government) case(Scotland, of) nmod:of(government, Scotland) mark(was, if) expl(was, there) advcl(gave, was) nsbj(was, evidence) case(demand, of) det(demand, a) nmod:of(evidence, demand) case(Assembly, for) det(Assembly, an) nmod:for(demand, Assembly) pnct(gave, ,) cc(gave, and) mark(answered, given) mark(answered, that) det(electorate, the) amod(electorate, Scottish) nsbj(answered, electorate) conj:and(gave, answered) dobj(answered, that) dep(that, qestion) advmod(76, clearly) dep(qestion, 76) case(cent, per) nmod:per(76, cent) pnct(gave, .)","root(,VBD) mark(VBD,VBN) mark(VBD,IN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:dring(VBD,NN) det(NN,DT) amod(NN,NNP) nsbj(VBD,NN) det(NN,DT) dobj(VBD,NN) mark(VB,TO) acl(NN,VB) case(NNS,IN) nmod:into(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) mark(VBD,IN) expl(VBD,EX) advcl(VBD,VBD) nsbj(VBD,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) pnct(VBD,VBD) cc(VBD,CC) mark(VBD,VBN) mark(VBD,IN) det(NN,DT) amod(NN,JJ) nsbj(VBD,NN) conj:and(VBD,VBD) dobj(VBD,IN) dep(IN,NN) advmod(CD,RB) dep(NN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBD,VBD)","[gave, Conservative, party]","[gave, Conservative, party]",2,"[gave, Conservative, party]","[gave, Conservative, party]",VBD_gave JJ_Conservative NN_party ,"[gave, Conservative, party]","[gave, Conservative, party]",VBD_gave JJ_Conservative NN_party ,"[gave, Conservative, party]",VBD_gave JJ_Conservative NN_party ,"[gave, Conservative, party]",VBD_gave JJ_Conservative NN_party ,-3,0,2,2,1,2,0,0,0,0
voted in favour of parties that favoured devolution will the right hon. and learned Gentleman advise the House when those discussions will begin and what form they will take?,votedVBN inIN favourNN ofIN partiesNNS thatWDT favouredVBD devolutionNN willMD theDT rightJJ honNN andCC learnedVBD GentlemanNNP adviseVB theDT HouseNNP whenWRB thoseDT discussionsNNS willMD beginVB andCC whatWP formNN theyPRP willMD takeVB ,"root(ROOT-0, voted-1) case(favour-3, in-2) nmod:in(voted-1, favour-3) case(parties-5, of-4) nmod:of(favour-3, parties-5) det(devolution-8, that-6) compound(devolution-8, favoured-7) nsubj(hon.-12, devolution-8) nsubj(learned-14, devolution-8) aux(hon.-12, will-9) det(hon.-12, the-10) amod(hon.-12, right-11) acl:relcl(parties-5, hon.-12) cc(hon.-12, and-13) acl:relcl(parties-5, learned-14) conj:and(hon.-12, learned-14) nsubj(advise-16, Gentleman-15) ccomp(learned-14, advise-16) det(House-18, the-17) dobj(advise-16, House-18) advmod(begin-23, when-19) det(discussions-21, those-20) nsubj(begin-23, discussions-21) aux(begin-23, will-22) advcl(advise-16, begin-23) cc(begin-23, and-24) nsubj(form-26, what-25) advcl(advise-16, form-26) conj:and(begin-23, form-26) nsubj(take-29, they-27) aux(take-29, will-28) ccomp(form-26, take-29) punct(voted-1, ?-30)",0,0,1,"root(ROOT, voted) case(favor, in) nmod:in(voted, favor) case(parties, of) nmod:of(favor, parties) det(devoltion, that) compond(devoltion, favored) nsbj(hon., devoltion) nsbj(learned, devoltion) ax(hon., will) det(hon., the) amod(hon., right) acl:relcl(parties, hon.) cc(hon., and) acl:relcl(parties, learned) conj:and(hon., learned) nsbj(advise, Gentleman) ccomp(learned, advise) det(Hose, the) dobj(advise, Hose) advmod(begin, when) det(discssions, those) nsbj(begin, discssions) ax(begin, will) advcl(advise, begin) cc(begin, and) nsbj(form, what) advcl(advise, form) conj:and(begin, form) nsbj(take, they) ax(take, will) ccomp(form, take) pnct(voted, ?)","root(,VBN) case(NN,IN) nmod:in(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) det(NN,WDT) compond(NN,VBD) nsbj(VBD,NN) nsbj(VBD,NN) ax(NN,MD) det(MD,DT) amod(DT,JJ) acl:relcl(NNS,NNS) cc(NNS,CC) acl:relcl(NNS,VBD) conj:and(VBD,VBD) nsbj(VB,NNP) ccomp(VBD,VB) det(NNP,DT) dobj(VB,NNP) advmod(VB,WRB) det(NNS,DT) nsbj(VB,NNS) ax(VB,MD) advcl(VB,VB) cc(VB,CC) nsbj(NN,WP) advcl(VB,NN) conj:and(VB,NN) nsbj(VB,PRP) ax(VB,MD) ccomp(NN,VB) pnct(VBN,VBN)","[advise, learned, begin, form, Gentleman, House]","[advise, learned, begin, form, Gentleman, House]",3,"[advise, learned, begin, form, Gentleman, House]","[advise, learned, begin, form, Gentleman, House]",VBP_advise VBD_learned VB_begin NN_form NNP_Gentleman NNP_House ,"[advise, learned, begin, form, Gentleman, House]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the Secretary of State recall that the superficial negotiations that took place with COSLA over rate support grant led to a one and a half hour debate in the House and that the decision then taken has an input and influence upon every family and household in Scotland?,DoesVBZ theDT SecretaryNNP ofIN StateNNP recallNN thatIN theDT superficialJJ negotiationsNNS thatWDT tookVBD placeNN withIN COSLANNP overIN rateNN supportNN grantNN ledVBD toTO aDT oneNN andCC aDT halfJJ hourNN debateNN inIN theDT HouseNNP andCC thatIN theDT decisionNN thenRB takenVBN hasVBZ anDT inputNN andCC influenceNN uponIN everyDT familyNN andCC householdNN inIN ScotlandNNP ,"root(ROOT-0, recall-6) aux(recall-6, Does-1) det(Secretary-3, the-2) nsubj(recall-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(led-20, that-7) det(negotiations-10, the-8) amod(negotiations-10, superficial-9) nsubj(led-20, negotiations-10) nsubj(took-12, that-11) acl:relcl(negotiations-10, took-12) dobj(took-12, place-13) case(COSLA-15, with-14) nmod:with(took-12, COSLA-15) case(grant-19, over-16) compound(grant-19, rate-17) compound(grant-19, support-18) nmod:over(took-12, grant-19) ccomp(recall-6, led-20) case(one-23, to-21) det(one-23, a-22) nmod:to(led-20, one-23) cc(one-23, and-24) det(debate-28, a-25) amod(debate-28, half-26) compound(debate-28, hour-27) nmod:to(led-20, debate-28) conj:and(one-23, debate-28) case(House-31, in-29) det(House-31, the-30) nmod:in(debate-28, House-31) cc(led-20, and-32) mark(taken-37, that-33) det(decision-35, the-34) nsubj(taken-37, decision-35) advmod(taken-37, then-36) ccomp(recall-6, taken-37) conj:and(led-20, taken-37) dobj(taken-37, has-38) det(input-40, an-39) dobj(has-38, input-40) cc(input-40, and-41) dobj(has-38, influence-42) conj:and(input-40, influence-42) case(family-45, upon-43) det(family-45, every-44) nmod:upon(has-38, family-45) cc(family-45, and-46) nmod:upon(has-38, household-47) conj:and(family-45, household-47) case(Scotland-49, in-48) nmod:in(family-45, Scotland-49) punct(recall-6, ?-50)",0,1,0,"root(ROOT, recall) ax(recall, Does) det(Secretary, the) nsbj(recall, Secretary) case(State, of) nmod:of(Secretary, State) mark(led, that) det(negotiations, the) amod(negotiations, sperficial) nsbj(led, negotiations) nsbj(took, that) acl:relcl(negotiations, took) dobj(took, place) case(COSLA, with) nmod:with(took, COSLA) case(grant, over) compond(grant, rate) compond(grant, spport) nmod:over(took, grant) ccomp(recall, led) case(one, to) det(one, a) nmod:to(led, one) cc(one, and) det(debate, a) amod(debate, half) compond(debate, hor) nmod:to(led, debate) conj:and(one, debate) case(Hose, in) det(Hose, the) nmod:in(debate, Hose) cc(led, and) mark(taken, that) det(decision, the) nsbj(taken, decision) advmod(taken, then) ccomp(recall, taken) conj:and(led, taken) dobj(taken, has) det(inpt, an) dobj(has, inpt) cc(inpt, and) dobj(has, inflence) conj:and(inpt, inflence) case(family, pon) det(family, every) nmod:pon(has, family) cc(family, and) nmod:pon(has, hosehold) conj:and(family, hosehold) case(Scotland, in) nmod:in(family, Scotland) pnct(recall, ?)","root(,NN) ax(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(VBD,IN) det(NNS,DT) amod(NNS,JJ) nsbj(VBD,NNS) nsbj(VBD,IN) acl:relcl(NNS,VBD) dobj(VBD,NN) case(NNP,IN) nmod:with(VBD,NNP) case(NN,IN) compond(NN,NN) compond(NN,NN) nmod:over(VBD,NN) ccomp(NN,VBD) case(NN,TO) det(NN,DT) nmod:to(VBD,NN) cc(NN,CC) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:to(VBD,NN) conj:and(NN,NN) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) cc(VBD,CC) mark(VBN,IN) det(NN,DT) nsbj(VBN,NN) advmod(VBN,RB) ccomp(NN,VBN) conj:and(VBD,VBN) dobj(VBN,VBZ) det(NN,DT) dobj(VBZ,NN) cc(NN,CC) dobj(VBZ,NN) conj:and(NN,NN) case(NN,IN) det(NN,DT) nmod:pon(VBZ,NN) cc(NN,CC) nmod:pon(VBZ,NN) conj:and(NN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(NN,NN)","[led, Secretary, taken, ROOT, State, recall]","[led, Secretary, taken, ROOT, State, recall]",3,[ ],[ ],VBN_led NNP_Secretary VBN_taken NNP_State NN_recall ,"[led, Secretary, taken, ROOT, State, recall]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is that accountability?,IsVBZ thatDT accountabilityNN ,"root(ROOT-0, Is-1) det(accountability-3, that-2) nsubj(Is-1, accountability-3) punct(Is-1, ?-4)",0,0,0,"root(ROOT, Is) det(accontability, that) nsbj(Is, accontability) pnct(Is, ?)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) pnct(VBZ,VBZ)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will my right hon. and learned Friend make it absolutely clear that he is opposed to devolution?,WillMD myPRP$ rightJJ honNN andCC learnedVBD FriendNNP makeVB itPRP absolutelyRB clearJJ thatIN hePRP isVBZ opposedVBN toTO devolutionVB ,"root(ROOT-0, Will-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) dobj(Will-1, hon.-4) cc(Will-1, and-5) conj:and(Will-1, learned-6) nsubj(make-8, Friend-7) ccomp(learned-6, make-8) dobj(make-8, it-9) advmod(clear-11, absolutely-10) xcomp(make-8, clear-11) mark(opposed-15, that-12) nsubjpass(opposed-15, he-13) auxpass(opposed-15, is-14) ccomp(clear-11, opposed-15) case(devolution-17, to-16) nmod:to(opposed-15, devolution-17) punct(Will-1, ?-18)",0,1,1,"root(ROOT, Will) nmod:poss(hon., my) amod(hon., right) dobj(Will, hon.) cc(Will, and) conj:and(Will, learned) nsbj(make, Friend) ccomp(learned, make) dobj(make, it) advmod(clear, absoltely) xcomp(make, clear) mark(opposed, that) nsbjpass(opposed, he) axpass(opposed, is) ccomp(clear, opposed) case(devoltion, to) nmod:to(opposed, devoltion) pnct(Will, ?)","root(,MD) nmod:poss(MD,PRP$) amod(PRP$,JJ) dobj(MD,MD) cc(MD,CC) conj:and(MD,VBD) nsbj(VB,NNP) ccomp(VBD,VB) dobj(VB,PRP) advmod(JJ,RB) xcomp(VB,JJ) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) ccomp(JJ,VBN) case(VB,TO) nmod:to(VBN,VB) pnct(MD,MD)","[make, learned, clear, he, Friend, devolution, it, opposed]","[make, learned, clear, he, Friend, devolution, it, opposed]",5,"[make, learned, clear, he, Friend, devolution, it, opposed]","[make, learned, clear, he, Friend, devolution, it, opposed]",VB_make VBD_learned JJ_clear PRP_he NNP_Friend NN_devolution PRP_it VBN_opposed ,"[make, learned, clear, he, Friend, devolution, it, opposed]","[make, learned, clear, he, Friend, devolution, it, opposed]",VB_make VBD_learned JJ_clear PRP_he NNP_Friend NN_devolution PRP_it VBN_opposed ,"[make, learned, clear, he, Friend, devolution, it, opposed]",VB_make VBD_learned JJ_clear PRP_he NNP_Friend NN_devolution PRP_it VBN_opposed ,"[make, learned, clear, he, Friend, devolution, it, opposed]",VB_make VBD_learned JJ_clear PRP_he NNP_Friend NN_devolution PRP_it VBN_opposed ,-3,0,1,2,1,2,2,0,1,1
I have always expressed  and still express  the view that any form of devolution that proposes within a unitary state a devolved system of government for one part of the United Kingdom without any consequential changes for other parts of the United Kingdom is profoundly unworkable and is likely to lead to severe strains of an undesirable kind.,IPRP haveVBP alwaysRB expressedVBN andCC stillRB expressVB theDT viewNN thatIN anyDT formNN ofIN devolutionNN thatWDT proposesVBZ withinIN aDT unitaryJJ stateNN aDT devolvedJJ systemNN ofIN governmentNN forIN oneCD partNN ofIN theDT UnitedNNP KingdomNNP withoutIN anyDT consequentialJJ changesNNS forIN otherJJ partsNNS ofIN theDT UnitedNNP KingdomNNP isVBZ profoundlyRB unworkableJJ andCC isVBZ likelyJJ toTO leadVB toTO severeJJ strainsNNS ofIN anDT undesirableJJ kindNN ,"root(ROOT-0, expressed-4) nsubj(expressed-4, I-1) nsubj(express-8, I-1) aux(expressed-4, have-2) advmod(expressed-4, always-3) punct(expressed-4, ,-5) cc(expressed-4, and-6) advmod(express-8, still-7) conj:and(expressed-4, express-8) punct(express-8, ,-9) det(view-11, the-10) dobj(express-8, view-11) dep(view-11, that-12) det(form-14, any-13) dep(that-12, form-14) case(devolution-16, of-15) nmod:of(form-14, devolution-16) nsubj(proposes-18, that-17) acl:relcl(devolution-16, proposes-18) case(state-22, within-19) det(state-22, a-20) amod(state-22, unitary-21) nmod:within(unworkable-48, state-22) det(system-25, a-23) amod(system-25, devolved-24) nsubj(unworkable-48, system-25) case(government-27, of-26) nmod:of(system-25, government-27) case(part-30, for-28) nummod(part-30, one-29) nmod:for(system-25, part-30) case(Kingdom-34, of-31) det(Kingdom-34, the-32) compound(Kingdom-34, United-33) nmod:of(part-30, Kingdom-34) case(changes-38, without-35) det(changes-38, any-36) amod(changes-38, consequential-37) nmod:without(system-25, changes-38) case(parts-41, for-39) amod(parts-41, other-40) nmod:for(changes-38, parts-41) case(Kingdom-45, of-42) det(Kingdom-45, the-43) compound(Kingdom-45, United-44) nmod:of(parts-41, Kingdom-45) cop(unworkable-48, is-46) advmod(unworkable-48, profoundly-47) ccomp(proposes-18, unworkable-48) cc(form-14, and-49) cop(likely-51, is-50) dep(that-12, likely-51) conj:and(form-14, likely-51) mark(lead-53, to-52) xcomp(likely-51, lead-53) case(strains-56, to-54) amod(strains-56, severe-55) nmod:to(lead-53, strains-56) case(kind-60, of-57) det(kind-60, an-58) amod(kind-60, undesirable-59) nmod:of(strains-56, kind-60) punct(expressed-4, .-61)",0,0,0,"root(ROOT, expressed) nsbj(expressed, I) nsbj(express, I) ax(expressed, have) advmod(expressed, always) pnct(expressed, ,) cc(expressed, and) advmod(express, still) conj:and(expressed, express) pnct(express, ,) det(view, the) dobj(express, view) dep(view, that) det(form, any) dep(that, form) case(devoltion, of) nmod:of(form, devoltion) nsbj(proposes, that) acl:relcl(devoltion, proposes) case(state, within) det(state, a) amod(state, nitary) nmod:within(nworkable, state) det(system, a) amod(system, devolved) nsbj(nworkable, system) case(government, of) nmod:of(system, government) case(part, for) nmmod(part, one) nmod:for(system, part) case(Kingdom, of) det(Kingdom, the) compond(Kingdom, United) nmod:of(part, Kingdom) case(changes, withot) det(changes, any) amod(changes, conseqential) nmod:withot(system, changes) case(parts, for) amod(parts, other) nmod:for(changes, parts) case(Kingdom, of) det(Kingdom, the) compond(Kingdom, United) nmod:of(parts, Kingdom) cop(nworkable, is) advmod(nworkable, profondly) ccomp(proposes, nworkable) cc(form, and) cop(likely, is) dep(that, likely) conj:and(form, likely) mark(lead, to) xcomp(likely, lead) case(strains, to) amod(strains, severe) nmod:to(lead, strains) case(kind, of) det(kind, an) amod(kind, ndesirable) nmod:of(strains, kind) pnct(expressed, .)","root(,VBN) nsbj(VBN,PRP) nsbj(VB,PRP) ax(VBN,VBP) advmod(VBN,RB) pnct(VBN,VBN) cc(VBN,CC) advmod(VB,RB) conj:and(VBN,VB) pnct(VB,VB) det(NN,DT) dobj(VB,NN) dep(NN,WDT) det(NN,DT) dep(WDT,NN) case(NN,IN) nmod:of(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:within(JJ,NN) det(NN,DT) amod(NN,JJ) nsbj(JJ,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) nmmod(NN,CD) nmod:for(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:withot(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:for(NNS,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NNS,NNP) cop(JJ,VBZ) advmod(JJ,RB) ccomp(VBZ,JJ) cc(NN,CC) cop(JJ,VBZ) dep(WDT,JJ) conj:and(NN,JJ) mark(VB,TO) xcomp(JJ,VB) case(NNS,TO) amod(NNS,JJ) nmod:to(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) pnct(VBN,VBN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Has my right hon. and learned Friend made any calculation of the reduction in the numbers of Scottish Members of Parliament if there were an Assembly?,HasNNP myPRP$ rightJJ honNN andCC learnedVBD FriendNNP madeVBD anyDT calculationNN ofIN theDT reductionNN inIN theDT numbersNNS ofIN ScottishJJ MembersNNS ofIN ParliamentNNP ifIN thereEX wereVBD anDT AssemblyNN ,"root(ROOT-0, made-8) aux(made-8, Has-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) nsubj(made-8, hon.-4) cc(hon.-4, and-5) amod(Friend-7, learned-6) conj:and(hon.-4, Friend-7) nsubj(made-8, Friend-7) det(calculation-10, any-9) dobj(made-8, calculation-10) case(reduction-13, of-11) det(reduction-13, the-12) nmod:of(calculation-10, reduction-13) case(numbers-16, in-14) det(numbers-16, the-15) nmod:in(reduction-13, numbers-16) case(Members-19, of-17) amod(Members-19, Scottish-18) nmod:of(numbers-16, Members-19) case(Parliament-21, of-20) nmod:of(Members-19, Parliament-21) mark(were-24, if-22) expl(were-24, there-23) advcl(made-8, were-24) det(Assembly-26, an-25) nsubj(were-24, Assembly-26) punct(made-8, ?-27)",0,1,0,"root(ROOT, made) ax(made, Has) nmod:poss(hon., my) amod(hon., right) nsbj(made, hon.) cc(hon., and) amod(Friend, learned) conj:and(hon., Friend) nsbj(made, Friend) det(calclation, any) dobj(made, calclation) case(redction, of) det(redction, the) nmod:of(calclation, redction) case(nmbers, in) det(nmbers, the) nmod:in(redction, nmbers) case(Members, of) amod(Members, Scottish) nmod:of(nmbers, Members) case(Parliament, of) nmod:of(Members, Parliament) mark(were, if) expl(were, there) advcl(made, were) det(Assembly, an) nsbj(were, Assembly) pnct(made, ?)","root(,VBD) ax(VBD,NNP) nmod:poss(NNP,PRP$) amod(PRP$,JJ) nsbj(VBD,VBD) cc(VBD,CC) amod(NNP,VBD) conj:and(VBD,NNP) nsbj(VBD,NNP) det(NN,DT) dobj(VBD,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNS,IN) det(NNS,DT) nmod:in(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:of(NNS,NNS) case(NNP,IN) nmod:of(NNS,NNP) mark(VBD,IN) expl(VBD,EX) advcl(VBD,VBD) det(NN,DT) nsbj(VBD,NN) pnct(VBD,VBD)","[right, ROOT, Friend, learned, hon., my, made, calculation, were, and]","[right, ROOT, Friend, learned, hon., my, made, calculation, were, and]",8,[ ],[ ],JJ_right NNP_Friend VBD_learned PRP$_my VBN_made NN_calculation VBD_were CC_and ,"[right, ROOT, Friend, learned, hon., my, made, calculation, were, and]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Not only would the creation of an Assembly of the kind proposed by the Labour party inevitably lead to a reduction in Scottish representation in the House of Commons  but one is entitled to assume that the achievement of what could be called Scottish home rule would lead inevitably to an expectation and requirement for English home rule.,NotRB onlyRB wouldMD theDT creationNN ofIN anDT AssemblyNN ofIN theDT kindNN proposedVBN byIN theDT LabourNNP partyNN inevitablyRB leadJJ toTO aDT reductionNN inIN ScottishJJ representationNN inIN theDT HouseNNP ofIN CommonsNNPS butCC oneCD isVBZ entitledVBN toTO assumeVB thatIN theDT achievementNN ofIN whatWP couldMD beVB calledVBN ScottishNNP homeNN ruleNN wouldMD leadVB inevitablyRB toTO anDT expectationNN andCC requirementNN forIN EnglishNNP homeNN ruleNN ,"root(ROOT-0, lead-18) neg(only-2, Not-1) advmod(lead-18, only-2) aux(lead-18, would-3) det(creation-5, the-4) nsubj(lead-18, creation-5) case(Assembly-8, of-6) det(Assembly-8, an-7) nmod:of(creation-5, Assembly-8) case(kind-11, of-9) det(kind-11, the-10) nmod:of(Assembly-8, kind-11) acl(kind-11, proposed-12) case(party-16, by-13) det(party-16, the-14) compound(party-16, Labour-15) nmod:by(proposed-12, party-16) advmod(lead-18, inevitably-17) case(reduction-21, to-19) det(reduction-21, a-20) nmod:to(lead-18, reduction-21) case(representation-24, in-22) amod(representation-24, Scottish-23) nmod:in(reduction-21, representation-24) case(House-27, in-25) det(House-27, the-26) nmod:in(reduction-21, House-27) case(Commons-29, of-28) nmod:of(House-27, Commons-29) punct(lead-18, ,-30) cc(lead-18, but-31) nsubjpass(entitled-34, one-32) auxpass(entitled-34, is-33) conj:but(lead-18, entitled-34) mark(assume-36, to-35) xcomp(entitled-34, assume-36) mark(lead-49, that-37) det(achievement-39, the-38) nsubj(lead-49, achievement-39) mark(called-44, of-40) nsubjpass(called-44, what-41) aux(called-44, could-42) auxpass(called-44, be-43) acl(achievement-39, called-44) amod(rule-47, Scottish-45) compound(rule-47, home-46) xcomp(called-44, rule-47) aux(lead-49, would-48) ccomp(assume-36, lead-49) advmod(lead-49, inevitably-50) case(expectation-53, to-51) det(expectation-53, an-52) nmod:to(inevitably-50, expectation-53) cc(expectation-53, and-54) nmod:to(inevitably-50, requirement-55) conj:and(expectation-53, requirement-55) case(rule-59, for-56) compound(rule-59, English-57) compound(rule-59, home-58) nmod:for(requirement-55, rule-59) punct(lead-18, .-60)",0,0,0,"root(ROOT, lead) neg(only, Not) advmod(lead, only) ax(lead, wold) det(creation, the) nsbj(lead, creation) case(Assembly, of) det(Assembly, an) nmod:of(creation, Assembly) case(kind, of) det(kind, the) nmod:of(Assembly, kind) acl(kind, proposed) case(party, by) det(party, the) compond(party, Labor) nmod:by(proposed, party) advmod(lead, inevitably) case(redction, to) det(redction, a) nmod:to(lead, redction) case(representation, in) amod(representation, Scottish) nmod:in(redction, representation) case(Hose, in) det(Hose, the) nmod:in(redction, Hose) case(Commons, of) nmod:of(Hose, Commons) pnct(lead, ,) cc(lead, bt) nsbjpass(entitled, one) axpass(entitled, is) conj:bt(lead, entitled) mark(assme, to) xcomp(entitled, assme) mark(lead, that) det(achievement, the) nsbj(lead, achievement) mark(called, of) nsbjpass(called, what) ax(called, cold) axpass(called, be) acl(achievement, called) amod(rle, Scottish) compond(rle, home) xcomp(called, rle) ax(lead, wold) ccomp(assme, lead) advmod(lead, inevitably) case(expectation, to) det(expectation, an) nmod:to(inevitably, expectation) cc(expectation, and) nmod:to(inevitably, reqirement) conj:and(expectation, reqirement) case(rle, for) compond(rle, English) compond(rle, home) nmod:for(reqirement, rle) pnct(lead, .)","root(,VB) neg(RB,RB) advmod(VB,RB) ax(VB,MD) det(NN,DT) nsbj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) acl(NN,VBN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:by(VBN,NN) advmod(VB,RB) case(NN,TO) det(NN,DT) nmod:to(VB,NN) case(NN,IN) amod(NN,NNP) nmod:in(NN,NN) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) case(NNPS,IN) nmod:of(NNP,NNPS) pnct(VB,VB) cc(VB,CC) nsbjpass(VBN,CD) axpass(VBN,VBZ) conj:bt(VB,VBN) mark(VB,TO) xcomp(VBN,VB) mark(VB,IN) det(NN,DT) nsbj(VB,NN) mark(VBN,IN) nsbjpass(VBN,WP) ax(VBN,MD) axpass(VBN,VB) acl(NN,VBN) amod(NN,NNP) compond(NN,NN) xcomp(VBN,NN) ax(VB,MD) ccomp(VB,VB) advmod(VB,RB) case(NN,TO) det(NN,DT) nmod:to(RB,NN) cc(NN,CC) nmod:to(RB,NN) conj:and(NN,NN) case(NN,IN) compond(NN,NNP) compond(NN,NN) nmod:for(NN,NN) pnct(VB,VB)","[party, proposed]","[party, proposed]",13,"[party, proposed]","[party, proposed]",NN_party VBN_proposed ,"[party, proposed]","[party, proposed]",NN_party VBN_proposed ,"[party, proposed]",NN_party VBN_proposed ,"[party, proposed]",NN_party VBN_proposed ,-3,0,2,0,0,0,0,0,0,0
[Interruption.],[JJ InterruptionNNP ]NN ,"root(ROOT-0, Interruption-2) punct(Interruption-2, -LSB--1) punct(Interruption-2, .-3) punct(Interruption-2, -RSB--4)",0,0,0,"root(ROOT, Interrption) pnct(Interrption, ) pnct(Interrption, .) pnct(Interrption, )","root(,NNP) pnct(NNP,) pnct(NNP,NNP) pnct(NNP,)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If they believe that English Members would be prepared to allow Scottish Members to continue to vote on English domestic legislation when they were no longer able to influence Scottish legislation  they have a profound misunderstanding of the concept of a democratic system of government.,IfIN theyPRP believeVBP thatIN EnglishJJ MembersNNS wouldMD beVB preparedVBN toTO allowVB ScottishJJ MembersNNS toTO continueVB toTO voteVB onIN EnglishNNP domesticJJ legislationNN whenWRB theyPRP wereVBD noRB longerRBR ableJJ toTO influenceVB ScottishJJ legislationNN theyPRP haveVBP aDT profoundJJ misunderstandingNN ofIN theDT conceptNN ofIN aDT democraticJJ systemNN ofIN governmentNN ,"root(ROOT-0, have-34) mark(believe-3, If-1) nsubj(believe-3, they-2) advcl(have-34, believe-3) mark(prepared-9, that-4) amod(Members-6, English-5) nsubjpass(prepared-9, Members-6) aux(prepared-9, would-7) auxpass(prepared-9, be-8) ccomp(believe-3, prepared-9) mark(allow-11, to-10) xcomp(prepared-9, allow-11) amod(Members-13, Scottish-12) dobj(allow-11, Members-13) mark(continue-15, to-14) xcomp(allow-11, continue-15) mark(vote-17, to-16) xcomp(continue-15, vote-17) case(legislation-21, on-18) compound(legislation-21, English-19) amod(legislation-21, domestic-20) nmod:on(vote-17, legislation-21) advmod(able-27, when-22) nsubj(able-27, they-23) cop(able-27, were-24) neg(longer-26, no-25) advmod(able-27, longer-26) advcl(allow-11, able-27) mark(influence-29, to-28) xcomp(able-27, influence-29) amod(legislation-31, Scottish-30) dobj(influence-29, legislation-31) punct(have-34, ,-32) nsubj(have-34, they-33) det(misunderstanding-37, a-35) amod(misunderstanding-37, profound-36) dobj(have-34, misunderstanding-37) case(concept-40, of-38) det(concept-40, the-39) nmod:of(misunderstanding-37, concept-40) case(system-44, of-41) det(system-44, a-42) amod(system-44, democratic-43) nmod:of(concept-40, system-44) case(government-46, of-45) nmod:of(system-44, government-46) punct(have-34, .-47)",0,0,0,"root(ROOT, have) mark(believe, If) nsbj(believe, they) advcl(have, believe) mark(prepared, that) amod(Members, English) nsbjpass(prepared, Members) ax(prepared, wold) axpass(prepared, be) ccomp(believe, prepared) mark(allow, to) xcomp(prepared, allow) amod(Members, Scottish) dobj(allow, Members) mark(contine, to) xcomp(allow, contine) mark(vote, to) xcomp(contine, vote) case(legislation, on) compond(legislation, English) amod(legislation, domestic) nmod:on(vote, legislation) advmod(able, when) nsbj(able, they) cop(able, were) neg(longer, no) advmod(able, longer) advcl(allow, able) mark(inflence, to) xcomp(able, inflence) amod(legislation, Scottish) dobj(inflence, legislation) pnct(have, ,) nsbj(have, they) det(misnderstanding, a) amod(misnderstanding, profond) dobj(have, misnderstanding) case(concept, of) det(concept, the) nmod:of(misnderstanding, concept) case(system, of) det(system, a) amod(system, democratic) nmod:of(concept, system) case(government, of) nmod:of(system, government) pnct(have, .)","root(,VBP) mark(VBP,IN) nsbj(VBP,PRP) advcl(VBP,VBP) mark(VBN,IN) amod(NNS,NNP) nsbjpass(VBN,NNS) ax(VBN,MD) axpass(VBN,VB) ccomp(VBP,VBN) mark(VB,TO) xcomp(VBN,VB) amod(NNS,JJ) dobj(VB,NNS) mark(VB,TO) xcomp(VB,VB) mark(VB,TO) xcomp(VB,VB) case(NN,IN) compond(NN,NNP) amod(NN,JJ) nmod:on(VB,NN) advmod(JJ,WRB) nsbj(JJ,PRP) cop(JJ,VBD) neg(RBR,RB) advmod(JJ,RBR) advcl(VB,JJ) mark(VB,TO) xcomp(JJ,VB) amod(NN,JJ) dobj(VB,NN) pnct(VBP,VBP) nsbj(VBP,PRP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. Gentleman fought the last election as a member of a party seeking to try to achieve a United Kingdom Government.,TheDT honNN GentlemanNNP foughtVBD theDT lastJJ electionNN asIN aDT memberNN ofIN aDT partyNN seekingVBG toTO tryVB toTO achieveVB aDT UnitedNNP KingdomNNP GovernmentNNP ,"root(ROOT-0, fought-4) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(fought-4, Gentleman-3) det(election-7, the-5) amod(election-7, last-6) dobj(fought-4, election-7) case(member-10, as-8) det(member-10, a-9) nmod:as(fought-4, member-10) case(party-13, of-11) det(party-13, a-12) nmod:of(member-10, party-13) acl(party-13, seeking-14) mark(try-16, to-15) xcomp(seeking-14, try-16) mark(achieve-18, to-17) xcomp(try-16, achieve-18) det(Government-22, a-19) compound(Government-22, United-20) compound(Government-22, Kingdom-21) dobj(achieve-18, Government-22) punct(fought-4, .-23)",0,1,0,"root(ROOT, foght) det(Gentleman, The) compond(Gentleman, hon.) nsbj(foght, Gentleman) det(election, the) amod(election, last) dobj(foght, election) case(member, as) det(member, a) nmod:as(foght, member) case(party, of) det(party, a) nmod:of(member, party) acl(party, seeking) mark(try, to) xcomp(seeking, try) mark(achieve, to) xcomp(try, achieve) det(Government, a) compond(Government, United) compond(Government, Kingdom) dobj(achieve, Government) pnct(foght, .)","root(,VBD) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NN,IN) det(NN,DT) nmod:as(VBD,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) acl(NN,VBG) mark(VB,TO) xcomp(VBG,VB) mark(VB,TO) xcomp(VB,VB) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) dobj(VB,NNP) pnct(VBD,VBD)","[achieve, fought, member, election, try, ROOT, Government, Gentleman]","[achieve, fought, member, election, try, ROOT, Government, Gentleman]",14,"[achieve, fought, member, election, try, ROOT, Government, Gentleman]","[achieve, fought, member, election, try, ROOT, Government, Gentleman]",VB_achieve VBD_fought NN_member NN_election VB_try NNP_Government NNP_Gentleman ,"[achieve, fought, member, election, try, ROOT, Government, Gentleman]","[achieve, fought, member, election, try, ROOT, Government, Gentleman]",VB_achieve VBD_fought NN_member NN_election VB_try NNP_Government NNP_Gentleman ,"[achieve, fought, member, election, try, ROOT, Government, Gentleman]",VB_achieve VBD_fought NN_member NN_election VB_try NNP_Government NNP_Gentleman ,"[achieve, fought, member, election, try, ROOT, Government, Gentleman]",VB_achieve VBD_fought NN_member NN_election VB_try NNP_Government NNP_Gentleman ,-3,0,2,0,0,0,0,0,0,0
I also remember that [Interruption.],IPRP alsoRB rememberVBP thatIN [NNP InterruptionNNP ]NN ,"root(ROOT-0, remember-3) nsubj(remember-3, I-1) advmod(remember-3, also-2) dobj(remember-3, that-4) punct(Interruption-6, -LSB--5) dep(that-4, Interruption-6) punct(Interruption-6, .-7) punct(Interruption-6, -RSB--8)",0,0,1,"root(ROOT, remember) nsbj(remember, I) advmod(remember, also) dobj(remember, that) pnct(Interrption, ) dep(that, Interrption) pnct(Interrption, .) pnct(Interrption, )","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) dobj(VBP,IN) pnct(NNP,) dep(IN,NNP) pnct(NNP,NNP) pnct(NNP,)",[ ],[ ],16,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I ask hon. Members to give the Secretary of State a fair hearing.,IPRP askVBP honJJ MembersNNS toTO giveVB theDT SecretaryNNP ofIN StateNNP aDT fairJJ hearingNN ,"root(ROOT-0, ask-2) nsubj(ask-2, I-1) compound(Members-4, hon.-3) dobj(ask-2, Members-4) mark(give-6, to-5) xcomp(ask-2, give-6) det(Secretary-8, the-7) iobj(give-6, Secretary-8) case(State-10, of-9) nmod:of(Secretary-8, State-10) det(hearing-13, a-11) amod(hearing-13, fair-12) dobj(give-6, hearing-13) punct(ask-2, .-14)",0,0,1,"root(ROOT, ask) nsbj(ask, I) compond(Members, hon.) dobj(ask, Members) mark(give, to) xcomp(ask, give) det(Secretary, the) iobj(give, Secretary) case(State, of) nmod:of(Secretary, State) det(hearing, a) amod(hearing, fair) dobj(give, hearing) pnct(ask, .)","root(,VBP) nsbj(VBP,PRP) compond(NNS,NNS) dobj(VBP,NNS) mark(VB,TO) xcomp(VBP,VB) det(NNP,DT) iobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(VBP,VBP)","[ask, hearing, give, State, Secretary]","[ask, hearing, give, State, Secretary]",16,"[ask, hearing, give, State, Secretary]","[ask, hearing, give, State, Secretary]",VB_ask NN_hearing VB_give NNP_State NNP_Secretary ,"[ask, hearing, give, State, Secretary]","[ask, hearing, give, State, Secretary]",VB_ask NN_hearing VB_give NNP_State NNP_Secretary ,"[ask, hearing, give, State, Secretary]",VB_ask NN_hearing VB_give NNP_State NNP_Secretary ,"[ask, hearing, give, State, Secretary]",VB_ask NN_hearing VB_give NNP_State NNP_Secretary ,-3,0,2,0,0,0,0,0,0,0
To ask the Secretary of State for Social Services what is the percentage change in expenditure on hospital and community health services in real terms  respectively  using the National Health Service pay and prices deflator  in the four Thames regional health authorities in total  between 1981 82 and the most recent year for which figures are available.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN SocialNNP ServicesNNPS whatWP isVBZ theDT percentageNN changeNN inIN expenditureNN onIN hospitalNN andCC communityNN healthNN servicesNNS inIN realJJ termsNNS respectivelyRB usingVBG theDT NationalNNP HealthNNP ServiceNNP payNN andCC pricesNNS deflatorNN inIN theDT fourCD ThamesNNP regionalJJ healthNN authoritiesNNS inIN totalNN betweenIN 1981CD 82CD andCC theDT mostRBS recentJJ yearNN forIN whichWDT figuresNNS areVBP availableJJ ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Services-9, for-7) compound(Services-9, Social-8) nmod:for(Secretary-4, Services-9) dep(ask-2, what-10) cop(what-10, is-11) det(change-14, the-12) compound(change-14, percentage-13) nsubj(what-10, change-14) case(expenditure-16, in-15) nmod:in(change-14, expenditure-16) case(hospital-18, on-17) nmod:on(expenditure-16, hospital-18) cc(hospital-18, and-19) compound(services-22, community-20) compound(services-22, health-21) nmod:on(expenditure-16, services-22) conj:and(hospital-18, services-22) case(terms-25, in-23) amod(terms-25, real-24) nmod:in(change-14, terms-25) punct(what-10, ,-26) advmod(what-10, respectively-27) punct(what-10, ,-28) dep(what-10, using-29) det(pay-34, the-30) compound(pay-34, National-31) compound(pay-34, Health-32) compound(pay-34, Service-33) dobj(using-29, pay-34) cc(pay-34, and-35) compound(deflator-37, prices-36) dobj(using-29, deflator-37) conj:and(pay-34, deflator-37) punct(using-29, ,-38) case(authorities-45, in-39) det(authorities-45, the-40) nummod(authorities-45, four-41) compound(authorities-45, Thames-42) amod(authorities-45, regional-43) compound(authorities-45, health-44) nmod:in(using-29, authorities-45) case(total-47, in-46) nmod:in(authorities-45, total-47) punct(using-29, ,-48) case(82-51, between-49) compound(82-51, 1981-50) nmod:between(using-29, 82-51) cc(82-51, and-52) det(year-56, the-53) advmod(recent-55, most-54) amod(year-56, recent-55) nmod:between(using-29, year-56) conj:and(82-51, year-56) mark(available-61, for-57) det(figures-59, which-58) nsubj(available-61, figures-59) cop(available-61, are-60) dep(82-51, available-61) punct(ask-2, .-62)",0,0,0,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Services, for) compond(Services, Social) nmod:for(Secretary, Services) dep(ask, what) cop(what, is) det(change, the) compond(change, percentage) nsbj(what, change) case(expenditre, in) nmod:in(change, expenditre) case(hospital, on) nmod:on(expenditre, hospital) cc(hospital, and) compond(services, commnity) compond(services, health) nmod:on(expenditre, services) conj:and(hospital, services) case(terms, in) amod(terms, real) nmod:in(change, terms) pnct(what, ,) advmod(what, respectively) pnct(what, ,) dep(what, sing) det(pay, the) compond(pay, National) compond(pay, Health) compond(pay, Service) dobj(sing, pay) cc(pay, and) compond(deflator, prices) dobj(sing, deflator) conj:and(pay, deflator) pnct(sing, ,) case(athorities, in) det(athorities, the) nmmod(athorities, for) compond(athorities, Thames) amod(athorities, regional) compond(athorities, health) nmod:in(sing, athorities) case(total, in) nmod:in(athorities, total) pnct(sing, ,) case(82, between) compond(82, 1981) nmod:between(sing, 82) cc(82, and) det(year, the) advmod(recent, most) amod(year, recent) nmod:between(sing, year) conj:and(82, year) mark(available, for) det(figres, which) nsbj(available, figres) cop(available, are) dep(82, available) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNPS,IN) compond(NNPS,NNP) nmod:for(NNP,NNPS) dep(VB,WP) cop(WP,VBZ) det(NN,DT) compond(NN,NN) nsbj(WP,NN) case(NN,IN) nmod:in(NN,NN) case(NN,IN) nmod:on(NN,NN) cc(NN,CC) compond(NNS,NN) compond(NNS,NN) nmod:on(NN,NNS) conj:and(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:in(NN,NNS) pnct(WP,WP) advmod(WP,RB) pnct(WP,WP) dep(WP,VBG) det(NN,DT) compond(NN,NNP) compond(NN,NNP) compond(NN,NNP) dobj(VBG,NN) cc(NN,CC) compond(NN,NNS) dobj(VBG,NN) conj:and(NN,NN) pnct(VBG,VBG) case(NNS,IN) det(NNS,DT) nmmod(NNS,CD) compond(NNS,NNP) amod(NNS,JJ) compond(NNS,NN) nmod:in(VBG,NNS) case(NN,IN) nmod:in(NNS,NN) pnct(VBG,VBG) case(CD,IN) compond(CD,CD) nmod:between(VBG,CD) cc(CD,CC) det(NN,DT) advmod(JJ,RBS) amod(NN,JJ) nmod:between(VBG,NN) conj:and(CD,NN) mark(JJ,IN) det(NNS,WDT) nsbj(JJ,NNS) cop(JJ,VBP) dep(CD,JJ) pnct(VB,VB)","[Secretary, ask, Services, what, State, ROOT]","[Secretary, ask, Services, what, State, ROOT]",1,"[Secretary, ask, Services, what, State, ROOT]","[Secretary, ask, Services, what, State, ROOT]",NNP_Secretary VB_ask NNPS_Services WP_what NNP_State ,"[Secretary, ask, Services, what, State, ROOT]","[Secretary, ask, Services, what, State, ROOT]",NNP_Secretary VB_ask NNPS_Services WP_what NNP_State ,[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Between 1981 82 and 1986 87 gross revenue expenditure in the four Thames regions rose by 29 4 per cent.,BetweenJJ 1981CD 82CD andCC 1986CD 87CD grossJJ revenueNN expenditureNN inIN theDT fourCD ThamesNNP regionsNNS roseVBD byIN 29CD 4CD perIN centNN ,"root(ROOT-0, rose-15) case(82-3, Between-1) compound(82-3, 1981-2) nsubj(rose-15, 82-3) cc(82-3, and-4) nummod(expenditure-9, 1986-5) nummod(expenditure-9, 87-6) amod(expenditure-9, gross-7) compound(expenditure-9, revenue-8) conj:and(82-3, expenditure-9) nsubj(rose-15, expenditure-9) case(regions-14, in-10) det(regions-14, the-11) nummod(regions-14, four-12) compound(regions-14, Thames-13) nmod:in(82-3, regions-14) case(4-18, by-16) compound(4-18, 29-17) nmod:by(rose-15, 4-18) case(cent-20, per-19) nmod:per(4-18, cent-20) punct(rose-15, .-21)",0,1,0,"root(ROOT, rose) case(82, Between) compond(82, 1981) nsbj(rose, 82) cc(82, and) nmmod(expenditre, 1986) nmmod(expenditre, 87) amod(expenditre, gross) compond(expenditre, revene) conj:and(82, expenditre) nsbj(rose, expenditre) case(regions, in) det(regions, the) nmmod(regions, for) compond(regions, Thames) nmod:in(82, regions) case(4, by) compond(4, 29) nmod:by(rose, 4) case(cent, per) nmod:per(4, cent) pnct(rose, .)","root(,VBD) case(CD,JJ) compond(CD,CD) nsbj(VBD,CD) cc(CD,CC) nmmod(NN,CD) nmmod(NN,CD) amod(NN,JJ) compond(NN,NN) conj:and(CD,NN) nsbj(VBD,NN) case(NNS,IN) det(NNS,DT) nmmod(NNS,CD) compond(NNS,NNP) nmod:in(CD,NNS) case(CD,IN) compond(CD,CD) nmod:by(VBD,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBD,VBD)",[ ],[ ],1,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Compared with the rise in general inflation  this represents a real terms increase of 1 2 per cent.,ComparedVBN withIN theDT riseNN inIN generalJJ inflationNN thisDT representsVBZ aDT realJJ termsNNS increaseNN ofIN 1CD 2CD perIN centNN ,"root(ROOT-0, represents-10) case(rise-4, Compared-1) mwe(Compared-1, with-2) det(rise-4, the-3) nmod:compared_with(represents-10, rise-4) case(inflation-7, in-5) amod(inflation-7, general-6) nmod:in(rise-4, inflation-7) punct(represents-10, ,-8) nsubj(represents-10, this-9) det(increase-14, a-11) amod(increase-14, real-12) compound(increase-14, terms-13) dobj(represents-10, increase-14) acl(increase-14, of-15) compound(2-17, 1-16) dobj(of-15, 2-17) case(cent-19, per-18) nmod:per(2-17, cent-19) punct(represents-10, .-20)",0,0,0,"root(ROOT, represents) case(rise, Compared) mwe(Compared, with) det(rise, the) nmod:compared_with(represents, rise) case(inflation, in) amod(inflation, general) nmod:in(rise, inflation) pnct(represents, ,) nsbj(represents, this) det(increase, a) amod(increase, real) compond(increase, terms) dobj(represents, increase) acl(increase, of) compond(2, 1) dobj(of, 2) case(cent, per) nmod:per(2, cent) pnct(represents, .)","root(,VBZ) case(NN,VBN) mwe(VBN,IN) det(NN,DT) nmod:compared_with(VBZ,NN) case(NN,IN) amod(NN,JJ) nmod:in(NN,NN) pnct(VBZ,VBZ) nsbj(VBZ,DT) det(NN,DT) amod(NN,JJ) compond(NN,NNS) dobj(VBZ,NN) acl(NN,IN) compond(CD,CD) dobj(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBZ,VBZ)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
National Health Service pay and price inflation was comparatively high across this period.,NationalNNP HealthNNP ServiceNNP payNN andCC priceNN inflationNN wasVBD comparativelyRB highJJ acrossIN thisDT periodNN ,"root(ROOT-0, high-10) compound(pay-4, National-1) compound(pay-4, Health-2) compound(pay-4, Service-3) nsubj(high-10, pay-4) cc(pay-4, and-5) compound(inflation-7, price-6) conj:and(pay-4, inflation-7) nsubj(high-10, inflation-7) cop(high-10, was-8) advmod(high-10, comparatively-9) case(period-13, across-11) det(period-13, this-12) nmod:across(high-10, period-13) punct(high-10, .-14)",0,0,0,"root(ROOT, high) compond(pay, National) compond(pay, Health) compond(pay, Service) nsbj(high, pay) cc(pay, and) compond(inflation, price) conj:and(pay, inflation) nsbj(high, inflation) cop(high, was) advmod(high, comparatively) case(period, across) det(period, this) nmod:across(high, period) pnct(high, .)","root(,JJ) compond(NN,NNP) compond(NN,NNP) compond(NN,NNP) nsbj(JJ,NN) cc(NN,CC) compond(NN,NN) conj:and(NN,NN) nsbj(JJ,NN) cop(JJ,VBD) advmod(JJ,RB) case(NN,IN) det(NN,DT) nmod:across(JJ,NN) pnct(JJ,JJ)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Compared with that measure Thames regions' expenditure dropped by some 2.8 per cent.  although this was more than offset by increased efficiency.,ComparedVBN withIN thatDT measureNN ThamesNNP regionsNNS 'POS expenditureNN droppedVBN byIN someDT 28CD perIN centNN althoughIN thisDT wasVBD moreRBR thanIN offsetVBN byIN increasedJJ efficiencyNN ,"root(ROOT-0, dropped-9) amod(expenditure-8, Compared-1) case(measure-4, with-2) det(measure-4, that-3) nmod:with(Compared-1, measure-4) amod(expenditure-8, Thames-5) nmod:poss(expenditure-8, regions-6) case(regions-6, '-7) nsubj(dropped-9, expenditure-8) nmod(dropped-9, by-10) dep(by-10, some-11) amod(some-11, 2.8-12) case(cent.-14, per-13) nmod:per(2.8-12, cent.-14) punct(some-11, ,-15) mark(offset-21, although-16) nsubjpass(offset-21, this-17) auxpass(offset-21, was-18) advmod(offset-21, more-19) mwe(more-19, than-20) advcl(some-11, offset-21) case(efficiency-24, by-22) amod(efficiency-24, increased-23) nmod:agent(offset-21, efficiency-24) punct(dropped-9, .-25)",0,0,0,"root(ROOT, dropped) amod(expenditre, Compared) case(measre, with) det(measre, that) nmod:with(Compared, measre) amod(expenditre, Thames) nmod:poss(expenditre, regions) ""case(regions, )"", nsbj(dropped, expenditre) nmod(dropped, by) dep(by, some) amod(some, 2.8) case(cent., per) nmod:per(2.8, cent.) pnct(some, ,) mark(offset, althogh) nsbjpass(offset, this) axpass(offset, was) advmod(offset, more) mwe(more, than) advcl(some, offset) case(efficiency, by) amod(efficiency, increased) nmod:agent(offset, efficiency) pnct(dropped, .)","root(,VBN) amod(NN,VBN) case(NN,IN) det(NN,DT) nmod:with(VBN,NN) amod(NN,NNP) nmod:poss(NN,NNS) case(NNS,POS) nsbj(VBN,NN) nmod(VBN,IN) dep(IN,DT) amod(DT,DT) case(DT,IN) nmod:per(IN,IN) pnct(DT,DT) mark(VBN,IN) nsbjpass(VBN,DT) axpass(VBN,VBD) advmod(VBN,RBR) mwe(RBR,IN) advcl(DT,VBN) case(NN,IN) amod(NN,JJ) nmod:agent(VBN,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Taking this into account  the purchasing power of the Thames regions rose in real terms by 2 per cent.  and  most important  the numbers of cases treated in all specialties rose between 1982 and 1986 by 8.7 per cent.,TakingVBG thisDT intoIN accountNN theDT purchasingVBG powerNN ofIN theDT ThamesNNP regionsNNS roseVBD inIN realJJ termsNNS byIN 2CD perIN centNN andCC mostRBS importantJJ theDT numbersNNS ofIN casesNNS treatedVBN inIN allDT specialtiesNNS roseVBD betweenIN 1982CD andCC 1986CD byIN 87CD perIN centNN ,"root(ROOT-0, rose-13) advcl(rose-13, Taking-1) dobj(Taking-1, this-2) case(account-4, into-3) nmod:into(Taking-1, account-4) punct(rose-13, ,-5) det(power-8, the-6) amod(power-8, purchasing-7) nsubj(rose-13, power-8) case(regions-12, of-9) det(regions-12, the-10) compound(regions-12, Thames-11) nmod:of(power-8, regions-12) case(terms-16, in-14) amod(terms-16, real-15) nmod:in(rose-13, terms-16) case(2-18, by-17) nmod:by(rose-13, 2-18) case(cent.-20, per-19) nmod:per(2-18, cent.-20) punct(rose-13, ,-21) cc(rose-13, and-22) punct(rose-35, ,-23) advmod(important-25, most-24) advmod(rose-35, important-25) punct(rose-35, ,-26) det(numbers-28, the-27) nsubj(rose-35, numbers-28) case(cases-30, of-29) nmod:of(numbers-28, cases-30) acl(cases-30, treated-31) case(specialties-34, in-32) det(specialties-34, all-33) nmod:in(treated-31, specialties-34) conj:and(rose-13, rose-35) case(1982-37, between-36) nmod:between(rose-35, 1982-37) cc(1982-37, and-38) nmod:between(rose-35, 1986-39) conj:and(1982-37, 1986-39) case(8.7-41, by-40) nmod:by(rose-35, 8.7-41) case(cent-43, per-42) nmod:per(8.7-41, cent-43) punct(rose-13, .-44)",0,0,0,"root(ROOT, rose) advcl(rose, Taking) dobj(Taking, this) case(accont, into) nmod:into(Taking, accont) pnct(rose, ,) det(power, the) amod(power, prchasing) nsbj(rose, power) case(regions, of) det(regions, the) compond(regions, Thames) nmod:of(power, regions) case(terms, in) amod(terms, real) nmod:in(rose, terms) case(2, by) nmod:by(rose, 2) case(cent., per) nmod:per(2, cent.) pnct(rose, ,) cc(rose, and) pnct(rose, ,) advmod(important, most) advmod(rose, important) pnct(rose, ,) det(nmbers, the) nsbj(rose, nmbers) case(cases, of) nmod:of(nmbers, cases) acl(cases, treated) case(specialties, in) det(specialties, all) nmod:in(treated, specialties) conj:and(rose, rose) case(1982, between) nmod:between(rose, 1982) cc(1982, and) nmod:between(rose, 1986) conj:and(1982, 1986) case(8.7, by) nmod:by(rose, 8.7) case(cent, per) nmod:per(8.7, cent) pnct(rose, .)","root(,VBD) advcl(VBD,VBG) dobj(VBG,DT) case(NN,IN) nmod:into(VBG,NN) pnct(VBD,VBD) det(NN,DT) amod(NN,VBG) nsbj(VBD,NN) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:of(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:in(VBD,NNS) case(CD,IN) nmod:by(VBD,CD) case(CD,IN) nmod:per(CD,CD) pnct(VBD,VBD) cc(VBD,CC) pnct(VBD,VBD) advmod(JJ,RBS) advmod(VBD,JJ) pnct(VBD,VBD) det(NNS,DT) nsbj(VBD,NNS) case(NNS,IN) nmod:of(NNS,NNS) acl(NNS,VBN) case(NNS,IN) det(NNS,DT) nmod:in(VBN,NNS) conj:and(VBD,VBD) case(CD,IN) nmod:between(VBD,CD) cc(CD,CC) nmod:between(VBD,CD) conj:and(CD,CD) case(CD,IN) nmod:by(VBD,VBD) case(NN,IN) nmod:per(IN,NN) pnct(VBD,VBD)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
in Greater London.,inIN GreaterNNP LondonNNP ,"root(ROOT-0, London-3) case(London-3, in-1) compound(London-3, Greater-2) punct(London-3, .-4)",0,0,1,"root(ROOT, London) case(London, in) compond(London, Greater) pnct(London, .)","root(,NNP) case(NNP,IN) compond(NNP,NNP) pnct(NNP,NNP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am grateful for those figures  but if we look at them carefully do they not confirm that the most crucial part of the answer is that  as we have suspected for a long time  over the last five years in the south east of England and the Thames regions there has been a cut in real terms in expenditure in the Health Service?,IPRP amVBP gratefulJJ forIN thoseDT figuresNNS butCC ifIN wePRP lookVBP atIN themPRP carefullyRB doVBP theyPRP notRB confirmVBP thatIN theDT mostRBS crucialJJ partNN ofIN theDT answerNN isVBZ thatIN asIN wePRP haveVBP suspectedVBN forIN aDT longJJ timeNN overIN theDT lastJJ fiveCD yearsNNS inIN theDT southJJ eastNN ofIN EnglandNNP andCC theDT ThamesNNP regionsNNS thereRB hasVBZ beenVBN aDT cutNN inIN realJJ termsNNS inIN expenditureNN inIN theDT HealthNNP ServiceNNP ,"root(ROOT-0, grateful-3) nsubj(grateful-3, I-1) cop(grateful-3, am-2) case(figures-6, for-4) det(figures-6, those-5) nmod:for(grateful-3, figures-6) punct(grateful-3, ,-7) cc(grateful-3, but-8) mark(look-11, if-9) nsubj(look-11, we-10) advcl(confirm-18, look-11) case(them-13, at-12) nmod:at(look-11, them-13) advmod(look-11, carefully-14) aux(confirm-18, do-15) nsubj(confirm-18, they-16) neg(confirm-18, not-17) conj:but(grateful-3, confirm-18) mark(is-27, that-19) det(part-23, the-20) advmod(crucial-22, most-21) amod(part-23, crucial-22) nsubj(is-27, part-23) case(answer-26, of-24) det(answer-26, the-25) nmod:of(part-23, answer-26) ccomp(confirm-18, is-27) dep(is-27, that-28) punct(that-28, ,-29) mark(suspected-33, as-30) nsubj(suspected-33, we-31) aux(suspected-33, have-32) dep(,-29, suspected-33) case(time-37, for-34) det(time-37, a-35) amod(time-37, long-36) nmod:for(suspected-33, time-37) punct(suspected-33, ,-38) case(years-43, over-39) det(years-43, the-40) amod(years-43, last-41) nummod(years-43, five-42) root(,-38, years-43) case(east-47, in-44) det(east-47, the-45) amod(east-47, south-46) nmod:in(years-43, east-47) case(England-49, of-48) nmod:of(east-47, England-49) cc(years-43, and-50) det(regions-53, the-51) compound(regions-53, Thames-52) root(,-38, regions-53) conj:and(years-43, regions-53) expl(cut-58, there-54) aux(cut-58, has-55) cop(cut-58, been-56) det(cut-58, a-57) acl:relcl(regions-53, cut-58) case(terms-61, in-59) amod(terms-61, real-60) nmod:in(cut-58, terms-61) case(expenditure-63, in-62) nmod:in(cut-58, expenditure-63) case(Service-67, in-64) det(Service-67, the-65) compound(Service-67, Health-66) nmod:in(expenditure-63, Service-67) punct(years-43, ?-68)",0,0,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) case(figres, for) det(figres, those) nmod:for(gratefl, figres) pnct(gratefl, ,) cc(gratefl, bt) mark(look, if) nsbj(look, we) advcl(confirm, look) case(them, at) nmod:at(look, them) advmod(look, careflly) ax(confirm, do) nsbj(confirm, they) neg(confirm, not) conj:bt(gratefl, confirm) mark(is, that) det(part, the) advmod(crcial, most) amod(part, crcial) nsbj(is, part) case(answer, of) det(answer, the) nmod:of(part, answer) ccomp(confirm, is) dep(is, that) pnct(that, ,) mark(sspected, as) nsbj(sspected, we) ax(sspected, have) dep(,, sspected) case(time, for) det(time, a) amod(time, long) nmod:for(sspected, time) pnct(sspected, ,) case(years, over) det(years, the) amod(years, last) nmmod(years, five) root(,, years) case(east, in) det(east, the) amod(east, soth) nmod:in(years, east) case(England, of) nmod:of(east, England) cc(years, and) det(regions, the) compond(regions, Thames) root(,, regions) conj:and(years, regions) expl(ct, there) ax(ct, has) cop(ct, been) det(ct, a) acl:relcl(regions, ct) case(terms, in) amod(terms, real) nmod:in(ct, terms) case(expenditre, in) nmod:in(ct, expenditre) case(Service, in) det(Service, the) compond(Service, Health) nmod:in(expenditre, Service) pnct(years, ?)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) case(NNS,IN) det(NNS,DT) nmod:for(JJ,NNS) pnct(JJ,JJ) cc(JJ,CC) mark(VBP,IN) nsbj(VBP,PRP) advcl(VBP,VBP) case(PRP,IN) nmod:at(VBP,PRP) advmod(VBP,RB) ax(VBP,VBP) nsbj(VBP,PRP) neg(VBP,RB) conj:bt(JJ,VBP) mark(VBZ,IN) det(NN,DT) advmod(JJ,RBS) amod(NN,JJ) nsbj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) ccomp(VBP,VBZ) dep(VBZ,IN) pnct(IN,IN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) dep(VBPVBPVBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(VBN,NN) pnct(VBN,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) root(CDCDNNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) cc(NNS,CC) det(NNS,DT) compond(NNS,NNP) root(NNPNNPNNS) conj:and(NNS,NNS) expl(NN,RB) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) acl:relcl(NNS,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(NN,NNS) case(NN,IN) nmod:in(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) pnct(NNS,NNS)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Secretary of State confirm that the Health Service is in such difficulties in the south east  putting aside efficiency improvements and the rest  because the double effect of RAWP on inner London and south east of England health districts means that they have suffered most from cuts?,WillMD theDT SecretaryNNP ofIN StateNNP confirmNN thatIN theDT HealthNNP ServiceNNP isVBZ inIN suchJJ difficultiesNNS inIN theDT southJJ eastJJ puttingVBG asideJJ efficiencyNN improvementsNNS andCC theDT restNN becauseIN theDT doubleJJ effectNN ofIN RAWPNNP onIN innerJJ LondonNNP andCC southJJ eastNN ofIN EnglandNNP healthNN districtsNNS meansVBZ thatIN theyPRP haveVBP sufferedVBN mostJJS fromIN cutsNNS ,"root(ROOT-0, confirm-6) aux(confirm-6, Will-1) det(Secretary-3, the-2) nsubj(confirm-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(difficulties-14, that-7) det(Service-10, the-8) compound(Service-10, Health-9) nsubj(difficulties-14, Service-10) cop(difficulties-14, is-11) case(difficulties-14, in-12) amod(difficulties-14, such-13) ccomp(confirm-6, difficulties-14) case(east-18, in-15) det(east-18, the-16) amod(east-18, south-17) nmod:in(difficulties-14, east-18) punct(difficulties-14, ,-19) dep(difficulties-14, putting-20) compound:prt(putting-20, aside-21) compound(improvements-23, efficiency-22) dobj(putting-20, improvements-23) cc(putting-20, and-24) det(rest-26, the-25) dep(difficulties-14, rest-26) conj:and(putting-20, rest-26) punct(difficulties-14, ,-27) mark(means-44, because-28) det(effect-31, the-29) amod(effect-31, double-30) nsubj(means-44, effect-31) case(RAWP-33, of-32) nmod:of(effect-31, RAWP-33) case(London-36, on-34) amod(London-36, inner-35) nmod:on(effect-31, London-36) cc(London-36, and-37) advmod(east-39, south-38) nmod:on(effect-31, east-39) conj:and(London-36, east-39) case(districts-43, of-40) compound(districts-43, England-41) compound(districts-43, health-42) nmod:of(east-39, districts-43) advcl(difficulties-14, means-44) mark(suffered-48, that-45) nsubj(suffered-48, they-46) aux(suffered-48, have-47) ccomp(means-44, suffered-48) advmod(cuts-51, most-49) case(cuts-51, from-50) nmod:from(suffered-48, cuts-51) punct(confirm-6, ?-52)",0,0,0,"root(ROOT, confirm) ax(confirm, Will) det(Secretary, the) nsbj(confirm, Secretary) case(State, of) nmod:of(Secretary, State) mark(difficlties, that) det(Service, the) compond(Service, Health) nsbj(difficlties, Service) cop(difficlties, is) case(difficlties, in) amod(difficlties, sch) ccomp(confirm, difficlties) case(east, in) det(east, the) amod(east, soth) nmod:in(difficlties, east) pnct(difficlties, ,) dep(difficlties, ptting) compond:prt(ptting, aside) compond(improvements, efficiency) dobj(ptting, improvements) cc(ptting, and) det(rest, the) dep(difficlties, rest) conj:and(ptting, rest) pnct(difficlties, ,) mark(means, becase) det(effect, the) amod(effect, doble) nsbj(means, effect) case(RAWP, of) nmod:of(effect, RAWP) case(London, on) amod(London, inner) nmod:on(effect, London) cc(London, and) advmod(east, soth) nmod:on(effect, east) conj:and(London, east) case(districts, of) compond(districts, England) compond(districts, health) nmod:of(east, districts) advcl(difficlties, means) mark(sffered, that) nsbj(sffered, they) ax(sffered, have) ccomp(means, sffered) advmod(cts, most) case(cts, from) nmod:from(sffered, cts) pnct(confirm, ?)","root(,NN) ax(NN,MD) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(NNS,IN) det(NNP,DT) compond(NNP,NNP) nsbj(NNS,NNP) cop(NNS,VBZ) case(NNS,IN) amod(NNS,JJ) ccomp(NN,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NNS,NN) pnct(NNS,NNS) dep(NNS,VBG) compond:prt(VBG,JJ) compond(NNS,NN) dobj(VBG,NNS) cc(VBG,CC) det(NN,DT) dep(NNS,NN) conj:and(VBG,NN) pnct(NNS,NNS) mark(VBZ,IN) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) case(NNP,IN) nmod:of(NN,NNP) case(NNP,IN) amod(NNP,JJ) nmod:on(NN,NNP) cc(NNP,CC) advmod(NN,JJ) nmod:on(NN,NN) conj:and(NNP,NN) case(NNS,IN) compond(NNS,NNP) compond(NNS,NN) nmod:of(NN,NNS) advcl(NNS,VBZ) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(VBZ,VBN) advmod(NNS,JJS) case(NNS,IN) nmod:from(VBN,NNS) pnct(NN,NN)","[confirm, ROOT, State, Secretary, difficulties]","[confirm, ROOT, State, Secretary, difficulties]",3,[ ],[ ],NN_confirm NNP_State NNP_Secretary NNS_difficulties ,"[confirm, ROOT, State, Secretary, difficulties]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The consequences that we now see  in bed closures and the like  are the result of those figures  which have hit this part of Britain worse than any other.,TheDT consequencesNNS thatIN wePRP nowRB seeVBP inIN bedNN closuresNNS andCC theDT likeJJ areVBP theDT resultNN ofIN thoseDT figuresNNS whichWDT haveVBP hitVBN thisDT partNN ofIN BritainNNP worseJJR thanIN anyDT otherJJ ,"root(ROOT-0, result-17) det(consequences-2, The-1) nsubj(result-17, consequences-2) dobj(see-6, that-3) nsubj(see-6, we-4) advmod(see-6, now-5) acl:relcl(consequences-2, see-6) punct(see-6, ,-7) case(closures-10, in-8) compound(closures-10, bed-9) nmod:in(see-6, closures-10) cc(closures-10, and-11) det(like-13, the-12) nmod:in(see-6, like-13) conj:and(closures-10, like-13) punct(see-6, ,-14) cop(result-17, are-15) det(result-17, the-16) case(figures-20, of-18) det(figures-20, those-19) nmod:of(result-17, figures-20) punct(figures-20, ,-21) nsubj(hit-24, which-22) aux(hit-24, have-23) acl:relcl(figures-20, hit-24) det(part-26, this-25) dobj(hit-24, part-26) case(Britain-28, of-27) nmod:of(part-26, Britain-28) advmod(hit-24, worse-29) case(other-32, than-30) det(other-32, any-31) nmod:than(worse-29, other-32) punct(result-17, .-33)",0,0,0,"root(ROOT, reslt) det(conseqences, The) nsbj(reslt, conseqences) dobj(see, that) nsbj(see, we) advmod(see, now) acl:relcl(conseqences, see) pnct(see, ,) case(closres, in) compond(closres, bed) nmod:in(see, closres) cc(closres, and) det(like, the) nmod:in(see, like) conj:and(closres, like) pnct(see, ,) cop(reslt, are) det(reslt, the) case(figres, of) det(figres, those) nmod:of(reslt, figres) pnct(figres, ,) nsbj(hit, which) ax(hit, have) acl:relcl(figres, hit) det(part, this) dobj(hit, part) case(Britain, of) nmod:of(part, Britain) advmod(hit, worse) case(other, than) det(other, any) nmod:than(worse, other) pnct(reslt, .)","root(,NN) det(NNS,DT) nsbj(NN,NNS) dobj(VBP,IN) nsbj(VBP,PRP) advmod(VBP,RB) acl:relcl(NNS,VBP) pnct(VBP,VBP) case(NNS,IN) compond(NNS,NN) nmod:in(VBP,NNS) cc(NNS,CC) det(JJ,DT) nmod:in(VBP,JJ) conj:and(NNS,JJ) pnct(VBP,VBP) cop(NN,VBP) det(NN,DT) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(NNS,NNS) nsbj(VBN,WDT) ax(VBN,VBP) acl:relcl(NNS,VBN) det(NN,DT) dobj(VBN,NN) case(NNP,IN) nmod:of(NN,NNP) advmod(VBN,JJR) case(JJ,IN) det(JJ,DT) nmod:than(JJR,JJ) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
First  let me remind the hon. Gentleman that  as I said  there has been a real terms increase.,FirstNNP letVB mePRP remindVB theDT honNN GentlemanNNP thatIN asIN IPRP saidVBD thereEX hasVBZ beenVBN aDT realJJ termsNNS increaseNN ,"root(ROOT-0, let-3) advmod(let-3, First-1) punct(let-3, ,-2) nsubj(remind-5, me-4) ccomp(let-3, remind-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) dobj(remind-5, Gentleman-8) nsubj(increase-21, that-9) punct(increase-21, ,-10) mark(said-13, as-11) nsubj(said-13, I-12) dep(increase-21, said-13) punct(terms-20, ,-14) expl(terms-20, there-15) aux(terms-20, has-16) cop(terms-20, been-17) det(terms-20, a-18) amod(terms-20, real-19) nsubj(increase-21, terms-20) ccomp(remind-5, increase-21) punct(let-3, .-22)",0,0,0,"root(ROOT, let) advmod(let, First) pnct(let, ,) nsbj(remind, me) ccomp(let, remind) det(Gentleman, the) compond(Gentleman, hon.) dobj(remind, Gentleman) nsbj(increase, that) pnct(increase, ,) mark(said, as) nsbj(said, I) dep(increase, said) pnct(terms, ,) expl(terms, there) ax(terms, has) cop(terms, been) det(terms, a) amod(terms, real) nsbj(increase, terms) ccomp(remind, increase) pnct(let, .)","root(,VB) advmod(VB,NNP) pnct(VB,VB) nsbj(VB,PRP) ccomp(VB,VB) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) nsbj(NN,IN) pnct(NN,NN) mark(VBD,IN) nsbj(VBD,PRP) dep(NN,VBD) pnct(NNS,NNS) expl(NNS,EX) ax(NNS,VBZ) cop(NNS,VBN) det(NNS,DT) amod(NNS,JJ) nsbj(NN,NNS) ccomp(VB,NN) pnct(VB,VB)","[me, Gentleman, increase, let, remind]","[me, Gentleman, increase, let, remind]",3,"[me, Gentleman, increase, let, remind]","[me, Gentleman, increase, let, remind]",PRP_me NNP_Gentleman VB_increase VB_let VBP_remind ,"[me, Gentleman, increase, let, remind]","[me, Gentleman, increase, let, remind]",PRP_me NNP_Gentleman VB_increase VB_let VBP_remind ,"[me, Gentleman, increase, let, remind]",PRP_me NNP_Gentleman VB_increase VB_let VBP_remind ,"[me, Gentleman, increase, let, remind]",PRP_me NNP_Gentleman VB_increase VB_let VBP_remind ,-3,0,1,0,0,0,0,0,0,0
Like the hon. Gentleman  I represent a London area constituency  so I am conscious of the Thames regions' position on RAWP.,LikeIN theDT honNN GentlemanNNP IPRP representVBP aDT LondonNNP areaNN constituencyNN soRB IPRP amVBP consciousJJ ofIN theDT ThamesNNP regionsNNS 'POS positionNN onIN RAWPNNP ,"root(ROOT-0, represent-7) case(Gentleman-4, Like-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nmod:like(represent-7, Gentleman-4) punct(represent-7, ,-5) nsubj(represent-7, I-6) det(constituency-11, a-8) compound(constituency-11, London-9) compound(constituency-11, area-10) dobj(represent-7, constituency-11) punct(represent-7, ,-12) mark(conscious-16, so-13) nsubj(conscious-16, I-14) cop(conscious-16, am-15) advcl(represent-7, conscious-16) case(position-22, of-17) det(regions-20, the-18) compound(regions-20, Thames-19) nmod:poss(position-22, regions-20) case(regions-20, '-21) nmod:of(conscious-16, position-22) case(RAWP-24, on-23) nmod:on(position-22, RAWP-24) punct(represent-7, .-25)",0,0,0,"root(ROOT, represent) case(Gentleman, Like) det(Gentleman, the) compond(Gentleman, hon.) nmod:like(represent, Gentleman) pnct(represent, ,) nsbj(represent, I) det(constitency, a) compond(constitency, London) compond(constitency, area) dobj(represent, constitency) pnct(represent, ,) mark(conscios, so) nsbj(conscios, I) cop(conscios, am) advcl(represent, conscios) case(position, of) det(regions, the) compond(regions, Thames) nmod:poss(position, regions) ""case(regions, )"", nmod:of(conscios, position) case(RAWP, on) nmod:on(position, RAWP) pnct(represent, .)","root(,VBP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:like(VBP,NNP) pnct(VBP,VBP) nsbj(VBP,PRP) det(NN,DT) compond(NN,NNP) compond(NN,NN) dobj(VBP,NN) pnct(VBP,VBP) mark(JJ,RB) nsbj(JJ,PRP) cop(JJ,VBP) advcl(VBP,JJ) case(NN,IN) det(NNS,DT) compond(NNS,NNP) nmod:poss(NN,NNS) case(NNS,POS) nmod:of(JJ,NN) case(NNP,IN) nmod:on(NN,NNP) pnct(VBP,VBP)","[represent, conscious, I, ROOT, constituency, Gentleman]","[represent, conscious, I, ROOT, constituency, Gentleman]",4,"[represent, conscious, I, ROOT, constituency, Gentleman]","[represent, conscious, I, ROOT, constituency, Gentleman]",VB_represent JJ_conscious PRP_I NN_constituency NNP_Gentleman ,"[represent, conscious, I, ROOT, constituency, Gentleman]","[represent, conscious, I, ROOT, constituency, Gentleman]",VB_represent JJ_conscious PRP_I NN_constituency NNP_Gentleman ,"[represent, conscious, I, ROOT, constituency, Gentleman]",VB_represent JJ_conscious PRP_I NN_constituency NNP_Gentleman ,"[represent, conscious, I, ROOT, constituency, Gentleman]",VB_represent JJ_conscious PRP_I NN_constituency NNP_Gentleman ,-3,0,2,0,0,0,0,0,0,0
But this is the curcial point for hon. Members who represent London areas   in 1993  at the end of the strategic planning period  London will still have more beds per head of population than the national average.,ButCC thisDT isVBZ theDT curcialJJ pointNN forIN honJJ MembersNNS whoWP representVBP LondonNNP areasNNS inIN 1993CD atIN theDT endNN ofIN theDT strategicJJ planningNN periodNN LondonNNP willMD stillRB haveVB moreJJR bedsNNS perIN headNN ofIN populationNN thanIN theDT nationalJJ averageNN ,"root(ROOT-0, have-29) cc(point-6, But-1) nsubj(point-6, this-2) cop(point-6, is-3) det(point-6, the-4) amod(point-6, curcial-5) ccomp(have-29, point-6) case(Members-9, for-7) compound(Members-9, hon.-8) nmod:for(point-6, Members-9) nsubj(represent-11, who-10) acl:relcl(Members-9, represent-11) compound(areas-13, London-12) dobj(represent-11, areas-13) case(1993-15, in-14) nmod:in(represent-11, 1993-15) punct(point-6, ,-16) case(end-19, at-17) det(end-19, the-18) nmod:at(point-6, end-19) case(period-24, of-20) det(period-24, the-21) amod(period-24, strategic-22) compound(period-24, planning-23) nmod:of(end-19, period-24) punct(have-29, ,-25) nsubj(have-29, London-26) aux(have-29, will-27) advmod(have-29, still-28) advmod(beds-31, more-30) dobj(have-29, beds-31) case(head-33, per-32) nmod:per(beds-31, head-33) case(population-35, of-34) nmod:of(head-33, population-35) case(average-39, than-36) det(average-39, the-37) amod(average-39, national-38) nmod:than(beds-31, average-39) punct(have-29, .-40)",0,0,0,"root(ROOT, have) cc(point, Bt) nsbj(point, this) cop(point, is) det(point, the) amod(point, crcial) ccomp(have, point) case(Members, for) compond(Members, hon.) nmod:for(point, Members) nsbj(represent, who) acl:relcl(Members, represent) compond(areas, London) dobj(represent, areas) case(1993, in) nmod:in(represent, 1993) pnct(point, ,) case(end, at) det(end, the) nmod:at(point, end) case(period, of) det(period, the) amod(period, strategic) compond(period, planning) nmod:of(end, period) pnct(have, ,) nsbj(have, London) ax(have, will) advmod(have, still) advmod(beds, more) dobj(have, beds) case(head, per) nmod:per(beds, head) case(poplation, of) nmod:of(head, poplation) case(average, than) det(average, the) amod(average, national) nmod:than(beds, average) pnct(have, .)","root(,VB) cc(NN,CC) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(VB,NN) case(NNS,IN) compond(NNS,NNS) nmod:for(NN,NNS) nsbj(VBP,WP) acl:relcl(NNS,VBP) compond(NNS,NNP) dobj(VBP,NNS) case(CD,IN) nmod:in(VBP,CD) pnct(NN,NN) case(NN,IN) det(NN,DT) nmod:at(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) pnct(VB,VB) nsbj(VB,NNP) ax(VB,MD) advmod(VB,RB) advmod(NNS,JJR) dobj(VB,NNS) case(NN,IN) nmod:per(NNS,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:than(NNS,NN) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the Minister consider urging one of those Thames authorities  namely  South East Thames in the interests of efficiency and of increasing its income  on which expenditure depends urgently to start realising the income from the numerous empty properties throughout the region for which it has no further use?,WillMD theDT MinisterNNP considerVB urgingVBG oneCD ofIN thoseDT ThamesNNP authoritiesNNS namelyRB SouthNNP EastNNP ThamesNNP inIN theDT interestsNNS ofIN efficiencyNN andCC ofIN increasingVBG itsPRP$ incomeNN onIN whichWDT expenditureNN dependsVBZ urgentlyRB toTO startVB realisingVBG theDT incomeNN fromIN theDT numerousJJ emptyJJ propertiesNNS throughoutIN theDT regionNN forIN whichWDT itPRP hasVBZ noDT furtherJJ useNN ,"root(ROOT-0, consider-4) aux(consider-4, Will-1) det(Minister-3, the-2) nsubj(consider-4, Minister-3) xcomp(consider-4, urging-5) dobj(urging-5, one-6) case(authorities-10, of-7) det(authorities-10, those-8) compound(authorities-10, Thames-9) nmod:of(one-6, authorities-10) punct(consider-4, ,-11) advmod(depends-31, namely-12) punct(depends-31, ,-13) compound(Thames-16, South-14) compound(Thames-16, East-15) nsubj(depends-31, Thames-16) case(interests-19, in-17) det(interests-19, the-18) nmod:in(Thames-16, interests-19) case(efficiency-21, of-20) nmod:of(interests-19, efficiency-21) cc(Thames-16, and-22) mark(increasing-24, of-23) conj:and(Thames-16, increasing-24) nsubj(depends-31, increasing-24) nmod:poss(income-26, its-25) dobj(increasing-24, income-26) punct(increasing-24, ,-27) case(expenditure-30, on-28) det(expenditure-30, which-29) nmod:on(increasing-24, expenditure-30) parataxis(consider-4, depends-31) advmod(depends-31, urgently-32) mark(start-34, to-33) xcomp(depends-31, start-34) xcomp(start-34, realising-35) det(income-37, the-36) dobj(realising-35, income-37) case(properties-42, from-38) det(properties-42, the-39) amod(properties-42, numerous-40) amod(properties-42, empty-41) nmod:from(realising-35, properties-42) case(region-45, throughout-43) det(region-45, the-44) nmod:throughout(properties-42, region-45) case(which-47, for-46) nmod:for(has-49, which-47) nsubj(has-49, it-48) acl:relcl(region-45, has-49) neg(use-52, no-50) amod(use-52, further-51) dobj(has-49, use-52) punct(consider-4, ?-53)",0,0,0,"root(ROOT, consider) ax(consider, Will) det(Minister, the) nsbj(consider, Minister) xcomp(consider, rging) dobj(rging, one) case(athorities, of) det(athorities, those) compond(athorities, Thames) nmod:of(one, athorities) pnct(consider, ,) advmod(depends, namely) pnct(depends, ,) compond(Thames, Soth) compond(Thames, East) nsbj(depends, Thames) case(interests, in) det(interests, the) nmod:in(Thames, interests) case(efficiency, of) nmod:of(interests, efficiency) cc(Thames, and) mark(increasing, of) conj:and(Thames, increasing) nsbj(depends, increasing) nmod:poss(income, its) dobj(increasing, income) pnct(increasing, ,) case(expenditre, on) det(expenditre, which) nmod:on(increasing, expenditre) parataxis(consider, depends) advmod(depends, rgently) mark(start, to) xcomp(depends, start) xcomp(start, realising) det(income, the) dobj(realising, income) case(properties, from) det(properties, the) amod(properties, nmeros) amod(properties, empty) nmod:from(realising, properties) case(region, throghot) det(region, the) nmod:throghot(properties, region) case(which, for) nmod:for(has, which) nsbj(has, it) acl:relcl(region, has) neg(se, no) amod(se, frther) dobj(has, se) pnct(consider, ?)","root(,VB) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) xcomp(VB,VBG) dobj(VBG,CD) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:of(CD,NNS) pnct(VB,VB) advmod(VBZ,RB) pnct(VBZ,VBZ) compond(NNP,NNP) compond(NNP,NNP) nsbj(VBZ,NNP) case(NNS,IN) det(NNS,DT) nmod:in(NNP,NNS) case(NN,IN) nmod:of(NNS,NN) cc(NNP,CC) mark(VBG,IN) conj:and(NNP,VBG) nsbj(VBZ,VBG) nmod:poss(NN,PRP$) dobj(VBG,NN) pnct(VBG,VBG) case(NN,IN) det(NN,WDT) nmod:on(VBG,NN) parataxis(VB,VBZ) advmod(VBZ,RB) mark(VB,TO) xcomp(VBZ,VB) xcomp(VB,VBG) det(NN,DT) dobj(VBG,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) nmod:from(VBG,NNS) case(NN,IN) det(NN,DT) nmod:throghot(NNS,NN) case(WDT,IN) nmod:for(VBZ,WDT) nsbj(VBZ,PRP) acl:relcl(NN,VBZ) neg(NN,DT) amod(NN,JJ) dobj(VBZ,NN) pnct(VB,VB)","[consider, ROOT, urging, Minister]","[consider, ROOT, urging, Minister]",4,[ ],[ ],VBP_consider VBG_urging NNP_Minister ,"[consider, ROOT, urging, Minister]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As she will know  in the new Health and Medicines Bill we are specifically encouraging the generation of income from health authorities' resources.,AsIN shePRP willMD knowVB inIN theDT newJJ HealthNNP andCC MedicinesNNP BillNNP wePRP areVBP specificallyRB encouragingVBG theDT generationNN ofIN incomeNN fromIN healthNN authoritiesNNS 'POS resourcesNNS ,"root(ROOT-0, encouraging-16) mark(know-4, As-1) nsubj(know-4, she-2) aux(know-4, will-3) advcl(encouraging-16, know-4) punct(encouraging-16, ,-5) case(Health-9, in-6) det(Health-9, the-7) amod(Health-9, new-8) nmod:in(encouraging-16, Health-9) cc(Health-9, and-10) compound(Bill-12, Medicines-11) conj:and(Health-9, Bill-12) nmod:in(encouraging-16, Bill-12) nsubj(encouraging-16, we-13) aux(encouraging-16, are-14) advmod(encouraging-16, specifically-15) det(generation-18, the-17) dobj(encouraging-16, generation-18) case(income-20, of-19) nmod:of(generation-18, income-20) case(resources-25, from-21) compound(authorities-23, health-22) nmod:poss(resources-25, authorities-23) case(authorities-23, '-24) nmod:from(income-20, resources-25) punct(encouraging-16, .-26)",0,0,0,"root(ROOT, encoraging) mark(know, As) nsbj(know, she) ax(know, will) advcl(encoraging, know) pnct(encoraging, ,) case(Health, in) det(Health, the) amod(Health, new) nmod:in(encoraging, Health) cc(Health, and) compond(Bill, Medicines) conj:and(Health, Bill) nmod:in(encoraging, Bill) nsbj(encoraging, we) ax(encoraging, are) advmod(encoraging, specifically) det(generation, the) dobj(encoraging, generation) case(income, of) nmod:of(generation, income) case(resorces, from) compond(athorities, health) nmod:poss(resorces, athorities) ""case(athorities, )"", nmod:from(income, resorces) pnct(encoraging, .)","root(,VBG) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VBG,VB) pnct(VBG,VBG) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:in(VBG,NNP) cc(NNP,CC) compond(NNP,NNP) conj:and(NNP,NNP) nmod:in(VBG,NNP) nsbj(VBG,PRP) ax(VBG,VBP) advmod(VBG,RB) det(NN,DT) dobj(VBG,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) compond(NNS,NN) nmod:poss(NNS,NNS) case(NNS,POS) nmod:from(NN,NNS) pnct(VBG,VBG)","[know, she, encouraging]","[know, she, encouraging]",5,[ ],[ ],VB_know PRP_she JJ_encouraging ,"[know, she, encouraging]","[know, she, encouraging]",VB_know PRP_she JJ_encouraging ,"[know, she, encouraging]",VB_know PRP_she JJ_encouraging ,"[know, she, encouraging]",VB_know PRP_she JJ_encouraging ,-3,0,2,1,1,1,1,1,1,2
I shall draw the attention of the region and the area to her remarks.,IPRP shallMD drawVB theDT attentionNN ofIN theDT regionNN andCC theDT areaNN toTO herPRP$ remarksNNS ,"root(ROOT-0, draw-3) nsubj(draw-3, I-1) aux(draw-3, shall-2) det(attention-5, the-4) dobj(draw-3, attention-5) case(region-8, of-6) det(region-8, the-7) nmod:of(attention-5, region-8) cc(region-8, and-9) det(area-11, the-10) nmod:of(attention-5, area-11) conj:and(region-8, area-11) case(remarks-14, to-12) nmod:poss(remarks-14, her-13) nmod:to(draw-3, remarks-14) punct(draw-3, .-15)",0,0,1,"root(ROOT, draw) nsbj(draw, I) ax(draw, shall) det(attention, the) dobj(draw, attention) case(region, of) det(region, the) nmod:of(attention, region) cc(region, and) det(area, the) nmod:of(attention, area) conj:and(region, area) case(remarks, to) nmod:poss(remarks, her) nmod:to(draw, remarks) pnct(draw, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) cc(NN,CC) det(NN,DT) nmod:of(NN,NN) conj:and(NN,NN) case(NNS,TO) nmod:poss(NNS,PRP$) nmod:to(VB,NNS) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The resources that have gone into the National Health Service over the past eight years have been immense.,TheDT resourcesNNS thatWDT haveVBP goneVBN intoIN theDT NationalNNP HealthNNP ServiceNNP overIN theDT pastJJ eightCD yearsNNS haveVBP beenVBN immenseJJ ,"root(ROOT-0, immense-18) det(resources-2, The-1) nsubj(immense-18, resources-2) nsubj(gone-5, that-3) aux(gone-5, have-4) acl:relcl(resources-2, gone-5) case(Service-10, into-6) det(Service-10, the-7) compound(Service-10, National-8) compound(Service-10, Health-9) nmod:into(gone-5, Service-10) case(years-15, over-11) det(years-15, the-12) amod(years-15, past-13) nummod(years-15, eight-14) nmod:over(gone-5, years-15) aux(immense-18, have-16) cop(immense-18, been-17) punct(immense-18, .-19)",0,0,0,"root(ROOT, immense) det(resorces, The) nsbj(immense, resorces) nsbj(gone, that) ax(gone, have) acl:relcl(resorces, gone) case(Service, into) det(Service, the) compond(Service, National) compond(Service, Health) nmod:into(gone, Service) case(years, over) det(years, the) amod(years, past) nmmod(years, eight) nmod:over(gone, years) ax(immense, have) cop(immense, been) pnct(immense, .)","root(,JJ) det(NNS,DT) nsbj(JJ,NNS) nsbj(VBN,WDT) ax(VBN,VBP) acl:relcl(NNS,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:into(VBN,NNP) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:over(VBN,NNS) ax(JJ,VBP) cop(JJ,VBN) pnct(JJ,JJ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The essence of the question related to the nature of patients served.,TheDT essenceNN ofIN theDT questionNN relatedVBN toTO theDT natureNN ofIN patientsNNS servedVBD ,"root(ROOT-0, served-12) det(essence-2, The-1) nsubj(served-12, essence-2) case(question-5, of-3) det(question-5, the-4) nmod:of(essence-2, question-5) amod(question-5, related-6) case(nature-9, to-7) det(nature-9, the-8) nmod:to(related-6, nature-9) case(patients-11, of-10) nmod:of(nature-9, patients-11) punct(served-12, .-13)",0,0,0,"root(ROOT, served) det(essence, The) nsbj(served, essence) case(qestion, of) det(qestion, the) nmod:of(essence, qestion) amod(qestion, related) case(natre, to) det(natre, the) nmod:to(related, natre) case(patients, of) nmod:of(natre, patients) pnct(served, .)","root(,VBD) det(NN,DT) nsbj(VBD,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) amod(NN,VBN) case(NN,TO) det(NN,DT) nmod:to(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBD,VBD)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is interesting to note that between 1974 and 1979 in the area in question the Thames region the increase in acute patients and in patients treated was 4 per cent.  whereas since 1979 acute patient activity has increased by 15 per cent.,ItPRP isVBZ interestingVBG toTO noteVB thatIN betweenIN 1974CD andCC 1979CD inIN theDT areaNN inIN questionNN theDT ThamesNNPS regionNN theDT increaseNN inIN acuteJJ patientsNNS andCC inIN patientsNNS treatedVBN wasVBD 4CD perIN centNN whereasNNS sinceIN 1979CD acuteJJ patientNN activityNN hasVBZ increasedVBN byIN 15CD perIN centNN ,"root(ROOT-0, interesting-3) nsubj(interesting-3, It-1) cop(interesting-3, is-2) mark(note-5, to-4) xcomp(interesting-3, note-5) dobj(note-5, that-6) case(1974-8, between-7) nmod:between(that-6, 1974-8) cc(1974-8, and-9) nmod:between(that-6, 1979-10) conj:and(1974-8, 1979-10) case(area-13, in-11) det(area-13, the-12) nmod:in(1974-8, area-13) case(question-15, in-14) nmod:in(1974-8, question-15) det(region-18, the-16) compound(region-18, Thames-17) dobj(question-15, region-18) det(increase-20, the-19) dep(region-18, increase-20) case(patients-23, in-21) amod(patients-23, acute-22) nmod:in(increase-20, patients-23) cc(increase-20, and-24) case(patients-26, in-25) dep(region-18, patients-26) conj:and(increase-20, patients-26) acl(patients-26, treated-27) dep(increase-20, was-28) nsubj(was-28, 4-29) case(cent.-31, per-30) nmod:per(4-29, cent.-31) punct(was-28, ,-32) mark(increased-40, whereas-33) mark(increased-40, since-34) nummod(activity-38, 1979-35) amod(activity-38, acute-36) compound(activity-38, patient-37) nsubj(increased-40, activity-38) aux(increased-40, has-39) advcl(was-28, increased-40) case(15-42, by-41) nmod:by(increased-40, 15-42) case(cent-44, per-43) nmod:per(15-42, cent-44) punct(interesting-3, .-45)",0,0,0,"root(ROOT, interesting) nsbj(interesting, It) cop(interesting, is) mark(note, to) xcomp(interesting, note) dobj(note, that) case(1974, between) nmod:between(that, 1974) cc(1974, and) nmod:between(that, 1979) conj:and(1974, 1979) case(area, in) det(area, the) nmod:in(1974, area) case(qestion, in) nmod:in(1974, qestion) det(region, the) compond(region, Thames) dobj(qestion, region) det(increase, the) dep(region, increase) case(patients, in) amod(patients, acte) nmod:in(increase, patients) cc(increase, and) case(patients, in) dep(region, patients) conj:and(increase, patients) acl(patients, treated) dep(increase, was) nsbj(was, 4) case(cent., per) nmod:per(4, cent.) pnct(was, ,) mark(increased, whereas) mark(increased, since) nmmod(activity, 1979) amod(activity, acte) compond(activity, patient) nsbj(increased, activity) ax(increased, has) advcl(was, increased) case(15, by) nmod:by(increased, 15) case(cent, per) nmod:per(15, cent) pnct(interesting, .)","root(,VBG) nsbj(VBG,PRP) cop(VBG,VBZ) mark(VB,TO) xcomp(VBG,VB) dobj(VB,IN) case(CD,IN) nmod:between(IN,CD) cc(CD,CC) nmod:between(IN,CD) conj:and(CD,CD) case(NN,IN) det(NN,DT) nmod:in(CD,NN) case(NN,IN) nmod:in(CD,NN) det(NN,DT) compond(NN,NNPS) dobj(NN,NN) det(NN,DT) dep(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(NN,NNS) cc(NN,CC) case(NNS,IN) dep(NN,NNS) conj:and(NN,NNS) acl(NNS,VBN) dep(NN,VBD) nsbj(VBD,CD) case(CD,IN) nmod:per(CD,CD) pnct(VBD,VBD) mark(VBN,NNS) mark(VBN,IN) nmmod(NN,CD) amod(NN,JJ) compond(NN,NN) nsbj(VBN,NN) ax(VBN,VBZ) advcl(VBD,VBN) case(CD,IN) nmod:by(VBN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBG,VBG)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is the measure of real care about which we are concerned.,ThatDT isVBZ theDT measureNN ofIN realJJ careNN aboutIN whichWDT wePRP areVBP concernedJJ ,"root(ROOT-0, measure-4) nsubj(measure-4, That-1) cop(measure-4, is-2) det(measure-4, the-3) case(care-7, of-5) amod(care-7, real-6) nmod:of(measure-4, care-7) case(which-9, about-8) nmod:about(concerned-12, which-9) nsubjpass(concerned-12, we-10) auxpass(concerned-12, are-11) acl:relcl(care-7, concerned-12) punct(measure-4, .-13)",0,0,1,"root(ROOT, measre) nsbj(measre, That) cop(measre, is) det(measre, the) case(care, of) amod(care, real) nmod:of(measre, care) case(which, abot) nmod:abot(concerned, which) nsbjpass(concerned, we) axpass(concerned, are) acl:relcl(care, concerned) pnct(measre, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) case(WDT,IN) nmod:abot(JJ,WDT) nsbjpass(JJ,PRP) axpass(JJ,VBP) acl:relcl(NN,JJ) pnct(NN,NN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have listened carefully to my right hon. Friend's remarks and  as he will recall  I have raised this matter with him in the past.,IPRP haveVBP listenedVBN carefullyRB toTO myPRP$ rightJJ honNN FriendNNP 'sPOS remarksNNS andCC asIN hePRP willMD recallVB IPRP haveVBP raisedVBN thisDT matterNN withIN himPRP inIN theDT pastNN ,"root(ROOT-0, listened-3) nsubj(listened-3, I-1) aux(listened-3, have-2) advmod(listened-3, carefully-4) case(remarks-11, to-5) nmod:poss(Friend-9, my-6) amod(Friend-9, right-7) compound(Friend-9, hon.-8) nmod:poss(remarks-11, Friend-9) case(Friend-9, 's-10) nmod:to(listened-3, remarks-11) cc(listened-3, and-12) punct(listened-3, ,-13) mark(recall-17, as-14) nsubj(recall-17, he-15) aux(recall-17, will-16) advcl(listened-3, recall-17) punct(recall-17, ,-18) nsubj(raised-21, I-19) aux(raised-21, have-20) parataxis(recall-17, raised-21) det(matter-23, this-22) dobj(raised-21, matter-23) case(him-25, with-24) nmod:with(raised-21, him-25) case(past-28, in-26) det(past-28, the-27) nmod:in(raised-21, past-28) punct(listened-3, .-29)",0,0,0,"root(ROOT, listened) nsbj(listened, I) ax(listened, have) advmod(listened, careflly) case(remarks, to) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:poss(remarks, Friend) ""case(Friend, s)"", nmod:to(listened, remarks) cc(listened, and) pnct(listened, ,) mark(recall, as) nsbj(recall, he) ax(recall, will) advcl(listened, recall) pnct(recall, ,) nsbj(raised, I) ax(raised, have) parataxis(recall, raised) det(matter, this) dobj(raised, matter) case(him, with) nmod:with(raised, him) case(past, in) det(past, the) nmod:in(raised, past) pnct(listened, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) case(NNS,TO) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) nmod:to(VBN,NNS) cc(VBN,CC) pnct(VBN,VBN) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VBN,VB) pnct(VB,VB) nsbj(VBN,PRP) ax(VBN,VBP) parataxis(VB,VBN) det(NN,DT) dobj(VBN,NN) case(PRP,IN) nmod:with(VBN,PRP) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) pnct(VBN,VBN)","[right, my, listened, he, Friend, recall]","[my, listened, recall, Friend, he]",8,"[Friend, my]","[Friend, my]",PRP$_my VBN_listened NN_recall NNP_Friend PRP_he ,"[my, listened, recall, Friend, he]","[my, listened, recall, Friend, he]",PRP$_my VBN_listened NN_recall NNP_Friend PRP_he ,"[my, listened, recall, Friend, he]",PRP$_my VBN_listened NN_recall NNP_Friend PRP_he ,"[my, listened, recall, Friend, he]",PRP$_my VBN_listened NN_recall NNP_Friend PRP_he ,-3,0,1,2,1,2,2,2,2,1
However  is it not clear that if  as is alleged  1 400 fewer beds are available in the Thames regions this year than were available last year  there is at least the implication of a threat of a reduction in patient care in constituencies in those areas?,HoweverRB isVBZ itPRP notRB clearJJ thatIN ifIN asRB isVBZ allegedVBN 1CD 400CD fewerJJR bedsNNS areVBP availableJJ inIN theDT ThamesNNP regionsNNS thisDT yearNN thanIN wereVBD availableJJ lastJJ yearNN thereEX isVBZ atIN leastJJS theDT implicationNN ofIN aDT threatNN ofIN aDT reductionNN inIN patientNN careNN inIN constituenciesNNS inIN thoseDT areasNNS ,"root(ROOT-0, clear-6) advmod(clear-6, However-1) punct(clear-6, ,-2) aux(clear-6, is-3) nsubj(clear-6, it-4) neg(clear-6, not-5) mark(is-32, that-7) mark(available-18, if-8) punct(alleged-12, ,-9) mark(alleged-12, as-10) auxpass(alleged-12, is-11) parataxis(available-18, alleged-12) punct(alleged-12, ,-13) nummod(beds-16, 1,400-14) amod(beds-16, fewer-15) nsubj(available-18, beds-16) cop(available-18, are-17) advcl(is-32, available-18) case(regions-22, in-19) det(regions-22, the-20) compound(regions-22, Thames-21) nmod:in(available-18, regions-22) det(year-24, this-23) nmod:tmod(available-18, year-24) mark(available-27, than-25) cop(available-27, were-26) advcl(available-18, available-27) amod(year-29, last-28) nmod:tmod(available-27, year-29) punct(is-32, ,-30) expl(is-32, there-31) ccomp(clear-6, is-32) case(least-34, at-33) nmod:npmod(implication-36, least-34) det(implication-36, the-35) nsubj(is-32, implication-36) case(threat-39, of-37) det(threat-39, a-38) nmod:of(implication-36, threat-39) case(reduction-42, of-40) det(reduction-42, a-41) nmod:of(threat-39, reduction-42) case(care-45, in-43) compound(care-45, patient-44) nmod:in(reduction-42, care-45) case(constituencies-47, in-46) nmod:in(reduction-42, constituencies-47) case(areas-50, in-48) det(areas-50, those-49) nmod:in(reduction-42, areas-50) punct(clear-6, ?-51)",0,0,0,"root(ROOT, clear) advmod(clear, However) pnct(clear, ,) ax(clear, is) nsbj(clear, it) neg(clear, not) mark(is, that) mark(available, if) pnct(alleged, ,) mark(alleged, as) axpass(alleged, is) parataxis(available, alleged) pnct(alleged, ,) nmmod(beds, 1,400) amod(beds, fewer) nsbj(available, beds) cop(available, are) advcl(is, available) case(regions, in) det(regions, the) compond(regions, Thames) nmod:in(available, regions) det(year, this) nmod:tmod(available, year) mark(available, than) cop(available, were) advcl(available, available) amod(year, last) nmod:tmod(available, year) pnct(is, ,) expl(is, there) ccomp(clear, is) case(least, at) nmod:npmod(implication, least) det(implication, the) nsbj(is, implication) case(threat, of) det(threat, a) nmod:of(implication, threat) case(redction, of) det(redction, a) nmod:of(threat, redction) case(care, in) compond(care, patient) nmod:in(redction, care) case(constitencies, in) nmod:in(redction, constitencies) case(areas, in) det(areas, those) nmod:in(redction, areas) pnct(clear, ?)","root(,JJ) advmod(JJ,RB) pnct(JJ,JJ) ax(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) mark(VBZ,IN) mark(JJ,IN) pnct(VBN,VBN) mark(VBN,RB) axpass(VBN,VBZ) parataxis(JJ,VBN) pnct(VBN,VBN) nmmod(NNS,NNS) amod(NNS,JJR) nsbj(JJ,NNS) cop(JJ,VBP) advcl(VBZ,JJ) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:in(JJ,NNS) det(NN,DT) nmod:tmod(JJ,NN) mark(JJ,IN) cop(JJ,VBD) advcl(JJ,JJ) amod(NN,JJ) nmod:tmod(JJ,NN) pnct(VBZ,VBZ) expl(VBZ,EX) ccomp(JJ,VBZ) case(JJS,IN) nmod:npmod(NN,JJS) det(NN,DT) nsbj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) compond(NN,NN) nmod:in(NN,NN) case(NNS,IN) nmod:in(NN,NNS) case(NNS,IN) det(NNS,DT) nmod:in(NN,NNS) pnct(JJ,JJ)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does that not mean that we should at least speed up the review of RAWP  which  I remind my right hon. Friend  his predecessor promised in October 1986?,DoesNNS thatWDT notRB meanVB thatIN wePRP shouldMD atIN leastJJS speedVB upRP theDT reviewNN ofIN RAWPNNP whichWDT IPRP remindVBP myPRP$ rightJJ honNN FriendNNP hisPRP$ predecessorNN promisedVBN inIN OctoberNNP 1986CD ,"root(ROOT-0, mean-4) aux(mean-4, Does-1) nsubj(mean-4, that-2) neg(mean-4, not-3) mark(speed-10, that-5) nsubj(speed-10, we-6) aux(speed-10, should-7) case(least-9, at-8) nmod:at(speed-10, least-9) ccomp(mean-4, speed-10) compound:prt(speed-10, up-11) det(review-13, the-12) dobj(speed-10, review-13) case(RAWP-15, of-14) nmod:of(review-13, RAWP-15) punct(RAWP-15, ,-16) dep(remind-20, which-17) punct(remind-20, ,-18) nsubj(remind-20, I-19) acl:relcl(RAWP-15, remind-20) nmod:poss(Friend-24, my-21) amod(Friend-24, right-22) compound(Friend-24, hon.-23) dobj(remind-20, Friend-24) punct(Friend-24, ,-25) nmod:poss(predecessor-27, his-26) nsubj(promised-28, predecessor-27) acl:relcl(Friend-24, promised-28) case(October-30, in-29) nmod:in(promised-28, October-30) nummod(October-30, 1986-31) punct(mean-4, ?-32)",0,0,0,"root(ROOT, mean) ax(mean, Does) nsbj(mean, that) neg(mean, not) mark(speed, that) nsbj(speed, we) ax(speed, shold) case(least, at) nmod:at(speed, least) ccomp(mean, speed) compond:prt(speed, p) det(review, the) dobj(speed, review) case(RAWP, of) nmod:of(review, RAWP) pnct(RAWP, ,) dep(remind, which) pnct(remind, ,) nsbj(remind, I) acl:relcl(RAWP, remind) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) dobj(remind, Friend) pnct(Friend, ,) nmod:poss(predecessor, his) nsbj(promised, predecessor) acl:relcl(Friend, promised) case(October, in) nmod:in(promised, October) nmmod(October, 1986) pnct(mean, ?)","root(,VB) ax(VB,NNS) nsbj(VB,IN) neg(VB,RB) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) case(JJS,IN) nmod:at(VB,JJS) ccomp(VB,VB) compond:prt(VB,RP) det(NN,DT) dobj(VB,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(NNP,NNP) dep(VBP,WDT) pnct(VBP,VBP) nsbj(VBP,PRP) acl:relcl(NNP,VBP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dobj(VBP,NNP) pnct(NNP,NNP) nmod:poss(NN,PRP$) nsbj(VBN,NN) acl:relcl(NNP,VBN) case(NNP,IN) nmod:in(VBN,NNP) nmmod(NNP,CD) pnct(VB,VB)","[ , I, mean, remind, Friend, promised, ROOT, speed, my, RAWP, right, which, review, predecessor, October]","[ , I, mean, remind, Friend, promised, his, speed, my, RAWP, ROOT, which, review, predecessor, October]",9,"[ , I, mean, remind, Friend, promised, his, speed, my, RAWP, ROOT, which, review, predecessor, October]","[ , I, mean, remind, Friend, promised, his, speed, my, RAWP, ROOT, which, review, predecessor, October]",PRP_I VB_mean VBP_remind NNP_Friend VBN_promised PRP$_his VB_speed PRP$_my NNP_RAWP WDT_which NN_review NN_predecessor NNP_October ,"[ , I, mean, remind, Friend, promised, his, speed, my, RAWP, ROOT, which, review, predecessor, October]","[ , I, mean, remind, Friend, promised, his, speed, my, RAWP, ROOT, which, review, predecessor, October]",PRP_I VB_mean VBP_remind NNP_Friend VBN_promised PRP$_his VB_speed PRP$_my NNP_RAWP WDT_which NN_review NN_predecessor NNP_October ,"[ , I, mean, remind, Friend, promised, his, speed, my, RAWP, ROOT, which, review, predecessor, October]",PRP_I VB_mean VBP_remind NNP_Friend VBN_promised PRP$_his VB_speed PRP$_my NNP_RAWP WDT_which NN_review NN_predecessor NNP_October ,"[ , I, mean, remind, Friend, promised, his, speed, my, RAWP, ROOT, which, review, predecessor, October]",PRP_I VB_mean VBP_remind NNP_Friend VBN_promised PRP$_his VB_speed PRP$_my NNP_RAWP WDT_which NN_review NN_predecessor NNP_October ,-3,0,1,1,1,1,1,1,1,1
Like me  my hon. Friend represents a Thames region health authority area.,LikeIN mePRP myPRP$ honNN FriendNNP representsVBZ aDT ThamesNNP regionNN healthNN authorityNN areaNN ,"root(ROOT-0, represents-7) case(me-2, Like-1) nmod:like(represents-7, me-2) punct(represents-7, ,-3) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) nsubj(represents-7, Friend-6) det(area-13, a-8) compound(area-13, Thames-9) compound(area-13, region-10) compound(area-13, health-11) compound(area-13, authority-12) dobj(represents-7, area-13) punct(represents-7, .-14)",0,0,0,"root(ROOT, represents) case(me, Like) nmod:like(represents, me) pnct(represents, ,) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(represents, Friend) det(area, a) compond(area, Thames) compond(area, region) compond(area, health) compond(area, athority) dobj(represents, area) pnct(represents, .)","root(,VBZ) case(PRP,IN) nmod:like(VBZ,PRP) pnct(VBZ,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) det(NN,DT) compond(NN,NNP) compond(NN,NN) compond(NN,NN) compond(NN,NN) dobj(VBZ,NN) pnct(VBZ,VBZ)","[Friend, area, my, me, ROOT, represents]","[Friend, area, my, me, ROOT, represents]",9,"[Friend, area, my, me, ROOT, represents]","[Friend, area, my, me, ROOT, represents]",NNP_Friend NN_area PRP$_my PRP_me VBZ_represents ,"[Friend, area, my, me, ROOT, represents]","[Friend, area, my, me, ROOT, represents]",NNP_Friend NN_area PRP$_my PRP_me VBZ_represents ,"[Friend, area, my, me, ROOT, represents]",NNP_Friend NN_area PRP$_my PRP_me VBZ_represents ,"[Friend, area, my, me, ROOT, represents]",NNP_Friend NN_area PRP$_my PRP_me VBZ_represents ,-3,0,1,0,0,0,0,0,0,0
However  he will know from the facts that I have given him that the long term pattern of acute bed decline since the introduction of RAWP in 1977 has proceeded apace since then without a reduction in patient activity indeed  quite the reverse.,HoweverRB hePRP willMD knowVB fromIN theDT factsNNS thatIN IPRP haveVBP givenVBN himPRP thatIN theDT longJJ termNN patternNN ofIN acuteNN bedNN declineNN sinceIN theDT introductionNN ofIN RAWPNNP inIN 1977CD hasVBZ proceededVBN apaceNN sinceIN thenRB withoutIN aDT reductionNN inIN patientJJ activityNN indeedRB quiteRB theDT reverseNN ,"root(ROOT-0, know-5) advmod(know-5, However-1) punct(know-5, ,-2) nsubj(know-5, he-3) aux(know-5, will-4) case(facts-8, from-6) det(facts-8, the-7) nmod:from(know-5, facts-8) mark(given-12, that-9) nsubj(given-12, I-10) aux(given-12, have-11) dep(facts-8, given-12) dobj(given-12, him-13) mark(proceeded-31, that-14) det(pattern-18, the-15) amod(pattern-18, long-16) compound(pattern-18, term-17) nsubj(proceeded-31, pattern-18) case(decline-22, of-19) amod(decline-22, acute-20) compound(decline-22, bed-21) nmod:of(pattern-18, decline-22) case(introduction-25, since-23) det(introduction-25, the-24) nmod:since(pattern-18, introduction-25) case(RAWP-27, of-26) nmod:of(introduction-25, RAWP-27) case(1977-29, in-28) nmod:in(introduction-25, 1977-29) aux(proceeded-31, has-30) ccomp(given-12, proceeded-31) advmod(proceeded-31, apace-32) case(then-34, since-33) nmod:since(reverse-45, then-34) case(reduction-37, without-35) det(reduction-37, a-36) nmod:without(reverse-45, reduction-37) case(activity-40, in-38) compound(activity-40, patient-39) nmod:in(reduction-37, activity-40) advmod(reduction-37, indeed-41) punct(reverse-45, ,-42) advmod(reverse-45, quite-43) det(reverse-45, the-44) dobj(proceeded-31, reverse-45) punct(know-5, .-46)",0,0,0,"root(ROOT, know) advmod(know, However) pnct(know, ,) nsbj(know, he) ax(know, will) case(facts, from) det(facts, the) nmod:from(know, facts) mark(given, that) nsbj(given, I) ax(given, have) dep(facts, given) dobj(given, him) mark(proceeded, that) det(pattern, the) amod(pattern, long) compond(pattern, term) nsbj(proceeded, pattern) case(decline, of) amod(decline, acte) compond(decline, bed) nmod:of(pattern, decline) case(introdction, since) det(introdction, the) nmod:since(pattern, introdction) case(RAWP, of) nmod:of(introdction, RAWP) case(1977, in) nmod:in(introdction, 1977) ax(proceeded, has) ccomp(given, proceeded) advmod(proceeded, apace) case(then, since) nmod:since(reverse, then) case(redction, withot) det(redction, a) nmod:withot(reverse, redction) case(activity, in) compond(activity, patient) nmod:in(redction, activity) advmod(redction, indeed) pnct(reverse, ,) advmod(reverse, qite) det(reverse, the) dobj(proceeded, reverse) pnct(know, .)","root(,VB) advmod(VB,RB) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) case(NNS,IN) det(NNS,DT) nmod:from(VB,NNS) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) dep(NNS,VBN) dobj(VBN,PRP) mark(VBN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nsbj(VBN,NN) case(NN,IN) amod(NN,NN) compond(NN,NN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:since(NN,NN) case(NNP,IN) nmod:of(NN,NNP) case(CD,IN) nmod:in(NN,CD) ax(VBN,VBZ) ccomp(VBN,VBN) advmod(VBN,NN) case(RB,IN) nmod:since(NN,RB) case(NN,IN) det(NN,DT) nmod:withot(NN,NN) case(NN,IN) compond(NN,JJ) nmod:in(NN,NN) advmod(NN,RB) pnct(NN,NN) advmod(NN,RB) det(NN,DT) dobj(VBN,NN) pnct(VB,VB)","[facts, However, he, know, ROOT]","[facts, However, he, know, ROOT]",10,[ ],[ ],NNS_facts RB_However PRP_he VB_know ,"[facts, However, he, know, ROOT]","[facts, However, he, know, ROOT]",NNS_facts RB_However PRP_he VB_know ,"[facts, However, he, know, ROOT]",NNS_facts RB_However PRP_he VB_know ,"[facts, However, he, know, ROOT]",NNS_facts RB_However PRP_he VB_know ,-3,0,2,0,0,0,0,0,0,0
The RAWP review is very near completion and  like my hon. Friend  I look forward to the advice that will be given in it.,TheDT RAWPNNP reviewNN isVBZ veryRB nearJJ completionNN andCC likeIN myPRP$ honNN FriendNNP IPRP lookVBP forwardRB toTO theDT adviceNN thatWDT willMD beVB givenVBN inIN itPRP ,"root(ROOT-0, completion-7) det(review-3, The-1) compound(review-3, RAWP-2) nsubj(completion-7, review-3) cop(completion-7, is-4) advmod(near-6, very-5) amod(completion-7, near-6) cc(completion-7, and-8) punct(look-16, ,-9) case(Friend-13, like-10) nmod:poss(Friend-13, my-11) compound(Friend-13, hon.-12) nmod:like(look-16, Friend-13) punct(look-16, ,-14) nsubj(look-16, I-15) conj:and(completion-7, look-16) advmod(look-16, forward-17) case(advice-20, to-18) det(advice-20, the-19) nmod:to(look-16, advice-20) nsubjpass(given-24, that-21) aux(given-24, will-22) auxpass(given-24, be-23) acl:relcl(advice-20, given-24) case(it-26, in-25) nmod:in(given-24, it-26) punct(completion-7, .-27)",0,0,0,"root(ROOT, completion) det(review, The) compond(review, RAWP) nsbj(completion, review) cop(completion, is) advmod(near, very) amod(completion, near) cc(completion, and) pnct(look, ,) case(Friend, like) nmod:poss(Friend, my) compond(Friend, hon.) nmod:like(look, Friend) pnct(look, ,) nsbj(look, I) conj:and(completion, look) advmod(look, forward) case(advice, to) det(advice, the) nmod:to(look, advice) nsbjpass(given, that) ax(given, will) axpass(given, be) acl:relcl(advice, given) case(it, in) nmod:in(given, it) pnct(completion, .)","root(,NN) det(NN,DT) compond(NN,NNP) nsbj(NN,NN) cop(NN,VBZ) advmod(JJ,RB) amod(NN,JJ) cc(NN,CC) pnct(VBP,VBP) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:like(VBP,NNP) pnct(VBP,VBP) nsbj(VBP,PRP) conj:and(NN,VBP) advmod(VBP,RB) case(NN,TO) det(NN,DT) nmod:to(VBP,NN) nsbjpass(VBN,WDT) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NN,VBN) case(PRP,IN) nmod:in(VBN,PRP) pnct(NN,NN)","[Friend, look, advice, I, my, forward]","[Friend, look, advice, I, my, forward]",10,"[Friend, look, advice, I, my, forward]","[Friend, look, advice, I, my, forward]",NNP_Friend NN_look NN_advice PRP_I PRP$_my NN_forward ,"[Friend, look, advice, I, my, forward]","[Friend, look, advice, I, my, forward]",NNP_Friend NN_look NN_advice PRP_I PRP$_my NN_forward ,"[Friend, look, advice, I, my, forward]",NNP_Friend NN_look NN_advice PRP_I PRP$_my NN_forward ,"[Friend, look, advice, I, my, forward]",NNP_Friend NN_look NN_advice PRP_I PRP$_my NN_forward ,-3,0,1,0,0,0,0,0,0,0
That is a scandal  and the state of red alert is likely to persist throughout the winter  which is certainly not a happy state of affairs for that hospital's patients.,ThatDT isVBZ aDT scandalNN andCC theDT stateNN ofIN redJJ alertNN isVBZ likelyJJ toTO persistVB throughoutIN theDT winterNN whichWDT isVBZ certainlyRB notRB aDT happyJJ stateNN ofIN affairsNNS forIN thatDT hospitalNN 'sPOS patientsNNS ,"root(ROOT-0, scandal-4) nsubj(scandal-4, That-1) cop(scandal-4, is-2) det(scandal-4, a-3) punct(scandal-4, ,-5) cc(scandal-4, and-6) det(state-8, the-7) nsubj(likely-13, state-8) case(alert-11, of-9) amod(alert-11, red-10) nmod:of(state-8, alert-11) cop(likely-13, is-12) conj:and(scandal-4, likely-13) mark(persist-15, to-14) xcomp(likely-13, persist-15) case(winter-18, throughout-16) det(winter-18, the-17) nmod:throughout(persist-15, winter-18) punct(winter-18, ,-19) nsubj(state-26, which-20) cop(state-26, is-21) advmod(state-26, certainly-22) neg(state-26, not-23) det(state-26, a-24) amod(state-26, happy-25) acl:relcl(winter-18, state-26) case(affairs-28, of-27) nmod:of(state-26, affairs-28) case(patients-33, for-29) det(hospital-31, that-30) nmod:poss(patients-33, hospital-31) case(hospital-31, 's-32) nmod:for(affairs-28, patients-33) punct(scandal-4, .-34)",0,0,0,"root(ROOT, scandal) nsbj(scandal, That) cop(scandal, is) det(scandal, a) pnct(scandal, ,) cc(scandal, and) det(state, the) nsbj(likely, state) case(alert, of) amod(alert, red) nmod:of(state, alert) cop(likely, is) conj:and(scandal, likely) mark(persist, to) xcomp(likely, persist) case(winter, throghot) det(winter, the) nmod:throghot(persist, winter) pnct(winter, ,) nsbj(state, which) cop(state, is) advmod(state, certainly) neg(state, not) det(state, a) amod(state, happy) acl:relcl(winter, state) case(affairs, of) nmod:of(state, affairs) case(patients, for) det(hospital, that) nmod:poss(patients, hospital) ""case(hospital, s)"", nmod:for(affairs, patients) pnct(scandal, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) pnct(NN,NN) cc(NN,CC) det(NN,DT) nsbj(JJ,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) cop(JJ,VBZ) conj:and(NN,JJ) mark(VB,TO) xcomp(JJ,VB) case(NN,IN) det(NN,DT) nmod:throghot(VB,NN) pnct(NN,NN) nsbj(NN,WDT) cop(NN,VBZ) advmod(NN,RB) neg(NN,RB) det(NN,DT) amod(NN,JJ) acl:relcl(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNS,IN) det(NN,DT) nmod:poss(NNS,NN) case(NN,POS) nmod:for(NNS,NNS) pnct(NN,NN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The question is how we can fulfil those needs and create good patient care.,TheDT questionNN isVBZ howWRB wePRP canMD fulfilVB thoseDT needsNNS andCC createVB goodJJ patientNN careNN ,"root(ROOT-0, is-3) det(question-2, The-1) nsubj(is-3, question-2) advmod(fulfil-7, how-4) nsubj(fulfil-7, we-5) nsubj(create-11, we-5) aux(fulfil-7, can-6) ccomp(is-3, fulfil-7) det(needs-9, those-8) dobj(fulfil-7, needs-9) cc(fulfil-7, and-10) ccomp(is-3, create-11) conj:and(fulfil-7, create-11) amod(care-14, good-12) compound(care-14, patient-13) dobj(create-11, care-14) punct(is-3, .-15)",0,0,1,"root(ROOT, is) det(qestion, The) nsbj(is, qestion) advmod(flfil, how) nsbj(flfil, we) nsbj(create, we) ax(flfil, can) ccomp(is, flfil) det(needs, those) dobj(flfil, needs) cc(flfil, and) ccomp(is, create) conj:and(flfil, create) amod(care, good) compond(care, patient) dobj(create, care) pnct(is, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) advmod(VB,WRB) nsbj(VB,PRP) nsbj(VB,PRP) ax(VB,MD) ccomp(VBZ,VB) det(NNS,DT) dobj(VB,NNS) cc(VB,CC) ccomp(VBZ,VB) conj:and(VB,VB) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) pnct(VBZ,VBZ)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will my right hon. Friend consider the example of Mayday hospital in Croydon  which is in a Thames region?,WillMD myPRP$ rightJJ honNN FriendNNP considerVBZ theDT exampleNN ofIN MaydayNNP hospitalNN inIN CroydonNNP whichWDT isVBZ inIN aDT ThamesNNP regionNN ,"root(ROOT-0, consider-6) aux(consider-6, Will-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(consider-6, Friend-5) det(example-8, the-7) dobj(consider-6, example-8) case(hospital-11, of-9) compound(hospital-11, Mayday-10) nmod:of(example-8, hospital-11) case(Croydon-13, in-12) nmod:in(hospital-11, Croydon-13) punct(Croydon-13, ,-14) nsubj(region-20, which-15) cop(region-20, is-16) case(region-20, in-17) det(region-20, a-18) compound(region-20, Thames-19) acl:relcl(Croydon-13, region-20) punct(consider-6, ?-21)",0,0,0,"root(ROOT, consider) ax(consider, Will) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(consider, Friend) det(example, the) dobj(consider, example) case(hospital, of) compond(hospital, Mayday) nmod:of(example, hospital) case(Croydon, in) nmod:in(hospital, Croydon) pnct(Croydon, ,) nsbj(region, which) cop(region, is) case(region, in) det(region, a) compond(region, Thames) acl:relcl(Croydon, region) pnct(consider, ?)","root(,VBZ) ax(VBZ,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) det(NN,DT) dobj(VBZ,NN) case(NN,IN) compond(NN,NNP) nmod:of(NN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(NNP,NNP) nsbj(NN,WDT) cop(NN,VBZ) case(NN,IN) det(NN,DT) compond(NN,NNP) acl:relcl(NNP,NN) pnct(VBZ,VBZ)","[consider, my, ROOT, example, right, Friend]","[example, ROOT, Friend, my, consider]",12,[ ],[ ],NN_example NNP_Friend PRP$_my VBP_consider ,"[example, ROOT, Friend, my, consider]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
It treated about 27 500 in patients in 1986 and thousands more day patients.,ItPRP treatedVBD aboutIN 27CD 500CD inIN patientsNNS inIN 1986CD andCC thousandsNNS moreRBR dayNN patientsNNS ,"root(ROOT-0, treated-2) nsubj(treated-2, It-1) advmod(27,500-4, about-3) dobj(treated-2, 27,500-4) case(patients-6, in-5) nmod:in(treated-2, patients-6) case(1986-8, in-7) nmod:in(treated-2, 1986-8) cc(1986-8, and-9) nmod:in(treated-2, thousands-10) conj:and(1986-8, thousands-10) amod(patients-13, more-11) compound(patients-13, day-12) dep(1986-8, patients-13) punct(treated-2, .-14)",0,0,0,"root(ROOT, treated) nsbj(treated, It) advmod(27,500, abot) dobj(treated, 27,500) case(patients, in) nmod:in(treated, patients) case(1986, in) nmod:in(treated, 1986) cc(1986, and) nmod:in(treated, thosands) conj:and(1986, thosands) amod(patients, more) compond(patients, day) dep(1986, patients) pnct(treated, .)","root(,VBD) nsbj(VBD,PRP) advmod(PRP,IN) dobj(VBD,VBD) case(NNS,IN) nmod:in(VBD,NNS) case(CD,IN) nmod:in(VBD,CD) cc(CD,CC) nmod:in(VBD,NNS) conj:and(CD,NNS) amod(NNS,RBR) compond(NNS,NN) dep(CD,NNS) pnct(VBD,VBD)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In short  every year more and more patients are treated in that hospital  which my right hon. Friend knows so well.,InIN shortJJ everyDT yearNN moreRBR andCC moreJJR patientsNNS areVBP treatedVBN inIN thatDT hospitalNN whichWDT myPRP$ rightJJ honNN FriendNNP knowsVBZ soRB wellRB ,"root(ROOT-0, treated-11) case(short-2, In-1) nmod:in(treated-11, short-2) punct(treated-11, ,-3) det(year-5, every-4) nmod:npmod(more-6, year-5) amod(patients-9, more-6) cc(more-6, and-7) conj:and(more-6, more-8) amod(patients-9, more-8) nsubjpass(treated-11, patients-9) auxpass(treated-11, are-10) case(hospital-14, in-12) det(hospital-14, that-13) nmod:in(treated-11, hospital-14) punct(hospital-14, ,-15) dobj(knows-21, which-16) nmod:poss(Friend-20, my-17) amod(Friend-20, right-18) compound(Friend-20, hon.-19) nsubj(knows-21, Friend-20) acl:relcl(hospital-14, knows-21) advmod(well-23, so-22) advmod(knows-21, well-23) punct(treated-11, .-24)",0,0,0,"root(ROOT, treated) case(short, In) nmod:in(treated, short) pnct(treated, ,) det(year, every) nmod:npmod(more, year) amod(patients, more) cc(more, and) conj:and(more, more) amod(patients, more) nsbjpass(treated, patients) axpass(treated, are) case(hospital, in) det(hospital, that) nmod:in(treated, hospital) pnct(hospital, ,) dobj(knows, which) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(knows, Friend) acl:relcl(hospital, knows) advmod(well, so) advmod(knows, well) pnct(treated, .)","root(,VBN) case(JJ,IN) nmod:in(VBN,JJ) pnct(VBN,VBN) det(NN,DT) nmod:npmod(JJR,NN) amod(NNS,JJR) cc(JJR,CC) conj:and(JJR,JJR) amod(NNS,JJR) nsbjpass(VBN,NNS) axpass(VBN,VBP) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) pnct(NN,NN) dobj(VBZ,WDT) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) acl:relcl(NN,VBZ) advmod(RB,RB) advmod(VBZ,RB) pnct(VBN,VBN)","[well, right, Friend, knows, which, my, hospital]","[well, Friend, knows, which, my, hospital]",13,"[well, Friend, knows, which, my, hospital]","[well, Friend, knows, which, my, hospital]",RB_well NNP_Friend VBZ_knows WDT_which PRP$_my NN_hospital ,"[well, Friend, knows, which, my, hospital]","[well, Friend, knows, which, my, hospital]",RB_well NNP_Friend VBZ_knows WDT_which PRP$_my NN_hospital ,"[well, Friend, knows, which, my, hospital]",RB_well NNP_Friend VBZ_knows WDT_which PRP$_my NN_hospital ,"[well, Friend, knows, which, my, hospital]",RB_well NNP_Friend VBZ_knows WDT_which PRP$_my NN_hospital ,-3,0,1,1,1,1,2,1,1,1
To ask the Secretary of State for Education and Science what recent representations he has received about the future of education in inner London; and if he will make a statement.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN EducationNNP andCC ScienceNNP whatWP recentJJ representationsNNS hePRP hasVBZ receivedVBN aboutIN theDT futureNN ofIN educationNN inIN innerJJ LondonNNP ;: andCC ifIN hePRP willMD makeVB aDT statementNN ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Education-8, for-7) nmod:for(Secretary-4, Education-8) cc(Education-8, and-9) nmod:for(Secretary-4, Science-10) conj:and(Education-8, Science-10) det(representations-13, what-11) amod(representations-13, recent-12) dobj(received-16, representations-13) nsubj(received-16, he-14) aux(received-16, has-15) acl:relcl(Education-8, received-16) case(future-19, about-17) det(future-19, the-18) nmod:about(received-16, future-19) case(education-21, of-20) nmod:of(future-19, education-21) case(London-24, in-22) amod(London-24, inner-23) nmod:in(education-21, London-24) punct(ask-2, ;-25) cc(ask-2, and-26) mark(make-30, if-27) nsubj(make-30, he-28) aux(make-30, will-29) conj:and(ask-2, make-30) det(statement-32, a-31) dobj(make-30, statement-32) punct(ask-2, .-33)",0,1,1,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Edcation, for) nmod:for(Secretary, Edcation) cc(Edcation, and) nmod:for(Secretary, Science) conj:and(Edcation, Science) det(representations, what) amod(representations, recent) dobj(received, representations) nsbj(received, he) ax(received, has) acl:relcl(Edcation, received) case(ftre, abot) det(ftre, the) nmod:abot(received, ftre) case(edcation, of) nmod:of(ftre, edcation) case(London, in) amod(London, inner) nmod:in(edcation, London) pnct(ask, ;) cc(ask, and) mark(make, if) nsbj(make, he) ax(make, will) conj:and(ask, make) det(statement, a) dobj(make, statement) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) det(NNS,WP) amod(NNS,JJ) dobj(VBN,NNS) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NNP,VBN) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,IN) amod(NNP,JJ) nmod:in(NN,NNP) pnct(VB,:) cc(VB,CC) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) conj:and(VB,VB) det(NN,DT) dobj(VB,NN) pnct(VB,VB)","[he, Education, ask, received, future, State, and, he, and, Secretary, representations, Science, statement, ROOT, make]","[he, Education, ask, received, future, State, and, he, and, Secretary, representations, Science, statement, ROOT, make]",1,"[Education, ask, received, State, and, and, Secretary, Science, ROOT]","[Education, ask, received, State, and, and, Secretary, Science, ROOT]",PRP_he NNP_Education VB_ask VBN_received NN_future NNP_State CC_and PRP_he CC_and NNP_Secretary VBZ_representations NNP_Science NN_statement VB_make ,"[he, Education, ask, received, future, State, and, he, and, Secretary, representations, Science, statement, ROOT, make]","[he, Education, ask, received, future, State, and, he, and, Secretary, representations, Science, statement, ROOT, make]",PRP_he NNP_Education VB_ask VBN_received NN_future NNP_State CC_and PRP_he CC_and NNP_Secretary VBZ_representations NNP_Science NN_statement VB_make ,"[he, Education, ask, received, future, State, and, he, and, Secretary, representations, Science, statement, ROOT, make]",PRP_he NNP_Education VB_ask VBN_received NN_future NNP_State CC_and PRP_he CC_and NNP_Secretary VBZ_representations NNP_Science NN_statement VB_make ,"[he, Education, ask, received, future, State, and, he, and, Secretary, representations, Science, statement, ROOT, make]",PRP_he NNP_Education VB_ask VBN_received NN_future NNP_State CC_and PRP_he CC_and NNP_Secretary VBZ_representations NNP_Science NN_statement VB_make ,-3,0,2,0,0,0,0,0,0,0
Since my announcement on 4 February my Department has received many comments from many sources.,SinceIN myPRP$ announcementNN onIN 4CD FebruaryNNP myPRP$ DepartmentNNP hasVBZ receivedVBN manyJJ commentsNNS fromIN manyJJ sourcesNNS ,"root(ROOT-0, received-10) case(announcement-3, Since-1) nmod:poss(announcement-3, my-2) nmod:since(received-10, announcement-3) case(February-6, on-4) nummod(February-6, 4-5) nmod:on(received-10, February-6) nmod:poss(Department-8, my-7) nsubj(received-10, Department-8) aux(received-10, has-9) amod(comments-12, many-11) dobj(received-10, comments-12) case(sources-15, from-13) amod(sources-15, many-14) nmod:from(comments-12, sources-15) punct(received-10, .-16)",0,1,1,"root(ROOT, received) case(annoncement, Since) nmod:poss(annoncement, my) nmod:since(received, annoncement) case(Febrary, on) nmmod(Febrary, 4) nmod:on(received, Febrary) nmod:poss(Department, my) nsbj(received, Department) ax(received, has) amod(comments, many) dobj(received, comments) case(sorces, from) amod(sorces, many) nmod:from(comments, sorces) pnct(received, .)","root(,VBN) case(NN,IN) nmod:poss(NN,PRP$) nmod:since(VBN,NN) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBN,NNP) nmod:poss(NNP,PRP$) nsbj(VBN,NNP) ax(VBN,VBZ) amod(NNS,JJ) dobj(VBN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:from(NNS,NNS) pnct(VBN,VBN)",[ ],[ ],1,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Can the Secretary of State give the House an assurance that  if the House of Lords stiffens its spine and decides that there should be a review of ILEA before any decision on abolition  he will recommend that the House accepts that decision?,CanMD theDT SecretaryNNP ofIN StateNNP giveVBP theDT HouseNNP anDT assuranceNN thatWDT ifIN theDT HouseNNP ofIN LordsNNPS stiffensVBZ itsPRP$ spineNN andCC decidesVBZ thatIN thereEX shouldMD beVB aDT reviewNN ofIN ILEANNP beforeIN anyDT decisionNN onIN abolitionNN hePRP willMD recommendVB thatIN theDT HouseNNP acceptsVBZ thatIN decisionNN ,"root(ROOT-0, give-6) aux(give-6, Can-1) det(Secretary-3, the-2) nsubj(give-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) det(House-8, the-7) iobj(give-6, House-8) det(assurance-10, an-9) dobj(give-6, assurance-10) root(assurance-10, that-11) punct(stiffens-18, ,-12) mark(stiffens-18, if-13) det(House-15, the-14) nsubj(stiffens-18, House-15) nsubj(decides-22, House-15) case(Lords-17, of-16) nmod:of(House-15, Lords-17) dep(that-11, stiffens-18) nmod:poss(spine-20, its-19) dobj(stiffens-18, spine-20) cc(stiffens-18, and-21) dep(that-11, decides-22) conj:and(stiffens-18, decides-22) mark(review-28, that-23) expl(review-28, there-24) aux(review-28, should-25) cop(review-28, be-26) det(review-28, a-27) advcl(recommend-39, review-28) case(ILEA-30, of-29) nmod:of(review-28, ILEA-30) case(decision-33, before-31) det(decision-33, any-32) nmod:before(review-28, decision-33) case(abolition-35, on-34) nmod:on(decision-33, abolition-35) punct(recommend-39, ,-36) nsubj(recommend-39, he-37) aux(recommend-39, will-38) ccomp(decides-22, recommend-39) mark(accepts-43, that-40) det(House-42, the-41) nsubj(accepts-43, House-42) ccomp(recommend-39, accepts-43) det(decision-45, that-44) dobj(accepts-43, decision-45) punct(stiffens-18, ?-46)",0,0,0,"root(ROOT, give) ax(give, Can) det(Secretary, the) nsbj(give, Secretary) case(State, of) nmod:of(Secretary, State) det(Hose, the) iobj(give, Hose) det(assrance, an) dobj(give, assrance) root(assrance, that) pnct(stiffens, ,) mark(stiffens, if) det(Hose, the) nsbj(stiffens, Hose) nsbj(decides, Hose) case(Lords, of) nmod:of(Hose, Lords) dep(that, stiffens) nmod:poss(spine, its) dobj(stiffens, spine) cc(stiffens, and) dep(that, decides) conj:and(stiffens, decides) mark(review, that) expl(review, there) ax(review, shold) cop(review, be) det(review, a) advcl(recommend, review) case(ILEA, of) nmod:of(review, ILEA) case(decision, before) det(decision, any) nmod:before(review, decision) case(abolition, on) nmod:on(decision, abolition) pnct(recommend, ,) nsbj(recommend, he) ax(recommend, will) ccomp(decides, recommend) mark(accepts, that) det(Hose, the) nsbj(accepts, Hose) ccomp(recommend, accepts) det(decision, that) dobj(accepts, decision) pnct(stiffens, ?)","root(,VBP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) det(NNP,DT) iobj(VBP,NNP) det(NN,DT) dobj(VBP,NN) root(NN,IN) pnct(VBZ,VBZ) mark(VBZ,IN) det(NNP,DT) nsbj(VBZ,NNP) nsbj(VBZ,NNP) case(NNPS,IN) nmod:of(NNP,NNPS) dep(IN,VBZ) nmod:poss(NN,PRP$) dobj(VBZ,NN) cc(VBZ,CC) dep(IN,VBZ) conj:and(VBZ,VBZ) mark(NN,IN) expl(NN,EX) ax(NN,MD) cop(NN,VB) det(NN,DT) advcl(VB,NN) case(NNP,IN) nmod:of(NN,NNP) case(NN,IN) det(NN,DT) nmod:before(NN,NN) case(NN,IN) nmod:on(NN,NN) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) ccomp(VBZ,VB) mark(VBZ,IN) det(NNP,DT) nsbj(VBZ,NNP) ccomp(VB,VBZ) det(NN,IN) dobj(VBZ,NN) pnct(VBZ,VBZ)","[decides, House, he, assurance, accepts, State, Secretary, recommend, ROOT, give, review]","[decides, House, he, assurance, accepts, State, Secretary, recommend, ROOT, give, review]",2,[ ],[ ],VBZ_decides NNP_House PRP_he NN_assurance VBZ_accepts NNP_State NNP_Secretary VB_recommend VB_give NN_review ,"[decides, House, he, assurance, accepts, State, Secretary, recommend, ROOT, give, review]","[decides, House, he, assurance, accepts, State, Secretary, recommend, ROOT, give, review]",VBZ_decides NNP_House PRP_he NN_assurance VBZ_accepts NNP_State NNP_Secretary VB_recommend VB_give NN_review ,"[decides, House, he, assurance, accepts, State, Secretary, recommend, ROOT, give, review]",VBZ_decides NNP_House PRP_he NN_assurance VBZ_accepts NNP_State NNP_Secretary VB_recommend VB_give NN_review ,"[decides, House, he, assurance, accepts, State, Secretary, recommend, ROOT, give, review]",VBZ_decides NNP_House PRP_he NN_assurance VBZ_accepts NNP_State NNP_Secretary VB_recommend VB_give NN_review ,-3,0,2,1,1,1,1,1,1,2
I do not appear at the Dispatch Box as a trembling  blushing violet.,IPRP doVBP notRB appearVB atIN theDT DispatchNNP BoxNNP asIN aDT tremblingVBG blushingNN violetNN ,"root(ROOT-0, appear-4) nsubj(appear-4, I-1) aux(appear-4, do-2) neg(appear-4, not-3) case(Box-8, at-5) det(Box-8, the-6) compound(Box-8, Dispatch-7) nmod:at(appear-4, Box-8) case(trembling-11, as-9) det(trembling-11, a-10) nmod:as(appear-4, trembling-11) punct(trembling-11, ,-12) dep(trembling-11, blushing-13) dobj(blushing-13, violet-14) punct(appear-4, .-15)",0,0,0,"root(ROOT, appear) nsbj(appear, I) ax(appear, do) neg(appear, not) case(Box, at) det(Box, the) compond(Box, Dispatch) nmod:at(appear, Box) case(trembling, as) det(trembling, a) nmod:as(appear, trembling) pnct(trembling, ,) dep(trembling, blshing) dobj(blshing, violet) pnct(appear, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:at(VB,NNP) case(VBG,IN) det(VBG,DT) nmod:as(VB,VBG) pnct(VBG,VBG) dep(VBG,NN) dobj(NN,NN) pnct(VB,VB)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I understand that the House of Lords has just started  or will shortly start  a debate on ILEA.,IPRP understandVBP thatIN theDT HouseNNP ofIN LordsNNP hasVBZ justRB startedVBN orCC willMD shortlyRB startVB aDT debateNN onIN ILEANNP ,"root(ROOT-0, understand-2) nsubj(understand-2, I-1) mark(started-10, that-3) det(House-5, the-4) nsubj(started-10, House-5) nsubj(start-15, House-5) case(Lords-7, of-6) nmod:of(House-5, Lords-7) aux(started-10, has-8) advmod(started-10, just-9) ccomp(understand-2, started-10) punct(started-10, ,-11) cc(started-10, or-12) aux(start-15, will-13) advmod(start-15, shortly-14) ccomp(understand-2, start-15) conj:or(started-10, start-15) punct(understand-2, ,-16) det(debate-18, a-17) root(,-16, debate-18) case(ILEA-20, on-19) nmod:on(debate-18, ILEA-20) punct(debate-18, .-21)",0,0,0,"root(ROOT, nderstand) nsbj(nderstand, I) mark(started, that) det(Hose, the) nsbj(started, Hose) nsbj(start, Hose) case(Lords, of) nmod:of(Hose, Lords) ax(started, has) advmod(started, jst) ccomp(nderstand, started) pnct(started, ,) cc(started, or) ax(start, will) advmod(start, shortly) ccomp(nderstand, start) conj:or(started, start) pnct(nderstand, ,) det(debate, a) root(,, debate) case(ILEA, on) nmod:on(debate, ILEA) pnct(debate, .)","root(,VBP) nsbj(VBP,PRP) mark(VBN,IN) det(NNP,DT) nsbj(VBN,NNP) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) ax(VBN,VBZ) advmod(VBN,RB) ccomp(VBP,VBN) pnct(VBN,VBN) cc(VBN,CC) ax(VB,MD) advmod(VB,RB) ccomp(VBP,VB) conj:or(VBN,VB) pnct(VBP,VBP) det(NN,DT) root(DTDTNN) case(NNP,IN) nmod:on(NN,NNP) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We shall all watch the outcome with great interest.,WePRP shallMD allDT watchVB theDT outcomeNN withIN greatJJ interestNN ,"root(ROOT-0, watch-4) nsubj(watch-4, We-1) aux(watch-4, shall-2) det(watch-4, all-3) det(outcome-6, the-5) dobj(watch-4, outcome-6) case(interest-9, with-7) amod(interest-9, great-8) nmod:with(watch-4, interest-9) punct(watch-4, .-10)",0,0,1,"root(ROOT, watch) nsbj(watch, We) ax(watch, shall) det(watch, all) det(otcome, the) dobj(watch, otcome) case(interest, with) amod(interest, great) nmod:with(watch, interest) pnct(watch, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(VB,DT) det(NN,DT) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:with(VB,NN) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will my right hon. Friend bear in mind that there are 20 times as many residents in inner London as those who took part in the so called phoney parents' ballot?,WillMD myPRP$ rightJJ honNN FriendNNP bearNN inIN mindNN thatIN thereEX areVBP 20CD timesNNS asIN manyJJ residentsNNS inIN innerJJ LondonNNP asIN thoseDT whoWP tookVBD partNN inIN theDT soRB calledJJ phoneyNN parentsNNS 'POS ballotNN ,"root(ROOT-0, Will-1) nmod:poss(bear-6, my-2) amod(bear-6, right-3) compound(bear-6, hon.-4) compound(bear-6, Friend-5) dobj(Will-1, bear-6) case(mind-8, in-7) nmod:in(bear-6, mind-8) mark(are-11, that-9) expl(are-11, there-10) dep(bear-6, are-11) nummod(times-13, 20-12) nsubj(are-11, times-13) case(residents-16, as-14) amod(residents-16, many-15) nmod:as(times-13, residents-16) case(London-19, in-17) amod(London-19, inner-18) nmod:in(residents-16, London-19) case(those-21, as-20) nmod:as(times-13, those-21) nsubj(took-23, who-22) acl:relcl(those-21, took-23) dobj(took-23, part-24) nmod(took-23, in-25) dep(in-25, the-26) advmod(called-28, so-27) acl(the-26, called-28) amod(parents-30, phoney-29) nmod:poss(ballot-32, parents-30) case(parents-30, '-31) xcomp(called-28, ballot-32) punct(the-26, ?-33)",0,1,0,"root(ROOT, Will) nmod:poss(bear, my) amod(bear, right) compond(bear, hon.) compond(bear, Friend) dobj(Will, bear) case(mind, in) nmod:in(bear, mind) mark(are, that) expl(are, there) dep(bear, are) nmmod(times, 20) nsbj(are, times) case(residents, as) amod(residents, many) nmod:as(times, residents) case(London, in) amod(London, inner) nmod:in(residents, London) case(those, as) nmod:as(times, those) nsbj(took, who) acl:relcl(those, took) dobj(took, part) nmod(took, in) dep(in, the) advmod(called, so) acl(the, called) amod(parents, phoney) nmod:poss(ballot, parents) ""case(parents, )"", xcomp(called, ballot) pnct(the, ?)","root(,MD) nmod:poss(NN,PRP$) amod(NN,JJ) compond(NN,NN) compond(NN,NNP) dobj(MD,NN) case(NN,IN) nmod:in(NN,NN) mark(VBP,IN) expl(VBP,EX) dep(NN,VBP) nmmod(NNS,CD) nsbj(VBP,NNS) case(NNS,IN) amod(NNS,JJ) nmod:as(NNS,NNS) case(NNP,IN) amod(NNP,JJ) nmod:in(NNS,NNP) case(DT,IN) nmod:as(NNS,DT) nsbj(VBD,WP) acl:relcl(DT,VBD) dobj(VBD,NN) nmod(VBD,IN) dep(IN,DT) advmod(JJ,RB) acl(DT,JJ) amod(NNS,NN) nmod:poss(NN,NNS) case(NNS,POS) xcomp(JJ,NN) pnct(DT,DT)","[mind, are, Will, right, bear, my]","[mind, are, Will, right, bear, my]",4,"[mind, are, Will, right, bear, my]","[mind, are, Will, right, bear, my]",NN_mind VBP_are MD_Will JJ_right NN_bear PRP$_my ,"[mind, are, Will, right, bear, my]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Yes  as to the last  most certainly I will.,YesUH asIN toTO theDT lastJJ mostRBS certainlyRB IPRP willMD ,"root(ROOT-0, will-11) discourse(will-11, Yes-1) punct(will-11, ,-2) case(last-6, as-3) mwe(as-3, to-4) det(last-6, the-5) nmod:as_to(will-11, last-6) punct(will-11, ,-7) advmod(I-10, most-8) advmod(I-10, certainly-9) nsubj(will-11, I-10) punct(will-11, .-12)",0,0,0,"root(ROOT, will) discorse(will, Yes) pnct(will, ,) case(last, as) mwe(as, to) det(last, the) nmod:as_to(will, last) pnct(will, ,) advmod(I, most) advmod(I, certainly) nsbj(will, I) pnct(will, .)","root(,MD) discorse(MD,UH) pnct(MD,MD) case(JJ,IN) mwe(IN,TO) det(JJ,DT) nmod:as_to(MD,JJ) pnct(MD,MD) advmod(PRP,RBS) advmod(PRP,RB) nsbj(MD,PRP) pnct(MD,MD)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As regards the parental ballot  decisions to transfer education responsibility from one sphere of government to another have always been taken by Parliament.,AsIN regardsNNS theDT parentalJJ ballotNN decisionsNNS toTO transferVB educationNN responsibilityNN fromIN oneCD sphereNN ofIN governmentNN toTO anotherDT haveVBP alwaysRB beenVBN takenVBN byIN ParliamentNNP ,"root(ROOT-0, taken-22) mark(regards-2, As-1) advcl(taken-22, regards-2) det(ballot-5, the-3) amod(ballot-5, parental-4) dobj(regards-2, ballot-5) punct(taken-22, ,-6) nsubjpass(taken-22, decisions-7) mark(transfer-9, to-8) acl(decisions-7, transfer-9) compound(responsibility-11, education-10) dobj(transfer-9, responsibility-11) case(sphere-14, from-12) nummod(sphere-14, one-13) nmod:from(transfer-9, sphere-14) case(government-16, of-15) nmod:of(sphere-14, government-16) case(another-18, to-17) nmod:to(transfer-9, another-18) aux(taken-22, have-19) advmod(taken-22, always-20) auxpass(taken-22, been-21) case(Parliament-24, by-23) nmod:agent(taken-22, Parliament-24) punct(taken-22, .-25)",0,0,0,"root(ROOT, taken) mark(regards, As) advcl(taken, regards) det(ballot, the) amod(ballot, parental) dobj(regards, ballot) pnct(taken, ,) nsbjpass(taken, decisions) mark(transfer, to) acl(decisions, transfer) compond(responsibility, edcation) dobj(transfer, responsibility) case(sphere, from) nmmod(sphere, one) nmod:from(transfer, sphere) case(government, of) nmod:of(sphere, government) case(another, to) nmod:to(transfer, another) ax(taken, have) advmod(taken, always) axpass(taken, been) case(Parliament, by) nmod:agent(taken, Parliament) pnct(taken, .)","root(,VBN) mark(NNS,IN) advcl(VBN,NNS) det(NN,DT) amod(NN,JJ) dobj(NNS,NN) pnct(VBN,VBN) nsbjpass(VBN,NNS) mark(VB,TO) acl(NNS,VB) compond(NN,NN) dobj(VB,NN) case(NN,IN) nmmod(NN,CD) nmod:from(VB,NN) case(NN,IN) nmod:of(NN,NN) case(DT,TO) nmod:to(VB,DT) ax(VBN,VBP) advmod(VBN,RB) axpass(VBN,VBN) case(NNP,IN) nmod:agent(VBN,NNP) pnct(VBN,VBN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is the constitutional position.,ThatDT isVBZ theDT constitutionalJJ positionNN ,"root(ROOT-0, position-5) nsubj(position-5, That-1) cop(position-5, is-2) det(position-5, the-3) amod(position-5, constitutional-4) punct(position-5, .-6)",0,0,0,"root(ROOT, position) nsbj(position, That) cop(position, is) det(position, the) amod(position, constittional) pnct(position, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is for Parliament to weigh up all the arguments  taking account of the views  not only of parents  but  as my hon. Friend says  of all those ratepayers who have to bear any consequences.,ItPRP isVBZ forIN ParliamentNNP toTO weighVB upRP allPDT theDT argumentsNNS takingVBG accountNN ofIN theDT viewsNNS notRB onlyRB ofIN parentsNNS butCC asIN myPRP$ honNN FriendNNP saysVBZ ofIN allPDT thoseDT ratepayersNNS whoWP haveVBP toTO bearVB anyDT consequencesNNS ,"root(ROOT-0, Parliament-4) nsubj(Parliament-4, It-1) cop(Parliament-4, is-2) case(Parliament-4, for-3) mark(weigh-6, to-5) acl(Parliament-4, weigh-6) compound:prt(weigh-6, up-7) det:predet(arguments-10, all-8) det(arguments-10, the-9) dobj(weigh-6, arguments-10) punct(Parliament-4, ,-11) acl(Parliament-4, taking-12) dobj(taking-12, account-13) case(views-16, of-14) det(views-16, the-15) nmod:of(account-13, views-16) punct(Parliament-4, ,-17) neg(only-19, not-18) advmod(Parliament-4, only-19) case(parents-21, of-20) nmod:of(only-19, parents-21) punct(Parliament-4, ,-22) cc(Parliament-4, but-23) punct(Parliament-4, ,-24) case(Friend-28, as-25) nmod:poss(Friend-28, my-26) compound(Friend-28, hon.-27) nmod:as(Parliament-4, Friend-28) dep(Friend-28, says-29) punct(says-29, ,-30) case(ratepayers-34, of-31) det:predet(ratepayers-34, all-32) det(ratepayers-34, those-33) nmod:of(says-29, ratepayers-34) nsubj(have-36, who-35) acl:relcl(ratepayers-34, have-36) mark(bear-38, to-37) xcomp(have-36, bear-38) det(consequences-40, any-39) dobj(bear-38, consequences-40) punct(Parliament-4, .-41)",0,0,0,"root(ROOT, Parliament) nsbj(Parliament, It) cop(Parliament, is) case(Parliament, for) mark(weigh, to) acl(Parliament, weigh) compond:prt(weigh, p) det:predet(argments, all) det(argments, the) dobj(weigh, argments) pnct(Parliament, ,) acl(Parliament, taking) dobj(taking, accont) case(views, of) det(views, the) nmod:of(accont, views) pnct(Parliament, ,) neg(only, not) advmod(Parliament, only) case(parents, of) nmod:of(only, parents) pnct(Parliament, ,) cc(Parliament, bt) pnct(Parliament, ,) case(Friend, as) nmod:poss(Friend, my) compond(Friend, hon.) nmod:as(Parliament, Friend) dep(Friend, says) pnct(says, ,) case(ratepayers, of) det:predet(ratepayers, all) det(ratepayers, those) nmod:of(says, ratepayers) nsbj(have, who) acl:relcl(ratepayers, have) mark(bear, to) xcomp(have, bear) det(conseqences, any) dobj(bear, conseqences) pnct(Parliament, .)","root(,NNP) nsbj(NNP,PRP) cop(NNP,VBZ) case(NNP,IN) mark(VB,TO) acl(NNP,VB) compond:prt(VB,RP) det:predet(NNS,PDT) det(NNS,DT) dobj(VB,NNS) pnct(NNP,NNP) acl(NNP,VBG) dobj(VBG,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(NNP,NNP) neg(RB,RB) advmod(NNP,RB) case(NNS,IN) nmod:of(RB,NNS) pnct(NNP,NNP) cc(NNP,CC) pnct(NNP,NNP) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:as(NNP,NNP) dep(NNP,VBZ) pnct(VBZ,VBZ) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:of(VBZ,NNS) nsbj(VBP,WP) acl:relcl(NNS,VBP) mark(VB,TO) xcomp(VBP,VB) det(NNS,DT) dobj(VB,NNS) pnct(NNP,NNP)","[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]","[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]",6,"[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]","[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]",VBZ_says VBG_taking NNP_Friend RB_only CC_but PRP_It PRP$_my NNP_Parliament VB_weigh NNS_ratepayers ,"[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]","[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]",VBZ_says VBG_taking NNP_Friend RB_only CC_but PRP_It PRP$_my NNP_Parliament VB_weigh NNS_ratepayers ,"[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]",VBZ_says VBG_taking NNP_Friend RB_only CC_but PRP_It PRP$_my NNP_Parliament VB_weigh NNS_ratepayers ,"[says, taking, Friend, only, but, It, my, ROOT, Parliament, weigh, ratepayers]",VBZ_says VBG_taking NNP_Friend RB_only CC_but PRP_It PRP$_my NNP_Parliament VB_weigh NNS_ratepayers ,-3,0,1,0,0,0,0,0,0,0
As regards the ILEA ballot  the method chosen for the organisation of the ballot makes it next to impossible to determine how many parents actually voted.,AsIN regardsNNS theDT ILEANNP ballotNN theDT methodNN chosenNN forIN theDT organisationNN ofIN theDT ballotNN makesVBZ itPRP nextJJ toTO impossibleJJ toTO determineVB howWRB manyJJ parentsNNS actuallyRB votedVBD ,"root(ROOT-0, makes-16) mark(regards-2, As-1) advcl(makes-16, regards-2) det(ballot-5, the-3) compound(ballot-5, ILEA-4) dobj(regards-2, ballot-5) punct(makes-16, ,-6) det(method-8, the-7) nsubj(makes-16, method-8) acl(method-8, chosen-9) case(organisation-12, for-10) det(organisation-12, the-11) nmod:for(chosen-9, organisation-12) case(ballot-15, of-13) det(ballot-15, the-14) nmod:of(organisation-12, ballot-15) dobj(makes-16, it-17) xcomp(makes-16, next-18) mark(impossible-20, to-19) xcomp(next-18, impossible-20) mark(determine-22, to-21) xcomp(impossible-20, determine-22) advmod(many-24, how-23) amod(parents-25, many-24) nsubj(voted-27, parents-25) advmod(voted-27, actually-26) ccomp(determine-22, voted-27) punct(makes-16, .-28)",0,0,0,"root(ROOT, makes) mark(regards, As) advcl(makes, regards) det(ballot, the) compond(ballot, ILEA) dobj(regards, ballot) pnct(makes, ,) det(method, the) nsbj(makes, method) acl(method, chosen) case(organisation, for) det(organisation, the) nmod:for(chosen, organisation) case(ballot, of) det(ballot, the) nmod:of(organisation, ballot) dobj(makes, it) xcomp(makes, next) mark(impossible, to) xcomp(next, impossible) mark(determine, to) xcomp(impossible, determine) advmod(many, how) amod(parents, many) nsbj(voted, parents) advmod(voted, actally) ccomp(determine, voted) pnct(makes, .)","root(,VBZ) mark(NNS,IN) advcl(VBZ,NNS) det(NN,DT) compond(NN,NNP) dobj(NNS,NN) pnct(VBZ,VBZ) det(NN,DT) nsbj(VBZ,NN) acl(NN,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) dobj(VBZ,PRP) xcomp(VBZ,JJ) mark(JJ,TO) xcomp(JJ,JJ) mark(VB,TO) xcomp(JJ,VB) advmod(JJ,WRB) amod(NNS,JJ) nsbj(VBD,NNS) advmod(VBD,RB) ccomp(VB,VBD) pnct(VBZ,VBZ)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the Secretary of State remember those days when he was the PPS to the then Prime Minister?,DoesVBZ theDT SecretaryNNP ofIN StateNNP rememberVB thoseDT daysNNS whenWRB hePRP wasVBD theDT PPSNNP toTO theDT thenRB PrimeNNP MinisterNNP ,"root(ROOT-0, remember-6) aux(remember-6, Does-1) det(Secretary-3, the-2) nsubj(remember-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) det(days-8, those-7) dobj(remember-6, days-8) advmod(PPS-13, when-9) nsubj(PPS-13, he-10) cop(PPS-13, was-11) det(PPS-13, the-12) advcl(remember-6, PPS-13) case(Minister-18, to-14) det(Minister-18, the-15) advmod(Minister-18, then-16) compound(Minister-18, Prime-17) nmod:to(PPS-13, Minister-18) punct(remember-6, ?-19)",0,1,0,"root(ROOT, remember) ax(remember, Does) det(Secretary, the) nsbj(remember, Secretary) case(State, of) nmod:of(Secretary, State) det(days, those) dobj(remember, days) advmod(PPS, when) nsbj(PPS, he) cop(PPS, was) det(PPS, the) advcl(remember, PPS) case(Minister, to) det(Minister, the) advmod(Minister, then) compond(Minister, Prime) nmod:to(PPS, Minister) pnct(remember, ?)","root(,VB) ax(VB,VBZ) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) det(NNS,DT) dobj(VB,NNS) advmod(NNP,WRB) nsbj(NNP,PRP) cop(NNP,VBD) det(NNP,DT) advcl(VB,NNP) case(NNP,TO) det(NNP,DT) advmod(NNP,RB) compond(NNP,NNP) nmod:to(NNP,NNP) pnct(VB,VB)","[when, remember, he, State, Minister, PPS, then, Secretary, ROOT, days]","[when, remember, he, State, Minister, PPS, then, Secretary, ROOT, days]",6,"[when, remember, then, he, PPS, Minister]","[when, PPS, then, remember, Minister]",WRB_when VB_remember PRP_he NNP_State NNP_Minister NNP_PPS RB_then NNP_Secretary NNS_days ,"[when, remember, he, State, Minister, PPS, then, Secretary, ROOT, days]","[when, remember, he, State, Minister, PPS, then, Secretary, ROOT, days]",WRB_when VB_remember PRP_he NNP_State NNP_Minister NNP_PPS RB_then NNP_Secretary NNS_days ,"[when, remember, he, State, Minister, PPS, then, Secretary, ROOT, days]",WRB_when VB_remember PRP_he NNP_State NNP_Minister NNP_PPS RB_then NNP_Secretary NNS_days ,"[when, remember, he, State, Minister, PPS, then, Secretary, ROOT, days]",WRB_when VB_remember PRP_he NNP_State NNP_Minister NNP_PPS RB_then NNP_Secretary NNS_days ,-3,0,2,0,0,0,0,0,0,0
All I am saying is that it was impossible to determine how many parents voted in that ballot.,AllDT IPRP amVBP sayingVBG isVBZ thatIN itPRP wasVBD impossibleJJ toTO determineVB howWRB manyJJ parentsNNS votedVBD inIN thatDT ballotNN ,"root(ROOT-0, saying-4) dobj(saying-4, All-1) nsubj(saying-4, I-2) aux(saying-4, am-3) ccomp(saying-4, is-5) mark(impossible-9, that-6) nsubj(impossible-9, it-7) cop(impossible-9, was-8) ccomp(is-5, impossible-9) mark(determine-11, to-10) xcomp(impossible-9, determine-11) advmod(many-13, how-12) amod(parents-14, many-13) nsubj(voted-15, parents-14) ccomp(determine-11, voted-15) case(ballot-18, in-16) det(ballot-18, that-17) nmod:in(voted-15, ballot-18) punct(saying-4, .-19)",0,1,0,"root(ROOT, saying) dobj(saying, All) nsbj(saying, I) ax(saying, am) ccomp(saying, is) mark(impossible, that) nsbj(impossible, it) cop(impossible, was) ccomp(is, impossible) mark(determine, to) xcomp(impossible, determine) advmod(many, how) amod(parents, many) nsbj(voted, parents) ccomp(determine, voted) case(ballot, in) det(ballot, that) nmod:in(voted, ballot) pnct(saying, .)","root(,VBG) dobj(VBG,DT) nsbj(VBG,PRP) ax(VBG,VBP) ccomp(VBG,VBZ) mark(JJ,DT) nsbj(JJ,PRP) cop(JJ,VBD) ccomp(VBZ,JJ) mark(VB,TO) xcomp(JJ,VB) advmod(JJ,WRB) amod(NNS,JJ) nsbj(VBD,NNS) ccomp(VB,VBD) case(NN,IN) det(NN,DT) nmod:in(VBD,NN) pnct(VBG,VBG)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
My right hon. Friend will have seen the Gallup poll  which shows that the majority of parents in inner London have no worries about the transfer of education to the local boroughs.,MyPRP$ rightJJ honNN FriendNNP willMD haveVB seenVBN theDT GallupNNP pollNN whichWDT showsVBZ thatIN theDT majorityNN ofIN parentsNNS inIN innerJJ LondonNNP haveVBP noDT worriesNNS aboutIN theDT transferNN ofIN educationNN toTO theDT localJJ boroughsNNS ,"root(ROOT-0, seen-7) nmod:poss(Friend-4, My-1) amod(Friend-4, right-2) compound(Friend-4, hon.-3) nsubj(seen-7, Friend-4) aux(seen-7, will-5) aux(seen-7, have-6) det(poll-10, the-8) compound(poll-10, Gallup-9) dobj(seen-7, poll-10) punct(poll-10, ,-11) nsubj(shows-13, which-12) acl:relcl(poll-10, shows-13) mark(have-22, that-14) det(majority-16, the-15) nsubj(have-22, majority-16) case(parents-18, of-17) nmod:of(majority-16, parents-18) case(London-21, in-19) amod(London-21, inner-20) nmod:in(parents-18, London-21) ccomp(shows-13, have-22) neg(worries-24, no-23) dobj(have-22, worries-24) case(transfer-27, about-25) det(transfer-27, the-26) nmod:about(worries-24, transfer-27) case(education-29, of-28) nmod:of(transfer-27, education-29) case(boroughs-33, to-30) det(boroughs-33, the-31) amod(boroughs-33, local-32) nmod:to(transfer-27, boroughs-33) punct(seen-7, .-34)",0,0,0,"root(ROOT, seen) nmod:poss(Friend, My) amod(Friend, right) compond(Friend, hon.) nsbj(seen, Friend) ax(seen, will) ax(seen, have) det(poll, the) compond(poll, Gallp) dobj(seen, poll) pnct(poll, ,) nsbj(shows, which) acl:relcl(poll, shows) mark(have, that) det(majority, the) nsbj(have, majority) case(parents, of) nmod:of(majority, parents) case(London, in) amod(London, inner) nmod:in(parents, London) ccomp(shows, have) neg(worries, no) dobj(have, worries) case(transfer, abot) det(transfer, the) nmod:abot(worries, transfer) case(edcation, of) nmod:of(transfer, edcation) case(boroghs, to) det(boroghs, the) amod(boroghs, local) nmod:to(transfer, boroghs) pnct(seen, .)","root(,VBN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,MD) ax(VBN,VBP) det(NN,DT) compond(NN,NNP) dobj(VBN,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) mark(VBP,IN) det(NN,DT) nsbj(VBP,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNP,IN) amod(NNP,JJ) nmod:in(NNS,NNP) ccomp(VBZ,VBP) neg(NNS,DT) dobj(VBP,NNS) case(NN,IN) det(NN,DT) nmod:abot(NNS,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,TO) det(NNS,DT) amod(NNS,JJ) nmod:to(NN,NNS) pnct(VBN,VBN)","[My, Friend, poll, right, ROOT, seen]","[My, ROOT, Friend, poll, seen]",8,[ ],[ ],PRP$_My NNP_Friend NN_poll VBN_seen ,"[My, ROOT, Friend, poll, seen]","[My, ROOT, Friend, poll, seen]",PRP$_My NNP_Friend NN_poll VBN_seen ,"[My, ROOT, Friend, poll, seen]",PRP$_My NNP_Friend NN_poll VBN_seen ,"[My, ROOT, Friend, poll, seen]",PRP$_My NNP_Friend NN_poll VBN_seen ,-3,0,2,0,0,0,0,0,0,0
However  will he confirm that those who do have anxieties will not have their interests served by a delay in the implementation of the Education Reform Bill?,HoweverRB willMD hePRP confirmVB thatIN thoseDT whoWP doVBP haveVB anxietiesNNS willMD notRB haveVB theirPRP$ interestsNNS servedVBN byIN aDT delayNN inIN theDT implementationNN ofIN theDT EducationNNP ReformNNP BillNNP ,"root(ROOT-0, confirm-5) advmod(confirm-5, However-1) punct(confirm-5, ,-2) aux(confirm-5, will-3) nsubj(confirm-5, he-4) mark(have-14, that-6) nsubj(have-14, those-7) nsubj(have-10, who-8) aux(have-10, do-9) acl:relcl(those-7, have-10) dobj(have-10, anxieties-11) aux(have-14, will-12) neg(have-14, not-13) ccomp(confirm-5, have-14) nmod:poss(interests-16, their-15) dobj(have-14, interests-16) acl(interests-16, served-17) case(delay-20, by-18) det(delay-20, a-19) nmod:by(served-17, delay-20) case(implementation-23, in-21) det(implementation-23, the-22) nmod:in(delay-20, implementation-23) case(Bill-28, of-24) det(Bill-28, the-25) compound(Bill-28, Education-26) compound(Bill-28, Reform-27) nmod:of(implementation-23, Bill-28) punct(confirm-5, ?-29)",0,0,0,"root(ROOT, confirm) advmod(confirm, However) pnct(confirm, ,) ax(confirm, will) nsbj(confirm, he) mark(have, that) nsbj(have, those) nsbj(have, who) ax(have, do) acl:relcl(those, have) dobj(have, anxieties) ax(have, will) neg(have, not) ccomp(confirm, have) nmod:poss(interests, their) dobj(have, interests) acl(interests, served) case(delay, by) det(delay, a) nmod:by(served, delay) case(implementation, in) det(implementation, the) nmod:in(delay, implementation) case(Bill, of) det(Bill, the) compond(Bill, Edcation) compond(Bill, Reform) nmod:of(implementation, Bill) pnct(confirm, ?)","root(,VB) advmod(VB,RB) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) mark(VB,IN) nsbj(VB,DT) nsbj(VB,WP) ax(VB,VBP) acl:relcl(DT,VB) dobj(VB,NNS) ax(VB,MD) neg(VB,RB) ccomp(VB,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) acl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:by(VBN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VB,VB)","[ROOT, have, confirm, he, However]","[ROOT, have, confirm, he, However]",9,[ ],[ ],VBP_have NN_confirm PRP_he RB_However ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As I have said  this is being debated by the House of Lords.,AsIN IPRP haveVBP saidVBD thisDT isVBZ beingVBG debatedVBN byIN theDT HouseNNP ofIN LordsNNPS ,"root(ROOT-0, debated-9) mark(said-4, As-1) nsubj(said-4, I-2) aux(said-4, have-3) advcl(debated-9, said-4) punct(debated-9, ,-5) nsubjpass(debated-9, this-6) aux(debated-9, is-7) auxpass(debated-9, being-8) case(House-12, by-10) det(House-12, the-11) nmod:agent(debated-9, House-12) case(Lords-14, of-13) nmod:of(House-12, Lords-14) punct(debated-9, .-15)",0,0,0,"root(ROOT, debated) mark(said, As) nsbj(said, I) ax(said, have) advcl(debated, said) pnct(debated, ,) nsbjpass(debated, this) ax(debated, is) axpass(debated, being) case(Hose, by) det(Hose, the) nmod:agent(debated, Hose) case(Lords, of) nmod:of(Hose, Lords) pnct(debated, .)","root(,VBN) mark(VBD,IN) nsbj(VBD,PRP) ax(VBD,VBP) advcl(VBN,VBD) pnct(VBN,VBN) nsbjpass(VBN,DT) ax(VBN,VBZ) axpass(VBN,VBG) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) case(NNPS,IN) nmod:of(NNP,NNPS) pnct(VBN,VBN)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have considerable sympathy with what my hon. Friend has said.,IPRP haveVBP considerableJJ sympathyNN withIN whatWP myPRP$ honNN FriendNNP hasVBZ saidVBD ,"root(ROOT-0, have-2) nsubj(have-2, I-1) amod(sympathy-4, considerable-3) dobj(have-2, sympathy-4) mark(said-11, with-5) dobj(said-11, what-6) nmod:poss(Friend-9, my-7) compound(Friend-9, hon.-8) nsubj(said-11, Friend-9) aux(said-11, has-10) acl(sympathy-4, said-11) punct(have-2, .-12)",0,0,0,"root(ROOT, have) nsbj(have, I) amod(sympathy, considerable) dobj(have, sympathy) mark(said, with) dobj(said, what) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(said, Friend) ax(said, has) acl(sympathy, said) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) amod(NN,JJ) dobj(VBP,NN) mark(VBD,IN) dobj(VBD,WP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBD,NNP) ax(VBD,VBZ) acl(NN,VBD) pnct(VBP,VBP)","[Friend, sympathy, said, my, what]","[Friend, sympathy, said, my, what]",10,[ ],[ ],NNP_Friend NN_sympathy VBD_said PRP$_my WP_what ,"[Friend, sympathy, said, my, what]","[Friend, sympathy, said, my, what]",NNP_Friend NN_sympathy VBD_said PRP$_my WP_what ,"[Friend, sympathy, said, my, what]",NNP_Friend NN_sympathy VBD_said PRP$_my WP_what ,"[Friend, sympathy, said, my, what]",NNP_Friend NN_sympathy VBD_said PRP$_my WP_what ,-3,0,2,0,0,0,2,2,2,2
I confirm that I saw a poll yesterday which declared that 62 per cent.,IPRP confirmVBP thatIN IPRP sawVBD aDT pollNN yesterdayNN whichWDT declaredVBD thatIN 62CD perIN centNN ,"root(ROOT-0, confirm-2) nsubj(confirm-2, I-1) mark(saw-5, that-3) nsubj(saw-5, I-4) ccomp(confirm-2, saw-5) det(poll-7, a-6) dobj(saw-5, poll-7) nmod:tmod(saw-5, yesterday-8) nsubj(declared-10, which-9) dep(saw-5, declared-10) dobj(declared-10, that-11) amod(that-11, 62-12) case(cent-14, per-13) nmod:per(62-12, cent-14) punct(confirm-2, .-15)",0,0,0,"root(ROOT, confirm) nsbj(confirm, I) mark(saw, that) nsbj(saw, I) ccomp(confirm, saw) det(poll, a) dobj(saw, poll) nmod:tmod(saw, yesterday) nsbj(declared, which) dep(saw, declared) dobj(declared, that) amod(that, 62) case(cent, per) nmod:per(62, cent) pnct(confirm, .)","root(,VBP) nsbj(VBP,PRP) mark(VBD,IN) nsbj(VBD,PRP) ccomp(VBP,VBD) det(NN,DT) dobj(VBD,NN) nmod:tmod(VBD,NN) nsbj(VBD,WDT) dep(VBD,VBD) dobj(VBD,IN) amod(IN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBP,VBP)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of London parents said that they were not at all concerned about the abolition of ILEA.,ofIN LondonNNP parentsNNS saidVBD thatIN theyPRP wereVBD notRB atIN allDT concernedVBN aboutIN theDT abolitionNN ofIN ILEANNP ,"root(ROOT-0, parents-3) case(parents-3, of-1) compound(parents-3, London-2) acl(parents-3, said-4) mark(concerned-11, that-5) nsubjpass(concerned-11, they-6) auxpass(concerned-11, were-7) neg(concerned-11, not-8) case(all-10, at-9) nmod:at(concerned-11, all-10) ccomp(said-4, concerned-11) case(abolition-14, about-12) det(abolition-14, the-13) nmod:about(concerned-11, abolition-14) case(ILEA-16, of-15) nmod:of(abolition-14, ILEA-16) punct(parents-3, .-17)",0,0,0,"root(ROOT, parents) case(parents, of) compond(parents, London) acl(parents, said) mark(concerned, that) nsbjpass(concerned, they) axpass(concerned, were) neg(concerned, not) case(all, at) nmod:at(concerned, all) ccomp(said, concerned) case(abolition, abot) det(abolition, the) nmod:abot(concerned, abolition) case(ILEA, of) nmod:of(abolition, ILEA) pnct(parents, .)","root(,NNS) case(NNS,IN) compond(NNS,NNP) acl(NNS,VBD) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBD) neg(VBN,RB) case(DT,IN) nmod:at(VBN,DT) ccomp(VBD,VBN) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(NNS,NNS)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
When it came to the inner London parents  49 per cent.,WhenWRB itPRP cameVBD toTO theDT innerJJ LondonNNP parentsNNS 49CD perIN centNN ,"root(ROOT-0, came-3) advmod(came-3, When-1) nsubj(came-3, it-2) case(parents-8, to-4) det(parents-8, the-5) amod(parents-8, inner-6) compound(parents-8, London-7) nmod:to(came-3, parents-8) punct(came-3, ,-9) root(,-9, 49-10) case(cent-12, per-11) nmod:per(49-10, cent-12) punct(49-10, .-13)",0,0,0,"root(ROOT, came) advmod(came, When) nsbj(came, it) case(parents, to) det(parents, the) amod(parents, inner) compond(parents, London) nmod:to(came, parents) pnct(came, ,) root(,, 49) case(cent, per) nmod:per(49, cent) pnct(49, .)","root(,VBD) advmod(VBD,WRB) nsbj(VBD,PRP) case(NNS,TO) det(NNS,DT) amod(NNS,JJ) compond(NNS,NNP) nmod:to(VBD,NNS) pnct(VBD,VBD) root(VBDVBDCD) case(NN,IN) nmod:per(CD,NN) pnct(CD,CD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
said that they were not concerned.,saidVBD thatIN theyPRP wereVBD notRB concernedVBN ,"root(ROOT-0, said-1) mark(concerned-6, that-2) nsubjpass(concerned-6, they-3) auxpass(concerned-6, were-4) neg(concerned-6, not-5) ccomp(said-1, concerned-6) punct(said-1, .-7)",0,0,1,"root(ROOT, said) mark(concerned, that) nsbjpass(concerned, they) axpass(concerned, were) neg(concerned, not) ccomp(said, concerned) pnct(said, .)","root(,VBD) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBD) neg(VBN,RB) ccomp(VBD,VBN) pnct(VBD,VBD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
To help the debate  what can the Secretary of State tell us to allay the fears of all those who enjoy adult education within ILEA and take part in access courses?,ToTO helpVB theDT debateNN whatWP canMD theDT SecretaryNNP ofIN StateNNP tellVBP usPRP toTO allayVB theDT fearsNNS ofIN allPDT thoseDT whoWP enjoyVBP adultJJ educationNN withinIN ILEANNP andCC takeVB partNN inIN accessNN coursesNNS ,"root(ROOT-0, help-2) mark(help-2, To-1) det(debate-4, the-3) dobj(help-2, debate-4) punct(help-2, ,-5) nsubj(tell-12, what-6) aux(tell-12, can-7) det(Secretary-9, the-8) nsubj(tell-12, Secretary-9) case(State-11, of-10) nmod:of(Secretary-9, State-11) parataxis(help-2, tell-12) dobj(tell-12, us-13) mark(allay-15, to-14) xcomp(tell-12, allay-15) det(fears-17, the-16) dobj(allay-15, fears-17) case(those-20, of-18) det:predet(those-20, all-19) nmod:of(fears-17, those-20) nsubj(enjoy-22, who-21) nsubj(take-28, who-21) acl:relcl(those-20, enjoy-22) amod(education-24, adult-23) dobj(enjoy-22, education-24) case(ILEA-26, within-25) nmod:within(enjoy-22, ILEA-26) cc(enjoy-22, and-27) acl:relcl(those-20, take-28) conj:and(enjoy-22, take-28) dobj(take-28, part-29) case(courses-32, in-30) compound(courses-32, access-31) nmod:in(take-28, courses-32) punct(help-2, ?-33)",0,0,0,"root(ROOT, help) mark(help, To) det(debate, the) dobj(help, debate) pnct(help, ,) nsbj(tell, what) ax(tell, can) det(Secretary, the) nsbj(tell, Secretary) case(State, of) nmod:of(Secretary, State) parataxis(help, tell) dobj(tell, s) mark(allay, to) xcomp(tell, allay) det(fears, the) dobj(allay, fears) case(those, of) det:predet(those, all) nmod:of(fears, those) nsbj(enjoy, who) nsbj(take, who) acl:relcl(those, enjoy) amod(edcation, adlt) dobj(enjoy, edcation) case(ILEA, within) nmod:within(enjoy, ILEA) cc(enjoy, and) acl:relcl(those, take) conj:and(enjoy, take) dobj(take, part) case(corses, in) compond(corses, access) nmod:in(take, corses) pnct(help, ?)","root(,VB) mark(VB,TO) det(NN,DT) dobj(VB,NN) pnct(VB,VB) nsbj(VBP,WP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) parataxis(VB,VBP) dobj(VBP,PRP) mark(VB,TO) xcomp(VBP,VB) det(NNS,DT) dobj(VB,NNS) case(DT,IN) det:predet(DT,PDT) nmod:of(NNS,DT) nsbj(VBP,WP) nsbj(VB,WP) acl:relcl(DT,VBP) amod(NN,JJ) dobj(VBP,NN) case(NNP,IN) nmod:within(VBP,NNP) cc(VBP,CC) acl:relcl(DT,VB) conj:and(VBP,VB) dobj(VB,NN) case(NNS,IN) compond(NNS,NN) nmod:in(VB,NNS) pnct(VB,VB)","[State, us, tell, what, allay, Secretary]","[State, us, tell, what, allay, Secretary]",10,[ ],[ ],NNP_State PRP_us VB_tell WP_what VB_allay NNP_Secretary ,"[State, us, tell, what, allay, Secretary]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will they be able to continue?,WillMD theyPRP beVB ableJJ toTO continueVB ,"root(ROOT-0, able-4) aux(able-4, Will-1) nsubj(able-4, they-2) cop(able-4, be-3) mark(continue-6, to-5) xcomp(able-4, continue-6) punct(able-4, ?-7)",0,0,0,"root(ROOT, able) ax(able, Will) nsbj(able, they) cop(able, be) mark(contine, to) xcomp(able, contine) pnct(able, ?)","root(,JJ) ax(JJ,MD) nsbj(JJ,PRP) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) pnct(JJ,JJ)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Can he assure us that there will not be major problems with cross borough transfers?,CanMD hePRP assureVB usPRP thatIN thereEX willMD notRB beVB majorJJ problemsNNS withIN crossNN boroughNN transfersNNS ,"root(ROOT-0, assure-3) aux(assure-3, Can-1) nsubj(assure-3, he-2) dobj(assure-3, us-4) mark(problems-11, that-5) expl(problems-11, there-6) aux(problems-11, will-7) neg(problems-11, not-8) cop(problems-11, be-9) amod(problems-11, major-10) ccomp(assure-3, problems-11) case(transfers-15, with-12) amod(transfers-15, cross-13) compound(transfers-15, borough-14) nmod:with(problems-11, transfers-15) punct(assure-3, ?-16)",0,0,1,"root(ROOT, assre) ax(assre, Can) nsbj(assre, he) dobj(assre, s) mark(problems, that) expl(problems, there) ax(problems, will) neg(problems, not) cop(problems, be) amod(problems, major) ccomp(assre, problems) case(transfers, with) amod(transfers, cross) compond(transfers, borogh) nmod:with(problems, transfers) pnct(assre, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) dobj(VB,PRP) mark(NNS,IN) expl(NNS,EX) ax(NNS,MD) neg(NNS,RB) cop(NNS,VB) amod(NNS,JJ) ccomp(VB,NNS) case(NNS,IN) amod(NNS,NN) compond(NNS,NN) nmod:with(NNS,NNS) pnct(VB,VB)","[he, ROOT, us, problems, assure]","[he, ROOT, us, problems, assure]",11,[ ],[ ],PRP_he PRP_us NNS_problems NN_assure ,"[he, ROOT, us, problems, assure]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have made it clear that we want to ensure that the good things being done by ILEA are retained.,IPRP haveVBP madeVBN itPRP clearJJ thatIN wePRP wantVBP toTO ensureVB thatIN theDT goodJJ thingsNNS beingVBG doneVBN byIN ILEANNP areVBP retainedVBN ,"root(ROOT-0, retained-20) nsubj(made-3, I-1) aux(made-3, have-2) csubjpass(retained-20, made-3) nsubj(clear-5, it-4) xcomp(made-3, clear-5) mark(want-8, that-6) nsubj(want-8, we-7) ccomp(clear-5, want-8) mark(ensure-10, to-9) xcomp(want-8, ensure-10) mark(done-16, that-11) det(things-14, the-12) amod(things-14, good-13) nsubjpass(done-16, things-14) auxpass(done-16, being-15) ccomp(ensure-10, done-16) case(ILEA-18, by-17) nmod:agent(done-16, ILEA-18) auxpass(retained-20, are-19) punct(retained-20, .-21)",0,1,0,"root(ROOT, retained) nsbj(made, I) ax(made, have) csbjpass(retained, made) nsbj(clear, it) xcomp(made, clear) mark(want, that) nsbj(want, we) ccomp(clear, want) mark(ensre, to) xcomp(want, ensre) mark(done, that) det(things, the) amod(things, good) nsbjpass(done, things) axpass(done, being) ccomp(ensre, done) case(ILEA, by) nmod:agent(done, ILEA) axpass(retained, are) pnct(retained, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) csbjpass(VBN,VBN) nsbj(JJ,PRP) xcomp(VBN,JJ) mark(VBP,IN) nsbj(VBP,PRP) ccomp(JJ,VBP) mark(VB,TO) xcomp(VBP,VB) mark(VBN,IN) det(NNS,DT) amod(NNS,JJ) nsbjpass(VBN,NNS) axpass(VBN,VBG) ccomp(VB,VBN) case(NNP,IN) nmod:agent(VBN,NNP) axpass(VBN,VBP) pnct(VBN,VBN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
My hon. Friend the Under Secretary of State in the other House will be referring to this is a speech which she will be making shortly.,MyPRP$ honNN FriendIN theDT UnderIN SecretaryNNP ofIN StateNNP inIN theDT otherJJ HouseNNP willMD beVB referringVBG toTO thisDT isVBZ aDT speechNN whichWDT shePRP willMD beVB makingVBG shortlyRB ,"root(ROOT-0, speech-20) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(speech-20, Friend-3) nsubj(referring-15, the-4) case(Secretary-6, Under-5) nmod:under(the-4, Secretary-6) case(State-8, of-7) nmod:of(Secretary-6, State-8) case(House-12, in-9) det(House-12, the-10) amod(House-12, other-11) nmod:in(the-4, House-12) aux(referring-15, will-13) aux(referring-15, be-14) acl:relcl(Friend-3, referring-15) case(this-17, to-16) nmod:to(referring-15, this-17) cop(speech-20, is-18) det(speech-20, a-19) dobj(making-25, which-21) nsubj(making-25, she-22) aux(making-25, will-23) aux(making-25, be-24) acl:relcl(speech-20, making-25) advmod(making-25, shortly-26) punct(speech-20, .-27)",0,0,1,"root(ROOT, speech) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(speech, Friend) nsbj(referring, the) case(Secretary, Under) nmod:nder(the, Secretary) case(State, of) nmod:of(Secretary, State) case(Hose, in) det(Hose, the) amod(Hose, other) nmod:in(the, Hose) ax(referring, will) ax(referring, be) acl:relcl(Friend, referring) case(this, to) nmod:to(referring, this) cop(speech, is) det(speech, a) dobj(making, which) nsbj(making, she) ax(making, will) ax(making, be) acl:relcl(speech, making) advmod(making, shortly) pnct(speech, .)","root(,NN) nmod:poss(IN,PRP$) compond(IN,IN) nsbj(NN,IN) nsbj(VBG,DT) case(NNP,IN) nmod:nder(DT,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:in(DT,NNP) ax(VBG,MD) ax(VBG,VB) acl:relcl(IN,VBG) case(DT,TO) nmod:to(VBG,DT) cop(NN,VBZ) det(NN,DT) dobj(VBG,WDT) nsbj(VBG,PRP) ax(VBG,MD) ax(VBG,VB) acl:relcl(NN,VBG) advmod(VBG,RB) pnct(NN,NN)","[My, the, House, shortly, referring, she, State, this, speech, which, Friend, ROOT, making, Secretary]","[My, the, House, shortly, referring, she, State, this, speech, which, Friend, ROOT, making, Secretary]",12,"[My, the, House, referring, State, this, speech, Friend, ROOT, making, Secretary]","[Secretary, the, House, referring, State]",PRP$_My DT_the NNP_House RB_shortly VBG_referring PRP_she NNP_State DT_this NN_speech WDT_which NNP_Friend VBG_making NNP_Secretary ,"[My, the, House, shortly, referring, she, State, this, speech, which, Friend, ROOT, making, Secretary]","[My, the, House, shortly, referring, she, State, this, speech, which, Friend, ROOT, making, Secretary]",PRP$_My DT_the NNP_House RB_shortly VBG_referring PRP_she NNP_State DT_this NN_speech WDT_which NNP_Friend VBG_making NNP_Secretary ,"[My, the, House, shortly, referring, she, State, this, speech, which, Friend, ROOT, making, Secretary]",PRP$_My DT_the NNP_House RB_shortly VBG_referring PRP_she NNP_State DT_this NN_speech WDT_which NNP_Friend VBG_making NNP_Secretary ,"[My, the, House, shortly, referring, she, State, this, speech, which, Friend, ROOT, making, Secretary]",PRP$_My DT_the NNP_House RB_shortly VBG_referring PRP_she NNP_State DT_this NN_speech WDT_which NNP_Friend VBG_making NNP_Secretary ,-3,0,2,0,0,0,0,0,0,0
The children of London will then have the opportunity to have a decent education.,TheDT childrenNNS ofIN LondonNNP willMD thenRB haveVB theDT opportunityNN toTO haveVB aDT decentJJ educationNN ,"root(ROOT-0, have-7) det(children-2, The-1) nsubj(have-7, children-2) case(London-4, of-3) nmod:of(children-2, London-4) aux(have-7, will-5) advmod(have-7, then-6) det(opportunity-9, the-8) dobj(have-7, opportunity-9) mark(have-11, to-10) acl(opportunity-9, have-11) det(education-14, a-12) amod(education-14, decent-13) dobj(have-11, education-14) punct(have-7, .-15)",0,0,1,"root(ROOT, have) det(children, The) nsbj(have, children) case(London, of) nmod:of(children, London) ax(have, will) advmod(have, then) det(opportnity, the) dobj(have, opportnity) mark(have, to) acl(opportnity, have) det(edcation, a) amod(edcation, decent) dobj(have, edcation) pnct(have, .)","root(,VB) det(NNS,DT) nsbj(VB,NNS) case(NNP,IN) nmod:of(NNS,NNP) ax(VB,MD) advmod(VB,RB) det(NN,DT) dobj(VB,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(VB,VB)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
ILEA accounts for some 4 per cent.,ILEANNP accountsNNS forIN someDT 4CD perIN centNN ,"root(ROOT-0, accounts-2) compound(accounts-2, ILEA-1) acl(accounts-2, for-3) dobj(for-3, some-4) amod(some-4, 4-5) case(cent-7, per-6) nmod:per(4-5, cent-7) punct(accounts-2, .-8)",0,0,0,"root(ROOT, acconts) compond(acconts, ILEA) acl(acconts, for) dobj(for, some) amod(some, 4) case(cent, per) nmod:per(4, cent) pnct(acconts, .)","root(,NNS) compond(NNS,NNP) acl(NNS,IN) dobj(IN,DT) amod(DT,CD) case(NN,IN) nmod:per(CD,NN) pnct(NNS,NNS)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the school population of the country and 8 per cent.,ofIN theDT schoolNN populationNN ofIN theDT countryNN andCC 8CD perIN centNN ,"root(ROOT-0, population-4) case(population-4, of-1) det(population-4, the-2) compound(population-4, school-3) case(country-7, of-5) det(country-7, the-6) nmod:of(population-4, country-7) cc(population-4, and-8) conj:and(population-4, 8-9) case(cent-11, per-10) nmod:per(8-9, cent-11) punct(population-4, .-12)",0,0,0,"root(ROOT, poplation) case(poplation, of) det(poplation, the) compond(poplation, school) case(contry, of) det(contry, the) nmod:of(poplation, contry) cc(poplation, and) conj:and(poplation, 8) case(cent, per) nmod:per(8, cent) pnct(poplation, .)","root(,NN) case(NN,IN) det(NN,DT) compond(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) cc(NN,CC) conj:and(NN,CD) case(NN,IN) nmod:per(CD,NN) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the national school budget.,ofIN theDT nationalJJ schoolNN budgetNN ,"root(ROOT-0, budget-5) case(budget-5, of-1) det(budget-5, the-2) amod(budget-5, national-3) compound(budget-5, school-4) punct(budget-5, .-6)",0,0,0,"root(ROOT, bdget) case(bdget, of) det(bdget, the) amod(bdget, national) compond(bdget, school) pnct(bdget, .)","root(,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is a very extravagant spender.,ItPRP isVBZ aDT veryRB extravagantJJ spenderNN ,"root(ROOT-0, spender-6) nsubj(spender-6, It-1) cop(spender-6, is-2) det(spender-6, a-3) advmod(extravagant-5, very-4) amod(spender-6, extravagant-5) punct(spender-6, .-7)",0,0,0,"root(ROOT, spender) nsbj(spender, It) cop(spender, is) det(spender, a) advmod(extravagant, very) amod(spender, extravagant) pnct(spender, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The new arrangements will ensure that money is better spent  to the benefit of the children of London.,TheDT newJJ arrangementsNNS willMD ensureVB thatDT moneyNN isVBZ betterRBR spentNN toTO theDT benefitNN ofIN theDT childrenNNS ofIN LondonNNP ,"root(ROOT-0, ensure-5) det(arrangements-3, The-1) amod(arrangements-3, new-2) nsubj(ensure-5, arrangements-3) aux(ensure-5, will-4) det(money-7, that-6) nsubjpass(spent-10, money-7) auxpass(spent-10, is-8) advmod(spent-10, better-9) ccomp(ensure-5, spent-10) punct(spent-10, ,-11) case(benefit-14, to-12) det(benefit-14, the-13) nmod:to(spent-10, benefit-14) case(children-17, of-15) det(children-17, the-16) nmod:of(benefit-14, children-17) case(London-19, of-18) nmod:of(children-17, London-19) punct(ensure-5, .-20)",0,0,0,"root(ROOT, ensre) det(arrangements, The) amod(arrangements, new) nsbj(ensre, arrangements) ax(ensre, will) det(money, that) nsbjpass(spent, money) axpass(spent, is) advmod(spent, better) ccomp(ensre, spent) pnct(spent, ,) case(benefit, to) det(benefit, the) nmod:to(spent, benefit) case(children, of) det(children, the) nmod:of(benefit, children) case(London, of) nmod:of(children, London) pnct(ensre, .)","root(,VB) det(NNS,DT) amod(NNS,JJ) nsbj(VB,NNS) ax(VB,MD) det(NN,DT) nsbjpass(NN,NN) axpass(NN,VBZ) advmod(NN,RBR) ccomp(VB,NN) pnct(NN,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) case(NNP,IN) nmod:of(NNS,NNP) pnct(VB,VB)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
To ask the Secretary of State for Foreign and Commonwealth Affairs if he will make a statement relating to the overall outcome of meetings of the Council of Ministers of the European Economic Community which have occurred since 29 July last.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN ForeignNNP andCC CommonwealthNNP AffairsNNPS ifIN hePRP willMD makeVB aDT statementNN relatingVBG toTO theDT overallJJ outcomeNN ofIN meetingsNNS ofIN theDT CouncilNNP ofIN MinistersNNP ofIN theDT EuropeanJJ EconomicNNP CommunityNNP whichWDT haveVBP occurredVBN sinceIN 29CD JulyNNP lastJJ ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Affairs-11, for-7) compound(Affairs-11, Foreign-8) cc(Foreign-8, and-9) conj:and(Foreign-8, Commonwealth-10) compound(Affairs-11, Commonwealth-10) nmod:for(Secretary-4, Affairs-11) mark(make-15, if-12) nsubj(make-15, he-13) aux(make-15, will-14) advcl(ask-2, make-15) det(statement-17, a-16) dobj(make-15, statement-17) acl(statement-17, relating-18) case(outcome-22, to-19) det(outcome-22, the-20) amod(outcome-22, overall-21) nmod:to(relating-18, outcome-22) case(meetings-24, of-23) nmod:of(outcome-22, meetings-24) case(Council-27, of-25) det(Council-27, the-26) nmod:of(meetings-24, Council-27) case(Ministers-29, of-28) nmod:of(Council-27, Ministers-29) case(Community-34, of-30) det(Community-34, the-31) amod(Community-34, European-32) compound(Community-34, Economic-33) nmod:of(Ministers-29, Community-34) nsubj(occurred-37, which-35) aux(occurred-37, have-36) acl:relcl(Council-27, occurred-37) case(July-40, since-38) nummod(July-40, 29-39) nmod:since(occurred-37, July-40) advmod(occurred-37, last-41) punct(ask-2, .-42)",0,1,1,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Affairs, for) compond(Affairs, Foreign) cc(Foreign, and) conj:and(Foreign, Commonwealth) compond(Affairs, Commonwealth) nmod:for(Secretary, Affairs) mark(make, if) nsbj(make, he) ax(make, will) advcl(ask, make) det(statement, a) dobj(make, statement) acl(statement, relating) case(otcome, to) det(otcome, the) amod(otcome, overall) nmod:to(relating, otcome) case(meetings, of) nmod:of(otcome, meetings) case(Concil, of) det(Concil, the) nmod:of(meetings, Concil) case(Ministers, of) nmod:of(Concil, Ministers) case(Commnity, of) det(Commnity, the) amod(Commnity, Eropean) compond(Commnity, Economic) nmod:of(Ministers, Commnity) nsbj(occrred, which) ax(occrred, have) acl:relcl(Concil, occrred) case(Jly, since) nmmod(Jly, 29) nmod:since(occrred, Jly) advmod(occrred, last) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNPS,IN) compond(NNPS,NNP) cc(NNP,CC) conj:and(NNP,NNP) compond(NNPS,NNP) nmod:for(NNP,NNPS) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VB,VB) det(NN,DT) dobj(VB,NN) acl(NN,VBG) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VBG,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nmod:of(NNP,NNP) nsbj(VBN,WDT) ax(VBN,VBP) acl:relcl(NNP,VBN) case(NNP,IN) nmmod(NNP,CD) nmod:since(VBN,NNP) advmod(VBN,JJ) pnct(VB,VB)","[ask, State, he, Secretary, statement, ROOT, make, Affairs]","[ask, State, he, Secretary, statement, ROOT, make, Affairs]",1,"[Secretary, ask, ROOT, State, make, Affairs]","[Secretary, ask, ROOT, State, make, Affairs]",VB_ask NNP_State PRP_he NNP_Secretary NN_statement VB_make NNP_Affairs ,"[ask, State, he, Secretary, statement, ROOT, make, Affairs]","[ask, State, he, Secretary, statement, ROOT, make, Affairs]",VB_ask NNP_State PRP_he NNP_Secretary NN_statement VB_make NNP_Affairs ,"[ask, State, he, Secretary, statement, ROOT, make, Affairs]",VB_ask NNP_State PRP_he NNP_Secretary NN_statement VB_make NNP_Affairs ,"[ask, State, he, Secretary, statement, ROOT, make, Affairs]",VB_ask NNP_State PRP_he NNP_Secretary NN_statement VB_make NNP_Affairs ,-3,0,2,0,0,0,0,0,0,0
There has been one Foreign Affairs Council  on 26 September.,ThereEX hasVBZ beenVBN oneCD ForeignNNP AffairsNNPS CouncilNNP onIN 26CD SeptemberNNP ,"root(ROOT-0, Council-7) expl(Council-7, There-1) aux(Council-7, has-2) cop(Council-7, been-3) nummod(Council-7, one-4) compound(Council-7, Foreign-5) compound(Council-7, Affairs-6) punct(Council-7, ,-8) case(September-11, on-9) nummod(September-11, 26-10) nmod:on(Council-7, September-11) punct(Council-7, .-12)",0,0,0,"root(ROOT, Concil) expl(Concil, There) ax(Concil, has) cop(Concil, been) nmmod(Concil, one) compond(Concil, Foreign) compond(Concil, Affairs) pnct(Concil, ,) case(September, on) nmmod(September, 26) nmod:on(Concil, September) pnct(Concil, .)","root(,NNP) expl(NNP,EX) ax(NNP,VBZ) cop(NNP,VBN) nmmod(NNP,CD) compond(NNP,NNP) compond(NNP,NNPS) pnct(NNP,NNP) case(NNP,IN) nmmod(NNP,CD) nmod:on(NNP,NNP) pnct(NNP,NNP)",[ ],[ ],1,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I represented the United Kingdom  accompanied by my hon. Friend the Minister for Overseas Development.,IPRP representedVBD theDT UnitedNNP KingdomNNP accompaniedVBN byIN myPRP$ honNN FriendNNP theDT MinisterNNP forIN OverseasNNP DevelopmentNNP ,"root(ROOT-0, represented-2) nsubj(represented-2, I-1) det(Kingdom-5, the-3) compound(Kingdom-5, United-4) dobj(represented-2, Kingdom-5) punct(represented-2, ,-6) advcl(represented-2, accompanied-7) case(Friend-11, by-8) nmod:poss(Friend-11, my-9) compound(Friend-11, hon.-10) nmod:by(accompanied-7, Friend-11) det(Minister-13, the-12) dep(Friend-11, Minister-13) case(Development-16, for-14) compound(Development-16, Overseas-15) nmod:for(Minister-13, Development-16) punct(represented-2, .-17)",0,0,0,"root(ROOT, represented) nsbj(represented, I) det(Kingdom, the) compond(Kingdom, United) dobj(represented, Kingdom) pnct(represented, ,) advcl(represented, accompanied) case(Friend, by) nmod:poss(Friend, my) compond(Friend, hon.) nmod:by(accompanied, Friend) det(Minister, the) dep(Friend, Minister) case(Development, for) compond(Development, Overseas) nmod:for(Minister, Development) pnct(represented, .)","root(,VBD) nsbj(VBD,PRP) det(NNP,DT) compond(NNP,NNP) dobj(VBD,NNP) pnct(VBD,VBD) advcl(VBD,VBN) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:by(VBN,NNP) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) compond(NNP,NNP) nmod:for(NNP,NNP) pnct(VBD,VBD)","[Friend, represented, Minister, Development, my, accompanied]","[Friend, represented, Minister, Development, my, accompanied]",2,"[Friend, represented, Minister, Development, my, accompanied]","[Friend, represented, Minister, Development, my, accompanied]",NNP_Friend VBD_represented NNP_Minister NNP_Development PRP$_my VBN_accompanied ,"[Friend, represented, Minister, Development, my, accompanied]","[Friend, represented, Minister, Development, my, accompanied]",NNP_Friend VBD_represented NNP_Minister NNP_Development PRP$_my VBN_accompanied ,"[Friend, represented, Minister, Development, my, accompanied]",NNP_Friend VBD_represented NNP_Minister NNP_Development PRP$_my VBN_accompanied ,"[Friend, represented, Minister, Development, my, accompanied]",NNP_Friend VBD_represented NNP_Minister NNP_Development PRP$_my VBN_accompanied ,-3,0,2,0,0,0,0,0,0,0
The main issue discussed was the Community's negotiating mandate for Lomé IV.,TheDT mainJJ issueNN discussedVBN wasVBD theDT CommunityNNP 'sPOS negotiatingNN mandateNN forIN LoméNNP IVNNP ,"root(ROOT-0, mandate-10) det(issue-3, The-1) amod(issue-3, main-2) nsubj(mandate-10, issue-3) acl(issue-3, discussed-4) cop(mandate-10, was-5) det(Community-7, the-6) nmod:poss(mandate-10, Community-7) case(Community-7, 's-8) amod(mandate-10, negotiating-9) case(IV-13, for-11) compound(IV-13, Lomé-12) nmod:for(mandate-10, IV-13) punct(mandate-10, .-14)",0,0,0,"root(ROOT, mandate) det(isse, The) amod(isse, main) nsbj(mandate, isse) acl(isse, discssed) cop(mandate, was) det(Commnity, the) nmod:poss(mandate, Commnity) ""case(Commnity, s)"", amod(mandate, negotiating) case(IV, for) compond(IV, Lom\xe9) nmod:for(mandate, IV) pnct(mandate, .)","root(,NN) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) acl(NN,VBN) cop(NN,VBD) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,NN) case(NNP,IN) compond(NNP,NNP) nmod:for(NN,NNP) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
With permission  Mr. Speaker  I will circulate a fuller statement in the Official Report.,WithIN permissionNN MrNNP SpeakerNNP IPRP willMD circulateVB aDT fullerNN statementNN inIN theDT OfficialNNP ReportNNP ,"root(ROOT-0, permission-2) case(permission-2, With-1) punct(permission-2, ,-3) compound(Speaker-5, Mr.-4) root(,-3, Speaker-5) punct(Speaker-5, ,-6) nsubj(circulate-9, I-7) aux(circulate-9, will-8) acl:relcl(Speaker-5, circulate-9) det(statement-12, a-10) amod(statement-12, fuller-11) dobj(circulate-9, statement-12) case(Report-16, in-13) det(Report-16, the-14) compound(Report-16, Official-15) nmod:in(statement-12, Report-16) punct(Speaker-5, .-17)",0,0,0,"root(ROOT, permission) case(permission, With) pnct(permission, ,) compond(Speaker, Mr.) root(,, Speaker) pnct(Speaker, ,) nsbj(circlate, I) ax(circlate, will) acl:relcl(Speaker, circlate) det(statement, a) amod(statement, fller) dobj(circlate, statement) case(Report, in) det(Report, the) compond(Report, Official) nmod:in(statement, Report) pnct(Speaker, .)","root(,NN) case(NN,IN) pnct(NN,NN) compond(NNP,NNP) root(NNPNNPNNP) pnct(NNP,NNP) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NNP,VB) det(NN,DT) amod(NN,NN) dobj(VB,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) pnct(NNP,NNP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
My ministerial colleagues will  I am sure  be reporting to the House in the usual way on the outcome of councils for which they are responsible.,MyPRP$ ministerialJJ colleaguesNNS willMD IPRP amVBP sureJJ beVB reportingVBG toTO theDT HouseNNP inIN theDT usualJJ wayNN onIN theDT outcomeNN ofIN councilsNNS forIN whichWDT theyPRP areVBP responsibleJJ ,"root(ROOT-0, reporting-11) nmod:poss(colleagues-3, My-1) amod(colleagues-3, ministerial-2) nsubj(reporting-11, colleagues-3) aux(reporting-11, will-4) punct(sure-8, ,-5) nsubj(sure-8, I-6) cop(sure-8, am-7) parataxis(reporting-11, sure-8) punct(sure-8, ,-9) aux(reporting-11, be-10) case(House-14, to-12) det(House-14, the-13) nmod:to(reporting-11, House-14) case(way-18, in-15) det(way-18, the-16) amod(way-18, usual-17) nmod:in(reporting-11, way-18) case(outcome-21, on-19) det(outcome-21, the-20) nmod:on(way-18, outcome-21) case(councils-23, of-22) nmod:of(outcome-21, councils-23) case(which-25, for-24) nmod:for(responsible-28, which-25) nsubj(responsible-28, they-26) cop(responsible-28, are-27) acl:relcl(councils-23, responsible-28) punct(reporting-11, .-29)",0,0,0,"root(ROOT, reporting) nmod:poss(colleages, My) amod(colleages, ministerial) nsbj(reporting, colleages) ax(reporting, will) pnct(sre, ,) nsbj(sre, I) cop(sre, am) parataxis(reporting, sre) pnct(sre, ,) ax(reporting, be) case(Hose, to) det(Hose, the) nmod:to(reporting, Hose) case(way, in) det(way, the) amod(way, sal) nmod:in(reporting, way) case(otcome, on) det(otcome, the) nmod:on(way, otcome) case(concils, of) nmod:of(otcome, concils) case(which, for) nmod:for(responsible, which) nsbj(responsible, they) cop(responsible, are) acl:relcl(concils, responsible) pnct(reporting, .)","root(,VBG) nmod:poss(NNS,PRP$) amod(NNS,JJ) nsbj(VBG,NNS) ax(VBG,MD) pnct(JJ,JJ) nsbj(JJ,PRP) cop(JJ,VBP) parataxis(VBG,JJ) pnct(JJ,JJ) ax(VBG,VB) case(NNP,TO) det(NNP,DT) nmod:to(VBG,NNP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VBG,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(WDT,IN) nmod:for(JJ,WDT) nsbj(JJ,PRP) cop(JJ,VBP) acl:relcl(NNS,JJ) pnct(VBG,VBG)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the right hon. Lady tell us something about the Internal Market Council that met on 29 September?,WillMD theDT rightJJ honNN LadyNNP tellVBP usPRP somethingNN aboutIN theDT InternalNNP MarketNNP CouncilNNP thatWDT metVBD onIN 29CD SeptemberNNP ,"root(ROOT-0, tell-6) aux(tell-6, Will-1) det(Lady-5, the-2) amod(Lady-5, right-3) compound(Lady-5, hon.-4) nsubj(tell-6, Lady-5) iobj(tell-6, us-7) dobj(tell-6, something-8) case(Council-13, about-9) det(Council-13, the-10) compound(Council-13, Internal-11) compound(Council-13, Market-12) nmod:about(something-8, Council-13) nsubj(met-15, that-14) acl:relcl(Council-13, met-15) case(September-18, on-16) nummod(September-18, 29-17) nmod:on(met-15, September-18) punct(tell-6, ?-19)",0,1,0,"root(ROOT, tell) ax(tell, Will) det(Lady, the) amod(Lady, right) compond(Lady, hon.) nsbj(tell, Lady) iobj(tell, s) dobj(tell, something) case(Concil, abot) det(Concil, the) compond(Concil, Internal) compond(Concil, Market) nmod:abot(something, Concil) nsbj(met, that) acl:relcl(Concil, met) case(September, on) nmmod(September, 29) nmod:on(met, September) pnct(tell, ?)","root(,VBP) ax(VBP,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBP,NNP) iobj(VBP,PRP) dobj(VBP,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:abot(NN,NNP) nsbj(VBD,WDT) acl:relcl(NNP,VBD) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) pnct(VBP,VBP)","[something, tell, ROOT, us, right, Lady]","[us, ROOT, tell, Lady, something]",2,[ ],[ ],PRP_us VB_tell NNP_Lady NN_something ,"[us, ROOT, tell, Lady, something]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Cannot that council create legislation applicable to this country  even if it is against the wishes of the Government and the House  by virtue of qualified majority voting?,CanMD notRB thatIN councilNN createVBP legislationNN applicableJJ toTO thisDT countryNN evenRB ifIN itPRP isVBZ againstIN theDT wishesNNS ofIN theDT GovernmentNNP andCC theDT HouseNNP byIN virtueNN ofIN qualifiedJJ majorityNN votingNN ,"root(ROOT-0, Can-1) neg(that-3, not-2) ccomp(Can-1, that-3) nsubj(create-5, council-4) ccomp(that-3, create-5) dobj(create-5, legislation-6) amod(legislation-6, applicable-7) case(country-10, to-8) det(country-10, this-9) nmod:to(applicable-7, country-10) punct(create-5, ,-11) advmod(wishes-18, even-12) mark(wishes-18, if-13) nsubj(wishes-18, it-14) cop(wishes-18, is-15) case(wishes-18, against-16) det(wishes-18, the-17) advcl:against(create-5, wishes-18) case(Government-21, of-19) det(Government-21, the-20) nmod:of(wishes-18, Government-21) cc(wishes-18, and-22) det(House-24, the-23) advcl:against(create-5, House-24) conj:and(wishes-18, House-24) punct(House-24, ,-25) case(virtue-27, by-26) nmod:by(House-24, virtue-27) case(voting-31, of-28) amod(voting-31, qualified-29) compound(voting-31, majority-30) nmod:of(virtue-27, voting-31) punct(Can-1, ?-32)",0,0,0,"root(ROOT, Can) neg(that, not) ccomp(Can, that) nsbj(create, concil) ccomp(that, create) dobj(create, legislation) amod(legislation, applicable) case(contry, to) det(contry, this) nmod:to(applicable, contry) pnct(create, ,) advmod(wishes, even) mark(wishes, if) nsbj(wishes, it) cop(wishes, is) case(wishes, against) det(wishes, the) advcl:against(create, wishes) case(Government, of) det(Government, the) nmod:of(wishes, Government) cc(wishes, and) det(Hose, the) advcl:against(create, Hose) conj:and(wishes, Hose) pnct(Hose, ,) case(virte, by) nmod:by(Hose, virte) case(voting, of) amod(voting, qalified) compond(voting, majority) nmod:of(virte, voting) pnct(Can, ?)","root(,MD) neg(IN,RB) ccomp(MD,IN) nsbj(VBP,NN) ccomp(IN,VBP) dobj(VBP,NN) amod(NN,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) pnct(VBP,VBP) advmod(NNS,RB) mark(NNS,IN) nsbj(NNS,PRP) cop(NNS,VBZ) case(NNS,IN) det(NNS,DT) advcl:against(VBP,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) cc(NNS,CC) det(NNP,DT) advcl:against(VBP,NNP) conj:and(NNS,NNP) pnct(NNP,NNP) case(NN,IN) nmod:by(NNP,NN) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) pnct(MD,MD)","[it, even, wishes, create, Government, and]","[it, even, wishes, create, Government, and]",3,"[it, even, wishes, create, Government, and]","[it, even, wishes, create, Government, and]",PRP_it RB_even VBZ_wishes NN_create NNP_Government CC_and ,"[it, even, wishes, create, Government, and]","[it, even, wishes, create, Government, and]",PRP_it RB_even VBZ_wishes NN_create NNP_Government CC_and ,"[it, even, wishes, create, Government, and]",PRP_it RB_even VBZ_wishes NN_create NNP_Government CC_and ,"[it, even, wishes, create, Government, and]",PRP_it RB_even VBZ_wishes NN_create NNP_Government CC_and ,-3,0,2,0,0,0,0,0,0,0
My hon. Friend the Under Secretary attended the Internal Market Council and will report in detail on it.,MyPRP$ honNN FriendIN theDT UnderIN SecretaryNNP attendedVBD theDT InternalNNP MarketNNP CouncilNNP andCC willMD reportVB inIN detailNN onIN itPRP ,"root(ROOT-0, report-14) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(report-14, Friend-3) nsubj(attended-7, the-4) case(Secretary-6, Under-5) nmod:under(the-4, Secretary-6) acl:relcl(Friend-3, attended-7) det(Council-11, the-8) compound(Council-11, Internal-9) compound(Council-11, Market-10) dobj(attended-7, Council-11) cc(Friend-3, and-12) aux(report-14, will-13) case(detail-16, in-15) nmod:in(report-14, detail-16) case(it-18, on-17) nmod:on(detail-16, it-18) punct(report-14, .-19)",0,1,0,"root(ROOT, report) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(report, Friend) nsbj(attended, the) case(Secretary, Under) nmod:nder(the, Secretary) acl:relcl(Friend, attended) det(Concil, the) compond(Concil, Internal) compond(Concil, Market) dobj(attended, Concil) cc(Friend, and) ax(report, will) case(detail, in) nmod:in(report, detail) case(it, on) nmod:on(detail, it) pnct(report, .)","root(,VB) nmod:poss(IN,PRP$) compond(IN,IN) nsbj(VB,IN) nsbj(VBD,DT) case(NNP,IN) nmod:nder(DT,NNP) acl:relcl(IN,VBD) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) dobj(VBD,NNP) cc(IN,CC) ax(VB,MD) case(NN,IN) nmod:in(VB,NN) case(PRP,IN) nmod:on(NN,PRP) pnct(VB,VB)","[report, the, My, and, Friend, ROOT, attended, Council, Secretary]","[report, the, My, and, Friend, ROOT, attended, Council, Secretary]",3,"[Secretary, attended, the]","[Secretary, attended, the]",VB_report DT_the PRP$_My CC_and NNP_Friend VBD_attended NNP_Council NNP_Secretary ,"[report, the, My, and, Friend, ROOT, attended, Council, Secretary]","[report, the, My, and, Friend, ROOT, attended, Council, Secretary]",VB_report DT_the PRP$_My CC_and NNP_Friend VBD_attended NNP_Council NNP_Secretary ,"[report, the, My, and, Friend, ROOT, attended, Council, Secretary]",VB_report DT_the PRP$_My CC_and NNP_Friend VBD_attended NNP_Council NNP_Secretary ,"[report, the, My, and, Friend, ROOT, attended, Council, Secretary]",VB_report DT_the PRP$_My CC_and NNP_Friend VBD_attended NNP_Council NNP_Secretary ,-3,0,2,0,0,0,0,0,0,0
It is fair to say that during the past two years the Community would not have made such progress on the single market without qualified majority voting.,ItPRP isVBZ fairJJ toTO sayVB thatIN duringIN theDT pastJJ twoCD yearsNNS theDT CommunityNNP wouldMD notRB haveVB madeVBN suchJJ progressNN onIN theDT singleJJ marketNN withoutIN qualifiedJJ majorityNN votingNN ,"root(ROOT-0, fair-3) nsubj(fair-3, It-1) cop(fair-3, is-2) mark(say-5, to-4) xcomp(fair-3, say-5) mark(made-17, that-6) case(years-11, during-7) det(years-11, the-8) amod(years-11, past-9) nummod(years-11, two-10) nmod:during(made-17, years-11) det(Community-13, the-12) nsubjpass(made-17, Community-13) aux(made-17, would-14) neg(made-17, not-15) aux(made-17, have-16) ccomp(say-5, made-17) amod(progress-19, such-18) dobj(made-17, progress-19) case(market-23, on-20) det(market-23, the-21) amod(market-23, single-22) nmod:on(progress-19, market-23) case(voting-27, without-24) amod(voting-27, qualified-25) compound(voting-27, majority-26) nmod:without(progress-19, voting-27) punct(fair-3, .-28)",0,0,0,"root(ROOT, fair) nsbj(fair, It) cop(fair, is) mark(say, to) xcomp(fair, say) mark(made, that) case(years, dring) det(years, the) amod(years, past) nmmod(years, two) nmod:dring(made, years) det(Commnity, the) nsbjpass(made, Commnity) ax(made, wold) neg(made, not) ax(made, have) ccomp(say, made) amod(progress, sch) dobj(made, progress) case(market, on) det(market, the) amod(market, single) nmod:on(progress, market) case(voting, withot) amod(voting, qalified) compond(voting, majority) nmod:withot(progress, voting) pnct(fair, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) mark(VBN,IN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:dring(VBN,NNS) det(NNP,DT) nsbjpass(VBN,NNP) ax(VBN,MD) neg(VBN,RB) ax(VBN,VB) ccomp(VB,VBN) amod(NN,JJ) dobj(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(NN,NN) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:withot(NN,NN) pnct(JJ,JJ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That has been in the interests of the people of this country.,ThatDT hasVBZ beenVBN inIN theDT interestsNNS ofIN theDT peopleNNS ofIN thisDT countryNN ,"root(ROOT-0, interests-6) nsubj(interests-6, That-1) aux(interests-6, has-2) cop(interests-6, been-3) case(interests-6, in-4) det(interests-6, the-5) case(people-9, of-7) det(people-9, the-8) nmod:of(interests-6, people-9) case(country-12, of-10) det(country-12, this-11) nmod:of(people-9, country-12) punct(interests-6, .-13)",0,0,0,"root(ROOT, interests) nsbj(interests, That) ax(interests, has) cop(interests, been) case(interests, in) det(interests, the) case(people, of) det(people, the) nmod:of(interests, people) case(contry, of) det(contry, this) nmod:of(people, contry) pnct(interests, .)","root(,NNS) nsbj(NNS,DT) ax(NNS,VBZ) cop(NNS,VBN) case(NNS,IN) det(NNS,DT) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(NNS,NNS)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Without the Single European Act and the qualified majority voting that applies to many internal market issues  this country's position would have been far worse on many occasions.,WithoutIN theDT SingleNNP EuropeanNNP ActNNP andCC theDT qualifiedJJ majorityNN votingNN thatWDT appliesVBZ toTO manyJJ internalJJ marketNN issuesNNS thisDT countryNN 'sPOS positionNN wouldMD haveVB beenVBN farRB worseJJR onIN manyJJ occasionsNNS ,"root(ROOT-0, Act-5) case(Act-5, Without-1) det(Act-5, the-2) amod(Act-5, Single-3) amod(Act-5, European-4) cc(Act-5, and-6) det(voting-10, the-7) amod(voting-10, qualified-8) compound(voting-10, majority-9) conj:and(Act-5, voting-10) nsubj(applies-12, that-11) acl:relcl(voting-10, applies-12) case(issues-17, to-13) amod(issues-17, many-14) amod(issues-17, internal-15) compound(issues-17, market-16) nmod:to(applies-12, issues-17) punct(issues-17, ,-18) det(country-20, this-19) nmod:poss(position-22, country-20) case(country-20, 's-21) nsubj(worse-27, position-22) aux(worse-27, would-23) aux(worse-27, have-24) cop(worse-27, been-25) advmod(worse-27, far-26) acl:relcl(issues-17, worse-27) case(occasions-30, on-28) amod(occasions-30, many-29) nmod:on(worse-27, occasions-30) punct(Act-5, .-31)",0,0,0,"root(ROOT, Act) case(Act, Withot) det(Act, the) amod(Act, Single) amod(Act, Eropean) cc(Act, and) det(voting, the) amod(voting, qalified) compond(voting, majority) conj:and(Act, voting) nsbj(applies, that) acl:relcl(voting, applies) case(isses, to) amod(isses, many) amod(isses, internal) compond(isses, market) nmod:to(applies, isses) pnct(isses, ,) det(contry, this) nmod:poss(position, contry) ""case(contry, s)"", nsbj(worse, position) ax(worse, wold) ax(worse, have) cop(worse, been) advmod(worse, far) acl:relcl(isses, worse) case(occasions, on) amod(occasions, many) nmod:on(worse, occasions) pnct(Act, .)","root(,NNP) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) amod(NNP,NNP) cc(NNP,CC) det(NN,DT) amod(NN,JJ) compond(NN,NN) conj:and(NNP,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) case(NNS,TO) amod(NNS,JJ) amod(NNS,JJ) compond(NNS,NN) nmod:to(VBZ,NNS) pnct(NNS,NNS) det(NN,DT) nmod:poss(NN,NN) case(NN,POS) nsbj(JJR,NN) ax(JJR,MD) ax(JJR,VB) cop(JJR,VBN) advmod(JJR,RB) acl:relcl(NNS,JJR) case(NNS,IN) amod(NNS,JJ) nmod:on(JJR,NNS) pnct(NNP,NNP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
To name but one  the Commission forwarded our views about the export of British made Nissan cars to another Community country.,ToTO nameVB butCC oneCD theDT CommissionNNP forwardedVBD ourPRP$ viewsNNS aboutIN theDT exportNN ofIN BritishJJ madeVBN NissanNNP carsNNS toTO anotherDT CommunityNNP countryNN ,"root(ROOT-0, forwarded-8) mark(name-2, To-1) advcl(forwarded-8, name-2) cc(name-2, but-3) conj:but(name-2, one-4) advcl(forwarded-8, one-4) punct(forwarded-8, ,-5) det(Commission-7, the-6) nsubj(forwarded-8, Commission-7) nmod:poss(views-10, our-9) dobj(forwarded-8, views-10) case(export-13, about-11) det(export-13, the-12) nmod:about(views-10, export-13) acl(export-13, of-14) dep(of-14, British-15) dep(British-15, made-16) compound(cars-18, Nissan-17) dobj(made-16, cars-18) case(country-22, to-19) det(country-22, another-20) compound(country-22, Community-21) nmod:to(made-16, country-22) punct(forwarded-8, .-23)",0,0,0,"root(ROOT, forwarded) mark(name, To) advcl(forwarded, name) cc(name, bt) conj:bt(name, one) advcl(forwarded, one) pnct(forwarded, ,) det(Commission, the) nsbj(forwarded, Commission) nmod:poss(views, or) dobj(forwarded, views) case(export, abot) det(export, the) nmod:abot(views, export) acl(export, of) dep(of, British) dep(British, made) compond(cars, Nissan) dobj(made, cars) case(contry, to) det(contry, another) compond(contry, Commnity) nmod:to(made, contry) pnct(forwarded, .)","root(,VBD) mark(VB,TO) advcl(VBD,VB) cc(VB,CC) conj:bt(VB,CD) advcl(VBD,CD) pnct(VBD,VBD) det(NNP,DT) nsbj(VBD,NNP) nmod:poss(NNS,PRP$) dobj(VBD,NNS) case(NN,IN) det(NN,DT) nmod:abot(NNS,NN) acl(NN,IN) dep(IN,JJ) dep(JJ,VBN) compond(NNS,NNP) dobj(VBN,NNS) case(NN,TO) det(NN,DT) compond(NN,NNP) nmod:to(VBN,NN) pnct(VBD,VBD)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is one way in which we have made the internal market work better.,ThatDT isVBZ oneCD wayNN inIN whichWDT wePRP haveVBP madeVBN theDT internalJJ marketNN workNN betterRBR ,"root(ROOT-0, way-4) nsubj(way-4, That-1) cop(way-4, is-2) nummod(way-4, one-3) case(which-6, in-5) nmod:in(made-9, which-6) nsubj(made-9, we-7) aux(made-9, have-8) acl:relcl(way-4, made-9) det(work-13, the-10) amod(work-13, internal-11) compound(work-13, market-12) dobj(made-9, work-13) advmod(work-13, better-14) punct(way-4, .-15)",0,0,1,"root(ROOT, way) nsbj(way, That) cop(way, is) nmmod(way, one) case(which, in) nmod:in(made, which) nsbj(made, we) ax(made, have) acl:relcl(way, made) det(work, the) amod(work, internal) compond(work, market) dobj(made, work) advmod(work, better) pnct(way, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) nmmod(NN,CD) case(WDT,IN) nmod:in(VBN,WDT) nsbj(VBN,PRP) ax(VBN,VBP) acl:relcl(NN,VBN) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VBN,NN) advmod(NN,RBR) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will she ensure that that speech is the first item on the agenda at the next meeting of the EEC Council of Ministers?,WillMD shePRP ensureVB thatIN thatDT speechNN isVBZ theDT firstJJ itemNN onIN theDT agendaNN atIN theDT nextJJ meetingNN ofIN theDT EECNNP CouncilNNP ofIN MinistersNNP ,"root(ROOT-0, ensure-3) aux(ensure-3, Will-1) nsubj(ensure-3, she-2) mark(item-10, that-4) det(speech-6, that-5) nsubj(item-10, speech-6) cop(item-10, is-7) det(item-10, the-8) amod(item-10, first-9) ccomp(ensure-3, item-10) case(agenda-13, on-11) det(agenda-13, the-12) nmod:on(item-10, agenda-13) case(meeting-17, at-14) det(meeting-17, the-15) amod(meeting-17, next-16) nmod:at(item-10, meeting-17) case(Council-21, of-18) det(Council-21, the-19) compound(Council-21, EEC-20) nmod:of(meeting-17, Council-21) case(Ministers-23, of-22) nmod:of(Council-21, Ministers-23) punct(ensure-3, ?-24)",0,0,0,"root(ROOT, ensre) ax(ensre, Will) nsbj(ensre, she) mark(item, that) det(speech, that) nsbj(item, speech) cop(item, is) det(item, the) amod(item, first) ccomp(ensre, item) case(agenda, on) det(agenda, the) nmod:on(item, agenda) case(meeting, at) det(meeting, the) amod(meeting, next) nmod:at(item, meeting) case(Concil, of) det(Concil, the) compond(Concil, EEC) nmod:of(meeting, Concil) case(Ministers, of) nmod:of(Concil, Ministers) pnct(ensre, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) mark(NN,DT) det(NN,DT) nsbj(NN,NN) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(VB,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:at(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VB,VB)","[ROOT, ensure, she, item]","[ROOT, ensure, she, item]",4,[ ],[ ],VB_ensure PRP_she NN_item ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will she arrange for a signed copy to be sent to our right hon. Friend the Member for Old Bexley and Sidcup (Mr. Heath)?,WillMD shePRP arrangeVB forIN aDT signedJJ copyNN toTO beVB sentVBN toTO ourPRP$ rightJJ honNN FriendNNP theDT MemberNNP forIN OldNNP BexleyNNP andCC SidcupNNP (( MrNNP HeathNNP )) ,"root(ROOT-0, arrange-3) aux(arrange-3, Will-1) nsubj(arrange-3, she-2) case(copy-7, for-4) det(copy-7, a-5) amod(copy-7, signed-6) nmod:for(arrange-3, copy-7) mark(sent-10, to-8) auxpass(sent-10, be-9) acl(copy-7, sent-10) case(Friend-15, to-11) nmod:poss(Friend-15, our-12) amod(Friend-15, right-13) compound(Friend-15, hon.-14) nmod:to(sent-10, Friend-15) det(Member-17, the-16) dep(Friend-15, Member-17) case(Bexley-20, for-18) amod(Bexley-20, Old-19) nmod:for(Member-17, Bexley-20) cc(Bexley-20, and-21) nmod:for(Member-17, Sidcup-22) conj:and(Bexley-20, Sidcup-22) punct(Heath-25, -LRB--23) compound(Heath-25, Mr.-24) appos(Sidcup-22, Heath-25) punct(Heath-25, -RRB--26) punct(arrange-3, ?-27)",0,0,1,"root(ROOT, arrange) ax(arrange, Will) nsbj(arrange, she) case(copy, for) det(copy, a) amod(copy, signed) nmod:for(arrange, copy) mark(sent, to) axpass(sent, be) acl(copy, sent) case(Friend, to) nmod:poss(Friend, or) amod(Friend, right) compond(Friend, hon.) nmod:to(sent, Friend) det(Member, the) dep(Friend, Member) case(Bexley, for) amod(Bexley, Old) nmod:for(Member, Bexley) cc(Bexley, and) nmod:for(Member, Sidcp) conj:and(Bexley, Sidcp) pnct(Heath, ) compond(Heath, Mr.) appos(Sidcp, Heath) pnct(Heath, ) pnct(arrange, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(VB,NN) mark(VBN,TO) axpass(VBN,VB) acl(NN,VBN) case(NNP,TO) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:to(VBN,NNP) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) amod(NNP,NNP) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(VB,VB)","[Bexley, Friend, Sidcup, Member, our, and, Old, arrange, ROOT, she, right, Heath, sent]","[Bexley, Friend, Sidcup, Member, our, and, Old, arrange, ROOT, she, Heath, sent]",5,"[Bexley, Friend, our, Member, and, Old, sent, Heath, Sidcup]","[Bexley, Friend, our, Member, and, Old, sent, Heath, Sidcup]",NNP_Bexley NNP_Friend NNP_Sidcup NNP_Member PRP$_our CC_and NNP_Old VB_arrange PRP_she NNP_Heath VBN_sent ,"[Bexley, Friend, Sidcup, Member, our, and, Old, arrange, ROOT, she, Heath, sent]","[Bexley, Friend, Sidcup, Member, our, and, Old, arrange, ROOT, she, Heath, sent]",NNP_Bexley NNP_Friend NNP_Sidcup NNP_Member PRP$_our CC_and NNP_Old VB_arrange PRP_she NNP_Heath VBN_sent ,"[Bexley, Friend, Sidcup, Member, our, and, Old, arrange, ROOT, she, Heath, sent]",NNP_Bexley NNP_Friend NNP_Sidcup NNP_Member PRP$_our CC_and NNP_Old VB_arrange PRP_she NNP_Heath VBN_sent ,"[Bexley, Friend, Sidcup, Member, our, and, Old, arrange, ROOT, she, Heath, sent]",NNP_Bexley NNP_Friend NNP_Sidcup NNP_Member PRP$_our CC_and NNP_Old VB_arrange PRP_she NNP_Heath VBN_sent ,-3,0,1,0,0,0,0,0,0,0
In the knowledge that we are all fallible and that sometimes we all forget  I took the precaution of ensuring that I have with me a copy of my right hon. Friend the Prime Minister's speech.,InIN theDT knowledgeNN thatIN wePRP areVBP allDT fallibleJJ andCC thatIN sometimesRB wePRP allDT forgetVBP IPRP tookVBD theDT precautionNN ofIN ensuringVBG thatIN IPRP haveVBP withIN mePRP aDT copyNN ofIN myPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP 'sPOS speechNN ,"root(ROOT-0, took-17) case(knowledge-3, In-1) det(knowledge-3, the-2) nmod:in(took-17, knowledge-3) mark(fallible-8, that-4) nsubj(fallible-8, we-5) cop(fallible-8, are-6) dep(fallible-8, all-7) ccomp(knowledge-3, fallible-8) cc(fallible-8, and-9) mark(forget-14, that-10) advmod(forget-14, sometimes-11) nsubj(forget-14, we-12) nsubj(forget-14, all-13) ccomp(knowledge-3, forget-14) conj:and(fallible-8, forget-14) punct(took-17, ,-15) nsubj(took-17, I-16) det(precaution-19, the-18) dobj(took-17, precaution-19) mark(ensuring-21, of-20) acl(precaution-19, ensuring-21) mark(have-24, that-22) nsubj(have-24, I-23) ccomp(ensuring-21, have-24) case(me-26, with-25) nmod:with(have-24, me-26) det(copy-28, a-27) dep(me-26, copy-28) case(Friend-33, of-29) nmod:poss(Friend-33, my-30) amod(Friend-33, right-31) compound(Friend-33, hon.-32) nmod:of(copy-28, Friend-33) det(Minister-36, the-34) compound(Minister-36, Prime-35) nmod:poss(speech-38, Minister-36) case(Minister-36, 's-37) dep(Friend-33, speech-38) punct(took-17, .-39)",0,0,0,"root(ROOT, took) case(knowledge, In) det(knowledge, the) nmod:in(took, knowledge) mark(fallible, that) nsbj(fallible, we) cop(fallible, are) dep(fallible, all) ccomp(knowledge, fallible) cc(fallible, and) mark(forget, that) advmod(forget, sometimes) nsbj(forget, we) nsbj(forget, all) ccomp(knowledge, forget) conj:and(fallible, forget) pnct(took, ,) nsbj(took, I) det(precation, the) dobj(took, precation) mark(ensring, of) acl(precation, ensring) mark(have, that) nsbj(have, I) ccomp(ensring, have) case(me, with) nmod:with(have, me) det(copy, a) dep(me, copy) case(Friend, of) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:of(copy, Friend) det(Minister, the) compond(Minister, Prime) nmod:poss(speech, Minister) ""case(Minister, s)"", dep(Friend, speech) pnct(took, .)","root(,VBD) case(NN,IN) det(NN,DT) nmod:in(VBD,NN) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBP) dep(JJ,DT) ccomp(NN,JJ) cc(JJ,CC) mark(VBP,IN) advmod(VBP,RB) nsbj(VBP,PRP) nsbj(VBP,DT) ccomp(NN,VBP) conj:and(JJ,VBP) pnct(VBD,VBD) nsbj(VBD,PRP) det(NN,DT) dobj(VBD,NN) mark(VBG,IN) acl(NN,VBG) mark(VBP,IN) nsbj(VBP,PRP) ccomp(VBG,VBP) case(PRP,IN) nmod:with(VBP,PRP) det(NN,DT) dep(PRP,NN) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:of(NN,NNP) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) dep(NNP,NN) pnct(VBD,VBD)","[my, Minister, right, Friend, speech]","[Minister, my, Friend, speech]",5,"[Minister, my, Friend, speech]","[Minister, my, Friend, speech]",NNP_Minister PRP$_my NNP_Friend NN_speech ,"[Minister, my, Friend, speech]","[Minister, my, Friend, speech]",NNP_Minister PRP$_my NNP_Friend NN_speech ,"[Minister, my, Friend, speech]",NNP_Minister PRP$_my NNP_Friend NN_speech ,"[Minister, my, Friend, speech]",NNP_Minister PRP$_my NNP_Friend NN_speech ,-3,0,1,0,0,0,0,0,0,0
I commend it to every hon. Member.,IPRP commendVBP itPRP toTO everyDT honNN MemberNNP ,"root(ROOT-0, commend-2) nsubj(commend-2, I-1) dobj(commend-2, it-3) case(Member-7, to-4) det(Member-7, every-5) compound(Member-7, hon.-6) nmod:to(commend-2, Member-7) punct(commend-2, .-8)",0,0,0,"root(ROOT, commend) nsbj(commend, I) dobj(commend, it) case(Member, to) det(Member, every) compond(Member, hon.) nmod:to(commend, Member) pnct(commend, .)","root(,VBP) nsbj(VBP,PRP) dobj(VBP,PRP) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VBP,NNP) pnct(VBP,VBP)","[I, ROOT, Member, commend, it]","[I, ROOT, Member, commend, it]",6,"[I, ROOT, Member, commend, it]","[I, ROOT, Member, commend, it]",PRP_I NNP_Member VBP_commend PRP_it ,"[I, ROOT, Member, commend, it]","[I, ROOT, Member, commend, it]",PRP_I NNP_Member VBP_commend PRP_it ,"[I, ROOT, Member, commend, it]",PRP_I NNP_Member VBP_commend PRP_it ,"[I, ROOT, Member, commend, it]",PRP_I NNP_Member VBP_commend PRP_it ,-3,0,1,1,1,1,1,1,1,1
Does she think that 1992 and the complete harmonisation of the internal market will help  or hinder  that?,DoesVBZ shePRP thinkVB thatIN 1992CD andCC theDT completeJJ harmonisationNN ofIN theDT internalJJ marketNN willMD helpVB orCC hinderVB thatIN ,"root(ROOT-0, think-3) aux(think-3, Does-1) nsubj(think-3, she-2) mark(help-15, that-4) nsubj(help-15, 1992-5) nsubj(hinder-18, 1992-5) cc(1992-5, and-6) det(harmonisation-9, the-7) amod(harmonisation-9, complete-8) conj:and(1992-5, harmonisation-9) nsubj(help-15, harmonisation-9) case(market-13, of-10) det(market-13, the-11) amod(market-13, internal-12) nmod:of(1992-5, market-13) aux(help-15, will-14) ccomp(think-3, help-15) punct(help-15, ,-16) cc(help-15, or-17) ccomp(think-3, hinder-18) conj:or(help-15, hinder-18) punct(hinder-18, ,-19) dobj(hinder-18, that-20) punct(think-3, ?-21)",0,0,0,"root(ROOT, think) ax(think, Does) nsbj(think, she) mark(help, that) nsbj(help, 1992) nsbj(hinder, 1992) cc(1992, and) det(harmonisation, the) amod(harmonisation, complete) conj:and(1992, harmonisation) nsbj(help, harmonisation) case(market, of) det(market, the) amod(market, internal) nmod:of(1992, market) ax(help, will) ccomp(think, help) pnct(help, ,) cc(help, or) ccomp(think, hinder) conj:or(help, hinder) pnct(hinder, ,) dobj(hinder, that) pnct(think, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VB,IN) nsbj(VB,CD) nsbj(VB,CD) cc(CD,CC) det(NN,DT) amod(NN,JJ) conj:and(CD,NN) nsbj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(CD,NN) ax(VB,MD) ccomp(VB,VB) pnct(VB,VB) cc(VB,CC) ccomp(VB,VB) conj:or(VB,VB) pnct(VB,VB) dobj(VB,IN) pnct(VB,VB)","[ROOT, she, think, help, hinder]","[ROOT, she, think, help, hinder]",6,[ ],[ ],PRP_she VBP_think NN_help VB_hinder ,"[ROOT, she, think, help, hinder]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The completion of the internal market will help this country no end.,TheDT completionNN ofIN theDT internalJJ marketNN willMD helpVB thisDT countryNN noDT endNN ,"root(ROOT-0, help-8) det(completion-2, The-1) nsubj(help-8, completion-2) case(market-6, of-3) det(market-6, the-4) amod(market-6, internal-5) nmod:of(completion-2, market-6) aux(help-8, will-7) det(country-10, this-9) nsubj(end-12, country-10) neg(end-12, no-11) ccomp(help-8, end-12) punct(help-8, .-13)",0,1,0,"root(ROOT, help) det(completion, The) nsbj(help, completion) case(market, of) det(market, the) amod(market, internal) nmod:of(completion, market) ax(help, will) det(contry, this) nsbj(end, contry) neg(end, no) ccomp(help, end) pnct(help, .)","root(,VB) det(NN,DT) nsbj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) ax(VB,MD) det(NN,DT) nsbj(NN,NN) neg(NN,DT) ccomp(VB,NN) pnct(VB,VB)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It stated that Mr. Delors' speech to the TUC conference was approved in advance and ticked as innocuous by Foreign Office representatives.,ItPRP statedVBD thatIN MrNNP DelorsNNP 'POS speechNN toTO theDT TUCNNP conferenceNN wasVBD approvedVBN inIN advanceNN andCC tickedVBD asIN innocuousJJ byIN ForeignNNP OfficeNNP representativesNNS ,"root(ROOT-0, stated-2) nsubj(stated-2, It-1) mark(approved-13, that-3) compound(Delors-5, Mr.-4) nmod:poss(speech-7, Delors-5) case(Delors-5, '-6) nsubjpass(approved-13, speech-7) nsubjpass(ticked-17, speech-7) case(conference-11, to-8) det(conference-11, the-9) compound(conference-11, TUC-10) nmod:to(speech-7, conference-11) auxpass(approved-13, was-12) ccomp(stated-2, approved-13) case(advance-15, in-14) nmod:in(approved-13, advance-15) cc(approved-13, and-16) ccomp(stated-2, ticked-17) conj:and(approved-13, ticked-17) case(innocuous-19, as-18) nmod:as(ticked-17, innocuous-19) case(representatives-23, by-20) compound(representatives-23, Foreign-21) compound(representatives-23, Office-22) nmod:by(ticked-17, representatives-23) punct(stated-2, .-24)",0,0,0,"root(ROOT, stated) nsbj(stated, It) mark(approved, that) compond(Delors, Mr.) nmod:poss(speech, Delors) ""case(Delors, )"", nsbjpass(approved, speech) nsbjpass(ticked, speech) case(conference, to) det(conference, the) compond(conference, TUC) nmod:to(speech, conference) axpass(approved, was) ccomp(stated, approved) case(advance, in) nmod:in(approved, advance) cc(approved, and) ccomp(stated, ticked) conj:and(approved, ticked) case(innocos, as) nmod:as(ticked, innocos) case(representatives, by) compond(representatives, Foreign) compond(representatives, Office) nmod:by(ticked, representatives) pnct(stated, .)","root(,VBD) nsbj(VBD,PRP) mark(VBN,IN) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nsbjpass(VBN,NN) nsbjpass(VBD,NN) case(NN,TO) det(NN,DT) compond(NN,NNP) nmod:to(NN,NN) axpass(VBN,VBD) ccomp(VBD,VBN) case(NN,IN) nmod:in(VBN,NN) cc(VBN,CC) ccomp(VBD,VBD) conj:and(VBN,VBD) case(JJ,IN) nmod:as(VBD,JJ) case(NNS,IN) compond(NNS,NNP) compond(NNS,NNP) nmod:by(VBD,NNS) pnct(VBD,VBD)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Will my right hon. Friend assure us that  if there is any showdown between British and German interests at a future Council of Ministers  the Bruges speech will be the text of our foreign policy?,WillMD myPRP$ rightJJ honNN FriendNNP assureNN usPRP thatIN ifIN thereEX isVBZ anyDT showdownJJ betweenIN BritishNNP andCC GermanJJ interestsNNS atIN aDT futureJJ CouncilNNP ofIN MinistersNNP theDT BrugesNNP speechNN willMD beVB theDT textNN ofIN ourPRP$ foreignJJ policyNN ,"root(ROOT-0, assure-6) aux(assure-6, Will-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(assure-6, Friend-5) dobj(assure-6, us-7) mark(text-33, that-8) punct(text-33, ,-9) mark(is-12, if-10) expl(is-12, there-11) advcl(text-33, is-12) det(showdown-14, any-13) nsubj(is-12, showdown-14) case(interests-19, between-15) amod(interests-19, British-16) cc(British-16, and-17) conj:and(British-16, German-18) amod(interests-19, German-18) nmod:between(showdown-14, interests-19) case(Council-23, at-20) det(Council-23, a-21) amod(Council-23, future-22) nmod:at(is-12, Council-23) case(Ministers-25, of-24) nmod:of(Council-23, Ministers-25) punct(text-33, ,-26) det(speech-29, the-27) compound(speech-29, Bruges-28) nsubj(text-33, speech-29) aux(text-33, will-30) cop(text-33, be-31) det(text-33, the-32) ccomp(assure-6, text-33) case(policy-37, of-34) nmod:poss(policy-37, our-35) amod(policy-37, foreign-36) nmod:of(text-33, policy-37) punct(assure-6, ?-38)",0,0,0,"root(ROOT, assre) ax(assre, Will) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(assre, Friend) dobj(assre, s) mark(text, that) pnct(text, ,) mark(is, if) expl(is, there) advcl(text, is) det(showdown, any) nsbj(is, showdown) case(interests, between) amod(interests, British) cc(British, and) conj:and(British, German) amod(interests, German) nmod:between(showdown, interests) case(Concil, at) det(Concil, a) amod(Concil, ftre) nmod:at(is, Concil) case(Ministers, of) nmod:of(Concil, Ministers) pnct(text, ,) det(speech, the) compond(speech, Brges) nsbj(text, speech) ax(text, will) cop(text, be) det(text, the) ccomp(assre, text) case(policy, of) nmod:poss(policy, or) amod(policy, foreign) nmod:of(text, policy) pnct(assre, ?)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) dobj(NN,PRP) mark(NN,IN) pnct(NN,NN) mark(VBZ,IN) expl(VBZ,EX) advcl(NN,VBZ) det(JJ,DT) nsbj(VBZ,JJ) case(NNS,IN) amod(NNS,NNP) cc(NNP,CC) conj:and(NNP,JJ) amod(NNS,JJ) nmod:between(JJ,NNS) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:at(VBZ,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NN,NN) det(NN,DT) compond(NN,NNP) nsbj(NN,NN) ax(NN,MD) cop(NN,VB) det(NN,DT) ccomp(NN,NN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN)","[Friend, text, assure, ROOT, us, right, my]","[Friend, text, assure, us, ROOT, my]",9,[ ],[ ],NNP_Friend NN_text NN_assure PRP_us PRP$_my ,"[Friend, text, assure, us, ROOT, my]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
If there is any need to have a discussion with our colleagues at future councils whatever councils they may be if we have disagreements  we shall express them most clearly  as we always do.,IfIN thereEX isVBZ anyDT needNN toTO haveVB aDT discussionNN withIN ourPRP$ colleaguesNNS atIN futureJJ councilsNNS whateverWDT councilsNNS theyPRP mayMD beVB ifIN wePRP haveVBP disagreementsNNS wePRP shallMD expressVB themPRP mostJJS clearlyRB asIN wePRP alwaysRB doVBP ,"root(ROOT-0, express-28) mark(is-3, If-1) expl(is-3, there-2) advcl(express-28, is-3) det(need-5, any-4) nsubj(is-3, need-5) mark(have-7, to-6) acl(need-5, have-7) det(discussion-9, a-8) dobj(have-7, discussion-9) case(colleagues-12, with-10) nmod:poss(colleagues-12, our-11) nmod:with(discussion-9, colleagues-12) case(councils-15, at-13) amod(councils-15, future-14) nmod:at(colleagues-12, councils-15) det(councils-17, whatever-16) dobj(be-20, councils-17) nsubj(be-20, they-18) aux(be-20, may-19) acl:relcl(councils-15, be-20) mark(have-23, if-21) nsubj(have-23, we-22) advcl(be-20, have-23) dobj(have-23, disagreements-24) punct(express-28, ,-25) nsubj(express-28, we-26) aux(express-28, shall-27) dobj(express-28, them-29) advmod(clearly-31, most-30) advmod(express-28, clearly-31) punct(express-28, ,-32) mark(do-36, as-33) nsubj(do-36, we-34) advmod(do-36, always-35) advcl(express-28, do-36) punct(express-28, .-37)",0,0,0,"root(ROOT, express) mark(is, If) expl(is, there) advcl(express, is) det(need, any) nsbj(is, need) mark(have, to) acl(need, have) det(discssion, a) dobj(have, discssion) case(colleages, with) nmod:poss(colleages, or) nmod:with(discssion, colleages) case(concils, at) amod(concils, ftre) nmod:at(colleages, concils) det(concils, whatever) dobj(be, concils) nsbj(be, they) ax(be, may) acl:relcl(concils, be) mark(have, if) nsbj(have, we) advcl(be, have) dobj(have, disagreements) pnct(express, ,) nsbj(express, we) ax(express, shall) dobj(express, them) advmod(clearly, most) advmod(express, clearly) pnct(express, ,) mark(do, as) nsbj(do, we) advmod(do, always) advcl(express, do) pnct(express, .)","root(,VB) mark(VBZ,IN) expl(VBZ,EX) advcl(VB,VBZ) det(NN,DT) nsbj(VBZ,NN) mark(VBP,TO) acl(NN,VBP) det(NN,DT) dobj(VBP,NN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:with(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:at(NNS,NNS) det(NNS,WDT) dobj(VB,NNS) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NNS,VB) mark(VBP,IN) nsbj(VBP,PRP) advcl(VB,VBP) dobj(VBP,NNS) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) dobj(VB,PRP) advmod(RB,JJS) advmod(VB,RB) pnct(VB,VB) mark(VBP,IN) nsbj(VBP,PRP) advmod(VBP,RB) advcl(VB,VBP) pnct(VB,VB)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
While we are on the subject of speeches  has the Minister noticed yesterday's speech by Dr. Helmut Kohl  the German Conservative Chancellor  who warmly commended European economic and monetary union and spoke of a social Europe?,WhileIN wePRP areVBP onIN theDT subjectNN ofIN speechesNNS hasVBZ theDT MinisterNNP noticedVBD yesterdayNN 'sPOS speechNN byIN DrNNP HelmutNNP KohlNNP theDT GermanJJ ConservativeNNP ChancellorNNP whoWP warmlyRB commendedVBD EuropeanJJ economicJJ andCC monetaryJJ unionNN andCC spokeNN ofIN aDT socialJJ EuropeNNP ,"root(ROOT-0, has-10) mark(subject-6, While-1) nsubj(subject-6, we-2) cop(subject-6, are-3) case(subject-6, on-4) det(subject-6, the-5) advcl:on(has-10, subject-6) case(speeches-8, of-7) nmod:of(subject-6, speeches-8) punct(has-10, ,-9) det(Minister-12, the-11) nsubj(noticed-13, Minister-12) ccomp(has-10, noticed-13) nmod:poss(speech-16, yesterday-14) case(yesterday-14, 's-15) dobj(noticed-13, speech-16) case(Kohl-20, by-17) compound(Kohl-20, Dr.-18) compound(Kohl-20, Helmut-19) nmod:by(noticed-13, Kohl-20) punct(Kohl-20, ,-21) det(Chancellor-25, the-22) amod(Chancellor-25, German-23) amod(Chancellor-25, Conservative-24) appos(Kohl-20, Chancellor-25) punct(Kohl-20, ,-26) appos(Kohl-20, who-27) advmod(commended-29, warmly-28) amod(union-34, commended-29) amod(union-34, European-30) amod(union-34, economic-31) cc(economic-31, and-32) conj:and(economic-31, monetary-33) amod(union-34, monetary-33) dep(who-27, union-34) cc(union-34, and-35) dep(who-27, spoke-36) conj:and(union-34, spoke-36) case(Europe-40, of-37) det(Europe-40, a-38) amod(Europe-40, social-39) nmod:of(spoke-36, Europe-40) punct(has-10, ?-41)",0,0,0,"root(ROOT, has) mark(sbject, While) nsbj(sbject, we) cop(sbject, are) case(sbject, on) det(sbject, the) advcl:on(has, sbject) case(speeches, of) nmod:of(sbject, speeches) pnct(has, ,) det(Minister, the) nsbj(noticed, Minister) ccomp(has, noticed) nmod:poss(speech, yesterday) ""case(yesterday, s)"", dobj(noticed, speech) case(Kohl, by) compond(Kohl, Dr.) compond(Kohl, Helmt) nmod:by(noticed, Kohl) pnct(Kohl, ,) det(Chancellor, the) amod(Chancellor, German) amod(Chancellor, Conservative) appos(Kohl, Chancellor) pnct(Kohl, ,) appos(Kohl, who) advmod(commended, warmly) amod(nion, commended) amod(nion, Eropean) amod(nion, economic) cc(economic, and) conj:and(economic, monetary) amod(nion, monetary) dep(who, nion) cc(nion, and) dep(who, spoke) conj:and(nion, spoke) case(Erope, of) det(Erope, a) amod(Erope, social) nmod:of(spoke, Erope) pnct(has, ?)","root(,VBZ) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBP) case(NN,IN) det(NN,DT) advcl:on(VBZ,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VBZ,VBZ) det(NNP,DT) nsbj(VBD,NNP) ccomp(VBZ,VBD) nmod:poss(NN,NN) case(NN,POS) dobj(VBD,NN) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:by(VBD,NNP) pnct(NNP,NNP) det(NNP,DT) amod(NNP,JJ) amod(NNP,NNP) appos(NNP,NNP) pnct(NNP,NNP) appos(NNP,WP) advmod(VBD,RB) amod(NN,VBD) amod(NN,JJ) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) dep(WP,NN) cc(NN,CC) dep(WP,NN) conj:and(NN,NN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NN,NNP) pnct(VBZ,VBZ)","[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]","[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]",10,"[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]","[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]",JJ_Conservative NNP_Chancellor NNP_Minister NNP_Kohl VBZ_has JJ_German VBD_noticed WP_who NN_speech ,"[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]","[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]",JJ_Conservative NNP_Chancellor NNP_Minister NNP_Kohl VBZ_has JJ_German VBD_noticed WP_who NN_speech ,"[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]",JJ_Conservative NNP_Chancellor NNP_Minister NNP_Kohl VBZ_has JJ_German VBD_noticed WP_who NN_speech ,"[Conservative, Chancellor, Minister, Kohl, has, German, noticed, who, speech]",JJ_Conservative NNP_Chancellor NNP_Minister NNP_Kohl VBZ_has JJ_German VBD_noticed WP_who NN_speech ,-3,0,2,2,1,2,0,0,0,0
It is interesting to note that Britain is the first country to contribute in full to the $75 billion of the general capital income increase in resources for lending to middle income debtors.,ItPRP isVBZ interestingVBG toTO noteVB thatDT BritainNNP isVBZ theDT firstJJ countryNN toTO contributeVB inIN fullJJ toTO theDT $$ 75CD billionCD ofIN theDT generalJJ capitalNN incomeNN increaseNN inIN resourcesNNS forIN lendingNN toTO middleVB incomeNN debtorsNNS ,"root(ROOT-0, interesting-3) nsubj(interesting-3, It-1) cop(interesting-3, is-2) mark(note-5, to-4) xcomp(interesting-3, note-5) mark(country-11, that-6) nsubj(country-11, Britain-7) cop(country-11, is-8) det(country-11, the-9) amod(country-11, first-10) ccomp(note-5, country-11) mark(contribute-13, to-12) acl(country-11, contribute-13) case(full-15, in-14) nmod:in(contribute-13, full-15) case($-18, to-16) det($-18, the-17) nmod:to(full-15, $-18) compound(billion-20, 75-19) nummod($-18, billion-20) case(increase-26, of-21) det(increase-26, the-22) amod(increase-26, general-23) compound(increase-26, capital-24) compound(increase-26, income-25) nmod:of($-18, increase-26) case(resources-28, in-27) nmod:in(increase-26, resources-28) mark(lending-30, for-29) acl(increase-26, lending-30) case(debtors-34, to-31) amod(debtors-34, middle-32) compound(debtors-34, income-33) nmod:to(lending-30, debtors-34) punct(interesting-3, .-35)",0,0,0,"root(ROOT, interesting) nsbj(interesting, It) cop(interesting, is) mark(note, to) xcomp(interesting, note) mark(contry, that) nsbj(contry, Britain) cop(contry, is) det(contry, the) amod(contry, first) ccomp(note, contry) mark(contribte, to) acl(contry, contribte) case(fll, in) nmod:in(contribte, fll) case($, to) det($, the) nmod:to(fll, $) compond(billion, 75) nmmod($, billion) case(increase, of) det(increase, the) amod(increase, general) compond(increase, capital) compond(increase, income) nmod:of($, increase) case(resorces, in) nmod:in(increase, resorces) mark(lending, for) acl(increase, lending) case(debtors, to) amod(debtors, middle) compond(debtors, income) nmod:to(lending, debtors) pnct(interesting, .)","root(,VBG) nsbj(VBG,PRP) cop(VBG,VBZ) mark(VB,TO) xcomp(VBG,VB) mark(NN,DT) nsbj(NN,NNP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(VB,NN) mark(VB,TO) acl(NN,VB) case(JJ,IN) nmod:in(VB,JJ) case($,TO) det($,DT) nmod:to(JJ,$) compond(CD,CD) nmmod($,CD) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) compond(NN,NN) nmod:of($,NN) case(NNS,IN) nmod:in(NN,NNS) mark(NN,IN) acl(NN,NN) case(NNS,TO) amod(NNS,VB) compond(NNS,NN) nmod:to(NN,NNS) pnct(VBG,VBG)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
No  Sir.,NoDT SirNNP ,"root(ROOT-0, Sir-3) neg(Sir-3, No-1) punct(Sir-3, ,-2) punct(Sir-3, .-4)",0,0,0,"root(ROOT, Sir) neg(Sir, No) pnct(Sir, ,) pnct(Sir, .)","root(,NNP) neg(NNP,DT) pnct(NNP,NNP) pnct(NNP,NNP)",[ ],[ ],15,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
To ask the Secretary of State for Social Security if he will make a statement on the operation of the social fund to date.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN SocialNNP SecurityNNP ifIN hePRP willMD makeVB aDT statementNN onIN theDT operationNN ofIN theDT socialJJ fundNN toTO dateNN ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Security-9, for-7) compound(Security-9, Social-8) nmod:for(Secretary-4, Security-9) mark(make-13, if-10) nsubj(make-13, he-11) aux(make-13, will-12) advcl(ask-2, make-13) det(statement-15, a-14) dobj(make-13, statement-15) case(operation-18, on-16) det(operation-18, the-17) nmod:on(statement-15, operation-18) case(fund-22, of-19) det(fund-22, the-20) amod(fund-22, social-21) nmod:of(operation-18, fund-22) case(date-24, to-23) nmod:to(operation-18, date-24) punct(ask-2, .-25)",0,1,1,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Secrity, for) compond(Secrity, Social) nmod:for(Secretary, Secrity) mark(make, if) nsbj(make, he) ax(make, will) advcl(ask, make) det(statement, a) dobj(make, statement) case(operation, on) det(operation, the) nmod:on(statement, operation) case(fnd, of) det(fnd, the) amod(fnd, social) nmod:of(operation, fnd) case(date, to) nmod:to(operation, date) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) compond(NNP,NNP) nmod:for(NNP,NNP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,TO) nmod:to(NN,NN) pnct(VB,VB)","[Security, ask, State, Secretary, he, make, ROOT, statement]","[Security, ask, State, Secretary, he, make, ROOT, statement]",1,"[Security, ask, ROOT, make, State, Secretary]","[Security, ask, ROOT, make, State, Secretary]",NNP_Security VB_ask NNP_State NNP_Secretary PRP_he VB_make NN_statement ,"[Security, ask, State, Secretary, he, make, ROOT, statement]","[Security, ask, State, Secretary, he, make, ROOT, statement]",NNP_Security VB_ask NNP_State NNP_Secretary PRP_he VB_make NN_statement ,"[Security, ask, State, Secretary, he, make, ROOT, statement]",NNP_Security VB_ask NNP_State NNP_Secretary PRP_he VB_make NN_statement ,"[Security, ask, State, Secretary, he, make, ROOT, statement]",NNP_Security VB_ask NNP_State NNP_Secretary PRP_he VB_make NN_statement ,-3,0,2,0,0,0,0,0,0,0
We have been closely monitoring the social fund  and the original fears which were expressed about the adequacy of its budget  the introduction of loans  the discretionary nature of the scheme and the review system  have proved to be unfounded.,WePRP haveVBP beenVBN closelyRB monitoringVBG theDT socialJJ fundNN andCC theDT originalJJ fearsNNS whichWDT wereVBD expressedVBN aboutIN theDT adequacyNN ofIN itsPRP$ budgetNN theDT introductionNN ofIN loansNNS theDT discretionaryJJ natureNN ofIN theDT schemeNN andCC theDT reviewNN systemNN haveVBP provedVBN toTO beVB unfoundedJJ ,"root(ROOT-0, monitoring-5) nsubj(monitoring-5, We-1) aux(monitoring-5, have-2) aux(monitoring-5, been-3) advmod(monitoring-5, closely-4) det(fund-8, the-6) amod(fund-8, social-7) dobj(monitoring-5, fund-8) punct(monitoring-5, ,-9) cc(monitoring-5, and-10) det(fears-13, the-11) amod(fears-13, original-12) conj:and(monitoring-5, fears-13) nsubjpass(expressed-16, which-14) auxpass(expressed-16, were-15) acl:relcl(fears-13, expressed-16) case(adequacy-19, about-17) det(adequacy-19, the-18) nmod:about(expressed-16, adequacy-19) case(budget-22, of-20) nmod:poss(budget-22, its-21) nmod:of(adequacy-19, budget-22) punct(fears-13, ,-23) det(introduction-25, the-24) nsubj(proved-41, introduction-25) case(loans-27, of-26) nmod:of(introduction-25, loans-27) punct(introduction-25, ,-28) det(nature-31, the-29) amod(nature-31, discretionary-30) appos(introduction-25, nature-31) case(scheme-34, of-32) det(scheme-34, the-33) nmod:of(nature-31, scheme-34) cc(scheme-34, and-35) det(system-38, the-36) compound(system-38, review-37) nmod:of(nature-31, system-38) conj:and(scheme-34, system-38) punct(introduction-25, ,-39) aux(proved-41, have-40) acl:relcl(fears-13, proved-41) mark(unfounded-44, to-42) cop(unfounded-44, be-43) xcomp(proved-41, unfounded-44) punct(monitoring-5, .-45)",0,0,0,"root(ROOT, monitoring) nsbj(monitoring, We) ax(monitoring, have) ax(monitoring, been) advmod(monitoring, closely) det(fnd, the) amod(fnd, social) dobj(monitoring, fnd) pnct(monitoring, ,) cc(monitoring, and) det(fears, the) amod(fears, original) conj:and(monitoring, fears) nsbjpass(expressed, which) axpass(expressed, were) acl:relcl(fears, expressed) case(adeqacy, abot) det(adeqacy, the) nmod:abot(expressed, adeqacy) case(bdget, of) nmod:poss(bdget, its) nmod:of(adeqacy, bdget) pnct(fears, ,) det(introdction, the) nsbj(proved, introdction) case(loans, of) nmod:of(introdction, loans) pnct(introdction, ,) det(natre, the) amod(natre, discretionary) appos(introdction, natre) case(scheme, of) det(scheme, the) nmod:of(natre, scheme) cc(scheme, and) det(system, the) compond(system, review) nmod:of(natre, system) conj:and(scheme, system) pnct(introdction, ,) ax(proved, have) acl:relcl(fears, proved) mark(nfonded, to) cop(nfonded, be) xcomp(proved, nfonded) pnct(monitoring, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) ax(VBG,VBN) advmod(VBG,RB) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) pnct(VBG,VBG) cc(VBG,CC) det(NNS,DT) amod(NNS,JJ) conj:and(VBG,NNS) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(NNS,NNS) det(NN,DT) nsbj(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(NN,NN) det(NN,DT) amod(NN,JJ) appos(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) cc(NN,CC) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) conj:and(NN,NN) pnct(NN,NN) ax(VBN,VBP) acl:relcl(NNS,VBN) mark(JJ,TO) cop(JJ,VB) xcomp(VBN,JJ) pnct(VBG,VBG)",[ ],[ ],1,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Loans have reached anticipated levels of expenditure and community care grants have steadily risen to 77 per cent.,LoansNNS haveVBP reachedVBN anticipatedJJ levelsNNS ofIN expenditureNN andCC communityNN careNN grantsNNS haveVBP steadilyRB risenVBN toTO 77CD perIN centNN ,"root(ROOT-0, reached-3) nsubj(reached-3, Loans-1) aux(reached-3, have-2) amod(levels-5, anticipated-4) dobj(reached-3, levels-5) case(expenditure-7, of-6) nmod:of(levels-5, expenditure-7) cc(expenditure-7, and-8) compound(grants-11, community-9) compound(grants-11, care-10) nmod:of(levels-5, grants-11) conj:and(expenditure-7, grants-11) aux(risen-14, have-12) advmod(risen-14, steadily-13) dep(reached-3, risen-14) case(77-16, to-15) nmod:to(risen-14, 77-16) case(cent-18, per-17) nmod:per(77-16, cent-18) punct(reached-3, .-19)",0,0,0,"root(ROOT, reached) nsbj(reached, Loans) ax(reached, have) amod(levels, anticipated) dobj(reached, levels) case(expenditre, of) nmod:of(levels, expenditre) cc(expenditre, and) compond(grants, commnity) compond(grants, care) nmod:of(levels, grants) conj:and(expenditre, grants) ax(risen, have) advmod(risen, steadily) dep(reached, risen) case(77, to) nmod:to(risen, 77) case(cent, per) nmod:per(77, cent) pnct(reached, .)","root(,VBN) nsbj(VBN,NNS) ax(VBN,VBP) amod(NNS,JJ) dobj(VBN,NNS) case(NN,IN) nmod:of(NNS,NN) cc(NN,CC) compond(NNS,NN) compond(NNS,NN) nmod:of(NNS,NNS) conj:and(NN,NNS) ax(VBN,VBP) advmod(VBN,RB) dep(VBN,VBN) case(CD,TO) nmod:to(VBN,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of anticipated monthly expenditure.,ofIN anticipatedVBN monthlyJJ expenditureNN ,"root(ROOT-0, expenditure-4) case(expenditure-4, of-1) amod(expenditure-4, anticipated-2) amod(expenditure-4, monthly-3) punct(expenditure-4, .-5)",0,0,0,"root(ROOT, expenditre) case(expenditre, of) amod(expenditre, anticipated) amod(expenditre, monthly) pnct(expenditre, .)","root(,NN) case(NN,IN) amod(NN,VBN) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Over 600 000 interest free loans have been made and more than 86 000 community care grants have been awarded.,OverIN 600CD 000CD interestNN freeJJ loansNNS haveVBP beenVBN madeVBN andCC moreJJR thanIN 86CD 000CD communityNN careNN grantsNNS haveVBP beenVBN awardedVBN ,"root(ROOT-0, made-8) case(loans-5, Over-1) nummod(loans-5, 600,000-2) compound(loans-5, interest-3) amod(loans-5, free-4) nsubjpass(made-8, loans-5) aux(made-8, have-6) auxpass(made-8, been-7) cc(made-8, and-9) advmod(86,000-12, more-10) mwe(more-10, than-11) nummod(grants-15, 86,000-12) compound(grants-15, community-13) compound(grants-15, care-14) nsubjpass(awarded-18, grants-15) aux(awarded-18, have-16) auxpass(awarded-18, been-17) conj:and(made-8, awarded-18) punct(made-8, .-19)",0,0,0,"root(ROOT, made) case(loans, Over) nmmod(loans, 600,000) compond(loans, interest) amod(loans, free) nsbjpass(made, loans) ax(made, have) axpass(made, been) cc(made, and) advmod(86,000, more) mwe(more, than) nmmod(grants, 86,000) compond(grants, commnity) compond(grants, care) nsbjpass(awarded, grants) ax(awarded, have) axpass(awarded, been) conj:and(made, awarded) pnct(made, .)","root(,VBN) case(NNS,IN) nmmod(NNS,NNS) compond(NNS,NN) amod(NNS,JJ) nsbjpass(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBN) cc(VBN,CC) advmod(CC,JJR) mwe(JJR,IN) nmmod(NNS,NNS) compond(NNS,NN) compond(NNS,NN) nsbjpass(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBN) conj:and(VBN,VBN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The review system is proving to be a speedy and effective means of handling disputed decisions.,TheDT reviewNN systemNN isVBZ provingVBG toTO beVB aDT speedyNN andCC effectiveJJ meansNNS ofIN handlingVBG disputedVBN decisionsNNS ,"root(ROOT-0, proving-5) det(system-3, The-1) compound(system-3, review-2) nsubj(proving-5, system-3) aux(proving-5, is-4) mark(means-12, to-6) cop(means-12, be-7) det(means-12, a-8) amod(means-12, speedy-9) cc(speedy-9, and-10) conj:and(speedy-9, effective-11) amod(means-12, effective-11) xcomp(proving-5, means-12) mark(handling-14, of-13) advcl(means-12, handling-14) amod(decisions-16, disputed-15) dobj(handling-14, decisions-16) punct(proving-5, .-17)",0,0,0,"root(ROOT, proving) det(system, The) compond(system, review) nsbj(proving, system) ax(proving, is) mark(means, to) cop(means, be) det(means, a) amod(means, speedy) cc(speedy, and) conj:and(speedy, effective) amod(means, effective) xcomp(proving, means) mark(handling, of) advcl(means, handling) amod(decisions, dispted) dobj(handling, decisions) pnct(proving, .)","root(,VBG) det(NN,DT) compond(NN,NN) nsbj(VBG,NN) ax(VBG,VBZ) mark(NNS,TO) cop(NNS,VB) det(NNS,DT) amod(NNS,NN) cc(NN,CC) conj:and(NN,JJ) amod(NNS,JJ) xcomp(VBG,NNS) mark(VBG,IN) advcl(NNS,VBG) amod(NNS,VBN) dobj(VBG,NNS) pnct(VBG,VBG)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Reviews are completed in a matter of days rather than the weeks it took for an appeal to be completed.,ReviewsNNS areVBP completedVBN inIN aDT matterNN ofIN daysNNS ratherRB thanIN theDT weeksNNS itPRP tookVBD forIN anDT appealNN toTO beVB completedVBN ,"root(ROOT-0, completed-3) nsubjpass(completed-3, Reviews-1) auxpass(completed-3, are-2) case(matter-6, in-4) det(matter-6, a-5) nmod:in(completed-3, matter-6) case(days-8, of-7) nmod:of(matter-6, days-8) cc(matter-6, rather-9) mwe(rather-9, than-10) det(weeks-12, the-11) nmod:in(completed-3, weeks-12) conj:negcc(matter-6, weeks-12) nsubj(took-14, it-13) acl:relcl(weeks-12, took-14) case(appeal-17, for-15) det(appeal-17, an-16) nmod:for(took-14, appeal-17) mark(completed-20, to-18) auxpass(completed-20, be-19) acl(appeal-17, completed-20) punct(completed-3, .-21)",0,0,1,"root(ROOT, completed) nsbjpass(completed, Reviews) axpass(completed, are) case(matter, in) det(matter, a) nmod:in(completed, matter) case(days, of) nmod:of(matter, days) cc(matter, rather) mwe(rather, than) det(weeks, the) nmod:in(completed, weeks) conj:negcc(matter, weeks) nsbj(took, it) acl:relcl(weeks, took) case(appeal, for) det(appeal, an) nmod:for(took, appeal) mark(completed, to) axpass(completed, be) acl(appeal, completed) pnct(completed, .)","root(,VBN) nsbjpass(VBN,NNS) axpass(VBN,VBP) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) cc(NN,RB) mwe(RB,IN) det(NNS,DT) nmod:in(VBN,NNS) conj:negcc(NN,NNS) nsbj(VBD,PRP) acl:relcl(NNS,VBD) case(NN,IN) det(NN,DT) nmod:for(VBD,NN) mark(VBN,TO) axpass(VBN,VB) acl(NN,VBN) pnct(VBN,VBN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Despite what the Minister has said.,DespiteIN whatWP theDT MinisterNNP hasVBZ saidVBD ,"root(ROOT-0, said-6) mark(said-6, Despite-1) dobj(said-6, what-2) det(Minister-4, the-3) nsubj(said-6, Minister-4) aux(said-6, has-5) punct(said-6, .-7)",0,1,0,"root(ROOT, said) mark(said, Despite) dobj(said, what) det(Minister, the) nsbj(said, Minister) ax(said, has) pnct(said, .)","root(,VBD) mark(VBD,IN) dobj(VBD,WP) det(NNP,DT) nsbj(VBD,NNP) ax(VBD,VBZ) pnct(VBD,VBD)","[said, ROOT, Minister, what]","[said, ROOT, Minister, what]",2,[ ],[ ],VBD_said NNP_Minister WP_what ,"[said, ROOT, Minister, what]","[said, ROOT, Minister, what]",VBD_said NNP_Minister WP_what ,"[said, ROOT, Minister, what]",VBD_said NNP_Minister WP_what ,"[said, ROOT, Minister, what]",VBD_said NNP_Minister WP_what ,-3,0,2,0,0,0,0,0,0,0
will he agree that urgent changes in the way that the social fund works are needed  especially if those who deserve grants are to be in a position to take them up?,willMD hePRP agreeVB thatIN urgentJJ changesNNS inIN theDT wayNN thatIN theDT socialJJ fundNN worksNNS areVBP neededVBN especiallyRB ifIN thoseDT whoWP deserveVBP grantsNNS areVBP toTO beVB inIN aDT positionNN toTO takeVB themPRP upRP ,"root(ROOT-0, agree-3) aux(agree-3, will-1) nsubj(agree-3, he-2) det(changes-6, that-4) amod(changes-6, urgent-5) dobj(agree-3, changes-6) case(way-9, in-7) det(way-9, the-8) nmod:in(changes-6, way-9) mark(needed-16, that-10) det(works-14, the-11) amod(works-14, social-12) compound(works-14, fund-13) nsubjpass(needed-16, works-14) auxpass(needed-16, are-15) ccomp(way-9, needed-16) punct(needed-16, ,-17) advmod(are-24, especially-18) mark(are-24, if-19) nsubj(are-24, those-20) nsubj(deserve-22, who-21) acl:relcl(those-20, deserve-22) dobj(deserve-22, grants-23) advcl(needed-16, are-24) mark(position-29, to-25) cop(position-29, be-26) case(position-29, in-27) det(position-29, a-28) xcomp(are-24, position-29) mark(take-31, to-30) acl(position-29, take-31) dobj(take-31, them-32) compound:prt(take-31, up-33) punct(agree-3, ?-34)",0,0,0,"root(ROOT, agree) ax(agree, will) nsbj(agree, he) det(changes, that) amod(changes, rgent) dobj(agree, changes) case(way, in) det(way, the) nmod:in(changes, way) mark(needed, that) det(works, the) amod(works, social) compond(works, fnd) nsbjpass(needed, works) axpass(needed, are) ccomp(way, needed) pnct(needed, ,) advmod(are, especially) mark(are, if) nsbj(are, those) nsbj(deserve, who) acl:relcl(those, deserve) dobj(deserve, grants) advcl(needed, are) mark(position, to) cop(position, be) case(position, in) det(position, a) xcomp(are, position) mark(take, to) acl(position, take) dobj(take, them) compond:prt(take, p) pnct(agree, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) det(NNS,IN) amod(NNS,JJ) dobj(VB,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) mark(VBN,IN) det(NNS,DT) amod(NNS,JJ) compond(NNS,NN) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(NN,VBN) pnct(VBN,VBN) advmod(VBP,RB) mark(VBP,IN) nsbj(VBP,DT) nsbj(VBP,WP) acl:relcl(DT,VBP) dobj(VBP,NNS) advcl(VBN,VBP) mark(NN,TO) cop(NN,VB) case(NN,IN) det(NN,DT) xcomp(VBP,NN) mark(VB,TO) acl(NN,VB) dobj(VB,PRP) compond:prt(VB,RP) pnct(VB,VB)","[he, ROOT, agree, changes]","[he, ROOT, agree, changes]",3,[ ],[ ],PRP_he VB_agree NNS_changes ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am not completely content because I believe that the officers have been applying the conditions for the community care grants too rigidly.,IPRP amVBP notRB completelyRB contentJJ becauseIN IPRP believeVBP thatIN theDT officersNNS haveVBP beenVBN applyingVBG theDT conditionsNNS forIN theDT communityNN careNN grantsNNS tooRB rigidlyRB ,"root(ROOT-0, content-5) nsubj(content-5, I-1) cop(content-5, am-2) neg(content-5, not-3) advmod(content-5, completely-4) mark(believe-8, because-6) nsubj(believe-8, I-7) advcl(content-5, believe-8) mark(applying-14, that-9) det(officers-11, the-10) nsubj(applying-14, officers-11) aux(applying-14, have-12) aux(applying-14, been-13) ccomp(believe-8, applying-14) det(conditions-16, the-15) dobj(applying-14, conditions-16) case(grants-21, for-17) det(grants-21, the-18) compound(grants-21, community-19) compound(grants-21, care-20) nmod:for(conditions-16, grants-21) advmod(rigidly-23, too-22) advmod(applying-14, rigidly-23) punct(content-5, .-24)",0,0,0,"root(ROOT, content) nsbj(content, I) cop(content, am) neg(content, not) advmod(content, completely) mark(believe, becase) nsbj(believe, I) advcl(content, believe) mark(applying, that) det(officers, the) nsbj(applying, officers) ax(applying, have) ax(applying, been) ccomp(believe, applying) det(conditions, the) dobj(applying, conditions) case(grants, for) det(grants, the) compond(grants, commnity) compond(grants, care) nmod:for(conditions, grants) advmod(rigidly, too) advmod(applying, rigidly) pnct(content, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) neg(JJ,RB) advmod(JJ,RB) mark(VBP,IN) nsbj(VBP,PRP) advcl(JJ,VBP) mark(VBG,IN) det(NNS,DT) nsbj(VBG,NNS) ax(VBG,VBP) ax(VBG,VBN) ccomp(VBP,VBG) det(NNS,DT) dobj(VBG,NNS) case(NNS,IN) det(NNS,DT) compond(NNS,NN) compond(NNS,NN) nmod:for(NNS,NNS) advmod(RB,RB) advmod(VBG,RB) pnct(JJ,JJ)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am determined to ensure that it is a success and that all of the fundamental objections raised when the social fund was first introduced are disproved.,IPRP amVBP determinedVBN toTO ensureVB thatIN itPRP isVBZ aDT successNN andCC thatIN allDT ofIN theDT fundamentalJJ objectionsNNS raisedVBD whenWRB theDT socialJJ fundNN wasVBD firstRB introducedVBN areVBP disprovedVBN ,"root(ROOT-0, determined-3) nsubjpass(determined-3, I-1) auxpass(determined-3, am-2) mark(ensure-5, to-4) xcomp(determined-3, ensure-5) mark(success-10, that-6) nsubj(success-10, it-7) cop(success-10, is-8) det(success-10, a-9) ccomp(ensure-5, success-10) cc(success-10, and-11) mark(disproved-27, that-12) nsubjpass(disproved-27, all-13) case(objections-17, of-14) det(objections-17, the-15) amod(objections-17, fundamental-16) nmod:of(all-13, objections-17) acl(objections-17, raised-18) advmod(introduced-25, when-19) det(fund-22, the-20) amod(fund-22, social-21) nsubjpass(introduced-25, fund-22) auxpass(introduced-25, was-23) advmod(introduced-25, first-24) advcl(raised-18, introduced-25) auxpass(disproved-27, are-26) ccomp(ensure-5, disproved-27) conj:and(success-10, disproved-27) punct(determined-3, .-28)",0,0,1,"root(ROOT, determined) nsbjpass(determined, I) axpass(determined, am) mark(ensre, to) xcomp(determined, ensre) mark(sccess, that) nsbj(sccess, it) cop(sccess, is) det(sccess, a) ccomp(ensre, sccess) cc(sccess, and) mark(disproved, that) nsbjpass(disproved, all) case(objections, of) det(objections, the) amod(objections, fndamental) nmod:of(all, objections) acl(objections, raised) advmod(introdced, when) det(fnd, the) amod(fnd, social) nsbjpass(introdced, fnd) axpass(introdced, was) advmod(introdced, first) advcl(raised, introdced) axpass(disproved, are) ccomp(ensre, disproved) conj:and(sccess, disproved) pnct(determined, .)","root(,VBN) nsbjpass(VBN,PRP) axpass(VBN,VBP) mark(VB,TO) xcomp(VBN,VB) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) ccomp(VB,NN) cc(NN,CC) mark(VBN,IN) nsbjpass(VBN,DT) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(DT,NNS) acl(NNS,VBD) advmod(VBN,WRB) det(NN,DT) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBD) advmod(VBN,RB) advcl(VBD,VBN) axpass(VBN,VBP) ccomp(VB,VBN) conj:and(NN,VBN) pnct(VBN,VBN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Does that mean that the fears that have been expressed by some dare I remind him  on both sides of the House that the cash limited arrangements may prove inadequate  are likely to be allayed?,DoesVBZ thatIN meanVB thatIN theDT fearsNNS thatWDT haveVBP beenVBN expressedVBN byIN someDT dareNN IPRP remindVBP himPRP onIN bothDT sidesNNS ofIN theDT HouseNNP thatIN theDT cashNN limitedVBD arrangementsNNS mayMD proveVB inadequateNN areVBP likelyJJ toTO beVB allayedVBN ,"root(ROOT-0, mean-3) aux(mean-3, Does-1) nsubj(mean-3, that-2) mark(dare-13, that-4) det(fears-6, the-5) nsubj(dare-13, fears-6) nsubjpass(expressed-10, that-7) aux(expressed-10, have-8) auxpass(expressed-10, been-9) acl:relcl(fears-6, expressed-10) case(some-12, by-11) nmod:agent(expressed-10, some-12) ccomp(mean-3, dare-13) nsubj(remind-15, I-14) ccomp(dare-13, remind-15) dobj(remind-15, him-16) punct(mean-3, ,-17) case(sides-20, on-18) det(sides-20, both-19) nmod:on(mean-3, sides-20) case(House-23, of-21) det(House-23, the-22) nmod:of(sides-20, House-23) mark(prove-30, that-24) det(arrangements-28, the-25) compound(arrangements-28, cash-26) amod(arrangements-28, limited-27) nsubj(prove-30, arrangements-28) aux(prove-30, may-29) ccomp(sides-20, prove-30) xcomp(prove-30, inadequate-31) punct(mean-3, ,-32) cop(likely-34, are-33) dep(mean-3, likely-34) mark(allayed-37, to-35) auxpass(allayed-37, be-36) xcomp(likely-34, allayed-37) punct(mean-3, ?-38)",0,0,0,"root(ROOT, mean) ax(mean, Does) nsbj(mean, that) mark(dare, that) det(fears, the) nsbj(dare, fears) nsbjpass(expressed, that) ax(expressed, have) axpass(expressed, been) acl:relcl(fears, expressed) case(some, by) nmod:agent(expressed, some) ccomp(mean, dare) nsbj(remind, I) ccomp(dare, remind) dobj(remind, him) pnct(mean, ,) case(sides, on) det(sides, both) nmod:on(mean, sides) case(Hose, of) det(Hose, the) nmod:of(sides, Hose) mark(prove, that) det(arrangements, the) compond(arrangements, cash) amod(arrangements, limited) nsbj(prove, arrangements) ax(prove, may) ccomp(sides, prove) xcomp(prove, inadeqate) pnct(mean, ,) cop(likely, are) dep(mean, likely) mark(allayed, to) axpass(allayed, be) xcomp(likely, allayed) pnct(mean, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,IN) mark(NN,IN) det(NNS,DT) nsbj(NN,NNS) nsbjpass(VBN,IN) ax(VBN,VBP) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(DT,IN) nmod:agent(VBN,DT) ccomp(VB,NN) nsbj(VBP,PRP) ccomp(NN,VBP) dobj(VBP,PRP) pnct(VB,VB) case(NNS,IN) det(NNS,DT) nmod:on(VB,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) mark(VB,IN) det(NNS,DT) compond(NNS,NN) amod(NNS,VBD) nsbj(VB,NNS) ax(VB,MD) ccomp(NNS,VB) xcomp(VB,NN) pnct(VB,VB) cop(JJ,VBP) dep(VB,JJ) mark(VBN,TO) axpass(VBN,VB) xcomp(JJ,VBN) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is he satisfied that the money allocated will be adequate at least in this financial year?,IsVBZ hePRP satisfiedVBD thatIN theDT moneyNN allocatedVBN willMD beVB adequateJJ atIN leastJJS inIN thisDT financialJJ yearNN ,"root(ROOT-0, satisfied-3) aux(satisfied-3, Is-1) nsubj(satisfied-3, he-2) mark(adequate-10, that-4) det(money-6, the-5) nsubj(adequate-10, money-6) acl(money-6, allocated-7) aux(adequate-10, will-8) cop(adequate-10, be-9) ccomp(satisfied-3, adequate-10) advmod(year-16, at-11) mwe(at-11, least-12) case(year-16, in-13) det(year-16, this-14) amod(year-16, financial-15) nmod:in(adequate-10, year-16) punct(satisfied-3, ?-17)",0,0,0,"root(ROOT, satisfied) ax(satisfied, Is) nsbj(satisfied, he) mark(adeqate, that) det(money, the) nsbj(adeqate, money) acl(money, allocated) ax(adeqate, will) cop(adeqate, be) ccomp(satisfied, adeqate) advmod(year, at) mwe(at, least) case(year, in) det(year, this) amod(year, financial) nmod:in(adeqate, year) pnct(satisfied, ?)","root(,VBD) ax(VBD,VBZ) nsbj(VBD,PRP) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) acl(NN,VBN) ax(JJ,MD) cop(JJ,VB) ccomp(VBD,JJ) advmod(NN,IN) mwe(IN,JJS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(JJ,NN) pnct(VBD,VBD)","[he, ROOT, satisfied, adequate]","[he, ROOT, satisfied, adequate]",5,[ ],[ ],PRP_he JJ_satisfied JJ_adequate ,"[he, ROOT, satisfied, adequate]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
To put this matter in perspective  will my right hon. Friend remind the House what would happen if the amount allocated proved to be inadequate?,ToTO putVB thisDT matterNN inIN perspectiveNN willMD myPRP$ rightJJ honNN FriendNNP remindVBZ theDT HouseNNP whatWP wouldMD happenVB ifIN theDT amountNN allocatedVBD provedVBN toTO beVB inadequateJJ ,"root(ROOT-0, put-2) mark(put-2, To-1) det(matter-4, this-3) dobj(put-2, matter-4) case(perspective-6, in-5) nmod:in(put-2, perspective-6) punct(put-2, ,-7) aux(remind-13, will-8) nmod:poss(Friend-12, my-9) amod(Friend-12, right-10) compound(Friend-12, hon.-11) nsubj(remind-13, Friend-12) parataxis(put-2, remind-13) det(House-15, the-14) dobj(remind-13, House-15) nsubj(happen-18, what-16) aux(happen-18, would-17) ccomp(remind-13, happen-18) mark(proved-23, if-19) det(amount-21, the-20) nsubj(proved-23, amount-21) acl(amount-21, allocated-22) advcl(happen-18, proved-23) mark(inadequate-26, to-24) cop(inadequate-26, be-25) xcomp(proved-23, inadequate-26) punct(put-2, ?-27)",0,0,0,"root(ROOT, pt) mark(pt, To) det(matter, this) dobj(pt, matter) case(perspective, in) nmod:in(pt, perspective) pnct(pt, ,) ax(remind, will) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(remind, Friend) parataxis(pt, remind) det(Hose, the) dobj(remind, Hose) nsbj(happen, what) ax(happen, wold) ccomp(remind, happen) mark(proved, if) det(amont, the) nsbj(proved, amont) acl(amont, allocated) advcl(happen, proved) mark(inadeqate, to) cop(inadeqate, be) xcomp(proved, inadeqate) pnct(pt, ?)","root(,VB) mark(VB,TO) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:in(VB,NN) pnct(VB,VB) ax(VBZ,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) parataxis(VB,VBZ) det(NNP,DT) dobj(VBZ,NNP) nsbj(VB,WP) ax(VB,MD) ccomp(VBZ,VB) mark(VBN,IN) det(NN,DT) nsbj(VBN,NN) acl(NN,VBD) advcl(VB,VBN) mark(JJ,TO) cop(JJ,VB) xcomp(VBN,JJ) pnct(VB,VB)","[Friend, House, remind, my, right, happen]","[my, Friend, remind, House, happen]",5,[ ],[ ],PRP$_my NNP_Friend VBP_remind NNP_House VB_happen ,"[my, Friend, remind, House, happen]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Despite a happy massive reduction in unemployment and therefore a major reduction in case load  those allocations have been maintained.,DespiteIN aDT happyJJ massiveJJ reductionNN inIN unemploymentNN andCC thereforeRB aDT majorJJ reductionNN inIN caseNN loadNN thoseDT allocationsNNS haveVBP beenVBN maintainedVBN ,"root(ROOT-0, maintained-21) case(reduction-5, Despite-1) det(reduction-5, a-2) amod(reduction-5, happy-3) amod(reduction-5, massive-4) nmod:despite(maintained-21, reduction-5) case(unemployment-7, in-6) nmod:in(reduction-5, unemployment-7) cc(reduction-5, and-8) advmod(reduction-12, therefore-9) det(reduction-12, a-10) amod(reduction-12, major-11) conj:and(reduction-5, reduction-12) nmod:despite(maintained-21, reduction-12) case(load-15, in-13) compound(load-15, case-14) nmod:in(reduction-12, load-15) punct(maintained-21, ,-16) det(allocations-18, those-17) nsubjpass(maintained-21, allocations-18) aux(maintained-21, have-19) auxpass(maintained-21, been-20) punct(maintained-21, .-22)",0,0,0,"root(ROOT, maintained) case(redction, Despite) det(redction, a) amod(redction, happy) amod(redction, massive) nmod:despite(maintained, redction) case(nemployment, in) nmod:in(redction, nemployment) cc(redction, and) advmod(redction, therefore) det(redction, a) amod(redction, major) conj:and(redction, redction) nmod:despite(maintained, redction) case(load, in) compond(load, case) nmod:in(redction, load) pnct(maintained, ,) det(allocations, those) nsbjpass(maintained, allocations) ax(maintained, have) axpass(maintained, been) pnct(maintained, .)","root(,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:despite(VBN,NN) case(NN,IN) nmod:in(NN,NN) cc(NN,CC) advmod(NN,RB) det(NN,DT) amod(NN,JJ) conj:and(NN,NN) nmod:despite(VBN,NN) case(NN,IN) compond(NN,NN) nmod:in(NN,NN) pnct(VBN,VBN) det(NNS,DT) nsbjpass(VBN,NNS) ax(VBN,VBP) axpass(VBN,VBN) pnct(VBN,VBN)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Therefore there should be an increase per case in the funds available.,ThereforeRB thereEX shouldMD beVB anDT increaseNN perIN caseNN inIN theDT fundsNNS availableJJ ,"root(ROOT-0, increase-6) advmod(increase-6, Therefore-1) expl(increase-6, there-2) aux(increase-6, should-3) cop(increase-6, be-4) det(increase-6, an-5) case(case-8, per-7) nmod:per(increase-6, case-8) case(funds-11, in-9) det(funds-11, the-10) nmod:in(increase-6, funds-11) amod(funds-11, available-12) punct(increase-6, .-13)",0,0,0,"root(ROOT, increase) advmod(increase, Therefore) expl(increase, there) ax(increase, shold) cop(increase, be) det(increase, an) case(case, per) nmod:per(increase, case) case(fnds, in) det(fnds, the) nmod:in(increase, fnds) amod(fnds, available) pnct(increase, .)","root(,NN) advmod(NN,RB) expl(NN,EX) ax(NN,MD) cop(NN,VB) det(NN,DT) NN(NN,IN) nmod:per(NN,NN) case(NNS,IN) det(NNS,DT) nmod:in(NN,NNS) amod(NNS,JJ) pnct(NN,NN)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I hope that that will reassure my hon. Friend.,IPRP hopeVBP thatIN thatDT willMD reassureVB myPRP$ honNN FriendNN ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(reassure-6, that-3) nsubj(reassure-6, that-4) aux(reassure-6, will-5) ccomp(hope-2, reassure-6) nmod:poss(Friend-9, my-7) compound(Friend-9, hon.-8) dobj(reassure-6, Friend-9) punct(hope-2, .-10)",0,0,0,"root(ROOT, hope) nsbj(hope, I) mark(reassre, that) nsbj(reassre, that) ax(reassre, will) ccomp(hope, reassre) nmod:poss(Friend, my) compond(Friend, hon.) dobj(reassre, Friend) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,DT) nsbj(VB,DT) ax(VB,MD) ccomp(VBP,VB) nmod:poss(NN,PRP$) compond(NN,NN) dobj(VB,NN) pnct(VBP,VBP)","[Friend, my, hope, that, reassure]","[Friend, my, hope, that, reassure]",6,"[Friend, my, hope, that, reassure]","[Friend, my, hope, that, reassure]",NNP_Friend PRP$_my VBP_hope IN_that VB_reassure ,"[Friend, my, hope, that, reassure]","[Friend, my, hope, that, reassure]",NNP_Friend PRP$_my VBP_hope IN_that VB_reassure ,"[Friend, my, hope, that, reassure]",NNP_Friend PRP$_my VBP_hope IN_that VB_reassure ,"[Friend, my, hope, that, reassure]",NNP_Friend PRP$_my VBP_hope IN_that VB_reassure ,-3,0,1,1,1,1,1,1,1,1
When the Minister reviews the social fund  will he consider particularly some of the problems that have arisen in Salford I am sure similar problems have been encountered in other places where people who have been in hospital a long time and those in residential care who cannot get other accommodation  have had to refuse private rented accommodation because the social fund does not cover deposits that are required in that sector?,WhenWRB theDT MinisterNNP reviewsVBZ theDT socialJJ fundNN willMD hePRP considerVB particularlyRB someDT ofIN theDT problemsNNS thatWDT haveVBP arisenVBN inIN SalfordNNP IPRP amVBP sureJJ similarJJ problemsNNS haveVBP beenVBN encounteredVBN inIN otherJJ placesNNS whereWRB peopleNNS whoWP haveVBP beenVBN inIN hospitalNN aDT longJJ timeNN andCC thoseDT inIN residentialJJ careNN whoWP canMD notRB getVB otherJJ accommodationNN haveVBP hadVBN toTO refuseVB privateJJ rentedVBN accommodationNN becauseIN theDT socialJJ fundNN doesVBZ notRB coverVB depositsNNS thatWDT areVBP requiredVBN inIN thatDT sectorNN ,"root(ROOT-0, consider-11) advmod(reviews-4, When-1) det(Minister-3, the-2) nsubj(reviews-4, Minister-3) advcl(consider-11, reviews-4) det(fund-7, the-5) amod(fund-7, social-6) dobj(reviews-4, fund-7) punct(consider-11, ,-8) aux(consider-11, will-9) nsubj(consider-11, he-10) advmod(some-13, particularly-12) nsubj(problems-26, some-13) case(problems-16, of-14) det(problems-16, the-15) nmod:of(some-13, problems-16) nsubj(arisen-19, that-17) aux(arisen-19, have-18) acl:relcl(problems-16, arisen-19) case(I-22, in-20) compound(I-22, Salford-21) nmod:in(arisen-19, I-22) cop(problems-26, am-23) amod(problems-26, sure-24) amod(problems-26, similar-25) ccomp(consider-11, problems-26) aux(encountered-29, have-27) auxpass(encountered-29, been-28) acl(problems-26, encountered-29) case(places-32, in-30) amod(places-32, other-31) nmod:in(encountered-29, places-32) advmod(had-56, where-33) nsubj(had-56, people-34) nsubj(hospital-39, who-35) aux(hospital-39, have-36) cop(hospital-39, been-37) case(hospital-39, in-38) acl:relcl(people-34, hospital-39) det(time-42, a-40) amod(time-42, long-41) dobj(hospital-39, time-42) cc(people-34, and-43) conj:and(people-34, those-44) nsubj(had-56, those-44) case(care-47, in-45) amod(care-47, residential-46) nmod:in(those-44, care-47) nsubj(get-51, who-48) aux(get-51, can-49) neg(get-51, not-50) acl:relcl(care-47, get-51) amod(accommodation-53, other-52) dobj(get-51, accommodation-53) punct(people-34, ,-54) aux(had-56, have-55) acl:relcl(places-32, had-56) mark(refuse-58, to-57) xcomp(had-56, refuse-58) amod(accommodation-61, private-59) amod(accommodation-61, rented-60) dobj(refuse-58, accommodation-61) mark(cover-68, because-62) det(fund-65, the-63) amod(fund-65, social-64) nsubj(cover-68, fund-65) aux(cover-68, does-66) neg(cover-68, not-67) advcl(had-56, cover-68) dobj(cover-68, deposits-69) nsubjpass(required-72, that-70) auxpass(required-72, are-71) acl:relcl(deposits-69, required-72) case(sector-75, in-73) det(sector-75, that-74) nmod:in(required-72, sector-75) punct(consider-11, ?-76)",0,0,0,"root(ROOT, consider) advmod(reviews, When) det(Minister, the) nsbj(reviews, Minister) advcl(consider, reviews) det(fnd, the) amod(fnd, social) dobj(reviews, fnd) pnct(consider, ,) ax(consider, will) nsbj(consider, he) advmod(some, particlarly) nsbj(problems, some) case(problems, of) det(problems, the) nmod:of(some, problems) nsbj(arisen, that) ax(arisen, have) acl:relcl(problems, arisen) case(I, in) compond(I, Salford) nmod:in(arisen, I) cop(problems, am) amod(problems, sre) amod(problems, similar) ccomp(consider, problems) ax(encontered, have) axpass(encontered, been) acl(problems, encontered) case(places, in) amod(places, other) nmod:in(encontered, places) advmod(had, where) nsbj(had, people) nsbj(hospital, who) ax(hospital, have) cop(hospital, been) case(hospital, in) acl:relcl(people, hospital) det(time, a) amod(time, long) dobj(hospital, time) cc(people, and) conj:and(people, those) nsbj(had, those) case(care, in) amod(care, residential) nmod:in(those, care) nsbj(get, who) ax(get, can) neg(get, not) acl:relcl(care, get) amod(accommodation, other) dobj(get, accommodation) pnct(people, ,) ax(had, have) acl:relcl(places, had) mark(refse, to) xcomp(had, refse) amod(accommodation, private) amod(accommodation, rented) dobj(refse, accommodation) mark(cover, becase) det(fnd, the) amod(fnd, social) nsbj(cover, fnd) ax(cover, does) neg(cover, not) advcl(had, cover) dobj(cover, deposits) nsbjpass(reqired, that) axpass(reqired, are) acl:relcl(deposits, reqired) case(sector, in) det(sector, that) nmod:in(reqired, sector) pnct(consider, ?)","root(,VB) advmod(VBZ,WRB) det(NNP,DT) nsbj(VBZ,NNP) advcl(VB,VBZ) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) advmod(DT,RB) nsbj(NNS,DT) case(NNS,IN) det(NNS,DT) nmod:of(DT,NNS) nsbj(VBN,DT) ax(VBN,VBP) acl:relcl(NNS,VBN) case(PRP,IN) compond(PRP,NNP) nmod:in(VBN,PRP) cop(NNS,VBP) amod(NNS,JJ) amod(NNS,JJ) ccomp(VB,NNS) ax(VBN,VBP) axpass(VBN,VBN) acl(NNS,VBN) case(NNS,IN) amod(NNS,JJ) nmod:in(VBN,NNS) advmod(VBN,WRB) nsbj(VBN,NNS) nsbj(NN,WP) ax(NN,VBP) cop(NN,VBN) case(NN,IN) acl:relcl(NNS,NN) det(NN,DT) amod(NN,JJ) dobj(NN,NN) cc(NNS,CC) conj:and(NNS,DT) nsbj(VBN,DT) case(NN,IN) amod(NN,JJ) nmod:in(DT,NN) nsbj(VB,WP) ax(VB,MD) neg(VB,RB) acl:relcl(NN,VB) amod(NN,JJ) dobj(VB,NN) pnct(NNS,NNS) ax(VBN,VBP) acl:relcl(NNS,VBN) mark(VB,TO) xcomp(VBN,VB) amod(NN,JJ) amod(NN,VBN) dobj(VB,NN) mark(VB,IN) det(NN,DT) amod(NN,JJ) nsbj(VB,NN) ax(VB,VBZ) neg(VB,RB) advcl(VBN,VB) dobj(VB,NNS) nsbjpass(VBN,DT) axpass(VBN,VBP) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) pnct(VB,VB)","[reviews, fund, When, consider, problems, he, Minister, ROOT]","[reviews, fund, When, consider, problems, he, Minister, ROOT]",6,"[When, fund, reviews, Minister, consider]","[When, fund, reviews, Minister, consider]",VBZ_reviews NN_fund WRB_When VBP_consider NNS_problems PRP_he NNP_Minister ,"[reviews, fund, When, consider, problems, he, Minister, ROOT]","[reviews, fund, When, consider, problems, he, Minister, ROOT]",VBZ_reviews NN_fund WRB_When VBP_consider NNS_problems PRP_he NNP_Minister ,"[reviews, fund, When, consider, problems, he, Minister, ROOT]",VBZ_reviews NN_fund WRB_When VBP_consider NNS_problems PRP_he NNP_Minister ,"[reviews, fund, When, consider, problems, he, Minister, ROOT]",VBZ_reviews NN_fund WRB_When VBP_consider NNS_problems PRP_he NNP_Minister ,-3,0,2,2,1,2,2,2,2,2
He also said that he would make some comment to the House on the Barnado's report on the problems of youngsters coming out of care and their accommodation difficulties.,HePRP alsoRB saidVBD thatIN hePRP wouldMD makeVB someDT commentNN toTO theDT HouseNNP onIN theDT BarnadoNNP 'sPOS reportNN onIN theDT problemsNNS ofIN youngstersNNS comingVBG outIN ofIN careNN andCC theirPRP$ accommodationNN difficultiesNNS ,"root(ROOT-0, said-3) nsubj(said-3, He-1) advmod(said-3, also-2) mark(make-7, that-4) nsubj(make-7, he-5) aux(make-7, would-6) ccomp(said-3, make-7) det(comment-9, some-8) dobj(make-7, comment-9) case(House-12, to-10) det(House-12, the-11) nmod:to(comment-9, House-12) case(report-17, on-13) det(Barnado-15, the-14) nmod:poss(report-17, Barnado-15) case(Barnado-15, 's-16) nmod:on(comment-9, report-17) case(problems-20, on-18) det(problems-20, the-19) nmod:on(report-17, problems-20) case(youngsters-22, of-21) nmod:of(problems-20, youngsters-22) acl(youngsters-22, coming-23) case(care-26, out-24) mwe(out-24, of-25) nmod:out_of(coming-23, care-26) cc(problems-20, and-27) nmod:poss(difficulties-30, their-28) compound(difficulties-30, accommodation-29) nmod:on(report-17, difficulties-30) conj:and(problems-20, difficulties-30) punct(said-3, .-31)",0,0,0,"root(ROOT, said) nsbj(said, He) advmod(said, also) mark(make, that) nsbj(make, he) ax(make, wold) ccomp(said, make) det(comment, some) dobj(make, comment) case(Hose, to) det(Hose, the) nmod:to(comment, Hose) case(report, on) det(Barnado, the) nmod:poss(report, Barnado) ""case(Barnado, s)"", nmod:on(comment, report) case(problems, on) det(problems, the) nmod:on(report, problems) case(yongsters, of) nmod:of(problems, yongsters) acl(yongsters, coming) case(care, ot) mwe(ot, of) nmod:ot_of(coming, care) cc(problems, and) nmod:poss(difficlties, their) compond(difficlties, accommodation) nmod:on(report, difficlties) conj:and(problems, difficlties) pnct(said, .)","root(,VBD) nsbj(VBD,PRP) advmod(VBD,RB) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBD,VB) det(NN,DT) dobj(VB,NN) case(NNP,TO) det(NNP,DT) nmod:to(NN,NNP) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) nmod:on(NN,NN) case(NNS,IN) det(NNS,DT) nmod:on(NN,NNS) case(NNS,IN) nmod:of(NNS,NNS) acl(NNS,VBG) case(NN,IN) mwe(IN,IN) nmod:ot_of(VBG,NN) cc(NNS,CC) nmod:poss(NNS,PRP$) compond(NNS,NN) nmod:on(NN,NNS) conj:and(NNS,NNS) pnct(VBD,VBD)","[also, make, comment, ROOT, He, said, he]","[also, make, comment, ROOT, He, said, he]",7,"[ROOT, also, He, make, said]","[ROOT, also, He, make, said]",RB_also VB_make VB_comment PRP_He VBD_said PRP_he ,"[also, make, comment, ROOT, He, said, he]","[also, make, comment, ROOT, He, said, he]",RB_also VB_make VB_comment PRP_He VBD_said PRP_he ,"[also, make, comment, ROOT, He, said, he]",RB_also VB_make VB_comment PRP_He VBD_said PRP_he ,"[also, make, comment, ROOT, He, said, he]",RB_also VB_make VB_comment PRP_He VBD_said PRP_he ,-3,0,2,0,0,0,0,0,0,0
Will he do so now?,WillMD hePRP doVB soRB nowRB ,"root(ROOT-0, do-3) aux(do-3, Will-1) nsubj(do-3, he-2) advmod(now-5, so-4) advmod(do-3, now-5) punct(do-3, ?-6)",0,0,1,"root(ROOT, do) ax(do, Will) nsbj(do, he) advmod(now, so) advmod(do, now) pnct(do, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) advmod(RB,RB) advmod(VB,RB) pnct(VB,VB)","[he, ROOT, do, now]","[he, ROOT, do, now]",7,[ ],[ ],PRP_he VB_do RB_now ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Obviously I will watch carefully how the social fund works because I am determined to ensure that this much more effective method of helping those in need is monitored and adjusted if necessary.,ObviouslyRB IPRP willMD watchVB carefullyRB howWRB theDT socialJJ fundNN worksVBZ becauseIN IPRP amVBP determinedVBN toTO ensureVB thatIN thisDT muchRB moreRBR effectiveJJ methodNN ofIN helpingVBG thoseDT inIN needNN isVBZ monitoredVBN andCC adjustedVBN ifIN necessaryJJ ,"root(ROOT-0, watch-4) advmod(watch-4, Obviously-1) nsubj(watch-4, I-2) aux(watch-4, will-3) advmod(watch-4, carefully-5) advmod(works-10, how-6) det(fund-9, the-7) amod(fund-9, social-8) nsubj(works-10, fund-9) ccomp(watch-4, works-10) mark(determined-14, because-11) nsubjpass(determined-14, I-12) auxpass(determined-14, am-13) advcl(works-10, determined-14) mark(ensure-16, to-15) xcomp(determined-14, ensure-16) mark(monitored-29, that-17) det(method-22, this-18) advmod(effective-21, much-19) advmod(effective-21, more-20) amod(method-22, effective-21) nsubjpass(monitored-29, method-22) nsubjpass(adjusted-31, method-22) mark(helping-24, of-23) acl(method-22, helping-24) dobj(helping-24, those-25) case(need-27, in-26) nmod:in(helping-24, need-27) auxpass(monitored-29, is-28) ccomp(ensure-16, monitored-29) cc(monitored-29, and-30) ccomp(ensure-16, adjusted-31) conj:and(monitored-29, adjusted-31) mark(necessary-33, if-32) advcl(adjusted-31, necessary-33) punct(watch-4, .-34)",0,1,0,"root(ROOT, watch) advmod(watch, Obviosly) nsbj(watch, I) ax(watch, will) advmod(watch, careflly) advmod(works, how) det(fnd, the) amod(fnd, social) nsbj(works, fnd) ccomp(watch, works) mark(determined, becase) nsbjpass(determined, I) axpass(determined, am) advcl(works, determined) mark(ensre, to) xcomp(determined, ensre) mark(monitored, that) det(method, this) advmod(effective, mch) advmod(effective, more) amod(method, effective) nsbjpass(monitored, method) nsbjpass(adjsted, method) mark(helping, of) acl(method, helping) dobj(helping, those) case(need, in) nmod:in(helping, need) axpass(monitored, is) ccomp(ensre, monitored) cc(monitored, and) ccomp(ensre, adjsted) conj:and(monitored, adjsted) mark(necessary, if) advcl(adjsted, necessary) pnct(watch, .)","root(,VB) advmod(VB,RB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) advmod(VBZ,WRB) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) ccomp(VB,VBZ) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBP) advcl(VBZ,VBN) mark(VB,TO) xcomp(VBN,VB) mark(VBN,IN) det(NN,DT) advmod(JJ,RB) advmod(JJ,RBR) amod(NN,JJ) nsbjpass(VBN,NN) nsbjpass(VBN,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,DT) case(NN,IN) nmod:in(VBG,NN) axpass(VBN,VBZ) ccomp(VB,VBN) cc(VBN,CC) ccomp(VB,VBN) conj:and(VBN,VBN) mark(JJ,IN) advcl(VBN,JJ) pnct(VB,VB)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Recently I met representatives of certain organisations who raised the difficulties that they believe are being faced by a particular group of 16 and 17 year olds.,RecentlyRB IPRP metVBD representativesNNS ofIN certainJJ organisationsNNS whoWP raisedVBD theDT difficultiesNNS thatIN theyPRP believeVBP areVBP beingVBG facedVBN byIN aDT particularJJ groupNN ofIN 16CD andCC 17CD yearNN oldsNNS ,"root(ROOT-0, met-3) advmod(met-3, Recently-1) nsubj(met-3, I-2) dobj(met-3, representatives-4) case(organisations-7, of-5) amod(organisations-7, certain-6) nmod:of(representatives-4, organisations-7) nsubj(raised-9, who-8) acl:relcl(organisations-7, raised-9) det(difficulties-11, the-10) dobj(raised-9, difficulties-11) dobj(believe-14, that-12) nsubj(believe-14, they-13) acl:relcl(difficulties-11, believe-14) aux(faced-17, are-15) auxpass(faced-17, being-16) ccomp(believe-14, faced-17) case(group-21, by-18) det(group-21, a-19) amod(group-21, particular-20) nmod:agent(faced-17, group-21) case(16-23, of-22) nmod:of(group-21, 16-23) cc(16-23, and-24) nmod:of(group-21, 17-25) conj:and(16-23, 17-25) compound(olds-27, year-26) dep(16-23, olds-27) punct(met-3, .-28)",0,0,0,"root(ROOT, met) advmod(met, Recently) nsbj(met, I) dobj(met, representatives) case(organisations, of) amod(organisations, certain) nmod:of(representatives, organisations) nsbj(raised, who) acl:relcl(organisations, raised) det(difficlties, the) dobj(raised, difficlties) dobj(believe, that) nsbj(believe, they) acl:relcl(difficlties, believe) ax(faced, are) axpass(faced, being) ccomp(believe, faced) case(grop, by) det(grop, a) amod(grop, particlar) nmod:agent(faced, grop) case(16, of) nmod:of(grop, 16) cc(16, and) nmod:of(grop, 17) conj:and(16, 17) compond(olds, year) dep(16, olds) pnct(met, .)","root(,VBD) advmod(VBD,RB) nsbj(VBD,PRP) dobj(VBD,NNS) case(NNS,IN) amod(NNS,JJ) nmod:of(NNS,NNS) nsbj(VBD,WP) acl:relcl(NNS,VBD) det(NNS,DT) dobj(VBD,NNS) dobj(VBP,IN) nsbj(VBP,PRP) acl:relcl(NNS,VBP) ax(VBN,VBP) axpass(VBN,VBG) ccomp(VBP,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:agent(VBN,NN) case(CD,IN) nmod:of(NN,CD) cc(CD,CC) nmod:of(NN,CD) conj:and(CD,CD) compond(NNS,NN) dep(CD,NNS) pnct(VBD,VBD)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Obviously I shall consider that matter with care.,ObviouslyRB IPRP shallMD considerVB thatDT matterNN withIN careNN ,"root(ROOT-0, consider-4) advmod(consider-4, Obviously-1) nsubj(consider-4, I-2) aux(consider-4, shall-3) det(matter-6, that-5) dobj(consider-4, matter-6) case(care-8, with-7) nmod:with(matter-6, care-8) punct(consider-4, .-9)",0,0,0,"root(ROOT, consider) advmod(consider, Obviosly) nsbj(consider, I) ax(consider, shall) det(matter, that) dobj(consider, matter) case(care, with) nmod:with(matter, care) pnct(consider, .)","root(,VB) advmod(VB,RB) nsbj(VB,PRP) ax(VB,MD) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:with(NN,NN) pnct(VB,VB)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Can my right hon. Friend tell the House whether there are any items or expenses  previously excluded from the single payment expenses  which are now covered under the social fund?,CanMD myPRP$ rightJJ honNN FriendNNP tellVBP theDT HouseNNP whetherIN thereEX areVBP anyDT itemsNNS orCC expensesNNS previouslyRB excludedVBN fromIN theDT singleJJ paymentNN expensesNNS whichWDT areVBP nowRB coveredVBN underIN theDT socialJJ fundNN ,"root(ROOT-0, tell-6) aux(tell-6, Can-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(tell-6, Friend-5) det(House-8, the-7) dobj(tell-6, House-8) mark(are-11, whether-9) expl(are-11, there-10) ccomp(tell-6, are-11) det(items-13, any-12) nsubj(are-11, items-13) cc(items-13, or-14) nsubj(are-11, expenses-15) conj:or(items-13, expenses-15) punct(tell-6, ,-16) advmod(excluded-18, previously-17) xcomp(tell-6, excluded-18) case(expenses-23, from-19) det(expenses-23, the-20) amod(expenses-23, single-21) compound(expenses-23, payment-22) nmod:from(excluded-18, expenses-23) punct(expenses-23, ,-24) nsubjpass(covered-28, which-25) auxpass(covered-28, are-26) advmod(covered-28, now-27) acl:relcl(expenses-23, covered-28) case(fund-32, under-29) det(fund-32, the-30) amod(fund-32, social-31) nmod:under(covered-28, fund-32) punct(tell-6, ?-33)",0,0,0,"root(ROOT, tell) ax(tell, Can) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(tell, Friend) det(Hose, the) dobj(tell, Hose) mark(are, whether) expl(are, there) ccomp(tell, are) det(items, any) nsbj(are, items) cc(items, or) nsbj(are, expenses) conj:or(items, expenses) pnct(tell, ,) advmod(exclded, previosly) xcomp(tell, exclded) case(expenses, from) det(expenses, the) amod(expenses, single) compond(expenses, payment) nmod:from(exclded, expenses) pnct(expenses, ,) nsbjpass(covered, which) axpass(covered, are) advmod(covered, now) acl:relcl(expenses, covered) case(fnd, nder) det(fnd, the) amod(fnd, social) nmod:nder(covered, fnd) pnct(tell, ?)","root(,VBP) ax(VBP,MD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBP,NNP) det(NNP,DT) dobj(VBP,NNP) mark(VBP,IN) expl(VBP,EX) ccomp(VBP,VBP) det(NNS,DT) nsbj(VBP,NNS) cc(NNS,CC) nsbj(VBP,NNS) conj:or(NNS,NNS) pnct(VBP,VBP) advmod(VBN,RB) xcomp(VBP,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) compond(NNS,NN) nmod:from(VBN,NNS) pnct(NNS,NNS) nsbjpass(VBN,WDT) axpass(VBN,VBP) advmod(VBN,RB) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:nder(VBN,NN) pnct(VBP,VBP)","[tell, are, House, right, excluded, Friend, my, ROOT]","[tell, are, House, ROOT, my, Friend, excluded]",8,[ ],[ ],VB_tell VBP_are NNP_House PRP$_my NNP_Friend VBN_excluded ,"[tell, are, House, ROOT, my, Friend, excluded]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
One office  for example  paid for a holiday for a family whose young daughter had been seriously sexually abused not surprisingly all the family had been under considerable stress.,OneCD officeNN forIN exampleNN paidVBN forIN aDT holidayNN forIN aDT familyNN whoseWP$ youngJJ daughterNN hadVBD beenVBN seriouslyRB sexuallyRB abusedVBN notRB surprisinglyRB allPDT theDT familyNN hadVBD beenVBN underIN considerableJJ stressNN ,"root(ROOT-0, stress-31) nummod(office-2, One-1) nsubjpass(paid-7, office-2) punct(paid-7, ,-3) case(example-5, for-4) nmod:for(paid-7, example-5) punct(paid-7, ,-6) csubj(stress-31, paid-7) case(holiday-10, for-8) det(holiday-10, a-9) nmod:for(paid-7, holiday-10) case(family-13, for-11) det(family-13, a-12) nmod:for(holiday-10, family-13) nmod:poss(daughter-16, whose-14) amod(daughter-16, young-15) nsubj(abused-21, daughter-16) aux(abused-21, had-17) cop(abused-21, been-18) advmod(abused-21, seriously-19) advmod(abused-21, sexually-20) acl:relcl(family-13, abused-21) neg(family-26, not-22) advmod(family-26, surprisingly-23) det:predet(family-26, all-24) det(family-26, the-25) dobj(abused-21, family-26) aux(stress-31, had-27) cop(stress-31, been-28) case(stress-31, under-29) amod(stress-31, considerable-30) punct(stress-31, .-32)",0,0,0,"root(ROOT, stress) nmmod(office, One) nsbjpass(paid, office) pnct(paid, ,) case(example, for) nmod:for(paid, example) pnct(paid, ,) csbj(stress, paid) case(holiday, for) det(holiday, a) nmod:for(paid, holiday) case(family, for) det(family, a) nmod:for(holiday, family) nmod:poss(daghter, whose) amod(daghter, yong) nsbj(absed, daghter) ax(absed, had) cop(absed, been) advmod(absed, seriosly) advmod(absed, sexally) acl:relcl(family, absed) neg(family, not) advmod(family, srprisingly) det:predet(family, all) det(family, the) dobj(absed, family) ax(stress, had) cop(stress, been) case(stress, nder) amod(stress, considerable) pnct(stress, .)","root(,NN) nmmod(NN,CD) nsbjpass(VBN,NN) pnct(VBN,VBN) case(NN,IN) nmod:for(VBN,NN) pnct(VBN,VBN) csbj(NN,VBN) case(NN,IN) det(NN,DT) nmod:for(VBN,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) nmod:poss(NN,WP$) amod(NN,JJ) nsbj(VBN,NN) ax(VBN,VBD) cop(VBN,VBN) advmod(VBN,RB) advmod(VBN,RB) acl:relcl(NN,VBN) neg(NN,RB) advmod(NN,RB) det:predet(NN,PDT) det(NN,DT) dobj(VBN,NN) ax(NN,VBD) cop(NN,VBN) case(NN,IN) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In another case a £500 grant was given for a teletext television for a deaf elderly pensioner  living alone  who had become extremely isolated.,InIN anotherDT caseNN aDT £500NN grantNN wasVBD givenVBN forIN aDT teletextJJ televisionNN forIN aDT deafNN elderlyJJ pensionerNN livingVBG aloneRB whoWP hadVBD becomeVBN extremelyRB isolatedJJ ,"root(ROOT-0, given-9) case(case-3, In-1) det(case-3, another-2) nmod:in(given-9, case-3) det(grant-7, a-4) compound(grant-7, #-5) nummod(grant-7, 500-6) nsubjpass(given-9, grant-7) auxpass(given-9, was-8) case(television-13, for-10) det(television-13, a-11) compound(television-13, teletext-12) nmod:for(given-9, television-13) case(pensioner-18, for-14) det(pensioner-18, a-15) amod(pensioner-18, deaf-16) amod(pensioner-18, elderly-17) nmod:for(television-13, pensioner-18) punct(pensioner-18, ,-19) appos(pensioner-18, living-20) advmod(living-20, alone-21) punct(pensioner-18, ,-22) nsubj(become-25, who-23) aux(become-25, had-24) acl:relcl(pensioner-18, become-25) advmod(isolated-27, extremely-26) xcomp(become-25, isolated-27) punct(given-9, .-28)",0,0,0,"root(ROOT, given) case(case, In) det(case, another) nmod:in(given, case) det(grant, a) compond(grant, #) nmmod(grant, 500) nsbjpass(given, grant) axpass(given, was) case(television, for) det(television, a) compond(television, teletext) nmod:for(given, television) case(pensioner, for) det(pensioner, a) amod(pensioner, deaf) amod(pensioner, elderly) nmod:for(television, pensioner) pnct(pensioner, ,) appos(pensioner, living) advmod(living, alone) pnct(pensioner, ,) nsbj(become, who) ax(become, had) acl:relcl(pensioner, become) advmod(isolated, extremely) xcomp(become, isolated) pnct(given, .)","root(,VBN) NN(NN,IN) det(NN,DT) nmod:in(VBN,NN) det(NN,DT) compond(NN,NN) nmmod(NN,NN) nsbjpass(VBN,NN) axpass(VBN,VBD) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:for(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,NN) amod(NN,JJ) nmod:for(NN,NN) pnct(NN,NN) appos(NN,VBG) advmod(VBG,RB) pnct(NN,NN) nsbj(VBN,WP) ax(VBN,VBD) acl:relcl(NN,VBN) advmod(JJ,RB) xcomp(VBN,JJ) pnct(VBN,VBN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I could give many other illustrations of payments which could not have been covered under the old single payments system.,IPRP couldMD giveVB manyJJ otherJJ illustrationsNNS ofIN paymentsNNS whichWDT couldMD notRB haveVB beenVBN coveredVBN underIN theDT oldJJ singleJJ paymentsNNS systemNN ,"root(ROOT-0, give-3) nsubj(give-3, I-1) aux(give-3, could-2) amod(illustrations-6, many-4) amod(illustrations-6, other-5) dobj(give-3, illustrations-6) case(payments-8, of-7) nmod:of(illustrations-6, payments-8) nsubjpass(covered-14, which-9) aux(covered-14, could-10) neg(covered-14, not-11) aux(covered-14, have-12) auxpass(covered-14, been-13) acl:relcl(payments-8, covered-14) case(system-20, under-15) det(system-20, the-16) amod(system-20, old-17) amod(system-20, single-18) compound(system-20, payments-19) nmod:under(covered-14, system-20) punct(give-3, .-21)",0,0,1,"root(ROOT, give) nsbj(give, I) ax(give, cold) amod(illstrations, many) amod(illstrations, other) dobj(give, illstrations) case(payments, of) nmod:of(illstrations, payments) nsbjpass(covered, which) ax(covered, cold) neg(covered, not) ax(covered, have) axpass(covered, been) acl:relcl(payments, covered) case(system, nder) det(system, the) amod(system, old) amod(system, single) compond(system, payments) nmod:nder(covered, system) pnct(give, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) amod(NNS,JJ) amod(NNS,JJ) dobj(VB,NNS) case(NNS,IN) nmod:of(NNS,NNS) nsbjpass(VBN,WDT) ax(VBN,MD) neg(VBN,RB) ax(VBN,VB) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) compond(NN,NNS) nmod:nder(VBN,NN) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is the Secretary of State aware that many offices are now reporting problems because people are having great difficulty in trying to fill in the 17 page form?,IsVBZ theDT SecretaryNNP ofIN StateNNP awareJJ thatIN manyJJ officesNNS areVBP nowRB reportingVBG problemsNNS becauseIN peopleNNS areVBP havingVBG greatJJ difficultyNN inIN tryingVBG toTO fillVB inIN theDT 17CD pageNN formNN ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) det(Secretary-3, the-2) nsubj(aware-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(reporting-12, that-7) amod(offices-9, many-8) nsubj(reporting-12, offices-9) aux(reporting-12, are-10) advmod(reporting-12, now-11) ccomp(aware-6, reporting-12) dobj(reporting-12, problems-13) mark(having-17, because-14) nsubj(having-17, people-15) aux(having-17, are-16) advcl(reporting-12, having-17) amod(difficulty-19, great-18) dobj(having-17, difficulty-19) mark(trying-21, in-20) acl(difficulty-19, trying-21) mark(fill-23, to-22) xcomp(trying-21, fill-23) case(form-28, in-24) det(form-28, the-25) nummod(form-28, 17-26) compound(form-28, page-27) nmod:in(fill-23, form-28) punct(aware-6, ?-29)",0,1,0,"root(ROOT, aware) cop(aware, Is) det(Secretary, the) nsbj(aware, Secretary) case(State, of) nmod:of(Secretary, State) mark(reporting, that) amod(offices, many) nsbj(reporting, offices) ax(reporting, are) advmod(reporting, now) ccomp(aware, reporting) dobj(reporting, problems) mark(having, becase) nsbj(having, people) ax(having, are) advcl(reporting, having) amod(difficlty, great) dobj(having, difficlty) mark(trying, in) acl(difficlty, trying) mark(fill, to) xcomp(trying, fill) case(form, in) det(form, the) nmmod(form, 17) compond(form, page) nmod:in(fill, form) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) det(NNP,DT) nsbj(JJ,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(VBG,IN) amod(NNS,JJ) nsbj(VBG,NNS) ax(VBG,VBP) advmod(VBG,RB) ccomp(JJ,VBG) dobj(VBG,NNS) mark(VBG,IN) nsbj(VBG,NNS) ax(VBG,VBP) advcl(VBG,VBG) amod(NN,JJ) dobj(VBG,NN) mark(VBG,IN) acl(NN,VBG) mark(VB,TO) xcomp(VBG,VB) case(NN,IN) det(NN,DT) nmmod(NN,CD) compond(NN,NN) nmod:in(VB,NN) pnct(JJ,JJ)","[aware, ROOT, State, Secretary, reporting]","[aware, ROOT, State, Secretary, reporting]",10,"[aware, ROOT, State, Secretary, reporting]",[ ],JJ_aware NNP_State NNP_Secretary VBG_reporting ,"[aware, ROOT, State, Secretary, reporting]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Has he any ideas for changing that form  which is causing a great deal of trouble?,HasNNP hePRP anyDT ideasNNS forIN changingVBG thatDT formNN whichWDT isVBZ causingVBG aDT greatJJ dealNN ofIN troubleNN ,"root(ROOT-0, ideas-4) aux(ideas-4, Has-1) nsubj(ideas-4, he-2) det(ideas-4, any-3) mark(changing-6, for-5) acl(ideas-4, changing-6) dobj(changing-6, that-7) dep(that-7, form-8) punct(form-8, ,-9) nsubj(causing-12, which-10) aux(causing-12, is-11) acl:relcl(form-8, causing-12) det(deal-15, a-13) amod(deal-15, great-14) dobj(causing-12, deal-15) case(trouble-17, of-16) nmod:of(deal-15, trouble-17) punct(ideas-4, ?-18)",0,0,0,"root(ROOT, ideas) ax(ideas, Has) nsbj(ideas, he) det(ideas, any) mark(changing, for) acl(ideas, changing) dobj(changing, that) dep(that, form) pnct(form, ,) nsbj(casing, which) ax(casing, is) acl:relcl(form, casing) det(deal, a) amod(deal, great) dobj(casing, deal) case(troble, of) nmod:of(deal, troble) pnct(ideas, ?)","root(,NNS) ax(NNS,NNP) nsbj(NNS,PRP) det(NNS,DT) mark(VBG,IN) acl(NNS,VBG) dobj(VBG,DT) dep(DT,NN) pnct(NN,NN) nsbj(VBG,WDT) ax(VBG,VBZ) acl:relcl(NN,VBG) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) case(NN,IN) nmod:of(NN,NN) pnct(NNS,NNS)","[he, ROOT, ideas, changing]","[he, ROOT, ideas, changing]",11,[ ],[ ],PRP_he NNS_ideas NN_changing ,"[he, ROOT, ideas, changing]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
On a previous occasion my hon. Friend the Minister of State said that we were looking at the form and we shall continue to do so.,OnIN aDT previousJJ occasionNN myPRP$ honNN FriendNNP theDT MinisterNNP ofIN StateNNP saidVBD thatIN wePRP wereVBD lookingVBG atIN theDT formNN andCC wePRP shallMD continueVB toTO doVB soRB ,"root(ROOT-0, occasion-4) case(occasion-4, On-1) det(occasion-4, a-2) amod(occasion-4, previous-3) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) dep(occasion-4, Friend-7) det(Minister-9, the-8) nsubj(said-12, Minister-9) case(State-11, of-10) nmod:of(Minister-9, State-11) acl:relcl(Friend-7, said-12) mark(looking-16, that-13) nsubj(looking-16, we-14) aux(looking-16, were-15) ccomp(said-12, looking-16) case(form-19, at-17) det(form-19, the-18) nmod:at(looking-16, form-19) cc(looking-16, and-20) nsubj(continue-23, we-21) aux(continue-23, shall-22) ccomp(said-12, continue-23) conj:and(looking-16, continue-23) mark(do-25, to-24) xcomp(continue-23, do-25) advmod(do-25, so-26) punct(occasion-4, .-27)",0,1,0,"root(ROOT, occasion) case(occasion, On) det(occasion, a) amod(occasion, previos) nmod:poss(Friend, my) compond(Friend, hon.) dep(occasion, Friend) det(Minister, the) nsbj(said, Minister) case(State, of) nmod:of(Minister, State) acl:relcl(Friend, said) mark(looking, that) nsbj(looking, we) ax(looking, were) ccomp(said, looking) case(form, at) det(form, the) nmod:at(looking, form) cc(looking, and) nsbj(contine, we) ax(contine, shall) ccomp(said, contine) conj:and(looking, contine) mark(do, to) xcomp(contine, do) advmod(do, so) pnct(occasion, .)","root(,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) dep(NN,NNP) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) acl:relcl(NNP,VBD) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBD) ccomp(VBD,VBG) case(NN,IN) det(NN,DT) nmod:at(VBG,NN) cc(VBG,CC) nsbj(VB,PRP) ax(VB,MD) ccomp(VBD,VB) conj:and(VBG,VB) mark(VB,TO) xcomp(VB,VB) advmod(VB,RB) pnct(NN,NN)","[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]","[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]",11,"[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]","[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]",JJ_previous NNP_State NN_occasion VBG_looking VB_continue NNP_Friend PRP$_my NNP_Minister VBD_said ,"[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]","[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]",JJ_previous NNP_State NN_occasion VBG_looking VB_continue NNP_Friend PRP$_my NNP_Minister VBD_said ,"[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]",JJ_previous NNP_State NN_occasion VBG_looking VB_continue NNP_Friend PRP$_my NNP_Minister VBD_said ,"[previous, State, occasion, looking, continue, Friend, my, ROOT, Minister, said]",JJ_previous NNP_State NN_occasion VBG_looking VB_continue NNP_Friend PRP$_my NNP_Minister VBD_said ,-3,0,2,0,0,0,2,2,2,2
When that form is filled out with the help of the staff at local offices  it is producing considerable success in terms of the numbers of applications for grants.,WhenWRB thatDT formNN isVBZ filledVBN outRP withIN theDT helpNN ofIN theDT staffNN atIN localJJ officesNNS itPRP isVBZ producingVBG considerableJJ successNN inIN termsNNS ofIN theDT numbersNNS ofIN applicationsNNS forIN grantsNNS ,"root(ROOT-0, producing-19) advmod(filled-5, When-1) det(form-3, that-2) nsubjpass(filled-5, form-3) auxpass(filled-5, is-4) advcl(producing-19, filled-5) compound:prt(filled-5, out-6) case(help-9, with-7) det(help-9, the-8) nmod:with(filled-5, help-9) case(staff-12, of-10) det(staff-12, the-11) nmod:of(help-9, staff-12) case(offices-15, at-13) amod(offices-15, local-14) nmod:at(staff-12, offices-15) punct(producing-19, ,-16) nsubj(producing-19, it-17) aux(producing-19, is-18) amod(success-21, considerable-20) dobj(producing-19, success-21) case(terms-23, in-22) nmod:in(producing-19, terms-23) case(numbers-26, of-24) det(numbers-26, the-25) nmod:of(terms-23, numbers-26) case(applications-28, of-27) nmod:of(numbers-26, applications-28) case(grants-30, for-29) nmod:for(applications-28, grants-30) punct(producing-19, .-31)",0,0,0,"root(ROOT, prodcing) advmod(filled, When) det(form, that) nsbjpass(filled, form) axpass(filled, is) advcl(prodcing, filled) compond:prt(filled, ot) case(help, with) det(help, the) nmod:with(filled, help) case(staff, of) det(staff, the) nmod:of(help, staff) case(offices, at) amod(offices, local) nmod:at(staff, offices) pnct(prodcing, ,) nsbj(prodcing, it) ax(prodcing, is) amod(sccess, considerable) dobj(prodcing, sccess) case(terms, in) nmod:in(prodcing, terms) case(nmbers, of) det(nmbers, the) nmod:of(terms, nmbers) case(applications, of) nmod:of(nmbers, applications) case(grants, for) nmod:for(applications, grants) pnct(prodcing, .)","root(,VBG) advmod(VBN,WRB) det(NN,DT) nsbjpass(VBN,NN) axpass(VBN,VBZ) advcl(VBG,VBN) compond:prt(VBN,RP) case(NN,IN) det(NN,DT) nmod:with(VBN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:at(NN,NNS) pnct(VBG,VBG) nsbj(VBG,PRP) ax(VBG,VBZ) amod(NN,JJ) dobj(VBG,NN) case(NNS,IN) nmod:in(VBG,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) case(NNS,IN) nmod:of(NNS,NNS) case(NNS,IN) nmod:for(NNS,NNS) pnct(VBG,VBG)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am constantly looking at all of our forms because I am anxious to ensure that those who are entitled to receive those benefits with the help of the form and our offices.,IPRP amVBP constantlyRB lookingVBG atIN allDT ofIN ourPRP$ formsNNS becauseIN IPRP amVBP anxiousJJ toTO ensureVB thatIN thoseDT whoWP areVBP entitledVBN toTO receiveVB thoseDT benefitsNNS withIN theDT helpNN ofIN theDT formNN andCC ourPRP$ officesNNS ,"root(ROOT-0, looking-4) nsubj(looking-4, I-1) aux(looking-4, am-2) advmod(looking-4, constantly-3) case(all-6, at-5) nmod:at(looking-4, all-6) case(forms-9, of-7) nmod:poss(forms-9, our-8) nmod:of(all-6, forms-9) mark(anxious-13, because-10) nsubj(anxious-13, I-11) cop(anxious-13, am-12) advcl(looking-4, anxious-13) mark(ensure-15, to-14) xcomp(anxious-13, ensure-15) dobj(ensure-15, that-16) dep(that-16, those-17) nsubjpass(entitled-20, who-18) auxpass(entitled-20, are-19) acl:relcl(those-17, entitled-20) mark(receive-22, to-21) xcomp(entitled-20, receive-22) det(benefits-24, those-23) dobj(receive-22, benefits-24) case(help-27, with-25) det(help-27, the-26) nmod:with(receive-22, help-27) case(form-30, of-28) det(form-30, the-29) nmod:of(help-27, form-30) cc(help-27, and-31) nmod:poss(offices-33, our-32) nmod:with(receive-22, offices-33) conj:and(help-27, offices-33) punct(looking-4, .-34)",0,0,1,"root(ROOT, looking) nsbj(looking, I) ax(looking, am) advmod(looking, constantly) case(all, at) nmod:at(looking, all) case(forms, of) nmod:poss(forms, or) nmod:of(all, forms) mark(anxios, becase) nsbj(anxios, I) cop(anxios, am) advcl(looking, anxios) mark(ensre, to) xcomp(anxios, ensre) dobj(ensre, that) dep(that, those) nsbjpass(entitled, who) axpass(entitled, are) acl:relcl(those, entitled) mark(receive, to) xcomp(entitled, receive) det(benefits, those) dobj(receive, benefits) case(help, with) det(help, the) nmod:with(receive, help) case(form, of) det(form, the) nmod:of(help, form) cc(help, and) nmod:poss(offices, or) nmod:with(receive, offices) conj:and(help, offices) pnct(looking, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBP) advmod(VBG,RB) case(DT,IN) nmod:at(VBG,DT) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:of(DT,NNS) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBP) advcl(VBG,JJ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,IN) dep(IN,DT) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(DT,VBN) mark(VB,TO) xcomp(VBN,VB) det(NNS,DT) dobj(VB,NNS) case(NN,IN) det(NN,DT) nmod:with(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) cc(NN,CC) nmod:poss(NNS,PRP$) nmod:with(VB,NNS) conj:and(NN,NNS) pnct(VBG,VBG)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
To ask the Secretary of State for Foreign and Commonwealth Affairs when he next expects to meet the President of the European Commission; and what matters he expects to discuss.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN ForeignNNP andCC CommonwealthNNP AffairsNNPS whenWRB hePRP nextRB expectsVBZ toTO meetVB theDT PresidentNNP ofIN theDT EuropeanJJ CommissionNNP ;: andCC whatWP mattersNNS hePRP expectsVBZ toTO discussVB ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Foreign-8, for-7) nmod:for(Secretary-4, Foreign-8) cc(Foreign-8, and-9) compound(Affairs-11, Commonwealth-10) nmod:for(Secretary-4, Affairs-11) conj:and(Foreign-8, Affairs-11) advmod(expects-15, when-12) nsubj(expects-15, he-13) advmod(expects-15, next-14) acl:relcl(Foreign-8, expects-15) mark(meet-17, to-16) xcomp(expects-15, meet-17) det(President-19, the-18) dobj(meet-17, President-19) case(Commission-23, of-20) det(Commission-23, the-21) compound(Commission-23, European-22) nmod:of(President-19, Commission-23) punct(ask-2, ;-24) cc(ask-2, and-25) det(matters-27, what-26) dobj(expects-29, matters-27) nsubj(expects-29, he-28) conj:and(ask-2, expects-29) mark(discuss-31, to-30) xcomp(expects-29, discuss-31) punct(ask-2, .-32)",0,1,1,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Foreign, for) nmod:for(Secretary, Foreign) cc(Foreign, and) compond(Affairs, Commonwealth) nmod:for(Secretary, Affairs) conj:and(Foreign, Affairs) advmod(expects, when) nsbj(expects, he) advmod(expects, next) acl:relcl(Foreign, expects) mark(meet, to) xcomp(expects, meet) det(President, the) dobj(meet, President) case(Commission, of) det(Commission, the) compond(Commission, Eropean) nmod:of(President, Commission) pnct(ask, ;) cc(ask, and) det(matters, what) dobj(expects, matters) nsbj(expects, he) conj:and(ask, expects) mark(discss, to) xcomp(expects, discss) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) compond(NNPS,NNP) nmod:for(NNP,NNPS) conj:and(NNP,NNPS) advmod(VBZ,WRB) nsbj(VBZ,PRP) advmod(VBZ,RB) acl:relcl(NNP,VBZ) mark(VB,TO) xcomp(VBZ,VB) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,JJ) nmod:of(NNP,NNP) pnct(VB,:) cc(VB,CC) det(NNS,WP) dobj(VBZ,NNS) nsbj(VBZ,PRP) conj:and(VB,VBZ) mark(VB,TO) xcomp(VBZ,VB) pnct(VB,VB)","[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]","[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]",1,"[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]","[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]",NNS_matters VB_ask VBZ_expects NNP_State VBP_meet CC_and WRB_when PRP_he PRP_he JJ_next VBZ_expects NNP_Foreign NNP_Secretary VB_discuss CC_and NNP_Affairs ,"[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]","[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]",NNS_matters VB_ask VBZ_expects NNP_State VBP_meet CC_and WRB_when PRP_he PRP_he JJ_next VBZ_expects NNP_Foreign NNP_Secretary VB_discuss CC_and NNP_Affairs ,"[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]",NNS_matters VB_ask VBZ_expects NNP_State VBP_meet CC_and WRB_when PRP_he PRP_he JJ_next VBZ_expects NNP_Foreign NNP_Secretary VB_discuss CC_and NNP_Affairs ,"[matters, ask, expects, State, meet, and, when, he, he, next, expects, Foreign, Secretary, discuss, and, ROOT, Affairs]",NNS_matters VB_ask VBZ_expects NNP_State VBP_meet CC_and WRB_when PRP_he PRP_he JJ_next VBZ_expects NNP_Foreign NNP_Secretary VB_discuss CC_and NNP_Affairs ,-3,0,2,0,0,0,0,0,0,0
I next expect to meet the President of the Commission on 26 and 27 June at the meeting of the European Council when discussion will extend to the entire range of business before the Council.,IPRP nextJJ expectVBP toTO meetVB theDT PresidentNNP ofIN theDT CommissionNNP onIN 26CD andCC 27CD JuneNNP atIN theDT meetingNN ofIN theDT EuropeanNNP CouncilNNP whenWRB discussionNN willMD extendVB toTO theDT entireJJ rangeNN ofIN businessNN beforeIN theDT CouncilNNP ,"root(ROOT-0, expect-3) nsubj(expect-3, I-1) advmod(expect-3, next-2) mark(meet-5, to-4) xcomp(expect-3, meet-5) det(President-7, the-6) dobj(meet-5, President-7) case(Commission-10, of-8) det(Commission-10, the-9) nmod:of(President-7, Commission-10) case(26-12, on-11) nmod:on(meet-5, 26-12) cc(26-12, and-13) nmod:on(meet-5, 27-14) conj:and(26-12, 27-14) dep(26-12, June-15) case(meeting-18, at-16) det(meeting-18, the-17) nmod:at(meet-5, meeting-18) case(Council-22, of-19) det(Council-22, the-20) amod(Council-22, European-21) nmod:of(meeting-18, Council-22) advmod(extend-26, when-23) nsubj(extend-26, discussion-24) aux(extend-26, will-25) advcl(meet-5, extend-26) case(range-30, to-27) det(range-30, the-28) amod(range-30, entire-29) nmod:to(extend-26, range-30) case(business-32, of-31) nmod:of(range-30, business-32) case(Council-35, before-33) det(Council-35, the-34) nmod:before(extend-26, Council-35) punct(expect-3, .-36)",0,1,1,"root(ROOT, expect) nsbj(expect, I) advmod(expect, next) mark(meet, to) xcomp(expect, meet) det(President, the) dobj(meet, President) case(Commission, of) det(Commission, the) nmod:of(President, Commission) case(26, on) nmod:on(meet, 26) cc(26, and) nmod:on(meet, 27) conj:and(26, 27) dep(26, Jne) case(meeting, at) det(meeting, the) nmod:at(meet, meeting) case(Concil, of) det(Concil, the) amod(Concil, Eropean) nmod:of(meeting, Concil) advmod(extend, when) nsbj(extend, discssion) ax(extend, will) advcl(meet, extend) case(range, to) det(range, the) amod(range, entire) nmod:to(extend, range) case(bsiness, of) nmod:of(range, bsiness) case(Concil, before) det(Concil, the) nmod:before(extend, Concil) pnct(expect, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,JJ) mark(VB,TO) xcomp(VBP,VB) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) case(CD,IN) nmod:on(VB,CD) cc(CD,CC) nmod:on(VB,CD) conj:and(CD,CD) dep(CD,NNP) case(NN,IN) det(NN,DT) nmod:at(VB,NN) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:of(NN,NNP) advmod(VB,WRB) nsbj(VB,NN) ax(VB,MD) advcl(VB,VB) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) nmod:before(VB,NNP) pnct(VBP,VBP)",[ ],[ ],1,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
This is one of many issues in which progress can be  should be and has been achieved on the basis of national responsibilities.,HoweNNP ThisDT isVBZ oneCD ofIN manyJJ issuesNNS inIN whichWDT progressNN canMD beVB shouldMD beVB andCC hasVBZ beenVBN achievedVBN onIN theDT basisNN ofIN nationalJJ responsibilitiesNNS ,"root(ROOT-0, one-4) nsubj(one-4, Howe-1) nsubj(one-4, This-2) cop(one-4, is-3) case(issues-7, of-5) amod(issues-7, many-6) nmod:of(one-4, issues-7) case(which-9, in-8) nmod:in(be-12, which-9) nsubj(be-12, progress-10) aux(be-12, can-11) acl:relcl(issues-7, be-12) punct(one-4, ,-13) appos(one-4, should-14) dep(should-14, be-15) cc(be-15, and-16) aux(achieved-19, has-17) auxpass(achieved-19, been-18) dep(should-14, achieved-19) conj:and(be-15, achieved-19) case(basis-22, on-20) det(basis-22, the-21) nmod:on(achieved-19, basis-22) case(responsibilities-25, of-23) amod(responsibilities-25, national-24) nmod:of(basis-22, responsibilities-25) punct(one-4, .-26)",0,0,0,"root(ROOT, one) nsbj(one, Howe) nsbj(one, This) cop(one, is) case(isses, of) amod(isses, many) nmod:of(one, isses) case(which, in) nmod:in(be, which) nsbj(be, progress) ax(be, can) acl:relcl(isses, be) pnct(one, ,) appos(one, shold) dep(shold, be) cc(be, and) ax(achieved, has) axpass(achieved, been) dep(shold, achieved) conj:and(be, achieved) case(basis, on) det(basis, the) nmod:on(achieved, basis) case(responsibilities, of) amod(responsibilities, national) nmod:of(basis, responsibilities) pnct(one, .)","root(,CD) nsbj(CD,NNP) nsbj(CD,DT) cop(CD,VBZ) case(NNS,IN) amod(NNS,JJ) nmod:of(CD,NNS) case(WDT,IN) nmod:in(VB,WDT) nsbj(VB,NN) ax(VB,MD) acl:relcl(NNS,VB) pnct(CD,CD) appos(CD,MD) dep(MD,VB) cc(VB,CC) ax(VBN,VBZ) axpass(VBN,VBN) dep(MD,VBN) conj:and(VB,VBN) case(NN,IN) det(NN,DT) nmod:on(VBN,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) pnct(CD,CD)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We must think carefully before we seek to transfer responsibility to the European Community.,WePRP mustMD thinkVB carefullyRB beforeIN wePRP seekVBP toTO transferVB responsibilityNN toTO theDT EuropeanNNP CommunityNNP ,"root(ROOT-0, think-3) nsubj(think-3, We-1) aux(think-3, must-2) advmod(think-3, carefully-4) mark(seek-7, before-5) nsubj(seek-7, we-6) advcl(think-3, seek-7) mark(transfer-9, to-8) xcomp(seek-7, transfer-9) dobj(transfer-9, responsibility-10) case(Community-14, to-11) det(Community-14, the-12) compound(Community-14, European-13) nmod:to(transfer-9, Community-14) punct(think-3, .-15)",0,0,0,"root(ROOT, think) nsbj(think, We) ax(think, mst) advmod(think, careflly) mark(seek, before) nsbj(seek, we) advcl(think, seek) mark(transfer, to) xcomp(seek, transfer) dobj(transfer, responsibility) case(Commnity, to) det(Commnity, the) compond(Commnity, Eropean) nmod:to(transfer, Commnity) pnct(think, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) mark(VBP,IN) nsbj(VBP,PRP) advcl(VB,VBP) mark(VB,TO) xcomp(VBP,VB) dobj(VB,NN) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VB,NNP) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is the fulfilment of a principle that the President of the European Community will recognise the principle of subsidiarity  which leaves it to the nation states to do those things which are best done by them.,ThatDT isVBZ theDT fulfilmentNN ofIN aDT principleNN thatIN theDT PresidentNNP ofIN theDT EuropeanNNP CommunityNNP willMD recogniseVB theDT principleNN ofIN subsidiarityNN whichWDT leavesVBZ itPRP toTO theDT nationNN statesNNS toTO doVB thoseDT thingsNNS whichWDT areVBP bestRBS doneVBN byIN themPRP ,"root(ROOT-0, fulfilment-4) nsubj(fulfilment-4, That-1) cop(fulfilment-4, is-2) det(fulfilment-4, the-3) case(principle-7, of-5) det(principle-7, a-6) nmod:of(fulfilment-4, principle-7) mark(recognise-16, that-8) det(President-10, the-9) nsubj(recognise-16, President-10) case(Community-14, of-11) det(Community-14, the-12) compound(Community-14, European-13) nmod:of(President-10, Community-14) aux(recognise-16, will-15) ccomp(principle-7, recognise-16) det(principle-18, the-17) dobj(recognise-16, principle-18) case(subsidiarity-20, of-19) nmod:of(principle-18, subsidiarity-20) punct(subsidiarity-20, ,-21) nsubj(leaves-23, which-22) acl:relcl(subsidiarity-20, leaves-23) dobj(leaves-23, it-24) case(nation-27, to-25) det(nation-27, the-26) nmod:to(leaves-23, nation-27) dep(leaves-23, states-28) mark(do-30, to-29) xcomp(states-28, do-30) det(things-32, those-31) dobj(do-30, things-32) nsubjpass(done-36, which-33) auxpass(done-36, are-34) advmod(done-36, best-35) acl:relcl(things-32, done-36) case(them-38, by-37) nmod:agent(done-36, them-38) punct(fulfilment-4, .-39)",0,0,0,"root(ROOT, flfilment) nsbj(flfilment, That) cop(flfilment, is) det(flfilment, the) case(principle, of) det(principle, a) nmod:of(flfilment, principle) mark(recognise, that) det(President, the) nsbj(recognise, President) case(Commnity, of) det(Commnity, the) compond(Commnity, Eropean) nmod:of(President, Commnity) ax(recognise, will) ccomp(principle, recognise) det(principle, the) dobj(recognise, principle) case(sbsidiarity, of) nmod:of(principle, sbsidiarity) pnct(sbsidiarity, ,) nsbj(leaves, which) acl:relcl(sbsidiarity, leaves) dobj(leaves, it) case(nation, to) det(nation, the) nmod:to(leaves, nation) dep(leaves, states) mark(do, to) xcomp(states, do) det(things, those) dobj(do, things) nsbjpass(done, which) axpass(done, are) advmod(done, best) acl:relcl(things, done) case(them, by) nmod:agent(done, them) pnct(flfilment, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) case(NN,IN) det(NN,DT) nmod:of(NN,NN) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NNP,NNP) ax(VB,MD) ccomp(NN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) dobj(VBZ,PRP) case(NN,TO) det(NN,DT) nmod:to(VBZ,NN) dep(VBZ,NNS) mark(VB,TO) xcomp(NNS,VB) det(NNS,DT) VBbj(VB,NNS) nsbjpass(VBN,WDT) axpass(VBN,VBP) advmod(VBN,RBS) acl:relcl(NNS,VBN) case(PRP,IN) nmod:agent(VBN,PRP) pnct(NN,NN)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
When the Foreign Secretary meets his fellow Ministers  will he support the Chancellor's view of our joining the European monetary system or the Prime Minister's view?,WhenWRB theDT ForeignNNP SecretaryNNP meetsVBZ hisPRP$ fellowJJ MinistersNNPS willMD hePRP supportVB theDT ChancellorNNP 'sPOS viewNN ofIN ourPRP$ joiningVBG theDT EuropeanNNP monetaryJJ systemNN orCC theDT PrimeNNP MinisterNNP 'sPOS viewNN ,"root(ROOT-0, support-12) advmod(meets-5, When-1) det(Secretary-4, the-2) compound(Secretary-4, Foreign-3) nsubj(meets-5, Secretary-4) advcl(support-12, meets-5) nmod:poss(Ministers-8, his-6) amod(Ministers-8, fellow-7) dobj(meets-5, Ministers-8) punct(support-12, ,-9) aux(support-12, will-10) nsubj(support-12, he-11) det(Chancellor-14, the-13) nmod:poss(view-16, Chancellor-14) case(Chancellor-14, 's-15) dobj(support-12, view-16) amod(view-16, of-17) dep(of-17, our-18) dep(our-18, joining-19) det(system-23, the-20) amod(system-23, European-21) amod(system-23, monetary-22) dobj(joining-19, system-23) cc(system-23, or-24) det(Minister-27, the-25) compound(Minister-27, Prime-26) nmod:poss(view-29, Minister-27) case(Minister-27, 's-28) dobj(joining-19, view-29) conj:or(system-23, view-29) punct(support-12, ?-30)",0,0,0,"root(ROOT, spport) advmod(meets, When) det(Secretary, the) compond(Secretary, Foreign) nsbj(meets, Secretary) advcl(spport, meets) nmod:poss(Ministers, his) amod(Ministers, fellow) dobj(meets, Ministers) pnct(spport, ,) ax(spport, will) nsbj(spport, he) det(Chancellor, the) nmod:poss(view, Chancellor) ""case(Chancellor, s)"", dobj(spport, view) amod(view, of) dep(of, or) dep(or, joining) det(system, the) amod(system, Eropean) amod(system, monetary) dobj(joining, system) cc(system, or) det(Minister, the) compond(Minister, Prime) nmod:poss(view, Minister) ""case(Minister, s)"", dobj(joining, view) conj:or(system, view) pnct(spport, ?)","root(,VB) advmod(VBZ,WRB) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(VB,VBZ) nmod:poss(NNPS,PRP$) amod(NNPS,JJ) dobj(VBZ,NNPS) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) dobj(VB,NN) amod(NN,IN) dep(IN,PRP$) dep(PRP$,VBG) det(NN,DT) amod(NN,NNP) amod(NN,JJ) dobj(VBG,NN) cc(NN,CC) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) dobj(VBG,NN) conj:or(NN,NN) pnct(VB,VB)","[meets, Minister, he, view, of, Chancellor, Ministers, When, Secretary, support, joining, ROOT, view]","[meets, Minister, he, view, of, Chancellor, Ministers, When, Secretary, his, support, joining, ROOT, fellow, view]",4,"[meets, Minister, joining, view, of, Chancellor, Ministers, When, Secretary, his, support, fellow, view]","[meets, Minister, joining, view, of, Chancellor, Ministers, When, Secretary, his, support, fellow, view]",VBZ_meets NNP_Minister PRP_he NN_view IN_of NNP_Chancellor NNP_Ministers WRB_When NNP_Secretary PRP$_his NN_support VBG_joining JJ_fellow NN_view ,"[meets, Minister, he, view, of, Chancellor, Ministers, When, Secretary, his, support, joining, ROOT, fellow, view]","[meets, Minister, he, view, of, Chancellor, Ministers, When, Secretary, his, support, joining, ROOT, fellow, view]",VBZ_meets NNP_Minister PRP_he NN_view IN_of NNP_Chancellor NNP_Ministers WRB_When NNP_Secretary PRP$_his NN_support VBG_joining JJ_fellow NN_view ,"[meets, Minister, he, view, of, Chancellor, Ministers, When, Secretary, his, support, joining, ROOT, fellow, view]",VBZ_meets NNP_Minister PRP_he NN_view IN_of NNP_Chancellor NNP_Ministers WRB_When NNP_Secretary PRP$_his NN_support VBG_joining JJ_fellow NN_view ,"[meets, Minister, he, view, of, Chancellor, Ministers, When, Secretary, his, support, joining, ROOT, fellow, view]",VBZ_meets NNP_Minister PRP_he NN_view IN_of NNP_Chancellor NNP_Ministers WRB_When NNP_Secretary PRP$_his NN_support VBG_joining JJ_fellow NN_view ,-3,0,2,1,1,1,1,1,1,2
I will support the view expressed by both of them.,HoweNNP IPRP willMD supportVB theDT viewNN expressedVBN byIN bothDT ofIN themPRP ,"root(ROOT-0, support-4) compound(I-2, Howe-1) nsubj(support-4, I-2) aux(support-4, will-3) det(view-6, the-5) dobj(support-4, view-6) acl(view-6, expressed-7) case(both-9, by-8) nmod:by(expressed-7, both-9) case(them-11, of-10) nmod:of(both-9, them-11) punct(support-4, .-12)",0,1,0,"root(ROOT, spport) compond(I, Howe) nsbj(spport, I) ax(spport, will) det(view, the) dobj(spport, view) acl(view, expressed) case(both, by) nmod:by(expressed, both) case(them, of) nmod:of(both, them) pnct(spport, .)","root(,VB) compond(PRP,NNP) nsbj(VB,PRP) ax(VB,MD) det(NN,DT) dobj(VB,NN) acl(NN,VBN) case(DT,IN) nmod:by(VBN,DT) case(PRP,IN) nmod:of(DT,PRP) pnct(VB,VB)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
My right hon. Friend the Chancellor of the Exchequer said at a press conference on Monday: It is not a question of whether we join the exchange rate mechanism of the EMS  it is a question of when.,MyPRP$ rightJJ honNN FriendNNP theDT ChancellorNNP ofIN theDT ExchequerNNP saidVBD atIN aDT pressNN conferenceNN onIN MondayNNP :: ItPRP isVBZ notRB aDT questionNN ofIN whetherIN wePRP joinVBP theDT exchangeNN rateNN mechanismNN ofIN theDT EMSNNP itPRP isVBZ aDT questionNN ofIN whenWRB ,"root(ROOT-0, Friend-4) nmod:poss(Friend-4, My-1) amod(Friend-4, right-2) compound(Friend-4, hon.-3) det(Chancellor-6, the-5) nsubj(said-10, Chancellor-6) case(Exchequer-9, of-7) det(Exchequer-9, the-8) nmod:of(Chancellor-6, Exchequer-9) acl:relcl(Friend-4, said-10) case(conference-14, at-11) det(conference-14, a-12) compound(conference-14, press-13) nmod:at(said-10, conference-14) case(Monday-16, on-15) nmod:on(conference-14, Monday-16) punct(Friend-4, :-17) nsubj(question-22, It-18) cop(question-22, is-19) neg(question-22, not-20) det(question-22, a-21) parataxis(Friend-4, question-22) mark(join-26, of-23) mark(join-26, whether-24) nsubj(join-26, we-25) advcl(question-22, join-26) det(mechanism-30, the-27) compound(mechanism-30, exchange-28) compound(mechanism-30, rate-29) dobj(join-26, mechanism-30) case(EMS-33, of-31) det(EMS-33, the-32) nmod:of(mechanism-30, EMS-33) punct(question-22, ,-34) nsubj(question-38, it-35) cop(question-38, is-36) det(question-38, a-37) parataxis(question-22, question-38) case(when-40, of-39) nmod:of(question-38, when-40) punct(Friend-4, .-41)",0,0,0,"root(ROOT, Friend) nmod:poss(Friend, My) amod(Friend, right) compond(Friend, hon.) det(Chancellor, the) nsbj(said, Chancellor) case(Excheqer, of) det(Excheqer, the) nmod:of(Chancellor, Excheqer) acl:relcl(Friend, said) case(conference, at) det(conference, a) compond(conference, press) nmod:at(said, conference) case(Monday, on) nmod:on(conference, Monday) pnct(Friend, :) nsbj(qestion, It) cop(qestion, is) neg(qestion, not) det(qestion, a) parataxis(Friend, qestion) mark(join, of) mark(join, whether) nsbj(join, we) advcl(qestion, join) det(mechanism, the) compond(mechanism, exchange) compond(mechanism, rate) dobj(join, mechanism) case(EMS, of) det(EMS, the) nmod:of(mechanism, EMS) pnct(qestion, ,) nsbj(qestion, it) cop(qestion, is) det(qestion, a) parataxis(qestion, qestion) case(when, of) nmod:of(qestion, when) pnct(Friend, .)","root(,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) acl:relcl(NNP,VBD) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:at(VBD,NN) case(NNP,IN) nmod:on(NN,NNP) pnct(NNP,:) nsbj(NN,PRP) cop(NN,VBZ) neg(NN,RB) det(NN,DT) parataxis(NNP,NN) mark(VBP,IN) mark(VBP,IN) nsbj(VBP,PRP) advcl(NN,VBP) det(NN,DT) compond(NN,NN) compond(NN,NN) dobj(VBP,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(NN,NN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) parataxis(NN,NN) case(WRB,IN) nmod:of(NN,WRB) pnct(NNP,NNP)","[conference, not, right, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]","[conference, not, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]",6,"[conference, not, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]","[conference, not, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]",NN_conference RB_not NNP_Exchequer NN_question PRP_It PRP$_My NNP_Friend VB_join NNP_Chancellor VBD_said ,"[conference, not, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]","[conference, not, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]",NN_conference RB_not NNP_Exchequer NN_question PRP_It PRP$_My NNP_Friend VB_join NNP_Chancellor VBD_said ,"[conference, not, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]",NN_conference RB_not NNP_Exchequer NN_question PRP_It PRP$_My NNP_Friend VB_join NNP_Chancellor VBD_said ,"[conference, not, Exchequer, question, It, My, Friend, join, Chancellor, ROOT, said]",NN_conference RB_not NNP_Exchequer NN_question PRP_It PRP$_My NNP_Friend VB_join NNP_Chancellor VBD_said ,-3,0,2,2,1,2,0,0,0,2
My right hon. Friend the Prime Minister has said many times I heard her say it at the launching of our manifesto  that: The policy is exactly the same as it was.,MyPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP hasVBZ saidVBD manyJJ timesNNS IPRP heardVBD herPRP sayVB itPRP atIN theDT launchingNN ofIN ourPRP$ manifestoNN thatIN :: TheDT policyNN isVBZ exactlyRB theDT sameJJ asIN itPRP wasVBD ,"root(ROOT-0, said-9) nmod:poss(Friend-4, My-1) amod(Friend-4, right-2) compound(Friend-4, hon.-3) nsubj(said-9, Friend-4) det(Minister-7, the-5) compound(Minister-7, Prime-6) nsubj(said-9, Minister-7) aux(said-9, has-8) amod(times-11, many-10) dobj(said-9, times-11) nsubj(heard-13, I-12) acl:relcl(times-11, heard-13) nsubj(say-15, her-14) ccomp(heard-13, say-15) dobj(say-15, it-16) case(launching-19, at-17) det(launching-19, the-18) nmod:at(it-16, launching-19) case(manifesto-22, of-20) nmod:poss(manifesto-22, our-21) nmod:of(launching-19, manifesto-22) amod(manifesto-22, that-23) punct(same-30, :-24) det(policy-26, The-25) nsubj(same-30, policy-26) cop(same-30, is-27) advmod(same-30, exactly-28) det(same-30, the-29) dep(that-23, same-30) mark(was-33, as-31) nsubj(was-33, it-32) advcl(same-30, was-33) punct(same-30, .-34)",0,0,0,"root(ROOT, said) nmod:poss(Friend, My) amod(Friend, right) compond(Friend, hon.) nsbj(said, Friend) det(Minister, the) compond(Minister, Prime) nsbj(said, Minister) ax(said, has) amod(times, many) dobj(said, times) nsbj(heard, I) acl:relcl(times, heard) nsbj(say, her) ccomp(heard, say) dobj(say, it) case(lanching, at) det(lanching, the) nmod:at(it, lanching) case(manifesto, of) nmod:poss(manifesto, or) nmod:of(lanching, manifesto) amod(manifesto, that) pnct(same, :) det(policy, The) nsbj(same, policy) cop(same, is) advmod(same, exactly) det(same, the) dep(that, same) mark(was, as) nsbj(was, it) advcl(same, was) pnct(same, .)","root(,VBD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) ax(VBD,VBZ) amod(NNS,JJ) dobj(VBD,NNS) nsbj(VBD,PRP) acl:relcl(NNS,VBD) nsbj(VB,PRP) ccomp(VBD,VB) dobj(VB,PRP) case(NN,IN) det(NN,DT) nmod:at(PRP,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) amod(NN,IN) pnct(JJ,:) det(NN,DT) nsbj(JJ,NN) cop(JJ,VBZ) advmod(JJ,RB) det(JJ,DT) dep(IN,JJ) mark(VBD,IN) nsbj(VBD,PRP) advcl(JJ,VBD) pnct(JJ,JJ)","[My, times, Friend, said, right, ROOT, Minister]","[it, times, said, My, say, Friend, Minister, her, ROOT, heard]",6,"[it, say, heard, her]","[it, say, heard, her]",PRP_it NNS_times VBD_said PRP$_My VB_say NNP_Friend NNP_Minister PRP$_her VBD_heard ,"[it, times, said, My, say, Friend, Minister, her, ROOT, heard]","[it, times, said, My, say, Friend, Minister, her, ROOT, heard]",PRP_it NNS_times VBD_said PRP$_My VB_say NNP_Friend NNP_Minister PRP$_her VBD_heard ,"[it, times, said, My, say, Friend, Minister, her, ROOT, heard]",PRP_it NNS_times VBD_said PRP$_My VB_say NNP_Friend NNP_Minister PRP$_her VBD_heard ,"[it, times, said, My, say, Friend, Minister, her, ROOT, heard]",PRP_it NNS_times VBD_said PRP$_My VB_say NNP_Friend NNP_Minister PRP$_her VBD_heard ,-3,0,1,0,0,0,0,0,0,0
We shall join when the time is right.,WePRP shallMD joinVB whenWRB theDT timeNN isVBZ rightJJ ,"root(ROOT-0, join-3) nsubj(join-3, We-1) aux(join-3, shall-2) advmod(right-8, when-4) det(time-6, the-5) nsubj(right-8, time-6) cop(right-8, is-7) advcl(join-3, right-8) punct(join-3, .-9)",0,0,1,"root(ROOT, join) nsbj(join, We) ax(join, shall) advmod(right, when) det(time, the) nsbj(right, time) cop(right, is) advcl(join, right) pnct(join, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) advmod(JJ,WRB) det(NN,DT) nsbj(JJ,NN) cop(JJ,VBZ) advcl(VB,JJ) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
When my right hon. and learned Friend sees the president of the Commission  will he confirm that he disagrees with Dr. Barry Seal's view that Britain should leave the Community?,WhenWRB myPRP$ rightNN honNN andCC learnedVBD FriendNNP seesVBZ theDT presidentNN ofIN theDT CommissionNNP willMD hePRP confirmVB thatIN hePRP disagreesVBZ withIN DrNNP BarryNNP SealNNP 'sPOS viewNN thatIN BritainNNP shouldMD leaveVB theDT CommunityNNP ,"root(ROOT-0, confirm-17) advmod(confirm-17, When-1) nmod:poss(hon.-4, my-2) compound(hon.-4, right-3) nsubj(confirm-17, hon.-4) cc(hon.-4, and-5) dep(sees-8, learned-6) nsubj(sees-8, Friend-7) conj:and(hon.-4, sees-8) nsubj(confirm-17, sees-8) det(president-10, the-9) dobj(sees-8, president-10) case(Commission-13, of-11) det(Commission-13, the-12) nmod:of(president-10, Commission-13) punct(hon.-4, ,-14) aux(confirm-17, will-15) nsubj(confirm-17, he-16) mark(disagrees-20, that-18) nsubj(disagrees-20, he-19) ccomp(confirm-17, disagrees-20) case(view-26, with-21) compound(Seal-24, Dr.-22) compound(Seal-24, Barry-23) nmod:poss(view-26, Seal-24) case(Seal-24, 's-25) nmod:with(disagrees-20, view-26) mark(leave-30, that-27) nsubj(leave-30, Britain-28) aux(leave-30, should-29) ccomp(view-26, leave-30) det(Community-32, the-31) dobj(leave-30, Community-32) punct(confirm-17, ?-33)",0,0,0,"root(ROOT, confirm) advmod(confirm, When) nmod:poss(hon., my) compond(hon., right) nsbj(confirm, hon.) cc(hon., and) dep(sees, learned) nsbj(sees, Friend) conj:and(hon., sees) nsbj(confirm, sees) det(president, the) dobj(sees, president) case(Commission, of) det(Commission, the) nmod:of(president, Commission) pnct(hon., ,) ax(confirm, will) nsbj(confirm, he) mark(disagrees, that) nsbj(disagrees, he) ccomp(confirm, disagrees) case(view, with) compond(Seal, Dr.) compond(Seal, Barry) nmod:poss(view, Seal) ""case(Seal, s)"", nmod:with(disagrees, view) mark(leave, that) nsbj(leave, Britain) ax(leave, shold) ccomp(view, leave) det(Commnity, the) dobj(leave, Commnity) pnct(confirm, ?)","root(,VB) advmod(VB,WRB) nmod:poss(WRB,PRP$) compond(PRP$,NN) nsbj(VB,VB) cc(VB,CC) dep(VBZ,VBD) nsbj(VBZ,NNP) conj:and(NNP,VBZ) nsbj(VB,VBZ) det(NN,DT) dobj(VBZ,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(NNP,NNP) ax(VB,MD) nsbj(VB,PRP) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VB,VBZ) case(NN,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:with(VBZ,NN) mark(VB,IN) nsbj(VB,NNP) ax(VB,MD) ccomp(NN,VB) det(NNP,DT) dobj(VB,NNP) pnct(VB,VB)","[he, view, When, president, Friend, learned, hon., he, ROOT, sees, disagrees, confirm]","[he, view, When, president, Friend, learned, hon., he, ROOT, sees, disagrees, confirm]",6,"[he, view, president, Friend, learned, sees, disagrees, confirm]","[he, view, president, Friend, learned, sees, disagrees, confirm]",PRP_he NN_view WRB_When NN_president NNP_Friend VBD_learned PRP_he VBZ_sees VBZ_disagrees NN_confirm ,"[he, view, When, president, Friend, learned, hon., he, ROOT, sees, disagrees, confirm]","[he, view, When, president, Friend, learned, hon., he, ROOT, sees, disagrees, confirm]",PRP_he NN_view WRB_When NN_president NNP_Friend VBD_learned PRP_he VBZ_sees VBZ_disagrees NN_confirm ,"[he, view, When, president, Friend, learned, hon., he, ROOT, sees, disagrees, confirm]",PRP_he NN_view WRB_When NN_president NNP_Friend VBD_learned PRP_he VBZ_sees VBZ_disagrees NN_confirm ,"[he, view, When, president, Friend, learned, hon., he, ROOT, sees, disagrees, confirm]",PRP_he NN_view WRB_When NN_president NNP_Friend VBD_learned PRP_he VBZ_sees VBZ_disagrees NN_confirm ,-3,0,2,2,1,2,2,2,2,2
Does my right hon. and learned Friend agree that it would be entirely wrong for my right hon. Friend the Prime Minister or for him to discuss the outcome of the Delors report on European monetary union unless a debate had been held in the House before the Prime Minister's attendance at the European Council and her meeting with the Commission?,DoesNNP myPRP$ rightNN honNN andCC learnedVBD FriendNNP agreeVBP thatIN itPRP wouldMD beVB entirelyRB wrongJJ forIN myPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP orCC forIN himPRP toTO discussVB theDT outcomeNN ofIN theDT DelorsNNPS reportNN onIN EuropeanJJ monetaryJJ unionNN unlessIN aDT debateNN hadVBD beenVBN heldVBN inIN theDT HouseNNP beforeIN theDT PrimeNNP MinisterNNP 'sPOS attendanceNN atIN theDT EuropeanNNP CouncilNNP andCC herPRP$ meetingNN withIN theDT CommissionNNP ,"root(ROOT-0, Does-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) dobj(Does-1, hon.-4) cc(Does-1, and-5) dep(agree-8, learned-6) nsubj(agree-8, Friend-7) conj:and(Does-1, agree-8) mark(wrong-14, that-9) nsubj(wrong-14, it-10) aux(wrong-14, would-11) cop(wrong-14, be-12) advmod(wrong-14, entirely-13) ccomp(agree-8, wrong-14) case(Friend-19, for-15) nmod:poss(Friend-19, my-16) amod(Friend-19, right-17) compound(Friend-19, hon.-18) nmod:for(wrong-14, Friend-19) det(Minister-22, the-20) compound(Minister-22, Prime-21) dep(Friend-19, Minister-22) cc(Minister-22, or-23) case(him-25, for-24) dep(Friend-19, him-25) conj:or(Minister-22, him-25) mark(discuss-27, to-26) acl(him-25, discuss-27) det(outcome-29, the-28) dobj(discuss-27, outcome-29) case(report-33, of-30) det(report-33, the-31) compound(report-33, Delors-32) nmod:of(outcome-29, report-33) case(union-37, on-34) amod(union-37, European-35) amod(union-37, monetary-36) nmod:on(report-33, union-37) mark(held-43, unless-38) det(debate-40, a-39) nsubjpass(held-43, debate-40) aux(held-43, had-41) auxpass(held-43, been-42) advcl(discuss-27, held-43) case(House-46, in-44) det(House-46, the-45) nmod:in(held-43, House-46) case(attendance-52, before-47) det(Minister-50, the-48) compound(Minister-50, Prime-49) nmod:poss(attendance-52, Minister-50) case(Minister-50, 's-51) nmod:before(held-43, attendance-52) case(Council-56, at-53) det(Council-56, the-54) amod(Council-56, European-55) nmod:at(attendance-52, Council-56) cc(held-43, and-57) nmod:poss(meeting-59, her-58) advcl(discuss-27, meeting-59) conj:and(held-43, meeting-59) case(Commission-62, with-60) det(Commission-62, the-61) nmod:with(meeting-59, Commission-62) punct(Does-1, ?-63)",0,1,1,"root(ROOT, Does) nmod:poss(hon., my) amod(hon., right) dobj(Does, hon.) cc(Does, and) dep(agree, learned) nsbj(agree, Friend) conj:and(Does, agree) mark(wrong, that) nsbj(wrong, it) ax(wrong, wold) cop(wrong, be) advmod(wrong, entirely) ccomp(agree, wrong) case(Friend, for) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:for(wrong, Friend) det(Minister, the) compond(Minister, Prime) dep(Friend, Minister) cc(Minister, or) case(him, for) dep(Friend, him) conj:or(Minister, him) mark(discss, to) acl(him, discss) det(otcome, the) dobj(discss, otcome) case(report, of) det(report, the) compond(report, Delors) nmod:of(otcome, report) case(nion, on) amod(nion, Eropean) amod(nion, monetary) nmod:on(report, nion) mark(held, nless) det(debate, a) nsbjpass(held, debate) ax(held, had) axpass(held, been) advcl(discss, held) case(Hose, in) det(Hose, the) nmod:in(held, Hose) case(attendance, before) det(Minister, the) compond(Minister, Prime) nmod:poss(attendance, Minister) ""case(Minister, s)"", nmod:before(held, attendance) case(Concil, at) det(Concil, the) amod(Concil, Eropean) nmod:at(attendance, Concil) cc(held, and) nmod:poss(meeting, her) advcl(discss, meeting) conj:and(held, meeting) case(Commission, with) det(Commission, the) nmod:with(meeting, Commission) pnct(Does, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(PRP$,JJ) dobj(NNP,NNP) cc(NNP,CC) dep(VBP,VBD) nsbj(VBP,NNP) conj:and(NNP,VBP) mark(JJ,IN) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) ccomp(VBP,JJ) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:for(JJ,NNP) det(NNP,DT) compond(NNP,NNP) dep(NNP,NNP) cc(NNP,CC) case(PRP,IN) dep(NNP,PRP) conj:or(NNP,PRP) mark(VB,TO) acl(PRP,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NNPS) nmod:of(NN,NN) case(NN,IN) amod(NN,NNP) amod(NN,JJ) nmod:on(NN,NN) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,VBD) axpass(VBN,VBN) advcl(VB,VBN) case(NNP,IN) det(NNP,DT) nmod:in(VBN,NNP) case(NN,IN) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:before(VBN,NN) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:at(NN,NNP) cc(VBN,CC) nmod:poss(NN,PRP$) advcl(VB,NN) conj:and(VBN,NN) case(NNP,IN) det(NNP,DT) nmod:with(NN,NNP) pnct(NNP,NNP)","[Minister, Minister, Friend, Council, attendance, right, or, it, wrong, Friend, discuss, my, agree, learned, held, him, entirely]","[Minister, Minister, Friend, Council, attendance, or, meeting, it, wrong, Friend, her, discuss, my, agree, learned, held, him, entirely, Commission]",7,"[Minister, Minister, Friend, Council, attendance, or, meeting, it, wrong, Friend, her, discuss, my, agree, learned, held, him, entirely, Commission]","[Minister, Minister, Friend, Council, attendance, or, meeting, it, wrong, Friend, her, discuss, my, agree, learned, held, him, entirely, Commission]",NNP_Minister NNP_Minister NNP_Friend NNP_Council NN_attendance CC_or NN_meeting PRP_it JJ_wrong NNP_Friend PRP$_her VB_discuss PRP$_my VB_agree VBD_learned VBN_held PRP_him RB_entirely NNP_Commission ,"[Minister, Minister, Friend, Council, attendance, or, meeting, it, wrong, Friend, her, discuss, my, agree, learned, held, him, entirely, Commission]","[Minister, Minister, Friend, Council, attendance, or, meeting, it, wrong, Friend, her, discuss, my, agree, learned, held, him, entirely, Commission]",NNP_Minister NNP_Minister NNP_Friend NNP_Council NN_attendance CC_or NN_meeting PRP_it JJ_wrong NNP_Friend PRP$_her VB_discuss PRP$_my VB_agree VBD_learned VBN_held PRP_him RB_entirely NNP_Commission ,"[Minister, Minister, Friend, Council, attendance, or, meeting, it, wrong, Friend, her, discuss, my, agree, learned, held, him, entirely, Commission]",NNP_Minister NNP_Minister NNP_Friend NNP_Council NN_attendance CC_or NN_meeting PRP_it JJ_wrong NNP_Friend PRP$_her VB_discuss PRP$_my VB_agree VBD_learned VBN_held PRP_him RB_entirely NNP_Commission ,"[Minister, Minister, Friend, Council, attendance, or, meeting, it, wrong, Friend, her, discuss, my, agree, learned, held, him, entirely, Commission]",NNP_Minister NNP_Minister NNP_Friend NNP_Council NN_attendance CC_or NN_meeting PRP_it JJ_wrong NNP_Friend PRP$_her VB_discuss PRP$_my VB_agree VBD_learned VBN_held PRP_him RB_entirely NNP_Commission ,-3,0,1,2,1,2,2,2,2,1
There will be a number of opportunities for debate on those matters in the House and in the European Council.,HoweNNP ThereEX willMD beVB aDT numberNN ofIN opportunitiesNNS forIN debateNN onIN thoseDT mattersNNS inIN theDT HouseNNP andCC inIN theDT EuropeanNNP CouncilNNP ,"root(ROOT-0, number-6) nsubj(number-6, Howe-1) expl(number-6, There-2) aux(number-6, will-3) cop(number-6, be-4) det(number-6, a-5) case(opportunities-8, of-7) nmod:of(number-6, opportunities-8) nmod:of(number-6, opportunities-8'') conj:and(opportunities-8, opportunities-8'') case(debate-10, for-9) nmod:for(opportunities-8, debate-10) case(matters-13, on-11) det(matters-13, those-12) nmod:on(debate-10, matters-13) case(House-16, in-14) det(House-16, the-15) nmod:in(matters-13, House-16) cc(opportunities-8, and-17) case(Council-21, in-18) det(Council-21, the-19) amod(Council-21, European-20) nmod:in(opportunities-8'', Council-21) punct(number-6, .-22)",0,1,0,"root(ROOT, nmber) nsbj(nmber, Howe) expl(nmber, There) ax(nmber, will) cop(nmber, be) det(nmber, a) case(opportnities, of) nmod:of(nmber, opportnities) nmod:of(nmber, opportnities) conj:and(opportnities, opportnities) case(debate, for) nmod:for(opportnities, debate) case(matters, on) det(matters, those) nmod:on(debate, matters) case(Hose, in) det(Hose, the) nmod:in(matters, Hose) cc(opportnities, and) case(Concil, in) det(Concil, the) amod(Concil, Eropean) nmod:in(opportnities, Concil) pnct(nmber, .)","root(,NN) nsbj(NN,NNP) expl(NN,EX) ax(NN,MD) cop(NN,VB) det(NN,DT) case(NNS,IN) nmod:of(NN,NNS) nmod:of(NN,NNS) conj:and(NNS,NNS) case(NN,IN) nmod:for(NNS,NN) case(NNS,IN) det(NNS,DT) nmod:on(NN,NNS) case(NNP,IN) det(NNP,DT) nmod:in(NNS,NNP) cc(NNS,CC) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:in(NNS,NNP) pnct(NN,NN)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It will be for my right hon. Friend the Leader of the House to work out how they can best be reconciled.,ItPRP willMD beVB forIN myPRP$ rightJJ honNN FriendNNP theDT LeaderNNP ofIN theDT HouseNNP toTO workVB outRP howWRB theyPRP canMD bestVB beVB reconciledVBN ,"root(ROOT-0, Friend-8) nsubj(Friend-8, It-1) aux(Friend-8, will-2) cop(Friend-8, be-3) case(Friend-8, for-4) nmod:poss(Friend-8, my-5) amod(Friend-8, right-6) compound(Friend-8, hon.-7) det(Leader-10, the-9) dobj(Friend-8, Leader-10) case(House-13, of-11) det(House-13, the-12) nmod:of(Leader-10, House-13) mark(work-15, to-14) acl(Leader-10, work-15) compound:prt(work-15, out-16) advmod(reconciled-22, how-17) nsubjpass(reconciled-22, they-18) aux(reconciled-22, can-19) advmod(reconciled-22, best-20) auxpass(reconciled-22, be-21) ccomp(work-15, reconciled-22) punct(Friend-8, .-23)",0,0,1,"root(ROOT, Friend) nsbj(Friend, It) ax(Friend, will) cop(Friend, be) case(Friend, for) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) det(Leader, the) dobj(Friend, Leader) case(Hose, of) det(Hose, the) nmod:of(Leader, Hose) mark(work, to) acl(Leader, work) compond:prt(work, ot) advmod(reconciled, how) nsbjpass(reconciled, they) ax(reconciled, can) advmod(reconciled, best) axpass(reconciled, be) ccomp(work, reconciled) pnct(Friend, .)","root(,NNP) nsbj(NNP,PRP) ax(NNP,MD) cop(NNP,VB) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) det(NNP,DT) dobj(NNP,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) mark(VB,TO) acl(NNP,VB) compond:prt(VB,RP) advmod(VBN,WRB) nsbjpass(VBN,PRP) ax(VBN,MD) advmod(VBN,VB) axpass(VBN,VB) ccomp(VB,VBN) pnct(NNP,NNP)","[work, House, right, my, It, Leader, ROOT, Friend]","[work, my, House, Leader, ROOT, Friend, It]",10,"[work, my, House, Leader, ROOT, Friend, It]","[work, my, House, Leader, ROOT, Friend, It]",VB_work PRP$_my NNP_House NNP_Leader NNP_Friend PRP_It ,"[work, my, House, Leader, ROOT, Friend, It]","[work, my, House, Leader, ROOT, Friend, It]",VB_work PRP$_my NNP_House NNP_Leader NNP_Friend PRP_It ,"[work, my, House, Leader, ROOT, Friend, It]",VB_work PRP$_my NNP_House NNP_Leader NNP_Friend PRP_It ,"[work, my, House, Leader, ROOT, Friend, It]",VB_work PRP$_my NNP_House NNP_Leader NNP_Friend PRP_It ,-3,0,1,1,1,1,1,1,1,1
Would the Foreign Secretary support a move towards greater uniformity in voting practices in Europe?,WouldMD theDT ForeignNNP SecretaryNNP supportNN aDT moveNN towardsRB greaterJJR uniformityNN inIN votingVBG practicesNNS inIN EuropeNNP ,"root(ROOT-0, support-5) aux(support-5, Would-1) det(Secretary-4, the-2) compound(Secretary-4, Foreign-3) nsubj(support-5, Secretary-4) det(move-7, a-6) dobj(support-5, move-7) case(uniformity-10, towards-8) amod(uniformity-10, greater-9) nmod:towards(move-7, uniformity-10) mark(voting-12, in-11) acl(move-7, voting-12) dobj(voting-12, practices-13) case(Europe-15, in-14) nmod:in(voting-12, Europe-15) punct(support-5, ?-16)",0,1,0,"root(ROOT, spport) ax(spport, Wold) det(Secretary, the) compond(Secretary, Foreign) nsbj(spport, Secretary) det(move, a) dobj(spport, move) case(niformity, towards) amod(niformity, greater) nmod:towards(move, niformity) mark(voting, in) acl(move, voting) dobj(voting, practices) case(Erope, in) nmod:in(voting, Erope) pnct(spport, ?)","root(,NN) ax(NN,MD) det(NNP,DT) compond(NNP,NNP) nsbj(NN,NNP) det(NN,DT) dobj(NN,NN) case(NN,RB) amod(NN,JJR) nmod:towards(NN,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,NNS) case(NNP,IN) nmod:in(VBG,NNP) pnct(NN,NN)","[ROOT, support, Secretary, move]","[ROOT, support, Secretary, move]",10,[ ],[ ],NN_support NNP_Secretary VB_move ,"[ROOT, support, Secretary, move]","[ROOT, support, Secretary, move]",NN_support NNP_Secretary VB_move ,[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Would it not now be appropriate for him to talk to the Prime Minister and for the Prime Minister to talk to the Leader of the Opposition with a view  for example  to convening a Speakers' Conference to consider proportional representation and fixed term Parliaments?,WouldMD itPRP notRB nowRB beVB appropriateJJ forIN himPRP toTO talkVB toTO theDT PrimeNNP MinisterNNP andCC forIN theDT PrimeNNP MinisterNNP toTO talkVB toTO theDT LeaderNNP ofIN theDT OppositionNNP withIN aDT viewNN forIN exampleNN toTO conveningVBG aDT SpeakersNNP 'POS ConferenceNN toTO considerVB proportionalJJ representationNN andCC fixedJJ termNN ParliamentsNNS ,"root(ROOT-0, Would-1) nsubj(appropriate-6, it-2) neg(appropriate-6, not-3) advmod(appropriate-6, now-4) cop(appropriate-6, be-5) ccomp(Would-1, appropriate-6) mark(talk-10, for-7) nsubj(talk-10, him-8) mark(talk-10, to-9) advcl(appropriate-6, talk-10) case(Minister-14, to-11) det(Minister-14, the-12) compound(Minister-14, Prime-13) nmod:to(talk-10, Minister-14) cc(talk-10, and-15) case(Minister-19, for-16) det(Minister-19, the-17) compound(Minister-19, Prime-18) advcl(appropriate-6, Minister-19) conj:and(talk-10, Minister-19) mark(talk-21, to-20) acl(Minister-19, talk-21) case(Leader-24, to-22) det(Leader-24, the-23) nmod:to(talk-21, Leader-24) case(Opposition-27, of-25) det(Opposition-27, the-26) nmod:of(Leader-24, Opposition-27) case(view-30, with-28) det(view-30, a-29) nmod:with(talk-21, view-30) punct(Minister-19, ,-31) case(example-33, for-32) nmod:for(Minister-19, example-33) punct(Minister-19, ,-34) mark(convening-36, to-35) advcl(Minister-19, convening-36) det(Speakers-38, a-37) nmod:poss(Conference-40, Speakers-38) case(Speakers-38, '-39) dobj(convening-36, Conference-40) mark(consider-42, to-41) acl(Conference-40, consider-42) amod(representation-44, proportional-43) dobj(consider-42, representation-44) cc(representation-44, and-45) amod(Parliaments-48, fixed-46) compound(Parliaments-48, term-47) dobj(consider-42, Parliaments-48) conj:and(representation-44, Parliaments-48) punct(Would-1, ?-49)",0,0,0,"root(ROOT, Wold) nsbj(appropriate, it) neg(appropriate, not) advmod(appropriate, now) cop(appropriate, be) ccomp(Wold, appropriate) mark(talk, for) nsbj(talk, him) mark(talk, to) advcl(appropriate, talk) case(Minister, to) det(Minister, the) compond(Minister, Prime) nmod:to(talk, Minister) cc(talk, and) case(Minister, for) det(Minister, the) compond(Minister, Prime) advcl(appropriate, Minister) conj:and(talk, Minister) mark(talk, to) acl(Minister, talk) case(Leader, to) det(Leader, the) nmod:to(talk, Leader) case(Opposition, of) det(Opposition, the) nmod:of(Leader, Opposition) case(view, with) det(view, a) nmod:with(talk, view) pnct(Minister, ,) case(example, for) nmod:for(Minister, example) pnct(Minister, ,) mark(convening, to) advcl(Minister, convening) det(Speakers, a) nmod:poss(Conference, Speakers) ""case(Speakers, )"", dobj(convening, Conference) mark(consider, to) acl(Conference, consider) amod(representation, proportional) dobj(consider, representation) cc(representation, and) amod(Parliaments, fixed) compond(Parliaments, term) dobj(consider, Parliaments) conj:and(representation, Parliaments) pnct(Wold, ?)","root(,MD) nsbj(JJ,PRP) neg(JJ,RB) advmod(JJ,RB) cop(JJ,VB) ccomp(MD,JJ) mark(VB,IN) nsbj(VB,PRP) mark(VB,TO) advcl(JJ,VB) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VB,NNP) cc(VB,CC) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) advcl(JJ,NNP) conj:and(VB,NNP) mark(VB,TO) acl(NNP,VB) case(NNP,TO) det(NNP,DT) nmod:to(VB,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) case(NN,IN) det(NN,DT) nmod:with(VB,NN) pnct(NNP,NNP) case(NN,IN) nmod:for(NNP,NN) pnct(NNP,NNP) mark(VBG,TO) advcl(NNP,VBG) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) dobj(VBG,NN) mark(VB,TO) acl(NN,VB) amod(NN,JJ) dobj(VB,NN) cc(NN,CC) amod(NNS,JJ) compond(NNS,NN) dobj(VB,NNS) conj:and(NN,NNS) pnct(MD,MD)","[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]","[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]",11,"[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]","[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]",NN_view PRP_him VB_talk JJ_appropriate NNP_Minister NNP_Minister NNP_Opposition NN_example RB_not MD_Would RB_now VB_talk NN_representation CC_and VBG_convening VBP_consider NNP_Leader PRP_it NN_Conference ,"[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]","[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]",NN_view PRP_him VB_talk JJ_appropriate NNP_Minister NNP_Minister NNP_Opposition NN_example RB_not MD_Would RB_now VB_talk NN_representation CC_and VBG_convening VBP_consider NNP_Leader PRP_it NN_Conference ,"[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]",NN_view PRP_him VB_talk JJ_appropriate NNP_Minister NNP_Minister NNP_Opposition NN_example RB_not MD_Would RB_now VB_talk NN_representation CC_and VBG_convening VBP_consider NNP_Leader PRP_it NN_Conference ,"[ , view, him, talk, appropriate, Minister, Minister, Opposition, example, not, Would, now, talk, representation, and, convening, consider, Leader, it, ROOT, Conference]",NN_view PRP_him VB_talk JJ_appropriate NNP_Minister NNP_Minister NNP_Opposition NN_example RB_not MD_Would RB_now VB_talk NN_representation CC_and VBG_convening VBP_consider NNP_Leader PRP_it NN_Conference ,-3,0,2,2,1,2,2,0,1,2
I think that it is time that we thought about that.,IPRP thinkVBP thatIN itPRP isVBZ timeNN thatIN wePRP thoughtVBD aboutIN thatDT ,"root(ROOT-0, think-2) nsubj(think-2, I-1) mark(time-6, that-3) nsubj(time-6, it-4) cop(time-6, is-5) ccomp(think-2, time-6) dobj(thought-9, that-7) nsubj(thought-9, we-8) ccomp(time-6, thought-9) case(that-11, about-10) nmod:about(thought-9, that-11) punct(think-2, .-12)",0,0,1,"root(ROOT, think) nsbj(think, I) mark(time, that) nsbj(time, it) cop(time, is) ccomp(think, time) dobj(thoght, that) nsbj(thoght, we) ccomp(time, thoght) case(that, abot) nmod:abot(thoght, that) pnct(think, .)","root(,VBP) nsbj(VBP,PRP) mark(NN,DT) nsbj(NN,PRP) cop(NN,VBZ) ccomp(VBP,NN) dobj(VBD,DT) nsbj(VBD,PRP) ccomp(NN,VBD) case(DT,IN) nmod:abot(VBD,DT) pnct(VBP,VBP)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is not a matter for a multinational Speakers' Conference.,ThatDT isVBZ notRB aDT matterNN forIN aDT multinationalJJ SpeakersNNP 'POS ConferenceNN ,"root(ROOT-0, matter-5) nsubj(matter-5, That-1) cop(matter-5, is-2) neg(matter-5, not-3) det(matter-5, a-4) case(Conference-11, for-6) det(Speakers-9, a-7) amod(Speakers-9, multinational-8) nmod:poss(Conference-11, Speakers-9) case(Speakers-9, '-10) nmod:for(matter-5, Conference-11) punct(matter-5, .-12)",0,1,0,"root(ROOT, matter) nsbj(matter, That) cop(matter, is) neg(matter, not) det(matter, a) case(Conference, for) det(Speakers, a) amod(Speakers, mltinational) nmod:poss(Conference, Speakers) ""case(Speakers, )"", nmod:for(matter, Conference) pnct(matter, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) neg(NN,RB) det(NN,DT) case(NN,IN) det(NNP,DT) amod(NNP,JJ) nmod:poss(NN,NNP) case(NNP,POS) nmod:for(NN,NN) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It has been considered by the European Parliament  and its report has been rejected; that is where the matter now rests.,ItPRP hasVBZ beenVBN consideredVBN byIN theDT EuropeanNNP ParliamentNNP andCC itsPRP$ reportNN hasVBZ beenVBN rejectedVBN ;: thatDT isVBZ whereWRB theDT matterNN nowRB restsVBZ ,"root(ROOT-0, considered-4) nsubjpass(considered-4, It-1) aux(considered-4, has-2) auxpass(considered-4, been-3) case(Parliament-8, by-5) det(Parliament-8, the-6) compound(Parliament-8, European-7) nmod:agent(considered-4, Parliament-8) punct(considered-4, ,-9) cc(considered-4, and-10) nmod:poss(report-12, its-11) nsubjpass(rejected-15, report-12) aux(rejected-15, has-13) auxpass(rejected-15, been-14) conj:and(considered-4, rejected-15) punct(considered-4, ;-16) nsubj(is-18, that-17) parataxis(considered-4, is-18) advmod(rests-23, where-19) det(matter-21, the-20) nsubj(rests-23, matter-21) advmod(rests-23, now-22) advcl(is-18, rests-23) punct(considered-4, .-24)",0,0,0,"root(ROOT, considered) nsbjpass(considered, It) ax(considered, has) axpass(considered, been) case(Parliament, by) det(Parliament, the) compond(Parliament, Eropean) nmod:agent(considered, Parliament) pnct(considered, ,) cc(considered, and) nmod:poss(report, its) nsbjpass(rejected, report) ax(rejected, has) axpass(rejected, been) conj:and(considered, rejected) pnct(considered, ;) nsbj(is, that) parataxis(considered, is) advmod(rests, where) det(matter, the) nsbj(rests, matter) advmod(rests, now) advcl(is, rests) pnct(considered, .)","root(,VBN) nsbjpass(VBN,PRP) ax(VBN,VBZ) axpass(VBN,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:agent(VBN,NNP) pnct(VBN,VBN) cc(VBN,CC) nmod:poss(NN,PRP$) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) conj:and(VBN,VBN) pnct(VBN,:) nsbj(VBZ,DT) parataxis(VBN,VBZ) advmod(VBZ,WRB) det(NN,DT) nsbj(VBZ,NN) advmod(VBZ,RB) advcl(VBZ,VBZ) pnct(VBN,VBN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will my right hon. and learned Friend point out to the President of the European Commission that Britain is already showing the way to a real social dimension by generating jobs in their hundreds of thousands through policies of enterprise and growth?,WillMD myPRP$ rightJJ honNN andCC learnedVBD FriendNNP pointNN outRP toTO theDT PresidentNNP ofIN theDT EuropeanJJ CommissionNNP thatIN BritainNNP isVBZ alreadyRB showingVBG theDT wayNN toTO aDT realJJ socialJJ dimensionNN byIN generatingVBG jobsNNS inIN theirPRP$ hundredsNNS ofIN thousandsNNS throughIN policiesNNS ofIN enterpriseNN andCC growthNN ,"root(ROOT-0, Will-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) dobj(Will-1, hon.-4) cc(Will-1, and-5) amod(point-8, learned-6) compound(point-8, Friend-7) conj:and(Will-1, point-8) case(President-12, out-9) case(President-12, to-10) det(President-12, the-11) nmod:to(point-8, President-12) case(Commission-16, of-13) det(Commission-16, the-14) compound(Commission-16, European-15) nmod:of(President-12, Commission-16) mark(showing-21, that-17) nsubj(showing-21, Britain-18) aux(showing-21, is-19) advmod(showing-21, already-20) ccomp(Will-1, showing-21) det(way-23, the-22) dobj(showing-21, way-23) case(dimension-28, to-24) det(dimension-28, a-25) amod(dimension-28, real-26) amod(dimension-28, social-27) nmod:to(showing-21, dimension-28) mark(generating-30, by-29) advcl(showing-21, generating-30) dobj(generating-30, jobs-31) case(hundreds-34, in-32) nmod:poss(hundreds-34, their-33) nmod:in(jobs-31, hundreds-34) case(thousands-36, of-35) nmod:of(hundreds-34, thousands-36) case(policies-38, through-37) nmod:through(generating-30, policies-38) case(enterprise-40, of-39) nmod:of(policies-38, enterprise-40) cc(enterprise-40, and-41) nmod:of(policies-38, growth-42) conj:and(enterprise-40, growth-42) punct(Will-1, ?-43)",0,1,1,"root(ROOT, Will) nmod:poss(hon., my) amod(hon., right) dobj(Will, hon.) cc(Will, and) amod(point, learned) compond(point, Friend) conj:and(Will, point) case(President, ot) case(President, to) det(President, the) nmod:to(point, President) case(Commission, of) det(Commission, the) compond(Commission, Eropean) nmod:of(President, Commission) mark(showing, that) nsbj(showing, Britain) ax(showing, is) advmod(showing, already) ccomp(Will, showing) det(way, the) dobj(showing, way) case(dimension, to) det(dimension, a) amod(dimension, real) amod(dimension, social) nmod:to(showing, dimension) mark(generating, by) advcl(showing, generating) dobj(generating, jobs) case(hndreds, in) nmod:poss(hndreds, their) nmod:in(jobs, hndreds) case(thosands, of) nmod:of(hndreds, thosands) case(policies, throgh) nmod:throgh(generating, policies) case(enterprise, of) nmod:of(policies, enterprise) cc(enterprise, and) nmod:of(policies, growth) conj:and(enterprise, growth) pnct(Will, ?)","root(,MD) nmod:poss(MD,PRP$) amod(PRP$,JJ) dobj(MD,MD) cc(MD,CC) amod(NN,VBD) compond(NN,NNP) conj:and(MD,NN) case(NNP,RP) case(NNP,TO) det(NNP,DT) nmod:to(NN,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,JJ) nmod:of(NNP,NNP) mark(VBG,IN) nsbj(VBG,NNP) ax(VBG,VBZ) advmod(VBG,RB) ccomp(MD,VBG) det(NN,DT) dobj(VBG,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:to(VBG,NN) mark(VBG,IN) advcl(VBG,VBG) dobj(VBG,NNS) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:in(NNS,NNS) case(NNS,IN) nmod:of(NNS,NNS) case(NNS,IN) nmod:throgh(VBG,NNS) case(NN,IN) nmod:of(NNS,NN) cc(NN,CC) nmod:of(NNS,NN) conj:and(NN,NN) pnct(MD,MD)","[learned, President, point]","[learned, President, point]",12,"[learned, President, point]","[learned, President, point]",VBD_learned NNP_President VB_point ,"[learned, President, point]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I have pointed that out to the President and  with my hon. Friends  will continue to do so on every possible occasion.,IPRP haveVBP pointedVBN thatIN outIN toTO theDT PresidentNNP andCC withIN myPRP$ honNN FriendsNNPS willMD continueVB toTO doVB soRB onIN everyDT possibleJJ occasionNN ,"root(ROOT-0, pointed-3) nsubj(pointed-3, I-1) aux(pointed-3, have-2) mark(continue-17, that-4) case(President-8, out-5) case(President-8, to-6) det(President-8, the-7) nmod:to(continue-17, President-8) cc(President-8, and-9) punct(continue-17, ,-10) case(Friends-14, with-11) nmod:poss(Friends-14, my-12) compound(Friends-14, hon.-13) nmod:with(continue-17, Friends-14) punct(continue-17, ,-15) aux(continue-17, will-16) ccomp(pointed-3, continue-17) mark(do-19, to-18) xcomp(continue-17, do-19) advmod(occasion-24, so-20) case(occasion-24, on-21) det(occasion-24, every-22) amod(occasion-24, possible-23) nmod:on(do-19, occasion-24) punct(pointed-3, .-25)",0,0,0,"root(ROOT, pointed) nsbj(pointed, I) ax(pointed, have) mark(contine, that) case(President, ot) case(President, to) det(President, the) nmod:to(contine, President) cc(President, and) pnct(contine, ,) case(Friends, with) nmod:poss(Friends, my) compond(Friends, hon.) nmod:with(contine, Friends) pnct(contine, ,) ax(contine, will) ccomp(pointed, contine) mark(do, to) xcomp(contine, do) advmod(occasion, so) case(occasion, on) det(occasion, every) amod(occasion, possible) nmod:on(do, occasion) pnct(pointed, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) mark(VB,IN) case(NNP,IN) case(NNP,TO) det(NNP,DT) nmod:to(VB,NNP) cc(NNP,CC) pnct(VB,VB) case(NNPS,IN) nmod:poss(NNPS,PRP$) compond(NNPS,NNPS) nmod:with(VB,NNPS) pnct(VB,VB) ax(VB,MD) ccomp(VBN,VB) mark(VB,TO) xcomp(VB,VB) advmod(NN,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VB,NN) pnct(VBN,VBN)",[ ],[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
"When the Foreign Secretary meets the President of the Commission  will he specify the items in the proposed social charter that have led the Prime Minister to describe it as ""Marxist""?",WhenWRB theDT ForeignNNP SecretaryNNP meetsVBZ theDT PresidentNNP ofIN theDT CommissionNNP willMD hePRP specifyVB theDT itemsNNS inIN theDT proposedVBN socialJJ charterNN thatWDT haveVBP ledVBN theDT PrimeNNP MinisterNNP toTO describeVB itPRP asIN ```` MarxistNN '''' ,"root(ROOT-0, specify-14) advmod(meets-5, When-1) det(Secretary-4, the-2) compound(Secretary-4, Foreign-3) nsubj(meets-5, Secretary-4) advcl(specify-14, meets-5) det(President-7, the-6) dobj(meets-5, President-7) case(Commission-10, of-8) det(Commission-10, the-9) nmod:of(President-7, Commission-10) punct(specify-14, ,-11) aux(specify-14, will-12) nsubj(specify-14, he-13) det(items-16, the-15) dobj(specify-14, items-16) case(charter-21, in-17) det(charter-21, the-18) amod(charter-21, proposed-19) amod(charter-21, social-20) nmod:in(items-16, charter-21) nsubj(led-24, that-22) aux(led-24, have-23) acl:relcl(charter-21, led-24) det(Minister-27, the-25) compound(Minister-27, Prime-26) dobj(led-24, Minister-27) mark(describe-29, to-28) xcomp(led-24, describe-29) dobj(describe-29, it-30) case(Marxist-33, as-31) punct(Marxist-33, ``-32) nmod:as(describe-29, Marxist-33) punct(Marxist-33, ''-34) punct(specify-14, ?-35)",0,0,0,"root(ROOT, specify) advmod(meets, When) det(Secretary, the) compond(Secretary, Foreign) nsbj(meets, Secretary) advcl(specify, meets) det(President, the) dobj(meets, President) case(Commission, of) det(Commission, the) nmod:of(President, Commission) pnct(specify, ,) ax(specify, will) nsbj(specify, he) det(items, the) dobj(specify, items) case(charter, in) det(charter, the) amod(charter, proposed) amod(charter, social) nmod:in(items, charter) nsbj(led, that) ax(led, have) acl:relcl(charter, led) det(Minister, the) compond(Minister, Prime) dobj(led, Minister) mark(describe, to) xcomp(led, describe) dobj(describe, it) case(Marxist, as) pnct(Marxist, ``) nmod:as(describe, Marxist) ""pnct(Marxist, )"", pnct(specify, ?)","root(,VB) advmod(VBZ,WRB) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(VB,VBZ) det(NNP,DT) dobj(VBZ,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) det(NNS,DT) dobj(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,VBN) amod(NN,JJ) nmod:in(NNS,NN) nsbj(VBN,WDT) ax(VBN,VBP) acl:relcl(NN,VBN) det(NNP,DT) compond(NNP,NNP) dobj(VBN,NNP) mark(VB,TO) xcomp(VBN,VB) dobj(VB,PRP) case(NN,IN) pnct(NN,``) nmod:as(VB,NN) ""pnct(NN,)"", pnct(VB,VB)","[items, President, charter, Minister, he, describe, meets, that, When, Secretary, specify, ROOT, led]","[items, President, charter, Minister, he, describe, meets, that, When, Secretary, specify, ROOT, led]",14,"[charter, Minister, President, describe, meets, that, When, Secretary, specify, led]","[charter, Minister, President, describe, meets, that, When, Secretary, specify, led]",NNS_items NNP_President NN_charter NNP_Minister PRP_he VB_describe VBZ_meets IN_that WRB_When NNP_Secretary VB_specify VBN_led ,"[items, President, charter, Minister, he, describe, meets, that, When, Secretary, specify, ROOT, led]","[items, President, charter, Minister, he, describe, meets, that, When, Secretary, specify, ROOT, led]",NNS_items NNP_President NN_charter NNP_Minister PRP_he VB_describe VBZ_meets IN_that WRB_When NNP_Secretary VB_specify VBN_led ,"[items, President, charter, Minister, he, describe, meets, that, When, Secretary, specify, ROOT, led]",NNS_items NNP_President NN_charter NNP_Minister PRP_he VB_describe VBZ_meets IN_that WRB_When NNP_Secretary VB_specify VBN_led ,"[items, President, charter, Minister, he, describe, meets, that, When, Secretary, specify, ROOT, led]",NNS_items NNP_President NN_charter NNP_Minister PRP_he VB_describe VBZ_meets IN_that WRB_When NNP_Secretary VB_specify VBN_led ,-3,0,2,1,1,1,1,1,1,2
In the past 20 years we have managed to shuffle off many problems and thus enhance the success of our economy.,InIN theDT pastJJ 20CD yearsNNS wePRP haveVBP managedVBN toTO shuffleVB offRP manyJJ problemsNNS andCC thusRB enhanceVB theDT successNN ofIN ourPRP$ economyNN ,"root(ROOT-0, managed-8) case(years-5, In-1) det(years-5, the-2) amod(years-5, past-3) nummod(years-5, 20-4) nmod:in(managed-8, years-5) nsubj(managed-8, we-6) aux(managed-8, have-7) mark(shuffle-10, to-9) xcomp(managed-8, shuffle-10) compound:prt(shuffle-10, off-11) amod(problems-13, many-12) dobj(shuffle-10, problems-13) cc(shuffle-10, and-14) advmod(enhance-16, thus-15) xcomp(managed-8, enhance-16) conj:and(shuffle-10, enhance-16) det(success-18, the-17) dobj(enhance-16, success-18) case(economy-21, of-19) nmod:poss(economy-21, our-20) nmod:of(success-18, economy-21) punct(managed-8, .-22)",0,0,0,"root(ROOT, managed) case(years, In) det(years, the) amod(years, past) nmmod(years, 20) nmod:in(managed, years) nsbj(managed, we) ax(managed, have) mark(shffle, to) xcomp(managed, shffle) compond:prt(shffle, off) amod(problems, many) dobj(shffle, problems) cc(shffle, and) advmod(enhance, ths) xcomp(managed, enhance) conj:and(shffle, enhance) det(sccess, the) dobj(enhance, sccess) case(economy, of) nmod:poss(economy, or) nmod:of(sccess, economy) pnct(managed, .)","root(,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:in(VBN,NNS) nsbj(VBN,PRP) ax(VBN,VBP) mark(VB,TO) xcomp(VBN,VB) compond:prt(VB,RP) amod(NNS,JJ) dobj(VB,NNS) cc(VB,CC) advmod(VB,RB) xcomp(VBN,VB) conj:and(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(VBN,VBN)",[ ],[ ],15,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
To ask the Secretary of State for Foreign and Commonwealth Affairs when he last attended the European Council of Ministers; and what subjects were discussed.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN ForeignNNP andCC CommonwealthNNP AffairsNNPS whenWRB hePRP lastJJ attendedVBD theDT EuropeanJJ CouncilNNP ofIN MinistersNNP ;: andCC whatWP subjectsNNS wereVBD discussedVBN ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Foreign-8, for-7) nmod:for(Secretary-4, Foreign-8) cc(Foreign-8, and-9) compound(Affairs-11, Commonwealth-10) nmod:for(Secretary-4, Affairs-11) conj:and(Foreign-8, Affairs-11) advmod(attended-15, when-12) nsubj(attended-15, he-13) advmod(attended-15, last-14) acl:relcl(Foreign-8, attended-15) det(Council-18, the-16) amod(Council-18, European-17) dobj(attended-15, Council-18) case(Ministers-20, of-19) nmod:of(Council-18, Ministers-20) punct(ask-2, ;-21) cc(ask-2, and-22) det(subjects-24, what-23) nsubjpass(discussed-26, subjects-24) auxpass(discussed-26, were-25) conj:and(ask-2, discussed-26) punct(ask-2, .-27)",0,1,1,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Foreign, for) nmod:for(Secretary, Foreign) cc(Foreign, and) compond(Affairs, Commonwealth) nmod:for(Secretary, Affairs) conj:and(Foreign, Affairs) advmod(attended, when) nsbj(attended, he) advmod(attended, last) acl:relcl(Foreign, attended) det(Concil, the) amod(Concil, Eropean) dobj(attended, Concil) case(Ministers, of) nmod:of(Concil, Ministers) pnct(ask, ;) cc(ask, and) det(sbjects, what) nsbjpass(discssed, sbjects) axpass(discssed, were) conj:and(ask, discssed) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) compond(NNPS,NNP) nmod:for(NNP,NNPS) conj:and(NNP,NNPS) advmod(VBD,WRB) nsbj(VBD,PRP) advmod(VBD,JJ) acl:relcl(NNP,VBD) det(NNP,DT) amod(NNP,JJ) dobj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VB,:) cc(VB,CC) det(NNS,WP) nsbjpass(VBN,NNS) axpass(VBN,VBD) conj:and(VB,VBN) pnct(VB,VB)","[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]","[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]",1,"[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]","[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]",VBD_attended VB_ask NNP_State PRP_he NNP_Foreign CC_and JJ_last NNP_Secretary NNP_Council CC_and NNP_Affairs WRB_when ,"[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]","[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]",VBD_attended VB_ask NNP_State PRP_he NNP_Foreign CC_and JJ_last NNP_Secretary NNP_Council CC_and NNP_Affairs WRB_when ,"[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]",VBD_attended VB_ask NNP_State PRP_he NNP_Foreign CC_and JJ_last NNP_Secretary NNP_Council CC_and NNP_Affairs WRB_when ,"[attended, ask, State, he, Foreign, and, last, Secretary, Council, and, ROOT, Affairs, when]",VBD_attended VB_ask NNP_State PRP_he NNP_Foreign CC_and JJ_last NNP_Secretary NNP_Council CC_and NNP_Affairs WRB_when ,-3,0,2,0,0,0,0,0,0,0
My right hon. Friend the Secretary of State for Foreign and Commonwealth Affairs attended the meeting of the Foreign Affairs Council on 3 October.,MyPRP$ rightJJ honNN FriendNNP theDT SecretaryNNP ofIN StateNNP forIN ForeignNNP andCC CommonwealthNNP AffairsNNP attendedVBD theDT meetingNN ofIN theDT ForeignNNP AffairsNNPS CouncilNNP onIN 3CD OctoberNNP ,"root(ROOT-0, Friend-4) nmod:poss(Friend-4, My-1) amod(Friend-4, right-2) compound(Friend-4, hon.-3) det(Secretary-6, the-5) nsubj(attended-14, Secretary-6) case(State-8, of-7) nmod:of(Secretary-6, State-8) case(Affairs-13, for-9) compound(Affairs-13, Foreign-10) cc(Foreign-10, and-11) conj:and(Foreign-10, Commonwealth-12) compound(Affairs-13, Commonwealth-12) nmod:for(Secretary-6, Affairs-13) acl:relcl(Friend-4, attended-14) det(meeting-16, the-15) dobj(attended-14, meeting-16) case(Council-21, of-17) det(Council-21, the-18) compound(Council-21, Foreign-19) compound(Council-21, Affairs-20) nmod:of(meeting-16, Council-21) case(October-24, on-22) nummod(October-24, 3-23) nmod:on(attended-14, October-24) punct(Friend-4, .-25)",0,1,0,"root(ROOT, Friend) nmod:poss(Friend, My) amod(Friend, right) compond(Friend, hon.) det(Secretary, the) nsbj(attended, Secretary) case(State, of) nmod:of(Secretary, State) case(Affairs, for) compond(Affairs, Foreign) cc(Foreign, and) conj:and(Foreign, Commonwealth) compond(Affairs, Commonwealth) nmod:for(Secretary, Affairs) acl:relcl(Friend, attended) det(meeting, the) dobj(attended, meeting) case(Concil, of) det(Concil, the) compond(Concil, Foreign) compond(Concil, Affairs) nmod:of(meeting, Concil) case(October, on) nmmod(October, 3) nmod:on(attended, October) pnct(Friend, .)","root(,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNPS,IN) compond(NNPS,NNP) cc(NNP,CC) conj:and(NNP,NNP) compond(NNPS,NNP) nmod:for(NNP,NNPS) acl:relcl(NNP,VBD) det(NN,DT) dobj(VBD,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNPS) nmod:of(NN,NNP) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) pnct(NNP,NNP)","[attended, My, State, right, October, Secretary, Friend, ROOT, meeting, Affairs]","[attended, My, State, October, Secretary, Friend, ROOT, meeting, Affairs]",1,"[attended, My, State, October, Secretary, Friend, ROOT, meeting, Affairs]","[attended, My, State, October, Secretary, Friend, ROOT, meeting, Affairs]",VBD_attended PRP$_My NNP_State NNP_October NNP_Secretary NNP_Friend NN_meeting NNP_Affairs ,"[attended, My, State, October, Secretary, Friend, ROOT, meeting, Affairs]","[attended, My, State, October, Secretary, Friend, ROOT, meeting, Affairs]",VBD_attended PRP$_My NNP_State NNP_October NNP_Secretary NNP_Friend NN_meeting NNP_Affairs ,"[attended, My, State, October, Secretary, Friend, ROOT, meeting, Affairs]",VBD_attended PRP$_My NNP_State NNP_October NNP_Secretary NNP_Friend NN_meeting NNP_Affairs ,"[attended, My, State, October, Secretary, Friend, ROOT, meeting, Affairs]",VBD_attended PRP$_My NNP_State NNP_October NNP_Secretary NNP_Friend NN_meeting NNP_Affairs ,-3,0,1,0,0,0,0,0,0,0
Issues discussed included the television broadcasting directive  assistance to Poland and Hungary  trade relations with the United States and Japan and renegotiation of the Lomé convention.,IssuesNNS discussedVBN includedVBD theDT televisionNN broadcastingVBG directiveJJ assistanceNN toTO PolandNNP andCC HungaryNNP tradeNN relationsNNS withIN theDT UnitedNNP StatesNNPS andCC JapanNNP andCC renegotiationNN ofIN theDT LoméNNP conventionNN ,"root(ROOT-0, Issues-1) acl(Issues-1, discussed-2) xcomp(discussed-2, included-3) det(directive-7, the-4) compound(directive-7, television-5) compound(directive-7, broadcasting-6) dobj(included-3, directive-7) punct(directive-7, ,-8) dobj(included-3, assistance-9) conj:and(directive-7, assistance-9) case(Poland-11, to-10) nmod:to(assistance-9, Poland-11) cc(Poland-11, and-12) nmod:to(assistance-9, Hungary-13) conj:and(Poland-11, Hungary-13) punct(directive-7, ,-14) compound(relations-16, trade-15) dobj(included-3, relations-16) conj:and(directive-7, relations-16) case(States-20, with-17) det(States-20, the-18) compound(States-20, United-19) nmod:with(relations-16, States-20) cc(States-20, and-21) nmod:with(relations-16, Japan-22) conj:and(States-20, Japan-22) cc(directive-7, and-23) dobj(included-3, renegotiation-24) conj:and(directive-7, renegotiation-24) case(convention-28, of-25) det(convention-28, the-26) compound(convention-28, Lomé-27) nmod:of(renegotiation-24, convention-28) punct(Issues-1, .-29)",0,0,0,"root(ROOT, Isses) acl(Isses, discssed) xcomp(discssed, inclded) det(directive, the) compond(directive, television) compond(directive, broadcasting) dobj(inclded, directive) pnct(directive, ,) dobj(inclded, assistance) conj:and(directive, assistance) case(Poland, to) nmod:to(assistance, Poland) cc(Poland, and) nmod:to(assistance, Hngary) conj:and(Poland, Hngary) pnct(directive, ,) compond(relations, trade) dobj(inclded, relations) conj:and(directive, relations) case(States, with) det(States, the) compond(States, United) nmod:with(relations, States) cc(States, and) nmod:with(relations, Japan) conj:and(States, Japan) cc(directive, and) dobj(inclded, renegotiation) conj:and(directive, renegotiation) case(convention, of) det(convention, the) compond(convention, Lom\xe9) nmod:of(renegotiation, convention) pnct(Isses, .)","root(,NNS) acl(NNS,VBN) xcomp(VBN,VBD) det(JJ,DT) compond(JJ,NN) compond(JJ,VBG) dobj(VBD,JJ) pnct(JJ,JJ) dobj(VBD,NN) conj:and(JJ,NN) case(NNP,TO) nmod:to(NN,NNP) cc(NNP,CC) nmod:to(NN,NNP) conj:and(NNP,NNP) pnct(JJ,JJ) compond(NNS,NN) dobj(VBD,NNS) conj:and(JJ,NNS) case(NNPS,IN) det(NNPS,DT) compond(NNPS,NNP) nmod:with(NNS,NNPS) cc(NNPS,CC) nmod:with(NNS,NNP) conj:and(NNPS,NNP) cc(JJ,CC) dobj(VBD,NN) conj:and(JJ,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) pnct(NNS,NNS)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my hon. Friend agree that enthusiastic British support for rapid progress towards a free market for goods and services inside the Community should be accompanied by robust resistance in the Council of Ministers to some of the bureaucratic lunacies emerging from the Commission?,DoesNNP myPRP$ honNN FriendNNP agreeVBZ thatIN enthusiasticJJ BritishJJ supportNN forIN rapidJJ progressNN towardsIN aDT freeJJ marketNN forIN goodsNNS andCC servicesNNS insideIN theDT CommunityNNP shouldMD beVB accompaniedVBN byIN robustJJ resistanceNN inIN theDT CouncilNNP ofIN MinistersNNP toTO someDT ofIN theDT bureaucraticJJ lunaciesNNS emergingVBG fromIN theDT CommissionNNP ,"root(ROOT-0, agree-5) aux(agree-5, Does-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(agree-5, Friend-4) mark(accompanied-26, that-6) amod(support-9, enthusiastic-7) amod(support-9, British-8) nsubjpass(accompanied-26, support-9) case(progress-12, for-10) amod(progress-12, rapid-11) nmod:for(support-9, progress-12) case(market-16, towards-13) det(market-16, a-14) amod(market-16, free-15) nmod:towards(progress-12, market-16) case(goods-18, for-17) nmod:for(market-16, goods-18) cc(goods-18, and-19) nmod:for(market-16, services-20) conj:and(goods-18, services-20) case(Community-23, inside-21) det(Community-23, the-22) nmod:inside(goods-18, Community-23) aux(accompanied-26, should-24) auxpass(accompanied-26, be-25) ccomp(agree-5, accompanied-26) case(resistance-29, by-27) amod(resistance-29, robust-28) nmod:agent(accompanied-26, resistance-29) case(Council-32, in-30) det(Council-32, the-31) nmod:in(resistance-29, Council-32) case(Ministers-34, of-33) nmod:of(Council-32, Ministers-34) case(some-36, to-35) nmod:to(resistance-29, some-36) case(lunacies-40, of-37) det(lunacies-40, the-38) amod(lunacies-40, bureaucratic-39) nmod:of(some-36, lunacies-40) acl(lunacies-40, emerging-41) case(Commission-44, from-42) det(Commission-44, the-43) nmod:from(emerging-41, Commission-44) punct(agree-5, ?-45)",0,1,1,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(agree, Friend) mark(accompanied, that) amod(spport, enthsiastic) amod(spport, British) nsbjpass(accompanied, spport) case(progress, for) amod(progress, rapid) nmod:for(spport, progress) case(market, towards) det(market, a) amod(market, free) nmod:towards(progress, market) case(goods, for) nmod:for(market, goods) cc(goods, and) nmod:for(market, services) conj:and(goods, services) case(Commnity, inside) det(Commnity, the) nmod:inside(goods, Commnity) ax(accompanied, shold) axpass(accompanied, be) ccomp(agree, accompanied) case(resistance, by) amod(resistance, robst) nmod:agent(accompanied, resistance) case(Concil, in) det(Concil, the) nmod:in(resistance, Concil) case(Ministers, of) nmod:of(Concil, Ministers) case(some, to) nmod:to(resistance, some) case(lnacies, of) det(lnacies, the) amod(lnacies, breacratic) nmod:of(some, lnacies) acl(lnacies, emerging) case(Commission, from) det(Commission, the) nmod:from(emerging, Commission) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBN,IN) amod(NN,JJ) amod(NN,JJ) nsbjpass(VBN,NN) case(NN,IN) amod(NN,JJ) nmod:for(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:towards(NN,NN) case(NNS,IN) nmod:for(NN,NNS) cc(NNS,CC) nmod:for(NN,NNS) conj:and(NNS,NNS) case(NNP,IN) det(NNP,DT) nmod:inside(NNS,NNP) ax(VBN,MD) axpass(VBN,VB) ccomp(VBZ,VBN) case(NN,IN) amod(NN,JJ) nmod:agent(VBN,NN) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(DT,TO) nmod:to(NN,DT) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(DT,NNS) acl(NNS,VBG) case(NNP,IN) det(NNP,DT) nmod:from(VBG,NNP) pnct(VBZ,VBZ)","[ROOT, my, agree, Friend, accompanied]","[ROOT, my, agree, Friend, accompanied]",2,[ ],[ ],PRP$_my VB_agree NNP_Friend VBN_accompanied ,"[ROOT, my, agree, Friend, accompanied]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We shall resist bureaucratic lunacies from whatever source they emanate.,WePRP shallMD resistVB bureaucraticJJ lunaciesNNS fromIN whateverWDT sourceNN theyPRP emanateVBP ,"root(ROOT-0, resist-3) nsubj(resist-3, We-1) aux(resist-3, shall-2) amod(lunacies-5, bureaucratic-4) dobj(resist-3, lunacies-5) case(source-8, from-6) det(source-8, whatever-7) nmod:from(lunacies-5, source-8) nsubj(emanate-10, they-9) acl:relcl(source-8, emanate-10) punct(resist-3, .-11)",0,1,0,"root(ROOT, resist) nsbj(resist, We) ax(resist, shall) amod(lnacies, breacratic) dobj(resist, lnacies) case(sorce, from) det(sorce, whatever) nmod:from(lnacies, sorce) nsbj(emanate, they) acl:relcl(sorce, emanate) pnct(resist, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) amod(NNS,JJ) dobj(VB,NNS) case(NN,IN) det(NN,WDT) nmod:from(NNS,NN) nsbj(VBP,PRP) acl:relcl(NN,VBP) pnct(VB,VB)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We look extremely carefully at every Commission proposal to ensure that it is properly framed within the competence of the Communities and under the proper legal base.,WePRP lookVBP extremelyRB carefullyRB atIN everyDT CommissionNNP proposalNN toTO ensureVB thatIN itPRP isVBZ properlyRB framedVBN withinIN theDT competenceNN ofIN theDT CommunitiesNNPS andCC underIN theDT properJJ legalJJ baseNN ,"root(ROOT-0, look-2) nsubj(look-2, We-1) advmod(carefully-4, extremely-3) advmod(look-2, carefully-4) case(proposal-8, at-5) det(proposal-8, every-6) compound(proposal-8, Commission-7) nmod:at(look-2, proposal-8) mark(ensure-10, to-9) xcomp(look-2, ensure-10) mark(framed-15, that-11) nsubjpass(framed-15, it-12) auxpass(framed-15, is-13) advmod(framed-15, properly-14) ccomp(ensure-10, framed-15) case(competence-18, within-16) det(competence-18, the-17) nmod:within(framed-15, competence-18) case(Communities-21, of-19) det(Communities-21, the-20) nmod:of(competence-18, Communities-21) cc(framed-15, and-22) case(base-27, under-23) det(base-27, the-24) amod(base-27, proper-25) amod(base-27, legal-26) ccomp(ensure-10, base-27) conj:and(framed-15, base-27) punct(look-2, .-28)",0,0,0,"root(ROOT, look) nsbj(look, We) advmod(careflly, extremely) advmod(look, careflly) case(proposal, at) det(proposal, every) compond(proposal, Commission) nmod:at(look, proposal) mark(ensre, to) xcomp(look, ensre) mark(framed, that) nsbjpass(framed, it) axpass(framed, is) advmod(framed, properly) ccomp(ensre, framed) case(competence, within) det(competence, the) nmod:within(framed, competence) case(Commnities, of) det(Commnities, the) nmod:of(competence, Commnities) cc(framed, and) case(base, nder) det(base, the) amod(base, proper) amod(base, legal) ccomp(ensre, base) conj:and(framed, base) pnct(look, .)","root(,VBP) nsbj(VBP,PRP) advmod(RB,RB) advmod(VBP,RB) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:at(VBP,NN) mark(VB,TO) xcomp(VBP,VB) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) advmod(VBN,RB) ccomp(VB,VBN) case(NN,IN) det(NN,DT) nmod:within(VBN,NN) case(NNPS,IN) det(NNPS,DT) nmod:of(NN,NNPS) cc(VBN,CC) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) ccomp(VB,NN) conj:and(VBN,NN) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I cannot tell the hon. Gentleman that that matter has been pursued in the Foreign Affairs Council  but certainly my right hon. Friend and I will want to reflect on what he said to see whether that is appropriate.,IPRP canMD notRB tellVB theDT honNN GentlemanNNP thatIN thatDT matterNN hasVBZ beenVBN pursuedVBN inIN theDT ForeignNNP AffairsNNPS CouncilNNP butCC certainlyRB myPRP$ rightJJ honNN FriendNNP andCC IPRP willMD wantVB toTO reflectVB onIN whatWP hePRP saidVBD toTO seeVB whetherIN thatDT isVBZ appropriateJJ ,"root(ROOT-0, tell-4) nsubj(tell-4, I-1) aux(tell-4, can-2) neg(tell-4, not-3) det(Gentleman-7, the-5) compound(Gentleman-7, hon.-6) dobj(tell-4, Gentleman-7) mark(pursued-13, that-8) det(matter-10, that-9) nsubjpass(pursued-13, matter-10) aux(pursued-13, has-11) auxpass(pursued-13, been-12) ccomp(tell-4, pursued-13) case(Council-18, in-14) det(Council-18, the-15) compound(Council-18, Foreign-16) compound(Council-18, Affairs-17) nmod:in(pursued-13, Council-18) punct(tell-4, ,-19) cc(tell-4, but-20) advmod(Friend-25, certainly-21) nmod:poss(Friend-25, my-22) amod(Friend-25, right-23) compound(Friend-25, hon.-24) nsubj(want-29, Friend-25) cc(Friend-25, and-26) conj:and(Friend-25, I-27) nsubj(want-29, I-27) aux(want-29, will-28) conj:but(tell-4, want-29) mark(reflect-31, to-30) xcomp(want-29, reflect-31) mark(said-35, on-32) dobj(said-35, what-33) nsubj(said-35, he-34) advcl(reflect-31, said-35) mark(see-37, to-36) xcomp(said-35, see-37) mark(appropriate-41, whether-38) nsubj(appropriate-41, that-39) cop(appropriate-41, is-40) ccomp(see-37, appropriate-41) punct(tell-4, .-42)",0,0,0,"root(ROOT, tell) nsbj(tell, I) ax(tell, can) neg(tell, not) det(Gentleman, the) compond(Gentleman, hon.) dobj(tell, Gentleman) mark(prsed, that) det(matter, that) nsbjpass(prsed, matter) ax(prsed, has) axpass(prsed, been) ccomp(tell, prsed) case(Concil, in) det(Concil, the) compond(Concil, Foreign) compond(Concil, Affairs) nmod:in(prsed, Concil) pnct(tell, ,) cc(tell, bt) advmod(Friend, certainly) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(want, Friend) cc(Friend, and) conj:and(Friend, I) nsbj(want, I) ax(want, will) conj:bt(tell, want) mark(reflect, to) xcomp(want, reflect) mark(said, on) dobj(said, what) nsbj(said, he) advcl(reflect, said) mark(see, to) xcomp(said, see) mark(appropriate, whether) nsbj(appropriate, that) cop(appropriate, is) ccomp(see, appropriate) pnct(tell, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) mark(VBN,DT) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) ccomp(VB,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNPS) nmod:in(VBN,NNP) pnct(VB,VB) cc(VB,CC) advmod(NNP,RB) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VB,NNP) cc(NNP,CC) conj:and(NNP,PRP) nsbj(VB,PRP) ax(VB,MD) conj:bt(VB,VB) mark(VB,TO) xcomp(VB,VB) mark(VBD,IN) dobj(VBD,WP) nsbj(VBD,PRP) advcl(VB,VBD) mark(VB,TO) xcomp(VBD,VB) mark(JJ,IN) nsbj(JJ,DT) cop(JJ,VBZ) ccomp(VB,JJ) pnct(VB,VB)","[not, I, see, I, my, said, right, want, Gentleman, reflect, certainly, tell, he, and, Friend, but, pursued, ROOT, what]","[not, I, see, I, my, said, want, Gentleman, reflect, certainly, tell, he, and, Friend, but, pursued, ROOT, what]",4,"[tell, not, said, he, see, I, but, pursued, ROOT, Gentleman, reflect, what]","[tell, not, said, he, see, I, but, pursued, ROOT, Gentleman, reflect, what]",RB_not PRP_I VB_see PRP_I PRP$_my VBD_said VB_want NNP_Gentleman VB_reflect RB_certainly VB_tell PRP_he CC_and NNP_Friend CC_but VBN_pursued WP_what ,"[not, I, see, I, my, said, want, Gentleman, reflect, certainly, tell, he, and, Friend, but, pursued, ROOT, what]","[not, I, see, I, my, said, want, Gentleman, reflect, certainly, tell, he, and, Friend, but, pursued, ROOT, what]",RB_not PRP_I VB_see PRP_I PRP$_my VBD_said VB_want NNP_Gentleman VB_reflect RB_certainly VB_tell PRP_he CC_and NNP_Friend CC_but VBN_pursued WP_what ,"[not, I, see, I, my, said, want, Gentleman, reflect, certainly, tell, he, and, Friend, but, pursued, ROOT, what]",RB_not PRP_I VB_see PRP_I PRP$_my VBD_said VB_want NNP_Gentleman VB_reflect RB_certainly VB_tell PRP_he CC_and NNP_Friend CC_but VBN_pursued WP_what ,"[not, I, see, I, my, said, want, Gentleman, reflect, certainly, tell, he, and, Friend, but, pursued, ROOT, what]",RB_not PRP_I VB_see PRP_I PRP$_my VBD_said VB_want NNP_Gentleman VB_reflect RB_certainly VB_tell PRP_he CC_and NNP_Friend CC_but VBN_pursued WP_what ,-3,0,1,2,1,2,0,0,0,1
We have every confidence that the quality and standard of our drinking water are exceptionally good.,WePRP haveVBP everyDT confidenceNN thatIN theDT qualityNN andCC standardNN ofIN ourPRP$ drinkingNN waterNN areVBP exceptionallyRB goodJJ ,"root(ROOT-0, have-2) nsubj(have-2, We-1) det(confidence-4, every-3) dobj(have-2, confidence-4) mark(good-16, that-5) det(quality-7, the-6) nsubj(good-16, quality-7) cc(quality-7, and-8) conj:and(quality-7, standard-9) nsubj(good-16, standard-9) case(water-13, of-10) nmod:poss(water-13, our-11) compound(water-13, drinking-12) nmod:of(quality-7, water-13) cop(good-16, are-14) advmod(good-16, exceptionally-15) ccomp(confidence-4, good-16) punct(have-2, .-17)",0,1,0,"root(ROOT, have) nsbj(have, We) det(confidence, every) dobj(have, confidence) mark(good, that) det(qality, the) nsbj(good, qality) cc(qality, and) conj:and(qality, standard) nsbj(good, standard) case(water, of) nmod:poss(water, or) compond(water, drinking) nmod:of(qality, water) cop(good, are) advmod(good, exceptionally) ccomp(confidence, good) pnct(have, .)","root(,VBP) nsbj(VBP,PRP) det(NN,DT) dobj(VBP,NN) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) cc(NN,CC) conj:and(NN,NN) nsbj(JJ,NN) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NN) nmod:of(NN,NN) cop(JJ,VBP) advmod(JJ,RB) ccomp(NN,JJ) pnct(VBP,VBP)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We strongly regret the action that the European Commission has taken.,WePRP stronglyRB regretVBP theDT actionNN thatIN theDT EuropeanJJ CommissionNNP hasVBZ takenVBN ,"root(ROOT-0, regret-3) nsubj(regret-3, We-1) advmod(regret-3, strongly-2) det(action-5, the-4) dobj(regret-3, action-5) dobj(taken-11, that-6) det(Commission-9, the-7) amod(Commission-9, European-8) nsubj(taken-11, Commission-9) aux(taken-11, has-10) acl:relcl(action-5, taken-11) punct(regret-3, .-12)",0,0,0,"root(ROOT, regret) nsbj(regret, We) advmod(regret, strongly) det(action, the) dobj(regret, action) dobj(taken, that) det(Commission, the) amod(Commission, Eropean) nsbj(taken, Commission) ax(taken, has) acl:relcl(action, taken) pnct(regret, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) det(NN,DT) dobj(VBP,NN) dobj(VBN,IN) det(NNP,DT) amod(NNP,JJ) nsbj(VBN,NNP) ax(VBN,VBZ) acl:relcl(NN,VBN) pnct(VBP,VBP)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Commission accepts that we are doing everything that we can to bring water up to the required standard.,TheDT CommissionNNP acceptsVBZ thatIN wePRP areVBP doingVBG everythingNN thatIN wePRP canMD toTO bringVB waterNN upRB toTO theDT requiredJJ standardNN ,"root(ROOT-0, accepts-3) det(Commission-2, The-1) nsubj(accepts-3, Commission-2) mark(doing-7, that-4) nsubj(doing-7, we-5) aux(doing-7, are-6) ccomp(accepts-3, doing-7) dobj(doing-7, everything-8) mark(can-11, that-9) nsubj(can-11, we-10) ccomp(doing-7, can-11) mark(bring-13, to-12) xcomp(can-11, bring-13) dobj(bring-13, water-14) case(standard-19, up-15) case(standard-19, to-16) det(standard-19, the-17) amod(standard-19, required-18) nmod:up(bring-13, standard-19) punct(accepts-3, .-20)",0,0,0,"root(ROOT, accepts) det(Commission, The) nsbj(accepts, Commission) mark(doing, that) nsbj(doing, we) ax(doing, are) ccomp(accepts, doing) dobj(doing, everything) mark(can, that) nsbj(can, we) ccomp(doing, can) mark(bring, to) xcomp(can, bring) dobj(bring, water) case(standard, p) case(standard, to) det(standard, the) amod(standard, reqired) nmod:p(bring, standard) pnct(accepts, .)","root(,VBZ) det(NNP,DT) nsbj(VBZ,NNP) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBP) ccomp(VBZ,VBG) dobj(VBG,NN) mark(MD,IN) nsbj(MD,PRP) ccomp(VBG,MD) mark(VB,TO) xcomp(MD,VB) dobj(VB,NN) case(NN,RB) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:p(VB,NN) pnct(VBZ,VBZ)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
No one has suggested  not even the Commission  that any time scale more rapid than that which we propose is possible  and its action in taking infraction proceedings against us  as it has done against many other member states  is irrelevant and harmful.,NoDT oneNN hasVBZ suggestedVBN notRB evenRB theDT CommissionNNP thatIN anyDT timeNN scaleNN moreRBR rapidJJ thanIN thatDT whichWDT wePRP proposeVBP isVBZ possibleJJ andCC itsPRP$ actionNN inIN takingVBG infractionNN proceedingsNNS againstIN usPRP asIN itPRP hasVBZ doneVBN againstIN manyJJ otherJJ memberNN statesNNS isVBZ irrelevantJJ andCC harmfulJJ ,"root(ROOT-0, suggested-4) neg(one-2, No-1) nsubj(suggested-4, one-2) aux(suggested-4, has-3) punct(suggested-4, ,-5) neg(Commission-9, not-6) advmod(Commission-9, even-7) det(Commission-9, the-8) xcomp(suggested-4, Commission-9) punct(Commission-9, ,-10) mark(possible-23, that-11) det(scale-14, any-12) compound(scale-14, time-13) nsubj(possible-23, scale-14) advmod(rapid-16, more-15) amod(scale-14, rapid-16) case(that-18, than-17) nmod:than(rapid-16, that-18) dobj(propose-21, which-19) nsubj(propose-21, we-20) acl:relcl(that-18, propose-21) cop(possible-23, is-22) ccomp(Commission-9, possible-23) punct(possible-23, ,-24) cc(possible-23, and-25) nmod:poss(action-27, its-26) nsubj(irrelevant-46, action-27) nsubj(harmful-48, action-27) mark(taking-29, in-28) acl(action-27, taking-29) compound(proceedings-31, infraction-30) dobj(taking-29, proceedings-31) case(us-33, against-32) nmod:against(taking-29, us-33) punct(action-27, ,-34) mark(done-38, as-35) nsubj(done-38, it-36) aux(done-38, has-37) acl(action-27, done-38) case(states-43, against-39) amod(states-43, many-40) amod(states-43, other-41) compound(states-43, member-42) nmod:against(done-38, states-43) punct(action-27, ,-44) cop(irrelevant-46, is-45) ccomp(Commission-9, irrelevant-46) conj:and(possible-23, irrelevant-46) cc(irrelevant-46, and-47) conj:and(possible-23, harmful-48) conj:and(irrelevant-46, harmful-48) punct(suggested-4, .-49)",0,0,0,"root(ROOT, sggested) neg(one, No) nsbj(sggested, one) ax(sggested, has) pnct(sggested, ,) neg(Commission, not) advmod(Commission, even) det(Commission, the) xcomp(sggested, Commission) pnct(Commission, ,) mark(possible, that) det(scale, any) compond(scale, time) nsbj(possible, scale) advmod(rapid, more) amod(scale, rapid) case(that, than) nmod:than(rapid, that) dobj(propose, which) nsbj(propose, we) acl:relcl(that, propose) cop(possible, is) ccomp(Commission, possible) pnct(possible, ,) cc(possible, and) nmod:poss(action, its) nsbj(irrelevant, action) nsbj(harmfl, action) mark(taking, in) acl(action, taking) compond(proceedings, infraction) dobj(taking, proceedings) case(s, against) nmod:against(taking, s) pnct(action, ,) mark(done, as) nsbj(done, it) ax(done, has) acl(action, done) case(states, against) amod(states, many) amod(states, other) compond(states, member) nmod:against(done, states) pnct(action, ,) cop(irrelevant, is) ccomp(Commission, irrelevant) conj:and(possible, irrelevant) cc(irrelevant, and) conj:and(possible, harmfl) conj:and(irrelevant, harmfl) pnct(sggested, .)","root(,VBN) neg(NN,DT) nsbj(VBN,NN) ax(VBN,VBZ) pnct(VBN,VBN) neg(NNP,RB) advmod(NNP,RB) det(NNP,DT) xcomp(VBN,NNP) pnct(NNP,NNP) mark(JJ,DT) det(NN,DT) compond(NN,NN) nsbj(JJ,NN) advmod(JJ,RBR) amod(NN,JJ) case(DT,IN) nmod:than(JJ,DT) dobj(VBP,WDT) nsbj(VBP,PRP) acl:relcl(DT,VBP) cop(JJ,VBZ) ccomp(NNP,JJ) pnct(JJ,JJ) cc(JJ,CC) nmod:poss(NN,PRP$) nsbj(JJ,NN) nsbj(JJ,NN) mark(VBG,IN) acl(NN,VBG) compond(NNS,NN) dobj(VBG,NNS) case(PRP,IN) nmod:against(VBG,PRP) pnct(NN,NN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBZ) acl(NN,VBN) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) compond(NNS,NN) nmod:against(VBN,NNS) pnct(NN,NN) cop(JJ,VBZ) ccomp(NNP,JJ) conj:and(JJ,JJ) cc(JJ,CC) conj:and(JJ,JJ) conj:and(JJ,JJ) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I welcome the Minister to the Dispatch Box on his first appearance as the Minister with responsibility for Europe.,IPRP welcomeVBP theDT MinisterNNP toTO theDT DispatchNNP BoxNNP onIN hisPRP$ firstJJ appearanceNN asIN theDT MinisterNNP withIN responsibilityNN forIN EuropeNNP ,"root(ROOT-0, welcome-2) nsubj(welcome-2, I-1) det(Minister-4, the-3) dobj(welcome-2, Minister-4) case(Box-8, to-5) det(Box-8, the-6) compound(Box-8, Dispatch-7) nmod:to(welcome-2, Box-8) case(appearance-12, on-9) nmod:poss(appearance-12, his-10) amod(appearance-12, first-11) nmod:on(welcome-2, appearance-12) case(Minister-15, as-13) det(Minister-15, the-14) nmod:as(appearance-12, Minister-15) case(responsibility-17, with-16) nmod:with(appearance-12, responsibility-17) case(Europe-19, for-18) nmod:for(responsibility-17, Europe-19) punct(welcome-2, .-20)",0,1,0,"root(ROOT, welcome) nsbj(welcome, I) det(Minister, the) dobj(welcome, Minister) case(Box, to) det(Box, the) compond(Box, Dispatch) nmod:to(welcome, Box) case(appearance, on) nmod:poss(appearance, his) amod(appearance, first) nmod:on(welcome, appearance) case(Minister, as) det(Minister, the) nmod:as(appearance, Minister) case(responsibility, with) nmod:with(appearance, responsibility) case(Erope, for) nmod:for(responsibility, Erope) pnct(welcome, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) dobj(VBP,NNP) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VBP,NNP) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:on(VBP,NN) case(NNP,IN) det(NNP,DT) nmod:as(NN,NNP) case(NN,IN) nmod:with(NN,NN) case(NNP,IN) nmod:for(NN,NNP) pnct(VBP,VBP)","[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]","[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]",8,"[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]","[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]",JJ_welcome PRP_I NNP_Minister NNP_Box NN_responsibility NNP_Minister JJ_first PRP$_his NN_appearance ,"[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]","[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]",JJ_welcome PRP_I NNP_Minister NNP_Box NN_responsibility NNP_Minister JJ_first PRP$_his NN_appearance ,"[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]",JJ_welcome PRP_I NNP_Minister NNP_Box NN_responsibility NNP_Minister JJ_first PRP$_his NN_appearance ,"[welcome, I, Minister, Box, responsibility, Minister, first, his, ROOT, appearance]",JJ_welcome PRP_I NNP_Minister NNP_Box NN_responsibility NNP_Minister JJ_first PRP$_his NN_appearance ,-3,0,1,1,1,1,1,1,1,1
Let me bring him back to the subject of the social charter.,LetVB mePRP bringVB himPRP backRB toTO theDT subjectNN ofIN theDT socialJJ charterNN ,"root(ROOT-0, Let-1) nsubj(bring-3, me-2) ccomp(Let-1, bring-3) dobj(bring-3, him-4) advmod(bring-3, back-5) case(subject-8, to-6) det(subject-8, the-7) nmod:to(back-5, subject-8) case(charter-12, of-9) det(charter-12, the-10) amod(charter-12, social-11) nmod:of(subject-8, charter-12) punct(Let-1, .-13)",0,0,0,"root(ROOT, Let) nsbj(bring, me) ccomp(Let, bring) dobj(bring, him) advmod(bring, back) case(sbject, to) det(sbject, the) nmod:to(back, sbject) case(charter, of) det(charter, the) amod(charter, social) nmod:of(sbject, charter) pnct(Let, .)","root(,VB) nsbj(VB,PRP) ccomp(VB,VB) dobj(VB,PRP) advmod(VB,RB) case(NN,TO) det(NN,DT) nmod:to(RB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) pnct(VB,VB)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What sort of Community does the Minister envisage when we stand alone so consistently and regularly against proposals that all our partners believe are essential for the correct working of the single European market?,WhatWP sortNN ofIN CommunityNNP doesVBZ theDT MinisterNNP envisageNN whenWRB wePRP standVBP aloneRB soRB consistentlyRB andCC regularlyRB againstIN proposalsNNS thatIN allDT ourPRP$ partnersNNS believeVBP areVBP essentialJJ forIN theDT correctJJ workingNN ofIN theDT singleJJ EuropeanJJ marketNN ,"root(ROOT-0, envisage-8) det(sort-2, What-1) dep(envisage-8, sort-2) case(Community-4, of-3) nmod:of(sort-2, Community-4) aux(envisage-8, does-5) det(Minister-7, the-6) nsubj(envisage-8, Minister-7) advmod(stand-11, when-9) nsubj(stand-11, we-10) advcl(envisage-8, stand-11) advmod(stand-11, alone-12) advmod(consistently-14, so-13) advmod(stand-11, consistently-14) cc(stand-11, and-15) advmod(proposals-18, regularly-16) case(proposals-18, against-17) advcl(envisage-8, proposals-18) conj:and(stand-11, proposals-18) dobj(believe-23, that-19) det:predet(partners-22, all-20) nmod:poss(partners-22, our-21) nsubj(believe-23, partners-22) acl:relcl(proposals-18, believe-23) cop(essential-25, are-24) ccomp(believe-23, essential-25) case(working-29, for-26) det(working-29, the-27) amod(working-29, correct-28) nmod:for(essential-25, working-29) case(market-34, of-30) det(market-34, the-31) amod(market-34, single-32) amod(market-34, European-33) nmod:of(working-29, market-34) punct(envisage-8, ?-35)",0,0,1,"root(ROOT, envisage) det(sort, What) dep(envisage, sort) case(Commnity, of) nmod:of(sort, Commnity) ax(envisage, does) det(Minister, the) nsbj(envisage, Minister) advmod(stand, when) nsbj(stand, we) advcl(envisage, stand) advmod(stand, alone) advmod(consistently, so) advmod(stand, consistently) cc(stand, and) advmod(proposals, reglarly) case(proposals, against) advcl(envisage, proposals) conj:and(stand, proposals) dobj(believe, that) det:predet(partners, all) nmod:poss(partners, or) nsbj(believe, partners) acl:relcl(proposals, believe) cop(essential, are) ccomp(believe, essential) case(working, for) det(working, the) amod(working, correct) nmod:for(essential, working) case(market, of) det(market, the) amod(market, single) amod(market, Eropean) nmod:of(working, market) pnct(envisage, ?)","root(,NN) det(NN,WP) dep(NN,NN) case(NNP,IN) nmod:of(NN,NNP) ax(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) advmod(VBP,WRB) nsbj(VBP,PRP) advcl(NN,VBP) advmod(VBP,RB) advmod(RB,RB) advmod(VBP,RB) cc(VBP,CC) advmod(NNS,RB) case(NNS,IN) advcl(NN,NNS) conj:and(VBP,NNS) dobj(VBP,IN) det:predet(NNS,DT) nmod:poss(NNS,PRP$) nsbj(VBP,NNS) acl:relcl(NNS,VBP) cop(JJ,VBP) ccomp(VBP,JJ) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(JJ,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN)","[proposals, Minister, sort, ROOT, stand, envisage]","[proposals, Minister, sort, ROOT, stand, envisage]",9,[ ],[ ],NNS_proposals NNP_Minister NN_sort VBP_stand NN_envisage ,"[proposals, Minister, sort, ROOT, stand, envisage]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I can tell him what sort of social charter we would find acceptable.,IPRP canMD tellVB himPRP whatWP sortNN ofIN socialJJ charterNN wePRP wouldMD findVB acceptableJJ ,"root(ROOT-0, tell-3) nsubj(tell-3, I-1) aux(tell-3, can-2) iobj(tell-3, him-4) det(sort-6, what-5) dobj(find-12, sort-6) case(charter-9, of-7) amod(charter-9, social-8) nmod:of(sort-6, charter-9) nsubj(find-12, we-10) aux(find-12, would-11) ccomp(tell-3, find-12) xcomp(find-12, acceptable-13) punct(tell-3, .-14)",0,0,0,"root(ROOT, tell) nsbj(tell, I) ax(tell, can) iobj(tell, him) det(sort, what) dobj(find, sort) case(charter, of) amod(charter, social) nmod:of(sort, charter) nsbj(find, we) ax(find, wold) ccomp(tell, find) xcomp(find, acceptable) pnct(tell, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) iobj(VB,PRP) det(NN,WP) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) xcomp(VB,JJ) pnct(VB,VB)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It would be a charter that accepted the principle that the Heads of Government enunciated at the Madrid Council with respect to the principle of subsidiarity  which leaves as much as possible to the national practices and voluntary traditions in other countries.,ItPRP wouldMD beVB aDT charterNN thatWDT acceptedVBD theDT principleNN thatIN theDT HeadsNNP ofIN GovernmentNNP enunciatedVBD atIN theDT MadridNNP CouncilNNP withIN respectNN toTO theDT principleNN ofIN subsidiarityNN whichWDT leavesVBZ asRB muchJJ asIN possibleJJ toTO theDT nationalJJ practicesNNS andCC voluntaryJJ traditionsNNS inIN otherJJ countriesNNS ,"root(ROOT-0, charter-5) nsubj(charter-5, It-1) aux(charter-5, would-2) cop(charter-5, be-3) det(charter-5, a-4) nsubj(accepted-7, that-6) acl:relcl(charter-5, accepted-7) det(principle-9, the-8) dobj(accepted-7, principle-9) mark(enunciated-15, that-10) det(Heads-12, the-11) nsubj(enunciated-15, Heads-12) case(Government-14, of-13) nmod:of(Heads-12, Government-14) ccomp(principle-9, enunciated-15) case(Council-19, at-16) det(Council-19, the-17) compound(Council-19, Madrid-18) nmod:at(enunciated-15, Council-19) case(respect-21, with-20) nmod:with(enunciated-15, respect-21) case(principle-24, to-22) det(principle-24, the-23) nmod:to(respect-21, principle-24) case(subsidiarity-26, of-25) nmod:of(principle-24, subsidiarity-26) punct(subsidiarity-26, ,-27) nsubj(leaves-29, which-28) acl:relcl(subsidiarity-26, leaves-29) advmod(much-31, as-30) dobj(leaves-29, much-31) case(possible-33, as-32) nmod:as(much-31, possible-33) case(practices-37, to-34) det(practices-37, the-35) amod(practices-37, national-36) nmod:to(possible-33, practices-37) cc(practices-37, and-38) amod(traditions-40, voluntary-39) nmod:to(possible-33, traditions-40) conj:and(practices-37, traditions-40) case(countries-43, in-41) amod(countries-43, other-42) nmod:in(practices-37, countries-43) punct(charter-5, .-44)",0,0,0,"root(ROOT, charter) nsbj(charter, It) ax(charter, wold) cop(charter, be) det(charter, a) nsbj(accepted, that) acl:relcl(charter, accepted) det(principle, the) dobj(accepted, principle) mark(ennciated, that) det(Heads, the) nsbj(ennciated, Heads) case(Government, of) nmod:of(Heads, Government) ccomp(principle, ennciated) case(Concil, at) det(Concil, the) compond(Concil, Madrid) nmod:at(ennciated, Concil) case(respect, with) nmod:with(ennciated, respect) case(principle, to) det(principle, the) nmod:to(respect, principle) case(sbsidiarity, of) nmod:of(principle, sbsidiarity) pnct(sbsidiarity, ,) nsbj(leaves, which) acl:relcl(sbsidiarity, leaves) advmod(mch, as) dobj(leaves, mch) case(possible, as) nmod:as(mch, possible) case(practices, to) det(practices, the) amod(practices, national) nmod:to(possible, practices) cc(practices, and) amod(traditions, volntary) nmod:to(possible, traditions) conj:and(practices, traditions) case(contries, in) amod(contries, other) nmod:in(practices, contries) pnct(charter, .)","root(,NN) nsbj(NN,PRP) ax(NN,MD) cop(NN,VB) det(NN,DT) nsbj(VBD,IN) acl:relcl(NN,VBD) det(NN,DT) dobj(VBD,NN) mark(VBD,IN) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) ccomp(NN,VBD) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:at(VBD,NNP) case(NN,IN) nmod:with(VBD,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) advmod(JJ,IN) dobj(VBZ,JJ) case(JJ,IN) nmod:as(JJ,JJ) case(NNS,TO) det(NNS,DT) amod(NNS,JJ) nmod:to(JJ,NNS) cc(NNS,CC) amod(NNS,JJ) nmod:to(JJ,NNS) conj:and(NNS,NNS) case(NNS,IN) amod(NNS,JJ) nmod:in(NNS,NNS) pnct(NN,NN)","[enunciated, Heads, Government]",[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The present draft of the social charter does not do that.,TheDT presentJJ draftNN ofIN theDT socialJJ charterNN doesVBZ notRB doVB thatIN ,"root(ROOT-0, do-10) det(draft-3, The-1) amod(draft-3, present-2) nsubj(do-10, draft-3) case(charter-7, of-4) det(charter-7, the-5) amod(charter-7, social-6) nmod:of(draft-3, charter-7) aux(do-10, does-8) neg(do-10, not-9) dobj(do-10, that-11) punct(do-10, .-12)",0,0,0,"root(ROOT, do) det(draft, The) amod(draft, present) nsbj(do, draft) case(charter, of) det(charter, the) amod(charter, social) nmod:of(draft, charter) ax(do, does) neg(do, not) dobj(do, that) pnct(do, .)","root(,VB) det(NN,DT) amod(NN,JJ) nsbj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) ax(VB,VBZ) neg(VB,RB) VBbj(VB,IN) pnct(VB,VB)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That is a matter of considerable regret  and we hope that there can be further changes that will make it acceptable.,ThatDT isVBZ aDT matterNN ofIN considerableJJ regretJJ andCC wePRP hopeVBP thatIN thereEX canMD beVB furtherJJ changesNNS thatWDT willMD makeVB itPRP acceptableJJ ,"root(ROOT-0, matter-4) nsubj(matter-4, That-1) cop(matter-4, is-2) det(matter-4, a-3) case(regret-7, of-5) amod(regret-7, considerable-6) nmod:of(matter-4, regret-7) punct(matter-4, ,-8) cc(matter-4, and-9) nsubj(hope-11, we-10) conj:and(matter-4, hope-11) mark(changes-17, that-12) expl(changes-17, there-13) aux(changes-17, can-14) cop(changes-17, be-15) amod(changes-17, further-16) ccomp(hope-11, changes-17) nsubj(make-20, that-18) aux(make-20, will-19) acl:relcl(changes-17, make-20) nsubj(acceptable-22, it-21) xcomp(make-20, acceptable-22) punct(matter-4, .-23)",0,0,0,"root(ROOT, matter) nsbj(matter, That) cop(matter, is) det(matter, a) case(regret, of) amod(regret, considerable) nmod:of(matter, regret) pnct(matter, ,) cc(matter, and) nsbj(hope, we) conj:and(matter, hope) mark(changes, that) expl(changes, there) ax(changes, can) cop(changes, be) amod(changes, frther) ccomp(hope, changes) nsbj(make, that) ax(make, will) acl:relcl(changes, make) nsbj(acceptable, it) xcomp(make, acceptable) pnct(matter, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) case(JJ,IN) amod(JJ,JJ) nmod:of(NN,JJ) pnct(NN,NN) cc(NN,CC) nsbj(VBP,PRP) conj:and(NN,VBP) mark(NNS,WDT) expl(NNS,EX) ax(NNS,MD) cop(NNS,VB) amod(NNS,JJ) ccomp(VBP,NNS) nsbj(VB,WDT) ax(VB,MD) acl:relcl(NNS,VB) nsbj(JJ,PRP) xcomp(VB,JJ) pnct(NN,NN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It was condemned by the United States Government representative  Carla Hills  as being one of the worst examples of protectionism and anti Americanism and fortress Europeanism  and it makes it mandatory for television companies throughout Europe to carry 50 per cent.,ItPRP wasVBD condemnedVBN byIN theDT UnitedNNP StatesNNPS GovernmentNNP representativeNN CarlaNNP HillsNNP asIN beingVBG oneCD ofIN theDT worstJJS examplesNNS ofIN protectionismNN andCC antiJJ AmericanismNNP andCC fortressJJ EuropeanismNNP andCC itPRP makesVBZ itPRP mandatoryJJ forIN televisionNN companiesNNS throughoutIN EuropeNNP toTO carryVB 50CD perIN centNN ,"root(ROOT-0, condemned-3) nsubjpass(condemned-3, It-1) auxpass(condemned-3, was-2) case(representative-9, by-4) det(representative-9, the-5) compound(representative-9, United-6) compound(representative-9, States-7) compound(representative-9, Government-8) nmod:agent(condemned-3, representative-9) punct(representative-9, ,-10) compound(Hills-12, Carla-11) appos(representative-9, Hills-12) punct(representative-9, ,-13) mark(one-16, as-14) cop(one-16, being-15) advcl(condemned-3, one-16) case(examples-20, of-17) det(examples-20, the-18) amod(examples-20, worst-19) nmod:of(one-16, examples-20) case(protectionism-22, of-21) nmod:of(examples-20, protectionism-22) cc(protectionism-22, and-23) amod(Americanism-25, anti-24) nmod:of(examples-20, Americanism-25) conj:and(protectionism-22, Americanism-25) cc(protectionism-22, and-26) compound(Europeanism-28, fortress-27) nmod:of(examples-20, Europeanism-28) conj:and(protectionism-22, Europeanism-28) punct(condemned-3, ,-29) cc(condemned-3, and-30) nsubj(makes-32, it-31) conj:and(condemned-3, makes-32) dobj(makes-32, it-33) acl(it-33, mandatory-34) case(companies-37, for-35) compound(companies-37, television-36) nmod:for(mandatory-34, companies-37) case(Europe-39, throughout-38) nmod:throughout(mandatory-34, Europe-39) mark(carry-41, to-40) xcomp(mandatory-34, carry-41) dobj(carry-41, 50-42) case(cent-44, per-43) nmod:per(50-42, cent-44) punct(condemned-3, .-45)",0,0,0,"root(ROOT, condemned) nsbjpass(condemned, It) axpass(condemned, was) case(representative, by) det(representative, the) compond(representative, United) compond(representative, States) compond(representative, Government) nmod:agent(condemned, representative) pnct(representative, ,) compond(Hills, Carla) appos(representative, Hills) pnct(representative, ,) mark(one, as) cop(one, being) advcl(condemned, one) case(examples, of) det(examples, the) amod(examples, worst) nmod:of(one, examples) case(protectionism, of) nmod:of(examples, protectionism) cc(protectionism, and) amod(Americanism, anti) nmod:of(examples, Americanism) conj:and(protectionism, Americanism) cc(protectionism, and) compond(Eropeanism, fortress) nmod:of(examples, Eropeanism) conj:and(protectionism, Eropeanism) pnct(condemned, ,) cc(condemned, and) nsbj(makes, it) conj:and(condemned, makes) dobj(makes, it) acl(it, mandatory) case(companies, for) compond(companies, television) nmod:for(mandatory, companies) case(Erope, throghot) nmod:throghot(mandatory, Erope) mark(carry, to) xcomp(mandatory, carry) dobj(carry, 50) case(cent, per) nmod:per(50, cent) pnct(condemned, .)","root(,VBN) nsbjpass(VBN,PRP) axpass(VBN,VBD) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NNPS) compond(NN,NNP) nmod:agent(VBN,NN) pnct(NN,NN) compond(NNP,NNP) appos(NN,NNP) pnct(NN,NN) mark(CD,IN) cop(CD,VBG) advcl(VBN,CD) case(NNS,IN) det(NNS,DT) amod(NNS,JJS) nmod:of(CD,NNS) case(NN,IN) nmod:of(NNS,NN) cc(NN,CC) amod(NNP,JJ) nmod:of(NNS,NNP) conj:and(NN,NNP) cc(NN,CC) compond(NNP,JJ) nmod:of(NNS,NNP) conj:and(NN,NNP) pnct(VBN,VBN) cc(VBN,CC) nsbj(VBZ,PRP) conj:and(VBN,VBZ) dobj(VBZ,PRP) acl(PRP,JJ) case(NNS,IN) compond(NNS,NN) nmod:for(JJ,NNS) case(NNP,IN) nmod:throghot(JJ,NNP) mark(VB,TO) xcomp(JJ,VB) dobj(VB,CD) case(NN,IN) nmod:per(CD,NN) pnct(VBN,VBN)","[Hills, condemned, representative]",[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of European content.,ofIN EuropeanJJ contentNN ,"root(ROOT-0, content-3) case(content-3, of-1) amod(content-3, European-2) punct(content-3, .-4)",0,0,0,"root(ROOT, content) case(content, of) amod(content, Eropean) pnct(content, .)","root(,NN) case(NN,IN) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
This has nothing to do with the single market.,ThisDT hasVBZ nothingNN toTO doVB withIN theDT singleJJ marketNN ,"root(ROOT-0, has-2) nsubj(has-2, This-1) dobj(has-2, nothing-3) mark(do-5, to-4) acl(nothing-3, do-5) case(market-9, with-6) det(market-9, the-7) amod(market-9, single-8) nmod:with(do-5, market-9) punct(has-2, .-10)",0,0,1,"root(ROOT, has) nsbj(has, This) dobj(has, nothing) mark(do, to) acl(nothing, do) case(market, with) det(market, the) amod(market, single) nmod:with(do, market) pnct(has, .)","root(,VBZ) nsbj(VBZ,DT) dobj(VBZ,NN) mark(VB,TO) acl(NN,VB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(VB,NN) pnct(VBZ,VBZ)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I can remember discussing this matter with my hon. Friend on another occasion when I was in my previous role.,IPRP canMD rememberVB discussingVBG thisDT matterNN withIN myPRP$ honNN FriendNNP onIN anotherDT occasionNN whenWRB IPRP wasVBD inIN myPRP$ previousJJ roleNN ,"root(ROOT-0, remember-3) nsubj(remember-3, I-1) aux(remember-3, can-2) xcomp(remember-3, discussing-4) det(matter-6, this-5) dobj(discussing-4, matter-6) case(Friend-10, with-7) nmod:poss(Friend-10, my-8) compound(Friend-10, hon.-9) nmod:with(discussing-4, Friend-10) case(occasion-13, on-11) det(occasion-13, another-12) nmod:on(Friend-10, occasion-13) advmod(role-20, when-14) nsubj(role-20, I-15) cop(role-20, was-16) case(role-20, in-17) nmod:poss(role-20, my-18) amod(role-20, previous-19) advcl:in(discussing-4, role-20) punct(remember-3, .-21)",0,1,0,"root(ROOT, remember) nsbj(remember, I) ax(remember, can) xcomp(remember, discssing) det(matter, this) dobj(discssing, matter) case(Friend, with) nmod:poss(Friend, my) compond(Friend, hon.) nmod:with(discssing, Friend) case(occasion, on) det(occasion, another) nmod:on(Friend, occasion) advmod(role, when) nsbj(role, I) cop(role, was) case(role, in) nmod:poss(role, my) amod(role, previos) advcl:in(discssing, role) pnct(remember, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) xcomp(VB,VBG) det(NN,DT) dobj(VBG,NN) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:with(VBG,NNP) case(NN,IN) det(NN,DT) nmod:on(NNP,NN) advmod(NN,WRB) nsbj(NN,PRP) cop(NN,VBD) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) advcl:in(VBG,NN) pnct(VB,VB)","[Friend, discussing, matter, remember, role, occasion, my]","[Friend, discussing, matter, remember, role, occasion, my]",11,"[Friend, discussing, matter, remember, role, occasion, my]","[Friend, discussing, matter, remember, role, occasion, my]",NNP_Friend VBG_discussing NN_matter VB_remember NN_role NN_occasion PRP$_my ,"[Friend, discussing, matter, remember, role, occasion, my]","[Friend, discussing, matter, remember, role, occasion, my]",NNP_Friend VBG_discussing NN_matter VB_remember NN_role NN_occasion PRP$_my ,"[Friend, discussing, matter, remember, role, occasion, my]",NNP_Friend VBG_discussing NN_matter VB_remember NN_role NN_occasion PRP$_my ,"[Friend, discussing, matter, remember, role, occasion, my]",NNP_Friend VBG_discussing NN_matter VB_remember NN_role NN_occasion PRP$_my ,-3,0,1,0,0,0,2,2,2,1
This is an important measure which does have something to do with the single market  because it prevents national Governments from erecting barriers to transfrontier broadcasting.,ThisDT isVBZ anDT importantJJ measureNN whichWDT doesVBZ haveVB somethingNN toTO doVB withIN theDT singleJJ marketNN becauseIN itPRP preventsVBZ nationalJJ GovernmentsNNS fromIN erectingVBG barriersNNS toTO transfrontierVB broadcastingNN ,"root(ROOT-0, measure-5) nsubj(measure-5, This-1) cop(measure-5, is-2) det(measure-5, an-3) amod(measure-5, important-4) nsubj(have-8, which-6) aux(have-8, does-7) acl:relcl(measure-5, have-8) dobj(have-8, something-9) mark(do-11, to-10) acl(something-9, do-11) case(market-15, with-12) det(market-15, the-13) amod(market-15, single-14) nmod:with(do-11, market-15) punct(measure-5, ,-16) mark(prevents-19, because-17) nsubj(prevents-19, it-18) advcl(measure-5, prevents-19) amod(Governments-21, national-20) dobj(prevents-19, Governments-21) case(barriers-24, from-22) amod(barriers-24, erecting-23) nmod:from(prevents-19, barriers-24) case(broadcasting-27, to-25) amod(broadcasting-27, transfrontier-26) nmod:to(barriers-24, broadcasting-27) punct(measure-5, .-28)",0,0,0,"root(ROOT, measre) nsbj(measre, This) cop(measre, is) det(measre, an) amod(measre, important) nsbj(have, which) ax(have, does) acl:relcl(measre, have) dobj(have, something) mark(do, to) acl(something, do) case(market, with) det(market, the) amod(market, single) nmod:with(do, market) pnct(measre, ,) mark(prevents, becase) nsbj(prevents, it) advcl(measre, prevents) amod(Governments, national) dobj(prevents, Governments) case(barriers, from) amod(barriers, erecting) nmod:from(prevents, barriers) case(broadcasting, to) amod(broadcasting, transfrontier) nmod:to(barriers, broadcasting) pnct(measre, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) nsbj(VB,WDT) ax(VB,VBZ) acl:relcl(NN,VB) dobj(VB,NN) mark(VB,TO) acl(NN,VB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(VB,NN) pnct(NN,NN) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(NN,VBZ) amod(NNS,JJ) dobj(VBZ,NNS) case(NNS,IN) amod(NNS,VBG) nmod:from(VBZ,NNS) case(NN,TO) amod(NN,VB) nmod:to(NNS,NN) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is quite an important single market measure.,ItPRP isVBZ quiteRB anDT importantJJ singleJJ marketNN measureNN ,"root(ROOT-0, measure-8) nsubj(measure-8, It-1) cop(measure-8, is-2) advmod(measure-8, quite-3) det(measure-8, an-4) amod(measure-8, important-5) amod(measure-8, single-6) compound(measure-8, market-7) punct(measure-8, .-9)",0,0,0,"root(ROOT, measre) nsbj(measre, It) cop(measre, is) advmod(measre, qite) det(measre, an) amod(measre, important) amod(measre, single) compond(measre, market) pnct(measre, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) advmod(NN,RB) det(NN,DT) amod(NN,JJ) amod(NN,JJ) compond(NN,NN) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The formulation in the directive makes it clear that it is not possible for countries  the European Commission or national Governments to insist in all circumstances that over 50 per cent.,TheDT formulationNN inIN theDT directiveJJ makesVBZ itPRP clearJJ thatIN itPRP isVBZ notRB possibleJJ forIN countriesNNS theDT EuropeanJJ CommissionNNP orCC nationalJJ GovernmentsNNS toTO insistVB inIN allDT circumstancesNNS thatWDT overIN 50CD perIN centNN ,"root(ROOT-0, makes-6) det(formulation-2, The-1) nsubj(makes-6, formulation-2) case(directive-5, in-3) det(directive-5, the-4) nmod:in(formulation-2, directive-5) nsubj(clear-8, it-7) xcomp(makes-6, clear-8) mark(possible-13, that-9) nsubj(possible-13, it-10) cop(possible-13, is-11) neg(possible-13, not-12) ccomp(clear-8, possible-13) case(countries-15, for-14) nmod:for(possible-13, countries-15) punct(makes-6, ,-16) det(Commission-19, the-17) compound(Commission-19, European-18) root(,-16, Commission-19) cc(Commission-19, or-20) amod(Governments-22, national-21) root(,-16, Governments-22) conj:or(Commission-19, Governments-22) mark(insist-24, to-23) acl(Commission-19, insist-24) case(circumstances-27, in-25) det(circumstances-27, all-26) nmod:in(insist-24, circumstances-27) dep(circumstances-27, that-28) case(50-30, over-29) nmod:over(that-28, 50-30) case(cent-32, per-31) nmod:per(50-30, cent-32) punct(Commission-19, .-33)",0,0,0,"root(ROOT, makes) det(formlation, The) nsbj(makes, formlation) case(directive, in) det(directive, the) nmod:in(formlation, directive) nsbj(clear, it) xcomp(makes, clear) mark(possible, that) nsbj(possible, it) cop(possible, is) neg(possible, not) ccomp(clear, possible) case(contries, for) nmod:for(possible, contries) pnct(makes, ,) det(Commission, the) compond(Commission, Eropean) root(,, Commission) cc(Commission, or) amod(Governments, national) root(,, Governments) conj:or(Commission, Governments) mark(insist, to) acl(Commission, insist) case(circmstances, in) det(circmstances, all) nmod:in(insist, circmstances) dep(circmstances, that) case(50, over) nmod:over(that, 50) case(cent, per) nmod:per(50, cent) pnct(Commission, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) case(JJ,IN) det(JJ,DT) nmod:in(NN,JJ) nsbj(JJ,PRP) xcomp(VBZ,JJ) mark(JJ,WDT) nsbj(JJ,PRP) cop(JJ,VBZ) neg(JJ,RB) ccomp(JJ,JJ) case(NNS,IN) nmod:for(JJ,NNS) pnct(VBZ,VBZ) det(NNP,DT) compond(NNP,JJ) root(JJJJNNP) cc(NNP,CC) amod(NNS,JJ) root(JJJJNNS) conj:or(NNP,NNS) mark(VB,TO) acl(NNP,VB) case(NNS,IN) det(NNS,DT) nmod:in(VB,NNS) dep(NNS,WDT) case(CD,IN) nmod:over(WDT,CD) case(NN,IN) nmod:per(CD,NN) pnct(NNP,NNP)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
of the programming is of European content.,ofIN theDT programmingNN isVBZ ofIN EuropeanJJ contentNN ,"root(ROOT-0, content-7) case(programming-3, of-1) det(programming-3, the-2) nmod:of(content-7, programming-3) cop(content-7, is-4) case(content-7, of-5) amod(content-7, European-6) punct(content-7, .-8)",0,0,0,"root(ROOT, content) case(programming, of) det(programming, the) nmod:of(content, programming) cop(content, is) case(content, of) amod(content, Eropean) pnct(content, .)","root(,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) cop(NN,VBZ) case(NN,IN) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The United States Government made representations at a late stage in the discussions and the formulation that was arrived at was much more liberal than that which was proposed originally  to the extent that considerable embarrassment was caused to the French Government.,TheDT UnitedNNP StatesNNPS GovernmentNNP madeVBD representationsNNS atIN aDT lateJJ stageNN inIN theDT discussionsNNS andCC theDT formulationNN thatWDT wasVBD arrivedVBN atIN wasVBD muchRB moreRBR liberalJJ thanIN thatDT whichWDT wasVBD proposedVBN originallyRB toTO theDT extentNN thatIN considerableJJ embarrassmentNN wasVBD causedVBN toTO theDT FrenchJJ GovernmentNNP ,"root(ROOT-0, liberal-24) det(Government-4, The-1) compound(Government-4, United-2) compound(Government-4, States-3) nsubj(made-5, Government-4) csubj(liberal-24, made-5) dobj(made-5, representations-6) case(stage-10, at-7) det(stage-10, a-8) amod(stage-10, late-9) nmod:at(made-5, stage-10) case(discussions-13, in-11) det(discussions-13, the-12) nmod:in(stage-10, discussions-13) cc(discussions-13, and-14) det(formulation-16, the-15) nmod:in(stage-10, formulation-16) conj:and(discussions-13, formulation-16) nsubjpass(arrived-19, that-17) auxpass(arrived-19, was-18) acl:relcl(formulation-16, arrived-19) nmod(arrived-19, at-20) cop(liberal-24, was-21) advmod(liberal-24, much-22) advmod(liberal-24, more-23) case(that-26, than-25) nmod:than(liberal-24, that-26) nsubjpass(proposed-29, which-27) auxpass(proposed-29, was-28) acl:relcl(that-26, proposed-29) advmod(proposed-29, originally-30) punct(liberal-24, ,-31) case(extent-34, to-32) det(extent-34, the-33) nmod:to(liberal-24, extent-34) mark(caused-39, that-35) amod(embarrassment-37, considerable-36) nsubjpass(caused-39, embarrassment-37) auxpass(caused-39, was-38) ccomp(extent-34, caused-39) case(Government-43, to-40) det(Government-43, the-41) amod(Government-43, French-42) nmod:to(caused-39, Government-43) punct(liberal-24, .-44)",0,0,0,"root(ROOT, liberal) det(Government, The) compond(Government, United) compond(Government, States) nsbj(made, Government) csbj(liberal, made) dobj(made, representations) case(stage, at) det(stage, a) amod(stage, late) nmod:at(made, stage) case(discssions, in) det(discssions, the) nmod:in(stage, discssions) cc(discssions, and) det(formlation, the) nmod:in(stage, formlation) conj:and(discssions, formlation) nsbjpass(arrived, that) axpass(arrived, was) acl:relcl(formlation, arrived) nmod(arrived, at) cop(liberal, was) advmod(liberal, mch) advmod(liberal, more) case(that, than) nmod:than(liberal, that) nsbjpass(proposed, which) axpass(proposed, was) acl:relcl(that, proposed) advmod(proposed, originally) pnct(liberal, ,) case(extent, to) det(extent, the) nmod:to(liberal, extent) mark(cased, that) amod(embarrassment, considerable) nsbjpass(cased, embarrassment) axpass(cased, was) ccomp(extent, cased) case(Government, to) det(Government, the) amod(Government, French) nmod:to(cased, Government) pnct(liberal, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNPS) nsbj(VBD,NNP) csbj(JJ,VBD) dobj(VBD,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:at(VBD,NN) case(NNS,IN) det(NNS,DT) nmod:in(NN,NNS) cc(NNS,CC) det(NN,DT) nmod:in(NN,NN) conj:and(NNS,NN) nsbjpass(VBN,IN) axpass(VBN,VBD) acl:relcl(NN,VBN) nmod(VBN,IN) cop(JJ,VBD) advmod(JJ,RB) advmod(JJ,RBR) case(IN,IN) nmod:than(JJ,IN) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(IN,VBN) advmod(VBN,RB) pnct(JJ,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) mark(VBN,IN) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBD) ccomp(NN,VBN) case(NNP,TO) det(NNP,DT) amod(NNP,JJ) nmod:to(VBN,NNP) pnct(JJ,JJ)","[Government, liberal, Government, caused, representations, embarrassment, stage, extent, French, made]",[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
To ask the Secretary of State for Defence what recent assessment he has made of the defence implications of the unification of Germany.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN DefenceNNP whatWP recentJJ assessmentNN hePRP hasVBZ madeVBN ofIN theDT defenceNN implicationsNNS ofIN theDT unificationNN ofIN GermanyNNP ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Defence-8, for-7) nmod:for(Secretary-4, Defence-8) det(assessment-11, what-9) amod(assessment-11, recent-10) dobj(made-14, assessment-11) nsubj(made-14, he-12) aux(made-14, has-13) acl:relcl(Defence-8, made-14) case(implications-18, of-15) det(implications-18, the-16) compound(implications-18, defence-17) nmod:of(made-14, implications-18) case(unification-21, of-19) det(unification-21, the-20) nmod:of(implications-18, unification-21) case(Germany-23, of-22) nmod:of(unification-21, Germany-23) punct(ask-2, .-24)",0,1,1,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Defence, for) nmod:for(Secretary, Defence) det(assessment, what) amod(assessment, recent) dobj(made, assessment) nsbj(made, he) ax(made, has) acl:relcl(Defence, made) case(implications, of) det(implications, the) compond(implications, defence) nmod:of(made, implications) case(nification, of) det(nification, the) nmod:of(implications, nification) case(Germany, of) nmod:of(nification, Germany) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) det(NN,WP) amod(NN,JJ) dobj(VBN,NN) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NNP,VBN) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:of(VBN,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(VB,VB)","[ask, assessment, State, he, Secretary, Defence, implications, made, ROOT]","[ask, assessment, State, he, Secretary, Defence, implications, made, ROOT]",1,"[Defence, ask, ROOT, made, State, Secretary]","[Defence, ask, ROOT, made, State, Secretary]",VB_ask NN_assessment NNP_State PRP_he NNP_Secretary NNP_Defence NNS_implications VBN_made ,"[ask, assessment, State, he, Secretary, Defence, implications, made, ROOT]","[ask, assessment, State, he, Secretary, Defence, implications, made, ROOT]",VB_ask NN_assessment NNP_State PRP_he NNP_Secretary NNP_Defence NNS_implications VBN_made ,"[ask, assessment, State, he, Secretary, Defence, implications, made, ROOT]",VB_ask NN_assessment NNP_State PRP_he NNP_Secretary NNP_Defence NNS_implications VBN_made ,"[ask, assessment, State, he, Secretary, Defence, implications, made, ROOT]",VB_ask NN_assessment NNP_State PRP_he NNP_Secretary NNP_Defence NNS_implications VBN_made ,-3,0,2,0,0,0,0,0,0,0
We strongly support the Federal German Government's expressed wish that a unified Germany should be a member of the NATO Alliance.,WePRP stronglyRB supportVB theDT FederalJJ GermanJJ GovernmentNNP 'sPOS expressedJJ wishNN thatIN aDT unifiedJJ GermanyNNP shouldMD beVB aDT memberNN ofIN theDT NATONNP AllianceNNP ,"root(ROOT-0, support-3) nsubj(support-3, We-1) advmod(support-3, strongly-2) det(Government-7, the-4) amod(Government-7, Federal-5) amod(Government-7, German-6) nmod:poss(wish-10, Government-7) case(Government-7, 's-8) amod(wish-10, expressed-9) dobj(support-3, wish-10) mark(member-18, that-11) det(Germany-14, a-12) amod(Germany-14, unified-13) nsubj(member-18, Germany-14) aux(member-18, should-15) cop(member-18, be-16) det(member-18, a-17) ccomp(wish-10, member-18) case(Alliance-22, of-19) det(Alliance-22, the-20) compound(Alliance-22, NATO-21) nmod:of(member-18, Alliance-22) punct(support-3, .-23)",0,1,0,"root(ROOT, spport) nsbj(spport, We) advmod(spport, strongly) det(Government, the) amod(Government, Federal) amod(Government, German) nmod:poss(wish, Government) ""case(Government, s)"", amod(wish, expressed) dobj(spport, wish) mark(member, that) det(Germany, a) amod(Germany, nified) nsbj(member, Germany) ax(member, shold) cop(member, be) det(member, a) ccomp(wish, member) case(Alliance, of) det(Alliance, the) compond(Alliance, NATO) nmod:of(member, Alliance) pnct(spport, .)","root(,VB) nsbj(VB,PRP) advmod(VB,RB) det(NNP,DT) amod(NNP,JJ) amod(NNP,JJ) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) dobj(VB,NN) mark(NN,IN) det(NNP,DT) amod(NNP,JJ) nsbj(NN,NNP) ax(NN,MD) cop(NN,VB) det(NN,DT) ccomp(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VB,VB)","[support, Government, expressed, German, Federal, wish, member]",[ ],1,[ ],[ ],[],[ ],"[support, Government, expressed, German, Federal, wish, member]",NN_support NNP_Government VBN_expressed JJ_German JJ_Federal VBP_wish NN_member ,"[support, Government, expressed, German, Federal, wish, member]",NN_support NNP_Government VBN_expressed JJ_German JJ_Federal VBP_wish NN_member ,"[support, Government, expressed, German, Federal, wish, member]",NN_support NNP_Government VBN_expressed JJ_German JJ_Federal VBP_wish NN_member ,-3,0,2,1,1,1,1,1,1,2
Consultations on the security implications of unification will continue within NATO and between the four powers and the two Germanys.,ConsultationsNNS onIN theDT securityNN implicationsNNS ofIN unificationNN willMD continueVB withinIN NATONNP andCC betweenIN theDT fourCD powersNNS andCC theDT twoCD GermanysNNP ,"root(ROOT-0, continue-9) nsubj(continue-9, Consultations-1) case(implications-5, on-2) det(implications-5, the-3) compound(implications-5, security-4) nmod:on(Consultations-1, implications-5) case(unification-7, of-6) nmod:of(implications-5, unification-7) aux(continue-9, will-8) case(NATO-11, within-10) nmod:within(continue-9, NATO-11) cc(continue-9, and-12) case(powers-16, between-13) det(powers-16, the-14) nummod(powers-16, four-15) conj:and(continue-9, powers-16) cc(powers-16, and-17) det(Germanys-20, the-18) nummod(Germanys-20, two-19) conj:and(continue-9, Germanys-20) conj:and(powers-16, Germanys-20) punct(continue-9, .-21)",0,0,1,"root(ROOT, contine) nsbj(contine, Consltations) case(implications, on) det(implications, the) compond(implications, secrity) nmod:on(Consltations, implications) case(nification, of) nmod:of(implications, nification) ax(contine, will) case(NATO, within) nmod:within(contine, NATO) cc(contine, and) case(powers, between) det(powers, the) nmmod(powers, for) conj:and(contine, powers) cc(powers, and) det(Germanys, the) nmmod(Germanys, two) conj:and(contine, Germanys) conj:and(powers, Germanys) pnct(contine, .)","root(,VB) nsbj(VB,NNS) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:on(NNS,NNS) case(NN,IN) nmod:of(NNS,NN) ax(VB,MD) case(NNP,IN) nmod:within(VB,NNP) cc(VB,CC) case(NNS,IN) det(NNS,DT) nmmod(NNS,CD) conj:and(VB,NNS) cc(NNS,CC) det(NNP,DT) nmmod(NNP,CD) conj:and(VB,NNP) conj:and(NNS,NNP) pnct(VB,VB)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Whence comes the threat requiring us to insist that a united Germany be incorporated in NATO from Albania?,WhenceNN comesVBZ theDT threatNN requiringVBG usPRP toTO insistVB thatIN aDT unitedJJ GermanyNNP beVB incorporatedVBN inIN NATONNP fromIN AlbaniaNNP ,"root(ROOT-0, comes-2) nsubj(comes-2, Whence-1) det(threat-4, the-3) dobj(comes-2, threat-4) acl(threat-4, requiring-5) dobj(requiring-5, us-6) mark(insist-8, to-7) xcomp(requiring-5, insist-8) mark(incorporated-14, that-9) det(Germany-12, a-10) amod(Germany-12, united-11) nsubjpass(incorporated-14, Germany-12) auxpass(incorporated-14, be-13) ccomp(insist-8, incorporated-14) case(NATO-16, in-15) nmod:in(incorporated-14, NATO-16) case(Albania-18, from-17) nmod:from(incorporated-14, Albania-18) punct(comes-2, ?-19)",0,1,1,"root(ROOT, comes) nsbj(comes, Whence) det(threat, the) dobj(comes, threat) acl(threat, reqiring) dobj(reqiring, s) mark(insist, to) xcomp(reqiring, insist) mark(incorporated, that) det(Germany, a) amod(Germany, nited) nsbjpass(incorporated, Germany) axpass(incorporated, be) ccomp(insist, incorporated) case(NATO, in) nmod:in(incorporated, NATO) case(Albania, from) nmod:from(incorporated, Albania) pnct(comes, ?)","root(,VBZ) nsbj(VBZ,NN) det(NN,DT) dobj(VBZ,NN) acl(NN,VBG) dobj(VBG,PRP) mark(VB,TO) xcomp(VBG,VB) mark(VBN,IN) det(NNP,DT) amod(NNP,JJ) nsbjpass(VBN,NNP) axpass(VBN,VB) ccomp(VB,VBN) case(NNP,IN) nmod:in(VBN,NNP) case(NNP,IN) nmod:from(VBN,NNP) pnct(VBZ,VBZ)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We shall move forward  carefully analysing the options that exist and then decide sensibly  in the light of a more certain forecast  what the opportunities should be.,WePRP shallMD moveVB forwardRB carefullyRB analysingVBG theDT optionsNNS thatWDT existVBP andCC thenRB decideVB sensiblyRB inIN theDT lightNN ofIN aDT moreRBR certainJJ forecastNN whatWP theDT opportunitiesNNS shouldMD beVB ,"root(ROOT-0, move-3) nsubj(move-3, We-1) aux(move-3, shall-2) advmod(move-3, forward-4) punct(move-3, ,-5) advmod(analysing-7, carefully-6) xcomp(move-3, analysing-7) det(options-9, the-8) dobj(analysing-7, options-9) nsubj(exist-11, that-10) nsubj(decide-14, that-10) acl:relcl(options-9, exist-11) cc(exist-11, and-12) advmod(decide-14, then-13) acl:relcl(options-9, decide-14) conj:and(exist-11, decide-14) advmod(decide-14, sensibly-15) punct(move-3, ,-16) case(light-19, in-17) det(light-19, the-18) nmod:in(move-3, light-19) case(forecast-24, of-20) det(forecast-24, a-21) advmod(certain-23, more-22) amod(forecast-24, certain-23) nmod:of(light-19, forecast-24) punct(move-3, ,-25) dobj(be-30, what-26) det(opportunities-28, the-27) nsubj(be-30, opportunities-28) aux(be-30, should-29) ccomp(move-3, be-30) punct(move-3, .-31)",0,0,0,"root(ROOT, move) nsbj(move, We) ax(move, shall) advmod(move, forward) pnct(move, ,) advmod(analysing, careflly) xcomp(move, analysing) det(options, the) dobj(analysing, options) nsbj(exist, that) nsbj(decide, that) acl:relcl(options, exist) cc(exist, and) advmod(decide, then) acl:relcl(options, decide) conj:and(exist, decide) advmod(decide, sensibly) pnct(move, ,) case(light, in) det(light, the) nmod:in(move, light) case(forecast, of) det(forecast, a) advmod(certain, more) amod(forecast, certain) nmod:of(light, forecast) pnct(move, ,) dobj(be, what) det(opportnities, the) nsbj(be, opportnities) ax(be, shold) ccomp(move, be) pnct(move, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) pnct(VB,VB) advmod(VBG,RB) xcomp(VB,VBG) det(NNS,DT) dobj(VBG,NNS) nsbj(VBP,WDT) nsbj(VB,WDT) acl:relcl(NNS,VBP) cc(VBP,CC) advmod(VB,RB) acl:relcl(NNS,VB) conj:and(VBP,VB) advmod(VB,RB) pnct(VB,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) case(NN,IN) det(NN,DT) advmod(JJ,RBR) amod(NN,JJ) nmod:of(NN,NN) pnct(VB,VB) dobj(VB,WP) det(NNS,DT) nsbj(VB,NNS) ax(VB,MD) ccomp(VB,VB) pnct(VB,VB)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The NATO defensive strategy of flexible response and of forward defence has been a key element in assuring the strength of the West and it will probably see the total collapse of the Warsaw pact.,TheDT NATONNP defensiveJJ strategyNN ofIN flexibleJJ responseNN andCC ofIN forwardNN defenceNN hasVBZ beenVBN aDT keyJJ elementNN inIN assuringVBG theDT strengthNN ofIN theDT WestNNP andCC itPRP willMD probablyRB seeVB theDT totalJJ collapseNN ofIN theDT WarsawNNP pactNN ,"root(ROOT-0, element-16) det(strategy-4, The-1) compound(strategy-4, NATO-2) compound(strategy-4, defensive-3) nsubj(element-16, strategy-4) conj:and(strategy-4, strategy-4'') nsubj(element-16, strategy-4'') case(response-7, of-5) amod(response-7, flexible-6) nmod:of(strategy-4, response-7) cc(strategy-4, and-8) case(defence-11, of-9) amod(defence-11, forward-10) nmod:of(strategy-4'', defence-11) aux(element-16, has-12) cop(element-16, been-13) det(element-16, a-14) amod(element-16, key-15) mark(assuring-18, in-17) acl(element-16, assuring-18) det(strength-20, the-19) dobj(assuring-18, strength-20) case(West-23, of-21) det(West-23, the-22) nmod:of(strength-20, West-23) cc(assuring-18, and-24) nsubj(see-28, it-25) aux(see-28, will-26) advmod(see-28, probably-27) acl(element-16, see-28) conj:and(assuring-18, see-28) det(collapse-31, the-29) amod(collapse-31, total-30) dobj(see-28, collapse-31) case(pact-35, of-32) det(pact-35, the-33) compound(pact-35, Warsaw-34) nmod:of(collapse-31, pact-35) punct(element-16, .-36)",0,1,0,"root(ROOT, element) det(strategy, The) compond(strategy, NATO) compond(strategy, defensive) nsbj(element, strategy) conj:and(strategy, strategy) nsbj(element, strategy) case(response, of) amod(response, flexible) nmod:of(strategy, response) cc(strategy, and) case(defence, of) amod(defence, forward) nmod:of(strategy, defence) ax(element, has) cop(element, been) det(element, a) amod(element, key) mark(assring, in) acl(element, assring) det(strength, the) dobj(assring, strength) case(West, of) det(West, the) nmod:of(strength, West) cc(assring, and) nsbj(see, it) ax(see, will) advmod(see, probably) acl(element, see) conj:and(assring, see) det(collapse, the) amod(collapse, total) dobj(see, collapse) case(pact, of) det(pact, the) compond(pact, Warsaw) nmod:of(collapse, pact) pnct(element, .)","root(,NN) det(NN,DT) compond(NN,NNP) compond(NN,JJ) nsbj(NN,NN) conj:and(NN,NN) nsbj(NN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) cc(NN,CC) case(NN,IN) amod(NN,NN) nmod:of(NN,NN) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) amod(NN,JJ) mark(VBG,IN) acl(NN,VBG) det(NN,DT) dobj(VBG,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) cc(VBG,CC) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) acl(NN,VB) conj:and(VBG,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:of(NN,NN) pnct(NN,NN)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The worst thing that we could do would be to dismantle our defences and strategies at the very moment when the future is unclear.,TheDT worstJJS thingNN thatIN wePRP couldMD doVB wouldMD beVB toTO dismantleVB ourPRP$ defencesNNS andCC strategiesNNS atIN theDT veryRB momentNN whenWRB theDT futureNN isVBZ unclearJJ ,"root(ROOT-0, be-9) det(thing-3, The-1) amod(thing-3, worst-2) nsubj(be-9, thing-3) dobj(do-7, that-4) nsubj(do-7, we-5) aux(do-7, could-6) acl:relcl(thing-3, do-7) aux(be-9, would-8) mark(dismantle-11, to-10) xcomp(be-9, dismantle-11) nmod:poss(defences-13, our-12) dobj(dismantle-11, defences-13) cc(defences-13, and-14) dobj(dismantle-11, strategies-15) conj:and(defences-13, strategies-15) case(moment-19, at-16) det(moment-19, the-17) amod(moment-19, very-18) nmod:at(dismantle-11, moment-19) advmod(unclear-24, when-20) det(future-22, the-21) nsubj(unclear-24, future-22) cop(unclear-24, is-23) acl:relcl(moment-19, unclear-24) punct(be-9, .-25)",0,0,1,"root(ROOT, be) det(thing, The) amod(thing, worst) nsbj(be, thing) dobj(do, that) nsbj(do, we) ax(do, cold) acl:relcl(thing, do) ax(be, wold) mark(dismantle, to) xcomp(be, dismantle) nmod:poss(defences, or) dobj(dismantle, defences) cc(defences, and) dobj(dismantle, strategies) conj:and(defences, strategies) case(moment, at) det(moment, the) amod(moment, very) nmod:at(dismantle, moment) advmod(nclear, when) det(ftre, the) nsbj(nclear, ftre) cop(nclear, is) acl:relcl(moment, nclear) pnct(be, .)","root(,VB) det(NN,DT) amod(NN,JJS) nsbj(VB,NN) VBbj(VB,IN) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) ax(VB,MD) mark(VB,TO) xcomp(VB,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) cc(NNS,CC) dobj(VB,NNS) conj:and(NNS,NNS) case(NN,IN) det(NN,DT) amod(NN,RB) nmod:at(VB,NN) advmod(JJ,WRB) det(NN,DT) nsbj(JJ,NN) cop(JJ,VBZ) acl:relcl(NN,JJ) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my right hon. Friend agree that whatever may happen in terms of the unification of Germany  the one thing that our armed forces will require in the future is versatility?,DoesNNP myPRP$ rightJJ honNN FriendNNP agreeVBZ thatIN whateverWDT mayMD happenVB inIN termsNNS ofIN theDT unificationNN ofIN GermanyNNP theDT oneCD thingNN thatWDT ourPRP$ armedJJ forcesNNS willMD requireVB inIN theDT futureNN isVBZ versatilityNN ,"root(ROOT-0, agree-6) aux(agree-6, Does-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(agree-6, Friend-5) mark(happen-10, that-7) nsubj(happen-10, whatever-8) aux(happen-10, may-9) ccomp(agree-6, happen-10) case(terms-12, in-11) nmod:in(happen-10, terms-12) case(unification-15, of-13) det(unification-15, the-14) nmod:of(terms-12, unification-15) case(Germany-17, of-16) nmod:of(unification-15, Germany-17) punct(happen-10, ,-18) det(thing-21, the-19) nummod(thing-21, one-20) nsubj(versatility-32, thing-21) dobj(require-27, that-22) nmod:poss(forces-25, our-23) amod(forces-25, armed-24) nsubj(require-27, forces-25) aux(require-27, will-26) acl:relcl(thing-21, require-27) case(future-30, in-28) det(future-30, the-29) nmod:in(require-27, future-30) cop(versatility-32, is-31) parataxis(happen-10, versatility-32) punct(agree-6, ?-33)",0,0,0,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(agree, Friend) mark(happen, that) nsbj(happen, whatever) ax(happen, may) ccomp(agree, happen) case(terms, in) nmod:in(happen, terms) case(nification, of) det(nification, the) nmod:of(terms, nification) case(Germany, of) nmod:of(nification, Germany) pnct(happen, ,) det(thing, the) nmmod(thing, one) nsbj(versatility, thing) dobj(reqire, that) nmod:poss(forces, or) amod(forces, armed) nsbj(reqire, forces) ax(reqire, will) acl:relcl(thing, reqire) case(ftre, in) det(ftre, the) nmod:in(reqire, ftre) cop(versatility, is) parataxis(happen, versatility) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VB,WDT) nsbj(VB,WDT) ax(VB,MD) ccomp(VBZ,VB) case(NNS,IN) nmod:in(VB,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(VB,VB) det(NN,DT) nmmod(NN,CD) nsbj(NN,NN) dobj(VB,WDT) nmod:poss(NNS,PRP$) amod(NNS,JJ) nsbj(VB,NNS) ax(VB,MD) acl:relcl(NN,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) cop(NN,VBZ) parataxis(VB,NN) pnct(VBZ,VBZ)","[Friend, my, happen, right, agree, ROOT]","[ROOT, Friend, my, agree, happen]",6,[ ],[ ],NNP_Friend PRP$_my VB_agree VB_happen ,"[ROOT, Friend, my, agree, happen]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Is that versatility better provided by the helicopter or the tank?,IsVBZ thatDT versatilityNN betterRB providedVBN byIN theDT helicopterNN orCC theDT tankNN ,"root(ROOT-0, Is-1) nsubj(Is-1, that-2) root(that-2, versatility-3) advmod(provided-5, better-4) acl(versatility-3, provided-5) case(helicopter-8, by-6) det(helicopter-8, the-7) nmod:by(provided-5, helicopter-8) cc(helicopter-8, or-9) det(tank-11, the-10) nmod:by(provided-5, tank-11) conj:or(helicopter-8, tank-11) punct(versatility-3, ?-12)",0,0,1,"root(ROOT, Is) nsbj(Is, that) root(that, versatility) advmod(provided, better) acl(versatility, provided) case(helicopter, by) det(helicopter, the) nmod:by(provided, helicopter) cc(helicopter, or) det(tank, the) nmod:by(provided, tank) conj:or(helicopter, tank) pnct(versatility, ?)","root(,VBZ) nsbj(VBZ,DT) root(DT,NN) advmod(VBN,RB) acl(NN,VBN) case(NN,IN) det(NN,DT) nmod:by(VBN,NN) cc(NN,CC) det(NN,DT) nmod:by(VBN,NN) conj:or(NN,NN) pnct(NN,NN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my right hon. Friend agree that the economic implications of the unification of Germany are rather more important than the defence ones?,DoesNNP myPRP$ rightJJ honNN FriendNNP agreeVBZ thatIN theDT economicJJ implicationsNNS ofIN theDT unificationNN ofIN GermanyNNP areVBP ratherRB moreRBR importantJJ thanIN theDT defenceNN onesNNS ,"root(ROOT-0, agree-6) aux(agree-6, Does-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(agree-6, Friend-5) mark(important-19, that-7) det(implications-10, the-8) amod(implications-10, economic-9) nsubj(important-19, implications-10) case(unification-13, of-11) det(unification-13, the-12) nmod:of(implications-10, unification-13) case(Germany-15, of-14) nmod:of(unification-13, Germany-15) cop(important-19, are-16) advmod(important-19, rather-17) advmod(important-19, more-18) ccomp(agree-6, important-19) case(ones-23, than-20) det(ones-23, the-21) compound(ones-23, defence-22) nmod:than(important-19, ones-23) punct(agree-6, ?-24)",0,1,0,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(agree, Friend) mark(important, that) det(implications, the) amod(implications, economic) nsbj(important, implications) case(nification, of) det(nification, the) nmod:of(implications, nification) case(Germany, of) nmod:of(nification, Germany) cop(important, are) advmod(important, rather) advmod(important, more) ccomp(agree, important) case(ones, than) det(ones, the) compond(ones, defence) nmod:than(important, ones) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(JJ,IN) det(NNS,DT) amod(NNS,JJ) nsbj(JJ,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) cop(JJ,VBP) advmod(JJ,RB) advmod(JJ,RBR) ccomp(VBZ,JJ) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:than(JJ,NNS) pnct(VBZ,VBZ)","[Friend, my, ROOT, right, important, agree]","[ROOT, Friend, my, important, agree]",7,[ ],[ ],NNP_Friend PRP$_my JJ_important VB_agree ,"[ROOT, Friend, my, important, agree]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Should not British business men be more worried than British generals?,ShouldMD notRB BritishVB businessNN menNNS beVB moreRBR worriedJJ thanIN BritishJJ generalsNNS ,"root(ROOT-0, worried-8) aux(worried-8, Should-1) neg(men-5, not-2) amod(men-5, British-3) compound(men-5, business-4) nsubj(worried-8, men-5) cop(worried-8, be-6) advmod(worried-8, more-7) case(generals-11, than-9) amod(generals-11, British-10) nmod:than(worried-8, generals-11) punct(worried-8, ?-12)",0,0,1,"root(ROOT, worried) ax(worried, Shold) neg(men, not) amod(men, British) compond(men, bsiness) nsbj(worried, men) cop(worried, be) advmod(worried, more) case(generals, than) amod(generals, British) nmod:than(worried, generals) pnct(worried, ?)","root(,JJ) ax(JJ,MD) neg(NNS,RB) amod(NNS,JJ) compond(NNS,NN) nsbj(JJ,NNS) cop(JJ,VB) advmod(JJ,RBR) case(NNS,IN) amod(NNS,JJ) nmod:than(JJ,NNS) pnct(JJ,JJ)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
That question goes a little wider than my immediate subject here today  but the implications are substantial.,ThatDT questionNN goesVBZ aDT littleJJ widerNN thanIN myPRP$ immediateJJ subjectNN hereRB todayNN butCC theDT implicationsNNS areVBP substantialJJ ,"root(ROOT-0, goes-3) det(question-2, That-1) nsubj(goes-3, question-2) det(little-5, a-4) nmod:npmod(wider-6, little-5) advmod(goes-3, wider-6) case(subject-10, than-7) nmod:poss(subject-10, my-8) amod(subject-10, immediate-9) nmod:than(wider-6, subject-10) advmod(subject-10, here-11) nmod:tmod(subject-10, today-12) punct(goes-3, ,-13) cc(goes-3, but-14) det(implications-16, the-15) nsubj(substantial-18, implications-16) cop(substantial-18, are-17) conj:but(goes-3, substantial-18) punct(goes-3, .-19)",0,0,0,"root(ROOT, goes) det(qestion, That) nsbj(goes, qestion) det(little, a) nmod:npmod(wider, little) advmod(goes, wider) case(sbject, than) nmod:poss(sbject, my) amod(sbject, immediate) nmod:than(wider, sbject) advmod(sbject, here) nmod:tmod(sbject, today) pnct(goes, ,) cc(goes, bt) det(implications, the) nsbj(sbstantial, implications) cop(sbstantial, are) conj:bt(goes, sbstantial) pnct(goes, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) det(JJ,DT) nmod:npmod(NN,JJ) advmod(VBZ,NN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:than(NN,NN) advmod(NN,RB) nmod:tmod(NN,NN) pnct(VBZ,VBZ) cc(VBZ,CC) det(NNS,DT) nsbj(JJ,NNS) cop(JJ,VBP) conj:bt(VBZ,JJ) pnct(VBZ,VBZ)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We welcome the unification of Germany self determination is a fundamental principle of NATO  for which it has stood for 40 years but it obviously raises issues that must be addressed.,WePRP welcomeVBP theDT unificationNN ofIN GermanyNNP selfPOS determinationNN isVBZ aDT fundamentalJJ principleNN ofIN NATONNP forIN whichWDT itPRP hasVBZ stoodVBN forIN 40CD yearsNNS butCC itPRP obviouslyRB raisesVBZ issuesNNS thatWDT mustMD beVB addressedVBN ,"root(ROOT-0, principle-12) nsubj(welcome-2, We-1) csubj(principle-12, welcome-2) det(unification-4, the-3) dobj(welcome-2, unification-4) case(determination-8, of-5) compound(determination-8, Germany-6) compound(determination-8, self-7) nmod:of(unification-4, determination-8) cop(principle-12, is-9) det(principle-12, a-10) amod(principle-12, fundamental-11) case(NATO-14, of-13) nmod:of(principle-12, NATO-14) punct(NATO-14, ,-15) case(which-17, for-16) nmod:for(stood-20, which-17) nsubj(stood-20, it-18) aux(stood-20, has-19) acl:relcl(NATO-14, stood-20) case(years-23, for-21) nummod(years-23, 40-22) nmod:for(stood-20, years-23) cc(stood-20, but-24) nsubj(raises-27, it-25) advmod(raises-27, obviously-26) acl:relcl(NATO-14, raises-27) conj:but(stood-20, raises-27) dobj(raises-27, issues-28) nsubjpass(addressed-32, that-29) aux(addressed-32, must-30) auxpass(addressed-32, be-31) acl:relcl(issues-28, addressed-32) punct(principle-12, .-33)",0,0,0,"root(ROOT, principle) nsbj(welcome, We) csbj(principle, welcome) det(nification, the) dobj(welcome, nification) case(determination, of) compond(determination, Germany) compond(determination, self) nmod:of(nification, determination) cop(principle, is) det(principle, a) amod(principle, fndamental) case(NATO, of) nmod:of(principle, NATO) pnct(NATO, ,) case(which, for) nmod:for(stood, which) nsbj(stood, it) ax(stood, has) acl:relcl(NATO, stood) case(years, for) nmmod(years, 40) nmod:for(stood, years) cc(stood, bt) nsbj(raises, it) advmod(raises, obviosly) acl:relcl(NATO, raises) conj:bt(stood, raises) dobj(raises, isses) nsbjpass(addressed, that) ax(addressed, mst) axpass(addressed, be) acl:relcl(isses, addressed) pnct(principle, .)","root(,NN) nsbj(VBP,PRP) csbj(NN,VBP) det(NN,DT) dobj(VBP,NN) case(NN,IN) compond(NN,NNP) compond(NN,POS) nmod:of(NN,NN) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) case(NNP,IN) nmod:of(NN,NNP) pnct(NNP,NNP) case(WDT,IN) nmod:for(VBN,WDT) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NNP,VBN) case(NNS,IN) nmmod(NNS,CD) nmod:for(VBN,NNS) cc(VBN,CC) nsbj(VBZ,PRP) advmod(VBZ,RB) acl:relcl(NNP,VBZ) conj:bt(VBN,VBZ) dobj(VBZ,NNS) nsbjpass(VBN,WDT) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NNS,VBN) pnct(NN,NN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Unification is more likely to be successful and harmonious if we have addressed those issues properly and sensibly.,UnificationNN isVBZ moreRBR likelyJJ toTO beVB successfulJJ andCC harmoniousJJ ifIN wePRP haveVBP addressedVBN thoseDT issuesNNS properlyRB andCC sensiblyRB ,"root(ROOT-0, likely-4) nsubj(likely-4, Unification-1) cop(likely-4, is-2) advmod(likely-4, more-3) mark(successful-7, to-5) cop(successful-7, be-6) xcomp(likely-4, successful-7) cc(successful-7, and-8) xcomp(likely-4, harmonious-9) conj:and(successful-7, harmonious-9) mark(addressed-13, if-10) nsubj(addressed-13, we-11) aux(addressed-13, have-12) advcl(likely-4, addressed-13) det(issues-15, those-14) dobj(addressed-13, issues-15) advmod(addressed-13, properly-16) cc(addressed-13, and-17) advcl(likely-4, sensibly-18) conj:and(addressed-13, sensibly-18) punct(likely-4, .-19)",0,0,1,"root(ROOT, likely) nsbj(likely, Unification) cop(likely, is) advmod(likely, more) mark(sccessfl, to) cop(sccessfl, be) xcomp(likely, sccessfl) cc(sccessfl, and) xcomp(likely, harmonios) conj:and(sccessfl, harmonios) mark(addressed, if) nsbj(addressed, we) ax(addressed, have) advcl(likely, addressed) det(isses, those) dobj(addressed, isses) advmod(addressed, properly) cc(addressed, and) advcl(likely, sensibly) conj:and(addressed, sensibly) pnct(likely, .)","root(,JJ) nsbj(JJ,NN) cop(JJ,VBZ) advmod(JJ,RBR) mark(JJ,TO) cop(JJ,VB) xcomp(JJ,JJ) cc(JJ,CC) xcomp(JJ,JJ) conj:and(JJ,JJ) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) advcl(JJ,VBN) det(NNS,DT) dobj(VBN,NNS) advmod(VBN,RB) cc(VBN,CC) advcl(JJ,RB) conj:and(VBN,RB) pnct(JJ,JJ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Does the Secretary of State accept that a unified Germany and membership of NATO is much more likely to bring stability to central Europe than if a unified Germany adopted a position of neutralism?,DoesVBZ theDT SecretaryNNP ofIN StateNNP acceptVBD thatIN aDT unifiedJJ GermanyNNP andCC membershipNN ofIN NATONNP isVBZ muchRB moreRBR likelyJJ toTO bringVB stabilityNN toTO centralJJ EuropeNNP thanIN ifIN aDT unifiedJJ GermanyNNP adoptedVBD aDT positionNN ofIN neutralismNN ,"root(ROOT-0, accept-6) aux(accept-6, Does-1) det(Secretary-3, the-2) nsubj(accept-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(likely-18, that-7) det(Germany-10, a-8) amod(Germany-10, unified-9) nsubj(likely-18, Germany-10) cc(Germany-10, and-11) conj:and(Germany-10, membership-12) nsubj(likely-18, membership-12) case(NATO-14, of-13) nmod:of(Germany-10, NATO-14) cop(likely-18, is-15) advmod(likely-18, much-16) advmod(likely-18, more-17) ccomp(accept-6, likely-18) mark(bring-20, to-19) xcomp(likely-18, bring-20) dobj(bring-20, stability-21) case(Europe-24, to-22) amod(Europe-24, central-23) nmod:to(bring-20, Europe-24) mark(adopted-30, than-25) mark(adopted-30, if-26) det(Germany-29, a-27) amod(Germany-29, unified-28) nsubj(adopted-30, Germany-29) advcl(bring-20, adopted-30) det(position-32, a-31) dobj(adopted-30, position-32) case(neutralism-34, of-33) nmod:of(position-32, neutralism-34) punct(accept-6, ?-35)",0,1,0,"root(ROOT, accept) ax(accept, Does) det(Secretary, the) nsbj(accept, Secretary) case(State, of) nmod:of(Secretary, State) mark(likely, that) det(Germany, a) amod(Germany, nified) nsbj(likely, Germany) cc(Germany, and) conj:and(Germany, membership) nsbj(likely, membership) case(NATO, of) nmod:of(Germany, NATO) cop(likely, is) advmod(likely, mch) advmod(likely, more) ccomp(accept, likely) mark(bring, to) xcomp(likely, bring) dobj(bring, stability) case(Erope, to) amod(Erope, central) nmod:to(bring, Erope) mark(adopted, than) mark(adopted, if) det(Germany, a) amod(Germany, nified) nsbj(adopted, Germany) advcl(bring, adopted) det(position, a) dobj(adopted, position) case(netralism, of) nmod:of(position, netralism) pnct(accept, ?)","root(,VBD) ax(VBD,VBZ) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(JJ,IN) det(NNP,DT) amod(NNP,JJ) nsbj(JJ,NNP) cc(NNP,CC) conj:and(NNP,NN) nsbj(JJ,NN) case(NNP,IN) nmod:of(NNP,NNP) cop(JJ,VBZ) advmod(JJ,RB) advmod(JJ,RBR) ccomp(VBD,JJ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,NN) case(NNP,TO) amod(NNP,JJ) nmod:to(VB,NNP) mark(VBD,IN) mark(VBD,IN) det(NNP,DT) amod(NNP,JJ) nsbj(VBD,NNP) advcl(VB,VBD) det(NN,DT) dobj(VBD,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBD,VBD)","[ROOT, State, Secretary, accept, likely]","[ROOT, State, Secretary, accept, likely]",10,[ ],[ ],NNP_State NNP_Secretary VBD_accept JJ_likely ,"[ROOT, State, Secretary, accept, likely]","[ROOT, State, Secretary, accept, likely]",NNP_State NNP_Secretary VBD_accept JJ_likely ,"[ROOT, State, Secretary, accept, likely]",NNP_State NNP_Secretary VBD_accept JJ_likely ,"[ROOT, State, Secretary, accept, likely]",NNP_State NNP_Secretary VBD_accept JJ_likely ,-3,0,2,0,0,0,0,0,0,0
Having regard to the implications for British forces in Germany  will the right hon. Gentleman undertake that any review such as that which is under consideration will take account of the relationship not only of forces in Europe but of United Kingdom forces generally?,HavingVBG regardNN toTO theDT implicationsNNS forIN BritishJJ forcesNNS inIN GermanyNNP willMD theDT rightJJ honNN GentlemanNNP undertakeVBP thatIN anyDT reviewNN suchJJ asIN thatDT whichWDT isVBZ underIN considerationNN willMD takeVB accountNN ofIN theDT relationshipNN notRB onlyRB ofIN forcesNNS inIN EuropeNNP butCC ofIN UnitedNNP KingdomNNP forcesNNS generallyRB ,"root(ROOT-0, undertake-17) advcl(undertake-17, Having-1) dobj(Having-1, regard-2) case(implications-5, to-3) det(implications-5, the-4) nmod:to(regard-2, implications-5) case(forces-8, for-6) amod(forces-8, British-7) nmod:for(implications-5, forces-8) case(Germany-10, in-9) nmod:in(forces-8, Germany-10) punct(undertake-17, ,-11) aux(undertake-17, will-12) det(Gentleman-16, the-13) amod(Gentleman-16, right-14) compound(Gentleman-16, hon.-15) nsubj(undertake-17, Gentleman-16) mark(take-29, that-18) det(review-20, any-19) nsubj(take-29, review-20) case(that-23, such-21) mwe(such-21, as-22) nmod:such_as(review-20, that-23) nsubj(consideration-27, which-24) cop(consideration-27, is-25) case(consideration-27, under-26) acl:relcl(that-23, consideration-27) aux(take-29, will-28) ccomp(undertake-17, take-29) dobj(take-29, account-30) case(relationship-33, of-31) det(relationship-33, the-32) nmod:of(account-30, relationship-33) neg(only-35, not-34) acl(relationship-33, only-35) acl(relationship-33, only-35'') conj:but(only-35, only-35'') case(forces-37, of-36) nmod:of(only-35, forces-37) case(Europe-39, in-38) nmod:in(forces-37, Europe-39) cc(only-35, but-40) case(forces-44, of-41) compound(forces-44, United-42) compound(forces-44, Kingdom-43) nmod:of(only-35'', forces-44) advmod(forces-44, generally-45) punct(undertake-17, ?-46)",0,0,0,"root(ROOT, ndertake) advcl(ndertake, Having) dobj(Having, regard) case(implications, to) det(implications, the) nmod:to(regard, implications) case(forces, for) amod(forces, British) nmod:for(implications, forces) case(Germany, in) nmod:in(forces, Germany) pnct(ndertake, ,) ax(ndertake, will) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(ndertake, Gentleman) mark(take, that) det(review, any) nsbj(take, review) case(that, sch) mwe(sch, as) nmod:sch_as(review, that) nsbj(consideration, which) cop(consideration, is) case(consideration, nder) acl:relcl(that, consideration) ax(take, will) ccomp(ndertake, take) dobj(take, accont) case(relationship, of) det(relationship, the) nmod:of(accont, relationship) neg(only, not) acl(relationship, only) acl(relationship, only) conj:bt(only, only) case(forces, of) nmod:of(only, forces) case(Erope, in) nmod:in(forces, Erope) cc(only, bt) case(forces, of) compond(forces, United) compond(forces, Kingdom) nmod:of(only, forces) advmod(forces, generally) pnct(ndertake, ?)","root(,VBP) advcl(VBP,VBG) dobj(VBG,NN) case(NNS,TO) det(NNS,DT) nmod:to(NN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:for(NNS,NNS) case(NNP,IN) nmod:in(NNS,NNP) pnct(VBP,VBP) ax(VBP,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBP,NNP) mark(VB,DT) det(NN,DT) nsbj(VB,NN) case(DT,JJ) mwe(JJ,IN) nmod:sch_as(NN,DT) nsbj(NN,WDT) cop(NN,VBZ) case(NN,IN) acl:relcl(DT,NN) ax(VB,MD) ccomp(VBP,VB) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) neg(RB,RB) acl(NN,RB) acl(NN,RB) conj:bt(RB,RB) case(NNS,IN) nmod:of(RB,NNS) case(NNP,IN) nmod:in(NNS,NNP) cc(RB,CC) case(NNS,IN) compond(NNS,NNP) compond(NNS,NNP) nmod:of(RB,NNS) advmod(NNS,RB) pnct(VBP,VBP)","[right, take, undertake, ROOT, Having, Gentleman]","[undertake, ROOT, Having, take, Gentleman]",11,[ ],[ ],VB_undertake VBG_Having VB_take NNP_Gentleman ,"[undertake, ROOT, Having, take, Gentleman]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In particular  will he have regard to the possibilities of specialisation and the enhanced role that the Royal Navy might be able to play in a settlement in a few years' time?,InIN particularJJ willMD hePRP haveVB regardVBN toTO theDT possibilitiesNNS ofIN specialisationNN andCC theDT enhancedJJ roleNN thatIN theDT RoyalNNP NavyNNP mightMD beVB ableJJ toTO playVB inIN aDT settlementNN inIN aDT fewJJ yearsNNS 'POS timeNN ,"root(ROOT-0, have-6) case(particular-2, In-1) nmod:in(have-6, particular-2) punct(have-6, ,-3) aux(have-6, will-4) nsubj(have-6, he-5) dobj(have-6, regard-7) case(possibilities-10, to-8) det(possibilities-10, the-9) nmod:to(regard-7, possibilities-10) case(specialisation-12, of-11) nmod:of(possibilities-10, specialisation-12) cc(possibilities-10, and-13) det(role-16, the-14) amod(role-16, enhanced-15) nmod:to(regard-7, role-16) conj:and(possibilities-10, role-16) mark(able-23, that-17) det(Navy-20, the-18) compound(Navy-20, Royal-19) nsubj(able-23, Navy-20) aux(able-23, might-21) cop(able-23, be-22) acl:relcl(role-16, able-23) mark(play-25, to-24) xcomp(able-23, play-25) case(settlement-28, in-26) det(settlement-28, a-27) nmod:in(play-25, settlement-28) case(time-34, in-29) det(years-32, a-30) amod(years-32, few-31) nmod:poss(time-34, years-32) case(years-32, '-33) nmod:in(play-25, time-34) punct(have-6, ?-35)",0,0,0,"root(ROOT, have) case(particlar, In) nmod:in(have, particlar) pnct(have, ,) ax(have, will) nsbj(have, he) dobj(have, regard) case(possibilities, to) det(possibilities, the) nmod:to(regard, possibilities) case(specialisation, of) nmod:of(possibilities, specialisation) cc(possibilities, and) det(role, the) amod(role, enhanced) nmod:to(regard, role) conj:and(possibilities, role) mark(able, that) det(Navy, the) compond(Navy, Royal) nsbj(able, Navy) ax(able, might) cop(able, be) acl:relcl(role, able) mark(play, to) xcomp(able, play) case(settlement, in) det(settlement, a) nmod:in(play, settlement) case(time, in) det(years, a) amod(years, few) nmod:poss(time, years) ""case(years, )"", nmod:in(play, time) pnct(have, ?)","root(,VB) case(JJ,IN) nmod:in(VB,JJ) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) dobj(VB,VBN) case(NNS,TO) det(NNS,DT) nmod:to(VBN,NNS) case(NN,IN) nmod:of(NNS,NN) cc(NNS,CC) det(NN,DT) amod(NN,JJ) nmod:to(VBN,NN) conj:and(NNS,NN) mark(JJ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) ax(JJ,MD) cop(JJ,VB) acl:relcl(NN,JJ) mark(VB,TO) xcomp(JJ,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) case(NN,IN) det(NNS,DT) amod(NNS,JJ) nmod:poss(NN,NNS) case(NNS,POS) nmod:in(VB,NN) pnct(VB,VB)","[particular, ROOT, regard, have, he]","[particular, ROOT, regard, have, he]",11,[ ],[ ],JJ_particular NN_regard VBP_have PRP_he ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
There are few supporters anywhere for the idea of a neutral Germany.,ThereEX areVBP fewJJ supportersNNS anywhereRB forIN theDT ideaNN ofIN aDT neutralJJ GermanyNNP ,"root(ROOT-0, are-2) expl(are-2, There-1) amod(supporters-4, few-3) nsubj(are-2, supporters-4) advmod(idea-8, anywhere-5) case(idea-8, for-6) det(idea-8, the-7) acl:for(supporters-4, idea-8) case(Germany-12, of-9) det(Germany-12, a-10) amod(Germany-12, neutral-11) nmod:of(idea-8, Germany-12) punct(are-2, .-13)",0,0,0,"root(ROOT, are) expl(are, There) amod(spporters, few) nsbj(are, spporters) advmod(idea, anywhere) case(idea, for) det(idea, the) acl:for(spporters, idea) case(Germany, of) det(Germany, a) amod(Germany, netral) nmod:of(idea, Germany) pnct(are, .)","root(,VBP) expl(VBP,EX) amod(NNS,JJ) nsbj(VBP,NNS) advmod(NN,RB) case(NN,IN) det(NN,DT) acl:for(NNS,NN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NN,NNP) pnct(VBP,VBP)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Whether in the East or the West  people perceive the real danger that that could produce.,WhetherNNP inIN theDT EastNNP orCC theDT WestJJ peopleNNS perceiveVBP theDT realJJ dangerNN thatIN thatDT couldMD produceVB ,"root(ROOT-0, perceive-10) mark(perceive-10, Whether-1) case(East-4, in-2) det(East-4, the-3) nmod:in(perceive-10, East-4) cc(East-4, or-5) det(West-7, the-6) conj:or(East-4, West-7) nmod:in(perceive-10, West-7) punct(perceive-10, ,-8) nsubj(perceive-10, people-9) det(danger-13, the-11) amod(danger-13, real-12) dobj(perceive-10, danger-13) mark(produce-17, that-14) nsubj(produce-17, that-15) aux(produce-17, could-16) ccomp(danger-13, produce-17) punct(perceive-10, .-18)",0,0,0,"root(ROOT, perceive) mark(perceive, Whether) case(East, in) det(East, the) nmod:in(perceive, East) cc(East, or) det(West, the) conj:or(East, West) nmod:in(perceive, West) pnct(perceive, ,) nsbj(perceive, people) det(danger, the) amod(danger, real) dobj(perceive, danger) mark(prodce, that) nsbj(prodce, that) ax(prodce, cold) ccomp(danger, prodce) pnct(perceive, .)","root(,VBP) mark(VBP,NNP) case(NNP,IN) det(NNP,DT) nmod:in(VBP,NNP) cc(NNP,CC) det(JJ,DT) conj:or(NNP,JJ) nmod:in(VBP,JJ) pnct(VBP,VBP) nsbj(VBP,NNS) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) mark(VB,DT) nsbj(VB,DT) ax(VB,MD) ccomp(NN,VB) pnct(VBP,VBP)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We stand strongly for Germany being in NATO.,WePRP standVBP stronglyRB forIN GermanyNNP beingVBG inIN NATONNP ,"root(ROOT-0, stand-2) nsubj(stand-2, We-1) advmod(stand-2, strongly-3) case(Germany-5, for-4) nmod:for(stand-2, Germany-5) cop(NATO-8, being-6) case(NATO-8, in-7) nmod:in(stand-2, NATO-8) punct(stand-2, .-9)",0,0,0,"root(ROOT, stand) nsbj(stand, We) advmod(stand, strongly) case(Germany, for) nmod:for(stand, Germany) cop(NATO, being) case(NATO, in) nmod:in(stand, NATO) pnct(stand, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) case(NNP,IN) nmod:for(VBP,NNP) cop(NNP,VBG) case(NNP,IN) nmod:in(VBP,NNP) pnct(VBP,VBP)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The location of troops in East Germany is obviously an issue  but the location of Germany in NATO is important.,TheDT locationNN ofIN troopsNNS inIN EastNNP GermanyNNP isVBZ obviouslyRB anDT issueNN butCC theDT locationNN ofIN GermanyNNP inIN NATONNP isVBZ importantJJ ,"root(ROOT-0, issue-11) det(location-2, The-1) nsubj(issue-11, location-2) case(troops-4, of-3) nmod:of(location-2, troops-4) case(Germany-7, in-5) compound(Germany-7, East-6) nmod:in(troops-4, Germany-7) cop(issue-11, is-8) advmod(issue-11, obviously-9) det(issue-11, an-10) punct(issue-11, ,-12) cc(issue-11, but-13) det(location-15, the-14) nsubj(important-21, location-15) case(Germany-17, of-16) nmod:of(location-15, Germany-17) case(NATO-19, in-18) nmod:in(location-15, NATO-19) cop(important-21, is-20) conj:but(issue-11, important-21) punct(issue-11, .-22)",0,0,0,"root(ROOT, isse) det(location, The) nsbj(isse, location) case(troops, of) nmod:of(location, troops) case(Germany, in) compond(Germany, East) nmod:in(troops, Germany) cop(isse, is) advmod(isse, obviosly) det(isse, an) pnct(isse, ,) cc(isse, bt) det(location, the) nsbj(important, location) case(Germany, of) nmod:of(location, Germany) case(NATO, in) nmod:in(location, NATO) cop(important, is) conj:bt(isse, important) pnct(isse, .)","root(,NN) det(NN,DT) nsbj(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNP,IN) compond(NNP,NNP) nmod:in(NNS,NNP) cop(NN,VBZ) advmod(NN,RB) det(NN,DT) pnct(NN,NN) cc(NN,CC) det(NN,DT) nsbj(JJ,NN) case(NNP,IN) nmod:of(NN,NNP) case(NNP,IN) nmod:in(NN,NNP) cop(JJ,VBZ) conj:bt(NN,JJ) pnct(NN,NN)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Germany is a crucial country to the NATO Alliance and that is why its presence there is important.,GermanyNNP isVBZ aDT crucialJJ countryNN toTO theDT NATONNP AllianceNNP andCC thatDT isVBZ whyWRB itsPRP$ presenceNN thereEX isVBZ importantJJ ,"root(ROOT-0, important-18) nsubj(country-5, Germany-1) cop(country-5, is-2) det(country-5, a-3) amod(country-5, crucial-4) nsubj(important-18, country-5) case(Alliance-9, to-6) det(Alliance-9, the-7) compound(Alliance-9, NATO-8) nmod:to(country-5, Alliance-9) cc(country-5, and-10) nsubj(is-12, that-11) dep(important-18, is-12) advmod(is-17, why-13) nmod:poss(presence-15, its-14) dep(is-17, presence-15) expl(is-17, there-16) cop(important-18, is-17) punct(important-18, .-19)",0,0,0,"root(ROOT, important) nsbj(contry, Germany) cop(contry, is) det(contry, a) amod(contry, crcial) nsbj(important, contry) case(Alliance, to) det(Alliance, the) compond(Alliance, NATO) nmod:to(contry, Alliance) cc(contry, and) nsbj(is, that) dep(important, is) advmod(is, why) nmod:poss(presence, its) dep(is, presence) expl(is, there) cop(important, is) pnct(important, .)","root(,JJ) nsbj(NN,NNP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) nsbj(JJ,NN) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(NN,NNP) cc(NN,CC) nsbj(VBZ,DT) dep(JJ,VBZ) advmod(VBZ,WRB) nmod:poss(NN,PRP$) dep(VBZ,NN) expl(VBZ,EX) cop(JJ,VBZ) pnct(JJ,JJ)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. and learned Gentleman will forgive me if I do not go into individual service aspects of our review of options for change.,TheDT honNN andCC learnedVBN GentlemanNNP willMD forgiveVB mePRP ifIN IPRP doVBP notRB goVB intoIN individualJJ serviceNN aspectsNNS ofIN ourPRP$ reviewNN ofIN optionsNNS forIN changeNN ,"root(ROOT-0, hon.-2) det(hon.-2, The-1) cc(hon.-2, and-3) dep(forgive-7, learned-4) nsubj(forgive-7, Gentleman-5) aux(forgive-7, will-6) conj:and(hon.-2, forgive-7) dobj(hon.-2, me-8) mark(go-13, if-9) nsubj(go-13, I-10) aux(go-13, do-11) neg(go-13, not-12) advcl(hon.-2, go-13) case(aspects-17, into-14) amod(aspects-17, individual-15) compound(aspects-17, service-16) nmod:into(go-13, aspects-17) case(review-20, of-18) nmod:poss(review-20, our-19) nmod:of(aspects-17, review-20) case(options-22, of-21) nmod:of(review-20, options-22) case(change-24, for-23) nmod:for(review-20, change-24) punct(hon.-2, .-25)",0,0,1,"root(ROOT, hon.) det(hon., The) cc(hon., and) dep(forgive, learned) nsbj(forgive, Gentleman) ax(forgive, will) conj:and(hon., forgive) dobj(hon., me) mark(go, if) nsbj(go, I) ax(go, do) neg(go, not) advcl(hon., go) case(aspects, into) amod(aspects, individal) compond(aspects, service) nmod:into(go, aspects) case(review, of) nmod:poss(review, or) nmod:of(aspects, review) case(options, of) nmod:of(review, options) case(change, for) nmod:for(review, change) pnct(hon., .)","root(,) det(,DT) cc(DT,CC) dep(VB,VBN) nsbj(VB,NNP) ax(VB,MD) conj:and(MD,VB) dobj(VB,PRP) mark(VB,IN) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) advcl(RB,VB) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:into(VB,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NNS,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) nmod:for(NN,NN) pnct(NN,NN)","[Gentleman, learned, forgive]","[Gentleman, learned, forgive]",12,[ ],[ ],NNP_Gentleman VBD_learned VB_forgive ,"[Gentleman, learned, forgive]","[Gentleman, learned, forgive]",NNP_Gentleman VBD_learned VB_forgive ,"[Gentleman, learned, forgive]",NNP_Gentleman VBD_learned VB_forgive ,"[Gentleman, learned, forgive]",NNP_Gentleman VBD_learned VB_forgive ,-3,0,2,0,0,0,0,0,0,0
In view of my right hon. Friend's answer to the hon. Member for Woolwich (Mr. Cartwright) on question No. 3  and the relationship that Germany must have to that  in the review that is being carried forward will he press the Americans to set a level for the troop requirements in Europe in conjunction with General Galvin and ourselves  as it is essential that we should be able to give a lead to the rest of NATO on what we believe is necessary for the proper defence of Europe even after the conventional force reduction treaties?,InIN viewNN ofIN myPRP$ rightJJ honNN FriendNNP 'sPOS answerNN toTO theDT honNN MemberNNP forIN WoolwichNNP (( MrNNP CartwrightNNP )) onIN questionNN NoNNP 3CD andCC theDT relationshipNN thatIN GermanyNNP mustMD haveVB toTO thatDT inIN theDT reviewNN thatWDT isVBZ beingVBG carriedVBN forwardRB willMD hePRP pressVB theDT AmericansNNPS toTO setVB aDT levelNN forIN theDT troopNN requirementsNNS inIN EuropeNNP inIN conjunctionNN withIN GeneralNNP GalvinNNP andCC ourselvesPRP asIN itPRP isVBZ essentialJJ thatIN wePRP shouldMD beVB ableJJ toTO giveVB aDT leadNN toTO theDT restNN ofIN NATONNP onIN whatWP wePRP believeVBP isVBZ necessaryJJ forIN theDT properJJ defenceNN ofIN EuropeNNP evenRB afterIN theDT conventionalJJ forceNN reductionNN treatiesNNS ,"root(ROOT-0, relationship-27) case(view-2, In-1) nmod:in(relationship-27, view-2) case(answer-9, of-3) nmod:poss(Friend-7, my-4) amod(Friend-7, right-5) compound(Friend-7, hon.-6) nmod:poss(answer-9, Friend-7) case(Friend-7, 's-8) nmod:of(view-2, answer-9) case(Member-13, to-10) det(Member-13, the-11) compound(Member-13, hon.-12) nmod:to(answer-9, Member-13) case(Woolwich-15, for-14) nmod:for(Member-13, Woolwich-15) punct(Cartwright-18, -LRB--16) compound(Cartwright-18, Mr.-17) appos(view-2, Cartwright-18) punct(Cartwright-18, -RRB--19) case(question-21, on-20) nmod:on(view-2, question-21) dep(question-21, No.-22) nummod(No.-22, 3-23) punct(relationship-27, ,-24) cc(relationship-27, and-25) det(relationship-27, the-26) dobj(have-31, that-28) nsubj(have-31, Germany-29) aux(have-31, must-30) acl:relcl(relationship-27, have-31) case(that-33, to-32) nmod:to(have-31, that-33) punct(have-31, ,-34) case(review-37, in-35) det(review-37, the-36) nmod:in(have-31, review-37) nsubjpass(carried-41, that-38) aux(carried-41, is-39) auxpass(carried-41, being-40) acl:relcl(review-37, carried-41) advmod(carried-41, forward-42) aux(press-45, will-43) nsubj(press-45, he-44) parataxis(have-31, press-45) det(Americans-47, the-46) dobj(press-45, Americans-47) mark(set-49, to-48) xcomp(press-45, set-49) det(level-51, a-50) dobj(set-49, level-51) case(requirements-55, for-52) det(requirements-55, the-53) compound(requirements-55, troop-54) nmod:for(level-51, requirements-55) case(Europe-57, in-56) nmod:in(requirements-55, Europe-57) case(conjunction-59, in-58) nmod:in(requirements-55, conjunction-59) case(Galvin-62, with-60) compound(Galvin-62, General-61) nmod:with(conjunction-59, Galvin-62) cc(Galvin-62, and-63) nmod:with(conjunction-59, ourselves-64) conj:and(Galvin-62, ourselves-64) punct(set-49, ,-65) mark(essential-69, as-66) nsubj(essential-69, it-67) cop(essential-69, is-68) advcl(set-49, essential-69) mark(able-74, that-70) nsubj(able-74, we-71) aux(able-74, should-72) cop(able-74, be-73) ccomp(essential-69, able-74) mark(give-76, to-75) xcomp(able-74, give-76) det(lead-78, a-77) dobj(give-76, lead-78) case(rest-81, to-79) det(rest-81, the-80) nmod:to(lead-78, rest-81) case(NATO-83, of-82) nmod:of(rest-81, NATO-83) mark(believe-87, on-84) dobj(believe-87, what-85) nsubj(believe-87, we-86) advcl(give-76, believe-87) cop(necessary-89, is-88) ccomp(believe-87, necessary-89) case(defence-93, for-90) det(defence-93, the-91) amod(defence-93, proper-92) nmod:for(necessary-89, defence-93) case(Europe-95, of-94) nmod:of(defence-93, Europe-95) advmod(treaties-102, even-96) case(treaties-102, after-97) det(treaties-102, the-98) amod(treaties-102, conventional-99) compound(treaties-102, force-100) compound(treaties-102, reduction-101) nmod:after(necessary-89, treaties-102) punct(relationship-27, ?-103)",0,0,0,"root(ROOT, relationship) case(view, In) nmod:in(relationship, view) case(answer, of) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:poss(answer, Friend) ""case(Friend, s)"", nmod:of(view, answer) case(Member, to) det(Member, the) compond(Member, hon.) nmod:to(answer, Member) case(Woolwich, for) nmod:for(Member, Woolwich) pnct(Cartwright, ) compond(Cartwright, Mr.) appos(view, Cartwright) pnct(Cartwright, ) case(qestion, on) nmod:on(view, qestion) dep(qestion, No.) nmmod(No., 3) pnct(relationship, ,) cc(relationship, and) det(relationship, the) dobj(have, that) nsbj(have, Germany) ax(have, mst) acl:relcl(relationship, have) case(that, to) nmod:to(have, that) pnct(have, ,) case(review, in) det(review, the) nmod:in(have, review) nsbjpass(carried, that) ax(carried, is) axpass(carried, being) acl:relcl(review, carried) advmod(carried, forward) ax(press, will) nsbj(press, he) parataxis(have, press) det(Americans, the) dobj(press, Americans) mark(set, to) xcomp(press, set) det(level, a) dobj(set, level) case(reqirements, for) det(reqirements, the) compond(reqirements, troop) nmod:for(level, reqirements) case(Erope, in) nmod:in(reqirements, Erope) case(conjnction, in) nmod:in(reqirements, conjnction) case(Galvin, with) compond(Galvin, General) nmod:with(conjnction, Galvin) cc(Galvin, and) nmod:with(conjnction, orselves) conj:and(Galvin, orselves) pnct(set, ,) mark(essential, as) nsbj(essential, it) cop(essential, is) advcl(set, essential) mark(able, that) nsbj(able, we) ax(able, shold) cop(able, be) ccomp(essential, able) mark(give, to) xcomp(able, give) det(lead, a) dobj(give, lead) case(rest, to) det(rest, the) nmod:to(lead, rest) case(NATO, of) nmod:of(rest, NATO) mark(believe, on) dobj(believe, what) nsbj(believe, we) advcl(give, believe) cop(necessary, is) ccomp(believe, necessary) case(defence, for) det(defence, the) amod(defence, proper) nmod:for(necessary, defence) case(Erope, of) nmod:of(defence, Erope) advmod(treaties, even) case(treaties, after) det(treaties, the) amod(treaties, conventional) compond(treaties, force) compond(treaties, redction) nmod:after(necessary, treaties) pnct(relationship, ?)","root(,NN) case(NN,IN) nmod:in(NN,NN) case(NN,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(NN,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NN,NNP) pnct(NNP,) case(NN,IN) nmod:on(NN,NN) dep(NN,NN) nmmod(NN,CD) pnct(NN,NN) cc(NN,CC) det(NN,DT) dobj(VB,IN) nsbj(VB,NNP) ax(VB,MD) acl:relcl(NN,VB) case(IN,TO) nmod:to(VB,IN) pnct(VB,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) nsbjpass(VBN,IN) ax(VBN,VBZ) axpass(VBN,VBG) acl:relcl(NN,VBN) advmod(VBN,RB) ax(VB,MD) nsbj(VB,PRP) parataxis(VB,VB) det(NNPS,DT) dobj(VB,NNPS) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:for(NN,NNS) case(NNP,IN) nmod:in(NNS,NNP) case(NN,IN) nmod:in(NNS,NN) case(NNP,IN) compond(NNP,NNP) nmod:with(NN,NNP) cc(NNP,CC) nmod:with(NN,PRP) conj:and(NNP,PRP) pnct(VB,VB) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) advcl(VB,JJ) mark(JJ,IN) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) ccomp(JJ,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) case(NNP,IN) nmod:of(NN,NNP) mark(VBP,IN) dobj(VBP,WP) nsbj(VBP,PRP) advcl(VB,VBP) cop(JJ,VBZ) ccomp(VBP,JJ) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(JJ,NN) case(NNP,IN) nmod:of(NN,NNP) advmod(NNS,RB) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) compond(NNS,NN) compond(NNS,NN) nmod:after(JJ,NNS) pnct(NN,NN)","[view, set, Member, right, Friend, press, answer, Americans, Woolwich, he, my]","[view, set, Member, Friend, press, answer, Americans, Woolwich, he, my]",12,"[view, Friend, answer, my, Woolwich, Member]","[view, Friend, answer, my, Woolwich, Member]",NN_view VB_set NNP_Member NNP_Friend VBP_press NN_answer NNPS_Americans NNP_Woolwich PRP_he PRP$_my ,"[view, set, Member, Friend, press, answer, Americans, Woolwich, he, my]","[view, set, Member, Friend, press, answer, Americans, Woolwich, he, my]",NN_view VB_set NNP_Member NNP_Friend VBP_press NN_answer NNPS_Americans NNP_Woolwich PRP_he PRP$_my ,"[view, set, Member, Friend, press, answer, Americans, Woolwich, he, my]",NN_view VB_set NNP_Member NNP_Friend VBP_press NN_answer NNPS_Americans NNP_Woolwich PRP_he PRP$_my ,"[view, set, Member, Friend, press, answer, Americans, Woolwich, he, my]",NN_view VB_set NNP_Member NNP_Friend VBP_press NN_answer NNPS_Americans NNP_Woolwich PRP_he PRP$_my ,-3,0,1,0,0,0,0,0,0,0
Consultation in NATO is vital and General Galvin  with his military responsibilities  clearly has an important part to play in that.,ConsultationNN inIN NATONNP isVBZ vitalJJ andCC GeneralJJ GalvinNNP withIN hisPRP$ militaryJJ responsibilitiesNNS clearlyRB hasVBZ anDT importantJJ partNN toTO playVB inIN thatDT ,"root(ROOT-0, vital-5) nsubj(vital-5, Consultation-1) case(NATO-3, in-2) nmod:in(Consultation-1, NATO-3) cop(vital-5, is-4) cc(vital-5, and-6) amod(Galvin-8, General-7) conj:and(vital-5, Galvin-8) punct(vital-5, ,-9) case(responsibilities-13, with-10) nmod:poss(responsibilities-13, his-11) amod(responsibilities-13, military-12) nmod:with(vital-5, responsibilities-13) punct(vital-5, ,-14) advmod(has-16, clearly-15) dep(vital-5, has-16) det(part-19, an-17) amod(part-19, important-18) dobj(has-16, part-19) mark(play-21, to-20) acl(part-19, play-21) case(that-23, in-22) nmod:in(play-21, that-23) punct(vital-5, .-24)",0,0,0,"root(ROOT, vital) nsbj(vital, Consltation) case(NATO, in) nmod:in(Consltation, NATO) cop(vital, is) cc(vital, and) amod(Galvin, General) conj:and(vital, Galvin) pnct(vital, ,) case(responsibilities, with) nmod:poss(responsibilities, his) amod(responsibilities, military) nmod:with(vital, responsibilities) pnct(vital, ,) advmod(has, clearly) dep(vital, has) det(part, an) amod(part, important) dobj(has, part) mark(play, to) acl(part, play) case(that, in) nmod:in(play, that) pnct(vital, .)","root(,JJ) nsbj(JJ,NN) case(NNP,IN) nmod:in(NN,NNP) cop(JJ,VBZ) cc(JJ,CC) amod(NNP,JJ) conj:and(JJ,NNP) pnct(JJ,JJ) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:with(JJ,NNS) pnct(JJ,JJ) advmod(VBZ,RB) dep(JJ,VBZ) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) mark(VB,TO) acl(NN,VB) case(DT,IN) nmod:in(VB,DT) pnct(JJ,JJ)",[ ],"[responsibilities, military, his, vital]",13,"[responsibilities, military, his, vital]","[responsibilities, military, his, vital]",NNS_responsibilities JJ_military PRP$_his JJ_vital ,"[responsibilities, military, his, vital]","[responsibilities, military, his, vital]",NNS_responsibilities JJ_military PRP$_his JJ_vital ,"[responsibilities, military, his, vital]",NNS_responsibilities JJ_military PRP$_his JJ_vital ,"[responsibilities, military, his, vital]",NNS_responsibilities JJ_military PRP$_his JJ_vital ,-3,0,1,0,0,0,0,0,0,0
We must consider any changes in clear consultation with all the members of NATO to ensure that effective security is maintained  and the Americans are an extremely important partner in that.,WePRP mustMD considerVB anyDT changesNNS inIN clearJJ consultationNN withIN allPDT theDT membersNNS ofIN NATONNP toTO ensureVB thatIN effectiveJJ securityNN isVBZ maintainedVBN andCC theDT AmericansNNPS areVBP anDT extremelyRB importantJJ partnerNN inIN thatDT ,"root(ROOT-0, consider-3) nsubj(consider-3, We-1) aux(consider-3, must-2) det(changes-5, any-4) dobj(consider-3, changes-5) case(consultation-8, in-6) amod(consultation-8, clear-7) nmod:in(changes-5, consultation-8) case(members-12, with-9) det:predet(members-12, all-10) det(members-12, the-11) nmod:with(consultation-8, members-12) case(NATO-14, of-13) nmod:of(members-12, NATO-14) mark(ensure-16, to-15) acl(changes-5, ensure-16) mark(maintained-21, that-17) amod(security-19, effective-18) nsubjpass(maintained-21, security-19) auxpass(maintained-21, is-20) ccomp(ensure-16, maintained-21) punct(consider-3, ,-22) cc(consider-3, and-23) det(Americans-25, the-24) nsubj(partner-30, Americans-25) cop(partner-30, are-26) det(partner-30, an-27) advmod(important-29, extremely-28) amod(partner-30, important-29) conj:and(consider-3, partner-30) case(that-32, in-31) nmod:in(partner-30, that-32) punct(consider-3, .-33)",0,0,0,"root(ROOT, consider) nsbj(consider, We) ax(consider, mst) det(changes, any) dobj(consider, changes) case(consltation, in) amod(consltation, clear) nmod:in(changes, consltation) case(members, with) det:predet(members, all) det(members, the) nmod:with(consltation, members) case(NATO, of) nmod:of(members, NATO) mark(ensre, to) acl(changes, ensre) mark(maintained, that) amod(secrity, effective) nsbjpass(maintained, secrity) axpass(maintained, is) ccomp(ensre, maintained) pnct(consider, ,) cc(consider, and) det(Americans, the) nsbj(partner, Americans) cop(partner, are) det(partner, an) advmod(important, extremely) amod(partner, important) conj:and(consider, partner) case(that, in) nmod:in(partner, that) pnct(consider, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NNS,DT) dobj(VB,NNS) case(NN,IN) amod(NN,JJ) nmod:in(NNS,NN) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:with(NN,NNS) case(NNP,IN) nmod:of(NNS,NNP) mark(VB,TO) acl(NNS,VB) mark(VBN,DT) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBZ) ccomp(VB,VBN) pnct(VB,VB) cc(VB,CC) det(NNPS,DT) nsbj(NN,NNPS) cop(NN,VBP) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) conj:and(VB,NN) case(DT,IN) nmod:in(NN,DT) pnct(VB,VB)",[ ],[ ],14,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
What aspects of flexible response does the Secretary of State consider are still applicable in central Europe  and in which countries does he propose to extend a programme of forward defence  given that after Sunday of next week Hungary  Czechoslovakia and Poland will have some semblance of democratic government?,WhatWP aspectsVBZ ofIN flexibleJJ responseNN doesVBZ theDT SecretaryNNP ofIN StateNNP considerNN areVBP stillRB applicableJJ inIN centralJJ EuropeNNP andCC inIN whichWDT countriesNNS doesVBZ hePRP proposeVB toTO extendVB aDT programmeNN ofIN forwardJJ defenceNN givenVBN thatIN afterIN SundayNNP ofIN nextJJ weekNN HungaryNNP CzechoslovakiaNNP andCC PolandNNP willMD haveVB someDT semblanceNN ofIN democraticJJ governmentNN ,"root(ROOT-0, consider-11) det(aspects-2, What-1) dobj(consider-11, aspects-2) case(response-5, of-3) amod(response-5, flexible-4) nmod:of(aspects-2, response-5) aux(consider-11, does-6) det(Secretary-8, the-7) nsubj(consider-11, Secretary-8) case(State-10, of-9) nmod:of(Secretary-8, State-10) cop(applicable-14, are-12) advmod(applicable-14, still-13) dep(consider-11, applicable-14) case(Europe-17, in-15) amod(Europe-17, central-16) nmod:in(applicable-14, Europe-17) punct(applicable-14, ,-18) cc(applicable-14, and-19) case(which-21, in-20) nmod:in(does-23, which-21) nsubj(does-23, countries-22) dep(consider-11, does-23) conj:and(applicable-14, does-23) nsubj(propose-25, he-24) ccomp(does-23, propose-25) mark(extend-27, to-26) xcomp(propose-25, extend-27) det(programme-29, a-28) dobj(extend-27, programme-29) case(defence-32, of-30) amod(defence-32, forward-31) nmod:of(programme-29, defence-32) punct(does-23, ,-33) xcomp(does-23, given-34) mark(have-47, that-35) case(Sunday-37, after-36) nmod:after(have-47, Sunday-37) case(week-40, of-38) amod(week-40, next-39) nmod:of(have-47, week-40) nsubj(have-47, Hungary-41) punct(Hungary-41, ,-42) conj:and(Hungary-41, Czechoslovakia-43) nsubj(have-47, Czechoslovakia-43) cc(Hungary-41, and-44) conj:and(Hungary-41, Poland-45) nsubj(have-47, Poland-45) aux(have-47, will-46) ccomp(given-34, have-47) det(semblance-49, some-48) dobj(have-47, semblance-49) case(government-52, of-50) amod(government-52, democratic-51) nmod:of(semblance-49, government-52) punct(consider-11, ?-53)",0,0,0,"root(ROOT, consider) det(aspects, What) dobj(consider, aspects) case(response, of) amod(response, flexible) nmod:of(aspects, response) ax(consider, does) det(Secretary, the) nsbj(consider, Secretary) case(State, of) nmod:of(Secretary, State) cop(applicable, are) advmod(applicable, still) dep(consider, applicable) case(Erope, in) amod(Erope, central) nmod:in(applicable, Erope) pnct(applicable, ,) cc(applicable, and) case(which, in) nmod:in(does, which) nsbj(does, contries) dep(consider, does) conj:and(applicable, does) nsbj(propose, he) ccomp(does, propose) mark(extend, to) xcomp(propose, extend) det(programme, a) dobj(extend, programme) case(defence, of) amod(defence, forward) nmod:of(programme, defence) pnct(does, ,) xcomp(does, given) mark(have, that) case(Snday, after) nmod:after(have, Snday) case(week, of) amod(week, next) nmod:of(have, week) nsbj(have, Hngary) pnct(Hngary, ,) conj:and(Hngary, Czechoslovakia) nsbj(have, Czechoslovakia) cc(Hngary, and) conj:and(Hngary, Poland) nsbj(have, Poland) ax(have, will) ccomp(given, have) det(semblance, some) dobj(have, semblance) case(government, of) amod(government, democratic) nmod:of(semblance, government) pnct(consider, ?)","root(,NN) det(VBZ,WP) dobj(NN,VBZ) case(NN,IN) amod(NN,JJ) nmod:of(VBZ,NN) ax(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) cop(JJ,VBP) advmod(JJ,RB) dep(NN,JJ) case(NNP,IN) amod(NNP,JJ) nmod:in(JJ,NNP) pnct(JJ,JJ) cc(JJ,CC) case(WDT,IN) nmod:in(VBZ,WDT) nsbj(VBZ,NNS) dep(NN,VBZ) conj:and(JJ,VBZ) nsbj(VB,PRP) ccomp(VBZ,VB) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) pnct(VBZ,VBZ) xcomp(VBZ,VBN) mark(VB,IN) case(NNP,IN) nmod:after(VB,NNP) case(NN,IN) amod(NN,JJ) nmod:of(VB,NN) nsbj(VB,NNP) pnct(NNP,NNP) conj:and(NNP,NNP) nsbj(VB,NNP) cc(NNP,CC) conj:and(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(VBN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN)","[extend, State, he, does, aspects, applicable, consider, ROOT, propose, Secretary]","[extend, State, he, does, aspects, applicable, consider, ROOT, propose, Secretary]",14,"[extend, propose, he, does]","[extend, propose, he, does]",VB_extend NNP_State PRP_he VBZ_does NNS_aspects JJ_applicable VBP_consider VB_propose NNP_Secretary ,"[extend, State, he, does, aspects, applicable, consider, ROOT, propose, Secretary]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is NATO defence policy to support flexible response and forward defence  and any changes that we make in that policy will be made only after consultation with all our allies in NATO.,ItPRP isVBZ NATONNP defenceNN policyNN toTO supportVB flexibleJJ responseNN andCC forwardNN defenceNN andCC anyDT changesNNS thatIN wePRP makeVBP inIN thatDT policyNN willMD beVB madeVBN onlyRB afterIN consultationNN withIN allDT ourPRP$ alliesNNS inIN NATONNP ,"root(ROOT-0, policy-5) nsubj(policy-5, It-1) cop(policy-5, is-2) compound(policy-5, NATO-3) compound(policy-5, defence-4) mark(support-7, to-6) acl(policy-5, support-7) amod(response-9, flexible-8) dobj(support-7, response-9) cc(response-9, and-10) amod(defence-12, forward-11) dobj(support-7, defence-12) conj:and(response-9, defence-12) punct(policy-5, ,-13) cc(policy-5, and-14) det(changes-16, any-15) conj:and(policy-5, changes-16) mark(make-19, that-17) nsubj(make-19, we-18) ccomp(changes-16, make-19) case(policy-22, in-20) det(policy-22, that-21) nmod:in(make-19, policy-22) aux(made-25, will-23) auxpass(made-25, be-24) xcomp(make-19, made-25) advmod(consultation-28, only-26) case(consultation-28, after-27) nmod:after(made-25, consultation-28) case(allies-32, with-29) det:predet(allies-32, all-30) nmod:poss(allies-32, our-31) nmod:with(consultation-28, allies-32) case(NATO-34, in-33) nmod:in(allies-32, NATO-34) punct(policy-5, .-35)",0,0,0,"root(ROOT, policy) nsbj(policy, It) cop(policy, is) compond(policy, NATO) compond(policy, defence) mark(spport, to) acl(policy, spport) amod(response, flexible) dobj(spport, response) cc(response, and) amod(defence, forward) dobj(spport, defence) conj:and(response, defence) pnct(policy, ,) cc(policy, and) det(changes, any) conj:and(policy, changes) mark(make, that) nsbj(make, we) ccomp(changes, make) case(policy, in) det(policy, that) nmod:in(make, policy) ax(made, will) axpass(made, be) xcomp(make, made) advmod(consltation, only) case(consltation, after) nmod:after(made, consltation) case(allies, with) det:predet(allies, all) nmod:poss(allies, or) nmod:with(consltation, allies) case(NATO, in) nmod:in(allies, NATO) pnct(policy, .)","root(,NN) nsbj(NN,PRP) cop(NN,VBZ) compond(NN,NNP) compond(NN,NN) mark(VB,TO) acl(NN,VB) amod(NN,JJ) dobj(VB,NN) cc(NN,CC) amod(NN,NN) dobj(VB,NN) conj:and(NN,NN) pnct(NN,NN) cc(NN,CC) det(NNS,DT) conj:and(NN,NNS) mark(VBP,DT) nsbj(VBP,PRP) ccomp(NNS,VBP) case(NN,IN) det(NN,DT) nmod:in(VBP,NN) ax(VBN,MD) axpass(VBN,VB) xcomp(VBP,VBN) advmod(NN,RB) case(NN,IN) nmod:after(VBN,NN) case(NNS,IN) det:predet(NNS,DT) nmod:poss(NNS,PRP$) nmod:with(NN,NNS) case(NNP,IN) nmod:in(NNS,NNP) pnct(NN,NN)",[ ],[ ],15,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
To ask the Secretary of State for Wales when he next intends to meet the chairman of the area health authorities in Wales to discuss the Government's national health service reforms.,ToTO askVB theDT SecretaryNNP ofIN StateNNP forIN WalesNNP whenWRB hePRP nextJJ intendsVBZ toTO meetVB theDT chairmanNN ofIN theDT areaNN healthNN authoritiesNNS inIN WalesNNP toTO discussVB theDT GovernmentNNP 'sPOS nationalJJ healthNN serviceNN reformsNNS ,"root(ROOT-0, ask-2) mark(ask-2, To-1) det(Secretary-4, the-3) dobj(ask-2, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) case(Wales-8, for-7) nmod:for(Secretary-4, Wales-8) advmod(intends-12, when-9) nsubj(intends-12, he-10) advmod(intends-12, next-11) advcl(ask-2, intends-12) mark(meet-14, to-13) xcomp(intends-12, meet-14) det(chairman-16, the-15) dobj(meet-14, chairman-16) case(authorities-21, of-17) det(authorities-21, the-18) compound(authorities-21, area-19) compound(authorities-21, health-20) nmod:of(chairman-16, authorities-21) case(Wales-23, in-22) nmod:in(authorities-21, Wales-23) mark(discuss-25, to-24) xcomp(meet-14, discuss-25) det(Government-27, the-26) nmod:poss(reforms-32, Government-27) case(Government-27, 's-28) amod(reforms-32, national-29) compound(reforms-32, health-30) compound(reforms-32, service-31) dobj(discuss-25, reforms-32) punct(ask-2, .-33)",0,1,1,"root(ROOT, ask) mark(ask, To) det(Secretary, the) dobj(ask, Secretary) case(State, of) nmod:of(Secretary, State) case(Wales, for) nmod:for(Secretary, Wales) advmod(intends, when) nsbj(intends, he) advmod(intends, next) advcl(ask, intends) mark(meet, to) xcomp(intends, meet) det(chairman, the) dobj(meet, chairman) case(athorities, of) det(athorities, the) compond(athorities, area) compond(athorities, health) nmod:of(chairman, athorities) case(Wales, in) nmod:in(athorities, Wales) mark(discss, to) xcomp(meet, discss) det(Government, the) nmod:poss(reforms, Government) ""case(Government, s)"", amod(reforms, national) compond(reforms, health) compond(reforms, service) dobj(discss, reforms) pnct(ask, .)","root(,VB) mark(VB,TO) det(NNP,DT) dobj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) advmod(VBZ,WRB) nsbj(VBZ,PRP) advmod(VBZ,JJ) advcl(VB,VBZ) mark(VB,TO) xcomp(VBZ,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) det(NNS,DT) compond(NNS,NN) compond(NNS,NN) nmod:of(NN,NNS) case(NNP,IN) nmod:in(NNS,NNP) mark(VB,TO) xcomp(VB,VB) det(NNP,DT) nmod:poss(NNS,NNP) case(NNP,POS) amod(NNS,JJ) compond(NNS,NN) compond(NNS,NN) dobj(VB,NNS) pnct(VB,VB)","[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]","[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]",1,"[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]","[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]",WRB_when VB_ask PRP_he NNP_State JJ_national VBZ_intends VBP_meet NNP_Secretary NNS_reforms VB_discuss JJ_next NNP_Wales NNP_Government ,"[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]","[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]",WRB_when VB_ask PRP_he NNP_State JJ_national VBZ_intends VBP_meet NNP_Secretary NNS_reforms VB_discuss JJ_next NNP_Wales NNP_Government ,"[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]",WRB_when VB_ask PRP_he NNP_State JJ_national VBZ_intends VBP_meet NNP_Secretary NNS_reforms VB_discuss JJ_next NNP_Wales NNP_Government ,"[when, ask, he, State, national, intends, meet, ROOT, Secretary, reforms, discuss, next, Wales, Government]",WRB_when VB_ask PRP_he NNP_State JJ_national VBZ_intends VBP_meet NNP_Secretary NNS_reforms VB_discuss JJ_next NNP_Wales NNP_Government ,-3,0,2,1,1,1,1,1,1,2
I met the chairmen of the health authorities in Wales on 10 July.,IPRP metVBD theDT chairmenNNS ofIN theDT healthNN authoritiesNNS inIN WalesNNP onIN 10CD JulyNNP ,"root(ROOT-0, met-2) nsubj(met-2, I-1) det(chairmen-4, the-3) dobj(met-2, chairmen-4) case(authorities-8, of-5) det(authorities-8, the-6) compound(authorities-8, health-7) nmod:of(chairmen-4, authorities-8) case(Wales-10, in-9) nmod:in(authorities-8, Wales-10) case(July-13, on-11) nummod(July-13, 10-12) nmod:on(met-2, July-13) punct(met-2, .-14)",0,1,0,"root(ROOT, met) nsbj(met, I) det(chairmen, the) dobj(met, chairmen) case(athorities, of) det(athorities, the) compond(athorities, health) nmod:of(chairmen, athorities) case(Wales, in) nmod:in(athorities, Wales) case(Jly, on) nmmod(Jly, 10) nmod:on(met, Jly) pnct(met, .)","root(,VBD) nsbj(VBD,PRP) det(NNS,DT) dobj(VBD,NNS) case(NNS,IN) det(NNS,DT) compond(NNS,NN) nmod:of(NNS,NNS) case(NNP,IN) nmod:in(NNS,NNP) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBD,NNP) pnct(VBD,VBD)",[ ],[ ],1,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I look forward to meeting them again collectively in October.,IPRP lookVBP forwardRB toTO meetingVBG themPRP againRB collectivelyRB inIN OctoberNNP ,"root(ROOT-0, look-2) nsubj(look-2, I-1) advmod(look-2, forward-3) mark(meeting-5, to-4) advcl(look-2, meeting-5) dobj(meeting-5, them-6) advmod(meeting-5, again-7) advmod(meeting-5, collectively-8) case(October-10, in-9) nmod:in(meeting-5, October-10) punct(look-2, .-11)",0,0,1,"root(ROOT, look) nsbj(look, I) advmod(look, forward) mark(meeting, to) advcl(look, meeting) dobj(meeting, them) advmod(meeting, again) advmod(meeting, collectively) case(October, in) nmod:in(meeting, October) pnct(look, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) mark(VBG,TO) advcl(VBP,VBG) dobj(VBG,PRP) advmod(VBG,RB) advmod(VBG,RB) case(NNP,IN) nmod:in(VBG,NNP) pnct(VBP,VBP)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is not the reality that few people in Wales support the so called reforms?,IsVBZ notRB theDT realityNN thatIN fewJJ peopleNNS inIN WalesNNP supportVBP theDT soRB calledJJ reformsNNS ,"root(ROOT-0, reality-4) cop(reality-4, Is-1) neg(reality-4, not-2) det(reality-4, the-3) dobj(support-10, that-5) amod(people-7, few-6) nsubj(support-10, people-7) case(Wales-9, in-8) nmod:in(people-7, Wales-9) acl:relcl(reality-4, support-10) det(reforms-14, the-11) advmod(called-13, so-12) amod(reforms-14, called-13) dobj(support-10, reforms-14) punct(reality-4, ?-15)",0,1,0,"root(ROOT, reality) cop(reality, Is) neg(reality, not) det(reality, the) dobj(spport, that) amod(people, few) nsbj(spport, people) case(Wales, in) nmod:in(people, Wales) acl:relcl(reality, spport) det(reforms, the) advmod(called, so) amod(reforms, called) dobj(spport, reforms) pnct(reality, ?)","root(,NN) cop(NN,VBZ) neg(NN,RB) det(NN,DT) dobj(VBP,IN) amod(NNS,JJ) nsbj(VBP,NNS) case(NNP,IN) nmod:in(NNS,NNP) acl:relcl(NN,VBP) det(NNS,DT) advmod(JJ,RB) amod(NNS,JJ) dobj(VBP,NNS) pnct(NN,NN)",[ ],[ ],2,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
They will lead to the worst kind of chequebook medicine and divert real resources that should be used to heal the sick to useless exercises such as form filling and counting pills.,TheyPRP willMD leadVB toTO theDT worstJJS kindNN ofIN chequebookNN medicineNN andCC divertVB realJJ resourcesNNS thatWDT shouldMD beVB usedVBN toTO healVB theDT sickNN toTO uselessJJ exercisesNNS suchJJ asIN formNN fillingNN andCC countingNN pillsNNS ,"root(ROOT-0, lead-3) nsubj(lead-3, They-1) aux(lead-3, will-2) case(kind-7, to-4) det(kind-7, the-5) amod(kind-7, worst-6) nmod:to(lead-3, kind-7) case(medicine-10, of-8) compound(medicine-10, chequebook-9) nmod:of(kind-7, medicine-10) cc(lead-3, and-11) amod(resources-14, divert-12) amod(resources-14, real-13) conj:and(lead-3, resources-14) nsubjpass(used-18, that-15) aux(used-18, should-16) auxpass(used-18, be-17) acl:relcl(resources-14, used-18) mark(heal-20, to-19) xcomp(used-18, heal-20) det(sick-22, the-21) dobj(heal-20, sick-22) case(exercises-25, to-23) amod(exercises-25, useless-24) nmod:to(heal-20, exercises-25) case(form-28, such-26) mwe(such-26, as-27) nmod:such_as(exercises-25, form-28) dep(form-28, filling-29) cc(form-28, and-30) nmod:such_as(exercises-25, counting-31) conj:and(form-28, counting-31) dobj(counting-31, pills-32) punct(lead-3, .-33)",0,0,0,"root(ROOT, lead) nsbj(lead, They) ax(lead, will) case(kind, to) det(kind, the) amod(kind, worst) nmod:to(lead, kind) case(medicine, of) compond(medicine, cheqebook) nmod:of(kind, medicine) cc(lead, and) amod(resorces, divert) amod(resorces, real) conj:and(lead, resorces) nsbjpass(sed, that) ax(sed, shold) axpass(sed, be) acl:relcl(resorces, sed) mark(heal, to) xcomp(sed, heal) det(sick, the) dobj(heal, sick) case(exercises, to) amod(exercises, seless) nmod:to(heal, exercises) case(form, sch) mwe(sch, as) nmod:sch_as(exercises, form) dep(form, filling) cc(form, and) nmod:sch_as(exercises, conting) conj:and(form, conting) dobj(conting, pills) pnct(lead, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) case(NN,TO) det(NN,DT) amod(NN,JJS) nmod:to(VB,NN) case(NN,IN) compond(NN,NN) nmod:of(NN,NN) cc(VB,CC) amod(NNS,VB) amod(NNS,JJ) conj:and(VB,NNS) nsbjpass(VBN,WDT) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NNS,VBN) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) dobj(VB,NN) case(NNS,TO) amod(NNS,JJ) nmod:to(VB,NNS) case(NN,JJ) mwe(JJ,IN) nmod:sch_as(NNS,NN) dep(NN,NN) cc(NN,CC) nmod:sch_as(NNS,NN) conj:and(NN,NN) dobj(NN,NNS) pnct(VB,VB)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is it not time that those so called reforms were abandoned?,IsVBZ itPRP notRB timeNN thatIN thoseDT soRB calledJJ reformsNNS wereVBD abandonedVBN ,"root(ROOT-0, time-4) cop(time-4, Is-1) nsubj(time-4, it-2) neg(time-4, not-3) mark(abandoned-11, that-5) nsubjpass(abandoned-11, those-6) advmod(called-8, so-7) acl(those-6, called-8) xcomp(called-8, reforms-9) auxpass(abandoned-11, were-10) ccomp(time-4, abandoned-11) punct(time-4, ?-12)",0,0,1,"root(ROOT, time) cop(time, Is) nsbj(time, it) neg(time, not) mark(abandoned, that) nsbjpass(abandoned, those) advmod(called, so) acl(those, called) xcomp(called, reforms) axpass(abandoned, were) ccomp(time, abandoned) pnct(time, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) mark(VBN,IN) nsbjpass(VBN,DT) advmod(JJ,RB) acl(DT,JJ) xcomp(JJ,NNS) axpass(VBN,VBD) ccomp(NN,VBN) pnct(NN,NN)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
No  it is not.,NoDT itPRP isVBZ notRB ,"root(ROOT-0, not-5) dep(not-5, No-1) punct(not-5, ,-2) nsubj(not-5, it-3) cop(not-5, is-4) punct(not-5, .-6)",0,0,0,"root(ROOT, not) dep(not, No) pnct(not, ,) nsbj(not, it) cop(not, is) pnct(not, .)","root(,RB) dep(RB,DT) pnct(RB,RB) nsbj(RB,PRP) cop(RB,VBZ) pnct(RB,RB)",[ ],[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The reforms now seek to target those substantial resources more effectively.,TheDT reformsNNS nowRB seekVBP toTO targetVB thoseDT substantialJJ resourcesNNS moreRBR effectivelyRB ,"root(ROOT-0, seek-4) det(reforms-2, The-1) nsubj(seek-4, reforms-2) advmod(seek-4, now-3) mark(target-6, to-5) xcomp(seek-4, target-6) det(resources-9, those-7) amod(resources-9, substantial-8) dobj(target-6, resources-9) advmod(effectively-11, more-10) advmod(target-6, effectively-11) punct(seek-4, .-12)",0,0,0,"root(ROOT, seek) det(reforms, The) nsbj(seek, reforms) advmod(seek, now) mark(target, to) xcomp(seek, target) det(resorces, those) amod(resorces, sbstantial) dobj(target, resorces) advmod(effectively, more) advmod(target, effectively) pnct(seek, .)","root(,VBP) det(NNS,DT) nsbj(VBP,NNS) advmod(VBP,RB) mark(VB,TO) xcomp(VBP,VB) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) advmod(RB,RBR) advmod(VB,RB) pnct(VBP,VBP)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
The right hon. Gentleman should also consider the clear objectives that ministerial colleagues and I have set the health service in Wales I shall send him a copy if he likes.,TheDT rightJJ honNN GentlemanNNP shouldMD alsoRB considerVB theDT clearJJ objectivesNNS thatWDT ministerialJJ colleaguesNNS andCC IPRP haveVBP setVBN theDT healthNN serviceNN inIN WalesNNP IPRP shallMD sendVB himPRP aDT copyNN ifIN hePRP likesVBZ ,"root(ROOT-0, consider-7) det(Gentleman-4, The-1) amod(Gentleman-4, right-2) compound(Gentleman-4, hon.-3) nsubj(consider-7, Gentleman-4) aux(consider-7, should-5) advmod(consider-7, also-6) det(objectives-10, the-8) amod(objectives-10, clear-9) dobj(consider-7, objectives-10) dobj(set-17, that-11) amod(colleagues-13, ministerial-12) nsubj(set-17, colleagues-13) cc(colleagues-13, and-14) conj:and(colleagues-13, I-15) nsubj(set-17, I-15) aux(set-17, have-16) acl:relcl(objectives-10, set-17) det(service-20, the-18) compound(service-20, health-19) dobj(set-17, service-20) case(Wales-22, in-21) nmod:in(set-17, Wales-22) nsubj(send-25, I-23) aux(send-25, shall-24) ccomp(set-17, send-25) iobj(send-25, him-26) det(copy-28, a-27) dobj(send-25, copy-28) mark(likes-31, if-29) nsubj(likes-31, he-30) advcl(send-25, likes-31) punct(consider-7, .-32)",0,0,0,"root(ROOT, consider) det(Gentleman, The) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(consider, Gentleman) ax(consider, shold) advmod(consider, also) det(objectives, the) amod(objectives, clear) dobj(consider, objectives) dobj(set, that) amod(colleages, ministerial) nsbj(set, colleages) cc(colleages, and) conj:and(colleages, I) nsbj(set, I) ax(set, have) acl:relcl(objectives, set) det(service, the) compond(service, health) dobj(set, service) case(Wales, in) nmod:in(set, Wales) nsbj(send, I) ax(send, shall) ccomp(set, send) iobj(send, him) det(copy, a) dobj(send, copy) mark(likes, if) nsbj(likes, he) advcl(send, likes) pnct(consider, .)","root(,VB) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) advmod(VB,RB) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) dobj(VBN,WDT) amod(NNS,JJ) nsbj(VBN,NNS) cc(NNS,CC) conj:and(NNS,PRP) nsbj(VBN,PRP) ax(VBN,VBP) acl:relcl(NNS,VBN) det(NN,DT) compond(NN,NN) dobj(VBN,NN) case(NNP,IN) nmod:in(VBN,NNP) nsbj(VB,PRP) ax(VB,MD) ccomp(VBN,VB) iobj(VB,PRP) det(NN,DT) dobj(VB,NN) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VB,VBZ) pnct(VB,VB)","[he, consider, also, right, send, likes, Gentleman, ROOT, objectives]","[he, consider, also, send, likes, ROOT, Gentleman, objectives]",4,"[he, send, likes]","[he, send, likes]",PRP_he VBP_consider RB_also VB_send VBZ_likes NNP_Gentleman NNS_objectives ,"[he, consider, also, send, likes, ROOT, Gentleman, objectives]","[he, consider, also, send, likes, ROOT, Gentleman, objectives]",PRP_he VBP_consider RB_also VB_send VBZ_likes NNP_Gentleman NNS_objectives ,"[he, consider, also, send, likes, ROOT, Gentleman, objectives]",PRP_he VBP_consider RB_also VB_send VBZ_likes NNP_Gentleman NNS_objectives ,"[he, consider, also, send, likes, ROOT, Gentleman, objectives]",PRP_he VBP_consider RB_also VB_send VBZ_likes NNP_Gentleman NNS_objectives ,-3,0,1,1,1,1,1,1,1,1
Everyone knows that we have set a target to become the best in Europe  and we are well on the way towards achieving that.,EveryoneNN knowsVBZ thatIN wePRP haveVBP setVBN aDT targetNN toTO becomeVB theDT bestJJS inIN EuropeNNP andCC wePRP areVBP wellRB onIN theDT wayNN towardsIN achievingVBG thatIN ,"root(ROOT-0, knows-2) nsubj(knows-2, Everyone-1) mark(set-6, that-3) nsubj(set-6, we-4) aux(set-6, have-5) ccomp(knows-2, set-6) det(target-8, a-7) dobj(set-6, target-8) mark(become-10, to-9) advcl(set-6, become-10) det(best-12, the-11) xcomp(become-10, best-12) case(Europe-14, in-13) nmod:in(best-12, Europe-14) punct(knows-2, ,-15) cc(knows-2, and-16) nsubj(way-22, we-17) cop(way-22, are-18) advmod(way-22, well-19) case(way-22, on-20) det(way-22, the-21) conj:and(knows-2, way-22) mark(achieving-24, towards-23) acl(way-22, achieving-24) dobj(achieving-24, that-25) punct(knows-2, .-26)",0,0,0,"root(ROOT, knows) nsbj(knows, Everyone) mark(set, that) nsbj(set, we) ax(set, have) ccomp(knows, set) det(target, a) dobj(set, target) mark(become, to) advcl(set, become) det(best, the) xcomp(become, best) case(Erope, in) nmod:in(best, Erope) pnct(knows, ,) cc(knows, and) nsbj(way, we) cop(way, are) advmod(way, well) case(way, on) det(way, the) conj:and(knows, way) mark(achieving, towards) acl(way, achieving) dobj(achieving, that) pnct(knows, .)","root(,VBZ) nsbj(VBZ,NN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) ccomp(VBZ,VBN) det(NN,DT) dobj(VBN,NN) mark(VB,TO) advcl(VBN,VB) det(JJS,DT) xcomp(VB,JJS) case(NNP,IN) nmod:in(JJS,NNP) pnct(VBZ,VBZ) cc(VBZ,CC) nsbj(NN,PRP) cop(NN,VBP) advmod(NN,RB) case(NN,IN) det(NN,DT) conj:and(VBZ,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,IN) pnct(VBZ,VBZ)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
But if the resources are available and the policies are so successful  why are beds lying empty in hospitals in Merthyr because of lack of staff  while qualified staff are unable to get jobs and  at the same time  the area authority is employing agency staff?,ButCC ifIN theDT resourcesNNS areVBP availableJJ andCC theDT policiesNNS areVBP soRB successfulJJ whyWRB areVBP bedsNNS lyingVBG emptyJJ inIN hospitalsNNS inIN MerthyrNNP becauseIN ofIN lackNN ofIN staffNN whileIN qualifiedJJ staffNN areVBP unableJJ toTO getVB jobsNNS andCC atIN theDT sameJJ timeNN theDT areaNN authorityNN isVBZ employingVBG agencyNN staffNN ,"root(ROOT-0, But-1) mark(available-6, if-2) det(resources-4, the-3) nsubj(available-6, resources-4) cop(available-6, are-5) dep(But-1, available-6) cc(available-6, and-7) det(policies-9, the-8) nsubj(successful-12, policies-9) cop(successful-12, are-10) advmod(successful-12, so-11) dep(But-1, successful-12) conj:and(available-6, successful-12) punct(available-6, ,-13) root(,-13, why-14) dep(why-14, are-15) nsubj(are-15, beds-16) acl(beds-16, lying-17) xcomp(lying-17, empty-18) case(hospitals-20, in-19) nmod:in(empty-18, hospitals-20) case(Merthyr-22, in-21) nmod:in(lying-17, Merthyr-22) case(lack-25, because-23) mwe(because-23, of-24) nmod:because_of(lying-17, lack-25) case(staff-27, of-26) nmod:of(lack-25, staff-27) punct(beds-16, ,-28) mark(unable-33, while-29) amod(staff-31, qualified-30) nsubj(unable-33, staff-31) cop(unable-33, are-32) advcl(beds-16, unable-33) mark(get-35, to-34) xcomp(unable-33, get-35) dobj(get-35, jobs-36) cc(unable-33, and-37) punct(unable-33, ,-38) case(time-42, at-39) det(time-42, the-40) amod(time-42, same-41) advcl(beds-16, time-42) conj:and(unable-33, time-42) punct(unable-33, ,-43) det(authority-46, the-44) compound(authority-46, area-45) nsubj(employing-48, authority-46) aux(employing-48, is-47) ccomp(unable-33, employing-48) compound(staff-50, agency-49) dobj(employing-48, staff-50) punct(why-14, ?-51)",0,0,0,"root(ROOT, Bt) mark(available, if) det(resorces, the) nsbj(available, resorces) cop(available, are) dep(Bt, available) cc(available, and) det(policies, the) nsbj(sccessfl, policies) cop(sccessfl, are) advmod(sccessfl, so) dep(Bt, sccessfl) conj:and(available, sccessfl) pnct(available, ,) root(,, why) dep(why, are) nsbj(are, beds) acl(beds, lying) xcomp(lying, empty) case(hospitals, in) nmod:in(empty, hospitals) case(Merthyr, in) nmod:in(lying, Merthyr) case(lack, becase) mwe(becase, of) nmod:becase_of(lying, lack) case(staff, of) nmod:of(lack, staff) pnct(beds, ,) mark(nable, while) amod(staff, qalified) nsbj(nable, staff) cop(nable, are) advcl(beds, nable) mark(get, to) xcomp(nable, get) dobj(get, jobs) cc(nable, and) pnct(nable, ,) case(time, at) det(time, the) amod(time, same) advcl(beds, time) conj:and(nable, time) pnct(nable, ,) det(athority, the) compond(athority, area) nsbj(employing, athority) ax(employing, is) ccomp(nable, employing) compond(staff, agency) dobj(employing, staff) pnct(why, ?)","root(,CC) mark(JJ,IN) det(NNS,DT) nsbj(JJ,NNS) cop(JJ,VBP) dep(CC,JJ) cc(JJ,CC) det(NNS,DT) nsbj(JJ,NNS) cop(JJ,VBP) advmod(JJ,RB) dep(CC,JJ) conj:and(JJ,JJ) pnct(JJ,JJ) root(JJJJWRB) dep(WRB,VBP) nsbj(VBP,NNS) acl(NNS,VBG) xcomp(VBG,JJ) case(NNS,IN) nmod:in(JJ,NNS) case(NNP,IN) nmod:in(VBG,NNP) case(NN,IN) mwe(IN,IN) nmod:becase_of(VBG,NN) case(NN,IN) nmod:of(NN,NN) pnct(NNS,NNS) mark(JJ,IN) amod(NN,JJ) nsbj(JJ,NN) cop(JJ,VBP) advcl(NNS,JJ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,NNS) cc(JJ,CC) pnct(JJ,JJ) case(NN,IN) det(NN,DT) amod(NN,JJ) advcl(NNS,NN) conj:and(JJ,NN) pnct(JJ,JJ) det(NN,DT) compond(NN,NN) nsbj(VBG,NN) ax(VBG,VBZ) ccomp(JJ,VBG) compond(NN,NN) dobj(VBG,NN) pnct(WRB,WRB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
In the name of heaven  what has that to do with the reforms?,InIN theDT nameNN ofIN heavenNN whatWDT hasVBZ thatDT toTO doVB withIN theDT reformsNNS ,"root(ROOT-0, has-8) case(name-3, In-1) det(name-3, the-2) nmod:in(has-8, name-3) case(heaven-5, of-4) nmod:of(name-3, heaven-5) punct(has-8, ,-6) nsubj(has-8, what-7) dobj(has-8, that-9) mark(do-11, to-10) acl(that-9, do-11) case(reforms-14, with-12) det(reforms-14, the-13) nmod:with(do-11, reforms-14) punct(has-8, ?-15)",0,0,0,"root(ROOT, has) case(name, In) det(name, the) nmod:in(has, name) case(heaven, of) nmod:of(name, heaven) pnct(has, ,) nsbj(has, what) dobj(has, that) mark(do, to) acl(that, do) case(reforms, with) det(reforms, the) nmod:with(do, reforms) pnct(has, ?)","root(,VBZ) case(NN,IN) det(NN,DT) nmod:in(VBZ,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBZ,VBZ) nsbj(VBZ,WDT) dobj(VBZ,DT) mark(VB,TO) acl(DT,VB) case(NNS,IN) det(NNS,DT) nmod:with(VB,NNS) pnct(VBZ,VBZ)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Let us make the present system work more effectively rather than creating stupid and foolish competition within the health service.,LetVB usPRP makeVB theDT presentJJ systemNN workNN moreRBR effectivelyRB ratherRB thanIN creatingVBG stupidJJ andCC foolishJJ competitionNN withinIN theDT healthNN serviceNN ,"root(ROOT-0, Let-1) nsubj(make-3, us-2) ccomp(Let-1, make-3) det(work-7, the-4) amod(work-7, present-5) compound(work-7, system-6) dobj(make-3, work-7) advmod(effectively-9, more-8) advmod(make-3, effectively-9) cc(effectively-9, rather-10) mwe(rather-10, than-11) advmod(make-3, creating-12) conj:negcc(effectively-9, creating-12) amod(competition-16, stupid-13) cc(stupid-13, and-14) conj:and(stupid-13, foolish-15) amod(competition-16, foolish-15) dobj(creating-12, competition-16) case(service-20, within-17) det(service-20, the-18) compound(service-20, health-19) nmod:within(effectively-9, service-20) punct(Let-1, .-21)",0,0,1,"root(ROOT, Let) nsbj(make, s) ccomp(Let, make) det(work, the) amod(work, present) compond(work, system) dobj(make, work) advmod(effectively, more) advmod(make, effectively) cc(effectively, rather) mwe(rather, than) advmod(make, creating) conj:negcc(effectively, creating) amod(competition, stpid) cc(stpid, and) conj:and(stpid, foolish) amod(competition, foolish) dobj(creating, competition) case(service, within) det(service, the) compond(service, health) nmod:within(effectively, service) pnct(Let, .)","root(,VB) nsbj(VB,PRP) ccomp(VB,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) advmod(RB,RBR) advmod(VB,RB) cc(RB,RB) mwe(RB,IN) advmod(VB,VBG) conj:negcc(RB,VBG) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) dobj(VBG,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:within(RB,NN) pnct(VB,VB)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What we are doing is to make the present system work more effectively.,WhatWP wePRP areVBP doingVBG isVBZ toTO makeVB theDT presentJJ systemNN workNN moreRBR effectivelyRB ,"root(ROOT-0, is-5) dobj(doing-4, What-1) nsubj(doing-4, we-2) aux(doing-4, are-3) csubj(is-5, doing-4) mark(make-7, to-6) xcomp(is-5, make-7) det(work-11, the-8) amod(work-11, present-9) compound(work-11, system-10) nsubj(effectively-13, work-11) advmod(effectively-13, more-12) xcomp(make-7, effectively-13) punct(is-5, .-14)",0,1,0,"root(ROOT, is) dobj(doing, What) nsbj(doing, we) ax(doing, are) csbj(is, doing) mark(make, to) xcomp(is, make) det(work, the) amod(work, present) compond(work, system) nsbj(effectively, work) advmod(effectively, more) xcomp(make, effectively) pnct(is, .)","root(,VBZ) dobj(VBG,WP) nsbj(VBG,PRP) ax(VBG,VBP) csbj(VBZ,VBG) mark(VB,TO) xcomp(VBZ,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) nsbj(RB,NN) advmod(RB,RBR) xcomp(VB,RB) pnct(VBZ,VBZ)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
No one can dispute the tremendous additional resources that have gone into the health service in Wales.,NoDT oneNN canMD disputeVB theDT tremendousJJ additionalJJ resourcesNNS thatWDT haveVBP goneVBN intoIN theDT healthNN serviceNN inIN WalesNNP ,"root(ROOT-0, dispute-4) neg(one-2, No-1) nsubj(dispute-4, one-2) aux(dispute-4, can-3) det(resources-8, the-5) amod(resources-8, tremendous-6) amod(resources-8, additional-7) dobj(dispute-4, resources-8) nsubj(gone-11, that-9) aux(gone-11, have-10) acl:relcl(resources-8, gone-11) case(service-15, into-12) det(service-15, the-13) compound(service-15, health-14) nmod:into(gone-11, service-15) case(Wales-17, in-16) nmod:in(service-15, Wales-17) punct(dispute-4, .-18)",0,0,0,"root(ROOT, dispte) neg(one, No) nsbj(dispte, one) ax(dispte, can) det(resorces, the) amod(resorces, tremendos) amod(resorces, additional) dobj(dispte, resorces) nsbj(gone, that) ax(gone, have) acl:relcl(resorces, gone) case(service, into) det(service, the) compond(service, health) nmod:into(gone, service) case(Wales, in) nmod:in(service, Wales) pnct(dispte, .)","root(,VB) neg(NN,DT) nsbj(VB,NN) ax(VB,MD) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) dobj(VB,NNS) nsbj(VBN,WDT) ax(VBN,VBP) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:into(VBN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We must now follow the clear target that we have set  of adding years to life and quality of life to years.,WePRP mustMD nowRB followVB theDT clearJJ targetNN thatIN wePRP haveVBP setVBN ofIN addingVBG yearsNNS toTO lifeNN andCC qualityNN ofIN lifeNN toTO yearsNNS ,"root(ROOT-0, follow-4) nsubj(follow-4, We-1) aux(follow-4, must-2) advmod(follow-4, now-3) det(target-7, the-5) amod(target-7, clear-6) dobj(follow-4, target-7) dobj(set-11, that-8) nsubj(set-11, we-9) aux(set-11, have-10) acl:relcl(target-7, set-11) punct(follow-4, ,-12) mark(adding-14, of-13) advcl(follow-4, adding-14) dobj(adding-14, years-15) case(life-17, to-16) nmod:to(adding-14, life-17) cc(life-17, and-18) nmod:to(adding-14, quality-19) conj:and(life-17, quality-19) case(life-21, of-20) nmod:of(life-17, life-21) case(years-23, to-22) nmod:to(adding-14, years-23) punct(follow-4, .-24)",0,0,0,"root(ROOT, follow) nsbj(follow, We) ax(follow, mst) advmod(follow, now) det(target, the) amod(target, clear) dobj(follow, target) dobj(set, that) nsbj(set, we) ax(set, have) acl:relcl(target, set) pnct(follow, ,) mark(adding, of) advcl(follow, adding) dobj(adding, years) case(life, to) nmod:to(adding, life) cc(life, and) nmod:to(adding, qality) conj:and(life, qality) case(life, of) nmod:of(life, life) case(years, to) nmod:to(adding, years) pnct(follow, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) dobj(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) acl:relcl(NN,VBN) pnct(VB,VB) mark(VBG,IN) advcl(VB,VBG) dobj(VBG,NNS) case(NN,TO) nmod:to(VBG,NN) cc(NN,CC) nmod:to(VBG,NN) conj:and(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,TO) nmod:to(VBG,NNS) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We will always win any argument about resources  because we have put substantial  additional resources into the NHS.,WePRP willMD alwaysRB winVB anyDT argumentNN aboutIN resourcesNNS becauseIN wePRP haveVBP putVBN substantialJJ additionalJJ resourcesNNS intoIN theDT NHSNNP ,"root(ROOT-0, win-4) nsubj(win-4, We-1) aux(win-4, will-2) advmod(win-4, always-3) det(argument-6, any-5) dobj(win-4, argument-6) case(resources-8, about-7) nmod:about(argument-6, resources-8) punct(win-4, ,-9) mark(put-13, because-10) nsubj(put-13, we-11) aux(put-13, have-12) advcl(win-4, put-13) xcomp(put-13, substantial-14) punct(win-4, ,-15) amod(resources-17, additional-16) dobj(win-4, resources-17) case(NHS-20, into-18) det(NHS-20, the-19) nmod:into(resources-17, NHS-20) punct(win-4, .-21)",0,0,0,"root(ROOT, win) nsbj(win, We) ax(win, will) advmod(win, always) det(argment, any) dobj(win, argment) case(resorces, abot) nmod:abot(argment, resorces) pnct(win, ,) mark(pt, becase) nsbj(pt, we) ax(pt, have) advcl(win, pt) xcomp(pt, sbstantial) pnct(win, ,) amod(resorces, additional) dobj(win, resorces) case(NHS, into) det(NHS, the) nmod:into(resorces, NHS) pnct(win, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) det(NN,DT) dobj(VB,NN) case(NNS,IN) nmod:abot(NN,NNS) pnct(VB,VB) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) advcl(VB,VBN) xcomp(VBN,JJ) pnct(VB,VB) amod(NNS,JJ) dobj(VB,NNS) case(NNP,IN) det(NNP,DT) nmod:into(NNS,NNP) pnct(VB,VB)",[ ],[ ],6,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We now have to have a meaningful  clear policy towards which we can all work everyone involved in the NHS.,WePRP nowRB haveVBP toTO haveVB aDT meaningfulJJ clearJJ policyNN towardsNNS whichWDT wePRP canMD allDT workVB everyoneNN involvedVBN inIN theDT NHSNNP ,"root(ROOT-0, have-3) nsubj(have-3, We-1) advmod(have-3, now-2) mark(have-5, to-4) xcomp(have-3, have-5) det(policy-10, a-6) amod(policy-10, meaningful-7) punct(policy-10, ,-8) amod(policy-10, clear-9) dobj(have-5, policy-10) case(which-12, towards-11) nmod:towards(work-16, which-12) nsubj(work-16, we-13) aux(work-16, can-14) det(work-16, all-15) acl:relcl(policy-10, work-16) dobj(work-16, everyone-17) acl(everyone-17, involved-18) case(NHS-21, in-19) det(NHS-21, the-20) nmod:in(involved-18, NHS-21) punct(have-3, .-22)",0,0,0,"root(ROOT, have) nsbj(have, We) advmod(have, now) mark(have, to) xcomp(have, have) det(policy, a) amod(policy, meaningfl) pnct(policy, ,) amod(policy, clear) dobj(have, policy) case(which, towards) nmod:towards(work, which) nsbj(work, we) ax(work, can) det(work, all) acl:relcl(policy, work) dobj(work, everyone) acl(everyone, involved) case(NHS, in) det(NHS, the) nmod:in(involved, NHS) pnct(have, .)","root(,VB) nsbj(VB,PRP) advmod(VB,RB) mark(VB,TO) xcomp(VB,VB) det(NN,DT) amod(NN,JJ) pnct(NN,NN) amod(NN,JJ) dobj(VB,NN) case(WDT,NNS) nmod:towards(VB,WDT) nsbj(VB,PRP) ax(VB,MD) det(VB,DT) acl:relcl(NN,VB) dobj(VB,NN) acl(NN,VBN) case(NNP,IN) det(NNP,DT) nmod:in(VBN,NNP) pnct(VB,VB)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
We have now set that target  and we believe that we are the first health service in Europe to do so.,WePRP haveVBP nowRB setVBN thatIN targetNN andCC wePRP believeVBP thatIN wePRP areVBP theDT firstJJ healthNN serviceNN inIN EuropeNNP toTO doVB soRB ,"root(ROOT-0, set-4) nsubj(set-4, We-1) aux(set-4, have-2) advmod(set-4, now-3) det(target-6, that-5) dobj(set-4, target-6) punct(set-4, ,-7) cc(set-4, and-8) nsubj(believe-10, we-9) conj:and(set-4, believe-10) mark(service-17, that-11) nsubj(service-17, we-12) cop(service-17, are-13) det(service-17, the-14) amod(service-17, first-15) compound(service-17, health-16) ccomp(believe-10, service-17) case(Europe-19, in-18) nmod:in(service-17, Europe-19) mark(do-21, to-20) xcomp(service-17, do-21) advmod(do-21, so-22) punct(set-4, .-23)",0,0,0,"root(ROOT, set) nsbj(set, We) ax(set, have) advmod(set, now) det(target, that) dobj(set, target) pnct(set, ,) cc(set, and) nsbj(believe, we) conj:and(set, believe) mark(service, that) nsbj(service, we) cop(service, are) det(service, the) amod(service, first) compond(service, health) ccomp(believe, service) case(Erope, in) nmod:in(service, Erope) mark(do, to) xcomp(service, do) advmod(do, so) pnct(set, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) advmod(VBN,RB) det(NN,IN) dobj(VBN,NN) pnct(VBN,VBN) cc(VBN,CC) nsbj(VBP,PRP) conj:and(VBN,VBP) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBP) det(NN,DT) amod(NN,JJ) compond(NN,NN) ccomp(VBP,NN) case(NNP,IN) nmod:in(NN,NNP) mark(VB,TO) xcomp(NN,VB) advmod(VB,RB) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
However  will the Secretary of State now decide to give the appropriate authorities sufficient funding to enable care in the community to become a reality?,HoweverRB willMD theDT SecretaryNNP ofIN StateNNP nowRB decideVBP toTO giveVB theDT appropriateJJ authoritiesNNS sufficientJJ fundingNN toTO enableVB careNN inIN theDT communityNN toTO becomeVB aDT realityNN ,"root(ROOT-0, decide-9) advmod(decide-9, However-1) punct(decide-9, ,-2) aux(decide-9, will-3) det(Secretary-5, the-4) nsubj(decide-9, Secretary-5) case(State-7, of-6) nmod:of(Secretary-5, State-7) advmod(decide-9, now-8) mark(give-11, to-10) xcomp(decide-9, give-11) det(authorities-14, the-12) amod(authorities-14, appropriate-13) iobj(give-11, authorities-14) amod(funding-16, sufficient-15) dobj(give-11, funding-16) mark(enable-18, to-17) xcomp(funding-16, enable-18) dobj(enable-18, care-19) case(community-22, in-20) det(community-22, the-21) nmod:in(care-19, community-22) mark(become-24, to-23) xcomp(enable-18, become-24) det(reality-26, a-25) dobj(become-24, reality-26) punct(decide-9, ?-27)",0,0,0,"root(ROOT, decide) advmod(decide, However) pnct(decide, ,) ax(decide, will) det(Secretary, the) nsbj(decide, Secretary) case(State, of) nmod:of(Secretary, State) advmod(decide, now) mark(give, to) xcomp(decide, give) det(athorities, the) amod(athorities, appropriate) iobj(give, athorities) amod(fnding, sfficient) dobj(give, fnding) mark(enable, to) xcomp(fnding, enable) dobj(enable, care) case(commnity, in) det(commnity, the) nmod:in(care, commnity) mark(become, to) xcomp(enable, become) det(reality, a) dobj(become, reality) pnct(decide, ?)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) advmod(VBP,RB) mark(VB,TO) xcomp(VBP,VB) det(NNS,DT) amod(NNS,JJ) iobj(VB,NNS) amod(NN,JJ) dobj(VB,NN) mark(VB,TO) xcomp(NN,VB) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) mark(VB,TO) xcomp(VB,VB) det(NN,DT) dobj(VB,NN) pnct(VBP,VBP)","[give, now, Secretary, decide, However, State, ROOT]","[give, now, Secretary, decide, However, State, ROOT]",8,[ ],[ ],VB_give RB_now NNP_Secretary VB_decide RB_However NNP_State ,"[give, now, Secretary, decide, However, State, ROOT]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I speak for the elderly and the mentally ill and in the cities and towns of Wales  it is clear that all is not well.,IPRP speakVBP forIN theDT elderlyJJ andCC theDT mentallyRB illJJ andCC inIN theDT citiesNNS andCC townsNNS ofIN WalesNNP itPRP isVBZ clearJJ thatIN allDT isVBZ notRB wellRB ,"root(ROOT-0, speak-2) nsubj(speak-2, I-1) nsubj(speak-2'''', I-1) nsubj(speak-2''''', I-1) nsubj(speak-2'''''', I-1) conj:and(speak-2, speak-2'''') conj:and(speak-2, speak-2''''') conj:and(speak-2, speak-2'''''') case(elderly-5, for-3) det(elderly-5, the-4) nmod:for(speak-2, elderly-5) cc(speak-2, and-6) det(ill-9, the-7) advmod(ill-9, mentally-8) conj(elderly-5, ill-9) cc(speak-2, and-10) case(cities-13, in-11) det(cities-13, the-12) nmod:in(speak-2'''', cities-13) cc(speak-2, and-14) conj(elderly-5, towns-15) case(Wales-17, of-16) nmod:of(towns-15, Wales-17) punct(speak-2, ,-18) nsubj(clear-21, it-19) cop(clear-21, is-20) parataxis(speak-2, clear-21) mark(well-26, that-22) nsubj(well-26, all-23) cop(well-26, is-24) neg(well-26, not-25) ccomp(clear-21, well-26) punct(speak-2, .-27)",0,0,0,"root(ROOT, speak) nsbj(speak, I) nsbj(speak, I) nsbj(speak, I) nsbj(speak, I) conj:and(speak, speak) conj:and(speak, speak) conj:and(speak, speak) case(elderly, for) det(elderly, the) nmod:for(speak, elderly) cc(speak, and) det(ill, the) advmod(ill, mentally) conj(elderly, ill) cc(speak, and) case(cities, in) det(cities, the) nmod:in(speak, cities) cc(speak, and) conj(elderly, towns) case(Wales, of) nmod:of(towns, Wales) pnct(speak, ,) nsbj(clear, it) cop(clear, is) parataxis(speak, clear) mark(well, that) nsbj(well, all) cop(well, is) neg(well, not) ccomp(clear, well) pnct(speak, .)","root(,VBP) nsbj(VBP,PRP) nsbj(VBP,PRP) nsbj(VBP,PRP) nsbj(VBP,PRP) conj:and(VBP,VBP) conj:and(VBP,VBP) conj:and(VBP,VBP) case(JJ,IN) det(JJ,DT) nmod:for(VBP,JJ) cc(VBP,CC) det(JJ,DT) advmod(JJ,RB) conj(JJ,JJ) cc(VBP,CC) case(NNS,IN) det(NNS,DT) nmod:in(VBP,NNS) cc(VBP,CC) conj(JJ,NNS) case(NNP,IN) nmod:of(NNS,NNP) pnct(VBP,VBP) nsbj(JJ,PRP) cop(JJ,VBZ) parataxis(VBP,JJ) mark(RB,IN) nsbj(RB,DT) cop(RB,VBZ) neg(RB,RB) ccomp(JJ,RB) pnct(VBP,VBP)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Obviously  an announcement will be made about the subject to which the hon. Gentleman has devoted himself.,ObviouslyRB anDT announcementNN willMD beVB madeVBN aboutIN theDT subjectNN toTO whichWDT theDT honNN GentlemanNNP hasVBZ devotedVBN himselfPRP ,"root(ROOT-0, made-7) advmod(made-7, Obviously-1) punct(made-7, ,-2) det(announcement-4, an-3) nsubjpass(made-7, announcement-4) aux(made-7, will-5) auxpass(made-7, be-6) case(subject-10, about-8) det(subject-10, the-9) nmod:about(made-7, subject-10) case(which-12, to-11) nmod:to(devoted-17, which-12) det(Gentleman-15, the-13) compound(Gentleman-15, hon.-14) nsubj(devoted-17, Gentleman-15) aux(devoted-17, has-16) acl:relcl(subject-10, devoted-17) dobj(devoted-17, himself-18) punct(made-7, .-19)",0,0,0,"root(ROOT, made) advmod(made, Obviosly) pnct(made, ,) det(annoncement, an) nsbjpass(made, annoncement) ax(made, will) axpass(made, be) case(sbject, abot) det(sbject, the) nmod:abot(made, sbject) case(which, to) nmod:to(devoted, which) det(Gentleman, the) compond(Gentleman, hon.) nsbj(devoted, Gentleman) ax(devoted, has) acl:relcl(sbject, devoted) dobj(devoted, himself) pnct(made, .)","root(,VBN) advmod(VBN,RB) pnct(VBN,VBN) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(WDT,TO) nmod:to(VBN,WDT) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) acl:relcl(NN,VBN) dobj(VBN,PRP) pnct(VBN,VBN)","[subject, Gentleman, himself, which, devoted]","[subject, Gentleman, himself, which, devoted]",9,[ ],[ ],NN_subject NNP_Gentleman PRP_himself WDT_which VBN_devoted ,"[subject, Gentleman, himself, which, devoted]","[subject, Gentleman, himself, which, devoted]",NN_subject NNP_Gentleman PRP_himself WDT_which VBN_devoted ,"[subject, Gentleman, himself, which, devoted]",NN_subject NNP_Gentleman PRP_himself WDT_which VBN_devoted ,"[subject, Gentleman, himself, which, devoted]",NN_subject NNP_Gentleman PRP_himself WDT_which VBN_devoted ,-3,0,2,0,0,0,2,2,2,2
After hearing the results of the consultation  I decided not to proceed with reducing the number of community health councils.,AfterIN hearingVBG theDT resultsNNS ofIN theDT consultationNN IPRP decidedVBD notRB toTO proceedVB withIN reducingVBG theDT numberNN ofIN communityNN healthNN councilsNNS ,"root(ROOT-0, decided-10) mark(hearing-2, After-1) advcl(decided-10, hearing-2) det(results-4, the-3) dobj(hearing-2, results-4) case(consultation-7, of-5) det(consultation-7, the-6) nmod:of(results-4, consultation-7) punct(decided-10, ,-8) nsubj(decided-10, I-9) neg(proceed-13, not-11) mark(proceed-13, to-12) xcomp(decided-10, proceed-13) mark(reducing-15, with-14) advcl(proceed-13, reducing-15) det(number-17, the-16) dobj(reducing-15, number-17) case(councils-21, of-18) compound(councils-21, community-19) compound(councils-21, health-20) nmod:of(number-17, councils-21) punct(decided-10, .-22)",0,0,0,"root(ROOT, decided) mark(hearing, After) advcl(decided, hearing) det(reslts, the) dobj(hearing, reslts) case(consltation, of) det(consltation, the) nmod:of(reslts, consltation) pnct(decided, ,) nsbj(decided, I) neg(proceed, not) mark(proceed, to) xcomp(decided, proceed) mark(redcing, with) advcl(proceed, redcing) det(nmber, the) dobj(redcing, nmber) case(concils, of) compond(concils, commnity) compond(concils, health) nmod:of(nmber, concils) pnct(decided, .)","root(,VBD) mark(VBG,IN) advcl(VBD,VBG) det(NNS,DT) dobj(VBG,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(VBD,VBD) nsbj(VBD,PRP) neg(VB,RB) mark(VB,TO) xcomp(VBD,VB) mark(VBG,IN) advcl(VB,VBG) det(NN,DT) dobj(VBG,NN) case(NNS,IN) compond(NNS,NN) compond(NNS,NN) nmod:of(NN,NNS) pnct(VBD,VBD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I regard Project 2000 as a vital element in the strategy we have been debating.,IPRP regardVBP ProjectJJ 2000CD asIN aDT vitalJJ elementNN inIN theDT strategyNN wePRP haveVBP beenVBN debatingVBG ,"root(ROOT-0, regard-2) nsubj(regard-2, I-1) compound(2000-4, Project-3) dobj(regard-2, 2000-4) case(element-8, as-5) det(element-8, a-6) amod(element-8, vital-7) nmod:as(regard-2, element-8) case(strategy-11, in-9) det(strategy-11, the-10) nmod:in(element-8, strategy-11) nsubj(debating-15, we-12) aux(debating-15, have-13) aux(debating-15, been-14) ccomp(regard-2, debating-15) punct(regard-2, .-16)",0,0,0,"root(ROOT, regard) nsbj(regard, I) compond(2000, Project) dobj(regard, 2000) case(element, as) det(element, a) amod(element, vital) nmod:as(regard, element) case(strategy, in) det(strategy, the) nmod:in(element, strategy) nsbj(debating, we) ax(debating, have) ax(debating, been) ccomp(regard, debating) pnct(regard, .)","root(,VBP) nsbj(VBP,PRP) compond(CD,JJ) dobj(VBP,CD) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:as(VBP,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) nsbj(VBG,PRP) ax(VBG,VBP) ax(VBG,VBN) ccomp(VBP,VBG) pnct(VBP,VBP)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
It is important that that project is up and running in Wales.,ItPRP isVBZ importantJJ thatIN thatDT projectNN isVBZ upRB andCC runningVBG inIN WalesNNP ,"root(ROOT-0, important-3) nsubj(important-3, It-1) cop(important-3, is-2) dep(important-3, that-4) dep(that-4, that-5) dep(that-5, project-6) acl(project-6, is-7) advmod(is-7, up-8) cc(up-8, and-9) advmod(is-7, running-10) conj:and(up-8, running-10) case(Wales-12, in-11) nmod:in(up-8, Wales-12) punct(important-3, .-13)",0,0,0,"root(ROOT, important) nsbj(important, It) cop(important, is) dep(important, that) dep(that, that) dep(that, project) acl(project, is) advmod(is, p) cc(p, and) advmod(is, rnning) conj:and(p, rnning) case(Wales, in) nmod:in(p, Wales) pnct(important, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) dep(JJ,DT) dep(DT,DT) dep(DT,NN) acl(NN,VBZ) advmod(VBZ,RB) cc(RB,CC) advmod(VBZ,VBG) conj:and(RB,VBG) case(NNP,IN) nmod:in(RB,NNP) pnct(JJ,JJ)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I recently had the opportunity to meet the nurses  and I told them the importance we attach to Project 2000.,IPRP recentlyRB hadVBD theDT opportunityNN toTO meetVB theDT nursesNNS andCC IPRP toldVBD themPRP theDT importanceNN wePRP attachVBP toTO ProjectVB 2000CD ,"root(ROOT-0, had-3) nsubj(had-3, I-1) advmod(had-3, recently-2) det(opportunity-5, the-4) dobj(had-3, opportunity-5) mark(meet-7, to-6) acl(opportunity-5, meet-7) det(nurses-9, the-8) dobj(meet-7, nurses-9) punct(had-3, ,-10) cc(had-3, and-11) nsubj(told-13, I-12) conj:and(had-3, told-13) iobj(told-13, them-14) det(importance-16, the-15) dobj(told-13, importance-16) nsubj(attach-18, we-17) acl:relcl(importance-16, attach-18) case(2000-21, to-19) compound(2000-21, Project-20) nmod:to(attach-18, 2000-21) punct(had-3, .-22)",0,0,0,"root(ROOT, had) nsbj(had, I) advmod(had, recently) det(opportnity, the) dobj(had, opportnity) mark(meet, to) acl(opportnity, meet) det(nrses, the) dobj(meet, nrses) pnct(had, ,) cc(had, and) nsbj(told, I) conj:and(had, told) iobj(told, them) det(importance, the) dobj(told, importance) nsbj(attach, we) acl:relcl(importance, attach) case(2000, to) compond(2000, Project) nmod:to(attach, 2000) pnct(had, .)","root(,VBD) nsbj(VBD,PRP) advmod(VBD,RB) det(NN,DT) dobj(VBD,NN) mark(VB,TO) acl(NN,VB) det(NNS,DT) dobj(VB,NNS) pnct(VBD,VBD) cc(VBD,CC) nsbj(VBD,PRP) conj:and(VBD,VBD) iobj(VBD,PRP) det(NN,DT) dobj(VBD,NN) nsbj(VBP,PRP) acl:relcl(NN,VBP) case(CD,TO) compond(CD,VB) nmod:to(VBP,CD) pnct(VBD,VBD)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does the right hon. and learned Gentleman agree that there have been recent changes in two respects that might considerably affect what he has said?,DoesVBZ theDT rightJJ honNN andCC learnedVBD GentlemanNNP agreeVBP thatIN thereEX haveVBP beenVBN recentJJ changesNNS inIN twoCD respectsNNS thatWDT mightMD considerablyRB affectVB whatWP hePRP hasVBZ saidVBD ,"root(ROOT-0, Does-1) det(hon.-4, the-2) amod(hon.-4, right-3) dobj(Does-1, hon.-4) cc(hon.-4, and-5) dobj(Does-1, learned-6) conj:and(hon.-4, learned-6) nsubj(agree-8, Gentleman-7) ccomp(learned-6, agree-8) mark(changes-14, that-9) expl(changes-14, there-10) aux(changes-14, have-11) cop(changes-14, been-12) amod(changes-14, recent-13) ccomp(agree-8, changes-14) case(respects-17, in-15) nummod(respects-17, two-16) nmod:in(changes-14, respects-17) nsubj(affect-21, that-18) aux(affect-21, might-19) advmod(affect-21, considerably-20) acl:relcl(respects-17, affect-21) dobj(said-25, what-22) nsubj(said-25, he-23) aux(said-25, has-24) ccomp(affect-21, said-25) punct(Does-1, ?-26)",0,1,0,"root(ROOT, Does) det(hon., the) amod(hon., right) dobj(Does, hon.) cc(hon., and) dobj(Does, learned) conj:and(hon., learned) nsbj(agree, Gentleman) ccomp(learned, agree) mark(changes, that) expl(changes, there) ax(changes, have) cop(changes, been) amod(changes, recent) ccomp(agree, changes) case(respects, in) nmmod(respects, two) nmod:in(changes, respects) nsbj(affect, that) ax(affect, might) advmod(affect, considerably) acl:relcl(respects, affect) dobj(said, what) nsbj(said, he) ax(said, has) ccomp(affect, said) pnct(Does, ?)","root(,VBZ) det(VBZ,DT) amod(DT,JJ) dobj(VBZ,VBZ) cc(VBZ,CC) dobj(VBZ,VBD) conj:and(VBD,VBD) nsbj(VBP,NNP) ccomp(VBD,VBP) mark(NNS,WDT) expl(NNS,EX) ax(NNS,VBP) cop(NNS,VBN) amod(NNS,JJ) ccomp(VBP,NNS) case(NNS,IN) nmmod(NNS,CD) nmod:in(NNS,NNS) nsbj(VB,WDT) ax(VB,MD) advmod(VB,RB) acl:relcl(NNS,VB) dobj(VBD,WP) nsbj(VBD,PRP) ax(VBD,VBZ) ccomp(VB,VBD) pnct(VBZ,VBZ)","[he, learned, agree, changes, what, Gentleman, said, affect]","[he, learned, agree, changes, what, Gentleman, said, affect]",14,"[agree, learned, Gentleman, changes]","[agree, learned, Gentleman, changes]",PRP_he VBD_learned VB_agree NNS_changes WP_what NNP_Gentleman VBD_said VBP_affect ,"[he, learned, agree, changes, what, Gentleman, said, affect]","[he, learned, agree, changes, what, Gentleman, said, affect]",PRP_he VBD_learned VB_agree NNS_changes WP_what NNP_Gentleman VBD_said VBP_affect ,"[he, learned, agree, changes, what, Gentleman, said, affect]",PRP_he VBD_learned VB_agree NNS_changes WP_what NNP_Gentleman VBD_said VBP_affect ,"[he, learned, agree, changes, what, Gentleman, said, affect]",PRP_he VBD_learned VB_agree NNS_changes WP_what NNP_Gentleman VBD_said VBP_affect ,-3,0,2,0,0,0,0,0,0,0
As it is now seven months since the Chancellor's incentive Budget  does he yet detect any signs of industrial revival resulting from those incentives?,AsIN itPRP isVBZ nowRB sevenCD monthsNNS sinceIN theDT ChancellorNNP 'sPOS incentiveJJ BudgetNN doesVBZ hePRP yetRB detectVBP anyDT signsNNS ofIN industrialJJ revivalNN resultingVBG fromIN thoseDT incentivesNNS ,"root(ROOT-0, detect-17) mark(months-6, As-1) nsubj(months-6, it-2) cop(months-6, is-3) advmod(months-6, now-4) nummod(months-6, seven-5) advcl(detect-17, months-6) case(Budget-12, since-7) det(Chancellor-9, the-8) nmod:poss(Budget-12, Chancellor-9) case(Chancellor-9, 's-10) compound(Budget-12, incentive-11) nmod:since(months-6, Budget-12) punct(detect-17, ,-13) aux(detect-17, does-14) nsubj(detect-17, he-15) advmod(detect-17, yet-16) det(signs-19, any-18) dobj(detect-17, signs-19) case(revival-22, of-20) amod(revival-22, industrial-21) nmod:of(signs-19, revival-22) acl(signs-19, resulting-23) case(incentives-26, from-24) det(incentives-26, those-25) nmod:from(resulting-23, incentives-26) punct(detect-17, ?-27)",0,0,0,"root(ROOT, detect) mark(months, As) nsbj(months, it) cop(months, is) advmod(months, now) nmmod(months, seven) advcl(detect, months) case(Bdget, since) det(Chancellor, the) nmod:poss(Bdget, Chancellor) ""case(Chancellor, s)"", compond(Bdget, incentive) nmod:since(months, Bdget) pnct(detect, ,) ax(detect, does) nsbj(detect, he) advmod(detect, yet) det(signs, any) dobj(detect, signs) case(revival, of) amod(revival, indstrial) nmod:of(signs, revival) acl(signs, reslting) case(incentives, from) det(incentives, those) nmod:from(reslting, incentives) pnct(detect, ?)","root(,VBP) mark(NNS,IN) nsbj(NNS,PRP) cop(NNS,VBZ) advmod(NNS,RB) nmmod(NNS,CD) advcl(VBP,NNS) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,JJ) nmod:since(NNS,NN) pnct(VBP,VBP) ax(VBP,VBZ) nsbj(VBP,PRP) advmod(VBP,RB) det(NNS,DT) dobj(VBP,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) acl(NNS,VBG) case(NNS,IN) det(NNS,DT) nmod:from(VBG,NNS) pnct(VBP,VBP)","[months, Chancellor, Budget]","[months, Chancellor, Budget]",3,"[months, Chancellor, Budget]","[months, Chancellor, Budget]",NNS_months NNP_Chancellor NNP_Budget ,"[months, Chancellor, Budget]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We made it plain also that the task of reconstructing our economy was a task for a decade.,WePRP madeVBD itPRP plainVB alsoRB thatIN theDT taskNN ofIN reconstructingVBG ourPRP$ economyNN wasVBD aDT taskNN forIN aDT decadeNN ,"root(ROOT-0, made-2) nsubj(made-2, We-1) nsubj(task-15, it-3) advmod(also-5, plain-4) advmod(task-15, also-5) mark(task-15, that-6) det(task-8, the-7) nsubj(task-15, task-8) mark(reconstructing-10, of-9) acl(task-8, reconstructing-10) nmod:poss(economy-12, our-11) dobj(reconstructing-10, economy-12) cop(task-15, was-13) det(task-15, a-14) ccomp(made-2, task-15) case(decade-18, for-16) det(decade-18, a-17) nmod:for(task-15, decade-18) punct(made-2, .-19)",0,0,0,"root(ROOT, made) nsbj(made, We) nsbj(task, it) advmod(also, plain) advmod(task, also) mark(task, that) det(task, the) nsbj(task, task) mark(reconstrcting, of) acl(task, reconstrcting) nmod:poss(economy, or) dobj(reconstrcting, economy) cop(task, was) det(task, a) ccomp(made, task) case(decade, for) det(decade, a) nmod:for(task, decade) pnct(made, .)","root(,VBD) nsbj(VBD,PRP) nsbj(NN,PRP) advmod(RB,VB) advmod(NN,RB) mark(NN,IN) det(NN,DT) nsbj(NN,NN) mark(VBG,IN) acl(NN,VBG) nmod:poss(NN,PRP$) dobj(VBG,NN) cop(NN,VBD) det(NN,DT) ccomp(VBD,NN) case(NN,IN) det(NN,DT) nmod:for(NN,NN) pnct(VBD,VBD)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
We do not intend to be deflected from the difficult and harsh measures that are necessary.,WePRP doVBP notRB intendVB toTO beVB deflectedVBN fromIN theDT difficultJJ andCC harshJJ measuresNNS thatWDT areVBP necessaryJJ ,"root(ROOT-0, intend-4) nsubj(intend-4, We-1) aux(intend-4, do-2) neg(intend-4, not-3) mark(deflected-7, to-5) auxpass(deflected-7, be-6) xcomp(intend-4, deflected-7) case(measures-13, from-8) det(measures-13, the-9) amod(measures-13, difficult-10) cc(difficult-10, and-11) conj:and(difficult-10, harsh-12) amod(measures-13, harsh-12) nmod:from(deflected-7, measures-13) nsubj(necessary-16, that-14) cop(necessary-16, are-15) acl:relcl(measures-13, necessary-16) punct(intend-4, .-17)",0,0,1,"root(ROOT, intend) nsbj(intend, We) ax(intend, do) neg(intend, not) mark(deflected, to) axpass(deflected, be) xcomp(intend, deflected) case(measres, from) det(measres, the) amod(measres, difficlt) cc(difficlt, and) conj:and(difficlt, harsh) amod(measres, harsh) nmod:from(deflected, measres) nsbj(necessary, that) cop(necessary, are) acl:relcl(measres, necessary) pnct(intend, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) mark(VBN,TO) axpass(VBN,VB) xcomp(VB,VBN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NNS,JJ) nmod:from(VBN,NNS) nsbj(JJ,WDT) cop(JJ,VBP) acl:relcl(NNS,JJ) pnct(VB,VB)",[ ],[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Government's top priority is the battle against the present level of inflation.,TheDT GovernmentNNP 'sPOS topJJ priorityNN isVBZ theDT battleNN againstIN theDT presentJJ levelNN ofIN inflationNN ,"root(ROOT-0, battle-8) det(Government-2, The-1) nmod:poss(priority-5, Government-2) case(Government-2, 's-3) amod(priority-5, top-4) nsubj(battle-8, priority-5) cop(battle-8, is-6) det(battle-8, the-7) case(level-12, against-9) det(level-12, the-10) amod(level-12, present-11) nmod:against(battle-8, level-12) case(inflation-14, of-13) nmod:of(level-12, inflation-14) punct(battle-8, .-15)",0,0,0,"root(ROOT, battle) det(Government, The) nmod:poss(priority, Government) ""case(Government, s)"", amod(priority, top) nsbj(battle, priority) cop(battle, is) det(battle, the) case(level, against) det(level, the) amod(level, present) nmod:against(battle, level) case(inflation, of) nmod:of(level, inflation) pnct(battle, .)","root(,NN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) nsbj(NN,NN) cop(NN,VBZ) det(NN,DT) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:against(NN,NN) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN)","[Government, priority, top, battle]","[Government, priority, top, battle]",12,"[Government, priority, top, battle]","[Government, priority, top, battle]",NNP_Government NN_priority JJ_top NN_battle ,"[Government, priority, top, battle]","[Government, priority, top, battle]",NNP_Government NN_priority JJ_top NN_battle ,"[Government, priority, top, battle]",NNP_Government NN_priority JJ_top NN_battle ,"[Government, priority, top, battle]",NNP_Government NN_priority JJ_top NN_battle ,-3,0,2,1,1,1,1,1,1,2
Surely  therefore  the Government should give us some idea of when they propose to abolish the system and what they intend to put in its place.,SurelyRB thereforeIN theDT GovernmentNNP shouldMD giveVB usPRP someDT ideaNN ofIN whenWRB theyPRP proposeVBP toTO abolishVB theDT systemNN andCC whatWP theyPRP intendVBP toTO putVB inIN itsPRP$ placeNN ,"root(ROOT-0, give-8) advmod(give-8, Surely-1) punct(give-8, ,-2) advmod(give-8, therefore-3) punct(give-8, ,-4) det(Government-6, the-5) nsubj(give-8, Government-6) aux(give-8, should-7) iobj(give-8, us-9) det(idea-11, some-10) dobj(give-8, idea-11) mark(propose-15, of-12) advmod(propose-15, when-13) nsubj(propose-15, they-14) acl(idea-11, propose-15) mark(abolish-17, to-16) xcomp(propose-15, abolish-17) det(system-19, the-18) dobj(abolish-17, system-19) cc(abolish-17, and-20) dobj(intend-23, what-21) nsubj(intend-23, they-22) xcomp(propose-15, intend-23) conj:and(abolish-17, intend-23) mark(put-25, to-24) xcomp(intend-23, put-25) compound:prt(put-25, in-26) nmod:poss(place-28, its-27) dobj(put-25, place-28) punct(give-8, .-29)",0,0,0,"root(ROOT, give) advmod(give, Srely) pnct(give, ,) advmod(give, therefore) pnct(give, ,) det(Government, the) nsbj(give, Government) ax(give, shold) iobj(give, s) det(idea, some) dobj(give, idea) mark(propose, of) advmod(propose, when) nsbj(propose, they) acl(idea, propose) mark(abolish, to) xcomp(propose, abolish) det(system, the) dobj(abolish, system) cc(abolish, and) dobj(intend, what) nsbj(intend, they) xcomp(propose, intend) conj:and(abolish, intend) mark(pt, to) xcomp(intend, pt) compond:prt(pt, in) nmod:poss(place, its) dobj(pt, place) pnct(give, .)","root(,VB) advmod(VB,RB) pnct(VB,VB) advmod(VB,IN) pnct(VB,VB) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) iobj(VB,PRP) det(NN,DT) dobj(VB,NN) mark(VBP,IN) advmod(VBP,WRB) nsbj(VBP,PRP) acl(NN,VBP) mark(VB,TO) xcomp(VBP,VB) det(NN,DT) dobj(VB,NN) cc(VB,CC) dobj(VBP,WP) nsbj(VBP,PRP) xcomp(VBP,VBP) conj:and(VB,VBP) mark(VB,TO) xcomp(VBP,VB) compond:prt(VB,IN) nmod:poss(NN,PRP$) dobj(VB,NN) pnct(VB,VB)","[give, therefore, Government, us, Surely, ROOT, idea]","[give, therefore, Government, us, Surely, ROOT, idea]",9,[ ],[ ],VB_give RB_therefore NNP_Government PRP_us RB_Surely NN_idea ,"[give, therefore, Government, us, Surely, ROOT, idea]","[give, therefore, Government, us, Surely, ROOT, idea]",VB_give RB_therefore NNP_Government PRP_us RB_Surely NN_idea ,"[give, therefore, Government, us, Surely, ROOT, idea]",VB_give RB_therefore NNP_Government PRP_us RB_Surely NN_idea ,"[give, therefore, Government, us, Surely, ROOT, idea]",VB_give RB_therefore NNP_Government PRP_us RB_Surely NN_idea ,-3,0,2,0,0,0,0,0,0,0
The reduction of those levels is the top priority of the Government.,TheDT reductionNN ofIN thoseDT levelsNNS isVBZ theDT topJJ priorityNN ofIN theDT GovernmentNNP ,"root(ROOT-0, priority-9) det(reduction-2, The-1) nsubj(priority-9, reduction-2) case(levels-5, of-3) det(levels-5, those-4) nmod:of(reduction-2, levels-5) cop(priority-9, is-6) det(priority-9, the-7) amod(priority-9, top-8) case(Government-12, of-10) det(Government-12, the-11) nmod:of(priority-9, Government-12) punct(priority-9, .-13)",0,0,1,"root(ROOT, priority) det(redction, The) nsbj(priority, redction) case(levels, of) det(levels, those) nmod:of(redction, levels) cop(priority, is) det(priority, the) amod(priority, top) case(Government, of) det(Government, the) nmod:of(priority, Government) pnct(priority, .)","root(,NN) det(NN,DT) nsbj(NN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(NN,NN)","[ROOT, Government, priority, reduction, top]","[ROOT, Government, priority, reduction, top]",10,"[ROOT, Government, priority, reduction, top]","[ROOT, Government, priority, reduction, top]",NNP_Government NN_priority NN_reduction JJ_top ,"[ROOT, Government, priority, reduction, top]","[ROOT, Government, priority, reduction, top]",NNP_Government NN_priority NN_reduction JJ_top ,"[ROOT, Government, priority, reduction, top]",NNP_Government NN_priority NN_reduction JJ_top ,"[ROOT, Government, priority, reduction, top]",NNP_Government NN_priority NN_reduction JJ_top ,-3,0,2,1,1,1,1,1,1,2
My hon. Friend will be as aware as I that any alternatives to domestic rates that suffered from the same levels of inflation as has the rating system would be subject to just as much criticism.,MyPRP$ honNN FriendNNP willMD beVB asRB awareJJ asIN IPRP thatIN anyDT alternativesNNS toTO domesticJJ ratesNNS thatWDT sufferedVBD fromIN theDT sameJJ levelsNNS ofIN inflationNN asIN hasVBZ theDT ratingNN systemNN wouldMD beVB subjectJJ toTO justRB asRB muchJJ criticismNN ,"root(ROOT-0, aware-7) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(aware-7, Friend-3) aux(aware-7, will-4) cop(aware-7, be-5) case(aware-7, as-6) case(I-9, as-8) nmod:as(aware-7, I-9) dep(aware-7, that-10) det(alternatives-12, any-11) dep(that-10, alternatives-12) case(rates-15, to-13) amod(rates-15, domestic-14) nmod:to(alternatives-12, rates-15) nsubj(suffered-17, that-16) acl:relcl(rates-15, suffered-17) case(levels-21, from-18) det(levels-21, the-19) amod(levels-21, same-20) nmod:from(suffered-17, levels-21) case(inflation-23, of-22) nmod:of(levels-21, inflation-23) mark(has-25, as-24) advcl(suffered-17, has-25) det(system-28, the-26) compound(system-28, rating-27) nsubj(subject-31, system-28) aux(subject-31, would-29) cop(subject-31, be-30) ccomp(has-25, subject-31) case(criticism-36, to-32) advmod(criticism-36, just-33) advmod(criticism-36, as-34) amod(criticism-36, much-35) nmod:to(subject-31, criticism-36) punct(aware-7, .-37)",0,0,1,"root(ROOT, aware) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(aware, Friend) ax(aware, will) cop(aware, be) case(aware, as) case(I, as) nmod:as(aware, I) dep(aware, that) det(alternatives, any) dep(that, alternatives) case(rates, to) amod(rates, domestic) nmod:to(alternatives, rates) nsbj(sffered, that) acl:relcl(rates, sffered) case(levels, from) det(levels, the) amod(levels, same) nmod:from(sffered, levels) case(inflation, of) nmod:of(levels, inflation) mark(has, as) advcl(sffered, has) det(system, the) compond(system, rating) nsbj(sbject, system) ax(sbject, wold) cop(sbject, be) ccomp(has, sbject) case(criticism, to) advmod(criticism, jst) advmod(criticism, as) amod(criticism, mch) nmod:to(sbject, criticism) pnct(aware, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) ax(JJ,MD) cop(JJ,VB) case(JJ,RB) case(PRP,RB) nmod:as(JJ,PRP) dep(JJ,WDT) det(NNS,DT) dep(WDT,NNS) case(NNS,TO) amod(NNS,JJ) nmod:to(NNS,NNS) nsbj(VBD,WDT) acl:relcl(NNS,VBD) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:from(VBD,NNS) case(NN,IN) nmod:of(NNS,NN) mark(VBZ,RB) advcl(VBD,VBZ) det(NN,DT) compond(NN,NN) nsbj(JJ,NN) ax(JJ,MD) cop(JJ,VB) ccomp(VBZ,JJ) case(NN,TO) advmod(NN,RB) advmod(NN,RB) amod(NN,JJ) nmod:to(JJ,NN) pnct(JJ,JJ)","[that, My, Friend, ROOT, I, aware]","[that, My, Friend, ROOT, I, aware]",11,[ ],[ ],IN_that PRP$_My NNP_Friend PRP_I JJ_aware ,"[that, My, Friend, ROOT, I, aware]","[that, My, Friend, ROOT, I, aware]",IN_that PRP$_My NNP_Friend PRP_I JJ_aware ,"[that, My, Friend, ROOT, I, aware]",IN_that PRP$_My NNP_Friend PRP_I JJ_aware ,"[that, My, Friend, ROOT, I, aware]",IN_that PRP$_My NNP_Friend PRP_I JJ_aware ,-3,0,2,0,0,0,0,0,0,0
Is he aware of the disastrous effect of the decision on the building industry and employment?,IsVBZ hePRP awareJJ ofIN theDT disastrousJJ effectNN ofIN theDT decisionNN onIN theDT buildingNN industryNN andCC employmentNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) case(effect-7, of-4) det(effect-7, the-5) amod(effect-7, disastrous-6) nmod:of(aware-3, effect-7) case(decision-10, of-8) det(decision-10, the-9) nmod:of(effect-7, decision-10) case(industry-14, on-11) det(industry-14, the-12) compound(industry-14, building-13) nmod:on(decision-10, industry-14) cc(industry-14, and-15) nmod:on(decision-10, employment-16) conj:and(industry-14, employment-16) punct(aware-3, ?-17)",0,0,1,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) case(effect, of) det(effect, the) amod(effect, disastros) nmod:of(aware, effect) case(decision, of) det(decision, the) nmod:of(effect, decision) case(indstry, on) det(indstry, the) compond(indstry, bilding) nmod:on(decision, indstry) cc(indstry, and) nmod:on(decision, employment) conj:and(indstry, employment) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(JJ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:on(NN,NN) cc(NN,CC) nmod:on(NN,NN) conj:and(NN,NN) pnct(JJ,JJ)","[he, ROOT, effect, aware]","[he, ROOT, effect, aware]",3,"[he, ROOT, effect, aware]",[ ],PRP_he NN_effect JJ_aware ,"[he, ROOT, effect, aware]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I am most grateful to my hon. Friend for supporting that view.,IPRP amVBP mostRBS gratefulJJ toTO myPRP$ honNN FriendNNP forIN supportingVBG thatDT viewNN ,"root(ROOT-0, grateful-4) nsubj(grateful-4, I-1) cop(grateful-4, am-2) advmod(grateful-4, most-3) case(Friend-8, to-5) nmod:poss(Friend-8, my-6) compound(Friend-8, hon.-7) nmod:to(grateful-4, Friend-8) mark(supporting-10, for-9) advcl(grateful-4, supporting-10) det(view-12, that-11) dobj(supporting-10, view-12) punct(grateful-4, .-13)",0,1,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) advmod(gratefl, most) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gratefl, Friend) mark(spporting, for) advcl(gratefl, spporting) det(view, that) dobj(spporting, view) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RBS) case(NNP,TO) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:to(JJ,NNP) mark(VBG,IN) advcl(JJ,VBG) det(NN,DT) dobj(VBG,NN) pnct(JJ,JJ)","[I, supporting, most, my, ROOT, grateful, Friend]","[I, supporting, most, my, ROOT, grateful, Friend]",5,"[I, supporting, most, my, ROOT, grateful, Friend]","[I, supporting, most, my, ROOT, grateful, Friend]",PRP_I VBG_supporting RBS_most PRP$_my JJ_grateful NNP_Friend ,"[I, supporting, most, my, ROOT, grateful, Friend]","[I, supporting, most, my, ROOT, grateful, Friend]",PRP_I VBG_supporting RBS_most PRP$_my JJ_grateful NNP_Friend ,"[I, supporting, most, my, ROOT, grateful, Friend]",PRP_I VBG_supporting RBS_most PRP$_my JJ_grateful NNP_Friend ,"[I, supporting, most, my, ROOT, grateful, Friend]",PRP_I VBG_supporting RBS_most PRP$_my JJ_grateful NNP_Friend ,-3,0,1,1,1,1,2,0,1,1
They might keep the right hon. Gentleman waiting.,TheyPRP mightMD keepVB theDT rightJJ honNN GentlemanNNP waitingVBG ,"root(ROOT-0, keep-3) nsubj(keep-3, They-1) aux(keep-3, might-2) det(Gentleman-7, the-4) amod(Gentleman-7, right-5) compound(Gentleman-7, hon.-6) nsubj(waiting-8, Gentleman-7) xcomp(keep-3, waiting-8) punct(keep-3, .-9)",0,1,1,"root(ROOT, keep) nsbj(keep, They) ax(keep, might) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(waiting, Gentleman) xcomp(keep, waiting) pnct(keep, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBG,NNP) xcomp(VB,VBG) pnct(VB,VB)","[keep, Gentleman, right, waiting]","[keep, Gentleman, waiting]",7,"[keep, Gentleman, waiting]","[keep, Gentleman, waiting]",VB_keep NNP_Gentleman VBG_waiting ,"[keep, Gentleman, waiting]","[keep, Gentleman, waiting]",VB_keep NNP_Gentleman VBG_waiting ,"[keep, Gentleman, waiting]",VB_keep NNP_Gentleman VBG_waiting ,"[keep, Gentleman, waiting]",VB_keep NNP_Gentleman VBG_waiting ,-3,0,1,0,0,0,0,0,0,0
Is the right hon. Gentleman aware of the unemployment in the building industry?,IsVBZ theDT rightJJ honNN GentlemanNNP awareNN ofIN theDT unemploymentNN inIN theDT buildingNN industryNN ,"root(ROOT-0, Is-1) det(Gentleman-5, the-2) amod(Gentleman-5, right-3) compound(Gentleman-5, hon.-4) nsubj(Is-1, Gentleman-5) amod(Gentleman-5, aware-6) case(unemployment-9, of-7) det(unemployment-9, the-8) nmod:of(aware-6, unemployment-9) case(industry-13, in-10) det(industry-13, the-11) compound(industry-13, building-12) nmod:in(unemployment-9, industry-13) punct(Is-1, ?-14)",0,0,0,"root(ROOT, Is) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(Is, Gentleman) amod(Gentleman, aware) case(nemployment, of) det(nemployment, the) nmod:of(aware, nemployment) case(indstry, in) det(indstry, the) compond(indstry, bilding) nmod:in(nemployment, indstry) pnct(Is, ?)","root(,VBZ) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) amod(NNP,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NN,NN) pnct(VBZ,VBZ)","[Gentleman, unemployment, ROOT, aware, right, Is]","[Gentleman, ROOT, Is, unemployment, aware]",9,"[Gentleman, ROOT, Is, unemployment, aware]","[Gentleman, ROOT, Is, unemployment, aware]",NNP_Gentleman VBZ_Is NN_unemployment JJ_aware ,"[Gentleman, ROOT, Is, unemployment, aware]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
What does he intend to do about that?,WhatWP doesVBZ hePRP intendVB toTO doVB aboutIN thatDT ,"root(ROOT-0, intend-4) dobj(intend-4, What-1) aux(intend-4, does-2) nsubj(intend-4, he-3) mark(do-6, to-5) xcomp(intend-4, do-6) case(that-8, about-7) nmod:about(do-6, that-8) punct(intend-4, ?-9)",0,0,1,"root(ROOT, intend) dobj(intend, What) ax(intend, does) nsbj(intend, he) mark(do, to) xcomp(intend, do) case(that, abot) nmod:abot(do, that) pnct(intend, ?)","root(,VB) dobj(VB,WP) ax(VB,VBZ) nsbj(VB,PRP) mark(VB,TO) xcomp(VB,VB) case(DT,IN) nmod:abot(VB,DT) pnct(VB,VB)","[ROOT, What, intend, do, he]","[ROOT, What, intend, do, he]",11,[ ],[ ],WP_What NN_intend VB_do PRP_he ,"[ROOT, What, intend, do, he]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is he aware that the sooner the moratorium can be lifted or  at any rate  made more selective  the better pleased we shall be in Plymouth?,IsVBZ hePRP awareJJ thatIN theDT soonerNN theDT moratoriumNN canMD beVB liftedVBN orCC atIN anyDT rateNN madeVBD moreRBR selectiveJJ theDT betterJJR pleasedJJ wePRP shallMD beVB inIN PlymouthNNP ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) mark(lifted-11, that-4) det(sooner-6, the-5) advmod(lifted-11, sooner-6) det(moratorium-8, the-7) nsubjpass(lifted-11, moratorium-8) aux(lifted-11, can-9) auxpass(lifted-11, be-10) ccomp(aware-3, lifted-11) cc(lifted-11, or-12) punct(lifted-11, ,-13) case(rate-16, at-14) det(rate-16, any-15) nmod:at(lifted-11, rate-16) punct(lifted-11, ,-17) dep(lifted-11, made-18) advmod(selective-20, more-19) xcomp(made-18, selective-20) punct(lifted-11, ,-21) det(pleased-24, the-22) amod(pleased-24, better-23) dep(lifted-11, pleased-24) nsubj(Plymouth-29, we-25) aux(Plymouth-29, shall-26) cop(Plymouth-29, be-27) case(Plymouth-29, in-28) dep(pleased-24, Plymouth-29) punct(aware-3, ?-30)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) mark(lifted, that) det(sooner, the) advmod(lifted, sooner) det(moratorim, the) nsbjpass(lifted, moratorim) ax(lifted, can) axpass(lifted, be) ccomp(aware, lifted) cc(lifted, or) pnct(lifted, ,) case(rate, at) det(rate, any) nmod:at(lifted, rate) pnct(lifted, ,) dep(lifted, made) advmod(selective, more) xcomp(made, selective) pnct(lifted, ,) det(pleased, the) amod(pleased, better) dep(lifted, pleased) nsbj(Plymoth, we) ax(Plymoth, shall) cop(Plymoth, be) case(Plymoth, in) dep(pleased, Plymoth) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) mark(VBN,IN) det(NN,DT) advmod(VBN,NN) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) cc(VBN,CC) pnct(VBN,VBN) case(NN,IN) det(NN,DT) nmod:at(VBN,NN) pnct(VBN,VBN) dep(VBN,VBD) advmod(JJ,RBR) xcomp(VBD,JJ) pnct(VBN,VBN) det(JJ,DT) amod(JJ,JJR) dep(VBN,JJ) nsbj(NNP,PRP) ax(NNP,MD) cop(NNP,VB) case(NNP,IN) dep(JJ,NNP) pnct(JJ,JJ)","[he, ROOT, aware, lifted]","[he, ROOT, aware, lifted]",14,"[he, ROOT, aware, lifted]",[ ],PRP_he JJ_aware VBN_lifted ,"[he, ROOT, aware, lifted]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Is the right hon. Gentleman further aware that the director general of the National Federation of Building Trades Employers said that this was a further body blow to the building industry  which is accelerating into decline and has in prospect the worst recession since the war?,IsVBZ theDT rightJJ honNN GentlemanNNP furtherRB awareVBZ thatIN theDT directorNN generalNN ofIN theDT NationalNNP FederationNNP ofIN BuildingNNP TradesNNP EmployersNNP saidVBD thatIN thisDT wasVBD aDT furtherJJ bodyNN blowNN toTO theDT buildingNN industryNN whichWDT isVBZ acceleratingVBG intoIN declineNN andCC hasVBZ inIN prospectNN theDT worstJJS recessionNN sinceIN theDT warNN ,"root(ROOT-0, aware-7) cop(aware-7, Is-1) det(Gentleman-5, the-2) amod(Gentleman-5, right-3) compound(Gentleman-5, hon.-4) nsubj(aware-7, Gentleman-5) advmod(aware-7, further-6) mark(said-20, that-8) det(director-10, the-9) nsubj(said-20, director-10) acl(director-10, general-11) case(Federation-15, of-12) det(Federation-15, the-13) compound(Federation-15, National-14) nmod:of(general-11, Federation-15) case(Employers-19, of-16) compound(Employers-19, Building-17) compound(Employers-19, Trades-18) nmod:of(Federation-15, Employers-19) ccomp(aware-7, said-20) mark(blow-27, that-21) nsubj(blow-27, this-22) cop(blow-27, was-23) det(blow-27, a-24) amod(blow-27, further-25) compound(blow-27, body-26) ccomp(said-20, blow-27) case(industry-31, to-28) det(industry-31, the-29) compound(industry-31, building-30) nmod:to(blow-27, industry-31) punct(industry-31, ,-32) nsubj(accelerating-35, which-33) nsubj(has-39, which-33) aux(accelerating-35, is-34) acl:relcl(industry-31, accelerating-35) case(decline-37, into-36) nmod:into(accelerating-35, decline-37) cc(accelerating-35, and-38) acl:relcl(industry-31, has-39) conj:and(accelerating-35, has-39) case(prospect-41, in-40) nmod:in(has-39, prospect-41) det(recession-44, the-42) amod(recession-44, worst-43) dobj(prospect-41, recession-44) case(war-47, since-45) det(war-47, the-46) nmod:since(recession-44, war-47) punct(aware-7, ?-48)",0,0,0,"root(ROOT, aware) cop(aware, Is) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(aware, Gentleman) advmod(aware, frther) mark(said, that) det(director, the) nsbj(said, director) acl(director, general) case(Federation, of) det(Federation, the) compond(Federation, National) nmod:of(general, Federation) case(Employers, of) compond(Employers, Bilding) compond(Employers, Trades) nmod:of(Federation, Employers) ccomp(aware, said) mark(blow, that) nsbj(blow, this) cop(blow, was) det(blow, a) amod(blow, frther) compond(blow, body) ccomp(said, blow) case(indstry, to) det(indstry, the) compond(indstry, bilding) nmod:to(blow, indstry) pnct(indstry, ,) nsbj(accelerating, which) nsbj(has, which) ax(accelerating, is) acl:relcl(indstry, accelerating) case(decline, into) nmod:into(accelerating, decline) cc(accelerating, and) acl:relcl(indstry, has) conj:and(accelerating, has) case(prospect, in) nmod:in(has, prospect) det(recession, the) amod(recession, worst) dobj(prospect, recession) case(war, since) det(war, the) nmod:since(recession, war) pnct(aware, ?)","root(,VBZ) cop(VBZ,VBZ) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) advmod(VBZ,JJ) mark(VBD,IN) det(NN,DT) nsbj(VBD,NN) acl(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NNP,NNP) ccomp(VBZ,VBD) mark(NN,IN) nsbj(NN,DT) cop(NN,VBD) det(NN,DT) amod(NN,JJ) compond(NN,NN) ccomp(VBD,NN) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(NN,NN) pnct(NN,NN) nsbj(VBG,WDT) nsbj(VBZ,WDT) ax(VBG,VBZ) acl:relcl(NN,VBG) case(NN,IN) nmod:into(VBG,NN) cc(VBG,CC) acl:relcl(NN,VBZ) conj:and(VBG,VBZ) case(NN,IN) nmod:in(VBZ,NN) det(NN,DT) amod(NN,JJS) dobj(NN,NN) case(NN,IN) det(NN,DT) nmod:since(NN,NN) pnct(VBZ,VBZ)","[aware, ROOT, Gentleman, right, further, said]","[Gentleman, ROOT, further, aware, said]",18,"[Gentleman, ROOT, further, aware, said]",[ ],NNP_Gentleman JJ_further JJ_aware VBD_said ,"[Gentleman, ROOT, further, aware, said]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Can my hon. Friend confirm that the Secretary of State's announcement on 20 January that an extra Lightning squadron was not to be formed  that half the complement of the No. 8 Shackleton early warning squadron was to be withdrawn from service  that Sky Flash II was not to be procured  and that further orders of Hawk aircraft were not to take place gave the impression that the United Kingdom's air defence was diminishing?,CanMD myPRP$ honNN FriendNNP confirmNN thatIN theDT SecretaryNNP ofIN StateNNP 'sPOS announcementNN onIN 20CD JanuaryNNP thatIN anDT extraJJ LightningNNP squadronNN wasVBD notRB toTO beVB formedVBN thatIN halfPDT theDT complementNN ofIN theDT NoNNP 8CD ShackletonNNP earlyJJ warningNN squadronNN wasVBD toTO beVB withdrawnVBN fromIN serviceNN thatIN SkyNNP FlashNNP IINNP wasVBD notRB toTO beVB procuredVBN andCC thatIN furtherJJ ordersNNS ofIN HawkNNP aircraftNN wereVBD notRB toTO takeVB placeNN gaveVBD theDT impressionNN thatIN theDT UnitedNNP KingdomNNP 'sPOS airNN defenceNN wasVBD diminishingVBG ,"root(ROOT-0, confirm-5) aux(confirm-5, Can-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(confirm-5, Friend-4) dobj(confirm-5, that-6) det(Secretary-8, the-7) root(that-6, Secretary-8) case(announcement-12, of-9) nmod:poss(announcement-12, State-10) case(State-10, 's-11) nmod:of(Secretary-8, announcement-12) case(January-15, on-13) nummod(January-15, 20-14) nmod:on(Secretary-8, January-15) mark(formed-25, that-16) det(squadron-20, an-17) amod(squadron-20, extra-18) compound(squadron-20, Lightning-19) nsubjpass(formed-25, squadron-20) auxpass(formed-25, was-21) neg(formed-25, not-22) mark(formed-25, to-23) auxpass(formed-25, be-24) dep(Secretary-8, formed-25) punct(formed-25, ,-26) mark(was-39, that-27) det:predet(complement-30, half-28) det(complement-30, the-29) nsubj(was-39, complement-30) case(squadron-38, of-31) det(squadron-38, the-32) compound(squadron-38, No.-33) compound(Shackleton-35, 8-34) amod(squadron-38, Shackleton-35) amod(squadron-38, early-36) compound(squadron-38, warning-37) nmod:of(complement-30, squadron-38) ccomp(formed-25, was-39) mark(withdrawn-42, to-40) auxpass(withdrawn-42, be-41) xcomp(was-39, withdrawn-42) case(service-44, from-43) nmod:from(withdrawn-42, service-44) punct(formed-25, ,-45) dobj(procured-54, that-46) compound(II-49, Sky-47) compound(II-49, Flash-48) nsubjpass(procured-54, II-49) cop(procured-54, was-50) neg(procured-54, not-51) mark(procured-54, to-52) auxpass(procured-54, be-53) ccomp(formed-25, procured-54) punct(procured-54, ,-55) cc(procured-54, and-56) mark(take-66, that-57) amod(orders-59, further-58) nsubj(take-66, orders-59) case(aircraft-62, of-60) compound(aircraft-62, Hawk-61) nmod:of(orders-59, aircraft-62) aux(take-66, were-63) neg(take-66, not-64) mark(take-66, to-65) ccomp(formed-25, take-66) conj:and(procured-54, take-66) dobj(take-66, place-67) advcl(take-66, gave-68) det(impression-70, the-69) dobj(gave-68, impression-70) mark(diminishing-79, that-71) det(Kingdom-74, the-72) compound(Kingdom-74, United-73) nmod:poss(defence-77, Kingdom-74) case(Kingdom-74, 's-75) compound(defence-77, air-76) nsubj(diminishing-79, defence-77) aux(diminishing-79, was-78) ccomp(impression-70, diminishing-79) punct(Secretary-8, ?-80)",0,0,0,"root(ROOT, confirm) ax(confirm, Can) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(confirm, Friend) dobj(confirm, that) det(Secretary, the) root(that, Secretary) case(annoncement, of) nmod:poss(annoncement, State) ""case(State, s)"", nmod:of(Secretary, annoncement) case(Janary, on) nmmod(Janary, 20) nmod:on(Secretary, Janary) mark(formed, that) det(sqadron, an) amod(sqadron, extra) compond(sqadron, Lightning) nsbjpass(formed, sqadron) axpass(formed, was) neg(formed, not) mark(formed, to) axpass(formed, be) dep(Secretary, formed) pnct(formed, ,) mark(was, that) det:predet(complement, half) det(complement, the) nsbj(was, complement) case(sqadron, of) det(sqadron, the) compond(sqadron, No.) compond(Shackleton, 8) amod(sqadron, Shackleton) amod(sqadron, early) compond(sqadron, warning) nmod:of(complement, sqadron) ccomp(formed, was) mark(withdrawn, to) axpass(withdrawn, be) xcomp(was, withdrawn) case(service, from) nmod:from(withdrawn, service) pnct(formed, ,) dobj(procred, that) compond(II, Sky) compond(II, Flash) nsbjpass(procred, II) cop(procred, was) neg(procred, not) mark(procred, to) axpass(procred, be) ccomp(formed, procred) pnct(procred, ,) cc(procred, and) mark(take, that) amod(orders, frther) nsbj(take, orders) case(aircraft, of) compond(aircraft, Hawk) nmod:of(orders, aircraft) ax(take, were) neg(take, not) mark(take, to) ccomp(formed, take) conj:and(procred, take) dobj(take, place) advcl(take, gave) det(impression, the) dobj(gave, impression) mark(diminishing, that) det(Kingdom, the) compond(Kingdom, United) nmod:poss(defence, Kingdom) ""case(Kingdom, s)"", compond(defence, air) nsbj(diminishing, defence) ax(diminishing, was) ccomp(impression, diminishing) pnct(Secretary, ?)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) dobj(NN,IN) det(NNP,DT) root(IN,NNP) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NNP,NN) case(NNP,IN) nmmod(NNP,CD) nmod:on(NNP,NNP) mark(VBN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NNP) nsbjpass(VBN,NN) axpass(VBN,VBD) neg(VBN,RB) mark(VBN,TO) axpass(VBN,VB) dep(NNP,VBN) pnct(VBN,VBN) mark(VBD,IN) det:predet(NN,PDT) det(NN,DT) nsbj(VBD,NN) case(NN,IN) det(NN,DT) compond(NN,NN) compond(NNP,CD) amod(NN,NNP) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) ccomp(VBN,VBD) mark(VBN,TO) axpass(VBN,VB) xcomp(VBD,VBN) case(NN,IN) nmod:from(VBN,NN) pnct(VBN,VBN) dobj(VBN,IN) compond(NNP,NNP) compond(NNP,NNP) nsbjpass(VBN,NNP) cop(VBN,VBD) neg(VBN,RB) mark(VBN,TO) axpass(VBN,VB) ccomp(VBN,VBN) pnct(VBN,VBN) cc(VBN,CC) mark(VB,IN) amod(NNS,JJ) nsbj(VB,NNS) case(NN,IN) compond(NN,NNP) nmod:of(NNS,NN) ax(VB,VBD) neg(VB,RB) mark(VB,TO) ccomp(VBN,VB) conj:and(VBN,VB) dobj(VB,NN) advcl(VB,VBD) det(NN,DT) dobj(VBD,NN) mark(VBG,IN) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,NN) nsbj(VBG,NN) ax(VBG,VBD) ccomp(NN,VBG) pnct(NNP,NNP)","[Secretary, procured, announcement, Friend, take, confirm, that, State, not, squadron, my, 20, was, formed, ROOT, January]","[Secretary, procured, announcement, Friend, take, confirm, that, State, not, squadron, my, 20, was, formed, ROOT, January]",19,"[State, not, procured, announcement, squadron, January, 20, was, formed, confirm, that, Secretary, take]","[State, not, procured, announcement, squadron, January, 20, was, formed, confirm, that, Secretary, take]",NNP_Secretary VBN_procured NN_announcement NNP_Friend VB_take NN_confirm IN_that NNP_State RB_not NN_squadron PRP$_my CD_20 VBD_was VBN_formed NNP_January ,"[Secretary, procured, announcement, Friend, take, confirm, that, State, not, squadron, my, 20, was, formed, ROOT, January]","[Secretary, procured, announcement, Friend, take, confirm, that, State, not, squadron, my, 20, was, formed, ROOT, January]",NNP_Secretary VBN_procured NN_announcement NNP_Friend VB_take NN_confirm IN_that NNP_State RB_not NN_squadron PRP$_my CD_20 VBD_was VBN_formed NNP_January ,"[Secretary, procured, announcement, Friend, take, confirm, that, State, not, squadron, my, 20, was, formed, ROOT, January]",NNP_Secretary VBN_procured NN_announcement NNP_Friend VB_take NN_confirm IN_that NNP_State RB_not NN_squadron PRP$_my CD_20 VBD_was VBN_formed NNP_January ,"[Secretary, procured, announcement, Friend, take, confirm, that, State, not, squadron, my, 20, was, formed, ROOT, January]",NNP_Secretary VBN_procured NN_announcement NNP_Friend VB_take NN_confirm IN_that NNP_State RB_not NN_squadron PRP$_my CD_20 VBD_was VBN_formed NNP_January ,-3,0,2,2,1,2,0,0,0,2
Are not fewer fighter aircraft defending Britain's skies today than when the Minister assumed responsibility in May 1979?,AreNNP notRB fewerJJR fighterNN aircraftNN defendingVBG BritainNNP 'sPOS skiesNNS todayNN thanIN whenWRB theDT MinisterNNP assumedVBD responsibilityNN inIN MayNNP 1979CD ,"root(ROOT-0, Are-1) neg(aircraft-5, not-2) amod(aircraft-5, fewer-3) compound(aircraft-5, fighter-4) nsubj(Are-1, aircraft-5) acl(aircraft-5, defending-6) nmod:poss(skies-9, Britain-7) case(Britain-7, 's-8) dobj(defending-6, skies-9) nmod:tmod(defending-6, today-10) mwe(today-10, than-11) advmod(assumed-15, when-12) det(Minister-14, the-13) nsubj(assumed-15, Minister-14) acl:relcl(today-10, assumed-15) dobj(assumed-15, responsibility-16) case(May-18, in-17) nmod:in(responsibility-16, May-18) nummod(May-18, 1979-19) punct(Are-1, ?-20)",0,1,0,"root(ROOT, Are) neg(aircraft, not) amod(aircraft, fewer) compond(aircraft, fighter) nsbj(Are, aircraft) acl(aircraft, defending) nmod:poss(skies, Britain) ""case(Britain, s)"", dobj(defending, skies) nmod:tmod(defending, today) mwe(today, than) advmod(assmed, when) det(Minister, the) nsbj(assmed, Minister) acl:relcl(today, assmed) dobj(assmed, responsibility) case(May, in) nmod:in(responsibility, May) nmmod(May, 1979) pnct(Are, ?)","root(,NNP) neg(NN,RB) amod(NN,JJR) compond(NN,NN) nsbj(NNP,NN) acl(NN,VBG) nmod:poss(NNS,NNP) case(NNP,POS) dobj(VBG,NNS) nmod:tmod(VBG,NN) mwe(NN,IN) advmod(VBD,WRB) det(NNP,DT) nsbj(VBD,NNP) acl:relcl(NN,VBD) dobj(VBD,NN) case(NNP,IN) nmod:in(NN,NNP) nmmod(NNP,CD) pnct(NNP,NNP)","[when, Minister, assumed, today, responsibility]","[when, Minister, assumed, today, responsibility]",4,"[when, Minister, assumed, today, responsibility]","[when, Minister, assumed, today, responsibility]",WRB_when NNP_Minister VBD_assumed NN_today NN_responsibility ,"[when, Minister, assumed, today, responsibility]","[when, Minister, assumed, today, responsibility]",WRB_when NNP_Minister VBD_assumed NN_today NN_responsibility ,"[when, Minister, assumed, today, responsibility]",WRB_when NNP_Minister VBD_assumed NN_today NN_responsibility ,"[when, Minister, assumed, today, responsibility]",WRB_when NNP_Minister VBD_assumed NN_today NN_responsibility ,-3,0,2,0,0,0,0,0,0,0
I have not noticed any craven silence on the part of my hon. Friends.,IPRP haveVBP notRB noticedVBN anyDT cravenJJ silenceNN onIN theDT partNN ofIN myPRP$ honNN FriendsNNS ,"root(ROOT-0, noticed-4) nsubj(noticed-4, I-1) aux(noticed-4, have-2) neg(noticed-4, not-3) det(silence-7, any-5) compound(silence-7, craven-6) dobj(noticed-4, silence-7) case(part-10, on-8) det(part-10, the-9) nmod:on(silence-7, part-10) case(Friends-14, of-11) nmod:poss(Friends-14, my-12) compound(Friends-14, hon.-13) nmod:of(part-10, Friends-14) punct(noticed-4, .-15)",0,0,1,"root(ROOT, noticed) nsbj(noticed, I) ax(noticed, have) neg(noticed, not) det(silence, any) compond(silence, craven) dobj(noticed, silence) case(part, on) det(part, the) nmod:on(silence, part) case(Friends, of) nmod:poss(Friends, my) compond(Friends, hon.) nmod:of(part, Friends) pnct(noticed, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBP) neg(VBN,RB) det(NN,DT) compond(NN,JJ) dobj(VBN,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NNS,IN) nmod:poss(NNS,PRP$) compond(NNS,NNS) nmod:of(NN,NNS) pnct(VBN,VBN)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
If the hon. Gentleman tables a question I shall provide the figures that he requires.,IfIN theDT honNN GentlemanNNP tablesVBZ aDT questionNN IPRP shallMD provideVB theDT figuresNNS thatIN hePRP requiresVBZ ,"root(ROOT-0, provide-10) mark(question-7, If-1) det(tables-5, the-2) compound(tables-5, hon.-3) compound(tables-5, Gentleman-4) nsubj(question-7, tables-5) det(question-7, a-6) advcl(provide-10, question-7) nsubj(provide-10, I-8) aux(provide-10, shall-9) det(figures-12, the-11) dobj(provide-10, figures-12) dobj(requires-15, that-13) nsubj(requires-15, he-14) acl:relcl(figures-12, requires-15) punct(provide-10, .-16)",0,0,1,"root(ROOT, provide) mark(qestion, If) det(tables, the) compond(tables, hon.) compond(tables, Gentleman) nsbj(qestion, tables) det(qestion, a) advcl(provide, qestion) nsbj(provide, I) ax(provide, shall) det(figres, the) dobj(provide, figres) dobj(reqires, that) nsbj(reqires, he) acl:relcl(figres, reqires) pnct(provide, .)","root(,VB) mark(NN,IN) det(VBZ,DT) compond(VBZ,VBZ) compond(VBZ,NNP) nsbj(NN,VBZ) det(NN,DT) advcl(VB,NN) nsbj(VB,PRP) ax(VB,MD) det(NNS,DT) dobj(VB,NNS) dobj(VBZ,IN) nsbj(VBZ,PRP) acl:relcl(NNS,VBZ) pnct(VB,VB)","[that, tables, requires, he, question, figures]","[that, tables, requires, he, question, figures]",11,"[that, tables, requires, he, question, figures]","[that, tables, requires, he, question, figures]",IN_that VBZ_tables VBZ_requires PRP_he NN_question NNS_figures ,"[that, tables, requires, he, question, figures]","[that, tables, requires, he, question, figures]",IN_that VBZ_tables VBZ_requires PRP_he NN_question NNS_figures ,"[that, tables, requires, he, question, figures]",IN_that VBZ_tables VBZ_requires PRP_he NN_question NNS_figures ,"[that, tables, requires, he, question, figures]",IN_that VBZ_tables VBZ_requires PRP_he NN_question NNS_figures ,-3,0,2,0,0,0,0,0,0,0
He knows that the change will take place as Parliament decided.,HePRP knowsVBZ thatIN theDT changeNN willMD takeVB placeNN asIN ParliamentNNP decidedVBD ,"root(ROOT-0, knows-2) nsubj(knows-2, He-1) mark(take-7, that-3) det(change-5, the-4) nsubj(take-7, change-5) aux(take-7, will-6) ccomp(knows-2, take-7) dobj(take-7, place-8) mark(decided-11, as-9) nsubj(decided-11, Parliament-10) advcl(take-7, decided-11) punct(knows-2, .-12)",0,0,0,"root(ROOT, knows) nsbj(knows, He) mark(take, that) det(change, the) nsbj(take, change) ax(take, will) ccomp(knows, take) dobj(take, place) mark(decided, as) nsbj(decided, Parliament) advcl(take, decided) pnct(knows, .)","root(,VBZ) nsbj(VBZ,PRP) mark(VB,IN) det(NN,DT) nsbj(VB,NN) ax(VB,MD) ccomp(VBZ,VB) dobj(VB,NN) mark(VBD,IN) nsbj(VBD,NNP) advcl(VB,VBD) pnct(VBZ,VBZ)","[ROOT, knows, He, take]","[ROOT, knows, He, take]",4,"[ROOT, knows, He, take]","[ROOT, knows, He, take]",VBZ_knows PRP_He VB_take ,"[ROOT, knows, He, take]","[ROOT, knows, He, take]",VBZ_knows PRP_He VB_take ,"[ROOT, knows, He, take]",VBZ_knows PRP_He VB_take ,"[ROOT, knows, He, take]",VBZ_knows PRP_He VB_take ,-3,0,2,0,0,0,0,0,0,0
He will be aware that the value of the earnings related supplement under Governments of both parties was allowed to fall substantially in real terms relative to average earnings and is now a little of over half its value in real terms of 10 years ago.,HePRP willMD beVB awareJJ thatIN theDT valueNN ofIN theDT earningsNNS relatedVBN supplementNN underIN GovernmentsNNS ofIN bothDT partiesNNS wasVBD allowedVBN toTO fallVB substantiallyRB inIN realJJ termsNNS relativeVBP toTO averageJJ earningsNNS andCC isVBZ nowRB aDT littleJJ ofIN overIN halfPDT itsPRP$ valueNN inIN realJJ termsNNS ofIN 10CD yearsNNS agoRB ,"root(ROOT-0, aware-4) nsubj(aware-4, He-1) aux(aware-4, will-2) cop(aware-4, be-3) mark(allowed-19, that-5) det(value-7, the-6) nsubjpass(allowed-19, value-7) nsubj(little-34, value-7) case(supplement-12, of-8) det(supplement-12, the-9) compound(supplement-12, earnings-10) amod(supplement-12, related-11) nmod:of(value-7, supplement-12) case(Governments-14, under-13) nmod:under(value-7, Governments-14) case(parties-17, of-15) det(parties-17, both-16) nmod:of(Governments-14, parties-17) auxpass(allowed-19, was-18) ccomp(aware-4, allowed-19) mark(fall-21, to-20) xcomp(allowed-19, fall-21) advmod(fall-21, substantially-22) case(terms-25, in-23) amod(terms-25, real-24) nmod:in(fall-21, terms-25) amod(terms-25, relative-26) case(earnings-29, to-27) amod(earnings-29, average-28) nmod:to(relative-26, earnings-29) cc(allowed-19, and-30) cop(little-34, is-31) advmod(little-34, now-32) det(little-34, a-33) ccomp(aware-4, little-34) conj:and(allowed-19, little-34) case(value-39, of-35) advmod(half-37, over-36) nummod(value-39, half-37) nmod:poss(value-39, its-38) nmod:of(little-34, value-39) case(terms-42, in-40) amod(terms-42, real-41) nmod:in(little-34, terms-42) case(years-45, of-43) nummod(years-45, 10-44) nmod:of(terms-42, years-45) advmod(years-45, ago-46) punct(aware-4, .-47)",0,0,0,"root(ROOT, aware) nsbj(aware, He) ax(aware, will) cop(aware, be) mark(allowed, that) det(vale, the) nsbjpass(allowed, vale) nsbj(little, vale) case(spplement, of) det(spplement, the) compond(spplement, earnings) amod(spplement, related) nmod:of(vale, spplement) case(Governments, nder) nmod:nder(vale, Governments) case(parties, of) det(parties, both) nmod:of(Governments, parties) axpass(allowed, was) ccomp(aware, allowed) mark(fall, to) xcomp(allowed, fall) advmod(fall, sbstantially) case(terms, in) amod(terms, real) nmod:in(fall, terms) amod(terms, relative) case(earnings, to) amod(earnings, average) nmod:to(relative, earnings) cc(allowed, and) cop(little, is) advmod(little, now) det(little, a) ccomp(aware, little) conj:and(allowed, little) case(vale, of) advmod(half, over) nmmod(vale, half) nmod:poss(vale, its) nmod:of(little, vale) case(terms, in) amod(terms, real) nmod:in(little, terms) case(years, of) nmmod(years, 10) nmod:of(terms, years) advmod(years, ago) pnct(aware, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) nsbj(JJ,NN) case(NN,IN) det(NN,DT) compond(NN,NNS) amod(NN,VBN) nmod:of(NN,NN) case(NNS,IN) nmod:nder(NN,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) axpass(VBN,VBD) ccomp(JJ,VBN) mark(VB,TO) xcomp(VBN,VB) advmod(VB,RB) case(NNS,IN) amod(NNS,JJ) nmod:in(VB,NNS) amod(NNS,VBP) case(NNS,TO) amod(NNS,JJ) nmod:to(VBP,NNS) cc(VBN,CC) cop(JJ,VBZ) advmod(JJ,RB) det(JJ,DT) ccomp(JJ,JJ) conj:and(VBN,JJ) case(NN,IN) advmod(PDT,IN) nmmod(NN,PDT) nmod:poss(NN,PRP$) nmod:of(JJ,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(JJ,NNS) case(NNS,IN) nmmod(NNS,CD) nmod:of(NNS,NNS) advmod(NNS,RB) pnct(JJ,JJ)","[ROOT, aware, He, little, allowed]","[ROOT, aware, He, little, allowed]",4,[ ],[ ],JJ_aware PRP_He JJ_little VBN_allowed ,"[ROOT, aware, He, little, allowed]","[ROOT, aware, He, little, allowed]",JJ_aware PRP_He JJ_little VBN_allowed ,"[ROOT, aware, He, little, allowed]",JJ_aware PRP_He JJ_little VBN_allowed ,"[ROOT, aware, He, little, allowed]",JJ_aware PRP_He JJ_little VBN_allowed ,-3,0,2,0,0,0,0,0,0,0
I am grateful to my hon. Friend for asking that supplementary question.,IPRP amVBP gratefulJJ toTO myPRP$ honNN FriendNNP forIN askingVBG thatDT supplementaryJJ questionNN ,"root(ROOT-0, grateful-3) nsubj(grateful-3, I-1) cop(grateful-3, am-2) case(Friend-7, to-4) nmod:poss(Friend-7, my-5) compound(Friend-7, hon.-6) nmod:to(grateful-3, Friend-7) mark(asking-9, for-8) advcl(grateful-3, asking-9) nsubj(question-12, that-10) amod(question-12, supplementary-11) ccomp(asking-9, question-12) punct(grateful-3, .-13)",0,1,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gratefl, Friend) mark(asking, for) advcl(gratefl, asking) nsbj(qestion, that) amod(qestion, spplementary) ccomp(asking, qestion) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) case(NNP,TO) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:to(JJ,NNP) mark(VBG,IN) advcl(JJ,VBG) nsbj(NN,DT) amod(NN,JJ) ccomp(VBG,NN) pnct(JJ,JJ)","[I, Friend, my, asking, ROOT, grateful]","[I, Friend, my, asking, ROOT, grateful]",4,"[I, Friend, my, asking, ROOT, grateful]","[I, Friend, my, asking, ROOT, grateful]",PRP_I NNP_Friend PRP$_my VBG_asking JJ_grateful ,"[I, Friend, my, asking, ROOT, grateful]","[I, Friend, my, asking, ROOT, grateful]",PRP_I NNP_Friend PRP$_my VBG_asking JJ_grateful ,"[I, Friend, my, asking, ROOT, grateful]",PRP_I NNP_Friend PRP$_my VBG_asking JJ_grateful ,"[I, Friend, my, asking, ROOT, grateful]",PRP_I NNP_Friend PRP$_my VBG_asking JJ_grateful ,-3,0,2,1,1,0,2,2,2,2
The Government have taken no decision to alter that provision relating to nursery education.,TheDT GovernmentNNP haveVBP takenVBN noDT decisionNN toTO alterVB thatDT provisionNN relatingVBG toTO nurseryDT educationNN ,"root(ROOT-0, taken-4) det(Government-2, The-1) nsubj(taken-4, Government-2) aux(taken-4, have-3) neg(decision-6, no-5) dobj(taken-4, decision-6) mark(alter-8, to-7) acl(decision-6, alter-8) dobj(alter-8, that-9) dep(that-9, provision-10) acl(provision-10, relating-11) case(education-14, to-12) compound(education-14, nursery-13) nmod:to(relating-11, education-14) punct(taken-4, .-15)",0,0,1,"root(ROOT, taken) det(Government, The) nsbj(taken, Government) ax(taken, have) neg(decision, no) dobj(taken, decision) mark(alter, to) acl(decision, alter) dobj(alter, that) dep(that, provision) acl(provision, relating) case(edcation, to) compond(edcation, nrsery) nmod:to(relating, edcation) pnct(taken, .)","root(,VBN) det(NNP,DT) nsbj(VBN,NNP) ax(VBN,VBP) neg(NN,DT) dobj(VBN,NN) mark(VB,TO) acl(NN,VB) dobj(VB,DT) dep(DT,NN) acl(NN,VBG) case(NN,TO) compond(NN,DT) nmod:to(VBG,NN) pnct(VBN,VBN)","[Government, ROOT, taken, decision]","[Government, ROOT, taken, decision]",4,[ ],[ ],NNP_Government VBN_taken NN_decision ,"[Government, ROOT, taken, decision]","[Government, ROOT, taken, decision]",NNP_Government VBN_taken NN_decision ,"[Government, ROOT, taken, decision]",NNP_Government VBN_taken NN_decision ,"[Government, ROOT, taken, decision]",NNP_Government VBN_taken NN_decision ,-3,0,2,0,0,0,0,0,0,0
Does he accept that if the Government introduce means tested charges for nursery education that will be possibly a fatal blow to the educational attainment and  thereby  the job opportunities of many poor children?,DoesVBZ hePRP acceptVB thatIN ifIN theDT GovernmentNNP introduceNN meansVBZ testedVBN chargesNNS forIN nurseryDT educationNN thatWDT willMD beVB possiblyRB aDT fatalJJ blowNN toTO theDT educationalJJ attainmentNN andCC therebyRB theDT jobNN opportunitiesNNS ofIN manyJJ poorJJ childrenNNS ,"root(ROOT-0, accept-3) aux(accept-3, Does-1) nsubj(accept-3, he-2) dobj(accept-3, that-4) mark(introduce-8, if-5) det(Government-7, the-6) nsubj(introduce-8, Government-7) dep(that-4, introduce-8) dobj(introduce-8, means-9) acl(means-9, tested-10) dobj(tested-10, charges-11) case(education-14, for-12) compound(education-14, nursery-13) nmod:for(charges-11, education-14) nsubj(blow-21, that-15) aux(blow-21, will-16) cop(blow-21, be-17) advmod(blow-21, possibly-18) det(blow-21, a-19) amod(blow-21, fatal-20) acl:relcl(charges-11, blow-21) case(attainment-25, to-22) det(attainment-25, the-23) amod(attainment-25, educational-24) nmod:to(blow-21, attainment-25) cc(blow-21, and-26) punct(blow-21, ,-27) advmod(blow-21, thereby-28) punct(blow-21, ,-29) det(opportunities-32, the-30) compound(opportunities-32, job-31) dobj(blow-21, opportunities-32) case(children-36, of-33) amod(children-36, many-34) amod(children-36, poor-35) nmod:of(opportunities-32, children-36) punct(introduce-8, ?-37)",0,0,0,"root(ROOT, accept) ax(accept, Does) nsbj(accept, he) dobj(accept, that) mark(introdce, if) det(Government, the) nsbj(introdce, Government) dep(that, introdce) dobj(introdce, means) acl(means, tested) dobj(tested, charges) case(edcation, for) compond(edcation, nrsery) nmod:for(charges, edcation) nsbj(blow, that) ax(blow, will) cop(blow, be) advmod(blow, possibly) det(blow, a) amod(blow, fatal) acl:relcl(charges, blow) case(attainment, to) det(attainment, the) amod(attainment, edcational) nmod:to(blow, attainment) cc(blow, and) pnct(blow, ,) advmod(blow, thereby) pnct(blow, ,) det(opportnities, the) compond(opportnities, job) dobj(blow, opportnities) case(children, of) amod(children, many) amod(children, poor) nmod:of(opportnities, children) pnct(introdce, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) dobj(VB,WDT) mark(NN,IN) det(NNP,DT) nsbj(NN,NNP) dep(WDT,NN) dobj(NN,VBZ) acl(VBZ,VBN) dobj(VBN,NNS) case(NN,IN) compond(NN,DT) nmod:for(NNS,NN) nsbj(NN,WDT) ax(NN,MD) cop(NN,VB) advmod(NN,RB) det(NN,DT) amod(NN,JJ) acl:relcl(NNS,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(NN,NN) cc(NN,CC) pnct(NN,NN) advmod(NN,RB) pnct(NN,NN) det(NNS,DT) compond(NNS,NN) dobj(NN,NNS) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:of(NNS,NNS) pnct(NN,NN)","[accept, Government, he, ROOT, introduce, that, means]","[accept, Government, he, ROOT, introduce, that, means]",8,"[introduce, Government, that, means]","[introduce, Government, that, means]",VBD_accept NNP_Government PRP_he VB_introduce IN_that NNS_means ,"[accept, Government, he, ROOT, introduce, that, means]","[accept, Government, he, ROOT, introduce, that, means]",VBD_accept NNP_Government PRP_he VB_introduce IN_that NNS_means ,"[accept, Government, he, ROOT, introduce, that, means]",VBD_accept NNP_Government PRP_he VB_introduce IN_that NNS_means ,"[accept, Government, he, ROOT, introduce, that, means]",VBD_accept NNP_Government PRP_he VB_introduce IN_that NNS_means ,-3,0,2,0,0,0,0,0,0,0
The Government have no power to intervene in the sale of equipment from that plant  which is no longer in use  to any other part of the world.,TheDT GovernmentNNP haveVBP noDT powerNN toTO interveneVB inIN theDT saleNN ofIN equipmentNN fromIN thatDT plantNN whichWDT isVBZ noDT longerRBR inIN useNN toTO anyDT otherJJ partNN ofIN theDT worldNN ,"root(ROOT-0, have-3) det(Government-2, The-1) nsubj(have-3, Government-2) neg(power-5, no-4) dobj(have-3, power-5) mark(intervene-7, to-6) acl(power-5, intervene-7) case(sale-10, in-8) det(sale-10, the-9) nmod:in(intervene-7, sale-10) case(equipment-12, of-11) nmod:of(sale-10, equipment-12) case(plant-15, from-13) det(plant-15, that-14) nmod:from(sale-10, plant-15) punct(plant-15, ,-16) nsubj(use-22, which-17) cop(use-22, is-18) neg(longer-20, no-19) advmod(use-22, longer-20) case(use-22, in-21) acl:relcl(plant-15, use-22) punct(plant-15, ,-23) case(part-27, to-24) det(part-27, any-25) amod(part-27, other-26) nmod:to(intervene-7, part-27) case(world-30, of-28) det(world-30, the-29) nmod:of(part-27, world-30) punct(have-3, .-31)",0,0,0,"root(ROOT, have) det(Government, The) nsbj(have, Government) neg(power, no) dobj(have, power) mark(intervene, to) acl(power, intervene) case(sale, in) det(sale, the) nmod:in(intervene, sale) case(eqipment, of) nmod:of(sale, eqipment) case(plant, from) det(plant, that) nmod:from(sale, plant) pnct(plant, ,) nsbj(se, which) cop(se, is) neg(longer, no) advmod(se, longer) case(se, in) acl:relcl(plant, se) pnct(plant, ,) case(part, to) det(part, any) amod(part, other) nmod:to(intervene, part) case(world, of) det(world, the) nmod:of(part, world) pnct(have, .)","root(,VBP) det(NNP,DT) nsbj(VBP,NNP) neg(NN,DT) dobj(VBP,NN) mark(VB,TO) acl(NN,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:from(NN,NN) pnct(NN,NN) nsbj(NN,WDT) cop(NN,VBZ) neg(RBR,DT) advmod(NN,RBR) case(NN,IN) acl:relcl(NN,NN) pnct(NN,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBP,VBP)","[Government, ROOT, have, power]","[Government, ROOT, have, power]",8,"[Government, ROOT, have, power]","[Government, ROOT, have, power]",NNP_Government VBP_have NN_power ,"[Government, ROOT, have, power]","[Government, ROOT, have, power]",NNP_Government VBP_have NN_power ,"[Government, ROOT, have, power]",NNP_Government VBP_have NN_power ,"[Government, ROOT, have, power]",NNP_Government VBP_have NN_power ,-3,0,2,0,0,0,0,0,0,0
I should not like him to stay there.,IPRP shouldMD notRB likeVB himPRP toTO stayVB thereRB ,"root(ROOT-0, like-4) nsubj(like-4, I-1) aux(like-4, should-2) neg(like-4, not-3) dobj(like-4, him-5) mark(stay-7, to-6) xcomp(like-4, stay-7) advmod(stay-7, there-8) punct(like-4, .-9)",0,1,0,"root(ROOT, like) nsbj(like, I) ax(like, shold) neg(like, not) dobj(like, him) mark(stay, to) xcomp(like, stay) advmod(stay, there) pnct(like, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) dobj(VB,PRP) mark(VB,TO) xcomp(VB,VB) advmod(VB,RB) pnct(VB,VB)",[ ],[ ],4,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
When will the Government be able to tell the Coal Board and the NUM that it is time to fix a realistic programme for ending the subsidies and the industry's monopoly by introducing private capital in partnership  so that we can inject some competition?,WhenWRB willMD theDT GovernmentNNP beVB ableJJ toTO tellVB theDT CoalNNP BoardNNP andCC theDT NUMNNP thatIN itPRP isVBZ timeNN toTO fixVB aDT realisticJJ programmeNN forIN endingVBG theDT subsidiesNNS andCC theDT industryNN 'sPOS monopolyNN byIN introducingVBG privateJJ capitalNN inIN partnershipNN soIN thatIN wePRP canMD injectVB someDT competitionNN ,"root(ROOT-0, able-6) advmod(able-6, When-1) aux(able-6, will-2) det(Government-4, the-3) nsubj(able-6, Government-4) cop(able-6, be-5) mark(tell-8, to-7) xcomp(able-6, tell-8) det(Board-11, the-9) compound(Board-11, Coal-10) dobj(tell-8, Board-11) cc(Board-11, and-12) det(NUM-14, the-13) dobj(tell-8, NUM-14) conj:and(Board-11, NUM-14) mark(time-18, that-15) nsubj(time-18, it-16) cop(time-18, is-17) dep(NUM-14, time-18) mark(fix-20, to-19) acl(time-18, fix-20) det(programme-23, a-21) amod(programme-23, realistic-22) dobj(fix-20, programme-23) mark(ending-25, for-24) advcl(fix-20, ending-25) det(subsidies-27, the-26) dobj(ending-25, subsidies-27) cc(subsidies-27, and-28) det(industry-30, the-29) nmod:poss(monopoly-32, industry-30) case(industry-30, 's-31) dobj(ending-25, monopoly-32) conj:and(subsidies-27, monopoly-32) mark(introducing-34, by-33) advcl(ending-25, introducing-34) amod(capital-36, private-35) dobj(introducing-34, capital-36) case(partnership-38, in-37) nmod:in(introducing-34, partnership-38) punct(able-6, ,-39) advmod(inject-44, so-40) mark(inject-44, that-41) nsubj(inject-44, we-42) aux(inject-44, can-43) root(,-39, inject-44) det(competition-46, some-45) dobj(inject-44, competition-46) punct(inject-44, ?-47)",0,0,0,"root(ROOT, able) advmod(able, When) ax(able, will) det(Government, the) nsbj(able, Government) cop(able, be) mark(tell, to) xcomp(able, tell) det(Board, the) compond(Board, Coal) dobj(tell, Board) cc(Board, and) det(NUM, the) dobj(tell, NUM) conj:and(Board, NUM) mark(time, that) nsbj(time, it) cop(time, is) dep(NUM, time) mark(fix, to) acl(time, fix) det(programme, a) amod(programme, realistic) dobj(fix, programme) mark(ending, for) advcl(fix, ending) det(sbsidies, the) dobj(ending, sbsidies) cc(sbsidies, and) det(indstry, the) nmod:poss(monopoly, indstry) ""case(indstry, s)"", dobj(ending, monopoly) conj:and(sbsidies, monopoly) mark(introdcing, by) advcl(ending, introdcing) amod(capital, private) dobj(introdcing, capital) case(partnership, in) nmod:in(introdcing, partnership) pnct(able, ,) advmod(inject, so) mark(inject, that) nsbj(inject, we) ax(inject, can) root(,, inject) det(competition, some) dobj(inject, competition) pnct(inject, ?)","root(,JJ) advmod(JJ,WRB) ax(JJ,MD) det(NNP,DT) nsbj(JJ,NNP) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) cc(NNP,CC) det(NNP,DT) dobj(VB,NNP) conj:and(NNP,NNP) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) dep(NNP,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) mark(VBG,IN) advcl(VB,VBG) det(NNS,DT) dobj(VBG,NNS) cc(NNS,CC) det(NN,DT) nmod:poss(NN,NN) case(NN,POS) dobj(VBG,NN) conj:and(NNS,NN) mark(VBG,IN) advcl(VBG,VBG) amod(NN,JJ) dobj(VBG,NN) case(NN,IN) nmod:in(VBG,NN) pnct(JJ,JJ) advmod(VB,IN) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) root(MDMDVB) det(NN,DT) dobj(VB,NN) pnct(VB,VB)","[When, ROOT, tell, Government, able]","[When, ROOT, tell, Government, able]",5,[ ],[ ],WRB_When VB_tell NNP_Government JJ_able ,"[When, ROOT, tell, Government, able]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. Gentleman will remember that I recently met representatives from Clwyd.,TheDT honNN GentlemanNNP willMD rememberVB thatIN IPRP recentlyRB metVBD representativesNNS fromIN ClwydNNP ,"root(ROOT-0, remember-5) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(remember-5, Gentleman-3) aux(remember-5, will-4) mark(met-9, that-6) nsubj(met-9, I-7) advmod(met-9, recently-8) ccomp(remember-5, met-9) dobj(met-9, representatives-10) case(Clwyd-12, from-11) nmod:from(met-9, Clwyd-12) punct(remember-5, .-13)",0,1,0,"root(ROOT, remember) det(Gentleman, The) compond(Gentleman, hon.) nsbj(remember, Gentleman) ax(remember, will) mark(met, that) nsbj(met, I) advmod(met, recently) ccomp(remember, met) dobj(met, representatives) case(Clwyd, from) nmod:from(met, Clwyd) pnct(remember, .)","root(,VB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) mark(VBD,IN) nsbj(VBD,PRP) advmod(VBD,RB) ccomp(VB,VBD) dobj(VBD,NNS) case(NNP,IN) nmod:from(VBD,NNP) pnct(VB,VB)","[ROOT, met, Gentleman, remember]","[ROOT, met, Gentleman, remember]",11,[ ],[ ],VBD_met NNP_Gentleman VB_remember ,"[ROOT, met, Gentleman, remember]","[ROOT, met, Gentleman, remember]",VBD_met NNP_Gentleman VB_remember ,"[ROOT, met, Gentleman, remember]",VBD_met NNP_Gentleman VB_remember ,"[ROOT, met, Gentleman, remember]",VBD_met NNP_Gentleman VB_remember ,-3,0,2,0,0,0,0,0,0,0
I hope that he will resist the proposals that have been advanced by his hon. Friends.,IPRP hopeVBP thatIN hePRP willMD resistVB theDT proposalsNNS thatWDT haveVBP beenVBN advancedVBN byIN hisPRP$ honNN FriendsNNS ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(resist-6, that-3) nsubj(resist-6, he-4) aux(resist-6, will-5) ccomp(hope-2, resist-6) det(proposals-8, the-7) dobj(resist-6, proposals-8) nsubjpass(advanced-12, that-9) aux(advanced-12, have-10) auxpass(advanced-12, been-11) acl:relcl(proposals-8, advanced-12) case(Friends-16, by-13) nmod:poss(Friends-16, his-14) compound(Friends-16, hon.-15) nmod:agent(advanced-12, Friends-16) punct(hope-2, .-17)",0,0,1,"root(ROOT, hope) nsbj(hope, I) mark(resist, that) nsbj(resist, he) ax(resist, will) ccomp(hope, resist) det(proposals, the) dobj(resist, proposals) nsbjpass(advanced, that) ax(advanced, have) axpass(advanced, been) acl:relcl(proposals, advanced) case(Friends, by) nmod:poss(Friends, his) compond(Friends, hon.) nmod:agent(advanced, Friends) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,WDT) nsbj(VB,PRP) ax(VB,MD) ccomp(VBP,VB) det(NNS,DT) dobj(VB,NNS) nsbjpass(VBN,WDT) ax(VBN,VBP) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(NNS,IN) nmod:poss(NNS,PRP$) compond(NNS,NNS) nmod:agent(VBN,NNS) pnct(VBP,VBP)","[resist, hope, he, proposals]","[his, resist, proposals, Friends, advanced, he, hope]",14,"[his, Friends, advanced]","[his, Friends, advanced]",PRP$_his VB_resist NNS_proposals NNPS_Friends JJ_advanced PRP_he VBP_hope ,"[his, resist, proposals, Friends, advanced, he, hope]","[his, resist, proposals, Friends, advanced, he, hope]",PRP$_his VB_resist NNS_proposals NNPS_Friends JJ_advanced PRP_he VBP_hope ,"[his, resist, proposals, Friends, advanced, he, hope]",PRP$_his VB_resist NNS_proposals NNPS_Friends JJ_advanced PRP_he VBP_hope ,"[his, resist, proposals, Friends, advanced, he, hope]",PRP$_his VB_resist NNS_proposals NNPS_Friends JJ_advanced PRP_he VBP_hope ,-3,0,1,1,1,1,1,1,1,1
Does he further recognise that a half hour Adjournment debate is no substitute for a proper debate on the subject in Government time?,DoesVBZ hePRP furtherRB recogniseVB thatIN aDT halfJJ hourNN AdjournmentNNP debateNN isVBZ noDT substituteNN forIN aDT properJJ debateNN onIN theDT subjectNN inIN GovernmentNNP timeNN ,"root(ROOT-0, recognise-4) aux(recognise-4, Does-1) nsubj(recognise-4, he-2) advmod(recognise-4, further-3) mark(substitute-13, that-5) det(debate-10, a-6) amod(debate-10, half-7) compound(debate-10, hour-8) compound(debate-10, Adjournment-9) nsubj(substitute-13, debate-10) cop(substitute-13, is-11) neg(substitute-13, no-12) ccomp(recognise-4, substitute-13) case(debate-17, for-14) det(debate-17, a-15) amod(debate-17, proper-16) nmod:for(substitute-13, debate-17) case(subject-20, on-18) det(subject-20, the-19) nmod:on(debate-17, subject-20) case(time-23, in-21) compound(time-23, Government-22) nmod:in(subject-20, time-23) punct(recognise-4, ?-24)",0,0,0,"root(ROOT, recognise) ax(recognise, Does) nsbj(recognise, he) advmod(recognise, frther) mark(sbstitte, that) det(debate, a) amod(debate, half) compond(debate, hor) compond(debate, Adjornment) nsbj(sbstitte, debate) cop(sbstitte, is) neg(sbstitte, no) ccomp(recognise, sbstitte) case(debate, for) det(debate, a) amod(debate, proper) nmod:for(sbstitte, debate) case(sbject, on) det(sbject, the) nmod:on(debate, sbject) case(time, in) compond(time, Government) nmod:in(sbject, time) pnct(recognise, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) advmod(VB,RB) mark(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) compond(NN,NNP) nsbj(NN,NN) cop(NN,VBZ) neg(NN,DT) ccomp(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(NN,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) case(NN,IN) compond(NN,NNP) nmod:in(NN,NN) pnct(VB,VB)","[he, substitute, ROOT, further, subject, time, recognise]","[he, substitute, ROOT, further, subject, time, recognise]",3,"[subject, time]","[subject, time]",PRP_he VB_substitute JJ_further NN_subject NN_time VBP_recognise ,"[he, substitute, ROOT, further, subject, time, recognise]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I do not accept what the hon. Gentleman says.,IPRP doVBP notRB acceptVB whatWP theDT honNN GentlemanNNP saysVBZ ,"root(ROOT-0, accept-4) nsubj(accept-4, I-1) aux(accept-4, do-2) neg(accept-4, not-3) dobj(says-9, what-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nsubj(says-9, Gentleman-8) ccomp(accept-4, says-9) punct(accept-4, .-10)",0,1,0,"root(ROOT, accept) nsbj(accept, I) ax(accept, do) neg(accept, not) dobj(says, what) det(Gentleman, the) compond(Gentleman, hon.) nsbj(says, Gentleman) ccomp(accept, says) pnct(accept, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) dobj(VBZ,WP) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(VB,VBZ) pnct(VB,VB)","[says, accept, Gentleman, what]","[says, accept, Gentleman, what]",7,"[says, accept, Gentleman, what]","[says, accept, Gentleman, what]",VBZ_says VBD_accept NNP_Gentleman WP_what ,"[says, accept, Gentleman, what]","[says, accept, Gentleman, what]",VBZ_says VBD_accept NNP_Gentleman WP_what ,"[says, accept, Gentleman, what]",VBZ_says VBD_accept NNP_Gentleman WP_what ,"[says, accept, Gentleman, what]",VBZ_says VBD_accept NNP_Gentleman WP_what ,-3,0,2,0,0,0,0,0,0,0
He will be fully aware  however  that the purpose of NATO is that of a defensive alliance.,HePRP willMD beVB fullyRB awareJJ howeverRB thatIN theDT purposeNN ofIN NATONNP isVBZ thatIN ofIN aDT defensiveJJ allianceNN ,"root(ROOT-0, aware-5) nsubj(aware-5, He-1) aux(aware-5, will-2) cop(aware-5, be-3) advmod(aware-5, fully-4) punct(aware-5, ,-6) advmod(aware-5, however-7) punct(aware-5, ,-8) mark(is-14, that-9) det(purpose-11, the-10) nsubj(is-14, purpose-11) case(NATO-13, of-12) nmod:of(purpose-11, NATO-13) ccomp(aware-5, is-14) nsubj(is-14, that-15) case(alliance-19, of-16) det(alliance-19, a-17) amod(alliance-19, defensive-18) nmod:of(that-15, alliance-19) punct(aware-5, .-20)",0,0,0,"root(ROOT, aware) nsbj(aware, He) ax(aware, will) cop(aware, be) advmod(aware, flly) pnct(aware, ,) advmod(aware, however) pnct(aware, ,) mark(is, that) det(prpose, the) nsbj(is, prpose) case(NATO, of) nmod:of(prpose, NATO) ccomp(aware, is) nsbj(is, that) case(alliance, of) det(alliance, a) amod(alliance, defensive) nmod:of(that, alliance) pnct(aware, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) pnct(JJ,JJ) advmod(JJ,RB) pnct(JJ,JJ) mark(VBZ,IN) det(NN,DT) nsbj(VBZ,NN) case(NNP,IN) nmod:of(NN,NNP) ccomp(JJ,VBZ) nsbj(VBZ,IN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(IN,NN) pnct(JJ,JJ)","[aware, however, fully, ROOT, He, is]","[aware, however, fully, ROOT, He, is]",4,[ ],[ ],JJ_aware RB_however RB_fully PRP_He VBZ_is ,"[aware, however, fully, ROOT, He, is]","[aware, however, fully, ROOT, He, is]",JJ_aware RB_however RB_fully PRP_He VBZ_is ,"[aware, however, fully, ROOT, He, is]",JJ_aware RB_however RB_fully PRP_He VBZ_is ,"[aware, however, fully, ROOT, He, is]",JJ_aware RB_however RB_fully PRP_He VBZ_is ,-3,0,2,0,0,0,0,0,0,0
I am extremely grateful to my hon. Friend.,IPRP amVBP extremelyRB gratefulJJ toTO myPRP$ honNN FriendNN ,"root(ROOT-0, grateful-4) nsubj(grateful-4, I-1) cop(grateful-4, am-2) advmod(grateful-4, extremely-3) case(Friend-8, to-5) nmod:poss(Friend-8, my-6) compound(Friend-8, hon.-7) nmod:to(grateful-4, Friend-8) punct(grateful-4, .-9)",0,1,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) advmod(gratefl, extremely) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(gratefl, Friend) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RB) case(NN,TO) nmod:poss(NN,PRP$) compond(NN,NN) nmod:to(JJ,NN) pnct(JJ,JJ)","[I, my, ROOT, grateful, extremely, Friend]","[I, my, ROOT, grateful, extremely, Friend]",4,"[I, my, ROOT, grateful, extremely, Friend]","[I, my, ROOT, grateful, extremely, Friend]",PRP_I PRP$_my JJ_grateful RB_extremely NNP_Friend ,"[I, my, ROOT, grateful, extremely, Friend]","[I, my, ROOT, grateful, extremely, Friend]",PRP_I PRP$_my JJ_grateful RB_extremely NNP_Friend ,"[I, my, ROOT, grateful, extremely, Friend]",PRP_I PRP$_my JJ_grateful RB_extremely NNP_Friend ,"[I, my, ROOT, grateful, extremely, Friend]",PRP_I PRP$_my JJ_grateful RB_extremely NNP_Friend ,-3,0,2,1,1,0,2,2,2,2
is my right hon. Friend aware that the milk levy system is not being implemented by most other Common Market countries?,isVBZ myPRP$ rightJJ honNN FriendNNP awareVBZ thatIN theDT milkNN levyNN systemNN isVBZ notRB beingVBG implementedVBN byIN mostJJS otherJJ CommonJJ MarketNN countriesNNS ,"root(ROOT-0, aware-6) cop(aware-6, is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(aware-6, Friend-5) mark(implemented-15, that-7) det(system-11, the-8) compound(system-11, milk-9) compound(system-11, levy-10) nsubjpass(implemented-15, system-11) aux(implemented-15, is-12) neg(implemented-15, not-13) auxpass(implemented-15, being-14) ccomp(aware-6, implemented-15) case(countries-21, by-16) amod(countries-21, most-17) amod(countries-21, other-18) amod(countries-21, Common-19) compound(countries-21, Market-20) nmod:agent(implemented-15, countries-21) punct(aware-6, ?-22)",0,1,0,"root(ROOT, aware) cop(aware, is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(aware, Friend) mark(implemented, that) det(system, the) compond(system, milk) compond(system, levy) nsbjpass(implemented, system) ax(implemented, is) neg(implemented, not) axpass(implemented, being) ccomp(aware, implemented) case(contries, by) amod(contries, most) amod(contries, other) amod(contries, Common) compond(contries, Market) nmod:agent(implemented, contries) pnct(aware, ?)","root(,VBZ) cop(VBZ,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBN,IN) det(NN,DT) compond(NN,NN) compond(NN,NN) nsbjpass(VBN,NN) ax(VBN,VBZ) neg(VBN,RB) axpass(VBN,VBG) ccomp(VBZ,VBN) case(NNS,IN) amod(NNS,JJS) amod(NNS,JJ) amod(NNS,JJ) compond(NNS,NN) nmod:agent(VBN,NNS) pnct(VBZ,VBZ)","[Friend, my, implemented, aware, right, ROOT]","[aware, ROOT, Friend, my, implemented]",14,"[aware, ROOT, Friend, my, implemented]",[ ],JJ_aware NNP_Friend PRP$_my VBN_implemented ,"[aware, ROOT, Friend, my, implemented]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
How can we justify a policy of milk quotas to our dairy farmers if it is continually disregarded by our Common Market friends?,HowWRB canMD wePRP justifyVB aDT policyNN ofIN milkNN quotasNNS toTO ourPRP$ dairyNN farmersNNS ifIN itPRP isVBZ continuallyRB disregardedVBN byIN ourPRP$ CommonJJ MarketNNP friendsNNS ,"root(ROOT-0, justify-4) advmod(justify-4, How-1) aux(justify-4, can-2) nsubj(justify-4, we-3) det(policy-6, a-5) dobj(justify-4, policy-6) case(quotas-9, of-7) compound(quotas-9, milk-8) nmod:of(policy-6, quotas-9) case(farmers-13, to-10) nmod:poss(farmers-13, our-11) compound(farmers-13, dairy-12) nmod:to(policy-6, farmers-13) mark(disregarded-18, if-14) nsubjpass(disregarded-18, it-15) auxpass(disregarded-18, is-16) advmod(disregarded-18, continually-17) advcl(justify-4, disregarded-18) case(friends-23, by-19) nmod:poss(friends-23, our-20) amod(friends-23, Common-21) compound(friends-23, Market-22) nmod:agent(disregarded-18, friends-23) punct(justify-4, ?-24)",0,0,1,"root(ROOT, jstify) advmod(jstify, How) ax(jstify, can) nsbj(jstify, we) det(policy, a) dobj(jstify, policy) case(qotas, of) compond(qotas, milk) nmod:of(policy, qotas) case(farmers, to) nmod:poss(farmers, or) compond(farmers, dairy) nmod:to(policy, farmers) mark(disregarded, if) nsbjpass(disregarded, it) axpass(disregarded, is) advmod(disregarded, continally) advcl(jstify, disregarded) case(friends, by) nmod:poss(friends, or) amod(friends, Common) compond(friends, Market) nmod:agent(disregarded, friends) pnct(jstify, ?)","root(,VB) advmod(VB,WRB) ax(VB,MD) nsbj(VB,PRP) det(NN,DT) dobj(VB,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) case(NNS,TO) nmod:poss(NNS,PRP$) compond(NNS,NN) nmod:to(NN,NNS) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) advmod(VBN,RB) advcl(VB,VBN) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) compond(NNS,NNP) nmod:agent(VBN,NNS) pnct(VB,VB)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is he aware that in almost every EEC country but our own production this year has already reached such a level that the balance of quota remaining is far less than the expected production between now and March?,IsVBZ hePRP awareJJ thatIN inIN almostRB everyDT EECJJ countryNN butCC ourPRP$ ownJJ productionNN thisDT yearNN hasVBZ alreadyRB reachedVBN suchPDT aDT levelNN thatIN theDT balanceNN ofIN quotaJJ remainingVBG isVBZ farRB lessJJR thanIN theDT expectedJJ productionNN betweenIN nowRB andCC MarchNNP ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) mark(reached-18, that-4) case(country-9, in-5) advmod(country-9, almost-6) det(country-9, every-7) compound(country-9, EEC-8) nmod:in(reached-18, country-9) cc(country-9, but-10) nmod:poss(production-13, our-11) amod(production-13, own-12) conj:but(country-9, production-13) nmod:in(reached-18, production-13) det(year-15, this-14) nmod:tmod(reached-18, year-15) aux(reached-18, has-16) advmod(reached-18, already-17) ccomp(aware-3, reached-18) det:predet(level-21, such-19) det(level-21, a-20) dobj(reached-18, level-21) mark(remaining-27, that-22) det(balance-24, the-23) nsubj(remaining-27, balance-24) case(quota-26, of-25) nmod:of(balance-24, quota-26) csubj(less-30, remaining-27) cop(less-30, is-28) advmod(less-30, far-29) acl:relcl(level-21, less-30) case(production-34, than-31) det(production-34, the-32) amod(production-34, expected-33) nmod:than(less-30, production-34) case(now-36, between-35) nmod:between(production-34, now-36) cc(now-36, and-37) nmod:between(production-34, March-38) conj:and(now-36, March-38) punct(aware-3, ?-39)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) mark(reached, that) case(contry, in) advmod(contry, almost) det(contry, every) compond(contry, EEC) nmod:in(reached, contry) cc(contry, bt) nmod:poss(prodction, or) amod(prodction, own) conj:bt(contry, prodction) nmod:in(reached, prodction) det(year, this) nmod:tmod(reached, year) ax(reached, has) advmod(reached, already) ccomp(aware, reached) det:predet(level, sch) det(level, a) dobj(reached, level) mark(remaining, that) det(balance, the) nsbj(remaining, balance) case(qota, of) nmod:of(balance, qota) csbj(less, remaining) cop(less, is) advmod(less, far) acl:relcl(level, less) case(prodction, than) det(prodction, the) amod(prodction, expected) nmod:than(less, prodction) case(now, between) nmod:between(prodction, now) cc(now, and) nmod:between(prodction, March) conj:and(now, March) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) mark(VBN,IN) case(NN,IN) advmod(NN,RB) det(NN,DT) compond(NN,JJ) nmod:in(VBN,NN) cc(NN,CC) nmod:poss(NN,PRP$) amod(NN,JJ) conj:bt(NN,NN) nmod:in(VBN,NN) det(NN,DT) nmod:tmod(VBN,NN) ax(VBN,VBZ) advmod(VBN,RB) ccomp(JJ,VBN) det:predet(NN,PDT) det(NN,DT) dobj(VBN,NN) mark(VBG,IN) det(NN,DT) nsbj(VBG,NN) case(JJ,IN) nmod:of(NN,JJ) csbj(JJR,VBG) cop(JJR,VBZ) advmod(JJR,RB) acl:relcl(NN,JJR) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:than(JJR,NN) case(RB,IN) nmod:between(NN,RB) cc(RB,CC) nmod:between(NN,NNP) conj:and(RB,NNP) pnct(JJ,JJ)","[he, ROOT, aware, reached]","[he, ROOT, aware, reached]",17,"[he, ROOT, aware, reached]",[ ],PRP_he JJ_aware VBN_reached ,"[he, ROOT, aware, reached]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
How can he be so sure that the levy will indeed be collected?,HowWRB canMD hePRP beVB soRB sureJJ thatIN theDT levyNN willMD indeedRB beVB collectedVBN ,"root(ROOT-0, sure-6) advmod(sure-6, How-1) aux(sure-6, can-2) nsubj(sure-6, he-3) cop(sure-6, be-4) advmod(sure-6, so-5) mark(collected-13, that-7) det(levy-9, the-8) nsubjpass(collected-13, levy-9) aux(collected-13, will-10) advmod(collected-13, indeed-11) auxpass(collected-13, be-12) ccomp(sure-6, collected-13) punct(sure-6, ?-14)",0,0,1,"root(ROOT, sre) advmod(sre, How) ax(sre, can) nsbj(sre, he) cop(sre, be) advmod(sre, so) mark(collected, that) det(levy, the) nsbjpass(collected, levy) ax(collected, will) advmod(collected, indeed) axpass(collected, be) ccomp(sre, collected) pnct(sre, ?)","root(,JJ) advmod(JJ,WRB) ax(JJ,MD) nsbj(JJ,PRP) cop(JJ,VB) advmod(JJ,RB) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,MD) advmod(VBN,RB) axpass(VBN,VB) ccomp(JJ,VBN) pnct(JJ,JJ)","[How, ROOT, sure, he, so, collected]","[How, ROOT, sure, he, so, collected]",21,[ ],[ ],WRB_How RB_sure PRP_he RB_so VBN_collected ,"[How, ROOT, sure, he, so, collected]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the hon. Gentleman ensure that it continues and seek to establish it on a permanent basis  so that year in  year out we are not threatened with its removal?,WillMD theDT honNN GentlemanNNP ensureVB thatIN itPRP continuesVBZ andCC seekVB toTO establishVB itPRP onIN aDT permanentJJ basisNN soRB thatIN yearNN inIN yearNN outIN wePRP areVBP notRB threatenedVBN withIN itsPRP$ removalNN ,"root(ROOT-0, ensure-5) aux(ensure-5, Will-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(ensure-5, Gentleman-4) mark(continues-8, that-6) nsubj(continues-8, it-7) nsubj(seek-10, it-7) ccomp(ensure-5, continues-8) cc(continues-8, and-9) ccomp(ensure-5, seek-10) conj:and(continues-8, seek-10) mark(establish-12, to-11) xcomp(seek-10, establish-12) dobj(establish-12, it-13) case(basis-17, on-14) det(basis-17, a-15) amod(basis-17, permanent-16) nmod:on(establish-12, basis-17) punct(ensure-5, ,-18) advmod(ensure-5, so-19) dep(so-19, that-20) nsubj(that-20, year-21) case(year-24, in-22) punct(year-24, ,-23) nmod:in(year-21, year-24) mark(threatened-29, out-25) nsubjpass(threatened-29, we-26) auxpass(threatened-29, are-27) neg(threatened-29, not-28) acl(year-24, threatened-29) case(removal-32, with-30) nmod:poss(removal-32, its-31) nmod:with(threatened-29, removal-32) punct(ensure-5, ?-33)",0,0,0,"root(ROOT, ensre) ax(ensre, Will) det(Gentleman, the) compond(Gentleman, hon.) nsbj(ensre, Gentleman) mark(contines, that) nsbj(contines, it) nsbj(seek, it) ccomp(ensre, contines) cc(contines, and) ccomp(ensre, seek) conj:and(contines, seek) mark(establish, to) xcomp(seek, establish) dobj(establish, it) case(basis, on) det(basis, a) amod(basis, permanent) nmod:on(establish, basis) pnct(ensre, ,) advmod(ensre, so) dep(so, that) nsbj(that, year) case(year, in) pnct(year, ,) nmod:in(year, year) mark(threatened, ot) nsbjpass(threatened, we) axpass(threatened, are) neg(threatened, not) acl(year, threatened) case(removal, with) nmod:poss(removal, its) nmod:with(threatened, removal) pnct(ensre, ?)","root(,VB) ax(VB,MD) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) mark(VBZ,IN) nsbj(VBZ,PRP) nsbj(VB,PRP) ccomp(VB,VBZ) cc(VBZ,CC) ccomp(VB,VB) conj:and(VBZ,VB) mark(VB,TO) xcomp(VB,VB) dobj(VB,PRP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VB,NN) pnct(VB,VB) advmod(VB,RB) dep(RB,IN) nsbj(IN,NN) case(NN,IN) pnct(NN,NN) nmod:in(NN,NN) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBP) neg(VBN,RB) acl(NN,VBN) case(NN,IN) nmod:poss(NN,PRP$) nmod:with(VBN,NN) pnct(VB,VB)","[continues, ROOT, so, Gentleman, ensure, seek]","[continues, ROOT, so, Gentleman, ensure, seek]",6,[ ],[ ],VBZ_continues RB_so NNP_Gentleman VB_ensure VB_seek ,"[continues, ROOT, so, Gentleman, ensure, seek]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Since the schemes are justifiable on their own merits because they benefit producers and consumers  will the Minister resist any attempt to use the retention of the schemes as a lever to get unjust padding in other parts of the common agricultural policy  under which too much subsidy is already paid?,SinceIN theDT schemesNNS areVBP justifiableJJ onIN theirPRP$ ownJJ meritsNNS becauseIN theyPRP benefitVBP producersNNS andCC consumersNNS willMD theDT MinisterNNP resistNN anyDT attemptNN toTO useVB theDT retentionNN ofIN theDT schemesNNS asIN aDT leverNN toTO getVB unjustJJ paddingNN inIN otherJJ partsNNS ofIN theDT commonJJ agriculturalJJ policyNN underIN whichWDT tooRB muchJJ subsidyNN isVBZ alreadyRB paidVBN ,"root(ROOT-0, resist-20) mark(justifiable-5, Since-1) det(schemes-3, the-2) nsubj(justifiable-5, schemes-3) cop(justifiable-5, are-4) advcl(resist-20, justifiable-5) case(merits-9, on-6) nmod:poss(merits-9, their-7) amod(merits-9, own-8) nmod:on(justifiable-5, merits-9) mark(benefit-12, because-10) nsubj(benefit-12, they-11) advcl(justifiable-5, benefit-12) dobj(benefit-12, producers-13) cc(producers-13, and-14) dobj(benefit-12, consumers-15) conj:and(producers-13, consumers-15) punct(resist-20, ,-16) aux(resist-20, will-17) det(Minister-19, the-18) nsubj(resist-20, Minister-19) det(attempt-22, any-21) dobj(resist-20, attempt-22) mark(use-24, to-23) acl(attempt-22, use-24) det(retention-26, the-25) dobj(use-24, retention-26) case(schemes-29, of-27) det(schemes-29, the-28) nmod:of(retention-26, schemes-29) case(lever-32, as-30) det(lever-32, a-31) nmod:as(use-24, lever-32) mark(get-34, to-33) acl(lever-32, get-34) amod(padding-36, unjust-35) dobj(get-34, padding-36) case(parts-39, in-37) amod(parts-39, other-38) nmod:in(get-34, parts-39) case(policy-44, of-40) det(policy-44, the-41) amod(policy-44, common-42) amod(policy-44, agricultural-43) nmod:of(parts-39, policy-44) punct(resist-20, ,-45) case(which-47, under-46) nmod:under(paid-53, which-47) advmod(much-49, too-48) amod(subsidy-50, much-49) nsubjpass(paid-53, subsidy-50) auxpass(paid-53, is-51) advmod(paid-53, already-52) dep(resist-20, paid-53) punct(resist-20, ?-54)",0,0,0,"root(ROOT, resist) mark(jstifiable, Since) det(schemes, the) nsbj(jstifiable, schemes) cop(jstifiable, are) advcl(resist, jstifiable) case(merits, on) nmod:poss(merits, their) amod(merits, own) nmod:on(jstifiable, merits) mark(benefit, becase) nsbj(benefit, they) advcl(jstifiable, benefit) dobj(benefit, prodcers) cc(prodcers, and) dobj(benefit, consmers) conj:and(prodcers, consmers) pnct(resist, ,) ax(resist, will) det(Minister, the) nsbj(resist, Minister) det(attempt, any) dobj(resist, attempt) mark(se, to) acl(attempt, se) det(retention, the) dobj(se, retention) case(schemes, of) det(schemes, the) nmod:of(retention, schemes) case(lever, as) det(lever, a) nmod:as(se, lever) mark(get, to) acl(lever, get) amod(padding, njst) dobj(get, padding) case(parts, in) amod(parts, other) nmod:in(get, parts) case(policy, of) det(policy, the) amod(policy, common) amod(policy, agricltral) nmod:of(parts, policy) pnct(resist, ,) case(which, nder) nmod:nder(paid, which) advmod(mch, too) amod(sbsidy, mch) nsbjpass(paid, sbsidy) axpass(paid, is) advmod(paid, already) dep(resist, paid) pnct(resist, ?)","root(,NN) mark(JJ,IN) det(NNS,DT) nsbj(JJ,NNS) cop(JJ,VBP) advcl(NN,JJ) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:on(JJ,NNS) mark(VBP,IN) nsbj(VBP,PRP) advcl(JJ,VBP) dobj(VBP,NNS) cc(NNS,CC) dobj(VBP,NNS) conj:and(NNS,NNS) pnct(NN,NN) ax(NN,MD) det(NNP,DT) nsbj(NN,NNP) det(NN,DT) dobj(NN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) nmod:as(VB,NN) mark(VB,TO) acl(NN,VB) amod(NN,JJ) dobj(VB,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:of(NNS,NN) pnct(NN,NN) case(WDT,IN) nmod:nder(VBN,WDT) advmod(JJ,RB) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBZ) advmod(VBN,RB) dep(NN,VBN) pnct(NN,NN)","[paid, attempt, resist, ROOT, justifiable, Minister]","[paid, attempt, resist, ROOT, justifiable, Minister]",12,[ ],[ ],VBN_paid NN_attempt VB_resist JJ_justifiable NNP_Minister ,"[paid, attempt, resist, ROOT, justifiable, Minister]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. Gentleman will know that we are to enter into negotiations  but these have not yet begun.,TheDT honNN GentlemanNNP willMD knowVB thatIN wePRP areVBP toTO enterVB intoIN negotiationsNNS butCC theseDT haveVBP notRB yetRB begunVBN ,"root(ROOT-0, know-5) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(know-5, Gentleman-3) aux(know-5, will-4) mark(are-8, that-6) nsubj(are-8, we-7) ccomp(know-5, are-8) mark(enter-10, to-9) xcomp(are-8, enter-10) case(negotiations-12, into-11) nmod:into(enter-10, negotiations-12) punct(know-5, ,-13) cc(know-5, but-14) nsubj(begun-19, these-15) aux(begun-19, have-16) neg(begun-19, not-17) advmod(begun-19, yet-18) conj:but(know-5, begun-19) punct(know-5, .-20)",0,0,0,"root(ROOT, know) det(Gentleman, The) compond(Gentleman, hon.) nsbj(know, Gentleman) ax(know, will) mark(are, that) nsbj(are, we) ccomp(know, are) mark(enter, to) xcomp(are, enter) case(negotiations, into) nmod:into(enter, negotiations) pnct(know, ,) cc(know, bt) nsbj(begn, these) ax(begn, have) neg(begn, not) advmod(begn, yet) conj:bt(know, begn) pnct(know, .)","root(,VB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) mark(VBP,IN) nsbj(VBP,PRP) ccomp(VB,VBP) mark(VB,TO) xcomp(VBP,VB) case(NNS,IN) nmod:into(VB,NNS) pnct(VB,VB) cc(VB,CC) nsbj(VBN,DT) ax(VBN,VBP) neg(VBN,RB) advmod(VBN,RB) conj:bt(VB,VBN) pnct(VB,VB)","[are, ROOT, know, Gentleman, but]","[are, ROOT, know, Gentleman, but]",17,[ ],[ ],VBP_are VB_know NNP_Gentleman CC_but ,"[are, ROOT, know, Gentleman, but]","[are, ROOT, know, Gentleman, but]",VBP_are VB_know NNP_Gentleman CC_but ,"[are, ROOT, know, Gentleman, but]",VBP_are VB_know NNP_Gentleman CC_but ,"[are, ROOT, know, Gentleman, but]",VBP_are VB_know NNP_Gentleman CC_but ,-3,0,2,0,0,0,0,0,0,0
Will the Government now press South Africa to allow Mrs. Winnie Mandela to leave her own country next month to attend the women's conference in Nairobi?,WillMD theDT GovernmentNNP nowRB pressVBP SouthNNP AfricaNNP toTO allowVB MrsNNP WinnieNNP MandelaNNP toTO leaveVB herPRP$ ownJJ countryNN nextJJ monthNN toTO attendVB theDT womenNNS 'sPOS conferenceNN inIN NairobiNNP ,"root(ROOT-0, Will-1) det(Government-3, the-2) nsubj(press-5, Government-3) advmod(press-5, now-4) ccomp(Will-1, press-5) compound(Africa-7, South-6) dobj(press-5, Africa-7) mark(allow-9, to-8) xcomp(press-5, allow-9) compound(Mandela-12, Mrs.-10) compound(Mandela-12, Winnie-11) dobj(allow-9, Mandela-12) mark(leave-14, to-13) xcomp(allow-9, leave-14) nmod:poss(country-17, her-15) amod(country-17, own-16) dobj(leave-14, country-17) amod(month-19, next-18) nmod:tmod(leave-14, month-19) mark(attend-21, to-20) advcl(leave-14, attend-21) det(women-23, the-22) nmod:poss(conference-25, women-23) case(women-23, 's-24) dobj(attend-21, conference-25) case(Nairobi-27, in-26) nmod:in(conference-25, Nairobi-27) punct(Will-1, ?-28)",0,0,1,"root(ROOT, Will) det(Government, the) nsbj(press, Government) advmod(press, now) ccomp(Will, press) compond(Africa, Soth) dobj(press, Africa) mark(allow, to) xcomp(press, allow) compond(Mandela, Mrs.) compond(Mandela, Winnie) dobj(allow, Mandela) mark(leave, to) xcomp(allow, leave) nmod:poss(contry, her) amod(contry, own) dobj(leave, contry) amod(month, next) nmod:tmod(leave, month) mark(attend, to) advcl(leave, attend) det(women, the) nmod:poss(conference, women) ""case(women, s)"", dobj(attend, conference) case(Nairobi, in) nmod:in(conference, Nairobi) pnct(Will, ?)","root(,MD) det(NNP,DT) nsbj(VBP,NNP) advmod(VBP,RB) ccomp(MD,VBP) compond(NNP,NNP) dobj(VBP,NNP) mark(VB,TO) xcomp(VBP,VB) compond(NNP,NNP) compond(NNP,NNP) dobj(VB,NNP) mark(VB,TO) xcomp(VB,VB) nmod:poss(NN,PRP$) amod(NN,JJ) dobj(VB,NN) amod(NN,JJ) nmod:tmod(VB,NN) mark(VB,TO) advcl(VB,VB) det(NNS,DT) nmod:poss(NN,NNS) case(NNS,POS) dobj(VB,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(MD,MD)","[Government, allow, Will, Africa, press, now]","[Government, allow, Will, Africa, leave, country, own, her, press, now]",11,"[Government, allow, Will, Africa, leave, country, own, her, press, now]","[Government, allow, Will, Africa, leave, country, own, her, press, now]",NNP_Government VB_allow MD_Will NNP_Africa VBP_leave NN_country JJ_own PRP$_her VBP_press RB_now ,"[Government, allow, Will, Africa, leave, country, own, her, press, now]","[Government, allow, Will, Africa, leave, country, own, her, press, now]",NNP_Government VB_allow MD_Will NNP_Africa VBP_leave NN_country JJ_own PRP$_her VBP_press RB_now ,"[Government, allow, Will, Africa, leave, country, own, her, press, now]",NNP_Government VB_allow MD_Will NNP_Africa VBP_leave NN_country JJ_own PRP$_her VBP_press RB_now ,"[Government, allow, Will, Africa, leave, country, own, her, press, now]",NNP_Government VB_allow MD_Will NNP_Africa VBP_leave NN_country JJ_own PRP$_her VBP_press RB_now ,-3,0,2,0,0,0,0,0,0,0
The examinations will not go ahead unless he gets the dispute settled quickly.,TheDT examinationsNNS willMD notRB goVB aheadRB unlessIN hePRP getsVBZ theDT disputeNN settledVBD quicklyRB ,"root(ROOT-0, go-5) det(examinations-2, The-1) nsubj(go-5, examinations-2) aux(go-5, will-3) neg(go-5, not-4) advmod(go-5, ahead-6) mark(gets-9, unless-7) nsubj(gets-9, he-8) advcl(go-5, gets-9) det(dispute-11, the-10) nsubj(settled-12, dispute-11) ccomp(gets-9, settled-12) advmod(settled-12, quickly-13) punct(go-5, .-14)",0,0,1,"root(ROOT, go) det(examinations, The) nsbj(go, examinations) ax(go, will) neg(go, not) advmod(go, ahead) mark(gets, nless) nsbj(gets, he) advcl(go, gets) det(dispte, the) nsbj(settled, dispte) ccomp(gets, settled) advmod(settled, qickly) pnct(go, .)","root(,VB) det(NNS,DT) nsbj(VB,NNS) ax(VB,MD) neg(VB,RB) advmod(VB,RB) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VB,VBZ) det(NN,DT) nsbj(VBD,NN) ccomp(VBZ,VBD) advmod(VBD,RB) pnct(VB,VB)","[go, he, gets, settled]","[go, he, gets, settled]",17,"[go, he, gets, settled]","[go, he, gets, settled]",VB_go PRP_he VBZ_gets VBN_settled ,"[go, he, gets, settled]","[go, he, gets, settled]",VB_go PRP_he VBZ_gets VBN_settled ,"[go, he, gets, settled]",VB_go PRP_he VBZ_gets VBN_settled ,"[go, he, gets, settled]",VB_go PRP_he VBZ_gets VBN_settled ,-3,0,2,0,0,0,0,0,0,0
Will he find out what that was all about  and will he do something about it?,WillMD hePRP findVB outRP whatWP thatDT wasVBD allDT aboutIN andCC willMD hePRP doVB somethingNN aboutIN itPRP ,"root(ROOT-0, find-3) aux(find-3, Will-1) nsubj(find-3, he-2) compound:prt(find-3, out-4) dobj(all-8, what-5) nsubj(all-8, that-6) cop(all-8, was-7) ccomp(find-3, all-8) advmod(all-8, about-9) punct(find-3, ,-10) cc(find-3, and-11) aux(do-14, will-12) nsubj(do-14, he-13) conj:and(find-3, do-14) dobj(do-14, something-15) case(it-17, about-16) nmod:about(something-15, it-17) punct(find-3, ?-18)",0,0,0,"root(ROOT, find) ax(find, Will) nsbj(find, he) compond:prt(find, ot) dobj(all, what) nsbj(all, that) cop(all, was) ccomp(find, all) advmod(all, abot) pnct(find, ,) cc(find, and) ax(do, will) nsbj(do, he) conj:and(find, do) dobj(do, something) case(it, abot) nmod:abot(something, it) pnct(find, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) compond:prt(VB,RP) dobj(DT,WP) nsbj(DT,DT) cop(DT,VBD) ccomp(VB,DT) advmod(DT,IN) pnct(VB,VB) cc(VB,CC) ax(VB,MD) nsbj(VB,PRP) conj:and(VB,VB) VBbj(VB,NN) case(PRP,IN) nmod:abot(NN,PRP) pnct(VB,VB)","[and, do, find, he, all, something, he, ROOT]","[and, do, find, he, all, something, he, ROOT]",9,[ ],[ ],CC_and VB_do VB_find PRP_he DT_all NN_something PRP_he ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I must correct the hon. Gentleman.,IPRP mustMD correctVB theDT honNN GentlemanNNP ,"root(ROOT-0, correct-3) nsubj(correct-3, I-1) aux(correct-3, must-2) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) dobj(correct-3, Gentleman-6) punct(correct-3, .-7)",0,1,0,"root(ROOT, correct) nsbj(correct, I) ax(correct, mst) det(Gentleman, the) compond(Gentleman, hon.) dobj(correct, Gentleman) pnct(correct, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) pnct(VB,VB)","[I, ROOT, correct, Gentleman]","[I, ROOT, correct, Gentleman]",13,"[I, ROOT, correct, Gentleman]","[I, ROOT, correct, Gentleman]",PRP_I JJ_correct NNP_Gentleman ,"[I, ROOT, correct, Gentleman]","[I, ROOT, correct, Gentleman]",PRP_I JJ_correct NNP_Gentleman ,"[I, ROOT, correct, Gentleman]",PRP_I JJ_correct NNP_Gentleman ,"[I, ROOT, correct, Gentleman]",PRP_I JJ_correct NNP_Gentleman ,-3,0,1,1,1,1,1,1,1,1
The Government have made it clear that bed and breakfast accommodation should be used only as a last resort and for as short a period as possible until permanent accommodation is secured.,TheDT GovernmentNNP haveVBP madeVBN itPRP clearJJ thatIN bedNN andCC breakfastNN accommodationNN shouldMD beVB usedVBN onlyRB asIN aDT lastJJ resortNN andCC forIN asRB shortJJ aDT periodNN asIN possibleJJ untilIN permanentJJ accommodationNN isVBZ securedVBN ,"root(ROOT-0, made-4) det(Government-2, The-1) nsubj(made-4, Government-2) aux(made-4, have-3) nsubj(clear-6, it-5) xcomp(made-4, clear-6) mark(used-14, that-7) compound(accommodation-11, bed-8) cc(bed-8, and-9) conj:and(bed-8, breakfast-10) compound(accommodation-11, breakfast-10) nsubjpass(used-14, accommodation-11) nsubjpass(used-14'', accommodation-11) aux(used-14, should-12) auxpass(used-14, be-13) ccomp(clear-6, used-14) ccomp(clear-6, used-14'') conj:and(used-14, used-14'') advmod(resort-19, only-15) case(resort-19, as-16) det(resort-19, a-17) amod(resort-19, last-18) nmod:as(used-14, resort-19) cc(used-14, and-20) case(period-25, for-21) advmod(short-23, as-22) amod(period-25, short-23) det(period-25, a-24) nmod:for(used-14'', period-25) case(possible-27, as-26) acl:as(period-25, possible-27) mark(secured-32, until-28) amod(accommodation-30, permanent-29) nsubjpass(secured-32, accommodation-30) auxpass(secured-32, is-31) advcl(possible-27, secured-32) punct(made-4, .-33)",0,1,0,"root(ROOT, made) det(Government, The) nsbj(made, Government) ax(made, have) nsbj(clear, it) xcomp(made, clear) mark(sed, that) compond(accommodation, bed) cc(bed, and) conj:and(bed, breakfast) compond(accommodation, breakfast) nsbjpass(sed, accommodation) nsbjpass(sed, accommodation) ax(sed, shold) axpass(sed, be) ccomp(clear, sed) ccomp(clear, sed) conj:and(sed, sed) advmod(resort, only) case(resort, as) det(resort, a) amod(resort, last) nmod:as(sed, resort) cc(sed, and) case(period, for) advmod(short, as) amod(period, short) det(period, a) nmod:for(sed, period) case(possible, as) acl:as(period, possible) mark(secred, ntil) amod(accommodation, permanent) nsbjpass(secred, accommodation) axpass(secred, is) advcl(possible, secred) pnct(made, .)","root(,VBN) det(NNP,DT) nsbj(VBN,NNP) ax(VBN,VBP) nsbj(JJ,PRP) xcomp(VBN,JJ) mark(VBN,IN) compond(NN,NN) cc(NN,CC) conj:and(NN,NN) compond(NN,NN) nsbjpass(VBN,NN) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(JJ,VBN) ccomp(JJ,VBN) conj:and(VBN,VBN) advmod(NN,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:as(VBN,NN) cc(VBN,CC) case(NN,IN) advmod(JJ,IN) amod(NN,JJ) det(NN,DT) nmod:for(VBN,NN) case(JJ,IN) acl:as(NN,JJ) mark(VBN,IN) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBZ) advcl(JJ,VBN) pnct(VBN,VBN)","[Government, ROOT, made, clear]","[Government, ROOT, made, clear]",3,[ ],[ ],NNP_Government VBN_made JJ_clear ,"[Government, ROOT, made, clear]","[Government, ROOT, made, clear]",NNP_Government VBN_made JJ_clear ,"[Government, ROOT, made, clear]",NNP_Government VBN_made JJ_clear ,"[Government, ROOT, made, clear]",NNP_Government VBN_made JJ_clear ,-3,0,2,2,1,2,1,1,1,2
The hon. Gentleman should appreciate that the time spent on Scottish rate support grant orders is exactly the time spent on English rate support grant orders.,TheDT honNN GentlemanNNP shouldMD appreciateVB thatIN theDT timeNN spentVBN onIN ScottishJJ rateNN supportNN grantNN ordersNNS isVBZ exactlyRB theDT timeNN spentVBN onIN EnglishJJ rateNN supportNN grantNN ordersNNS ,"root(ROOT-0, appreciate-5) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(appreciate-5, Gentleman-3) aux(appreciate-5, should-4) dobj(appreciate-5, that-6) det(time-8, the-7) nsubj(that-6, time-8) acl(time-8, spent-9) case(orders-15, on-10) amod(orders-15, Scottish-11) compound(orders-15, rate-12) compound(orders-15, support-13) compound(orders-15, grant-14) nmod:on(spent-9, orders-15) acl(time-8, is-16) advmod(time-19, exactly-17) det(time-19, the-18) nsubj(is-16, time-19) acl(time-19, spent-20) case(orders-26, on-21) amod(orders-26, English-22) compound(orders-26, rate-23) compound(orders-26, support-24) compound(orders-26, grant-25) nmod:on(spent-20, orders-26) punct(appreciate-5, .-27)",0,1,0,"root(ROOT, appreciate) det(Gentleman, The) compond(Gentleman, hon.) nsbj(appreciate, Gentleman) ax(appreciate, shold) dobj(appreciate, that) det(time, the) nsbj(that, time) acl(time, spent) case(orders, on) amod(orders, Scottish) compond(orders, rate) compond(orders, spport) compond(orders, grant) nmod:on(spent, orders) acl(time, is) advmod(time, exactly) det(time, the) nsbj(is, time) acl(time, spent) case(orders, on) amod(orders, English) compond(orders, rate) compond(orders, spport) compond(orders, grant) nmod:on(spent, orders) pnct(appreciate, .)","root(,VB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) dobj(VB,IN) det(NN,DT) nsbj(IN,NN) acl(NN,VBN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) compond(NNS,NN) compond(NNS,NN) nmod:on(VBN,NNS) acl(NN,VBZ) advmod(NN,RB) det(NN,DT) nsbj(VBZ,NN) acl(NN,VBN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) compond(NNS,NN) compond(NNS,NN) nmod:on(VBN,NNS) pnct(VB,VB)","[ROOT, that, Gentleman, appreciate]","[ROOT, that, Gentleman, appreciate]",5,[ ],[ ],IN_that NNP_Gentleman VB_appreciate ,"[ROOT, that, Gentleman, appreciate]","[ROOT, that, Gentleman, appreciate]",IN_that NNP_Gentleman VB_appreciate ,"[ROOT, that, Gentleman, appreciate]",IN_that NNP_Gentleman VB_appreciate ,"[ROOT, that, Gentleman, appreciate]",IN_that NNP_Gentleman VB_appreciate ,-3,0,1,1,1,1,2,0,1,1
Is the Secretary of State aware that since the election  now that they are free to say exactly what they believe  Councillors Struan Stevenson  Murray Tosh and  above all  his close confidant Brian Meek have all said that they strongly favour a Scottish Assembly?,IsVBZ theDT SecretaryNNP ofIN StateNNP awareNN thatWDT sinceIN theDT electionNN nowRB thatIN theyPRP areVBP freeJJ toTO sayVB exactlyRB whatWP theyPRP believeVBP CouncillorsNNS StruanNNP StevensonNNP MurrayNNP ToshNNP andCC aboveIN allPDT hisPRP$ closeJJ confidantJJ BrianNNP MeekNNP haveVBP allDT saidVBD thatIN theyPRP stronglyRB favourVBP aDT ScottishJJ AssemblyNN ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) det(Secretary-3, the-2) nsubj(aware-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) dobj(aware-6, that-7) case(election-10, since-8) det(election-10, the-9) nmod:since(that-7, election-10) punct(now-12, ,-11) advmod(election-10, now-12) mark(free-16, that-13) nsubj(free-16, they-14) cop(free-16, are-15) ccomp(now-12, free-16) mark(say-18, to-17) xcomp(free-16, say-18) advmod(believe-22, exactly-19) dobj(believe-22, what-20) nsubj(believe-22, they-21) ccomp(say-18, believe-22) punct(believe-22, ,-23) compound(Stevenson-26, Councillors-24) compound(Stevenson-26, Struan-25) nsubj(believe-22, Stevenson-26) punct(Stevenson-26, ,-27) compound(Tosh-29, Murray-28) appos(Stevenson-26, Tosh-29) cc(Tosh-29, and-30) punct(Tosh-29, ,-31) case(all-33, above-32) root(,-31, all-33) punct(all-33, ,-34) nmod:poss(confidant-37, his-35) amod(confidant-37, close-36) root(,-34, confidant-37) compound(Meek-39, Brian-38) nsubj(have-40, Meek-39) acl:relcl(confidant-37, have-40) nsubj(said-42, all-41) ccomp(have-40, said-42) mark(favour-46, that-43) nsubj(favour-46, they-44) advmod(favour-46, strongly-45) ccomp(said-42, favour-46) det(Assembly-49, a-47) amod(Assembly-49, Scottish-48) dobj(favour-46, Assembly-49) punct(confidant-37, ?-50)",0,0,0,"root(ROOT, aware) cop(aware, Is) det(Secretary, the) nsbj(aware, Secretary) case(State, of) nmod:of(Secretary, State) dobj(aware, that) case(election, since) det(election, the) nmod:since(that, election) pnct(now, ,) advmod(election, now) mark(free, that) nsbj(free, they) cop(free, are) ccomp(now, free) mark(say, to) xcomp(free, say) advmod(believe, exactly) dobj(believe, what) nsbj(believe, they) ccomp(say, believe) pnct(believe, ,) compond(Stevenson, Concillors) compond(Stevenson, Stran) nsbj(believe, Stevenson) pnct(Stevenson, ,) compond(Tosh, Mrray) appos(Stevenson, Tosh) cc(Tosh, and) pnct(Tosh, ,) case(all, above) root(,, all) pnct(all, ,) nmod:poss(confidant, his) amod(confidant, close) root(,, confidant) compond(Meek, Brian) nsbj(have, Meek) acl:relcl(confidant, have) nsbj(said, all) ccomp(have, said) mark(favor, that) nsbj(favor, they) advmod(favor, strongly) ccomp(said, favor) det(Assembly, a) amod(Assembly, Scottish) dobj(favor, Assembly) pnct(confidant, ?)","root(,NN) cop(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) dobj(NN,IN) case(NN,IN) det(NN,DT) nmod:since(IN,NN) pnct(RB,RB) advmod(NN,RB) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBP) ccomp(RB,JJ) mark(VB,TO) xcomp(JJ,VB) advmod(VBP,RB) dobj(VBP,WP) nsbj(VBP,PRP) ccomp(VB,VBP) pnct(VBP,VBP) compond(NNP,NNS) compond(NNP,NNP) nsbj(VBP,NNP) pnct(NNP,NNP) compond(NNP,NNP) appos(NNP,NNP) cc(NNP,CC) pnct(NNP,NNP) case(DT,IN) root(ININDT) pnct(DT,DT) nmod:poss(JJ,PRP$) amod(JJ,JJ) root(JJJJJJ) compond(NNP,NNP) nsbj(VBP,NNP) acl:relcl(JJ,VBP) nsbj(VBD,DT) ccomp(VBP,VBD) mark(VBP,IN) nsbj(VBP,PRP) advmod(VBP,RB) ccomp(VBD,VBP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) pnct(JJ,JJ)","[aware, ROOT, State, Secretary, that]","[ , aware, State, confidant, his, Secretary, close, have, ROOT, that]",6,"[ , aware, State, confidant, his, Secretary, close, have, ROOT, that]","[ , have, confidant, close, his]",JJ_aware NNP_State JJ_confidant PRP$_his NNP_Secretary JJ_close VBP_have IN_that ,"[ , aware, State, confidant, his, Secretary, close, have, ROOT, that]","[ , aware, State, confidant, his, Secretary, close, have, ROOT, that]",JJ_aware NNP_State JJ_confidant PRP$_his NNP_Secretary JJ_close VBP_have IN_that ,"[ , aware, State, confidant, his, Secretary, close, have, ROOT, that]",JJ_aware NNP_State JJ_confidant PRP$_his NNP_Secretary JJ_close VBP_have IN_that ,"[ , aware, State, confidant, his, Secretary, close, have, ROOT, that]",JJ_aware NNP_State JJ_confidant PRP$_his NNP_Secretary JJ_close VBP_have IN_that ,-3,0,1,0,0,0,0,0,0,0
I know that deep down the Secretary of State for Scotland also supports a Scottish Assembly.,IPRP knowVBP thatIN deepVBP downIN theDT SecretaryNNP ofIN StateNNP forIN ScotlandNNP alsoRB supportsVBZ aDT ScottishJJ AssemblyNN ,"root(ROOT-0, know-2) nsubj(know-2, I-1) mark(supports-13, that-3) nsubj(supports-13, deep-4) case(Secretary-7, down-5) det(Secretary-7, the-6) nmod:down(deep-4, Secretary-7) case(State-9, of-8) nmod:of(Secretary-7, State-9) case(Scotland-11, for-10) nmod:for(Secretary-7, Scotland-11) advmod(supports-13, also-12) ccomp(know-2, supports-13) det(Assembly-16, a-14) amod(Assembly-16, Scottish-15) dobj(supports-13, Assembly-16) punct(know-2, .-17)",0,0,0,"root(ROOT, know) nsbj(know, I) mark(spports, that) nsbj(spports, deep) case(Secretary, down) det(Secretary, the) nmod:down(deep, Secretary) case(State, of) nmod:of(Secretary, State) case(Scotland, for) nmod:for(Secretary, Scotland) advmod(spports, also) ccomp(know, spports) det(Assembly, a) amod(Assembly, Scottish) dobj(spports, Assembly) pnct(know, .)","root(,VBP) nsbj(VBP,PRP) mark(VBZ,IN) nsbj(VBZ,VBP) case(NNP,IN) det(NNP,DT) nmod:down(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) advmod(VBZ,RB) ccomp(VBP,VBZ) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) pnct(VBP,VBP)","[Secretary, deep, Scotland, supports, State]","[Secretary, deep, Scotland, supports, State]",9,"[Secretary, deep, Scotland, supports, State]","[Secretary, deep, Scotland, supports, State]",NNP_Secretary VBP_deep NNP_Scotland VBZ_supports NNP_State ,"[Secretary, deep, Scotland, supports, State]","[Secretary, deep, Scotland, supports, State]",NNP_Secretary VBP_deep NNP_Scotland VBZ_supports NNP_State ,"[Secretary, deep, Scotland, supports, State]",NNP_Secretary VBP_deep NNP_Scotland VBZ_supports NNP_State ,"[Secretary, deep, Scotland, supports, State]",NNP_Secretary VBP_deep NNP_Scotland VBZ_supports NNP_State ,-3,0,2,1,1,1,1,1,1,2
I am interested in the fact that the Secretary of State spoke confidently for the Grampian region  given that there are twice as many SNP Members of Parliament as Tory Members of Parliament in the region.,IPRP amVBP interestedJJ inIN theDT factNN thatIN theDT SecretaryNNP ofIN StateNNP spokeVBD confidentlyRB forIN theDT GrampianJJ regionNN givenVBN thatIN thereEX areVBP twiceRB asRB manyJJ SNPNNP MembersNNS ofIN ParliamentNNP asIN ToryNNP MembersNNP ofIN ParliamentNNP inIN theDT regionNN ,"root(ROOT-0, interested-3) nsubj(interested-3, I-1) cop(interested-3, am-2) case(fact-6, in-4) det(fact-6, the-5) nmod:in(interested-3, fact-6) mark(spoke-12, that-7) det(Secretary-9, the-8) nsubj(spoke-12, Secretary-9) case(State-11, of-10) nmod:of(Secretary-9, State-11) ccomp(fact-6, spoke-12) advmod(spoke-12, confidently-13) case(region-17, for-14) det(region-17, the-15) compound(region-17, Grampian-16) nmod:for(spoke-12, region-17) punct(spoke-12, ,-18) advcl(spoke-12, given-19) mark(are-22, that-20) expl(are-22, there-21) ccomp(given-19, are-22) advmod(many-25, twice-23) advmod(many-25, as-24) amod(Members-27, many-25) compound(Members-27, SNP-26) nsubj(are-22, Members-27) case(Parliament-29, of-28) nmod:of(Members-27, Parliament-29) case(Members-32, as-30) compound(Members-32, Tory-31) nmod:as(Members-27, Members-32) case(Parliament-34, of-33) nmod:of(Members-32, Parliament-34) case(region-37, in-35) det(region-37, the-36) nmod:in(Members-32, region-37) punct(interested-3, .-38)",0,0,0,"root(ROOT, interested) nsbj(interested, I) cop(interested, am) case(fact, in) det(fact, the) nmod:in(interested, fact) mark(spoke, that) det(Secretary, the) nsbj(spoke, Secretary) case(State, of) nmod:of(Secretary, State) ccomp(fact, spoke) advmod(spoke, confidently) case(region, for) det(region, the) compond(region, Grampian) nmod:for(spoke, region) pnct(spoke, ,) advcl(spoke, given) mark(are, that) expl(are, there) ccomp(given, are) advmod(many, twice) advmod(many, as) amod(Members, many) compond(Members, SNP) nsbj(are, Members) case(Parliament, of) nmod:of(Members, Parliament) case(Members, as) compond(Members, Tory) nmod:as(Members, Members) case(Parliament, of) nmod:of(Members, Parliament) case(region, in) det(region, the) nmod:in(Members, region) pnct(interested, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) case(NN,IN) det(NN,DT) nmod:in(JJ,NN) mark(VBD,IN) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) ccomp(NN,VBD) advmod(VBD,RB) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:for(VBD,NN) pnct(VBD,VBD) advcl(VBD,VBN) mark(VBP,IN) expl(VBP,EX) ccomp(VBN,VBP) advmod(JJ,RB) advmod(JJ,IN) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) compond(NNP,NNP) nmod:as(NNP,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NN,IN) det(NN,DT) nmod:in(NNP,NN) pnct(JJ,JJ)","[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]","[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]",10,"[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]","[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]",NN_region NNP_State NNS_Members NNS_Members NN_region RB_confidently NNP_Parliament NN_spoke NN_fact VBN_given NNP_Secretary ,"[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]","[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]",NN_region NNP_State NNS_Members NNS_Members NN_region RB_confidently NNP_Parliament NN_spoke NN_fact VBN_given NNP_Secretary ,"[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]",NN_region NNP_State NNS_Members NNS_Members NN_region RB_confidently NNP_Parliament NN_spoke NN_fact VBN_given NNP_Secretary ,"[region, State, Members, Members, region, confidently, Parliament, spoke, fact, given, Secretary]",NN_region NNP_State NNS_Members NNS_Members NN_region RB_confidently NNP_Parliament NN_spoke NN_fact VBN_given NNP_Secretary ,-3,0,2,0,0,0,0,0,0,0
Would there not be severe casualties in the Labour party in the central belt?,WouldMD thereEX notRB beVB severeJJ casualtiesNNS inIN theDT LabourNNP partyNN inIN theDT centralJJ beltNN ,"root(ROOT-0, casualties-6) aux(casualties-6, Would-1) expl(casualties-6, there-2) neg(casualties-6, not-3) cop(casualties-6, be-4) amod(casualties-6, severe-5) case(party-10, in-7) det(party-10, the-8) compound(party-10, Labour-9) nmod:in(casualties-6, party-10) case(belt-14, in-11) det(belt-14, the-12) amod(belt-14, central-13) nmod:in(casualties-6, belt-14) punct(casualties-6, ?-15)",0,0,0,"root(ROOT, casalties) ax(casalties, Wold) expl(casalties, there) neg(casalties, not) cop(casalties, be) amod(casalties, severe) case(party, in) det(party, the) compond(party, Labor) nmod:in(casalties, party) case(belt, in) det(belt, the) amod(belt, central) nmod:in(casalties, belt) pnct(casalties, ?)","root(,NNS) ax(NNS,MD) expl(NNS,EX) neg(NNS,RB) cop(NNS,VB) amod(NNS,JJ) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:in(NNS,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NNS,NN) pnct(NNS,NNS)","[party, casualties]","[party, casualties]",12,"[party, casualties]","[party, casualties]",NN_party NNS_casualties ,"[party, casualties]","[party, casualties]",NN_party NNS_casualties ,"[party, casualties]",NN_party NNS_casualties ,"[party, casualties]",NN_party NNS_casualties ,-3,0,2,0,0,0,0,0,0,0
Is it not rather odd that the Opposition are calling for a Scottish Assembly  yet supporting a Welshman as their leader in Westminster?,IsVBZ itPRP notRB ratherRB oddJJ thatIN theDT OppositionNNP areVBP callingVBG forIN aDT ScottishJJ AssemblyNNP yetRB supportingVBG aDT WelshmanNNP asIN theirPRP$ leaderNN inIN WestminsterNNP ,"root(ROOT-0, odd-5) cop(odd-5, Is-1) nsubj(odd-5, it-2) neg(odd-5, not-3) advmod(odd-5, rather-4) mark(calling-10, that-6) det(Opposition-8, the-7) nsubj(calling-10, Opposition-8) aux(calling-10, are-9) ccomp(odd-5, calling-10) case(Assembly-14, for-11) det(Assembly-14, a-12) amod(Assembly-14, Scottish-13) nmod:for(calling-10, Assembly-14) punct(calling-10, ,-15) advmod(supporting-17, yet-16) advcl(calling-10, supporting-17) det(Welshman-19, a-18) dobj(supporting-17, Welshman-19) case(leader-22, as-20) nmod:poss(leader-22, their-21) nmod:as(Welshman-19, leader-22) case(Westminster-24, in-23) nmod:in(leader-22, Westminster-24) punct(odd-5, ?-25)",0,0,0,"root(ROOT, odd) cop(odd, Is) nsbj(odd, it) neg(odd, not) advmod(odd, rather) mark(calling, that) det(Opposition, the) nsbj(calling, Opposition) ax(calling, are) ccomp(odd, calling) case(Assembly, for) det(Assembly, a) amod(Assembly, Scottish) nmod:for(calling, Assembly) pnct(calling, ,) advmod(spporting, yet) advcl(calling, spporting) det(Welshman, a) dobj(spporting, Welshman) case(leader, as) nmod:poss(leader, their) nmod:as(Welshman, leader) case(Westminster, in) nmod:in(leader, Westminster) pnct(odd, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) advmod(JJ,RB) mark(VBG,IN) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBP) ccomp(JJ,VBG) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:for(VBG,NNP) pnct(VBG,VBG) advmod(VBG,RB) advcl(VBG,VBG) det(NNP,DT) dobj(VBG,NNP) case(NN,IN) nmod:poss(NN,PRP$) nmod:as(NNP,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(JJ,JJ)","[calling, odd, Opposition, supporting, Assembly]","[calling, odd, Opposition, supporting, Assembly]",13,[ ],[ ],VBG_calling NN_odd NNP_Opposition VBG_supporting NN_Assembly ,"[calling, odd, Opposition, supporting, Assembly]","[calling, odd, Opposition, supporting, Assembly]",VBG_calling NN_odd NNP_Opposition VBG_supporting NN_Assembly ,"[calling, odd, Opposition, supporting, Assembly]",VBG_calling NN_odd NNP_Opposition VBG_supporting NN_Assembly ,"[calling, odd, Opposition, supporting, Assembly]",VBG_calling NN_odd NNP_Opposition VBG_supporting NN_Assembly ,-3,0,2,2,1,2,2,2,2,2
I understand that he voted for and supported the devolution settlement in 1978  which was  of course  a one off Scottish solution.,IPRP understandVBP thatIN hePRP votedVBD forIN andCC supportedVBD theDT devolutionNN settlementNN inIN 1978CD whichWDT wasVBD ofIN courseNN aDT oneCD offIN ScottishJJ solutionNN ,"root(ROOT-0, understand-2) nsubj(understand-2, I-1) mark(voted-5, that-3) nsubj(voted-5, he-4) ccomp(understand-2, voted-5) nmod(voted-5, for-6) cc(for-6, and-7) nmod(voted-5, supported-8) conj:and(for-6, supported-8) det(settlement-11, the-9) compound(settlement-11, devolution-10) dobj(supported-8, settlement-11) case(1978-13, in-12) nmod:in(supported-8, 1978-13) punct(1978-13, ,-14) nsubj(course-19, which-15) cop(course-19, was-16) punct(course-19, ,-17) case(course-19, of-18) acl:relcl(1978-13, course-19) punct(course-19, ,-20) det(one-22, a-21) root(,-20, one-22) case(solution-25, off-23) amod(solution-25, Scottish-24) nmod:off(one-22, solution-25) punct(one-22, .-26)",0,0,0,"root(ROOT, nderstand) nsbj(nderstand, I) mark(voted, that) nsbj(voted, he) ccomp(nderstand, voted) nmod(voted, for) cc(for, and) nmod(voted, spported) conj:and(for, spported) det(settlement, the) compond(settlement, devoltion) dobj(spported, settlement) case(1978, in) nmod:in(spported, 1978) pnct(1978, ,) nsbj(corse, which) cop(corse, was) pnct(corse, ,) case(corse, of) acl:relcl(1978, corse) pnct(corse, ,) det(one, a) root(,, one) case(soltion, off) amod(soltion, Scottish) nmod:off(one, soltion) pnct(one, .)","root(,VBP) nsbj(VBP,PRP) mark(VBD,IN) nsbj(VBD,PRP) ccomp(VBP,VBD) nmod(VBD,IN) cc(IN,CC) nmod(VBD,VBD) conj:and(IN,VBD) det(NN,DT) compond(NN,NN) dobj(VBD,NN) case(CD,IN) nmod:in(VBD,CD) pnct(CD,CD) nsbj(NN,WDT) cop(NN,VBD) pnct(NN,NN) case(NN,IN) acl:relcl(CD,NN) pnct(NN,NN) det(CD,DT) root(DTDTCD) case(NN,IN) amod(NN,JJ) nmod:off(CD,NN) pnct(CD,CD)","[supported, understand, voted, he, for]","[supported, understand, voted, he, for]",15,"[supported, understand, voted, he, for]","[supported, understand, voted, he, for]",VBN_supported VBP_understand VBN_voted PRP_he IN_for ,"[supported, understand, voted, he, for]","[supported, understand, voted, he, for]",VBN_supported VBP_understand VBN_voted PRP_he IN_for ,"[supported, understand, voted, he, for]",VBN_supported VBP_understand VBN_voted PRP_he IN_for ,"[supported, understand, voted, he, for]",VBN_supported VBP_understand VBN_voted PRP_he IN_for ,-3,0,2,1,1,1,1,1,1,2
Will he clarify that point?,WillMD hePRP clarifyVB thatDT pointNN ,"root(ROOT-0, clarify-3) aux(clarify-3, Will-1) nsubj(clarify-3, he-2) det(point-5, that-4) dobj(clarify-3, point-5) punct(clarify-3, ?-6)",0,0,0,"root(ROOT, clarify) ax(clarify, Will) nsbj(clarify, he) det(point, that) dobj(clarify, point) pnct(clarify, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) det(NN,DT) dobj(VB,NN) pnct(VB,VB)","[he, ROOT, point, clarify]","[he, ROOT, point, clarify]",15,[ ],[ ],PRP_he VB_point VB_clarify ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
While 5 million Scots returned 10 Conservative Members of Parliament  16 million Englishmen in the south of England returned only three Labour Members of Parliament.,WhileIN 5CD millionCD ScotsNNP returnedVBD 10CD ConservativeJJ MembersNNS ofIN ParliamentNNP 16CD millionCD EnglishmenNNS inIN theDT southNN ofIN EnglandNNP returnedVBD onlyRB threeCD LabourNNP MembersNNPS ofIN ParliamentNNP ,"root(ROOT-0, returned-20) mark(returned-5, While-1) compound(million-3, 5-2) nummod(Scots-4, million-3) nsubj(returned-5, Scots-4) advcl(returned-20, returned-5) nummod(Members-8, 10-6) amod(Members-8, Conservative-7) dobj(returned-5, Members-8) case(Parliament-10, of-9) nmod:of(Members-8, Parliament-10) punct(returned-20, ,-11) compound(million-13, 16-12) nummod(Englishmen-14, million-13) nsubj(returned-20, Englishmen-14) case(south-17, in-15) det(south-17, the-16) nmod:in(Englishmen-14, south-17) case(England-19, of-18) nmod:of(south-17, England-19) advmod(three-22, only-21) nummod(Members-24, three-22) compound(Members-24, Labour-23) dobj(returned-20, Members-24) case(Parliament-26, of-25) nmod:of(Members-24, Parliament-26) punct(returned-20, .-27)",0,0,0,"root(ROOT, retrned) mark(retrned, While) compond(million, 5) nmmod(Scots, million) nsbj(retrned, Scots) advcl(retrned, retrned) nmmod(Members, 10) amod(Members, Conservative) dobj(retrned, Members) case(Parliament, of) nmod:of(Members, Parliament) pnct(retrned, ,) compond(million, 16) nmmod(Englishmen, million) nsbj(retrned, Englishmen) case(soth, in) det(soth, the) nmod:in(Englishmen, soth) case(England, of) nmod:of(soth, England) advmod(three, only) nmmod(Members, three) compond(Members, Labor) dobj(retrned, Members) case(Parliament, of) nmod:of(Members, Parliament) pnct(retrned, .)","root(,VBD) mark(VBD,IN) compond(CD,CD) nmmod(NNP,CD) nsbj(VBD,NNP) advcl(VBD,VBD) nmmod(NNPS,CD) amod(NNPS,JJ) dobj(VBD,NNPS) case(NNP,IN) nmod:of(NNPS,NNP) pnct(VBD,VBD) compond(CD,CD) nmmod(NNS,CD) nsbj(VBD,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) advmod(CD,RB) nmmod(NNPS,CD) compond(NNPS,NNP) dobj(VBD,NNPS) case(NNP,IN) nmod:of(NNPS,NNP) pnct(VBD,VBD)","[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]","[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]",15,"[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]","[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]",VBN_returned NNS_Members NNP_Parliament NNS_Members NNP_Parliament JJ_Conservative CD_three CD_10 VBN_returned ,"[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]","[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]",VBN_returned NNS_Members NNP_Parliament NNS_Members NNP_Parliament JJ_Conservative CD_three CD_10 VBN_returned ,"[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]",VBN_returned NNS_Members NNP_Parliament NNS_Members NNP_Parliament JJ_Conservative CD_three CD_10 VBN_returned ,"[returned, Members, Parliament, Members, Parliament, Conservative, three, 10, returned]",VBN_returned NNS_Members NNP_Parliament NNS_Members NNP_Parliament JJ_Conservative CD_three CD_10 VBN_returned ,-3,0,2,2,1,2,0,0,0,0
He might like to discuss that with the leader of his party.,HePRP mightMD likeVB toTO discussVB thatIN withIN theDT leaderNN ofIN hisPRP$ partyNN ,"root(ROOT-0, like-3) nsubj(like-3, He-1) aux(like-3, might-2) mark(discuss-5, to-4) xcomp(like-3, discuss-5) dobj(discuss-5, that-6) case(leader-9, with-7) det(leader-9, the-8) nmod:with(that-6, leader-9) case(party-12, of-10) nmod:poss(party-12, his-11) nmod:of(leader-9, party-12) punct(like-3, .-13)",0,0,1,"root(ROOT, like) nsbj(like, He) ax(like, might) mark(discss, to) xcomp(like, discss) dobj(discss, that) case(leader, with) det(leader, the) nmod:with(that, leader) case(party, of) nmod:poss(party, his) nmod:of(leader, party) pnct(like, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) mark(VB,TO) xcomp(VB,VB) dobj(VB,IN) case(NN,IN) det(NN,DT) nmod:with(IN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(VB,VB)","[ROOT, He, discuss, like]","[party, leader, discuss, ROOT, He, his, like]",18,"[party, his, leader]","[party, his, leader]",NN_party NN_leader VB_discuss PRP_He PRP$_his IN_like ,"[party, leader, discuss, ROOT, He, his, like]","[party, leader, discuss, ROOT, He, his, like]",NN_party NN_leader VB_discuss PRP_He PRP$_his IN_like ,"[party, leader, discuss, ROOT, He, his, like]",NN_party NN_leader VB_discuss PRP_He PRP$_his IN_like ,"[party, leader, discuss, ROOT, He, his, like]",NN_party NN_leader VB_discuss PRP_He PRP$_his IN_like ,-3,0,1,1,1,1,1,1,1,1
If that is so  can he explain why Whipps Cross hospital in my constituency is now on red alert  which means that patients cannot get routine surgery?,IfIN thatDT isVBZ soRB canMD hePRP explainVB whyWRB WhippsNNP CrossNNP hospitalNN inIN myPRP$ constituencyNN isVBZ nowRB onIN redJJ alertNN whichWDT meansVBZ thatIN patientsNNS canMD notRB getVB routineJJ surgeryNN ,"root(ROOT-0, explain-8) mark(so-4, If-1) nsubj(so-4, that-2) cop(so-4, is-3) advmod(explain-8, so-4) punct(explain-8, ,-5) aux(explain-8, can-6) nsubj(explain-8, he-7) advmod(alert-20, why-9) compound(hospital-12, Whipps-10) compound(hospital-12, Cross-11) nsubj(alert-20, hospital-12) case(constituency-15, in-13) nmod:poss(constituency-15, my-14) nmod:in(hospital-12, constituency-15) cop(alert-20, is-16) advmod(alert-20, now-17) case(alert-20, on-18) amod(alert-20, red-19) ccomp(explain-8, alert-20) punct(alert-20, ,-21) nsubj(means-23, which-22) acl:relcl(alert-20, means-23) mark(get-28, that-24) nsubj(get-28, patients-25) aux(get-28, can-26) neg(get-28, not-27) ccomp(means-23, get-28) amod(surgery-30, routine-29) dobj(get-28, surgery-30) punct(explain-8, ?-31)",0,0,0,"root(ROOT, explain) mark(so, If) nsbj(so, that) cop(so, is) advmod(explain, so) pnct(explain, ,) ax(explain, can) nsbj(explain, he) advmod(alert, why) compond(hospital, Whipps) compond(hospital, Cross) nsbj(alert, hospital) case(constitency, in) nmod:poss(constitency, my) nmod:in(hospital, constitency) cop(alert, is) advmod(alert, now) case(alert, on) amod(alert, red) ccomp(explain, alert) pnct(alert, ,) nsbj(means, which) acl:relcl(alert, means) mark(get, that) nsbj(get, patients) ax(get, can) neg(get, not) ccomp(means, get) amod(srgery, rotine) dobj(get, srgery) pnct(explain, ?)","root(,VB) mark(RB,IN) nsbj(RB,IN) cop(RB,VBZ) advmod(VB,RB) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) advmod(NN,WRB) compond(NN,NNP) compond(NN,NNP) nsbj(NN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) cop(NN,VBZ) advmod(NN,RB) case(NN,IN) amod(NN,JJ) ccomp(VB,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) mark(VB,IN) nsbj(VB,NNS) ax(VB,MD) neg(VB,RB) ccomp(VBZ,VB) amod(NN,JJ) dobj(VB,NN) pnct(VB,VB)","[so, ROOT, explain, he, alert]","[so, ROOT, explain, he, alert]",11,[ ],[ ],RB_so NN_explain PRP_he NN_alert ,"[so, ROOT, explain, he, alert]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Having said that  I again remind the hon. Gentleman that no one denies the constant and growing needs in the Health Service.,HavingVBG saidVBD thatIN IPRP againRB remindVBP theDT honNN GentlemanNNP thatIN noDT oneNN deniesVBZ theDT constantJJ andCC growingVBG needsNNS inIN theDT HealthNNP ServiceNNP ,"root(ROOT-0, said-2) aux(said-2, Having-1) mark(remind-7, that-3) punct(remind-7, ,-4) nsubj(remind-7, I-5) advmod(remind-7, again-6) ccomp(said-2, remind-7) det(Gentleman-10, the-8) compound(Gentleman-10, hon.-9) dobj(remind-7, Gentleman-10) mark(denies-14, that-11) neg(one-13, no-12) nsubj(denies-14, one-13) dep(Gentleman-10, denies-14) det(constant-16, the-15) amod(needs-19, constant-16) cc(constant-16, and-17) conj:and(constant-16, growing-18) amod(needs-19, growing-18) dobj(denies-14, needs-19) case(Service-23, in-20) det(Service-23, the-21) compound(Service-23, Health-22) nmod:in(needs-19, Service-23) punct(said-2, .-24)",0,0,0,"root(ROOT, said) ax(said, Having) mark(remind, that) pnct(remind, ,) nsbj(remind, I) advmod(remind, again) ccomp(said, remind) det(Gentleman, the) compond(Gentleman, hon.) dobj(remind, Gentleman) mark(denies, that) neg(one, no) nsbj(denies, one) dep(Gentleman, denies) det(constant, the) amod(needs, constant) cc(constant, and) conj:and(constant, growing) amod(needs, growing) dobj(denies, needs) case(Service, in) det(Service, the) compond(Service, Health) nmod:in(needs, Service) pnct(said, .)","root(,VBD) ax(VBD,VBG) mark(VBP,IN) pnct(VBP,VBP) nsbj(VBP,PRP) advmod(VBP,RB) ccomp(VBD,VBP) det(NNP,DT) compond(NNP,NNP) dobj(VBP,NNP) mark(VBZ,IN) neg(NN,DT) nsbj(VBZ,NN) dep(NNP,VBZ) det(JJ,DT) amod(NNS,JJ) cc(JJ,CC) conj:and(JJ,VBG) amod(NNS,VBG) dobj(VBZ,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NNS,NNP) pnct(VBD,VBD)","[remind, one, again, I, Gentleman, denies, needs, said]","[remind, one, again, I, Gentleman, denies, needs, said]",12,"[remind, one, again, I, Gentleman, denies, needs, said]","[remind, one, again, I, Gentleman, denies, needs, said]",VBP_remind CD_one RB_again PRP_I NNP_Gentleman VBZ_denies NNS_needs VBD_said ,"[remind, one, again, I, Gentleman, denies, needs, said]","[remind, one, again, I, Gentleman, denies, needs, said]",VBP_remind CD_one RB_again PRP_I NNP_Gentleman VBZ_denies NNS_needs VBD_said ,"[remind, one, again, I, Gentleman, denies, needs, said]",VBP_remind CD_one RB_again PRP_I NNP_Gentleman VBZ_denies NNS_needs VBD_said ,"[remind, one, again, I, Gentleman, denies, needs, said]",VBP_remind CD_one RB_again PRP_I NNP_Gentleman VBZ_denies NNS_needs VBD_said ,-3,0,2,2,1,2,2,2,2,2
As someone who has been a governor of ILEA schools  who has served on the Inner London education authority for four years and seen at first hand the high cost of ILEA as against the poor responses and the bad education that children receive  may I ask my right hon. Friend to ensure that ILEA is abolished?,AsIN someoneNN whoWP hasVBZ beenVBN aDT governorNN ofIN ILEANNP schoolsNNS whoWP hasVBZ servedVBN onIN theDT InnerNNP LondonNNP educationNN authorityNN forIN fourCD yearsNNS andCC seenVBN atIN firstJJ handNN theDT highJJ costNN ofIN ILEANNP asIN againstIN theDT poorJJ responsesNNS andCC theDT badJJ educationNN thatIN childrenNNS receiveVBP mayMD IPRP askVB myPRP$ rightJJ honNN FriendNNP toTO ensureVB thatDT ILEANNP isVBZ abolishedVBN ,"root(ROOT-0, ask-49) case(someone-2, As-1) nmod:as(ask-49, someone-2) nsubj(governor-7, who-3) aux(governor-7, has-4) cop(governor-7, been-5) det(governor-7, a-6) acl:relcl(someone-2, governor-7) case(schools-10, of-8) compound(schools-10, ILEA-9) nmod:of(governor-7, schools-10) punct(someone-2, ,-11) nsubj(served-14, who-12) nsubj(seen-25, who-12) aux(served-14, has-13) acl:relcl(someone-2, served-14) case(authority-20, on-15) det(authority-20, the-16) compound(authority-20, Inner-17) compound(authority-20, London-18) compound(authority-20, education-19) nmod:on(served-14, authority-20) case(years-23, for-21) nummod(years-23, four-22) nmod:for(authority-20, years-23) cc(served-14, and-24) acl:relcl(someone-2, seen-25) conj:and(served-14, seen-25) case(hand-28, at-26) amod(hand-28, first-27) nmod:at(seen-25, hand-28) det(cost-31, the-29) amod(cost-31, high-30) dep(hand-28, cost-31) case(ILEA-33, of-32) nmod:of(cost-31, ILEA-33) case(responses-38, as-34) case(responses-38, against-35) det(responses-38, the-36) amod(responses-38, poor-37) nmod:against(cost-31, responses-38) cc(cost-31, and-39) det(education-42, the-40) amod(education-42, bad-41) dep(hand-28, education-42) conj:and(cost-31, education-42) det(children-44, that-43) nsubj(receive-45, children-44) acl:relcl(education-42, receive-45) punct(someone-2, ,-46) aux(ask-49, may-47) nsubj(ask-49, I-48) nmod:poss(Friend-53, my-50) amod(Friend-53, right-51) compound(Friend-53, hon.-52) dobj(ask-49, Friend-53) mark(ensure-55, to-54) xcomp(ask-49, ensure-55) mark(abolished-59, that-56) nsubjpass(abolished-59, ILEA-57) auxpass(abolished-59, is-58) ccomp(ensure-55, abolished-59) punct(ask-49, ?-60)",0,0,0,"root(ROOT, ask) case(someone, As) nmod:as(ask, someone) nsbj(governor, who) ax(governor, has) cop(governor, been) det(governor, a) acl:relcl(someone, governor) case(schools, of) compond(schools, ILEA) nmod:of(governor, schools) pnct(someone, ,) nsbj(served, who) nsbj(seen, who) ax(served, has) acl:relcl(someone, served) case(athority, on) det(athority, the) compond(athority, Inner) compond(athority, London) compond(athority, edcation) nmod:on(served, athority) case(years, for) nmmod(years, for) nmod:for(athority, years) cc(served, and) acl:relcl(someone, seen) conj:and(served, seen) case(hand, at) amod(hand, first) nmod:at(seen, hand) det(cost, the) amod(cost, high) dep(hand, cost) case(ILEA, of) nmod:of(cost, ILEA) case(responses, as) case(responses, against) det(responses, the) amod(responses, poor) nmod:against(cost, responses) cc(cost, and) det(edcation, the) amod(edcation, bad) dep(hand, edcation) conj:and(cost, edcation) det(children, that) nsbj(receive, children) acl:relcl(edcation, receive) pnct(someone, ,) ax(ask, may) nsbj(ask, I) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) dobj(ask, Friend) mark(ensre, to) xcomp(ask, ensre) mark(abolished, that) nsbjpass(abolished, ILEA) axpass(abolished, is) ccomp(ensre, abolished) pnct(ask, ?)","root(,VB) case(NN,IN) nmod:as(VB,NN) nsbj(NN,WP) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) acl:relcl(NN,NN) case(NNS,IN) compond(NNS,NNP) nmod:of(NN,NNS) pnct(NN,NN) nsbj(VBN,WP) nsbj(VBN,WP) ax(VBN,VBZ) acl:relcl(NN,VBN) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) compond(NN,NN) nmod:on(VBN,NN) case(NNS,IN) nmmod(NNS,CD) nmod:for(NN,NNS) cc(VBN,CC) acl:relcl(NN,VBN) conj:and(VBN,VBN) case(NN,IN) amod(NN,JJ) nmod:at(VBN,NN) det(NN,DT) amod(NN,JJ) dep(NN,NN) case(NNP,IN) nmod:of(NN,NNP) case(NNS,IN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:against(NN,NNS) cc(NN,CC) det(NN,DT) amod(NN,JJ) dep(NN,NN) conj:and(NN,NN) det(NNS,DT) nsbj(VBP,NNS) acl:relcl(NN,VBP) pnct(NN,NN) ax(VB,MD) nsbj(VB,PRP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dobj(VB,NNP) mark(VB,TO) xcomp(VB,VB) mark(VBN,DT) nsbjpass(VBN,NNP) axpass(VBN,VBZ) ccomp(VB,VBN) pnct(VB,VB)","[right, my, ensure, Friend, someone, ROOT, I, ask]","[ensure, Friend, my, someone, ROOT, I, ask]",8,"[ensure, Friend, my, someone, ROOT, I, ask]","[ensure, Friend, my, someone, ROOT, I, ask]",VB_ensure NNP_Friend PRP$_my NN_someone PRP_I VB_ask ,"[ensure, Friend, my, someone, ROOT, I, ask]","[ensure, Friend, my, someone, ROOT, I, ask]",VB_ensure NNP_Friend PRP$_my NN_someone PRP_I VB_ask ,[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I shall ensure that all those attending council meetings are aware of her speech  although I am sure that most of them are already aware of it.,IPRP shallMD ensureVB thatIN allPDT thoseDT attendingVBG councilJJ meetingsNNS areVBP awareJJ ofIN herPRP$ speechNN althoughIN IPRP amVBP sureJJ thatIN mostJJS ofIN themPRP areVBP alreadyRB awareJJ ofIN itPRP ,"root(ROOT-0, ensure-3) nsubj(ensure-3, I-1) aux(ensure-3, shall-2) mark(aware-11, that-4) advmod(aware-11, all-5) nsubj(aware-11, those-6) acl(those-6, attending-7) compound(meetings-9, council-8) dobj(attending-7, meetings-9) cop(aware-11, are-10) ccomp(ensure-3, aware-11) case(speech-14, of-12) nmod:poss(speech-14, her-13) nmod:of(aware-11, speech-14) punct(aware-11, ,-15) mark(sure-19, although-16) nsubj(sure-19, I-17) cop(sure-19, am-18) advcl(aware-11, sure-19) mark(aware-26, that-20) nsubj(aware-26, most-21) case(them-23, of-22) nmod:of(most-21, them-23) cop(aware-26, are-24) advmod(aware-26, already-25) ccomp(sure-19, aware-26) case(it-28, of-27) nmod:of(aware-26, it-28) punct(ensure-3, .-29)",0,0,0,"root(ROOT, ensre) nsbj(ensre, I) ax(ensre, shall) mark(aware, that) advmod(aware, all) nsbj(aware, those) acl(those, attending) compond(meetings, concil) dobj(attending, meetings) cop(aware, are) ccomp(ensre, aware) case(speech, of) nmod:poss(speech, her) nmod:of(aware, speech) pnct(aware, ,) mark(sre, althogh) nsbj(sre, I) cop(sre, am) advcl(aware, sre) mark(aware, that) nsbj(aware, most) case(them, of) nmod:of(most, them) cop(aware, are) advmod(aware, already) ccomp(sre, aware) case(it, of) nmod:of(aware, it) pnct(ensre, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) mark(JJ,IN) advmod(JJ,PDT) nsbj(JJ,DT) acl(DT,VBG) compond(NNS,JJ) dobj(VBG,NNS) cop(JJ,VBP) ccomp(VB,JJ) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(JJ,NN) pnct(JJ,JJ) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBP) advcl(JJ,JJ) mark(JJ,IN) nsbj(JJ,JJS) case(PRP,IN) nmod:of(JJS,PRP) cop(JJ,VBP) advmod(JJ,RB) ccomp(JJ,JJ) case(PRP,IN) nmod:of(JJ,PRP) pnct(VB,VB)",[ ],"[her, aware, speech]",6,"[her, aware, speech]","[her, aware, speech]",PRP$_her JJ_aware NN_speech ,"[her, aware, speech]","[her, aware, speech]",PRP$_her JJ_aware NN_speech ,"[her, aware, speech]",PRP$_her JJ_aware NN_speech ,"[her, aware, speech]",PRP$_her JJ_aware NN_speech ,-3,0,2,0,0,0,0,0,0,0
I know that he takes a serious interest in this and I know that he will have noted carefully what I said in my opening answer.,IPRP knowVBP thatIN hePRP takesVBZ aDT seriousJJ interestNN inIN thisDT andCC IPRP knowVBP thatIN hePRP willMD haveVB notedVBN carefullyRB whatWP IPRP saidVBD inIN myPRP$ openingNN answerNN ,"root(ROOT-0, know-2) nsubj(know-2, I-1) mark(takes-5, that-3) nsubj(takes-5, he-4) ccomp(know-2, takes-5) det(interest-8, a-6) amod(interest-8, serious-7) dobj(takes-5, interest-8) case(this-10, in-9) nmod:in(interest-8, this-10) cc(takes-5, and-11) nsubj(know-13, I-12) ccomp(know-2, know-13) conj:and(takes-5, know-13) mark(noted-18, that-14) nsubj(noted-18, he-15) aux(noted-18, will-16) aux(noted-18, have-17) ccomp(know-13, noted-18) advmod(noted-18, carefully-19) dobj(said-22, what-20) nsubj(said-22, I-21) ccomp(noted-18, said-22) case(answer-26, in-23) nmod:poss(answer-26, my-24) compound(answer-26, opening-25) nmod:in(said-22, answer-26) punct(know-2, .-27)",0,0,1,"root(ROOT, know) nsbj(know, I) mark(takes, that) nsbj(takes, he) ccomp(know, takes) det(interest, a) amod(interest, serios) dobj(takes, interest) case(this, in) nmod:in(interest, this) cc(takes, and) nsbj(know, I) ccomp(know, know) conj:and(takes, know) mark(noted, that) nsbj(noted, he) ax(noted, will) ax(noted, have) ccomp(know, noted) advmod(noted, careflly) dobj(said, what) nsbj(said, I) ccomp(noted, said) case(answer, in) nmod:poss(answer, my) compond(answer, opening) nmod:in(said, answer) pnct(know, .)","root(,VBP) nsbj(VBP,PRP) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VBP,VBZ) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) case(DT,IN) nmod:in(NN,DT) cc(VBZ,CC) nsbj(VBP,PRP) ccomp(VBP,VBP) conj:and(VBZ,VBP) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,MD) ax(VBN,VB) ccomp(VBP,VBN) advmod(VBN,RB) dobj(VBD,WP) nsbj(VBD,PRP) ccomp(VBN,VBD) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NN) nmod:in(VBD,NN) pnct(VBP,VBP)","[and, noted, he, know, carefully, takes, interest, said, he, know]","[and, noted, he, know, carefully, takes, interest, said, he, know]",6,"[and, he, takes, know, interest]","[and, he, takes, know, interest]",CC_and VBN_noted PRP_he VB_know RB_carefully VBZ_takes NN_interest VBD_said PRP_he VB_know ,"[and, noted, he, know, carefully, takes, interest, said, he, know]","[and, noted, he, know, carefully, takes, interest, said, he, know]",CC_and VBN_noted PRP_he VB_know RB_carefully VBZ_takes NN_interest VBD_said PRP_he VB_know ,"[and, noted, he, know, carefully, takes, interest, said, he, know]",CC_and VBN_noted PRP_he VB_know RB_carefully VBZ_takes NN_interest VBD_said PRP_he VB_know ,"[and, noted, he, know, carefully, takes, interest, said, he, know]",CC_and VBN_noted PRP_he VB_know RB_carefully VBZ_takes NN_interest VBD_said PRP_he VB_know ,-3,0,2,0,0,0,0,0,0,0
When the Foreign Secretary meets the President at the European Council meeting  how will he justify the Government's decision this week to veto the EC directive to provide more child care  parental leave and flexible working arrangements for working parents in this country?,WhenWRB theDT ForeignNNP SecretaryNNP meetsVBZ theDT PresidentNNP atIN theDT EuropeanNNP CouncilNNP meetingVBG howWRB willMD hePRP justifyVB theDT GovernmentNNP 'sPOS decisionNN thisDT weekNN toTO vetoVB theDT ECNNP directiveNN toTO provideVB moreJJR childNN careNN parentalJJ leaveNN andCC flexibleJJ workingVBG arrangementsNNS forIN workingVBG parentsNNS inIN thisDT countryNN ,"root(ROOT-0, justify-17) advmod(meets-5, When-1) det(Secretary-4, the-2) compound(Secretary-4, Foreign-3) nsubj(meets-5, Secretary-4) advcl(justify-17, meets-5) det(President-7, the-6) dobj(meets-5, President-7) case(meeting-12, at-8) det(meeting-12, the-9) amod(meeting-12, European-10) compound(meeting-12, Council-11) nmod:at(meets-5, meeting-12) punct(justify-17, ,-13) advmod(justify-17, how-14) aux(justify-17, will-15) nsubj(justify-17, he-16) det(Government-19, the-18) nmod:poss(decision-21, Government-19) case(Government-19, 's-20) dobj(justify-17, decision-21) det(week-23, this-22) nmod:tmod(justify-17, week-23) mark(veto-25, to-24) advcl(justify-17, veto-25) det(directive-28, the-26) compound(directive-28, EC-27) dobj(veto-25, directive-28) mark(provide-30, to-29) advcl(veto-25, provide-30) amod(care-33, more-31) compound(care-33, child-32) dobj(provide-30, care-33) punct(veto-25, ,-34) amod(leave-36, parental-35) dobj(veto-25, leave-36) cc(leave-36, and-37) amod(arrangements-40, flexible-38) amod(arrangements-40, working-39) dobj(veto-25, arrangements-40) conj:and(leave-36, arrangements-40) case(parents-43, for-41) amod(parents-43, working-42) nmod:for(leave-36, parents-43) case(country-46, in-44) det(country-46, this-45) nmod:in(leave-36, country-46) punct(justify-17, ?-47)",0,0,0,"root(ROOT, jstify) advmod(meets, When) det(Secretary, the) compond(Secretary, Foreign) nsbj(meets, Secretary) advcl(jstify, meets) det(President, the) dobj(meets, President) case(meeting, at) det(meeting, the) amod(meeting, Eropean) compond(meeting, Concil) nmod:at(meets, meeting) pnct(jstify, ,) advmod(jstify, how) ax(jstify, will) nsbj(jstify, he) det(Government, the) nmod:poss(decision, Government) ""case(Government, s)"", dobj(jstify, decision) det(week, this) nmod:tmod(jstify, week) mark(veto, to) advcl(jstify, veto) det(directive, the) compond(directive, EC) dobj(veto, directive) mark(provide, to) advcl(veto, provide) amod(care, more) compond(care, child) dobj(provide, care) pnct(veto, ,) amod(leave, parental) dobj(veto, leave) cc(leave, and) amod(arrangements, flexible) amod(arrangements, working) dobj(veto, arrangements) conj:and(leave, arrangements) case(parents, for) amod(parents, working) nmod:for(leave, parents) case(contry, in) det(contry, this) nmod:in(leave, contry) pnct(jstify, ?)","root(,VB) advmod(VBZ,WRB) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(VB,VBZ) det(NNP,DT) dobj(VBZ,NNP) case(VBG,IN) det(VBG,DT) amod(VBG,NNP) compond(VBG,NNP) nmod:at(VBZ,VBG) pnct(VB,VB) advmod(VB,WRB) ax(VB,MD) nsbj(VB,PRP) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) dobj(VB,NN) det(NN,DT) nmod:tmod(VB,NN) mark(VB,TO) advcl(VB,VB) det(NN,DT) compond(NN,NNP) dobj(VB,NN) mark(VB,TO) advcl(VB,VB) amod(NN,JJR) compond(NN,NN) dobj(VB,NN) pnct(VB,VB) amod(NN,JJ) dobj(VB,NN) cc(NN,CC) amod(NNS,JJ) amod(NNS,VBG) dobj(VB,NNS) conj:and(NN,NNS) case(NNS,IN) amod(NNS,VBG) nmod:for(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NN,NN) pnct(VB,VB)","[decision, justify, When, veto, President, Secretary, he, meets, how, meeting, ROOT, Government, week]","[decision, justify, When, veto, President, Secretary, he, meets, how, meeting, ROOT, Government, week]",10,"[decision, justify, When, President, meets, Secretary, meeting, Government]","[decision, justify, When, President, meets, Secretary, meeting, Government]",NN_decision VB_justify WRB_When VB_veto NNP_President NNP_Secretary PRP_he VBZ_meets WRB_how NN_meeting NNP_Government NN_week ,"[decision, justify, When, veto, President, Secretary, he, meets, how, meeting, ROOT, Government, week]","[decision, justify, When, veto, President, Secretary, he, meets, how, meeting, ROOT, Government, week]",NN_decision VB_justify WRB_When VB_veto NNP_President NNP_Secretary PRP_he VBZ_meets WRB_how NN_meeting NNP_Government NN_week ,"[decision, justify, When, veto, President, Secretary, he, meets, how, meeting, ROOT, Government, week]",NN_decision VB_justify WRB_When VB_veto NNP_President NNP_Secretary PRP_he VBZ_meets WRB_how NN_meeting NNP_Government NN_week ,"[decision, justify, When, veto, President, Secretary, he, meets, how, meeting, ROOT, Government, week]",NN_decision VB_justify WRB_When VB_veto NNP_President NNP_Secretary PRP_he VBZ_meets WRB_how NN_meeting NNP_Government NN_week ,-3,0,2,0,0,0,0,0,0,0
Can my hon. Friend explain why he did not resist signing the television directive  which surely has nothing whatever to do with the creation of a single market?,CanMD myPRP$ honNN FriendNNP explainNN whyWRB hePRP didVBD notRB resistVB signingVBG theDT televisionNN directiveNN whichWDT surelyRB hasVBZ nothingNN whateverWDT toTO doVB withIN theDT creationNN ofIN aDT singleJJ marketNN ,"root(ROOT-0, explain-5) aux(explain-5, Can-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(explain-5, Friend-4) advmod(resist-10, why-6) nsubj(resist-10, he-7) aux(resist-10, did-8) neg(resist-10, not-9) ccomp(explain-5, resist-10) xcomp(resist-10, signing-11) det(directive-14, the-12) compound(directive-14, television-13) dobj(signing-11, directive-14) punct(directive-14, ,-15) nsubj(has-18, which-16) advmod(has-18, surely-17) acl:relcl(directive-14, has-18) dobj(has-18, nothing-19) dep(nothing-19, whatever-20) mark(do-22, to-21) acl(whatever-20, do-22) case(creation-25, with-23) det(creation-25, the-24) nmod:with(do-22, creation-25) case(market-29, of-26) det(market-29, a-27) amod(market-29, single-28) nmod:of(creation-25, market-29) punct(explain-5, ?-30)",0,0,0,"root(ROOT, explain) ax(explain, Can) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(explain, Friend) advmod(resist, why) nsbj(resist, he) ax(resist, did) neg(resist, not) ccomp(explain, resist) xcomp(resist, signing) det(directive, the) compond(directive, television) dobj(signing, directive) pnct(directive, ,) nsbj(has, which) advmod(has, srely) acl:relcl(directive, has) dobj(has, nothing) dep(nothing, whatever) mark(do, to) acl(whatever, do) case(creation, with) det(creation, the) nmod:with(do, creation) case(market, of) det(market, a) amod(market, single) nmod:of(creation, market) pnct(explain, ?)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) advmod(VB,WRB) nsbj(VB,PRP) ax(VB,VBD) neg(VB,RB) ccomp(NN,VB) xcomp(VB,VBG) det(NN,DT) compond(NN,NN) dobj(VBG,NN) pnct(NN,NN) nsbj(VBZ,WDT) advmod(VBZ,RB) acl:relcl(NN,VBZ) dobj(VBZ,NN) dep(NN,WDT) mark(VB,TO) acl(WDT,VB) case(NN,IN) det(NN,DT) nmod:with(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN)","[explain, not, resist, Friend, why, ROOT, my, he, signing]","[explain, not, resist, Friend, why, ROOT, my, he, signing]",10,[ ],[ ],NN_explain RB_not VB_resist NNP_Friend WRB_why PRP$_my PRP_he VBG_signing ,"[explain, not, resist, Friend, why, ROOT, my, he, signing]","[explain, not, resist, Friend, why, ROOT, my, he, signing]",NN_explain RB_not VB_resist NNP_Friend WRB_why PRP$_my PRP_he VBG_signing ,"[explain, not, resist, Friend, why, ROOT, my, he, signing]",NN_explain RB_not VB_resist NNP_Friend WRB_why PRP$_my PRP_he VBG_signing ,"[explain, not, resist, Friend, why, ROOT, my, he, signing]",NN_explain RB_not VB_resist NNP_Friend WRB_why PRP$_my PRP_he VBG_signing ,-3,0,2,2,1,2,0,0,0,2
I am grateful for what the hon. Gentleman said in the opening part of his question.,IPRP amVBP gratefulJJ forIN whatWP theDT honNN GentlemanNNP saidVBD inIN theDT openingJJ partNN ofIN hisPRP$ questionNN ,"root(ROOT-0, grateful-3) nsubj(grateful-3, I-1) cop(grateful-3, am-2) mark(said-9, for-4) dobj(said-9, what-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nsubj(said-9, Gentleman-8) advcl(grateful-3, said-9) case(part-13, in-10) det(part-13, the-11) compound(part-13, opening-12) nmod:in(said-9, part-13) case(question-16, of-14) nmod:poss(question-16, his-15) nmod:of(part-13, question-16) punct(grateful-3, .-17)",0,1,0,"root(ROOT, gratefl) nsbj(gratefl, I) cop(gratefl, am) mark(said, for) dobj(said, what) det(Gentleman, the) compond(Gentleman, hon.) nsbj(said, Gentleman) advcl(gratefl, said) case(part, in) det(part, the) compond(part, opening) nmod:in(said, part) case(qestion, of) nmod:poss(qestion, his) nmod:of(part, qestion) pnct(gratefl, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VBD,IN) dobj(VBD,WP) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) advcl(JJ,VBD) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:in(VBD,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(JJ,JJ)","[said, grateful, Gentleman, what, part]","[his, Gentleman, said, question, grateful, what, part]",8,"[his, Gentleman, said, question, grateful, what, part]","[his, Gentleman, said, question, grateful, what, part]",PRP$_his NNP_Gentleman VBD_said NN_question JJ_grateful WP_what NN_part ,"[his, Gentleman, said, question, grateful, what, part]","[his, Gentleman, said, question, grateful, what, part]",PRP$_his NNP_Gentleman VBD_said NN_question JJ_grateful WP_what NN_part ,"[his, Gentleman, said, question, grateful, what, part]",PRP$_his NNP_Gentleman VBD_said NN_question JJ_grateful WP_what NN_part ,"[his, Gentleman, said, question, grateful, what, part]",PRP$_his NNP_Gentleman VBD_said NN_question JJ_grateful WP_what NN_part ,-3,0,2,1,1,0,2,2,2,2
Does he anticipate having blitzkriegs in those countries and using short range and medium range nuclear weapons on them?,DoesVBZ hePRP anticipateVB havingVBG blitzkriegsNNS inIN thoseDT countriesNNS andCC usingVBG shortJJ rangeNN andCC mediumNN rangeNN nuclearJJ weaponsNNS onIN themPRP ,"root(ROOT-0, anticipate-3) aux(anticipate-3, Does-1) nsubj(anticipate-3, he-2) dobj(anticipate-3, having-4) dobj(having-4, blitzkriegs-5) case(countries-8, in-6) det(countries-8, those-7) nmod:in(blitzkriegs-5, countries-8) cc(having-4, and-9) dobj(anticipate-3, using-10) conj:and(having-4, using-10) amod(range-12, short-11) dobj(using-10, range-12) cc(range-12, and-13) compound(weapons-17, medium-14) compound(weapons-17, range-15) amod(weapons-17, nuclear-16) dobj(using-10, weapons-17) conj:and(range-12, weapons-17) case(them-19, on-18) nmod:on(using-10, them-19) punct(anticipate-3, ?-20)",0,0,1,"root(ROOT, anticipate) ax(anticipate, Does) nsbj(anticipate, he) dobj(anticipate, having) dobj(having, blitzkriegs) case(contries, in) det(contries, those) nmod:in(blitzkriegs, contries) cc(having, and) dobj(anticipate, sing) conj:and(having, sing) amod(range, short) dobj(sing, range) cc(range, and) compond(weapons, medim) compond(weapons, range) amod(weapons, nclear) dobj(sing, weapons) conj:and(range, weapons) case(them, on) nmod:on(sing, them) pnct(anticipate, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) dobj(VB,VBG) dobj(VBG,NNS) case(NNS,IN) det(NNS,DT) nmod:in(NNS,NNS) cc(VBG,CC) dobj(VB,VBG) conj:and(VBG,VBG) amod(NN,JJ) dobj(VBG,NN) cc(NN,CC) compond(NNS,NN) compond(NNS,NN) amod(NNS,JJ) dobj(VBG,NNS) conj:and(NN,NNS) case(PRP,IN) nmod:on(VBG,PRP) pnct(VB,VB)","[anticipate, ROOT, he, having, using]","[anticipate, ROOT, he, having, using]",14,[ ],[ ],VB_anticipate PRP_he VBG_having VBG_using ,"[anticipate, ROOT, he, having, using]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I hope that the right hon. Gentleman will recognise that funding for the Welsh national health service has risen from under £500 million in 1979 to more than £1 500 million today.,IPRP hopeVBP thatIN theDT rightJJ honNN GentlemanNNP willMD recogniseVB thatIN fundingNN forIN theDT WelshNNP nationalJJ healthNN serviceNN hasVBZ risenVBN fromIN underIN £500CD millionCD inIN 1979CD toTO moreRBR thanIN £1$ 500CD millionCD todayNN ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(recognise-9, that-3) det(Gentleman-7, the-4) amod(Gentleman-7, right-5) compound(Gentleman-7, hon.-6) nsubj(recognise-9, Gentleman-7) aux(recognise-9, will-8) ccomp(hope-2, recognise-9) mark(risen-19, that-10) nsubj(risen-19, funding-11) case(service-17, for-12) det(service-17, the-13) compound(service-17, Welsh-14) amod(service-17, national-15) compound(service-17, health-16) nmod:for(funding-11, service-17) aux(risen-19, has-18) ccomp(recognise-9, risen-19) case(million-24, from-20) case(million-24, under-21) compound(million-24, #-22) compound(million-24, 500-23) nmod:under(risen-19, million-24) case(1979-26, in-25) nmod:in(risen-19, 1979-26) case(million-32, to-27) advmod(million-32, more-28) mwe(more-28, than-29) compound(million-32, #-30) compound(million-32, 1,500-31) nmod:to(risen-19, million-32) nmod:tmod(risen-19, today-33) punct(hope-2, .-34)",0,0,0,"root(ROOT, hope) nsbj(hope, I) mark(recognise, that) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(recognise, Gentleman) ax(recognise, will) ccomp(hope, recognise) mark(risen, that) nsbj(risen, fnding) case(service, for) det(service, the) compond(service, Welsh) amod(service, national) compond(service, health) nmod:for(fnding, service) ax(risen, has) ccomp(recognise, risen) case(million, from) case(million, nder) compond(million, #) compond(million, 500) nmod:nder(risen, million) case(1979, in) nmod:in(risen, 1979) case(million, to) advmod(million, more) mwe(more, than) compond(million, #) compond(million, 1,500) nmod:to(risen, million) nmod:tmod(risen, today) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(VBP,VB) mark(VBN,IN) nsbj(VBN,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) amod(NN,JJ) compond(NN,NN) nmod:for(NN,NN) ax(VBN,VBZ) ccomp(VB,VBN) case(CD,IN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:nder(VBN,CD) case(CD,IN) nmod:in(VBN,CD) case(CD,TO) advmod(CD,RBR) mwe(RBR,IN) compond(CD,CD) compond(CD,CD) nmod:to(VBN,CD) nmod:tmod(VBN,NN) pnct(VBP,VBP)","[Gentleman, right, hope, risen, recognise]","[Gentleman, recognise, risen, hope]",16,[ ],[ ],NNP_Gentleman VBP_recognise VBN_risen VBP_hope ,"[Gentleman, recognise, risen, hope]","[Gentleman, recognise, risen, hope]",NNP_Gentleman VBP_recognise VBN_risen VBP_hope ,"[Gentleman, recognise, risen, hope]",NNP_Gentleman VBP_recognise VBN_risen VBP_hope ,"[Gentleman, recognise, risen, hope]",NNP_Gentleman VBP_recognise VBN_risen VBP_hope ,-3,0,2,0,0,0,0,0,0,0
I hope that even the hon. Gentleman will admit that there has been a substantial real terms increase in the amount of resources devoted to the health service in his constituency.,IPRP hopeVBP thatIN evenRB theDT honNN GentlemanNNP willMD admitVB thatIN thereEX hasVBZ beenVBN aDT substantialJJ realJJ termsNNS increaseNN inIN theDT amountNN ofIN resourcesNNS devotedVBN toTO theDT healthNN serviceNN inIN hisPRP$ constituencyNN ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(admit-9, that-3) advmod(Gentleman-7, even-4) det(Gentleman-7, the-5) compound(Gentleman-7, hon.-6) nsubj(admit-9, Gentleman-7) aux(admit-9, will-8) ccomp(hope-2, admit-9) mark(terms-17, that-10) expl(terms-17, there-11) aux(terms-17, has-12) cop(terms-17, been-13) det(terms-17, a-14) amod(terms-17, substantial-15) amod(terms-17, real-16) ccomp(admit-9, terms-17) dep(terms-17, increase-18) case(amount-21, in-19) det(amount-21, the-20) nmod:in(increase-18, amount-21) case(resources-23, of-22) nmod:of(amount-21, resources-23) acl(resources-23, devoted-24) case(service-28, to-25) det(service-28, the-26) compound(service-28, health-27) nmod:to(devoted-24, service-28) case(constituency-31, in-29) nmod:poss(constituency-31, his-30) nmod:in(service-28, constituency-31) punct(hope-2, .-32)",0,0,0,"root(ROOT, hope) nsbj(hope, I) mark(admit, that) advmod(Gentleman, even) det(Gentleman, the) compond(Gentleman, hon.) nsbj(admit, Gentleman) ax(admit, will) ccomp(hope, admit) mark(terms, that) expl(terms, there) ax(terms, has) cop(terms, been) det(terms, a) amod(terms, sbstantial) amod(terms, real) ccomp(admit, terms) dep(terms, increase) case(amont, in) det(amont, the) nmod:in(increase, amont) case(resorces, of) nmod:of(amont, resorces) acl(resorces, devoted) case(service, to) det(service, the) compond(service, health) nmod:to(devoted, service) case(constitency, in) nmod:poss(constitency, his) nmod:in(service, constitency) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,IN) advmod(NNP,RB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(VBP,VB) mark(NNS,IN) expl(NNS,EX) ax(NNS,VBZ) cop(NNS,VBN) det(NNS,DT) amod(NNS,JJ) amod(NNS,JJ) ccomp(VB,NNS) dep(NNS,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NNS,IN) nmod:of(NN,NNS) acl(NNS,VBN) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(VBN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) pnct(VBP,VBP)","[even, Gentleman, hope, terms, admit]","[constituency, admit, his, terms, hope, even, service, Gentleman]",4,"[his, constituency, service]","[his, constituency, service]",NN_constituency NN_admit PRP$_his NNS_terms VBP_hope RB_even NN_service NNP_Gentleman ,"[constituency, admit, his, terms, hope, even, service, Gentleman]","[constituency, admit, his, terms, hope, even, service, Gentleman]",NN_constituency NN_admit PRP$_his NNS_terms VBP_hope RB_even NN_service NNP_Gentleman ,"[constituency, admit, his, terms, hope, even, service, Gentleman]",NN_constituency NN_admit PRP$_his NNS_terms VBP_hope RB_even NN_service NNP_Gentleman ,"[constituency, admit, his, terms, hope, even, service, Gentleman]",NN_constituency NN_admit PRP$_his NNS_terms VBP_hope RB_even NN_service NNP_Gentleman ,-3,0,2,0,0,0,0,0,0,0
In Delyn we recognise the need for the Government to get value for money in terms of the NHS reforms.,InIN DelynNNP wePRP recogniseVBP theDT needNN forIN theDT GovernmentNNP toTO getVB valueNN forIN moneyNN inIN termsNNS ofIN theDT NHSNNP reformsNNS ,"root(ROOT-0, recognise-4) case(Delyn-2, In-1) nmod:in(recognise-4, Delyn-2) nsubj(recognise-4, we-3) det(need-6, the-5) dobj(recognise-4, need-6) mark(get-11, for-7) det(Government-9, the-8) nsubj(get-11, Government-9) mark(get-11, to-10) acl(need-6, get-11) dobj(get-11, value-12) case(money-14, for-13) nmod:for(value-12, money-14) case(terms-16, in-15) nmod:in(get-11, terms-16) case(reforms-20, of-17) det(reforms-20, the-18) compound(reforms-20, NHS-19) nmod:of(terms-16, reforms-20) punct(recognise-4, .-21)",0,0,1,"root(ROOT, recognise) case(Delyn, In) nmod:in(recognise, Delyn) nsbj(recognise, we) det(need, the) dobj(recognise, need) mark(get, for) det(Government, the) nsbj(get, Government) mark(get, to) acl(need, get) dobj(get, vale) case(money, for) nmod:for(vale, money) case(terms, in) nmod:in(get, terms) case(reforms, of) det(reforms, the) compond(reforms, NHS) nmod:of(terms, reforms) pnct(recognise, .)","root(,VBP) case(NNP,IN) nmod:in(VBP,NNP) nsbj(VBP,PRP) det(NN,DT) dobj(VBP,NN) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) mark(VB,TO) acl(NN,VB) dobj(VB,NN) case(NN,IN) nmod:for(NN,NN) case(NNS,IN) nmod:in(VB,NNS) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:of(NNS,NNS) pnct(VBP,VBP)","[get, need, Government, value, terms]","[get, need, Government, value, terms]",7,"[get, need, Government, value, terms]","[get, need, Government, value, terms]",VBP_get NN_need NNP_Government NN_value NNS_terms ,"[get, need, Government, value, terms]","[get, need, Government, value, terms]",VBP_get NN_need NNP_Government NN_value NNS_terms ,"[get, need, Government, value, terms]",VBP_get NN_need NNP_Government NN_value NNS_terms ,"[get, need, Government, value, terms]",VBP_get NN_need NNP_Government NN_value NNS_terms ,-3,0,2,0,0,0,0,0,0,0
I am tempted simply to say yes  but the essence of the latter part of my hon. Friend's statement is correct.,IPRP amVBP temptedVBN simplyRB toTO sayVB yesUH butCC theDT essenceNN ofIN theDT latterJJ partNN ofIN myPRP$ honNN FriendNNP 'sPOS statementNN isVBZ correctJJ ,"root(ROOT-0, tempted-3) nsubjpass(tempted-3, I-1) auxpass(tempted-3, am-2) advmod(tempted-3, simply-4) mark(say-6, to-5) xcomp(tempted-3, say-6) dobj(say-6, yes-7) punct(tempted-3, ,-8) cc(tempted-3, but-9) det(essence-11, the-10) nsubj(correct-23, essence-11) case(part-15, of-12) det(part-15, the-13) amod(part-15, latter-14) nmod:of(essence-11, part-15) case(statement-21, of-16) nmod:poss(Friend-19, my-17) compound(Friend-19, hon.-18) nmod:poss(statement-21, Friend-19) case(Friend-19, 's-20) nmod:of(part-15, statement-21) cop(correct-23, is-22) conj:but(tempted-3, correct-23) punct(tempted-3, .-24)",1,0,0,"root(ROOT, tempted) nsbjpass(tempted, I) axpass(tempted, am) advmod(tempted, simply) mark(say, to) xcomp(tempted, say) dobj(say, yes) pnct(tempted, ,) cc(tempted, bt) det(essence, the) nsbj(correct, essence) case(part, of) det(part, the) amod(part, latter) nmod:of(essence, part) case(statement, of) nmod:poss(Friend, my) compond(Friend, hon.) nmod:poss(statement, Friend) ""case(Friend, s)"", nmod:of(part, statement) cop(correct, is) conj:bt(tempted, correct) pnct(tempted, .)","root(,VBN) nsbjpass(VBN,PRP) axpass(VBN,VBP) advmod(VBN,RB) mark(VB,TO) xcomp(VBN,VB) dobj(VB,UH) pnct(VBN,VBN) cc(VBN,CC) det(NN,DT) nsbj(JJ,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) cop(JJ,VBZ) conj:bt(VBN,JJ) pnct(VBN,VBN)","[part, Friend, statement, my]","[part, Friend, statement, my]",10,"[part, Friend, statement, my]","[part, Friend, statement, my]",NN_part NNP_Friend NN_statement PRP$_my ,"[part, Friend, statement, my]","[part, Friend, statement, my]",NN_part NNP_Friend NN_statement PRP$_my ,"[part, Friend, statement, my]",NN_part NNP_Friend NN_statement PRP$_my ,"[part, Friend, statement, my]",NN_part NNP_Friend NN_statement PRP$_my ,1,1,1,0,0,0,0,0,0,0
I must be frank and admit that he has spotted a lacuna in our organisation which I shall immediately seek to rectify.,IPRP mustMD beVB frankJJ andCC admitNN thatIN hePRP hasVBZ spottedVBN aDT lacunaNN inIN ourPRP$ organisationNN whichWDT IPRP shallMD immediatelyRB seekVB toTO rectifyVB ,"root(ROOT-0, frank-4) nsubj(frank-4, I-1) nsubj(admit-6, I-1) aux(frank-4, must-2) cop(frank-4, be-3) cc(frank-4, and-5) conj:and(frank-4, admit-6) mark(spotted-10, that-7) nsubj(spotted-10, he-8) aux(spotted-10, has-9) ccomp(admit-6, spotted-10) det(lacuna-12, a-11) dobj(spotted-10, lacuna-12) case(organisation-15, in-13) nmod:poss(organisation-15, our-14) nmod:in(lacuna-12, organisation-15) dobj(seek-20, which-16) nsubj(seek-20, I-17) aux(seek-20, shall-18) advmod(seek-20, immediately-19) acl:relcl(organisation-15, seek-20) mark(rectify-22, to-21) xcomp(seek-20, rectify-22) punct(frank-4, .-23)",1,0,1,"root(ROOT, frank) nsbj(frank, I) nsbj(admit, I) ax(frank, mst) cop(frank, be) cc(frank, and) conj:and(frank, admit) mark(spotted, that) nsbj(spotted, he) ax(spotted, has) ccomp(admit, spotted) det(lacna, a) dobj(spotted, lacna) case(organisation, in) nmod:poss(organisation, or) nmod:in(lacna, organisation) dobj(seek, which) nsbj(seek, I) ax(seek, shall) advmod(seek, immediately) acl:relcl(organisation, seek) mark(rectify, to) xcomp(seek, rectify) pnct(frank, .)","root(,JJ) nsbj(JJ,PRP) nsbj(NN,PRP) ax(JJ,MD) cop(JJ,VB) cc(JJ,CC) conj:and(JJ,NN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBZ) ccomp(NN,VBN) det(NN,DT) dobj(VBN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) dobj(VB,WDT) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) acl:relcl(NN,VB) mark(VB,TO) xcomp(VB,VB) pnct(JJ,JJ)","[spotted, he, admit, lacuna]","[spotted, he, admit, lacuna]",6,[ ],[ ],VBN_spotted PRP_he NN_admit NN_lacuna ,"[spotted, he, admit, lacuna]","[spotted, he, admit, lacuna]",VBN_spotted PRP_he NN_admit NN_lacuna ,"[spotted, he, admit, lacuna]",VBN_spotted PRP_he NN_admit NN_lacuna ,"[spotted, he, admit, lacuna]",VBN_spotted PRP_he NN_admit NN_lacuna ,1,1,2,0,0,0,2,2,2,2
We had a tremendous struggle last year on the beef variable premium scheme  but my hon. Friend will know that my right hon. Friend the Minister was highly successful in maintaining that scheme  albeit in a somewhat changed form.,WePRP hadVBD aDT tremendousJJ struggleNN lastJJ yearNN onIN theDT beefNN variableJJ premiumJJ schemeNN butCC myPRP$ honNN FriendNNP willMD knowVB thatIN myPRP$ rightJJ honNN FriendNNP theDT MinisterNNP wasVBD highlyRB successfulJJ inIN maintainingVBG thatIN schemeNN albeitNN inIN aDT somewhatRB changedJJ formNN ,"root(ROOT-0, had-2) nsubj(had-2, We-1) det(struggle-5, a-3) amod(struggle-5, tremendous-4) dobj(had-2, struggle-5) amod(year-7, last-6) nmod:tmod(had-2, year-7) case(scheme-13, on-8) det(scheme-13, the-9) compound(scheme-13, beef-10) amod(scheme-13, variable-11) compound(scheme-13, premium-12) nmod:on(had-2, scheme-13) punct(had-2, ,-14) cc(had-2, but-15) nmod:poss(Friend-18, my-16) compound(Friend-18, hon.-17) nsubj(know-20, Friend-18) aux(know-20, will-19) conj:but(had-2, know-20) mark(successful-30, that-21) nmod:poss(Friend-25, my-22) amod(Friend-25, right-23) compound(Friend-25, hon.-24) nsubj(successful-30, Friend-25) det(Minister-27, the-26) nsubj(successful-30, Minister-27) cop(successful-30, was-28) advmod(successful-30, highly-29) ccomp(know-20, successful-30) mark(maintaining-32, in-31) advcl(successful-30, maintaining-32) det(scheme-34, that-33) dobj(maintaining-32, scheme-34) punct(know-20, ,-35) case(form-41, albeit-36) case(form-41, in-37) det(form-41, a-38) advmod(changed-40, somewhat-39) amod(form-41, changed-40) nmod:in(know-20, form-41) punct(had-2, .-42)",1,0,0,"root(ROOT, had) nsbj(had, We) det(strggle, a) amod(strggle, tremendos) dobj(had, strggle) amod(year, last) nmod:tmod(had, year) case(scheme, on) det(scheme, the) compond(scheme, beef) amod(scheme, variable) compond(scheme, premim) nmod:on(had, scheme) pnct(had, ,) cc(had, bt) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(know, Friend) ax(know, will) conj:bt(had, know) mark(sccessfl, that) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(sccessfl, Friend) det(Minister, the) nsbj(sccessfl, Minister) cop(sccessfl, was) advmod(sccessfl, highly) ccomp(know, sccessfl) mark(maintaining, in) advcl(sccessfl, maintaining) det(scheme, that) dobj(maintaining, scheme) pnct(know, ,) case(form, albeit) case(form, in) det(form, a) advmod(changed, somewhat) amod(form, changed) nmod:in(know, form) pnct(had, .)","root(,VBD) nsbj(VBD,PRP) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) amod(NN,JJ) nmod:tmod(VBD,NN) case(NN,IN) det(NN,DT) compond(NN,NN) amod(NN,JJ) compond(NN,JJ) nmod:on(VBD,NN) pnct(VBD,VBD) cc(VBD,CC) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) conj:bt(VBD,VB) mark(JJ,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(JJ,NNP) det(NNP,DT) nsbj(JJ,NNP) cop(JJ,VBD) advmod(JJ,RB) ccomp(VB,JJ) mark(VBG,IN) advcl(JJ,VBG) det(NN,IN) dobj(VBG,NN) pnct(VB,VB) case(NN,NN) case(NN,IN) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) nmod:in(VB,NN) pnct(VBD,VBD)","[highly, Friend, Minister, form, Friend, know, my, maintaining, successful, right, my]","[highly, Friend, Minister, form, Friend, know, my, maintaining, successful, my]",4,"[highly, my, successful, maintaining, Minister, Friend, know]",[ ],RB_highly NNP_Friend NNP_Minister NN_form NNP_Friend VB_know PRP$_my VBG_maintaining JJ_successful PRP$_my ,"[highly, Friend, Minister, form, Friend, know, my, maintaining, successful, my]","[highly, Friend, Minister, form, Friend, know, my, maintaining, successful, my]",RB_highly NNP_Friend NNP_Minister NN_form NNP_Friend VB_know PRP$_my VBG_maintaining JJ_successful PRP$_my ,"[highly, Friend, Minister, form, Friend, know, my, maintaining, successful, my]",RB_highly NNP_Friend NNP_Minister NN_form NNP_Friend VB_know PRP$_my VBG_maintaining JJ_successful PRP$_my ,"[highly, Friend, Minister, form, Friend, know, my, maintaining, successful, my]",RB_highly NNP_Friend NNP_Minister NN_form NNP_Friend VB_know PRP$_my VBG_maintaining JJ_successful PRP$_my ,2,1,1,1,1,1,2,0,1,1
In view of the speech of the president of the National Farmers Union on Tuesday  when he claimed that every success in agriculture  including the retention of the beef variable premium scheme  was due to the union and every failure was due to the Minister of Agriculture  Fisheries and Food  would my hon. Friend care to put the record straight?,InIN viewNN ofIN theDT speechNN ofIN theDT presidentNN ofIN theDT NationalNNP FarmersNNP UnionNNP onIN TuesdayNNP whenWRB hePRP claimedVBD thatIN everyDT successNN inIN agricultureNN includingVBG theDT retentionNN ofIN theDT beefNN variableJJ premiumNN schemeNN wasVBD dueJJ toTO theDT unionNN andCC everyDT failureNN wasVBD dueJJ toTO theDT MinisterNNP ofIN AgricultureNNP FisheriesNNP andCC FoodNNP wouldMD myPRP$ honNN FriendNNP careNN toTO putVB theDT recordNN straightNN ,"root(ROOT-0, view-2) case(view-2, In-1) case(speech-5, of-3) det(speech-5, the-4) nmod:of(view-2, speech-5) case(president-8, of-6) det(president-8, the-7) nmod:of(speech-5, president-8) case(Union-13, of-9) det(Union-13, the-10) compound(Union-13, National-11) compound(Union-13, Farmers-12) nmod:of(president-8, Union-13) case(Tuesday-15, on-14) nmod:on(view-2, Tuesday-15) punct(view-2, ,-16) advmod(claimed-19, when-17) nsubj(claimed-19, he-18) advcl(,-16, claimed-19) mark(due-37, that-20) det(success-22, every-21) nsubj(due-37, success-22) case(agriculture-24, in-23) nmod:in(success-22, agriculture-24) punct(success-22, ,-25) case(retention-28, including-26) det(retention-28, the-27) nmod:including(success-22, retention-28) case(scheme-34, of-29) det(scheme-34, the-30) compound(scheme-34, beef-31) amod(scheme-34, variable-32) compound(scheme-34, premium-33) nmod:of(retention-28, scheme-34) punct(success-22, ,-35) cop(due-37, was-36) csubj(due-45, due-37) case(union-40, to-38) det(union-40, the-39) nmod:to(due-37, union-40) cc(union-40, and-41) det(failure-43, every-42) nmod:to(due-37, failure-43) conj:and(union-40, failure-43) cop(due-45, was-44) ccomp(claimed-19, due-45) case(Minister-48, to-46) det(Minister-48, the-47) nmod:to(due-45, Minister-48) case(Agriculture-50, of-49) nmod:of(Minister-48, Agriculture-50) punct(Agriculture-50, ,-51) nmod:of(Minister-48, Fisheries-52) conj:and(Agriculture-50, Fisheries-52) cc(Agriculture-50, and-53) nmod:of(Minister-48, Food-54) conj:and(Agriculture-50, Food-54) punct(claimed-19, ,-55) root(,-55, would-56) nmod:poss(care-60, my-57) compound(care-60, hon.-58) compound(care-60, Friend-59) dobj(would-56, care-60) mark(put-62, to-61) acl(care-60, put-62) det(record-64, the-63) dobj(put-62, record-64) advmod(put-62, straight-65) punct(would-56, ?-66)",1,0,0,"root(ROOT, view) case(view, In) case(speech, of) det(speech, the) nmod:of(view, speech) case(president, of) det(president, the) nmod:of(speech, president) case(Union, of) det(Union, the) compond(Union, National) compond(Union, Farmers) nmod:of(president, Union) case(Tesday, on) nmod:on(view, Tesday) pnct(view, ,) advmod(claimed, when) nsbj(claimed, he) advcl(,, claimed) mark(de, that) det(sccess, every) nsbj(de, sccess) case(agricltre, in) nmod:in(sccess, agricltre) pnct(sccess, ,) case(retention, inclding) det(retention, the) nmod:inclding(sccess, retention) case(scheme, of) det(scheme, the) compond(scheme, beef) amod(scheme, variable) compond(scheme, premim) nmod:of(retention, scheme) pnct(sccess, ,) cop(de, was) csbj(de, de) case(nion, to) det(nion, the) nmod:to(de, nion) cc(nion, and) det(failre, every) nmod:to(de, failre) conj:and(nion, failre) cop(de, was) ccomp(claimed, de) case(Minister, to) det(Minister, the) nmod:to(de, Minister) case(Agricltre, of) nmod:of(Minister, Agricltre) pnct(Agricltre, ,) nmod:of(Minister, Fisheries) conj:and(Agricltre, Fisheries) cc(Agricltre, and) nmod:of(Minister, Food) conj:and(Agricltre, Food) pnct(claimed, ,) root(,, wold) nmod:poss(care, my) compond(care, hon.) compond(care, Friend) dobj(wold, care) mark(pt, to) acl(care, pt) det(record, the) dobj(pt, record) advmod(pt, straight) pnct(wold, ?)","root(,NN) case(NN,IN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) nmod:on(NN,NNP) pnct(NN,NN) advmod(VBD,WRB) nsbj(VBD,PRP) advcl(PRPPRPVBD) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) case(NN,IN) nmod:in(NN,NN) pnct(NN,NN) case(NN,VBG) det(NN,DT) nmod:inclding(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) pnct(NN,NN) cop(JJ,VBD) csbj(JJ,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) cc(NN,CC) det(NN,DT) nmod:to(JJ,NN) conj:and(NN,NN) cop(JJ,VBD) ccomp(VBD,JJ) case(NNP,TO) det(NNP,DT) nmod:to(JJ,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NNP,NNP) nmod:of(NNP,NNP) conj:and(NNP,NNP) cc(NNP,CC) nmod:of(NNP,NNP) conj:and(NNP,NNP) pnct(VBD,VBD) root(VBDVBDMD) nmod:poss(NN,PRP$) compond(NN,NN) compond(NN,NNP) dobj(MD,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) advmod(VB,NN) pnct(MD,MD)","[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]","[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]",11,"[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]","[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]",PRP_he PRP$_my JJ_due JJ_due NNP_Minister NNP_Fisheries NN_care VBN_put MD_would NNP_Agriculture NNP_Food VBN_claimed WRB_when CC_and ,"[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]","[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]",PRP_he PRP$_my JJ_due JJ_due NNP_Minister NNP_Fisheries NN_care VBN_put MD_would NNP_Agriculture NNP_Food VBN_claimed WRB_when CC_and ,"[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]",PRP_he PRP$_my JJ_due JJ_due NNP_Minister NNP_Fisheries NN_care VBN_put MD_would NNP_Agriculture NNP_Food VBN_claimed WRB_when CC_and ,"[he,  , my, due, due, Minister, Fisheries, care, put, would, Agriculture, Food, claimed, when, and]",PRP_he PRP$_my JJ_due JJ_due NNP_Minister NNP_Fisheries NN_care VBN_put MD_would NNP_Agriculture NNP_Food VBN_claimed WRB_when CC_and ,3,2,2,0,0,0,0,0,0,0
I have already said that Her Majesty's Government shared the view expressed in the hon. Gentleman's latter question.,IPRP haveVBP alreadyRB saidVBD thatIN HerNNP MajestyNNP 'sPOS GovernmentNNP sharedVBD theDT viewNN expressedVBN inIN theDT honNN GentlemanNNP 'sPOS latterJJ questionNN ,"root(ROOT-0, said-4) nsubj(said-4, I-1) aux(said-4, have-2) advmod(said-4, already-3) mark(shared-10, that-5) nmod:poss(Government-9, Her-6) nmod:poss(Government-9, Majesty-7) case(Majesty-7, 's-8) nsubj(shared-10, Government-9) ccomp(said-4, shared-10) det(view-12, the-11) dobj(shared-10, view-12) acl(view-12, expressed-13) case(question-20, in-14) det(Gentleman-17, the-15) compound(Gentleman-17, hon.-16) nmod:poss(question-20, Gentleman-17) case(Gentleman-17, 's-18) amod(question-20, latter-19) nmod:in(expressed-13, question-20) punct(said-4, .-21)",1,1,0,"root(ROOT, said) nsbj(said, I) ax(said, have) advmod(said, already) mark(shared, that) nmod:poss(Government, Her) nmod:poss(Government, Majesty) ""case(Majesty, s)"", nsbj(shared, Government) ccomp(said, shared) det(view, the) dobj(shared, view) acl(view, expressed) case(qestion, in) det(Gentleman, the) compond(Gentleman, hon.) nmod:poss(qestion, Gentleman) ""case(Gentleman, s)"", amod(qestion, latter) nmod:in(expressed, qestion) pnct(said, .)","root(,VBD) nsbj(VBD,PRP) ax(VBD,VBP) advmod(VBD,RB) mark(VBD,IN) nmod:poss(NNP,NNP) nmod:poss(NNP,NNP) case(NNP,POS) nsbj(VBD,NNP) ccomp(VBD,VBD) det(NN,DT) dobj(VBD,NN) acl(NN,VBN) case(NN,IN) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) nmod:in(VBN,NN) pnct(VBD,VBD)","[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]","[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]",8,"[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]","[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]",NN_question NNP_Government JJ_latter VBD_shared NNP_Majesty PRP$_Her VBN_expressed NN_view VBD_said NNP_Gentleman ,"[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]","[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]",NN_question NNP_Government JJ_latter VBD_shared NNP_Majesty PRP$_Her VBN_expressed NN_view VBD_said NNP_Gentleman ,"[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]",NN_question NNP_Government JJ_latter VBD_shared NNP_Majesty PRP$_Her VBN_expressed NN_view VBD_said NNP_Gentleman ,"[question, Government, latter, shared, Majesty, Her, expressed, view, said, Gentleman]",NN_question NNP_Government JJ_latter VBD_shared NNP_Majesty PRP$_Her VBN_expressed NN_view VBD_said NNP_Gentleman ,2,1,1,1,1,1,1,1,1,1
Is he aware that the Prime Minister herself  in this week's issue of Janes Defence Weekly  rightly pointed out that a deterrent based on cruise would be much more expensive than Trident and would come into service much too late to be of any value?,IsVBZ hePRP awareJJ thatIN theDT PrimeNNP MinisterNNP herselfPRP inIN thisDT weekNN 'sPOS issueNN ofIN JanesNNP DefenceNNP WeeklyNNP rightlyRB pointedVBD outRP thatIN aDT deterrentNN basedVBN onIN cruiseNN wouldMD beVB muchRB moreRBR expensiveJJ thanIN TridentNN andCC wouldMD comeVB intoIN serviceNN muchRB tooRB lateJJ toTO beVB ofIN anyDT valueNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) mark(herself-8, that-4) det(Minister-7, the-5) compound(Minister-7, Prime-6) nsubj(herself-8, Minister-7) ccomp(aware-3, herself-8) punct(herself-8, ,-9) case(issue-14, in-10) det(week-12, this-11) nmod:poss(issue-14, week-12) case(week-12, 's-13) nmod:in(herself-8, issue-14) case(Weekly-18, of-15) compound(Weekly-18, Janes-16) compound(Weekly-18, Defence-17) nmod:of(issue-14, Weekly-18) punct(herself-8, ,-19) advmod(pointed-21, rightly-20) dep(herself-8, pointed-21) compound:prt(pointed-21, out-22) mark(expensive-33, that-23) det(deterrent-25, a-24) nsubj(expensive-33, deterrent-25) acl(deterrent-25, based-26) case(cruise-28, on-27) nmod:on(based-26, cruise-28) aux(expensive-33, would-29) cop(expensive-33, be-30) advmod(expensive-33, much-31) advmod(expensive-33, more-32) ccomp(pointed-21, expensive-33) case(Trident-35, than-34) nmod:than(expensive-33, Trident-35) cc(pointed-21, and-36) aux(come-38, would-37) dep(herself-8, come-38) conj:and(pointed-21, come-38) case(service-40, into-39) nmod:into(come-38, service-40) advmod(late-43, much-41) advmod(late-43, too-42) advmod(value-48, late-43) mark(value-48, to-44) cop(value-48, be-45) case(value-48, of-46) det(value-48, any-47) xcomp(come-38, value-48) punct(aware-3, ?-49)",1,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) mark(herself, that) det(Minister, the) compond(Minister, Prime) nsbj(herself, Minister) ccomp(aware, herself) pnct(herself, ,) case(isse, in) det(week, this) nmod:poss(isse, week) ""case(week, s)"", nmod:in(herself, isse) case(Weekly, of) compond(Weekly, Janes) compond(Weekly, Defence) nmod:of(isse, Weekly) pnct(herself, ,) advmod(pointed, rightly) dep(herself, pointed) compond:prt(pointed, ot) mark(expensive, that) det(deterrent, a) nsbj(expensive, deterrent) acl(deterrent, based) case(crise, on) nmod:on(based, crise) ax(expensive, wold) cop(expensive, be) advmod(expensive, mch) advmod(expensive, more) ccomp(pointed, expensive) case(Trident, than) nmod:than(expensive, Trident) cc(pointed, and) ax(come, wold) dep(herself, come) conj:and(pointed, come) case(service, into) nmod:into(come, service) advmod(late, mch) advmod(late, too) advmod(vale, late) mark(vale, to) cop(vale, be) case(vale, of) det(vale, any) xcomp(come, vale) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) mark(PRP,IN) det(NNP,DT) compond(NNP,NNP) nsbj(PRP,NNP) ccomp(JJ,PRP) pnct(PRP,PRP) case(NN,IN) det(NN,DT) nmod:poss(NN,NN) case(NN,POS) nmod:in(PRP,NN) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:of(NN,NNP) pnct(PRP,PRP) advmod(VBD,RB) dep(PRP,VBD) compond:prt(VBD,RP) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) acl(NN,VBN) case(NN,IN) nmod:on(VBN,NN) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) advmod(JJ,RBR) ccomp(VBD,JJ) case(NN,IN) nmod:than(JJ,NN) cc(VBD,CC) ax(VB,MD) dep(PRP,VB) conj:and(VBD,VB) case(NN,IN) nmod:into(VB,NN) advmod(JJ,RB) advmod(JJ,RB) advmod(NN,JJ) mark(NN,TO) cop(NN,VB) case(NN,IN) det(NN,DT) xcomp(VB,NN) pnct(JJ,JJ)","[herself, come, aware, Minister, issue, he, ROOT, pointed]","[herself, come, aware, Minister, issue, he, ROOT, pointed]",13,"[herself, come, aware, Minister, issue, he, ROOT, pointed]","[Minister, herself, pointed, come, aware, issue]",PRP_herself NN_come JJ_aware NNP_Minister NN_issue PRP_he VBD_pointed ,"[herself, come, aware, Minister, issue, he, ROOT, pointed]","[herself, come, aware, Minister, issue, he, ROOT, pointed]",PRP_herself NN_come JJ_aware NNP_Minister NN_issue PRP_he VBD_pointed ,"[herself, come, aware, Minister, issue, he, ROOT, pointed]",PRP_herself NN_come JJ_aware NNP_Minister NN_issue PRP_he VBD_pointed ,[ ],[ ],2,1,2,2,1,2,2,2,2,2
Will my hon. Friend use his influence to ensure as Scotch whisky is one of the most successful  industries in Scotland that the Japanese,WillMD myPRP$ honNN FriendNNP useNN hisPRP$ influenceNN toTO ensureVB asIN ScotchNNP whiskyNN isVBZ oneCD ofIN theDT mostRBS successfulJJ industriesNNS inIN ScotlandNNP thatIN theDT JapaneseJJ ,"root(ROOT-0, use-5) aux(use-5, Will-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(use-5, Friend-4) nmod:poss(influence-7, his-6) dobj(use-5, influence-7) mark(ensure-9, to-8) advcl(use-5, ensure-9) mark(one-14, as-10) compound(whisky-12, Scotch-11) nsubj(one-14, whisky-12) cop(one-14, is-13) advcl(ensure-9, one-14) case(industries-19, of-15) det(industries-19, the-16) advmod(successful-18, most-17) amod(industries-19, successful-18) nmod:of(one-14, industries-19) case(Scotland-21, in-20) nmod:in(industries-19, Scotland-21) det(Japanese-24, that-22) det(Japanese-24, the-23) dep(industries-19, Japanese-24)",1,0,0,"root(ROOT, se) ax(se, Will) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(se, Friend) nmod:poss(inflence, his) dobj(se, inflence) mark(ensre, to) advcl(se, ensre) mark(one, as) compond(whisky, Scotch) nsbj(one, whisky) cop(one, is) advcl(ensre, one) case(indstries, of) det(indstries, the) advmod(sccessfl, most) amod(indstries, sccessfl) nmod:of(one, indstries) case(Scotland, in) nmod:in(indstries, Scotland) det(Japanese, that) det(Japanese, the) dep(indstries, Japanese)","root(,NN) ax(NN,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) nmod:poss(NN,PRP$) dobj(NN,NN) mark(VB,TO) advcl(NN,VB) mark(CD,IN) compond(NN,NNP) nsbj(CD,NN) cop(CD,VBZ) advcl(VB,CD) case(NNS,IN) det(NNS,DT) advmod(JJ,RBS) amod(NNS,JJ) nmod:of(CD,NNS) case(NNP,IN) nmod:in(NNS,NNP) det(JJ,IN) det(JJ,DT) dep(NNS,JJ)","[ensure, Friend, ROOT, use, my, influence]","[ensure, Friend, his, ROOT, use, my, influence]",11,"[influence, his, use]","[influence, his, use]",VB_ensure NNP_Friend PRP$_his NN_use PRP$_my NN_influence ,"[ensure, Friend, his, ROOT, use, my, influence]","[ensure, Friend, his, ROOT, use, my, influence]",VB_ensure NNP_Friend PRP$_his NN_use PRP$_my NN_influence ,"[ensure, Friend, his, ROOT, use, my, influence]",VB_ensure NNP_Friend PRP$_his NN_use PRP$_my NN_influence ,"[ensure, Friend, his, ROOT, use, my, influence]",VB_ensure NNP_Friend PRP$_his NN_use PRP$_my NN_influence ,1,1,1,0,0,0,0,0,0,0
My hon. and learned Friend puts his question in his own inimitable way.,MyPRP$ honNN andCC learnedVBD FriendNNP putsVBZ hisPRP$ questionNN inIN hisPRP$ ownJJ inimitableJJ wayNN ,"root(ROOT-0, hon.-2) nmod:poss(hon.-2, My-1) cc(hon.-2, and-3) dep(puts-6, learned-4) nsubj(puts-6, Friend-5) conj:and(hon.-2, puts-6) nmod:poss(question-8, his-7) dobj(puts-6, question-8) case(way-13, in-9) nmod:poss(way-13, his-10) amod(way-13, own-11) amod(way-13, inimitable-12) nmod:in(hon.-2, way-13) punct(hon.-2, .-14)",1,1,0,"root(ROOT, hon.) nmod:poss(hon., My) cc(hon., and) dep(pts, learned) nsbj(pts, Friend) conj:and(hon., pts) nmod:poss(qestion, his) dobj(pts, qestion) case(way, in) nmod:poss(way, his) amod(way, own) amod(way, inimitable) nmod:in(hon., way) pnct(hon., .)","root(,) nmod:poss(,PRP$) cc(PRP$,CC) dep(VBZ,VBD) nsbj(VBZ,NNP) conj:and(NNP,VBZ) nmod:poss(NN,PRP$) dobj(VBZ,NN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) amod(NN,JJ) nmod:in(JJ,NN) pnct(NN,NN)","[puts, Friend, learned, question]","[way, puts, inimitable, question, Friend, learned, his, his, hon., own]",14,"[way, puts, inimitable, question, Friend, learned, his, his, hon., own]","[way, puts, inimitable, question, Friend, learned, his, his, hon., own]",NN_way VBZ_puts JJ_inimitable NN_question NNP_Friend VBD_learned PRP$_his PRP$_his JJ_own ,"[way, puts, inimitable, question, Friend, learned, his, his, hon., own]","[way, puts, inimitable, question, Friend, learned, his, his, hon., own]",NN_way VBZ_puts JJ_inimitable NN_question NNP_Friend VBD_learned PRP$_his PRP$_his JJ_own ,"[way, puts, inimitable, question, Friend, learned, his, his, hon., own]",NN_way VBZ_puts JJ_inimitable NN_question NNP_Friend VBD_learned PRP$_his PRP$_his JJ_own ,"[way, puts, inimitable, question, Friend, learned, his, his, hon., own]",NN_way VBZ_puts JJ_inimitable NN_question NNP_Friend VBD_learned PRP$_his PRP$_his JJ_own ,1,2,2,0,0,0,0,0,0,0
I know of Chancellor Kohl's pragmatic approach to the Community  which he expressed quite fully in his speech yesterday.,IPRP knowVBP ofIN ChancellorNNP KohlNNP 'sPOS pragmaticJJ approachNN toTO theDT CommunityNNP whichWDT hePRP expressedVBD quiteRB fullyRB inIN hisPRP$ speechNN yesterdayNN ,"root(ROOT-0, know-2) nsubj(know-2, I-1) case(approach-8, of-3) compound(Kohl-5, Chancellor-4) nmod:poss(approach-8, Kohl-5) case(Kohl-5, 's-6) amod(approach-8, pragmatic-7) nmod:of(know-2, approach-8) case(Community-11, to-9) det(Community-11, the-10) nmod:to(approach-8, Community-11) punct(Community-11, ,-12) dobj(expressed-15, which-13) nsubj(expressed-15, he-14) acl:relcl(Community-11, expressed-15) advmod(fully-17, quite-16) advmod(expressed-15, fully-17) case(speech-20, in-18) nmod:poss(speech-20, his-19) nmod:in(expressed-15, speech-20) nmod:tmod(expressed-15, yesterday-21) punct(know-2, .-22)",0,0,0,"root(ROOT, know) nsbj(know, I) case(approach, of) compond(Kohl, Chancellor) nmod:poss(approach, Kohl) ""case(Kohl, s)"", amod(approach, pragmatic) nmod:of(know, approach) case(Commnity, to) det(Commnity, the) nmod:to(approach, Commnity) pnct(Commnity, ,) dobj(expressed, which) nsbj(expressed, he) acl:relcl(Commnity, expressed) advmod(flly, qite) advmod(expressed, flly) case(speech, in) nmod:poss(speech, his) nmod:in(expressed, speech) nmod:tmod(expressed, yesterday) pnct(know, .)","root(,VBP) nsbj(VBP,PRP) case(NN,IN) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) nmod:of(VBP,NN) case(NNP,TO) det(NNP,DT) nmod:to(NN,NNP) pnct(NNP,NNP) dobj(VBD,WDT) nsbj(VBD,PRP) acl:relcl(NNP,VBD) advmod(RB,RB) advmod(VBD,RB) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(VBD,NN) nmod:tmod(VBD,NN) pnct(VBP,VBP)","[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which]","[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which, his]",11,"[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which, his]","[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which, his]",NN_approach RB_fully NNP_Kohl PRP_he NN_yesterday NN_speech VBN_expressed NNP_Community WDT_which PRP$_his ,"[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which, his]","[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which, his]",NN_approach RB_fully NNP_Kohl PRP_he NN_yesterday NN_speech VBN_expressed NNP_Community WDT_which PRP$_his ,"[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which, his]",NN_approach RB_fully NNP_Kohl PRP_he NN_yesterday NN_speech VBN_expressed NNP_Community WDT_which PRP$_his ,"[approach, fully, Kohl, he, yesterday, speech, expressed, Community, which, his]",NN_approach RB_fully NNP_Kohl PRP_he NN_yesterday NN_speech VBN_expressed NNP_Community WDT_which PRP$_his ,0,1,2,0,0,0,0,0,0,0
In her Bruges speech  which the right hon. Lady has commended  the Prime Minister stated her opposition to  the abolition of frontier controls  the creation of the European super state  the centralisation of power in Brussels  with decisions taken by an appointed bureacracy and the concentration of power at the centre of a European conglomerate  and said that Britain's parliamentary powers must be preserved.,InIN herPRP$ BrugesNNP speechNN whichWDT theDT rightNN honNN LadyNNP hasVBZ commendedVBN theDT PrimeNNP MinisterNNP statedVBD herPRP$ oppositionNN toTO theDT abolitionNN ofIN frontierNN controlsVBZ theDT creationNN ofIN theDT EuropeanNNP superNN stateNN theDT centralisationNN ofIN powerNN inIN BrusselsNNP withIN decisionsNNS takenVBN byIN anDT appointedVBN bureacracyNN andCC theDT concentrationNN ofIN powerNN atIN theDT centreNN ofIN aDT EuropeanJJ conglomerateNN andCC saidVBD thatIN BritainNNP 'sPOS parliamentaryJJ powersNNS mustMD beVB preservedVBN ,"root(ROOT-0, stated-17) case(speech-4, In-1) nmod:poss(speech-4, her-2) compound(speech-4, Bruges-3) nmod:in(stated-17, speech-4) punct(speech-4, ,-5) dobj(commended-12, which-6) det(Lady-10, the-7) amod(Lady-10, right-8) compound(Lady-10, hon.-9) nsubj(commended-12, Lady-10) aux(commended-12, has-11) acl:relcl(speech-4, commended-12) punct(stated-17, ,-13) det(Minister-16, the-14) compound(Minister-16, Prime-15) nsubj(stated-17, Minister-16) nmod:poss(opposition-19, her-18) dobj(stated-17, opposition-19) dep(opposition-19, to-20) punct(to-20, ,-21) det(abolition-23, the-22) root(,-21, abolition-23) case(controls-26, of-24) compound(controls-26, frontier-25) nmod:of(abolition-23, controls-26) punct(abolition-23, ,-27) det(creation-29, the-28) appos(abolition-23, creation-29) case(state-34, of-30) det(state-34, the-31) amod(state-34, European-32) amod(state-34, super-33) nmod:of(creation-29, state-34) punct(abolition-23, ,-35) det(centralisation-37, the-36) appos(abolition-23, centralisation-37) case(power-39, of-38) nmod:of(centralisation-37, power-39) case(Brussels-41, in-40) nmod:in(power-39, Brussels-41) punct(abolition-23, ,-42) case(decisions-44, with-43) nmod:with(abolition-23, decisions-44) acl(decisions-44, taken-45) case(bureacracy-49, by-46) det(bureacracy-49, an-47) amod(bureacracy-49, appointed-48) nmod:by(taken-45, bureacracy-49) cc(bureacracy-49, and-50) det(concentration-52, the-51) nmod:by(taken-45, concentration-52) conj:and(bureacracy-49, concentration-52) case(power-54, of-53) nmod:of(concentration-52, power-54) case(centre-57, at-55) det(centre-57, the-56) nmod:at(taken-45, centre-57) case(conglomerate-61, of-58) det(conglomerate-61, a-59) amod(conglomerate-61, European-60) nmod:of(centre-57, conglomerate-61) punct(abolition-23, ,-62) cc(abolition-23, and-63) root(,-21, said-64) conj:and(abolition-23, said-64) mark(preserved-72, that-65) nmod:poss(powers-69, Britain-66) case(Britain-66, 's-67) amod(powers-69, parliamentary-68) nsubjpass(preserved-72, powers-69) aux(preserved-72, must-70) auxpass(preserved-72, be-71) ccomp(said-64, preserved-72) punct(abolition-23, .-73)",1,0,0,"root(ROOT, stated) case(speech, In) nmod:poss(speech, her) compond(speech, Brges) nmod:in(stated, speech) pnct(speech, ,) dobj(commended, which) det(Lady, the) amod(Lady, right) compond(Lady, hon.) nsbj(commended, Lady) ax(commended, has) acl:relcl(speech, commended) pnct(stated, ,) det(Minister, the) compond(Minister, Prime) nsbj(stated, Minister) nmod:poss(opposition, her) dobj(stated, opposition) dep(opposition, to) pnct(to, ,) det(abolition, the) root(,, abolition) case(controls, of) compond(controls, frontier) nmod:of(abolition, controls) pnct(abolition, ,) det(creation, the) appos(abolition, creation) case(state, of) det(state, the) amod(state, Eropean) amod(state, sper) nmod:of(creation, state) pnct(abolition, ,) det(centralisation, the) appos(abolition, centralisation) case(power, of) nmod:of(centralisation, power) case(Brssels, in) nmod:in(power, Brssels) pnct(abolition, ,) case(decisions, with) nmod:with(abolition, decisions) acl(decisions, taken) case(breacracy, by) det(breacracy, an) amod(breacracy, appointed) nmod:by(taken, breacracy) cc(breacracy, and) det(concentration, the) nmod:by(taken, concentration) conj:and(breacracy, concentration) case(power, of) nmod:of(concentration, power) case(centre, at) det(centre, the) nmod:at(taken, centre) case(conglomerate, of) det(conglomerate, a) amod(conglomerate, Eropean) nmod:of(centre, conglomerate) pnct(abolition, ,) cc(abolition, and) root(,, said) conj:and(abolition, said) mark(preserved, that) nmod:poss(powers, Britain) ""case(Britain, s)"", amod(powers, parliamentary) nsbjpass(preserved, powers) ax(preserved, mst) axpass(preserved, be) ccomp(said, preserved) pnct(abolition, .)","root(,VBD) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NNP) nmod:in(VBD,NN) pnct(NN,NN) dobj(VBN,WDT) det(NNP,DT) amod(NNP,NN) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) acl:relcl(NN,VBN) pnct(VBD,VBD) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) nmod:poss(NN,PRP$) dobj(VBD,NN) dep(NN,TO) pnct(TO,TO) det(NN,DT) root(DTDTNN) case(VBZ,IN) compond(VBZ,NN) nmod:of(NN,VBZ) pnct(NN,NN) det(NN,DT) appos(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,NN) nmod:of(NN,NN) pnct(NN,NN) det(NN,DT) appos(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(NN,NN) case(NNS,IN) nmod:with(NN,NNS) acl(NNS,VBN) case(NN,IN) det(NN,DT) amod(NN,VBN) nmod:by(VBN,NN) cc(NN,CC) det(NN,DT) nmod:by(VBN,NN) conj:and(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:at(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN) cc(NN,CC) root(CCCCVBD) conj:and(NN,VBD) mark(VBN,IN) nmod:poss(NNS,NNP) case(NNP,POS) amod(NNS,JJ) nsbjpass(VBN,NNS) ax(VBN,MD) axpass(VBN,VB) ccomp(VBD,VBN) pnct(NN,NN)","[Minister, right, commended, which, Lady, ROOT, speech, stated, opposition]","[Minister, commended, Lady, which, her, stated, ROOT, speech, her, opposition, to]",14,"[Minister, commended, speech, stated, her, ROOT, opposition, her, to]","[Minister, commended, speech, stated, her, ROOT, opposition, her, to]",NNP_Minister VBD_commended NNP_Lady WDT_which PRP$_her VBN_stated NN_speech PRP$_her NN_opposition TO_to ,"[Minister, commended, Lady, which, her, stated, ROOT, speech, her, opposition, to]","[Minister, commended, Lady, which, her, stated, ROOT, speech, her, opposition, to]",NNP_Minister VBD_commended NNP_Lady WDT_which PRP$_her VBN_stated NN_speech PRP$_her NN_opposition TO_to ,"[Minister, commended, Lady, which, her, stated, ROOT, speech, her, opposition, to]",NNP_Minister VBD_commended NNP_Lady WDT_which PRP$_her VBN_stated NN_speech PRP$_her NN_opposition TO_to ,"[Minister, commended, Lady, which, her, stated, ROOT, speech, her, opposition, to]",NNP_Minister VBD_commended NNP_Lady WDT_which PRP$_her VBN_stated NN_speech PRP$_her NN_opposition TO_to ,1,1,2,2,1,2,2,2,2,2
I should stress to the hon. Lady that if one considers the different offices and the differential way in which the rules on community care grants in particular are applied  one realises that serious application by social workers  by local authorities and by diligent Members of Parliament I know that the hon. Lady is such a Member will ensure that community care grants are effectively spent.,IPRP shouldMD stressVB toTO theDT honNN LadyNNP thatIN ifIN oneCD considersVBZ theDT differentJJ officesNNS andCC theDT differentialJJ wayNN inIN whichWDT theDT rulesNNS onIN communityNN careNN grantsNNS inIN particularJJ areVBP appliedVBN oneCD realisesVBZ thatIN seriousJJ applicationNN byIN socialJJ workersNNS byIN localJJ authoritiesNNS andCC byIN diligentJJ MembersNNS ofIN ParliamentNNP IPRP knowVBP thatIN theDT honNN LadyNNP isVBZ suchJJ aDT MemberNNP willMD ensureVB thatDT communityNN careNN grantsNNS areVBP effectivelyRB spentJJ ,"root(ROOT-0, stress-3) nsubj(stress-3, I-1) aux(stress-3, should-2) case(Lady-7, to-4) det(Lady-7, the-5) compound(Lady-7, hon.-6) nmod:to(stress-3, Lady-7) mark(realises-33, that-8) mark(considers-11, if-9) nsubj(considers-11, one-10) advcl(realises-33, considers-11) det(offices-14, the-12) amod(offices-14, different-13) dobj(considers-11, offices-14) cc(offices-14, and-15) det(way-18, the-16) amod(way-18, differential-17) dobj(considers-11, way-18) conj:and(offices-14, way-18) case(which-20, in-19) nmod:in(applied-30, which-20) det(rules-22, the-21) nsubjpass(applied-30, rules-22) case(grants-26, on-23) compound(grants-26, community-24) compound(grants-26, care-25) nmod:on(rules-22, grants-26) case(particular-28, in-27) nmod:in(rules-22, particular-28) auxpass(applied-30, are-29) acl:relcl(way-18, applied-30) punct(realises-33, ,-31) nsubj(realises-33, one-32) ccomp(stress-3, realises-33) dobj(realises-33, that-34) amod(application-36, serious-35) dep(that-34, application-36) case(workers-39, by-37) amod(workers-39, social-38) nmod:by(application-36, workers-39) punct(application-36, ,-40) case(authorities-43, by-41) amod(authorities-43, local-42) nmod:by(application-36, authorities-43) cc(authorities-43, and-44) case(Members-47, by-45) amod(Members-47, diligent-46) nmod:by(know-51, Members-47) case(Parliament-49, of-48) nmod:of(Members-47, Parliament-49) nsubj(know-51, I-50) nmod:by(application-36, know-51) conj:and(authorities-43, know-51) mark(Member-59, that-52) det(Lady-55, the-53) compound(Lady-55, hon.-54) nsubj(Member-59, Lady-55) cop(Member-59, is-56) det:predet(Member-59, such-57) det(Member-59, a-58) nsubj(ensure-61, Member-59) aux(ensure-61, will-60) ccomp(know-51, ensure-61) mark(spent-68, that-62) compound(grants-65, community-63) compound(grants-65, care-64) nsubjpass(spent-68, grants-65) auxpass(spent-68, are-66) advmod(spent-68, effectively-67) ccomp(ensure-61, spent-68) punct(stress-3, .-69)",1,0,0,"root(ROOT, stress) nsbj(stress, I) ax(stress, shold) case(Lady, to) det(Lady, the) compond(Lady, hon.) nmod:to(stress, Lady) mark(realises, that) mark(considers, if) nsbj(considers, one) advcl(realises, considers) det(offices, the) amod(offices, different) dobj(considers, offices) cc(offices, and) det(way, the) amod(way, differential) dobj(considers, way) conj:and(offices, way) case(which, in) nmod:in(applied, which) det(rles, the) nsbjpass(applied, rles) case(grants, on) compond(grants, commnity) compond(grants, care) nmod:on(rles, grants) case(particlar, in) nmod:in(rles, particlar) axpass(applied, are) acl:relcl(way, applied) pnct(realises, ,) nsbj(realises, one) ccomp(stress, realises) dobj(realises, that) amod(application, serios) dep(that, application) case(workers, by) amod(workers, social) nmod:by(application, workers) pnct(application, ,) case(athorities, by) amod(athorities, local) nmod:by(application, athorities) cc(athorities, and) case(Members, by) amod(Members, diligent) nmod:by(know, Members) case(Parliament, of) nmod:of(Members, Parliament) nsbj(know, I) nmod:by(application, know) conj:and(athorities, know) mark(Member, that) det(Lady, the) compond(Lady, hon.) nsbj(Member, Lady) cop(Member, is) det:predet(Member, sch) det(Member, a) nsbj(ensre, Member) ax(ensre, will) ccomp(know, ensre) mark(spent, that) compond(grants, commnity) compond(grants, care) nsbjpass(spent, grants) axpass(spent, are) advmod(spent, effectively) ccomp(ensre, spent) pnct(stress, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VB,NNP) mark(VBZ,DT) mark(VBZ,IN) nsbj(VBZ,CD) advcl(VBZ,VBZ) det(NNS,DT) amod(NNS,JJ) dobj(VBZ,NNS) cc(NNS,CC) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) conj:and(NNS,NN) case(WDT,IN) nmod:in(VBN,WDT) det(NNS,DT) nsbjpass(VBN,NNS) case(NNS,IN) compond(NNS,NN) compond(NNS,NN) nmod:on(NNS,NNS) case(JJ,IN) nmod:in(NNS,JJ) axpass(VBN,VBP) acl:relcl(NN,VBN) pnct(VBZ,VBZ) nsbj(VBZ,CD) ccomp(VB,VBZ) dobj(VBZ,DT) amod(NN,JJ) dep(DT,NN) case(NNS,IN) amod(NNS,JJ) nmod:by(NN,NNS) pnct(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:by(NN,NNS) cc(NNS,CC) case(NNS,IN) amod(NNS,JJ) nmod:by(VBP,NNS) case(NNP,IN) nmod:of(NNS,NNP) nsbj(VBP,PRP) nmod:by(NN,VBP) conj:and(NNS,VBP) mark(NNP,DT) det(NNP,DT) compond(NNP,NNP) nsbj(NNP,NNP) cop(NNP,VBZ) det:predet(NNP,JJ) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) ccomp(VBP,VB) mark(JJ,DT) compond(NNS,NN) compond(NNS,NN) nsbjpass(JJ,NNS) axpass(JJ,VBP) advmod(JJ,RB) ccomp(VB,JJ) pnct(VB,VB)","[realises, spent, ensure, I, stress, Member, ROOT, know, Lady, Lady]","[realises, spent, ensure, I, stress, Member, ROOT, know, Lady, Lady]",8,"[stress, ROOT, I, realises, Lady]","[stress, ROOT, I, realises, Lady]",VBZ_realises VBN_spent VB_ensure PRP_I VBP_stress NNP_Member VB_know NNP_Lady NNP_Lady ,"[realises, spent, ensure, I, stress, Member, ROOT, know, Lady, Lady]","[realises, spent, ensure, I, stress, Member, ROOT, know, Lady, Lady]",VBZ_realises VBN_spent VB_ensure PRP_I VBP_stress NNP_Member VB_know NNP_Lady NNP_Lady ,"[realises, spent, ensure, I, stress, Member, ROOT, know, Lady, Lady]",VBZ_realises VBN_spent VB_ensure PRP_I VBP_stress NNP_Member VB_know NNP_Lady NNP_Lady ,"[realises, spent, ensure, I, stress, Member, ROOT, know, Lady, Lady]",VBZ_realises VBN_spent VB_ensure PRP_I VBP_stress NNP_Member VB_know NNP_Lady NNP_Lady ,1,1,2,2,1,2,2,2,2,2
How much satisfaction is given to my hon. Friend by the prospect of one of Her Majesty's Ministers being summoned before the Court of the European Community to answer allegations about the condition of our drinking water?,HowWRB muchJJ satisfactionNN isVBZ givenVBN toTO myPRP$ honNN FriendNN byIN theDT prospectNN ofIN oneCD ofIN HerNNP MajestyNNP 'sPOS MinistersNNP beingVBG summonedVBN beforeIN theDT CourtNNP ofIN theDT EuropeanNNP CommunityNNP toTO answerVB allegationsNNS aboutIN theDT conditionNN ofIN ourPRP$ drinkingNN waterNN ,"root(ROOT-0, given-5) advmod(much-2, How-1) amod(satisfaction-3, much-2) nsubjpass(given-5, satisfaction-3) auxpass(given-5, is-4) case(Friend-9, to-6) nmod:poss(Friend-9, my-7) compound(Friend-9, hon.-8) nmod:to(given-5, Friend-9) case(prospect-12, by-10) det(prospect-12, the-11) nmod:agent(given-5, prospect-12) case(one-14, of-13) nmod:of(prospect-12, one-14) case(Ministers-19, of-15) nmod:poss(Majesty-17, Her-16) nmod:poss(Ministers-19, Majesty-17) case(Majesty-17, 's-18) nmod:of(one-14, Ministers-19) auxpass(summoned-21, being-20) acl(Ministers-19, summoned-21) case(Court-24, before-22) det(Court-24, the-23) nmod:before(summoned-21, Court-24) case(Community-28, of-25) det(Community-28, the-26) compound(Community-28, European-27) nmod:of(Court-24, Community-28) mark(answer-30, to-29) xcomp(summoned-21, answer-30) dobj(answer-30, allegations-31) case(condition-34, about-32) det(condition-34, the-33) nmod:about(allegations-31, condition-34) case(water-38, of-35) nmod:poss(water-38, our-36) compound(water-38, drinking-37) nmod:of(condition-34, water-38) punct(given-5, ?-39)",1,1,1,"root(ROOT, given) advmod(mch, How) amod(satisfaction, mch) nsbjpass(given, satisfaction) axpass(given, is) case(Friend, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:to(given, Friend) case(prospect, by) det(prospect, the) nmod:agent(given, prospect) case(one, of) nmod:of(prospect, one) case(Ministers, of) nmod:poss(Majesty, Her) nmod:poss(Ministers, Majesty) ""case(Majesty, s)"", nmod:of(one, Ministers) axpass(smmoned, being) acl(Ministers, smmoned) case(Cort, before) det(Cort, the) nmod:before(smmoned, Cort) case(Commnity, of) det(Commnity, the) compond(Commnity, Eropean) nmod:of(Cort, Commnity) mark(answer, to) xcomp(smmoned, answer) dobj(answer, allegations) case(condition, abot) det(condition, the) nmod:abot(allegations, condition) case(water, of) nmod:poss(water, or) compond(water, drinking) nmod:of(condition, water) pnct(given, ?)","root(,VBN) advmod(JJ,WRB) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBZ) case(NN,TO) nmod:poss(NN,PRP$) compond(NN,NN) nmod:to(VBN,NN) case(NN,IN) det(NN,DT) nmod:agent(VBN,NN) case(CD,IN) nmod:of(NN,CD) case(NNP,IN) nmod:poss(NNP,NNP) nmod:poss(NNP,NNP) case(NNP,POS) nmod:of(CD,NNP) axpass(VBN,VBG) acl(NNP,VBN) case(NNP,IN) det(NNP,DT) nmod:before(VBN,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NNP,NNP) mark(VB,TO) xcomp(VBN,VB) dobj(VB,NNS) case(NN,IN) det(NN,DT) nmod:abot(NNS,NN) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NN) nmod:of(NN,NN) pnct(VBN,VBN)","[prospect, my, satisfaction, ROOT, given, Friend]","[prospect, my, satisfaction, ROOT, given, Friend]",6,"[prospect, my, satisfaction, ROOT, given, Friend]","[prospect, my, satisfaction, ROOT, given, Friend]",NN_prospect PRP$_my NN_satisfaction VBN_given NNP_Friend ,"[prospect, my, satisfaction, ROOT, given, Friend]","[prospect, my, satisfaction, ROOT, given, Friend]",NN_prospect PRP$_my NN_satisfaction VBN_given NNP_Friend ,"[prospect, my, satisfaction, ROOT, given, Friend]",NN_prospect PRP$_my NN_satisfaction VBN_given NNP_Friend ,"[prospect, my, satisfaction, ROOT, given, Friend]",NN_prospect PRP$_my NN_satisfaction VBN_given NNP_Friend ,1,2,2,1,1,1,2,0,1,2
Is it a matter of satisfaction or of concern to the Government that when the people of East Germany go to the polls in democratic elections in 12 days' time they will do so with short range nuclear weapons from the West still pointing at them?,IsVBZ itPRP aDT matterNN ofIN satisfactionNN orCC ofIN concernNN toTO theDT GovernmentNNP thatWDT whenWRB theDT peopleNNS ofIN EastNNP GermanyNNP goVBP toTO theDT pollsNNS inIN democraticJJ electionsNNS inIN 12CD daysNNS 'POS timeNN theyPRP willMD doVB soRB withIN shortJJ rangeNN nuclearJJ weaponsNNS fromIN theDT WestNNP stillRB pointingVBG atIN themPRP ,"root(ROOT-0, matter-4) cop(matter-4, Is-1) nsubj(matter-4, it-2) det(matter-4, a-3) conj:or(matter-4, matter-4'') case(satisfaction-6, of-5) nmod:of(matter-4, satisfaction-6) cc(matter-4, or-7) case(concern-9, of-8) nmod:of(matter-4'', concern-9) case(Government-12, to-10) det(Government-12, the-11) nmod:to(concern-9, Government-12) dep(Government-12, that-13) advmod(go-20, when-14) det(people-16, the-15) nsubj(go-20, people-16) case(Germany-19, of-17) compound(Germany-19, East-18) nmod:of(people-16, Germany-19) dep(that-13, go-20) case(polls-23, to-21) det(polls-23, the-22) nmod:to(go-20, polls-23) case(elections-26, in-24) amod(elections-26, democratic-25) nmod:in(polls-23, elections-26) case(time-31, in-27) nummod(days-29, 12-28) nmod:poss(time-31, days-29) case(days-29, '-30) nmod:in(go-20, time-31) nsubj(do-34, they-32) aux(do-34, will-33) acl:relcl(time-31, do-34) advmod(range-38, so-35) case(range-38, with-36) amod(range-38, short-37) nmod:with(do-34, range-38) amod(weapons-40, nuclear-39) dobj(range-38, weapons-40) case(West-43, from-41) det(West-43, the-42) nmod:from(weapons-40, West-43) advmod(pointing-45, still-44) acl(weapons-40, pointing-45) case(them-47, at-46) nmod:at(pointing-45, them-47) punct(matter-4, ?-48)",1,1,0,"root(ROOT, matter) cop(matter, Is) nsbj(matter, it) det(matter, a) conj:or(matter, matter) case(satisfaction, of) nmod:of(matter, satisfaction) cc(matter, or) case(concern, of) nmod:of(matter, concern) case(Government, to) det(Government, the) nmod:to(concern, Government) dep(Government, that) advmod(go, when) det(people, the) nsbj(go, people) case(Germany, of) compond(Germany, East) nmod:of(people, Germany) dep(that, go) case(polls, to) det(polls, the) nmod:to(go, polls) case(elections, in) amod(elections, democratic) nmod:in(polls, elections) case(time, in) nmmod(days, 12) nmod:poss(time, days) ""case(days, )"", nmod:in(go, time) nsbj(do, they) ax(do, will) acl:relcl(time, do) advmod(range, so) case(range, with) amod(range, short) nmod:with(do, range) amod(weapons, nclear) dobj(range, weapons) case(West, from) det(West, the) nmod:from(weapons, West) advmod(pointing, still) acl(weapons, pointing) case(them, at) nmod:at(pointing, them) pnct(matter, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) det(NN,DT) conj:or(NN,NN) case(NN,IN) nmod:of(NN,NN) cc(NN,CC) case(NN,IN) nmod:of(NN,NN) case(NNP,TO) det(NNP,DT) nmod:to(NN,NNP) dep(NNP,WDT) advmod(VBP,WRB) det(NNS,DT) nsbj(VBP,NNS) case(NNP,IN) compond(NNP,NNP) nmod:of(NNS,NNP) dep(WDT,VBP) case(NNS,TO) det(NNS,DT) nmod:to(VBP,NNS) case(NNS,IN) amod(NNS,JJ) nmod:in(NNS,NNS) case(NN,IN) nmmod(NNS,CD) nmod:poss(NN,NNS) case(NNS,POS) nmod:in(VBP,NN) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) advmod(NN,RB) case(NN,IN) amod(NN,JJ) nmod:with(VB,NN) amod(NNS,JJ) dobj(NN,NNS) case(NNP,IN) det(NNP,DT) nmod:from(NNS,NNP) advmod(VBG,RB) acl(NNS,VBG) case(PRP,IN) nmod:at(VBG,PRP) pnct(NN,NN)","[matter, Government, that, go, concern]","[matter, Government, that, go, concern]",4,"[matter, Government, that, go, concern]","[matter, Government, that, go, concern]",NN_matter NNP_Government IN_that VB_go NN_concern ,"[matter, Government, that, go, concern]","[matter, Government, that, go, concern]",NN_matter NNP_Government IN_that VB_go NN_concern ,"[matter, Government, that, go, concern]",NN_matter NNP_Government IN_that VB_go NN_concern ,"[matter, Government, that, go, concern]",NN_matter NNP_Government IN_that VB_go NN_concern ,3,2,2,2,1,2,2,2,2,2
I hope that he will recognise that the point of a consultation exercise is to listen carefully to the points made.,IPRP hopeVBP thatIN hePRP willMD recogniseVB thatIN theDT pointNN ofIN aDT consultationNN exerciseNN isVBZ toTO listenVB carefullyRB toTO theDT pointsNNS madeVBD ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(recognise-6, that-3) nsubj(recognise-6, he-4) aux(recognise-6, will-5) ccomp(hope-2, recognise-6) mark(is-14, that-7) det(point-9, the-8) nsubj(is-14, point-9) case(exercise-13, of-10) det(exercise-13, a-11) compound(exercise-13, consultation-12) nmod:of(point-9, exercise-13) ccomp(recognise-6, is-14) mark(listen-16, to-15) xcomp(is-14, listen-16) advmod(listen-16, carefully-17) case(points-20, to-18) det(points-20, the-19) nmod:to(listen-16, points-20) acl(points-20, made-21) punct(hope-2, .-22)",1,0,0,"root(ROOT, hope) nsbj(hope, I) mark(recognise, that) nsbj(recognise, he) ax(recognise, will) ccomp(hope, recognise) mark(is, that) det(point, the) nsbj(is, point) case(exercise, of) det(exercise, a) compond(exercise, consltation) nmod:of(point, exercise) ccomp(recognise, is) mark(listen, to) xcomp(is, listen) advmod(listen, careflly) case(points, to) det(points, the) nmod:to(listen, points) acl(points, made) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBP,VB) mark(VBZ,IN) det(NN,DT) nsbj(VBZ,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) ccomp(VB,VBZ) mark(VB,TO) xcomp(VBZ,VB) advmod(VB,RB) case(NNS,TO) det(NNS,DT) nmod:to(VB,NNS) acl(NNS,VBD) pnct(VBP,VBP)","[is, recognise, he, hope]","[is, recognise, he, hope]",10,[ ],[ ],VBZ_is VBP_recognise PRP_he VBP_hope ,"[is, recognise, he, hope]","[is, recognise, he, hope]",VBZ_is VBP_recognise PRP_he VBP_hope ,"[is, recognise, he, hope]",VBZ_is VBP_recognise PRP_he VBP_hope ,"[is, recognise, he, hope]",VBZ_is VBP_recognise PRP_he VBP_hope ,2,2,2,0,0,0,0,0,0,0
If he does  no one in Northern Ireland would agree with him.,IfIN hePRP doesVBZ noDT oneNN inIN NorthernNNP IrelandNNP wouldMD agreeVB withIN himPRP ,"root(ROOT-0, agree-11) mark(does-3, If-1) nsubj(does-3, he-2) advcl(agree-11, does-3) punct(agree-11, ,-4) neg(one-6, no-5) nsubj(agree-11, one-6) case(Ireland-9, in-7) amod(Ireland-9, Northern-8) nmod:in(one-6, Ireland-9) aux(agree-11, would-10) case(him-13, with-12) nmod:with(agree-11, him-13) punct(agree-11, .-14)",1,0,0,"root(ROOT, agree) mark(does, If) nsbj(does, he) advcl(agree, does) pnct(agree, ,) neg(one, no) nsbj(agree, one) case(Ireland, in) amod(Ireland, Northern) nmod:in(one, Ireland) ax(agree, wold) case(him, with) nmod:with(agree, him) pnct(agree, .)","root(,VB) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(VB,VBZ) pnct(VB,VB) neg(NN,DT) nsbj(VB,NN) case(NNP,IN) amod(NNP,NNP) nmod:in(NN,NNP) ax(VB,MD) case(PRP,IN) nmod:with(VB,PRP) pnct(VB,VB)","[he, agree, does]","[he, agree, does]",10,"[he, agree, does]","[he, agree, does]",PRP_he VB_agree VBZ_does ,"[he, agree, does]","[he, agree, does]",PRP_he VB_agree VBZ_does ,"[he, agree, does]",PRP_he VB_agree VBZ_does ,"[he, agree, does]",PRP_he VB_agree VBZ_does ,2,2,2,0,0,0,0,0,0,0
What effective steps does he now intend to take after his recent failure to bring these people to justice?,WhatWP effectiveJJ stepsNNS doesVBZ hePRP nowRB intendVBP toTO takeVB afterIN hisPRP$ recentJJ failureNN toTO bringVB theseDT peopleNNS toTO justiceVB ,"root(ROOT-0, intend-7) det(steps-3, What-1) amod(steps-3, effective-2) dobj(intend-7, steps-3) aux(intend-7, does-4) nsubj(intend-7, he-5) advmod(intend-7, now-6) mark(take-9, to-8) xcomp(intend-7, take-9) case(failure-13, after-10) nmod:poss(failure-13, his-11) amod(failure-13, recent-12) nmod:after(take-9, failure-13) mark(bring-15, to-14) acl(failure-13, bring-15) det(people-17, these-16) dobj(bring-15, people-17) case(justice-19, to-18) nmod:to(bring-15, justice-19) punct(intend-7, ?-20)",1,0,1,"root(ROOT, intend) det(steps, What) amod(steps, effective) dobj(intend, steps) ax(intend, does) nsbj(intend, he) advmod(intend, now) mark(take, to) xcomp(intend, take) case(failre, after) nmod:poss(failre, his) amod(failre, recent) nmod:after(take, failre) mark(bring, to) acl(failre, bring) det(people, these) dobj(bring, people) case(jstice, to) nmod:to(bring, jstice) pnct(intend, ?)","root(,VBP) det(NNS,WP) amod(NNS,JJ) dobj(VBP,NNS) ax(VBP,VBZ) nsbj(VBP,PRP) advmod(VBP,RB) mark(VB,TO) xcomp(VBP,VB) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:after(VB,NN) mark(VB,TO) acl(NN,VB) det(NNS,DT) dobj(VB,NNS) case(VB,TO) nmod:to(VB,VB) pnct(VBP,VBP)","[take, ROOT, he, now, steps, intend]","[take, failure, steps, recent, his, ROOT, bring, now, intend, he]",3,"[failure, recent, bring, his, take]","[failure, recent, bring, his, take]",VB_take NN_failure NNS_steps JJ_recent PRP$_his VB_bring RB_now NN_intend PRP_he ,"[take, failure, steps, recent, his, ROOT, bring, now, intend, he]","[take, failure, steps, recent, his, ROOT, bring, now, intend, he]",VB_take NN_failure NNS_steps JJ_recent PRP$_his VB_bring RB_now NN_intend PRP_he ,"[take, failure, steps, recent, his, ROOT, bring, now, intend, he]",VB_take NN_failure NNS_steps JJ_recent PRP$_his VB_bring RB_now NN_intend PRP_he ,"[take, failure, steps, recent, his, ROOT, bring, now, intend, he]",VB_take NN_failure NNS_steps JJ_recent PRP$_his VB_bring RB_now NN_intend PRP_he ,1,2,2,2,1,2,2,2,2,2
If he does not agree to press for those measures  we shall have no alternative but to ask the Prime Minister to assume responsibility for security.,IfIN hePRP doesVBZ notRB agreeVB toTO pressVB forIN thoseDT measuresNNS wePRP shallMD haveVB noDT alternativeJJ butCC toTO askVB theDT PrimeNNP MinisterNNP toTO assumeVB responsibilityNN forIN securityNN ,"root(ROOT-0, have-14) mark(agree-5, If-1) nsubj(agree-5, he-2) aux(agree-5, does-3) neg(agree-5, not-4) advcl(have-14, agree-5) mark(press-7, to-6) xcomp(agree-5, press-7) case(measures-10, for-8) det(measures-10, those-9) nmod:for(press-7, measures-10) punct(have-14, ,-11) nsubj(have-14, we-12) nsubj(ask-19, we-12) aux(have-14, shall-13) neg(alternative-16, no-15) dobj(have-14, alternative-16) cc(have-14, but-17) mark(ask-19, to-18) conj:but(have-14, ask-19) det(Minister-22, the-20) compound(Minister-22, Prime-21) dobj(ask-19, Minister-22) mark(assume-24, to-23) xcomp(ask-19, assume-24) dobj(assume-24, responsibility-25) case(security-27, for-26) nmod:for(responsibility-25, security-27) punct(have-14, .-28)",1,0,0,"root(ROOT, have) mark(agree, If) nsbj(agree, he) ax(agree, does) neg(agree, not) advcl(have, agree) mark(press, to) xcomp(agree, press) case(measres, for) det(measres, those) nmod:for(press, measres) pnct(have, ,) nsbj(have, we) nsbj(ask, we) ax(have, shall) neg(alternative, no) dobj(have, alternative) cc(have, bt) mark(ask, to) conj:bt(have, ask) det(Minister, the) compond(Minister, Prime) dobj(ask, Minister) mark(assme, to) xcomp(ask, assme) dobj(assme, responsibility) case(secrity, for) nmod:for(responsibility, secrity) pnct(have, .)","root(,VB) mark(VB,IN) nsbj(VB,PRP) ax(VB,VBZ) neg(VB,RB) advcl(VB,VB) mark(VB,TO) xcomp(VB,VB) case(NNS,IN) det(NNS,DT) nmod:for(VB,NNS) pnct(VB,VB) nsbj(VB,PRP) nsbj(VB,PRP) ax(VB,MD) neg(JJ,DT) dobj(VB,JJ) cc(VB,CC) mark(VB,TO) conj:bt(VB,VB) det(NNP,DT) compond(NNP,NNP) dobj(VB,NNP) mark(VB,TO) xcomp(VB,VB) dobj(VB,NN) case(NN,IN) nmod:for(NN,NN) pnct(VB,VB)","[not, assume, Minister, ask, have, we, he, agree, press]","[not, assume, Minister, ask, have, we, he, agree, press]",3,"[ask, assume, we, Minister]","[ask, assume, we, Minister]",RB_not VBP_assume NNP_Minister VB_ask VBP_have PRP_we PRP_he VB_agree VBP_press ,"[not, assume, Minister, ask, have, we, he, agree, press]","[not, assume, Minister, ask, have, we, he, agree, press]",RB_not VBP_assume NNP_Minister VB_ask VBP_have PRP_we PRP_he VB_agree VBP_press ,"[not, assume, Minister, ask, have, we, he, agree, press]",RB_not VBP_assume NNP_Minister VB_ask VBP_have PRP_we PRP_he VB_agree VBP_press ,"[not, assume, Minister, ask, have, we, he, agree, press]",RB_not VBP_assume NNP_Minister VB_ask VBP_have PRP_we PRP_he VB_agree VBP_press ,2,2,2,2,1,2,0,0,0,2
I am not sure that the hon. Gentleman is right in stating that witnesses  whether police officers or anyone else  are not allowed to attend courts in the Republic.,IPRP amVBP notRB sureJJ thatIN theDT honNN GentlemanNNP isVBZ rightJJ inIN statingVBG thatIN witnessesVBZ whetherIN policeNN officersNNS orCC anyoneNN elseRB areVBP notRB allowedVBN toTO attendVB courtsNNS inIN theDT RepublicNNP ,"root(ROOT-0, sure-4) nsubj(sure-4, I-1) cop(sure-4, am-2) neg(sure-4, not-3) mark(right-10, that-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nsubj(right-10, Gentleman-8) cop(right-10, is-9) ccomp(sure-4, right-10) mark(stating-12, in-11) advcl(right-10, stating-12) dobj(stating-12, that-13) root(that-13, witnesses-14) punct(allowed-25, ,-15) mark(allowed-25, whether-16) compound(officers-18, police-17) nsubjpass(allowed-25, officers-18) cc(officers-18, or-19) conj:or(officers-18, anyone-20) nsubjpass(allowed-25, anyone-20) advmod(allowed-25, else-21) punct(allowed-25, ,-22) auxpass(allowed-25, are-23) neg(allowed-25, not-24) dep(witnesses-14, allowed-25) mark(attend-27, to-26) xcomp(allowed-25, attend-27) dobj(attend-27, courts-28) case(Republic-31, in-29) det(Republic-31, the-30) nmod:in(attend-27, Republic-31) punct(allowed-25, .-32)",1,0,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) neg(sre, not) mark(right, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(right, Gentleman) cop(right, is) ccomp(sre, right) mark(stating, in) advcl(right, stating) dobj(stating, that) root(that, witnesses) pnct(allowed, ,) mark(allowed, whether) compond(officers, police) nsbjpass(allowed, officers) cc(officers, or) conj:or(officers, anyone) nsbjpass(allowed, anyone) advmod(allowed, else) pnct(allowed, ,) axpass(allowed, are) neg(allowed, not) dep(witnesses, allowed) mark(attend, to) xcomp(allowed, attend) dobj(attend, corts) case(Repblic, in) det(Repblic, the) nmod:in(attend, Repblic) pnct(allowed, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) neg(JJ,RB) mark(JJ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) ccomp(JJ,JJ) mark(VBG,IN) advcl(JJ,VBG) dobj(VBG,IN) root(IN,VBZ) pnct(VBN,VBN) mark(VBN,IN) compond(NNS,NN) nsbjpass(VBN,NNS) cc(NNS,CC) conj:or(NNS,NN) nsbjpass(VBN,NN) advmod(VBN,RB) pnct(VBN,VBN) axpass(VBN,VBP) neg(VBN,RB) dep(VBZ,VBN) mark(VB,TO) xcomp(VBN,VB) dobj(VB,NNS) case(NNP,IN) det(NNP,DT) nmod:in(VB,NNP) pnct(VBN,VBN)","[stating, sure, right, Gentleman]","[stating, sure, right, Gentleman]",9,"[stating, sure, right, Gentleman]",[ ],VBG_stating RB_sure JJ_right NNP_Gentleman ,"[stating, sure, right, Gentleman]","[stating, sure, right, Gentleman]",VBG_stating RB_sure JJ_right NNP_Gentleman ,"[stating, sure, right, Gentleman]",VBG_stating RB_sure JJ_right NNP_Gentleman ,"[stating, sure, right, Gentleman]",VBG_stating RB_sure JJ_right NNP_Gentleman ,1,2,2,1,1,1,1,1,1,2
If the hon. Gentleman can give me evidence that I am wrong  I shall take up the matter.,IfIN theDT honNN GentlemanNNP canMD giveVB mePRP evidenceNN thatIN IPRP amVBP wrongJJ IPRP shallMD takeVB upRP theDT matterNN ,"root(ROOT-0, give-6) mark(give-6, If-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(give-6, Gentleman-4) aux(give-6, can-5) iobj(give-6, me-7) dobj(give-6, evidence-8) mark(wrong-12, that-9) nsubj(wrong-12, I-10) cop(wrong-12, am-11) ccomp(evidence-8, wrong-12) punct(wrong-12, ,-13) nsubj(take-16, I-14) aux(take-16, shall-15) ccomp(wrong-12, take-16) compound:prt(take-16, up-17) det(matter-19, the-18) dobj(take-16, matter-19) punct(give-6, .-20)",1,0,0,"root(ROOT, give) mark(give, If) det(Gentleman, the) compond(Gentleman, hon.) nsbj(give, Gentleman) ax(give, can) iobj(give, me) dobj(give, evidence) mark(wrong, that) nsbj(wrong, I) cop(wrong, am) ccomp(evidence, wrong) pnct(wrong, ,) nsbj(take, I) ax(take, shall) ccomp(wrong, take) compond:prt(take, p) det(matter, the) dobj(take, matter) pnct(give, .)","root(,VB) mark(VB,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) iobj(VB,PRP) dobj(VB,NN) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBP) ccomp(NN,JJ) pnct(JJ,JJ) nsbj(VB,PRP) ax(VB,MD) ccomp(JJ,VB) compond:prt(VB,RP) det(NN,DT) dobj(VB,NN) pnct(VB,VB)","[ROOT, me, give, evidence, Gentleman]","[ROOT, me, give, evidence, Gentleman]",10,[ ],[ ],PRP_me VB_give NN_evidence NNP_Gentleman ,"[ROOT, me, give, evidence, Gentleman]","[ROOT, me, give, evidence, Gentleman]",PRP_me VB_give NN_evidence NNP_Gentleman ,"[ROOT, me, give, evidence, Gentleman]",PRP_me VB_give NN_evidence NNP_Gentleman ,"[ROOT, me, give, evidence, Gentleman]",PRP_me VB_give NN_evidence NNP_Gentleman ,2,2,2,0,0,0,0,0,0,0
The hon. Gentleman is right on the latter point.,TheDT honNN GentlemanNNP isVBZ rightJJ onIN theDT latterJJ pointNN ,"root(ROOT-0, right-5) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(right-5, Gentleman-3) cop(right-5, is-4) case(point-9, on-6) det(point-9, the-7) amod(point-9, latter-8) nmod:on(right-5, point-9) punct(right-5, .-10)",1,1,0,"root(ROOT, right) det(Gentleman, The) compond(Gentleman, hon.) nsbj(right, Gentleman) cop(right, is) case(point, on) det(point, the) amod(point, latter) nmod:on(right, point) pnct(right, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(JJ,NN) pnct(JJ,JJ)","[ROOT, right, Gentleman, point]","[ROOT, right, Gentleman, point]",10,"[ROOT, right, Gentleman, point]",[ ],JJ_right NNP_Gentleman VB_point ,"[ROOT, right, Gentleman, point]","[ROOT, right, Gentleman, point]",JJ_right NNP_Gentleman VB_point ,"[ROOT, right, Gentleman, point]",JJ_right NNP_Gentleman VB_point ,"[ROOT, right, Gentleman, point]",JJ_right NNP_Gentleman VB_point ,1,1,1,1,1,1,1,1,1,1
Is that not further evidence that the right hon. and learned Gentleman's policies are adding to the economic recession?,IsVBZ thatIN notRB furtherJJ evidenceNN thatIN theDT rightJJ honNN andCC learnedVBD GentlemanNNP 'sPOS policiesNNS areVBP addingVBG toTO theDT economicJJ recessionNN ,"root(ROOT-0, Is-1) nsubj(evidence-5, that-2) neg(evidence-5, not-3) amod(evidence-5, further-4) ccomp(Is-1, evidence-5) dep(evidence-5, that-6) det(hon.-9, the-7) amod(hon.-9, right-8) root(that-6, hon.-9) cc(hon.-9, and-10) root(that-6, learned-11) conj:and(hon.-9, learned-11) nmod:poss(policies-14, Gentleman-12) case(Gentleman-12, 's-13) nsubj(adding-16, policies-14) aux(adding-16, are-15) ccomp(learned-11, adding-16) case(recession-20, to-17) det(recession-20, the-18) amod(recession-20, economic-19) nmod:to(adding-16, recession-20) punct(hon.-9, ?-21)",1,0,0,"root(ROOT, Is) nsbj(evidence, that) neg(evidence, not) amod(evidence, frther) ccomp(Is, evidence) dep(evidence, that) det(hon., the) amod(hon., right) root(that, hon.) cc(hon., and) root(that, learned) conj:and(hon., learned) nmod:poss(policies, Gentleman) ""case(Gentleman, s)"", nsbj(adding, policies) ax(adding, are) ccomp(learned, adding) case(recession, to) det(recession, the) amod(recession, economic) nmod:to(adding, recession) pnct(hon., ?)","root(,VBZ) nsbj(NN,IN) neg(NN,RB) amod(NN,JJ) ccomp(VBZ,NN) dep(NN,IN) det(IN,DT) amod(DT,JJ) root(IN,IN) cc(IN,CC) root(IN,VBD) conj:and(VBD,VBD) nmod:poss(NNS,NNP) case(NNP,POS) nsbj(VBG,NNS) ax(VBG,VBP) ccomp(VBD,VBG) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VBG,NN) pnct(NN,NN)","[policies, Gentleman, adding]","[policies, Gentleman, adding]",3,"[policies, Gentleman, adding]","[policies, Gentleman, adding]",NNS_policies NNP_Gentleman VBG_adding ,"[policies, Gentleman, adding]","[policies, Gentleman, adding]",NNS_policies NNP_Gentleman VBG_adding ,"[policies, Gentleman, adding]",NNS_policies NNP_Gentleman VBG_adding ,"[policies, Gentleman, adding]",NNS_policies NNP_Gentleman VBG_adding ,2,2,2,0,0,0,0,0,0,0
I am quite confident that  had the economy continued under its previous management  the confidence on both sides of industry  especially management  would have been significantly less than it is today.,IPRP amVBP quiteRB confidentJJ thatWDT hadVBD theDT economyNN continuedVBD underIN itsPRP$ previousJJ managementNN theDT confidenceNN onIN bothDT sidesNNS ofIN industryNN especiallyRB managementNN wouldMD haveVB beenVBN significantlyRB lessJJR thanIN itPRP isVBZ todayNN ,"root(ROOT-0, confident-4) nsubj(confident-4, I-1) cop(confident-4, am-2) advmod(confident-4, quite-3) mark(had-7, that-5) punct(had-7, ,-6) ccomp(confident-4, had-7) det(economy-9, the-8) nsubj(continued-10, economy-9) ccomp(had-7, continued-10) case(management-14, under-11) nmod:poss(management-14, its-12) amod(management-14, previous-13) nmod:under(continued-10, management-14) punct(continued-10, ,-15) det(confidence-17, the-16) nsubj(less-31, confidence-17) case(sides-20, on-18) det(sides-20, both-19) nmod:on(confidence-17, sides-20) case(industry-22, of-21) nmod:of(sides-20, industry-22) punct(confidence-17, ,-23) advmod(management-25, especially-24) appos(confidence-17, management-25) punct(confidence-17, ,-26) aux(less-31, would-27) aux(less-31, have-28) cop(less-31, been-29) advmod(less-31, significantly-30) ccomp(continued-10, less-31) mark(today-35, than-32) nsubj(today-35, it-33) cop(today-35, is-34) advcl(less-31, today-35) punct(confident-4, .-36)",0,0,0,"root(ROOT, confident) nsbj(confident, I) cop(confident, am) advmod(confident, qite) mark(had, that) pnct(had, ,) ccomp(confident, had) det(economy, the) nsbj(contined, economy) ccomp(had, contined) case(management, nder) nmod:poss(management, its) amod(management, previos) nmod:nder(contined, management) pnct(contined, ,) det(confidence, the) nsbj(less, confidence) case(sides, on) det(sides, both) nmod:on(confidence, sides) case(indstry, of) nmod:of(sides, indstry) pnct(confidence, ,) advmod(management, especially) appos(confidence, management) pnct(confidence, ,) ax(less, wold) ax(less, have) cop(less, been) advmod(less, significantly) ccomp(contined, less) mark(today, than) nsbj(today, it) cop(today, is) advcl(less, today) pnct(confident, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RB) mark(VBD,WDT) pnct(VBD,VBD) ccomp(JJ,VBD) det(NN,DT) nsbj(VBD,NN) ccomp(VBD,VBD) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:nder(VBD,NN) pnct(VBD,VBD) det(NN,DT) nsbj(JJR,NN) case(NNS,IN) det(NNS,DT) nmod:on(NN,NNS) case(NN,IN) nmod:of(NNS,NN) pnct(NN,NN) advmod(NN,RB) appos(NN,NN) pnct(NN,NN) ax(JJR,MD) ax(JJR,VB) cop(JJR,VBN) advmod(JJR,RB) ccomp(VBD,JJR) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) advcl(JJR,NN) pnct(JJ,JJ)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the right hon. and learned Gentleman explain why he did not tell the electorate eight months ago that if a Conservative Government were elected the country would be in for three years of unparalleled austerity to quote his right hon. Friend the Chief Secretary?,WillMD theDT rightJJ honNN andCC learnedVBD GentlemanNNP explainVB whyWRB hePRP didVBD notRB tellVB theDT electorateJJ eightCD monthsNNS agoIN thatDT ifIN aDT ConservativeJJ GovernmentNN wereVBD electedVBN theDT countryNN wouldMD beVB inIN forIN threeCD yearsNNS ofIN unparalleledJJ austerityNN toTO quoteVB hisPRP$ rightJJ honNN FriendNNP theDT ChiefNNP SecretaryNNP ,"root(ROOT-0, Will-1) det(hon.-4, the-2) amod(hon.-4, right-3) dobj(Will-1, hon.-4) cc(hon.-4, and-5) dobj(Will-1, learned-6) conj:and(hon.-4, learned-6) nsubj(explain-8, Gentleman-7) ccomp(learned-6, explain-8) advmod(tell-13, why-9) nsubj(tell-13, he-10) aux(tell-13, did-11) neg(tell-13, not-12) advcl(explain-8, tell-13) det(electorate-15, the-14) dobj(tell-13, electorate-15) nummod(months-17, eight-16) dobj(tell-13, months-17) case(months-17, ago-18) dep(months-17, that-19) mark(elected-25, if-20) det(Government-23, a-21) amod(Government-23, Conservative-22) nsubjpass(elected-25, Government-23) auxpass(elected-25, were-24) dep(that-19, elected-25) det(country-27, the-26) nsubj(years-33, country-27) aux(years-33, would-28) cop(years-33, be-29) case(years-33, in-30) case(years-33, for-31) nummod(years-33, three-32) ccomp(elected-25, years-33) case(austerity-36, of-34) amod(austerity-36, unparalleled-35) nmod:of(years-33, austerity-36) mark(quote-38, to-37) acl(years-33, quote-38) nmod:poss(Friend-42, his-39) amod(Friend-42, right-40) compound(Friend-42, hon.-41) dobj(quote-38, Friend-42) det(Secretary-45, the-43) compound(Secretary-45, Chief-44) dep(Friend-42, Secretary-45) punct(Will-1, ?-46)",1,1,0,"root(ROOT, Will) det(hon., the) amod(hon., right) dobj(Will, hon.) cc(hon., and) dobj(Will, learned) conj:and(hon., learned) nsbj(explain, Gentleman) ccomp(learned, explain) advmod(tell, why) nsbj(tell, he) ax(tell, did) neg(tell, not) advcl(explain, tell) det(electorate, the) dobj(tell, electorate) nmmod(months, eight) dobj(tell, months) case(months, ago) dep(months, that) mark(elected, if) det(Government, a) amod(Government, Conservative) nsbjpass(elected, Government) axpass(elected, were) dep(that, elected) det(contry, the) nsbj(years, contry) ax(years, wold) cop(years, be) case(years, in) case(years, for) nmmod(years, three) ccomp(elected, years) case(asterity, of) amod(asterity, nparalleled) nmod:of(years, asterity) mark(qote, to) acl(years, qote) nmod:poss(Friend, his) amod(Friend, right) compond(Friend, hon.) dobj(qote, Friend) det(Secretary, the) compond(Secretary, Chief) dep(Friend, Secretary) pnct(Will, ?)","root(,MD) det(MD,DT) amod(DT,JJ) dobj(MD,MD) cc(MD,CC) dobj(MD,VBD) conj:and(VBD,VBD) nsbj(VB,NNP) ccomp(VBD,VB) advmod(VB,WRB) nsbj(VB,PRP) ax(VB,VBD) neg(VB,RB) advcl(VB,VB) det(JJ,DT) dobj(VB,JJ) nmmod(NNS,CD) dobj(VB,NNS) case(NNS,IN) dep(NNS,DT) mark(VBN,IN) det(NN,DT) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBD) dep(DT,VBN) det(NN,DT) nsbj(NNS,NN) ax(NNS,MD) cop(NNS,VB) case(NNS,IN) case(NNS,IN) nmmod(NNS,CD) ccomp(VBN,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) mark(VB,TO) acl(NNS,VB) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dobj(VB,NNP) det(NNP,DT) compond(NNP,NNP) dep(NNP,NNP) pnct(MD,MD)","[elected, years, quote, explain, Secretary, his, electorate, why, Government, Gentleman, right, Conservative, he, that, Friend, tell, learned, months, not]","[elected, years, quote, explain, Secretary, months, electorate, why, Government, Gentleman, his, Conservative, he, that, Friend, tell, learned, not]",8,"[elected, his, years, Conservative, quote, that, Friend, explain, learned, Secretary, tell, Government, Gentleman]","[elected, his, years, Conservative, quote, that, Friend, explain, learned, Secretary, tell, Government, Gentleman]",VBN_elected NNS_years VB_quote NN_explain NNP_Secretary NNS_months NN_electorate WRB_why NNP_Government NNP_Gentleman PRP$_his JJ_Conservative PRP_he IN_that NNP_Friend VB_tell VBD_learned RB_not ,"[elected, years, quote, explain, Secretary, months, electorate, why, Government, Gentleman, his, Conservative, he, that, Friend, tell, learned, not]","[elected, years, quote, explain, Secretary, months, electorate, why, Government, Gentleman, his, Conservative, he, that, Friend, tell, learned, not]",VBN_elected NNS_years VB_quote NN_explain NNP_Secretary NNS_months NN_electorate WRB_why NNP_Government NNP_Gentleman PRP$_his JJ_Conservative PRP_he IN_that NNP_Friend VB_tell VBD_learned RB_not ,"[elected, years, quote, explain, Secretary, months, electorate, why, Government, Gentleman, his, Conservative, he, that, Friend, tell, learned, not]",VBN_elected NNS_years VB_quote NN_explain NNP_Secretary NNS_months NN_electorate WRB_why NNP_Government NNP_Gentleman PRP$_his JJ_Conservative PRP_he IN_that NNP_Friend VB_tell VBD_learned RB_not ,"[elected, years, quote, explain, Secretary, months, electorate, why, Government, Gentleman, his, Conservative, he, that, Friend, tell, learned, not]",VBN_elected NNS_years VB_quote NN_explain NNP_Secretary NNS_months NN_electorate WRB_why NNP_Government NNP_Gentleman PRP$_his JJ_Conservative PRP_he IN_that NNP_Friend VB_tell VBD_learned RB_not ,3,2,1,2,1,2,0,0,0,1
As always  the right hon. Gentleman is capable of exaggerating benefits that he fancies he sees.,AsIN alwaysRB theDT rightJJ honNN GentlemanNNP isVBZ capableJJ ofIN exaggeratingVBG benefitsNNS thatIN hePRP fanciesVBZ hePRP seesVBZ ,"root(ROOT-0, capable-9) case(always-2, As-1) nmod:as(capable-9, always-2) punct(capable-9, ,-3) det(Gentleman-7, the-4) amod(Gentleman-7, right-5) compound(Gentleman-7, hon.-6) nsubj(capable-9, Gentleman-7) cop(capable-9, is-8) mark(exaggerating-11, of-10) advcl(capable-9, exaggerating-11) dobj(exaggerating-11, benefits-12) mark(fancies-15, that-13) nsubj(fancies-15, he-14) ccomp(exaggerating-11, fancies-15) nsubj(sees-17, he-16) ccomp(fancies-15, sees-17) punct(capable-9, .-18)",1,0,0,"root(ROOT, capable) case(always, As) nmod:as(capable, always) pnct(capable, ,) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(capable, Gentleman) cop(capable, is) mark(exaggerating, of) advcl(capable, exaggerating) dobj(exaggerating, benefits) mark(fancies, that) nsbj(fancies, he) ccomp(exaggerating, fancies) nsbj(sees, he) ccomp(fancies, sees) pnct(capable, .)","root(,JJ) case(RB,IN) nmod:as(JJ,RB) pnct(JJ,JJ) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) mark(VBG,IN) advcl(JJ,VBG) dobj(VBG,NNS) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VBG,VBZ) nsbj(VBZ,PRP) ccomp(VBZ,VBZ) pnct(JJ,JJ)","[he, fancies, he, right, sees, capable, ROOT, Gentleman, exaggerating, always]","[he, fancies, he, sees, capable, ROOT, always, exaggerating, Gentleman]",11,"[he, fancies, he, sees, capable, ROOT, always, exaggerating, Gentleman]","[fancies, sees, exaggerating, he, he]",PRP_he VBZ_fancies PRP_he VBZ_sees JJ_capable RB_always VBG_exaggerating NNP_Gentleman ,"[he, fancies, he, sees, capable, ROOT, always, exaggerating, Gentleman]","[he, fancies, he, sees, capable, ROOT, always, exaggerating, Gentleman]",PRP_he VBZ_fancies PRP_he VBZ_sees JJ_capable RB_always VBG_exaggerating NNP_Gentleman ,"[he, fancies, he, sees, capable, ROOT, always, exaggerating, Gentleman]",PRP_he VBZ_fancies PRP_he VBZ_sees JJ_capable RB_always VBG_exaggerating NNP_Gentleman ,"[he, fancies, he, sees, capable, ROOT, always, exaggerating, Gentleman]",PRP_he VBZ_fancies PRP_he VBZ_sees JJ_capable RB_always VBG_exaggerating NNP_Gentleman ,1,2,1,1,1,1,1,1,1,1
Does the right hon. Gentleman recall that prior to the last general election the present Prime Minister paraded up and down the country giving an assurance that a Conservative Government would abolish the system of local rating because of its inequities and anomalies?,DoesVBZ theDT rightJJ honNN GentlemanNNP recallNN thatWDT priorVBZ toTO theDT lastJJ generalJJ electionNN theDT presentJJ PrimeNNP MinisterNNP paradedVBD upRB andCC downIN theDT countryNN givingVBG anDT assuranceNN thatIN aDT ConservativeJJ GovernmentNNP wouldMD abolishVB theDT systemNN ofIN localJJ ratingNN becauseIN ofIN itsPRP$ inequitiesNNS andCC anomaliesNNS ,"root(ROOT-0, Does-1) det(recall-6, the-2) amod(recall-6, right-3) compound(recall-6, hon.-4) compound(recall-6, Gentleman-5) dobj(Does-1, recall-6) dep(recall-6, that-7) advmod(that-7, prior-8) case(election-13, to-9) det(election-13, the-10) amod(election-13, last-11) amod(election-13, general-12) nmod:to(prior-8, election-13) det(Minister-17, the-14) amod(Minister-17, present-15) compound(Minister-17, Prime-16) nsubj(paraded-18, Minister-17) acl:relcl(election-13, paraded-18) compound:prt(paraded-18, up-19) cc(paraded-18, and-20) case(country-23, down-21) det(country-23, the-22) acl:relcl(election-13, country-23) conj:and(paraded-18, country-23) acl(country-23, giving-24) det(assurance-26, an-25) dobj(giving-24, assurance-26) mark(abolish-32, that-27) det(Government-30, a-28) amod(Government-30, Conservative-29) nsubj(abolish-32, Government-30) aux(abolish-32, would-31) ccomp(assurance-26, abolish-32) det(system-34, the-33) dobj(abolish-32, system-34) case(rating-37, of-35) amod(rating-37, local-36) nmod:of(system-34, rating-37) case(inequities-41, because-38) mwe(because-38, of-39) nmod:poss(inequities-41, its-40) nmod:because_of(abolish-32, inequities-41) cc(inequities-41, and-42) nmod:because_of(abolish-32, anomalies-43) conj:and(inequities-41, anomalies-43) punct(Does-1, ?-44)",1,1,0,"root(ROOT, Does) det(recall, the) amod(recall, right) compond(recall, hon.) compond(recall, Gentleman) dobj(Does, recall) dep(recall, that) advmod(that, prior) case(election, to) det(election, the) amod(election, last) amod(election, general) nmod:to(prior, election) det(Minister, the) amod(Minister, present) compond(Minister, Prime) nsbj(paraded, Minister) acl:relcl(election, paraded) compond:prt(paraded, p) cc(paraded, and) case(contry, down) det(contry, the) acl:relcl(election, contry) conj:and(paraded, contry) acl(contry, giving) det(assrance, an) dobj(giving, assrance) mark(abolish, that) det(Government, a) amod(Government, Conservative) nsbj(abolish, Government) ax(abolish, wold) ccomp(assrance, abolish) det(system, the) dobj(abolish, system) case(rating, of) amod(rating, local) nmod:of(system, rating) case(ineqities, becase) mwe(becase, of) nmod:poss(ineqities, its) nmod:becase_of(abolish, ineqities) cc(ineqities, and) nmod:becase_of(abolish, anomalies) conj:and(ineqities, anomalies) pnct(Does, ?)","root(,VBZ) det(NN,DT) amod(NN,JJ) compond(NN,NN) compond(NN,NNP) dobj(VBZ,NN) dep(NN,IN) advmod(IN,VBZ) case(NN,TO) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:to(VBZ,NN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) acl:relcl(NN,VBD) compond:prt(VBD,RB) cc(VBD,CC) case(NN,IN) det(NN,DT) acl:relcl(NN,NN) conj:and(VBD,NN) acl(NN,VBG) det(NN,DT) dobj(VBG,NN) mark(VB,IN) det(NNP,DT) amod(NNP,JJ) nsbj(VB,NNP) ax(VB,MD) ccomp(NN,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) case(NNS,IN) mwe(IN,IN) nmod:poss(NNS,PRP$) nmod:becase_of(VB,NNS) cc(NNS,CC) nmod:becase_of(VB,NNS) conj:and(NNS,NNS) pnct(VBZ,VBZ)","[Minister, assurance, inequities, right, Does, anomalies, system, Government, abolish, that, recall, paraded, Conservative, election, and, present]","[Minister, assurance, inequities, right, Does, anomalies, system, Government, abolish, that, recall, paraded, Conservative, election, and, present]",8,"[Minister, election, right, and, Does, present, that, recall, paraded]","[Minister, election, right, and, Does, present, that, recall, paraded]",NNP_Minister NN_assurance NNS_inequities JJ_right VBZ_Does NNS_anomalies NN_system NNP_Government VB_abolish IN_that NN_recall VBD_paraded JJ_Conservative NN_election CC_and JJ_present ,"[Minister, assurance, inequities, right, Does, anomalies, system, Government, abolish, that, recall, paraded, Conservative, election, and, present]","[Minister, assurance, inequities, right, Does, anomalies, system, Government, abolish, that, recall, paraded, Conservative, election, and, present]",NNP_Minister NN_assurance NNS_inequities JJ_right VBZ_Does NNS_anomalies NN_system NNP_Government VB_abolish IN_that NN_recall VBD_paraded JJ_Conservative NN_election CC_and JJ_present ,"[Minister, assurance, inequities, right, Does, anomalies, system, Government, abolish, that, recall, paraded, Conservative, election, and, present]",NNP_Minister NN_assurance NNS_inequities JJ_right VBZ_Does NNS_anomalies NN_system NNP_Government VB_abolish IN_that NN_recall VBD_paraded JJ_Conservative NN_election CC_and JJ_present ,"[Minister, assurance, inequities, right, Does, anomalies, system, Government, abolish, that, recall, paraded, Conservative, election, and, present]",NNP_Minister NN_assurance NNS_inequities JJ_right VBZ_Does NNS_anomalies NN_system NNP_Government VB_abolish IN_that NN_recall VBD_paraded JJ_Conservative NN_election CC_and JJ_present ,3,2,2,2,1,2,2,2,2,2
Is he further aware that the right hon. Lady gave the impression that the matter was urgent?,IsVBZ hePRP furtherRB awareJJ thatIN theDT rightJJ honNN LadyNNP gaveVBD theDT impressionNN thatIN theDT matterNN wasVBD urgentJJ ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) nsubj(aware-4, he-2) advmod(aware-4, further-3) mark(gave-10, that-5) det(Lady-9, the-6) amod(Lady-9, right-7) compound(Lady-9, hon.-8) nsubj(gave-10, Lady-9) ccomp(aware-4, gave-10) det(impression-12, the-11) dobj(gave-10, impression-12) mark(urgent-17, that-13) det(matter-15, the-14) nsubj(urgent-17, matter-15) cop(urgent-17, was-16) ccomp(impression-12, urgent-17) punct(aware-4, ?-18)",1,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) advmod(aware, frther) mark(gave, that) det(Lady, the) amod(Lady, right) compond(Lady, hon.) nsbj(gave, Lady) ccomp(aware, gave) det(impression, the) dobj(gave, impression) mark(rgent, that) det(matter, the) nsbj(rgent, matter) cop(rgent, was) ccomp(impression, rgent) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) advmod(JJ,RB) mark(VBD,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) ccomp(JJ,VBD) det(NN,DT) dobj(VBD,NN) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) cop(JJ,VBD) ccomp(NN,JJ) pnct(JJ,JJ)","[impression, aware, right, Lady, he, gave, ROOT, further]","[impression, Lady, gave, ROOT, aware, he, further]",9,"[impression, Lady, gave, ROOT, aware, he, further]","[Lady, gave, aware, impression]",NN_impression NNP_Lady VBD_gave JJ_aware PRP_he JJ_further ,"[impression, Lady, gave, ROOT, aware, he, further]","[impression, Lady, gave, ROOT, aware, he, further]",NN_impression NNP_Lady VBD_gave JJ_aware PRP_he JJ_further ,"[impression, Lady, gave, ROOT, aware, he, further]",NN_impression NNP_Lady VBD_gave JJ_aware PRP_he JJ_further ,"[impression, Lady, gave, ROOT, aware, he, further]",NN_impression NNP_Lady VBD_gave JJ_aware PRP_he JJ_further ,1,2,2,0,0,0,0,0,0,0
I appreciate that the facts of history are not among the strongest pionts of the Labour Party and the hon. Member will appreciate that he referred to the wrong general election.,IPRP appreciateVBP thatIN theDT factsNNS ofIN historyNN areVBP notRB amongIN theDT strongestJJS piontsNNS ofIN theDT LabourNNP PartyNNP andCC theDT honNN MemberNNP willMD appreciateVB thatIN hePRP referredVBD toTO theDT wrongJJ generalJJ electionNN ,"root(ROOT-0, appreciate-2) nsubj(appreciate-2, I-1) mark(pionts-13, that-3) det(facts-5, the-4) nsubj(pionts-13, facts-5) case(history-7, of-6) nmod:of(facts-5, history-7) cop(pionts-13, are-8) neg(pionts-13, not-9) case(pionts-13, among-10) det(pionts-13, the-11) amod(pionts-13, strongest-12) nsubj(appreciate-23, pionts-13) case(Party-17, of-14) det(Party-17, the-15) compound(Party-17, Labour-16) nmod:of(pionts-13, Party-17) cc(Party-17, and-18) det(Member-21, the-19) compound(Member-21, hon.-20) nmod:of(pionts-13, Member-21) conj:and(Party-17, Member-21) aux(appreciate-23, will-22) ccomp(appreciate-2, appreciate-23) mark(referred-26, that-24) nsubj(referred-26, he-25) ccomp(appreciate-23, referred-26) case(election-31, to-27) det(election-31, the-28) amod(election-31, wrong-29) amod(election-31, general-30) nmod:to(referred-26, election-31) punct(appreciate-2, .-32)",1,1,0,"root(ROOT, appreciate) nsbj(appreciate, I) mark(pionts, that) det(facts, the) nsbj(pionts, facts) case(history, of) nmod:of(facts, history) cop(pionts, are) neg(pionts, not) case(pionts, among) det(pionts, the) amod(pionts, strongest) nsbj(appreciate, pionts) case(Party, of) det(Party, the) compond(Party, Labor) nmod:of(pionts, Party) cc(Party, and) det(Member, the) compond(Member, hon.) nmod:of(pionts, Member) conj:and(Party, Member) ax(appreciate, will) ccomp(appreciate, appreciate) mark(referred, that) nsbj(referred, he) ccomp(appreciate, referred) case(election, to) det(election, the) amod(election, wrong) amod(election, general) nmod:to(referred, election) pnct(appreciate, .)","root(,VB) nsbj(VB,PRP) mark(NNS,IN) det(NNS,DT) nsbj(NNS,NNS) case(NN,IN) nmod:of(NNS,NN) cop(NNS,VBP) neg(NNS,RB) case(NNS,IN) det(NNS,DT) amod(NNS,JJS) nsbj(VB,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NNS,NNP) cc(NNP,CC) det(NNP,DT) compond(NNP,NNP) nmod:of(NNS,NNP) conj:and(NNP,NNP) ax(VB,MD) ccomp(VB,VB) mark(VBD,IN) nsbj(VBD,PRP) ccomp(VB,VBD) case(NN,TO) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:to(VBD,NN) pnct(VB,VB)","[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]","[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]",9,"[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]","[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]",VBD_referred PRP_he NNP_Member NNP_Party RB_not CC_and NN_election JJS_strongest VB_appreciate NNS_facts NNS_pionts ,"[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]","[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]",VBD_referred PRP_he NNP_Member NNP_Party RB_not CC_and NN_election JJS_strongest VB_appreciate NNS_facts NNS_pionts ,"[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]",VBD_referred PRP_he NNP_Member NNP_Party RB_not CC_and NN_election JJS_strongest VB_appreciate NNS_facts NNS_pionts ,"[referred, he, Member, Party, not, and, election, strongest, appreciate, facts, pionts]",VBD_referred PRP_he NNP_Member NNP_Party RB_not CC_and NN_election JJS_strongest VB_appreciate NNS_facts NNS_pionts ,2,2,2,1,1,1,1,1,1,2
My right hon. Friend made a specific pledge before the October 1974 general election  but after that we saw the significant increases in income tax that were the responsibility of the Labour Party.,MyPRP$ rightJJ honNN FriendNNP madeVBD aDT specificJJ pledgeNN beforeIN theDT OctoberNNP 1974CD generalJJ electionNN butCC afterIN thatDT wePRP sawVBD theDT significantJJ increasesNNS inIN incomeNN taxNN thatWDT wereVBD theDT responsibilityNN ofIN theDT LabourNNP PartyNNP ,"root(ROOT-0, made-5) nmod:poss(Friend-4, My-1) amod(Friend-4, right-2) compound(Friend-4, hon.-3) nsubj(made-5, Friend-4) det(pledge-8, a-6) amod(pledge-8, specific-7) dobj(made-5, pledge-8) case(election-14, before-9) det(election-14, the-10) compound(election-14, October-11) nummod(election-14, 1974-12) amod(election-14, general-13) nmod:before(made-5, election-14) punct(made-5, ,-15) cc(made-5, but-16) mark(saw-20, after-17) dobj(saw-20, that-18) nsubj(saw-20, we-19) conj:but(made-5, saw-20) det(increases-23, the-21) amod(increases-23, significant-22) dobj(saw-20, increases-23) case(tax-26, in-24) compound(tax-26, income-25) nmod:in(increases-23, tax-26) nsubj(responsibility-30, that-27) cop(responsibility-30, were-28) det(responsibility-30, the-29) acl:relcl(tax-26, responsibility-30) case(Party-34, of-31) det(Party-34, the-32) compound(Party-34, Labour-33) nmod:of(responsibility-30, Party-34) punct(made-5, .-35)",1,0,0,"root(ROOT, made) nmod:poss(Friend, My) amod(Friend, right) compond(Friend, hon.) nsbj(made, Friend) det(pledge, a) amod(pledge, specific) dobj(made, pledge) case(election, before) det(election, the) compond(election, October) nmmod(election, 1974) amod(election, general) nmod:before(made, election) pnct(made, ,) cc(made, bt) mark(saw, after) dobj(saw, that) nsbj(saw, we) conj:bt(made, saw) det(increases, the) amod(increases, significant) dobj(saw, increases) case(tax, in) compond(tax, income) nmod:in(increases, tax) nsbj(responsibility, that) cop(responsibility, were) det(responsibility, the) acl:relcl(tax, responsibility) case(Party, of) det(Party, the) compond(Party, Labor) nmod:of(responsibility, Party) pnct(made, .)","root(,VBD) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmmod(NN,CD) amod(NN,JJ) nmod:before(VBD,NN) pnct(VBD,VBD) cc(VBD,CC) mark(VBD,IN) dobj(VBD,WDT) nsbj(VBD,PRP) conj:bt(VBD,VBD) det(NNS,DT) amod(NNS,JJ) dobj(VBD,NNS) case(NN,IN) compond(NN,NN) nmod:in(NNS,NN) nsbj(NN,WDT) cop(NN,VBD) det(NN,DT) acl:relcl(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VBD,VBD)","[election, right, responsibility, My, Friend, Party, ROOT, made, pledge, but]","[election, responsibility, My, Friend, Party, ROOT, made, pledge, but]",10,"[election, responsibility, My, Friend, Party, ROOT, made, pledge, but]","[election, responsibility, My, Friend, Party, ROOT, made, pledge, but]",NN_election NN_responsibility PRP$_My NNP_Friend NNP_Party VBN_made NN_pledge CC_but ,"[election, responsibility, My, Friend, Party, ROOT, made, pledge, but]","[election, responsibility, My, Friend, Party, ROOT, made, pledge, but]",NN_election NN_responsibility PRP$_My NNP_Friend NNP_Party VBN_made NN_pledge CC_but ,"[election, responsibility, My, Friend, Party, ROOT, made, pledge, but]",NN_election NN_responsibility PRP$_My NNP_Friend NNP_Party VBN_made NN_pledge CC_but ,"[election, responsibility, My, Friend, Party, ROOT, made, pledge, but]",NN_election NN_responsibility PRP$_My NNP_Friend NNP_Party VBN_made NN_pledge CC_but ,1,2,1,0,0,0,0,0,0,0
Is my right hon. Friend aware that for the past 20 years the public have been fed up with hearing politicians talking about the unfairness of the system  yet doing nothing about it?,IsVBZ myPRP$ rightJJ honNN FriendNNP awareVBZ thatIN forIN theDT pastJJ 20CD yearsNNS theDT publicNN haveVBP beenVBN fedVBN upRP withIN hearingNN politiciansNNS talkingVBG aboutIN theDT unfairnessNN ofIN theDT systemNN yetRB doingVBG nothingNN aboutIN itPRP ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(aware-6, Friend-5) mark(fed-17, that-7) case(years-12, for-8) det(years-12, the-9) amod(years-12, past-10) nummod(years-12, 20-11) nmod:for(fed-17, years-12) det(public-14, the-13) nsubjpass(fed-17, public-14) aux(fed-17, have-15) auxpass(fed-17, been-16) ccomp(aware-6, fed-17) compound:prt(fed-17, up-18) case(politicians-21, with-19) compound(politicians-21, hearing-20) nmod:with(fed-17, politicians-21) acl(politicians-21, talking-22) case(unfairness-25, about-23) det(unfairness-25, the-24) nmod:about(talking-22, unfairness-25) case(system-28, of-26) det(system-28, the-27) nmod:of(unfairness-25, system-28) punct(aware-6, ,-29) advmod(doing-31, yet-30) xcomp(aware-6, doing-31) dobj(doing-31, nothing-32) case(it-34, about-33) nmod:about(nothing-32, it-34) punct(aware-6, ?-35)",0,0,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(aware, Friend) mark(fed, that) case(years, for) det(years, the) amod(years, past) nmmod(years, 20) nmod:for(fed, years) det(pblic, the) nsbjpass(fed, pblic) ax(fed, have) axpass(fed, been) ccomp(aware, fed) compond:prt(fed, p) case(politicians, with) compond(politicians, hearing) nmod:with(fed, politicians) acl(politicians, talking) case(nfairness, abot) det(nfairness, the) nmod:abot(talking, nfairness) case(system, of) det(system, the) nmod:of(nfairness, system) pnct(aware, ,) advmod(doing, yet) xcomp(aware, doing) dobj(doing, nothing) case(it, abot) nmod:abot(nothing, it) pnct(aware, ?)","root(,VBZ) cop(VBZ,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBN,IN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:for(VBN,NNS) det(NN,DT) nsbjpass(VBN,NN) ax(VBN,VBP) axpass(VBN,VBN) ccomp(VBZ,VBN) compond:prt(VBN,RP) case(NNS,IN) compond(NNS,NN) nmod:with(VBN,NNS) acl(NNS,VBG) case(NN,IN) det(NN,DT) nmod:abot(VBG,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(VBZ,VBZ) advmod(VBG,RB) xcomp(VBZ,VBG) dobj(VBG,NN) case(PRP,IN) nmod:abot(NN,PRP) pnct(VBZ,VBZ)","[fed, Friend, my, ROOT, aware, right, doing]","[fed, Friend, my, aware, ROOT, doing]",10,"[fed, Friend, my, aware, ROOT, doing]",[ ],VBN_fed NNP_Friend PRP$_my JJ_aware VBG_doing ,"[fed, Friend, my, aware, ROOT, doing]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
I must tell my hon. Friend that if he does not take this matter on board  it will cost us a great deal.,IPRP mustMD tellVB myPRP$ honNN FriendNNP thatIN ifIN hePRP doesVBZ notRB takeVB thisDT matterNN onIN boardNN itPRP willMD costVB usPRP aDT greatJJ dealNN ,"root(ROOT-0, tell-3) nsubj(tell-3, I-1) aux(tell-3, must-2) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) dobj(tell-3, Friend-6) mark(cost-20, that-7) mark(take-12, if-8) nsubj(take-12, he-9) aux(take-12, does-10) neg(take-12, not-11) advcl(cost-20, take-12) det(matter-14, this-13) dobj(take-12, matter-14) case(board-16, on-15) nmod:on(take-12, board-16) punct(cost-20, ,-17) nsubj(cost-20, it-18) aux(cost-20, will-19) ccomp(tell-3, cost-20) iobj(cost-20, us-21) det(deal-24, a-22) amod(deal-24, great-23) dobj(cost-20, deal-24) punct(tell-3, .-25)",1,0,0,"root(ROOT, tell) nsbj(tell, I) ax(tell, mst) nmod:poss(Friend, my) compond(Friend, hon.) dobj(tell, Friend) mark(cost, that) mark(take, if) nsbj(take, he) ax(take, does) neg(take, not) advcl(cost, take) det(matter, this) dobj(take, matter) case(board, on) nmod:on(take, board) pnct(cost, ,) nsbj(cost, it) ax(cost, will) ccomp(tell, cost) iobj(cost, s) det(deal, a) amod(deal, great) dobj(cost, deal) pnct(tell, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) dobj(VB,NNP) mark(VB,IN) mark(VB,IN) nsbj(VB,PRP) ax(VB,VBZ) neg(VB,RB) advcl(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:on(VB,NN) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) iobj(VB,PRP) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(VB,VB)","[matter, tell, cost, board, I, Friend, he, take, my, not, ROOT]","[matter, tell, cost, board, I, Friend, he, take, my, not, ROOT]",11,"[I, Friend, my, tell, cost, ROOT]","[I, Friend, my, tell, cost, ROOT]",NN_matter VB_tell NN_cost NN_board PRP_I NNP_Friend PRP_he VB_take PRP$_my RB_not ,"[matter, tell, cost, board, I, Friend, he, take, my, not, ROOT]","[matter, tell, cost, board, I, Friend, he, take, my, not, ROOT]",NN_matter VB_tell NN_cost NN_board PRP_I NNP_Friend PRP_he VB_take PRP$_my RB_not ,"[matter, tell, cost, board, I, Friend, he, take, my, not, ROOT]",NN_matter VB_tell NN_cost NN_board PRP_I NNP_Friend PRP_he VB_take PRP$_my RB_not ,"[matter, tell, cost, board, I, Friend, he, take, my, not, ROOT]",NN_matter VB_tell NN_cost NN_board PRP_I NNP_Friend PRP_he VB_take PRP$_my RB_not ,2,2,2,2,1,2,0,0,0,2
Is the Secretary of State aware that his decision will be a bitter blow to the housing hopes of so many people desperately waiting in the housing queue  and that their misery will continue as a result of his statement?,IsVBZ theDT SecretaryNNP ofIN StateNNP awareNN thatIN hisPRP$ decisionNN willMD beVB aDT bitterJJ blowNN toTO theDT housingNN hopesNNS ofIN soRB manyJJ peopleNNS desperatelyRB waitingVBG inIN theDT housingNN queueNN andCC thatIN theirPRP$ miseryNN willMD continueVB asIN aDT resultNN ofIN hisPRP$ statementNN ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) det(Secretary-3, the-2) nsubj(aware-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(blow-14, that-7) nmod:poss(decision-9, his-8) nsubj(blow-14, decision-9) aux(blow-14, will-10) cop(blow-14, be-11) det(blow-14, a-12) amod(blow-14, bitter-13) ccomp(aware-6, blow-14) case(hopes-18, to-15) det(hopes-18, the-16) compound(hopes-18, housing-17) nmod:to(blow-14, hopes-18) case(people-22, of-19) advmod(many-21, so-20) amod(people-22, many-21) nmod:of(hopes-18, people-22) advmod(waiting-24, desperately-23) acl(people-22, waiting-24) case(queue-28, in-25) det(queue-28, the-26) compound(queue-28, housing-27) nmod:in(waiting-24, queue-28) punct(aware-6, ,-29) cc(aware-6, and-30) mark(continue-35, that-31) nmod:poss(misery-33, their-32) nsubj(continue-35, misery-33) aux(continue-35, will-34) conj:and(aware-6, continue-35) case(result-38, as-36) det(result-38, a-37) nmod:as(continue-35, result-38) case(statement-41, of-39) nmod:poss(statement-41, his-40) nmod:of(result-38, statement-41) punct(aware-6, ?-42)",1,0,0,"root(ROOT, aware) cop(aware, Is) det(Secretary, the) nsbj(aware, Secretary) case(State, of) nmod:of(Secretary, State) mark(blow, that) nmod:poss(decision, his) nsbj(blow, decision) ax(blow, will) cop(blow, be) det(blow, a) amod(blow, bitter) ccomp(aware, blow) case(hopes, to) det(hopes, the) compond(hopes, hosing) nmod:to(blow, hopes) case(people, of) advmod(many, so) amod(people, many) nmod:of(hopes, people) advmod(waiting, desperately) acl(people, waiting) case(qee, in) det(qee, the) compond(qee, hosing) nmod:in(waiting, qee) pnct(aware, ,) cc(aware, and) mark(contine, that) nmod:poss(misery, their) nsbj(contine, misery) ax(contine, will) conj:and(aware, contine) case(reslt, as) det(reslt, a) nmod:as(contine, reslt) case(statement, of) nmod:poss(statement, his) nmod:of(reslt, statement) pnct(aware, ?)","root(,NN) cop(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(NN,IN) nmod:poss(NN,PRP$) nsbj(NN,NN) ax(NN,MD) cop(NN,VB) det(NN,DT) amod(NN,JJ) ccomp(NN,NN) case(NNS,TO) det(NNS,DT) compond(NNS,NN) nmod:to(NN,NNS) case(NNS,IN) advmod(JJ,RB) amod(NNS,JJ) nmod:of(NNS,NNS) advmod(VBG,RB) acl(NNS,VBG) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(VBG,NN) pnct(NN,NN) cc(NN,CC) mark(VB,IN) nmod:poss(NN,PRP$) nsbj(VB,NN) ax(VB,MD) conj:and(NN,VB) case(NN,IN) det(NN,DT) nmod:as(VB,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) pnct(NN,NN)","[blow, aware, ROOT, State, and, Secretary]","[blow, aware, State, and, his, statement, decision, Secretary, ROOT, his, result]",13,"[blow, aware, State, and, his, statement, decision, Secretary, ROOT, his, result]","[statement, decision, blow, his, result, his]",NN_blow JJ_aware NNP_State CC_and PRP$_his NN_statement NN_decision NNP_Secretary PRP$_his NN_result ,"[blow, aware, State, and, his, statement, decision, Secretary, ROOT, his, result]","[blow, aware, State, and, his, statement, decision, Secretary, ROOT, his, result]",NN_blow JJ_aware NNP_State CC_and PRP$_his NN_statement NN_decision NNP_Secretary PRP$_his NN_result ,"[blow, aware, State, and, his, statement, decision, Secretary, ROOT, his, result]",NN_blow JJ_aware NNP_State CC_and PRP$_his NN_statement NN_decision NNP_Secretary PRP$_his NN_result ,"[blow, aware, State, and, his, statement, decision, Secretary, ROOT, his, result]",NN_blow JJ_aware NNP_State CC_and PRP$_his NN_statement NN_decision NNP_Secretary PRP$_his NN_result ,3,2,2,2,1,2,2,2,2,2
It is unthinkable that the Government could countenance a general attitude that allowed cash limits to be exceeded by about £180 million with no attempt to do anything about it.,ItPRP isVBZ unthinkableJJ thatIN theDT GovernmentNNP couldMD countenanceVB aDT generalJJ attitudeNN thatWDT allowedVBD cashNN limitsNNS toTO beVB exceededVBN byIN aboutIN £180NNP millionCD withIN noDT attemptNN toTO doVB anythingNN aboutIN itPRP ,"root(ROOT-0, unthinkable-3) nsubj(unthinkable-3, It-1) cop(unthinkable-3, is-2) mark(countenance-8, that-4) det(Government-6, the-5) nsubj(countenance-8, Government-6) aux(countenance-8, could-7) ccomp(unthinkable-3, countenance-8) det(attitude-11, a-9) amod(attitude-11, general-10) dobj(countenance-8, attitude-11) nsubj(allowed-13, that-12) acl:relcl(attitude-11, allowed-13) compound(limits-15, cash-14) dobj(allowed-13, limits-15) mark(exceeded-18, to-16) auxpass(exceeded-18, be-17) xcomp(allowed-13, exceeded-18) case(million-23, by-19) advmod(million-23, about-20) compound(million-23, #-21) compound(million-23, 180-22) nmod:agent(exceeded-18, million-23) case(attempt-26, with-24) neg(attempt-26, no-25) nmod:with(exceeded-18, attempt-26) mark(do-28, to-27) acl(attempt-26, do-28) dobj(do-28, anything-29) case(it-31, about-30) nmod:about(anything-29, it-31) punct(unthinkable-3, .-32)",1,0,0,"root(ROOT, nthinkable) nsbj(nthinkable, It) cop(nthinkable, is) mark(contenance, that) det(Government, the) nsbj(contenance, Government) ax(contenance, cold) ccomp(nthinkable, contenance) det(attitde, a) amod(attitde, general) dobj(contenance, attitde) nsbj(allowed, that) acl:relcl(attitde, allowed) compond(limits, cash) dobj(allowed, limits) mark(exceeded, to) axpass(exceeded, be) xcomp(allowed, exceeded) case(million, by) advmod(million, abot) compond(million, #) compond(million, 180) nmod:agent(exceeded, million) case(attempt, with) neg(attempt, no) nmod:with(exceeded, attempt) mark(do, to) acl(attempt, do) dobj(do, anything) case(it, abot) nmod:abot(anything, it) pnct(nthinkable, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VB,WDT) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) ccomp(JJ,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) nsbj(VBD,WDT) acl:relcl(NN,VBD) compond(NNS,NN) dobj(VBD,NNS) mark(VBN,TO) axpass(VBN,VB) xcomp(VBD,VBN) case(CD,IN) advmod(CD,IN) compond(CD,CD) compond(CD,CD) nmod:agent(VBN,CD) case(NN,IN) neg(NN,DT) nmod:with(VBN,NN) mark(VB,TO) acl(NN,VB) VBbj(VB,NN) case(PRP,IN) nmod:abot(NN,PRP) pnct(JJ,JJ)","[attitude, Government, unthinkable, countenance]","[attitude, Government, unthinkable, countenance]",3,[ ],[ ],NN_attitude NNP_Government JJ_unthinkable VB_countenance ,"[attitude, Government, unthinkable, countenance]","[attitude, Government, unthinkable, countenance]",NN_attitude NNP_Government JJ_unthinkable VB_countenance ,"[attitude, Government, unthinkable, countenance]",NN_attitude NNP_Government JJ_unthinkable VB_countenance ,"[attitude, Government, unthinkable, countenance]",NN_attitude NNP_Government JJ_unthinkable VB_countenance ,2,2,2,2,1,2,2,2,2,2
The hon. Gentleman has no concept of the effect of attitudes of this sort on the private sector  and he should find out what is happening as a result of the attitude that lay behind so many of the previous Government's policies in this sphere.,TheDT honNN GentlemanNNP hasVBZ noDT conceptNN ofIN theDT effectNN ofIN attitudesNNS ofIN thisDT sortNN onIN theDT privateJJ sectorNN andCC hePRP shouldMD findVB outRP whatWP isVBZ happeningVBG asIN aDT resultNN ofIN theDT attitudeNN thatWDT layVBD behindIN soRB manyJJ ofIN theDT previousJJ GovernmentNNP 'sPOS policiesNNS inIN thisDT sphereNN ,"root(ROOT-0, has-4) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(has-4, Gentleman-3) neg(concept-6, no-5) dobj(has-4, concept-6) case(effect-9, of-7) det(effect-9, the-8) nmod:of(concept-6, effect-9) case(attitudes-11, of-10) nmod:of(effect-9, attitudes-11) case(sort-14, of-12) det(sort-14, this-13) nmod:of(attitudes-11, sort-14) case(sector-18, on-15) det(sector-18, the-16) amod(sector-18, private-17) nmod:on(attitudes-11, sector-18) punct(has-4, ,-19) cc(has-4, and-20) nsubj(find-23, he-21) aux(find-23, should-22) conj:and(has-4, find-23) compound:prt(find-23, out-24) nsubj(happening-27, what-25) aux(happening-27, is-26) ccomp(find-23, happening-27) case(result-30, as-28) det(result-30, a-29) nmod:as(happening-27, result-30) case(attitude-33, of-31) det(attitude-33, the-32) nmod:of(result-30, attitude-33) nsubj(lay-35, that-34) acl:relcl(attitude-33, lay-35) case(many-38, behind-36) advmod(many-38, so-37) nmod:behind(lay-35, many-38) case(policies-44, of-39) det(Government-42, the-40) amod(Government-42, previous-41) nmod:poss(policies-44, Government-42) case(Government-42, 's-43) nmod:of(many-38, policies-44) case(sphere-47, in-45) det(sphere-47, this-46) nmod:in(policies-44, sphere-47) punct(has-4, .-48)",1,0,0,"root(ROOT, has) det(Gentleman, The) compond(Gentleman, hon.) nsbj(has, Gentleman) neg(concept, no) dobj(has, concept) case(effect, of) det(effect, the) nmod:of(concept, effect) case(attitdes, of) nmod:of(effect, attitdes) case(sort, of) det(sort, this) nmod:of(attitdes, sort) case(sector, on) det(sector, the) amod(sector, private) nmod:on(attitdes, sector) pnct(has, ,) cc(has, and) nsbj(find, he) ax(find, shold) conj:and(has, find) compond:prt(find, ot) nsbj(happening, what) ax(happening, is) ccomp(find, happening) case(reslt, as) det(reslt, a) nmod:as(happening, reslt) case(attitde, of) det(attitde, the) nmod:of(reslt, attitde) nsbj(lay, that) acl:relcl(attitde, lay) case(many, behind) advmod(many, so) nmod:behind(lay, many) case(policies, of) det(Government, the) amod(Government, previos) nmod:poss(policies, Government) ""case(Government, s)"", nmod:of(many, policies) case(sphere, in) det(sphere, this) nmod:in(policies, sphere) pnct(has, .)","root(,VBZ) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) neg(NN,DT) dobj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNS,IN) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(NNS,NN) pnct(VBZ,VBZ) cc(VBZ,CC) nsbj(VB,PRP) ax(VB,MD) conj:and(VBZ,VB) compond:prt(VB,RP) nsbj(VBG,WP) ax(VBG,VBZ) ccomp(VB,VBG) case(NN,IN) det(NN,DT) nmod:as(VBG,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) nsbj(VBD,WDT) acl:relcl(NN,VBD) case(JJ,IN) advmod(JJ,RB) nmod:behind(VBD,JJ) case(NNS,IN) det(NNP,DT) amod(NNP,JJ) nmod:poss(NNS,NNP) case(NNP,POS) nmod:of(JJ,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) pnct(VBZ,VBZ)","[he, happening, Government, and, policies, Gentleman, find, has, many, ROOT, sphere, concept, previous]","[he, happening, Government, and, policies, Gentleman, find, has, many, ROOT, sphere, concept, previous]",4,"[Government, and, policies, Gentleman, has, many, ROOT, sphere, concept, previous]","[Government, and, policies, Gentleman, has, many, ROOT, sphere, concept, previous]",PRP_he VBG_happening NNP_Government CC_and NNS_policies NNP_Gentleman VB_find VBZ_has JJ_many NN_sphere NN_concept JJ_previous ,"[he, happening, Government, and, policies, Gentleman, find, has, many, ROOT, sphere, concept, previous]","[he, happening, Government, and, policies, Gentleman, find, has, many, ROOT, sphere, concept, previous]",PRP_he VBG_happening NNP_Government CC_and NNS_policies NNP_Gentleman VB_find VBZ_has JJ_many NN_sphere NN_concept JJ_previous ,"[he, happening, Government, and, policies, Gentleman, find, has, many, ROOT, sphere, concept, previous]",PRP_he VBG_happening NNP_Government CC_and NNS_policies NNP_Gentleman VB_find VBZ_has JJ_many NN_sphere NN_concept JJ_previous ,"[he, happening, Government, and, policies, Gentleman, find, has, many, ROOT, sphere, concept, previous]",PRP_he VBG_happening NNP_Government CC_and NNS_policies NNP_Gentleman VB_find VBZ_has JJ_many NN_sphere NN_concept JJ_previous ,2,2,2,0,0,0,2,2,2,2
Is he aware that in spite of the difficulties he will have widespread support if he is somehow able to control local authority expenditure from going over and above the limits announced by the Government at the beginning of the year?,IsVBZ hePRP awareJJ thatIN inIN spiteNN ofIN theDT difficultiesNNS hePRP willMD haveVB widespreadJJ supportNN ifIN hePRP isVBZ somehowRB ableJJ toTO controlVB localJJ authorityNN expenditureNN fromIN goingVBG overIN andCC aboveIN theDT limitsNNS announcedVBN byIN theDT GovernmentNNP atIN theDT beginningNN ofIN theDT yearNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) dobj(aware-3, that-4) case(spite-6, in-5) nmod:in(that-4, spite-6) case(difficulties-9, of-7) det(difficulties-9, the-8) nmod:of(spite-6, difficulties-9) nsubj(have-12, he-10) aux(have-12, will-11) acl:relcl(difficulties-9, have-12) amod(support-14, widespread-13) dobj(have-12, support-14) mark(able-19, if-15) nsubj(able-19, he-16) cop(able-19, is-17) advmod(able-19, somehow-18) advcl(have-12, able-19) mark(control-21, to-20) xcomp(able-19, control-21) amod(expenditure-24, local-22) compound(expenditure-24, authority-23) dobj(control-21, expenditure-24) mark(going-26, from-25) advcl(control-21, going-26) advmod(going-26, over-27) cc(going-26, and-28) case(limits-31, above-29) det(limits-31, the-30) advcl(control-21, limits-31) conj:and(going-26, limits-31) acl(limits-31, announced-32) case(Government-35, by-33) det(Government-35, the-34) nmod:by(announced-32, Government-35) case(beginning-38, at-36) det(beginning-38, the-37) nmod:at(announced-32, beginning-38) case(year-41, of-39) det(year-41, the-40) nmod:of(beginning-38, year-41) punct(aware-3, ?-42)",1,0,1,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) dobj(aware, that) case(spite, in) nmod:in(that, spite) case(difficlties, of) det(difficlties, the) nmod:of(spite, difficlties) nsbj(have, he) ax(have, will) acl:relcl(difficlties, have) amod(spport, widespread) dobj(have, spport) mark(able, if) nsbj(able, he) cop(able, is) advmod(able, somehow) advcl(have, able) mark(control, to) xcomp(able, control) amod(expenditre, local) compond(expenditre, athority) dobj(control, expenditre) mark(going, from) advcl(control, going) advmod(going, over) cc(going, and) case(limits, above) det(limits, the) advcl(control, limits) conj:and(going, limits) acl(limits, annonced) case(Government, by) det(Government, the) nmod:by(annonced, Government) case(beginning, at) det(beginning, the) nmod:at(annonced, beginning) case(year, of) det(year, the) nmod:of(beginning, year) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) dobj(JJ,IN) case(NN,IN) nmod:in(IN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NNS,VB) amod(NN,JJ) dobj(VB,NN) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) advcl(VB,JJ) mark(VB,TO) xcomp(JJ,VB) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) mark(VBG,IN) advcl(VB,VBG) advmod(VBG,IN) cc(VBG,CC) case(NNS,IN) det(NNS,DT) advcl(VB,NNS) conj:and(VBG,NNS) acl(NNS,VBN) case(NNP,IN) det(NNP,DT) nmod:by(VBN,NNP) case(NN,IN) det(NN,DT) nmod:at(VBN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(JJ,JJ)","[limits, difficulties, somehow, support, able, have, he, that, Government, he, aware, he, control, ROOT, beginning, announced]","[limits, difficulties, somehow, support, able, have, he, that, Government, he, aware, he, control, ROOT, beginning, announced]",4,"[control, limits, somehow, aware, he, announced, able, have, he, ROOT, beginning, that, Government]","[announced, beginning, limits, Government]",NNS_limits NNS_difficulties RB_somehow NN_support JJ_able VBP_have PRP_he IN_that NNP_Government PRP_he JJ_aware PRP_he NN_control NN_beginning JJ_announced ,"[limits, difficulties, somehow, support, able, have, he, that, Government, he, aware, he, control, ROOT, beginning, announced]","[limits, difficulties, somehow, support, able, have, he, that, Government, he, aware, he, control, ROOT, beginning, announced]",NNS_limits NNS_difficulties RB_somehow NN_support JJ_able VBP_have PRP_he IN_that NNP_Government PRP_he JJ_aware PRP_he NN_control NN_beginning JJ_announced ,"[limits, difficulties, somehow, support, able, have, he, that, Government, he, aware, he, control, ROOT, beginning, announced]",NNS_limits NNS_difficulties RB_somehow NN_support JJ_able VBP_have PRP_he IN_that NNP_Government PRP_he JJ_aware PRP_he NN_control NN_beginning JJ_announced ,"[limits, difficulties, somehow, support, able, have, he, that, Government, he, aware, he, control, ROOT, beginning, announced]",NNS_limits NNS_difficulties RB_somehow NN_support JJ_able VBP_have PRP_he IN_that NNP_Government PRP_he JJ_aware PRP_he NN_control NN_beginning JJ_announced ,2,1,2,2,1,2,2,2,2,2
Why has the Secretary of State gone back on his public and categorical rejection of such a moratorium only last month?,WhyWRB hasVBZ theDT SecretaryNNP ofIN StateNNP goneVBN backRB onIN hisPRP$ publicJJ andCC categoricalJJ rejectionNN ofIN suchJJ aDT moratoriumNN onlyRB lastJJ monthNN ,"root(ROOT-0, has-2) advmod(has-2, Why-1) det(Secretary-4, the-3) nsubj(gone-7, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) ccomp(has-2, gone-7) advmod(gone-7, back-8) case(public-11, on-9) nmod:poss(public-11, his-10) nmod:on(gone-7, public-11) cc(public-11, and-12) amod(rejection-14, categorical-13) nmod:on(gone-7, rejection-14) conj:and(public-11, rejection-14) case(moratorium-18, of-15) det:predet(moratorium-18, such-16) det(moratorium-18, a-17) nmod:of(rejection-14, moratorium-18) advmod(month-21, only-19) amod(month-21, last-20) nmod:tmod(gone-7, month-21) punct(has-2, ?-22)",1,1,0,"root(ROOT, has) advmod(has, Why) det(Secretary, the) nsbj(gone, Secretary) case(State, of) nmod:of(Secretary, State) ccomp(has, gone) advmod(gone, back) case(pblic, on) nmod:poss(pblic, his) nmod:on(gone, pblic) cc(pblic, and) amod(rejection, categorical) nmod:on(gone, rejection) conj:and(pblic, rejection) case(moratorim, of) det:predet(moratorim, sch) det(moratorim, a) nmod:of(rejection, moratorim) advmod(month, only) amod(month, last) nmod:tmod(gone, month) pnct(has, ?)","root(,VBZ) advmod(VBZ,WRB) det(NNP,DT) nsbj(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) ccomp(VBZ,VBN) advmod(VBN,RB) case(JJ,IN) nmod:poss(JJ,PRP$) nmod:on(VBN,JJ) cc(JJ,CC) amod(NN,JJ) nmod:on(VBN,NN) conj:and(JJ,NN) case(NN,IN) det:predet(NN,JJ) det(NN,DT) nmod:of(NN,NN) advmod(NN,RB) amod(NN,JJ) nmod:tmod(VBN,NN) pnct(VBZ,VBZ)","[State, public, has, Secretary, rejection, gone, month, back]","[and, State, public, has, Secretary, his, rejection, gone, month, back]",6,"[and, State, public, has, Secretary, his, rejection, gone, month, back]","[and, State, public, has, Secretary, his, rejection, gone, month, back]",CC_and NNP_State JJ_public VBZ_has NNP_Secretary PRP$_his NN_rejection VBN_gone NN_month JJ_back ,"[and, State, public, has, Secretary, his, rejection, gone, month, back]","[and, State, public, has, Secretary, his, rejection, gone, month, back]",CC_and NNP_State JJ_public VBZ_has NNP_Secretary PRP$_his NN_rejection VBN_gone NN_month JJ_back ,"[and, State, public, has, Secretary, his, rejection, gone, month, back]",CC_and NNP_State JJ_public VBZ_has NNP_Secretary PRP$_his NN_rejection VBN_gone NN_month JJ_back ,"[and, State, public, has, Secretary, his, rejection, gone, month, back]",CC_and NNP_State JJ_public VBZ_has NNP_Secretary PRP$_his NN_rejection VBN_gone NN_month JJ_back ,2,2,2,2,1,2,2,2,2,2
Is he aware of the indignity suffered by over 1 million people in the United Kingdom who have homes without inside toilets or bathrooms?,IsVBZ hePRP awareJJ ofIN theDT indignityNN sufferedVBN byIN overIN 1CD millionCD peopleNNS inIN theDT UnitedNNP KingdomNNP whoWP haveVBP homesNNS withoutIN insideJJ toiletsNNS orCC bathroomsNNS ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) case(indignity-6, of-4) det(indignity-6, the-5) nmod:of(aware-3, indignity-6) acl(indignity-6, suffered-7) case(people-12, by-8) advmod(million-11, over-9) compound(million-11, 1-10) nummod(people-12, million-11) nmod:by(suffered-7, people-12) case(Kingdom-16, in-13) det(Kingdom-16, the-14) compound(Kingdom-16, United-15) nmod:in(people-12, Kingdom-16) nsubj(have-18, who-17) acl:relcl(people-12, have-18) dobj(have-18, homes-19) case(toilets-22, without-20) amod(toilets-22, inside-21) nmod:without(have-18, toilets-22) cc(toilets-22, or-23) nmod:without(have-18, bathrooms-24) conj:or(toilets-22, bathrooms-24) punct(aware-3, ?-25)",0,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) case(indignity, of) det(indignity, the) nmod:of(aware, indignity) acl(indignity, sffered) case(people, by) advmod(million, over) compond(million, 1) nmmod(people, million) nmod:by(sffered, people) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) nmod:in(people, Kingdom) nsbj(have, who) acl:relcl(people, have) dobj(have, homes) case(toilets, withot) amod(toilets, inside) nmod:withot(have, toilets) cc(toilets, or) nmod:withot(have, bathrooms) conj:or(toilets, bathrooms) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) case(NN,IN) det(NN,DT) nmod:of(JJ,NN) acl(NN,VBN) case(NNS,IN) advmod(CD,IN) compond(CD,CD) nmmod(NNS,CD) nmod:by(VBN,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NNS,NNP) nsbj(VBP,WP) acl:relcl(NNS,VBP) dobj(VBP,NNS) case(NNS,IN) amod(NNS,JJ) nmod:withot(VBP,NNS) cc(NNS,CC) nmod:withot(VBP,NNS) conj:or(NNS,NNS) pnct(JJ,JJ)","[he, ROOT, indignity, aware]","[he, ROOT, indignity, aware]",11,"[he, ROOT, indignity, aware]",[ ],PRP_he NN_indignity JJ_aware ,"[he, ROOT, indignity, aware]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my right hon. Friend accept that there is a certain latent injustice in applying this moratorium simultaneously to underspenders and overspenders?,DoesNNP myPRP$ rightJJ honNN FriendNNP acceptVBZ thatIN thereEX isVBZ aDT certainJJ latentJJ injusticeNN inIN applyingVBG thisDT moratoriumNN simultaneouslyRB toTO underspendersNNS andCC overspendersNNS ,"root(ROOT-0, accept-6) aux(accept-6, Does-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(accept-6, Friend-5) mark(is-9, that-7) expl(is-9, there-8) ccomp(accept-6, is-9) det(injustice-13, a-10) amod(injustice-13, certain-11) amod(injustice-13, latent-12) nsubj(is-9, injustice-13) mark(applying-15, in-14) advcl(is-9, applying-15) det(moratorium-17, this-16) dobj(applying-15, moratorium-17) advmod(applying-15, simultaneously-18) case(underspenders-20, to-19) nmod:to(applying-15, underspenders-20) cc(underspenders-20, and-21) nmod:to(applying-15, overspenders-22) conj:and(underspenders-20, overspenders-22) punct(accept-6, ?-23)",0,1,0,"root(ROOT, accept) ax(accept, Does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(accept, Friend) mark(is, that) expl(is, there) ccomp(accept, is) det(injstice, a) amod(injstice, certain) amod(injstice, latent) nsbj(is, injstice) mark(applying, in) advcl(is, applying) det(moratorim, this) dobj(applying, moratorim) advmod(applying, simltaneosly) case(nderspenders, to) nmod:to(applying, nderspenders) cc(nderspenders, and) nmod:to(applying, overspenders) conj:and(nderspenders, overspenders) pnct(accept, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBZ,VBZ) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nsbj(VBZ,NN) mark(VBG,IN) advcl(VBZ,VBG) det(NN,DT) dobj(VBG,NN) advmod(VBG,RB) case(NNS,TO) nmod:to(VBG,NNS) cc(NNS,CC) nmod:to(VBG,NNS) conj:and(NNS,NNS) pnct(VBZ,VBZ)","[accept, is, my, ROOT, right, Friend]","[ROOT, Friend, my, is, accept]",11,[ ],[ ],NNP_Friend PRP$_my VBZ_is VBD_accept ,"[ROOT, Friend, my, is, accept]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
He is right  but the longer I allowed the situation to continue the worse might have become the gap between the overspenders and the underspenders.,HePRP isVBZ rightJJ butCC theDT longerJJR IPRP allowedVBD theDT situationNN toTO continueVB theDT worseJJR mightMD haveVB becomeVBN theDT gapNN betweenIN theDT overspendersNNS andCC theDT underspendersNNS ,"root(ROOT-0, right-3) nsubj(right-3, He-1) cop(right-3, is-2) punct(right-3, ,-4) cc(right-3, but-5) det(longer-7, the-6) dep(allowed-9, longer-7) nsubj(allowed-9, I-8) conj:but(right-3, allowed-9) det(situation-11, the-10) dobj(allowed-9, situation-11) mark(continue-13, to-12) xcomp(allowed-9, continue-13) det(worse-15, the-14) nsubj(become-18, worse-15) aux(become-18, might-16) aux(become-18, have-17) ccomp(continue-13, become-18) det(gap-20, the-19) xcomp(become-18, gap-20) case(overspenders-23, between-21) det(overspenders-23, the-22) nmod:between(gap-20, overspenders-23) cc(overspenders-23, and-24) det(underspenders-26, the-25) nmod:between(gap-20, underspenders-26) conj:and(overspenders-23, underspenders-26) punct(right-3, .-27)",1,0,0,"root(ROOT, right) nsbj(right, He) cop(right, is) pnct(right, ,) cc(right, bt) det(longer, the) dep(allowed, longer) nsbj(allowed, I) conj:bt(right, allowed) det(sitation, the) dobj(allowed, sitation) mark(contine, to) xcomp(allowed, contine) det(worse, the) nsbj(become, worse) ax(become, might) ax(become, have) ccomp(contine, become) det(gap, the) xcomp(become, gap) case(overspenders, between) det(overspenders, the) nmod:between(gap, overspenders) cc(overspenders, and) det(nderspenders, the) nmod:between(gap, nderspenders) conj:and(overspenders, nderspenders) pnct(right, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) pnct(JJ,JJ) cc(JJ,CC) det(JJR,DT) dep(VBD,JJR) nsbj(VBD,PRP) conj:bt(JJ,VBD) det(NN,DT) dobj(VBD,NN) mark(VB,TO) xcomp(VBD,VB) det(JJR,DT) nsbj(VBN,JJR) ax(VBN,MD) ax(VBN,VB) ccomp(VB,VBN) det(NN,DT) xcomp(VBN,NN) case(NNS,IN) det(NNS,DT) nmod:between(NN,NNS) cc(NNS,CC) det(NNS,DT) nmod:between(NN,NNS) conj:and(NNS,NNS) pnct(JJ,JJ)","[ROOT, He, but, right]","[ROOT, He, but, right]",14,"[ROOT, He, but, right]",[ ],PRP_He CC_but JJ_right ,"[ROOT, He, but, right]","[ROOT, He, but, right]",PRP_He CC_but JJ_right ,"[ROOT, He, but, right]",PRP_He CC_but JJ_right ,"[ROOT, He, but, right]",PRP_He CC_but JJ_right ,1,1,2,1,1,1,1,1,1,2
Is the Secretary of State aware that his moratorium has also caused great difficulties for individuals who are seeking mortgages from local authorities for private house purchase?,IsVBZ theDT SecretaryNNP ofIN StateNNP awareNN thatIN hisPRP$ moratoriumNN hasVBZ alsoRB causedVBN greatJJ difficultiesNNS forIN individualsNNS whoWP areVBP seekingVBG mortgagesNNS fromIN localJJ authoritiesNNS forIN privateJJ houseNN purchaseNN ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) det(Secretary-3, the-2) nsubj(aware-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(caused-12, that-7) nmod:poss(moratorium-9, his-8) nsubj(caused-12, moratorium-9) aux(caused-12, has-10) advmod(caused-12, also-11) ccomp(aware-6, caused-12) amod(difficulties-14, great-13) dobj(caused-12, difficulties-14) case(individuals-16, for-15) nmod:for(difficulties-14, individuals-16) nsubj(seeking-19, who-17) aux(seeking-19, are-18) acl:relcl(individuals-16, seeking-19) dobj(seeking-19, mortgages-20) case(authorities-23, from-21) amod(authorities-23, local-22) nmod:from(seeking-19, authorities-23) case(purchase-27, for-24) amod(purchase-27, private-25) compound(purchase-27, house-26) nmod:for(authorities-23, purchase-27) punct(aware-6, ?-28)",1,1,0,"root(ROOT, aware) cop(aware, Is) det(Secretary, the) nsbj(aware, Secretary) case(State, of) nmod:of(Secretary, State) mark(cased, that) nmod:poss(moratorim, his) nsbj(cased, moratorim) ax(cased, has) advmod(cased, also) ccomp(aware, cased) amod(difficlties, great) dobj(cased, difficlties) case(individals, for) nmod:for(difficlties, individals) nsbj(seeking, who) ax(seeking, are) acl:relcl(individals, seeking) dobj(seeking, mortgages) case(athorities, from) amod(athorities, local) nmod:from(seeking, athorities) case(prchase, for) amod(prchase, private) compond(prchase, hose) nmod:for(athorities, prchase) pnct(aware, ?)","root(,NN) cop(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(VBN,IN) nmod:poss(NN,PRP$) nsbj(VBN,NN) ax(VBN,VBZ) advmod(VBN,RB) ccomp(NN,VBN) amod(NNS,JJ) dobj(VBN,NNS) case(NNS,IN) nmod:for(NNS,NNS) nsbj(VBG,WP) ax(VBG,VBP) acl:relcl(NNS,VBG) dobj(VBG,NNS) case(NNS,IN) amod(NNS,JJ) nmod:from(VBG,NNS) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:for(NNS,NN) pnct(NN,NN)","[aware, ROOT, State, caused, Secretary]","[caused, Secretary, moratorium, aware, ROOT, State, his]",15,"[caused, Secretary, moratorium, aware, ROOT, State, his]","[caused, his, moratorium]",VBN_caused NNP_Secretary NN_moratorium JJ_aware NNP_State PRP$_his ,"[caused, Secretary, moratorium, aware, ROOT, State, his]","[caused, Secretary, moratorium, aware, ROOT, State, his]",VBN_caused NNP_Secretary NN_moratorium JJ_aware NNP_State PRP$_his ,"[caused, Secretary, moratorium, aware, ROOT, State, his]",VBN_caused NNP_Secretary NN_moratorium JJ_aware NNP_State PRP$_his ,"[caused, Secretary, moratorium, aware, ROOT, State, his]",VBN_caused NNP_Secretary NN_moratorium JJ_aware NNP_State PRP$_his ,3,2,2,0,0,0,0,0,0,0
Why does the right hon. Gentleman mislead the House when he refers to not having brought about a reduction in the existing programme?,WhyWRB doesVBZ theDT rightJJ honNN GentlemanNNP misleadVBD theDT HouseNNP whenWRB hePRP refersVBZ toTO notRB havingVBG broughtVBN aboutIN aDT reductionNN inIN theDT existingVBG programmeNN ,"root(ROOT-0, mislead-7) advmod(mislead-7, Why-1) aux(mislead-7, does-2) det(Gentleman-6, the-3) amod(Gentleman-6, right-4) compound(Gentleman-6, hon.-5) nsubj(mislead-7, Gentleman-6) det(House-9, the-8) dobj(mislead-7, House-9) advmod(refers-12, when-10) nsubj(refers-12, he-11) advcl(mislead-7, refers-12) mark(brought-16, to-13) neg(brought-16, not-14) aux(brought-16, having-15) advcl(refers-12, brought-16) case(reduction-19, about-17) det(reduction-19, a-18) nmod:about(brought-16, reduction-19) case(programme-23, in-20) det(programme-23, the-21) amod(programme-23, existing-22) nmod:in(reduction-19, programme-23) punct(mislead-7, ?-24)",1,1,0,"root(ROOT, mislead) advmod(mislead, Why) ax(mislead, does) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(mislead, Gentleman) det(Hose, the) dobj(mislead, Hose) advmod(refers, when) nsbj(refers, he) advcl(mislead, refers) mark(broght, to) neg(broght, not) ax(broght, having) advcl(refers, broght) case(redction, abot) det(redction, a) nmod:abot(broght, redction) case(programme, in) det(programme, the) amod(programme, existing) nmod:in(redction, programme) pnct(mislead, ?)","root(,VBD) advmod(VBD,WRB) ax(VBD,VBZ) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) det(NNP,DT) dobj(VBD,NNP) advmod(VBZ,WRB) nsbj(VBZ,PRP) advcl(VBD,VBZ) mark(VBN,TO) neg(VBN,RB) ax(VBN,VBG) advcl(VBZ,VBN) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,VBG) nmod:in(NN,NN) pnct(VBD,VBD)","[House, mislead, brought, he, right, Why, refers, ROOT, Gentleman, when]","[House, refers, brought, he, mislead, Why, ROOT, Gentleman, when]",16,"[he, mislead, when, refers, brought]","[he, mislead, when, refers, brought]",NNP_House VBZ_refers VBN_brought PRP_he VB_mislead WRB_Why NNP_Gentleman WRB_when ,"[House, refers, brought, he, mislead, Why, ROOT, Gentleman, when]","[House, refers, brought, he, mislead, Why, ROOT, Gentleman, when]",NNP_House VBZ_refers VBN_brought PRP_he VB_mislead WRB_Why NNP_Gentleman WRB_when ,"[House, refers, brought, he, mislead, Why, ROOT, Gentleman, when]",NNP_House VBZ_refers VBN_brought PRP_he VB_mislead WRB_Why NNP_Gentleman WRB_when ,"[House, refers, brought, he, mislead, Why, ROOT, Gentleman, when]",NNP_House VBZ_refers VBN_brought PRP_he VB_mislead WRB_Why NNP_Gentleman WRB_when ,1,2,2,2,1,2,2,2,2,2
Is it not a fact that his statement on 21 February reduced the HIP allocation to local authorities by one third over the previous year  bringing it down to the lowest level ever  and that he has now cut off even that miserable trickle of funds?,IsVBZ itPRP notRB aDT factNN thatIN hisPRP$ statementNN onIN 21CD FebruaryNNP reducedVBD theDT HIPNNP allocationNN toTO localJJ authoritiesNNS byIN oneCD thirdNN overIN theDT previousJJ yearNN bringingVBG itPRP downRP toTO theDT lowestJJS levelNN everRB andCC thatIN hePRP hasVBZ nowRB cutVBN offRP evenRB thatIN miserableJJ trickleNN ofIN fundsNNS ,"root(ROOT-0, fact-5) cop(fact-5, Is-1) nsubj(fact-5, it-2) neg(fact-5, not-3) det(fact-5, a-4) mark(reduced-12, that-6) nmod:poss(statement-8, his-7) nsubj(reduced-12, statement-8) case(February-11, on-9) nummod(February-11, 21-10) nmod:on(statement-8, February-11) ccomp(fact-5, reduced-12) det(allocation-15, the-13) compound(allocation-15, HIP-14) dobj(reduced-12, allocation-15) case(authorities-18, to-16) amod(authorities-18, local-17) nmod:to(reduced-12, authorities-18) case(third-21, by-19) nummod(third-21, one-20) nmod:by(reduced-12, third-21) case(year-25, over-22) det(year-25, the-23) amod(year-25, previous-24) nmod:over(third-21, year-25) punct(fact-5, ,-26) dep(fact-5, bringing-27) dobj(bringing-27, it-28) compound:prt(bringing-27, down-29) case(level-33, to-30) det(level-33, the-31) amod(level-33, lowest-32) nmod:to(bringing-27, level-33) advmod(level-33, ever-34) punct(bringing-27, ,-35) cc(bringing-27, and-36) mark(cut-41, that-37) nsubj(cut-41, he-38) aux(cut-41, has-39) advmod(cut-41, now-40) dep(fact-5, cut-41) conj:and(bringing-27, cut-41) compound:prt(cut-41, off-42) advmod(trickle-46, even-43) dep(trickle-46, that-44) amod(trickle-46, miserable-45) xcomp(cut-41, trickle-46) case(funds-48, of-47) nmod:of(trickle-46, funds-48) punct(fact-5, ?-49)",1,0,0,"root(ROOT, fact) cop(fact, Is) nsbj(fact, it) neg(fact, not) det(fact, a) mark(redced, that) nmod:poss(statement, his) nsbj(redced, statement) case(Febrary, on) nmmod(Febrary, 21) nmod:on(statement, Febrary) ccomp(fact, redced) det(allocation, the) compond(allocation, HIP) dobj(redced, allocation) case(athorities, to) amod(athorities, local) nmod:to(redced, athorities) case(third, by) nmmod(third, one) nmod:by(redced, third) case(year, over) det(year, the) amod(year, previos) nmod:over(third, year) pnct(fact, ,) dep(fact, bringing) dobj(bringing, it) compond:prt(bringing, down) case(level, to) det(level, the) amod(level, lowest) nmod:to(bringing, level) advmod(level, ever) pnct(bringing, ,) cc(bringing, and) mark(ct, that) nsbj(ct, he) ax(ct, has) advmod(ct, now) dep(fact, ct) conj:and(bringing, ct) compond:prt(ct, off) advmod(trickle, even) dep(trickle, that) amod(trickle, miserable) xcomp(ct, trickle) case(fnds, of) nmod:of(trickle, fnds) pnct(fact, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) mark(VBD,IN) nmod:poss(NN,PRP$) nsbj(VBD,NN) case(NNP,IN) nmmod(NNP,CD) nmod:on(NN,NNP) ccomp(NN,VBD) det(NN,DT) compond(NN,NNP) dobj(VBD,NN) case(NNS,TO) amod(NNS,JJ) nmod:to(VBD,NNS) case(NN,IN) nmmod(NN,CD) nmod:by(VBD,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:over(NN,NN) pnct(NN,NN) dep(NN,VBG) dobj(VBG,PRP) compond:prt(VBG,RP) case(NN,TO) det(NN,DT) amod(NN,JJS) nmod:to(VBG,NN) advmod(NN,RB) pnct(VBG,VBG) cc(VBG,CC) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBZ) advmod(VBN,RB) dep(NN,VBN) conj:and(VBG,VBN) compond:prt(VBN,RP) advmod(NN,RB) dep(NN,IN) amod(NN,JJ) xcomp(VBN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(NN,NN)","[trickle, he, fact, cut, now]","[trickle, February, statement, now, he, cut, reduced, his, fact]",18,"[reduced, February, statement, his]","[reduced, February, statement, his]",NN_trickle NNP_February NN_statement RB_now PRP_he NN_cut VBD_reduced PRP$_his NN_fact ,"[trickle, February, statement, now, he, cut, reduced, his, fact]","[trickle, February, statement, now, he, cut, reduced, his, fact]",NN_trickle NNP_February NN_statement RB_now PRP_he NN_cut VBD_reduced PRP$_his NN_fact ,"[trickle, February, statement, now, he, cut, reduced, his, fact]",NN_trickle NNP_February NN_statement RB_now PRP_he NN_cut VBD_reduced PRP$_his NN_fact ,"[trickle, February, statement, now, he, cut, reduced, his, fact]",NN_trickle NNP_February NN_statement RB_now PRP_he NN_cut VBD_reduced PRP$_his NN_fact ,2,2,2,2,1,2,2,2,2,2
Secondly  the right hon. Gentleman rebuked my hon. Friend the Member for Battersea  South (Mr. Dubs) by asking him to consider the position of the private sector.,SecondlyRB theDT rightJJ honNN GentlemanNNP rebukedVBD myPRP$ honNN FriendNNP theDT MemberNNP forIN BatterseaNNP SouthNNP (( MrNNP DubsNNP )) byIN askingVBG himPRP toTO considerVB theDT positionNN ofIN theDT privateJJ sectorNN ,"root(ROOT-0, rebuked-7) advmod(rebuked-7, Secondly-1) punct(rebuked-7, ,-2) det(Gentleman-6, the-3) amod(Gentleman-6, right-4) compound(Gentleman-6, hon.-5) nsubj(rebuked-7, Gentleman-6) nmod:poss(Friend-10, my-8) compound(Friend-10, hon.-9) dobj(rebuked-7, Friend-10) det(Member-12, the-11) dep(Friend-10, Member-12) case(Battersea-14, for-13) nmod:for(Member-12, Battersea-14) punct(Battersea-14, ,-15) appos(Battersea-14, South-16) punct(Dubs-19, -LRB--17) compound(Dubs-19, Mr.-18) appos(South-16, Dubs-19) punct(Dubs-19, -RRB--20) mark(asking-22, by-21) acl(Member-12, asking-22) dobj(asking-22, him-23) mark(consider-25, to-24) xcomp(asking-22, consider-25) det(position-27, the-26) dobj(consider-25, position-27) case(sector-31, of-28) det(sector-31, the-29) amod(sector-31, private-30) nmod:of(position-27, sector-31) punct(rebuked-7, .-32)",1,0,0,"root(ROOT, rebked) advmod(rebked, Secondly) pnct(rebked, ,) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(rebked, Gentleman) nmod:poss(Friend, my) compond(Friend, hon.) dobj(rebked, Friend) det(Member, the) dep(Friend, Member) case(Battersea, for) nmod:for(Member, Battersea) pnct(Battersea, ,) appos(Battersea, Soth) pnct(Dbs, ) compond(Dbs, Mr.) appos(Soth, Dbs) pnct(Dbs, ) mark(asking, by) acl(Member, asking) dobj(asking, him) mark(consider, to) xcomp(asking, consider) det(position, the) dobj(consider, position) case(sector, of) det(sector, the) amod(sector, private) nmod:of(position, sector) pnct(rebked, .)","root(,VBD) advmod(VBD,RB) pnct(VBD,VBD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) dobj(VBD,NNP) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,NNP) appos(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) mark(VBG,IN) acl(NNP,VBG) dobj(VBG,PRP) mark(VB,TO) xcomp(VBG,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) pnct(VBD,VBD)","[Friend, Secondly, rebuked, right, Member, him, South, asking, Gentleman, my, consider, Battersea, ROOT]","[Friend, my, rebuked, ROOT, Member, him, South, asking, Gentleman, Secondly, consider, Battersea]",18,"[Friend, my, rebuked, ROOT, Member, him, South, asking, Gentleman, Secondly, consider, Battersea]","[Friend, my, rebuked, ROOT, Member, him, South, asking, Gentleman, Secondly, consider, Battersea]",NNP_Friend PRP$_my VBD_rebuked NNP_Member PRP_him NNP_South VBG_asking NNP_Gentleman RB_Secondly VBP_consider NNP_Battersea ,"[Friend, my, rebuked, ROOT, Member, him, South, asking, Gentleman, Secondly, consider, Battersea]","[Friend, my, rebuked, ROOT, Member, him, South, asking, Gentleman, Secondly, consider, Battersea]",NNP_Friend PRP$_my VBD_rebuked NNP_Member PRP_him NNP_South VBG_asking NNP_Gentleman RB_Secondly VBP_consider NNP_Battersea ,"[Friend, my, rebuked, ROOT, Member, him, South, asking, Gentleman, Secondly, consider, Battersea]",NNP_Friend PRP$_my VBD_rebuked NNP_Member PRP_him NNP_South VBG_asking NNP_Gentleman RB_Secondly VBP_consider NNP_Battersea ,"[Friend, my, rebuked, ROOT, Member, him, South, asking, Gentleman, Secondly, consider, Battersea]",NNP_Friend PRP$_my VBD_rebuked NNP_Member PRP_him NNP_South VBG_asking NNP_Gentleman RB_Secondly VBP_consider NNP_Battersea ,1,2,1,0,0,0,0,0,0,0
Is he aware that last Friday the Daily Telegraph accused him  in his circular  of hitting the wrong target with a vengeance  because the private enterprise construction industry will feel the chill?,IsVBZ hePRP awareVBZ thatIN lastJJ FridayNNP theDT DailyNNP TelegraphNNP accusedVBD himPRP inIN hisPRP$ circularNN ofIN hittingVBG theDT wrongJJ targetNN withIN aDT vengeanceNN becauseIN theDT privateJJ enterpriseNN constructionNN industryNN willMD feelVB theDT chillNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) mark(accused-10, that-4) amod(Friday-6, last-5) nmod:tmod(accused-10, Friday-6) det(Telegraph-9, the-7) compound(Telegraph-9, Daily-8) nsubj(accused-10, Telegraph-9) ccomp(aware-3, accused-10) dobj(accused-10, him-11) punct(accused-10, ,-12) case(circular-15, in-13) nmod:poss(circular-15, his-14) nmod:in(accused-10, circular-15) punct(accused-10, ,-16) mark(hitting-18, of-17) advcl(accused-10, hitting-18) det(target-21, the-19) amod(target-21, wrong-20) dobj(hitting-18, target-21) case(vengeance-24, with-22) det(vengeance-24, a-23) nmod:with(hitting-18, vengeance-24) punct(accused-10, ,-25) mark(feel-33, because-26) det(industry-31, the-27) amod(industry-31, private-28) compound(industry-31, enterprise-29) compound(industry-31, construction-30) nsubj(feel-33, industry-31) aux(feel-33, will-32) advcl(accused-10, feel-33) det(chill-35, the-34) dobj(feel-33, chill-35) punct(aware-3, ?-36)",1,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) mark(accsed, that) amod(Friday, last) nmod:tmod(accsed, Friday) det(Telegraph, the) compond(Telegraph, Daily) nsbj(accsed, Telegraph) ccomp(aware, accsed) dobj(accsed, him) pnct(accsed, ,) case(circlar, in) nmod:poss(circlar, his) nmod:in(accsed, circlar) pnct(accsed, ,) mark(hitting, of) advcl(accsed, hitting) det(target, the) amod(target, wrong) dobj(hitting, target) case(vengeance, with) det(vengeance, a) nmod:with(hitting, vengeance) pnct(accsed, ,) mark(feel, becase) det(indstry, the) amod(indstry, private) compond(indstry, enterprise) compond(indstry, constrction) nsbj(feel, indstry) ax(feel, will) advcl(accsed, feel) det(chill, the) dobj(feel, chill) pnct(aware, ?)","root(,VBZ) cop(VBZ,VBZ) nsbj(VBZ,PRP) mark(VBD,IN) amod(NNP,JJ) nmod:tmod(VBD,NNP) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) ccomp(VBZ,VBD) dobj(VBD,PRP) pnct(VBD,VBD) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(VBD,NN) pnct(VBD,VBD) mark(VBG,IN) advcl(VBD,VBG) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) case(NN,IN) det(NN,DT) nmod:with(VBG,NN) pnct(VBD,VBD) mark(VB,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) compond(NN,NN) nsbj(VB,NN) ax(VB,MD) advcl(VBD,VB) det(NN,DT) dobj(VB,NN) pnct(VBZ,VBZ)","[he, ROOT, accused, aware]","[his, circular, he, ROOT, accused, aware]",18,"[his, circular, he, ROOT, accused, aware]","[his, accused, circular]",PRP$_his JJ_circular PRP_he VBD_accused JJ_aware ,"[his, circular, he, ROOT, accused, aware]","[his, circular, he, ROOT, accused, aware]",PRP$_his JJ_circular PRP_he VBD_accused JJ_aware ,"[his, circular, he, ROOT, accused, aware]",PRP$_his JJ_circular PRP_he VBD_accused JJ_aware ,"[his, circular, he, ROOT, accused, aware]",PRP$_his JJ_circular PRP_he VBD_accused JJ_aware ,1,2,2,0,0,0,0,0,0,0
The right hon. Gentleman is a disaster to housing and is bringing about a disaster to the housing industry and he should resign.,TheDT rightJJ honNN GentlemanNNP isVBZ aDT disasterNN toTO housingNN andCC isVBZ bringingVBG aboutIN aDT disasterNN toTO theDT housingNN industryNN andCC hePRP shouldMD resignVB ,"root(ROOT-0, disaster-7) det(Gentleman-4, The-1) amod(Gentleman-4, right-2) compound(Gentleman-4, hon.-3) nsubj(disaster-7, Gentleman-4) nsubj(bringing-12, Gentleman-4) cop(disaster-7, is-5) det(disaster-7, a-6) case(housing-9, to-8) nmod:to(disaster-7, housing-9) cc(disaster-7, and-10) aux(bringing-12, is-11) conj:and(disaster-7, bringing-12) case(disaster-15, about-13) det(disaster-15, a-14) nmod:about(bringing-12, disaster-15) case(industry-19, to-16) det(industry-19, the-17) compound(industry-19, housing-18) nmod:to(disaster-15, industry-19) cc(bringing-12, and-20) nsubj(resign-23, he-21) aux(resign-23, should-22) conj:and(disaster-7, resign-23) conj:and(bringing-12, resign-23) punct(disaster-7, .-24)",1,0,1,"root(ROOT, disaster) det(Gentleman, The) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(disaster, Gentleman) nsbj(bringing, Gentleman) cop(disaster, is) det(disaster, a) case(hosing, to) nmod:to(disaster, hosing) cc(disaster, and) ax(bringing, is) conj:and(disaster, bringing) case(disaster, abot) det(disaster, a) nmod:abot(bringing, disaster) case(indstry, to) det(indstry, the) compond(indstry, hosing) nmod:to(disaster, indstry) cc(bringing, and) nsbj(resign, he) ax(resign, shold) conj:and(disaster, resign) conj:and(bringing, resign) pnct(disaster, .)","root(,NN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(NN,NNP) nsbj(VBG,NNP) cop(NN,VBZ) det(NN,DT) case(NN,TO) nmod:to(NN,NN) cc(NN,CC) ax(VBG,VBZ) conj:and(NN,VBG) case(NN,IN) det(NN,DT) nmod:abot(VBG,NN) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(NN,NN) cc(VBG,CC) nsbj(VB,PRP) ax(VB,MD) conj:and(NN,VB) conj:and(VBG,VB) pnct(NN,NN)","[he, and, disaster, right, and, housing, disaster, Gentleman, ROOT, resign, bringing]","[he, and, disaster, and, housing, disaster, ROOT, Gentleman, resign, bringing]",18,[ ],[ ],PRP_he CC_and NN_disaster CC_and NN_housing NN_disaster NNP_Gentleman VB_resign VBG_bringing ,"[he, and, disaster, and, housing, disaster, ROOT, Gentleman, resign, bringing]","[he, and, disaster, and, housing, disaster, ROOT, Gentleman, resign, bringing]",PRP_he CC_and NN_disaster CC_and NN_housing NN_disaster NNP_Gentleman VB_resign VBG_bringing ,"[he, and, disaster, and, housing, disaster, ROOT, Gentleman, resign, bringing]",PRP_he CC_and NN_disaster CC_and NN_housing NN_disaster NNP_Gentleman VB_resign VBG_bringing ,"[he, and, disaster, and, housing, disaster, ROOT, Gentleman, resign, bringing]",PRP_he CC_and NN_disaster CC_and NN_housing NN_disaster NNP_Gentleman VB_resign VBG_bringing ,2,2,2,2,1,2,2,2,2,2
I am sure that in all the vagaries of the policies on the Opposition Benches the right hon. Gentleman's support for the Daily Telegraph will not go unnoticed.,IPRP amVBP sureJJ thatIN inIN allPDT theDT vagariesNNS ofIN theDT policiesNNS onIN theDT OppositionNNP BenchesNNP theDT rightJJ honNN GentlemanNNP 'sPOS supportNN forIN theDT DailyNNP TelegraphNNP willMD notRB goVB unnoticedJJ ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) dep(sure-3, that-4) case(vagaries-8, in-5) det:predet(vagaries-8, all-6) det(vagaries-8, the-7) nmod:in(that-4, vagaries-8) case(policies-11, of-9) det(policies-11, the-10) nmod:of(vagaries-8, policies-11) case(Benches-15, on-12) det(Benches-15, the-13) compound(Benches-15, Opposition-14) nmod:on(go-28, Benches-15) det(Gentleman-19, the-16) amod(Gentleman-19, right-17) compound(Gentleman-19, hon.-18) nmod:poss(support-21, Gentleman-19) case(Gentleman-19, 's-20) nsubj(go-28, support-21) case(Telegraph-25, for-22) det(Telegraph-25, the-23) compound(Telegraph-25, Daily-24) nmod:for(support-21, Telegraph-25) aux(go-28, will-26) neg(go-28, not-27) acl:relcl(policies-11, go-28) xcomp(go-28, unnoticed-29) punct(sure-3, .-30)",1,1,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) dep(sre, that) case(vagaries, in) det:predet(vagaries, all) det(vagaries, the) nmod:in(that, vagaries) case(policies, of) det(policies, the) nmod:of(vagaries, policies) case(Benches, on) det(Benches, the) compond(Benches, Opposition) nmod:on(go, Benches) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nmod:poss(spport, Gentleman) ""case(Gentleman, s)"", nsbj(go, spport) case(Telegraph, for) det(Telegraph, the) compond(Telegraph, Daily) nmod:for(spport, Telegraph) ax(go, will) neg(go, not) acl:relcl(policies, go) xcomp(go, nnoticed) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) dep(JJ,IN) case(NNS,IN) det:predet(NNS,PDT) det(NNS,DT) nmod:in(IN,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:on(VB,NNP) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nsbj(VB,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:for(NN,NNP) ax(VB,MD) neg(VB,RB) acl:relcl(NNS,VB) xcomp(VB,JJ) pnct(JJ,JJ)","[Gentleman, Telegraph, support, right, go, Benches]","[Gentleman, Telegraph, Benches, go, support]",18,"[Gentleman, Telegraph, Benches, go, support]","[Gentleman, Telegraph, Benches, go, support]",NNP_Gentleman NNP_Telegraph NNP_Benches VB_go NN_support ,"[Gentleman, Telegraph, Benches, go, support]","[Gentleman, Telegraph, Benches, go, support]",NNP_Gentleman NNP_Telegraph NNP_Benches VB_go NN_support ,"[Gentleman, Telegraph, Benches, go, support]",NNP_Gentleman NNP_Telegraph NNP_Benches VB_go NN_support ,"[Gentleman, Telegraph, Benches, go, support]",NNP_Gentleman NNP_Telegraph NNP_Benches VB_go NN_support ,1,2,2,1,1,1,1,1,1,2
Indeed  the right hon. Member for Leeds  East (Mr. Healey)  the former Chancellor of the Exchequer  found it necessary in 1976 to take similar action  and he was supported by the right hon. Member for Manchester  Ardwick (Mr. Kaufman).,IndeedRB theDT rightJJ honNN MemberNNP forIN LeedsNNP EastNNP (( MrNNP HealeyNNP )) theDT formerJJ ChancellorNNP ofIN theDT ExchequerNNP foundVBD itPRP necessaryJJ inIN 1976CD toTO takeVB similarJJ actionNN andCC hePRP wasVBD supportedVBN byIN theDT rightJJ honNN MemberNNP forIN ManchesterNNP ArdwickNNP (( MrNNP KaufmanNNP )) ,"root(ROOT-0, found-23) advmod(found-23, Indeed-1) punct(found-23, ,-2) det(Member-6, the-3) amod(Member-6, right-4) compound(Member-6, hon.-5) nsubj(found-23, Member-6) case(Leeds-8, for-7) nmod:for(Member-6, Leeds-8) punct(Leeds-8, ,-9) conj(Leeds-8, East-10) punct(Healey-13, -LRB--11) compound(Healey-13, Mr.-12) appos(East-10, Healey-13) punct(Healey-13, -RRB--14) punct(Leeds-8, ,-15) det(Chancellor-18, the-16) amod(Chancellor-18, former-17) appos(Leeds-8, Chancellor-18) case(Exchequer-21, of-19) det(Exchequer-21, the-20) nmod:of(Chancellor-18, Exchequer-21) punct(found-23, ,-22) nsubj(necessary-25, it-24) ccomp(found-23, necessary-25) case(1976-27, in-26) nmod:in(necessary-25, 1976-27) mark(take-29, to-28) xcomp(necessary-25, take-29) amod(action-31, similar-30) dobj(take-29, action-31) punct(found-23, ,-32) cc(found-23, and-33) nsubjpass(supported-36, he-34) auxpass(supported-36, was-35) conj:and(found-23, supported-36) case(Member-41, by-37) det(Member-41, the-38) amod(Member-41, right-39) compound(Member-41, hon.-40) nmod:agent(supported-36, Member-41) case(Manchester-43, for-42) nmod:for(Member-41, Manchester-43) punct(Member-41, ,-44) appos(Member-41, Ardwick-45) punct(Kaufman-48, -LRB--46) compound(Kaufman-48, Mr.-47) appos(Ardwick-45, Kaufman-48) punct(Kaufman-48, -RRB--49) punct(found-23, .-50)",1,0,0,"root(ROOT, fond) advmod(fond, Indeed) pnct(fond, ,) det(Member, the) amod(Member, right) compond(Member, hon.) nsbj(fond, Member) case(Leeds, for) nmod:for(Member, Leeds) pnct(Leeds, ,) conj(Leeds, East) pnct(Healey, ) compond(Healey, Mr.) appos(East, Healey) pnct(Healey, ) pnct(Leeds, ,) det(Chancellor, the) amod(Chancellor, former) appos(Leeds, Chancellor) case(Excheqer, of) det(Excheqer, the) nmod:of(Chancellor, Excheqer) pnct(fond, ,) nsbj(necessary, it) ccomp(fond, necessary) case(1976, in) nmod:in(necessary, 1976) mark(take, to) xcomp(necessary, take) amod(action, similar) dobj(take, action) pnct(fond, ,) cc(fond, and) nsbjpass(spported, he) axpass(spported, was) conj:and(fond, spported) case(Member, by) det(Member, the) amod(Member, right) compond(Member, hon.) nmod:agent(spported, Member) case(Manchester, for) nmod:for(Member, Manchester) pnct(Member, ,) appos(Member, Ardwick) pnct(Kafman, ) compond(Kafman, Mr.) appos(Ardwick, Kafman) pnct(Kafman, ) pnct(fond, .)","root(,VBD) advmod(VBD,RB) pnct(VBD,VBD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBD,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,NNP) conj(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(NNP,NNP) det(NNP,DT) amod(NNP,JJ) appos(NNP,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) pnct(VBD,VBD) nsbj(JJ,PRP) ccomp(VBD,JJ) case(CD,IN) nmod:in(JJ,CD) mark(VB,TO) xcomp(JJ,VB) amod(NN,JJ) dobj(VB,NN) pnct(VBD,VBD) cc(VBD,CC) nsbjpass(VBN,PRP) axpass(VBN,VBD) conj:and(VBD,VBN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nmod:agent(VBN,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,NNP) appos(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(VBD,VBD)","[ , Chancellor, Leeds, Exchequer, right, found, Member, East, Indeed, action, right, necessary, he, take, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]","[ , Chancellor, Leeds, Exchequer, found, Member, East, Indeed, action, necessary, take, he, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]",19,"[ , Chancellor, Leeds, Exchequer, found, Member, East, Indeed, action, necessary, take, he, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]","[ , Chancellor, Leeds, Exchequer, found, Member, East, Indeed, action, necessary, take, he, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]",NNP_Chancellor NNP_Leeds NNP_Exchequer VBN_found NNP_Member NNP_East RB_Indeed NN_action JJ_necessary VB_take PRP_he CC_and VBN_supported NNP_Manchester JJ_former NNP_Member NNP_Ardwick NNP_Kaufman ,"[ , Chancellor, Leeds, Exchequer, found, Member, East, Indeed, action, necessary, take, he, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]","[ , Chancellor, Leeds, Exchequer, found, Member, East, Indeed, action, necessary, take, he, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]",NNP_Chancellor NNP_Leeds NNP_Exchequer VBN_found NNP_Member NNP_East RB_Indeed NN_action JJ_necessary VB_take PRP_he CC_and VBN_supported NNP_Manchester JJ_former NNP_Member NNP_Ardwick NNP_Kaufman ,"[ , Chancellor, Leeds, Exchequer, found, Member, East, Indeed, action, necessary, take, he, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]",NNP_Chancellor NNP_Leeds NNP_Exchequer VBN_found NNP_Member NNP_East RB_Indeed NN_action JJ_necessary VB_take PRP_he CC_and VBN_supported NNP_Manchester JJ_former NNP_Member NNP_Ardwick NNP_Kaufman ,"[ , Chancellor, Leeds, Exchequer, found, Member, East, Indeed, action, necessary, take, he, and, supported, Manchester, former, Member, Ardwick, Kaufman, ROOT]",NNP_Chancellor NNP_Leeds NNP_Exchequer VBN_found NNP_Member NNP_East RB_Indeed NN_action JJ_necessary VB_take PRP_he CC_and VBN_supported NNP_Manchester JJ_former NNP_Member NNP_Ardwick NNP_Kaufman ,1,1,1,1,1,1,1,1,1,1
As my right hon. Friend the Secretary of State made clear in his statement on 20 January  the decision  made necessary by budgetary pressures  is to concentrate any reductions in our capability on older weapons systems and aircraft which are already due to be phased out.,AsIN myPRP$ rightJJ honNN FriendNNP theDT SecretaryNNP ofIN StateNNP madeVBD clearJJ inIN hisPRP$ statementNN onIN 20CD JanuaryNNP theDT decisionNN madeVBD necessaryJJ byIN budgetaryJJ pressuresNNS isVBZ toTO concentrateVB anyDT reductionsNNS inIN ourPRP$ capabilityNN onIN olderJJR weaponsNNS systemsNNS andCC aircraftNN whichWDT areVBP alreadyRB dueJJ toTO beVB phasedVBN outRP ,"root(ROOT-0, made-10) case(Friend-5, As-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nmod:as(made-10, Friend-5) det(Secretary-7, the-6) nsubj(made-10, Secretary-7) case(State-9, of-8) nmod:of(Secretary-7, State-9) xcomp(made-10, clear-11) case(statement-14, in-12) nmod:poss(statement-14, his-13) nmod:in(clear-11, statement-14) case(January-17, on-15) nummod(January-17, 20-16) nmod:on(statement-14, January-17) punct(made-10, ,-18) det(decision-20, the-19) nsubj(concentrate-30, decision-20) punct(decision-20, ,-21) acl(decision-20, made-22) xcomp(made-22, necessary-23) case(pressures-26, by-24) amod(pressures-26, budgetary-25) nmod:by(necessary-23, pressures-26) punct(decision-20, ,-27) aux(concentrate-30, is-28) mark(concentrate-30, to-29) parataxis(made-10, concentrate-30) det(reductions-32, any-31) dobj(concentrate-30, reductions-32) case(capability-35, in-33) nmod:poss(capability-35, our-34) nmod:in(reductions-32, capability-35) case(systems-39, on-36) amod(systems-39, older-37) compound(systems-39, weapons-38) nmod:on(capability-35, systems-39) cc(systems-39, and-40) nmod:on(capability-35, aircraft-41) conj:and(systems-39, aircraft-41) nsubj(due-45, which-42) cop(due-45, are-43) advmod(due-45, already-44) acl:relcl(systems-39, due-45) mark(phased-48, to-46) auxpass(phased-48, be-47) xcomp(due-45, phased-48) compound:prt(phased-48, out-49) punct(made-10, .-50)",1,0,0,"root(ROOT, made) case(Friend, As) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:as(made, Friend) det(Secretary, the) nsbj(made, Secretary) case(State, of) nmod:of(Secretary, State) xcomp(made, clear) case(statement, in) nmod:poss(statement, his) nmod:in(clear, statement) case(Janary, on) nmmod(Janary, 20) nmod:on(statement, Janary) pnct(made, ,) det(decision, the) nsbj(concentrate, decision) pnct(decision, ,) acl(decision, made) xcomp(made, necessary) case(pressres, by) amod(pressres, bdgetary) nmod:by(necessary, pressres) pnct(decision, ,) ax(concentrate, is) mark(concentrate, to) parataxis(made, concentrate) det(redctions, any) dobj(concentrate, redctions) case(capability, in) nmod:poss(capability, or) nmod:in(redctions, capability) case(systems, on) amod(systems, older) compond(systems, weapons) nmod:on(capability, systems) cc(systems, and) nmod:on(capability, aircraft) conj:and(systems, aircraft) nsbj(de, which) cop(de, are) advmod(de, already) acl:relcl(systems, de) mark(phased, to) axpass(phased, be) xcomp(de, phased) compond:prt(phased, ot) pnct(made, .)","root(,VBD) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:as(VBD,NNP) det(NNP,DT) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) xcomp(VBD,JJ) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(JJ,NN) case(NNP,IN) nmmod(NNP,CD) nmod:on(NN,NNP) pnct(VBD,VBD) det(NN,DT) nsbj(VB,NN) pnct(NN,NN) acl(NN,VBD) xcomp(VBD,JJ) case(NNS,IN) amod(NNS,JJ) nmod:by(JJ,NNS) pnct(NN,NN) ax(VB,VBZ) mark(VB,TO) parataxis(VBD,VB) det(NNS,DT) dobj(VB,NNS) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NNS,NN) case(NNS,IN) amod(NNS,JJR) compond(NNS,NNS) nmod:on(NN,NNS) cc(NNS,CC) nmod:on(NN,NN) conj:and(NNS,NN) nsbj(JJ,WDT) cop(JJ,VBP) advmod(JJ,RB) acl:relcl(NNS,JJ) mark(VBN,TO) axpass(VBN,VB) xcomp(JJ,VBN) compond:prt(VBN,RP) pnct(VBD,VBD)","[State, right, clear, Secretary, Friend, my, ROOT, made]","[State, Secretary, clear, January, Friend, my, his, ROOT, statement, made]",3,"[State, Secretary, clear, January, Friend, my, his, ROOT, statement, made]","[State, Secretary, clear, January, Friend, my, his, ROOT, statement, made]",NNP_State NNP_Secretary JJ_clear NNP_January NNP_Friend PRP$_my PRP$_his NN_statement VBN_made ,"[State, Secretary, clear, January, Friend, my, his, ROOT, statement, made]","[State, Secretary, clear, January, Friend, my, his, ROOT, statement, made]",NNP_State NNP_Secretary JJ_clear NNP_January NNP_Friend PRP$_my PRP$_his NN_statement VBN_made ,"[State, Secretary, clear, January, Friend, my, his, ROOT, statement, made]",NNP_State NNP_Secretary JJ_clear NNP_January NNP_Friend PRP$_my PRP$_his NN_statement VBN_made ,"[State, Secretary, clear, January, Friend, my, his, ROOT, statement, made]",NNP_State NNP_Secretary JJ_clear NNP_January NNP_Friend PRP$_my PRP$_his NN_statement VBN_made ,2,1,1,2,1,2,1,1,1,1
Is it not disgraceful that the loud mouthed patriots behind the Minister  who made such a scene about the number of air defence aircraft when they were in Opposition  should now adopt an attitude of craven silence  in the light of the Minister's disgraceful neglect of the country's air defence?,IsVBZ itPRP notRB disgracefulVBZ thatIN theDT loudNN mouthedVBD patriotsNNS behindIN theDT MinisterNNP whoWP madeVBD suchPDT aDT sceneNN aboutIN theDT numberNN ofIN airNN defenceNN aircraftNN whenWRB theyPRP wereVBD inIN OppositionNNP shouldMD nowRB adoptVB anDT attitudeNN ofIN cravenJJ silenceNN inIN theDT lightNN ofIN theDT MinisterNNP 'sPOS disgracefulJJ neglectNN ofIN theDT countryNN 'sPOS airNN defenceNN ,"root(ROOT-0, disgraceful-4) cop(disgraceful-4, Is-1) nsubj(disgraceful-4, it-2) neg(disgraceful-4, not-3) xcomp(disgraceful-4, that-5) det(patriots-9, the-6) amod(patriots-9, loud-7) amod(patriots-9, mouthed-8) root(that-5, patriots-9) case(Minister-12, behind-10) det(Minister-12, the-11) nmod:behind(patriots-9, Minister-12) punct(Minister-12, ,-13) nsubj(made-15, who-14) acl:relcl(Minister-12, made-15) det:predet(scene-18, such-16) det(scene-18, a-17) dobj(made-15, scene-18) case(number-21, about-19) det(number-21, the-20) nmod:about(scene-18, number-21) case(aircraft-25, of-22) compound(aircraft-25, air-23) compound(aircraft-25, defence-24) nmod:of(number-21, aircraft-25) advmod(Opposition-30, when-26) nsubj(Opposition-30, they-27) cop(Opposition-30, were-28) case(Opposition-30, in-29) nsubj(adopt-34, Opposition-30) punct(Opposition-30, ,-31) aux(adopt-34, should-32) advmod(adopt-34, now-33) ccomp(made-15, adopt-34) det(attitude-36, an-35) dobj(adopt-34, attitude-36) case(silence-39, of-37) compound(silence-39, craven-38) nmod:of(attitude-36, silence-39) punct(adopt-34, ,-40) case(light-43, in-41) det(light-43, the-42) nmod:in(adopt-34, light-43) case(neglect-49, of-44) det(Minister-46, the-45) nmod:poss(neglect-49, Minister-46) case(Minister-46, 's-47) amod(neglect-49, disgraceful-48) nmod:of(light-43, neglect-49) case(defence-55, of-50) det(country-52, the-51) nmod:poss(defence-55, country-52) case(country-52, 's-53) compound(defence-55, air-54) nmod:of(neglect-49, defence-55) punct(patriots-9, ?-56)",1,0,0,"root(ROOT, disgracefl) cop(disgracefl, Is) nsbj(disgracefl, it) neg(disgracefl, not) xcomp(disgracefl, that) det(patriots, the) amod(patriots, lod) amod(patriots, mothed) root(that, patriots) case(Minister, behind) det(Minister, the) nmod:behind(patriots, Minister) pnct(Minister, ,) nsbj(made, who) acl:relcl(Minister, made) det:predet(scene, sch) det(scene, a) dobj(made, scene) case(nmber, abot) det(nmber, the) nmod:abot(scene, nmber) case(aircraft, of) compond(aircraft, air) compond(aircraft, defence) nmod:of(nmber, aircraft) advmod(Opposition, when) nsbj(Opposition, they) cop(Opposition, were) case(Opposition, in) nsbj(adopt, Opposition) pnct(Opposition, ,) ax(adopt, shold) advmod(adopt, now) ccomp(made, adopt) det(attitde, an) dobj(adopt, attitde) case(silence, of) compond(silence, craven) nmod:of(attitde, silence) pnct(adopt, ,) case(light, in) det(light, the) nmod:in(adopt, light) case(neglect, of) det(Minister, the) nmod:poss(neglect, Minister) ""case(Minister, s)"", amod(neglect, disgracefl) nmod:of(light, neglect) case(defence, of) det(contry, the) nmod:poss(defence, contry) ""case(contry, s)"", compond(defence, air) nmod:of(neglect, defence) pnct(patriots, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) xcomp(JJ,IN) det(NNS,DT) amod(NNS,NN) amod(NNS,VBD) root(IN,NNS) case(NNP,IN) det(NNP,DT) nmod:behind(NNS,NNP) pnct(NNP,NNP) nsbj(VBD,WP) acl:relcl(NNP,VBD) det:predet(NN,PDT) det(NN,DT) dobj(VBD,NN) case(NN,IN) det(NN,DT) nmod:abot(NN,NN) case(NN,IN) compond(NN,NN) compond(NN,NN) nmod:of(NN,NN) advmod(NNP,WRB) nsbj(NNP,PRP) cop(NNP,VBD) case(NNP,IN) nsbj(VB,NNP) pnct(NNP,NNP) ax(VB,MD) advmod(VB,RB) ccomp(VBD,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) compond(NN,JJ) nmod:of(NN,NN) pnct(VB,VB) case(NN,IN) det(NN,DT) nmod:in(VB,NN) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:poss(NN,NN) case(NN,POS) compond(NN,NN) nmod:of(NN,NN) pnct(NNS,NNS)","[ , Minister, when, disgraceful, Minister, Opposition, light, they, patriots, made, defence, that, now, scene, mouthed, adopt, disgraceful, attitude, who, ROOT, number, loud, neglect]","[ , Minister, when, disgraceful, Minister, Opposition, light, they, patriots, made, defence, that, now, scene, mouthed, adopt, disgraceful, attitude, who, ROOT, number, loud, neglect]",5,"[ , neglect, disgraceful, Minister, light, made, patriots, Minister, defence, that, number, mouthed, adopt, disgraceful, attitude, who, ROOT, scene, loud]","[ , neglect, disgraceful, Minister, light, made, patriots, Minister, defence, that, number, mouthed, adopt, disgraceful, attitude, who, ROOT, scene, loud]",NNP_Minister WRB_when JJ_disgraceful NNP_Minister NNP_Opposition NN_light PRP_they NNS_patriots VBN_made NN_defence IN_that RB_now NN_scene VBD_mouthed VB_adopt JJ_disgraceful NN_attitude WP_who NN_number NN_loud NN_neglect ,"[ , Minister, when, disgraceful, Minister, Opposition, light, they, patriots, made, defence, that, now, scene, mouthed, adopt, disgraceful, attitude, who, ROOT, number, loud, neglect]","[ , Minister, when, disgraceful, Minister, Opposition, light, they, patriots, made, defence, that, now, scene, mouthed, adopt, disgraceful, attitude, who, ROOT, number, loud, neglect]",NNP_Minister WRB_when JJ_disgraceful NNP_Minister NNP_Opposition NN_light PRP_they NNS_patriots VBN_made NN_defence IN_that RB_now NN_scene VBD_mouthed VB_adopt JJ_disgraceful NN_attitude WP_who NN_number NN_loud NN_neglect ,"[ , Minister, when, disgraceful, Minister, Opposition, light, they, patriots, made, defence, that, now, scene, mouthed, adopt, disgraceful, attitude, who, ROOT, number, loud, neglect]",NNP_Minister WRB_when JJ_disgraceful NNP_Minister NNP_Opposition NN_light PRP_they NNS_patriots VBN_made NN_defence IN_that RB_now NN_scene VBD_mouthed VB_adopt JJ_disgraceful NN_attitude WP_who NN_number NN_loud NN_neglect ,"[ , Minister, when, disgraceful, Minister, Opposition, light, they, patriots, made, defence, that, now, scene, mouthed, adopt, disgraceful, attitude, who, ROOT, number, loud, neglect]",NNP_Minister WRB_when JJ_disgraceful NNP_Minister NNP_Opposition NN_light PRP_they NNS_patriots VBN_made NN_defence IN_that RB_now NN_scene VBD_mouthed VB_adopt JJ_disgraceful NN_attitude WP_who NN_number NN_loud NN_neglect ,1,2,2,2,1,2,2,2,2,2
It is not true that fewer aircraft are defending us.,ItPRP isVBZ notRB trueJJ thatIN fewerJJR aircraftNN areVBP defendingVBG usPRP ,"root(ROOT-0, true-4) nsubj(true-4, It-1) cop(true-4, is-2) neg(true-4, not-3) mark(defending-9, that-5) amod(aircraft-7, fewer-6) nsubj(defending-9, aircraft-7) aux(defending-9, are-8) ccomp(true-4, defending-9) dobj(defending-9, us-10) punct(true-4, .-11)",0,1,1,"root(ROOT, tre) nsbj(tre, It) cop(tre, is) neg(tre, not) mark(defending, that) amod(aircraft, fewer) nsbj(defending, aircraft) ax(defending, are) ccomp(tre, defending) dobj(defending, s) pnct(tre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) neg(JJ,RB) mark(VBG,IN) amod(NN,JJR) nsbj(VBG,NN) ax(VBG,VBP) ccomp(JJ,VBG) dobj(VBG,PRP) pnct(JJ,JJ)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As the hon. Gentleman knows  in his day it was not the practice to publish the numbers and we shall not publish them.,AsIN theDT honNN GentlemanNNP knowsVBZ inIN hisPRP$ dayNN itPRP wasVBD notRB theDT practiceNN toTO publishVB theDT numbersNNS andCC wePRP shallMD notRB publishVB themPRP ,"root(ROOT-0, practice-14) mark(knows-5, As-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(knows-5, Gentleman-4) advcl(practice-14, knows-5) punct(practice-14, ,-6) case(day-9, in-7) nmod:poss(day-9, his-8) nmod:in(practice-14, day-9) nsubj(practice-14, it-10) cop(practice-14, was-11) neg(practice-14, not-12) det(practice-14, the-13) mark(publish-16, to-15) xcomp(practice-14, publish-16) det(numbers-18, the-17) dobj(publish-16, numbers-18) cc(publish-16, and-19) nsubj(publish-23, we-20) aux(publish-23, shall-21) neg(publish-23, not-22) xcomp(practice-14, publish-23) conj:and(publish-16, publish-23) dobj(publish-23, them-24) punct(practice-14, .-25)",1,0,0,"root(ROOT, practice) mark(knows, As) det(Gentleman, the) compond(Gentleman, hon.) nsbj(knows, Gentleman) advcl(practice, knows) pnct(practice, ,) case(day, in) nmod:poss(day, his) nmod:in(practice, day) nsbj(practice, it) cop(practice, was) neg(practice, not) det(practice, the) mark(pblish, to) xcomp(practice, pblish) det(nmbers, the) dobj(pblish, nmbers) cc(pblish, and) nsbj(pblish, we) ax(pblish, shall) neg(pblish, not) xcomp(practice, pblish) conj:and(pblish, pblish) dobj(pblish, them) pnct(practice, .)","root(,NN) mark(VBZ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(NN,VBZ) pnct(NN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) nsbj(NN,PRP) cop(NN,VBD) neg(NN,RB) det(NN,DT) mark(VB,TO) xcomp(NN,VB) det(NNS,DT) dobj(VB,NNS) cc(VB,CC) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) xcomp(NN,VB) conj:and(VB,VB) dobj(VB,PRP) pnct(NN,NN)","[practice, Gentleman, knows]","[practice, Gentleman, his, knows, day]",6,"[practice, Gentleman, his, knows, day]","[practice, Gentleman, his, knows, day]",NN_practice NNP_Gentleman PRP$_his VBZ_knows NN_day ,"[practice, Gentleman, his, knows, day]","[practice, Gentleman, his, knows, day]",NN_practice NNP_Gentleman PRP$_his VBZ_knows NN_day ,"[practice, Gentleman, his, knows, day]",NN_practice NNP_Gentleman PRP$_his VBZ_knows NN_day ,"[practice, Gentleman, his, knows, day]",NN_practice NNP_Gentleman PRP$_his VBZ_knows NN_day ,2,2,2,0,0,0,0,0,0,0
What he says is not true.,WhatWP hePRP saysVBZ isVBZ notRB trueJJ ,"root(ROOT-0, true-6) dobj(says-3, What-1) nsubj(says-3, he-2) csubj(true-6, says-3) cop(true-6, is-4) neg(true-6, not-5) punct(true-6, .-7)",1,0,0,"root(ROOT, tre) dobj(says, What) nsbj(says, he) csbj(tre, says) cop(tre, is) neg(tre, not) pnct(tre, .)","root(,JJ) dobj(VBZ,WP) nsbj(VBZ,PRP) csbj(JJ,VBZ) cop(JJ,VBZ) neg(JJ,RB) pnct(JJ,JJ)","[he, What, says, true]","[he, What, says, true]",8,"[he, What, says, true]","[he, What, says, true]",PRP_he WP_What VBZ_says JJ_true ,"[he, What, says, true]","[he, What, says, true]",PRP_he WP_What VBZ_says JJ_true ,"[he, What, says, true]",PRP_he WP_What VBZ_says JJ_true ,"[he, What, says, true]",PRP_he WP_What VBZ_says JJ_true ,1,2,2,0,0,0,2,2,2,2
Does the Minister remember his brave words from the Dispatch Box on 23 June last year when he and his hon. Friends made an attack on my hon. Friend the Member for Erith and Crayford (Mr. Wellbeloved)?,DoesVBZ theDT MinisterNNP rememberVB hisPRP$ braveNN wordsNNS fromIN theDT DispatchNNP BoxNNP onIN 23CD JuneNNP lastJJ yearNN whenWRB hePRP andCC hisPRP$ honNN FriendsNNP madeVBD anDT attackNN onIN myPRP$ honNN FriendNNP 129CD theDT MemberNNP forIN ErithNNP andCC CrayfordNNP (( MrNNP WellbelovedNNP )) ,"root(ROOT-0, remember-4) aux(remember-4, Does-1) det(Minister-3, the-2) nsubj(remember-4, Minister-3) nmod:poss(words-7, his-5) amod(words-7, brave-6) dobj(remember-4, words-7) case(Box-11, from-8) det(Box-11, the-9) compound(Box-11, Dispatch-10) nmod:from(words-7, Box-11) case(June-14, on-12) nummod(June-14, 23-13) nmod:on(remember-4, June-14) amod(year-16, last-15) dep(June-14, year-16) advmod(made-23, when-17) nsubj(made-23, he-18) cc(he-18, and-19) nmod:poss(Friends-22, his-20) compound(Friends-22, hon.-21) conj:and(he-18, Friends-22) nsubj(made-23, Friends-22) acl:relcl(year-16, made-23) det(attack-25, an-24) dobj(made-23, attack-25) case(Friend-29, on-26) nmod:poss(Friend-29, my-27) compound(Friend-29, hon.-28) nmod:on(attack-25, Friend-29) nummod(Member-32, 129-30) det(Member-32, the-31) dep(Friend-29, Member-32) case(Erith-34, for-33) nmod:for(Member-32, Erith-34) cc(Erith-34, and-35) nmod:for(Member-32, Crayford-36) conj:and(Erith-34, Crayford-36) punct(Wellbeloved-39, -LRB--37) compound(Wellbeloved-39, Mr.-38) appos(Member-32, Wellbeloved-39) punct(Wellbeloved-39, -RRB--40) punct(remember-4, ?-41)",1,0,0,"root(ROOT, remember) ax(remember, Does) det(Minister, the) nsbj(remember, Minister) nmod:poss(words, his) amod(words, brave) dobj(remember, words) case(Box, from) det(Box, the) compond(Box, Dispatch) nmod:from(words, Box) case(Jne, on) nmmod(Jne, 23) nmod:on(remember, Jne) amod(year, last) dep(Jne, year) advmod(made, when) nsbj(made, he) cc(he, and) nmod:poss(Friends, his) compond(Friends, hon.) conj:and(he, Friends) nsbj(made, Friends) acl:relcl(year, made) det(attack, an) dobj(made, attack) case(Friend, on) nmod:poss(Friend, my) compond(Friend, hon.) nmod:on(attack, Friend) nmmod(Member, 129) det(Member, the) dep(Friend, Member) case(Erith, for) nmod:for(Member, Erith) cc(Erith, and) nmod:for(Member, Crayford) conj:and(Erith, Crayford) pnct(Wellbeloved, ) compond(Wellbeloved, Mr.) appos(Member, Wellbeloved) pnct(Wellbeloved, ) pnct(remember, ?)","root(,VB) ax(VB,VBZ) det(NNP,DT) nsbj(VB,NNP) nmod:poss(NNS,PRP$) amod(NNS,NN) dobj(VB,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:from(NNS,NNP) case(NNP,IN) nmmod(NNP,CD) nmod:on(VB,NNP) amod(NN,JJ) dep(NNP,NN) advmod(VBD,WRB) nsbj(VBD,PRP) cc(PRP,CC) nmod:poss(NNP,PRP$) compond(NNP,NNP) conj:and(PRP,NNP) nsbj(VBD,NNP) acl:relcl(NN,VBD) det(NN,DT) dobj(VBD,NN) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:on(NN,NNP) nmmod(NNP,CD) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(VB,VB)","[remember, Member, Crayford, Friends, words, year, my, June, when, made, attack, he, Wellbeloved, Friend, and, his, and, Minister, 129, ROOT, Erith]","[remember, Member, Crayford, brave, Erith, Minister, words, Box, year, my, June, when, made, attack, he, Wellbeloved, Friend, and, his, and, his, 129, ROOT, Friends]",8,"[remember, Member, Crayford, brave, Friends, words, year, my, when, made, attack, Box, Wellbeloved, Friend, and, his, and, his, 129, he, Erith]","[remember, Member, Crayford, brave, Friends, words, year, my, when, made, attack, Box, Wellbeloved, Friend, and, his, and, his, 129, he, Erith]",VB_remember NNP_Member NNP_Crayford NN_brave NNP_Erith NNP_Minister NNS_words NNP_Box NN_year PRP$_my NNP_June WRB_when VBN_made NN_attack PRP_he NNP_Wellbeloved NNP_Friend CC_and PRP$_his CC_and PRP$_his CD_129 NNPS_Friends ,"[remember, Member, Crayford, brave, Erith, Minister, words, Box, year, my, June, when, made, attack, he, Wellbeloved, Friend, and, his, and, his, 129, ROOT, Friends]","[remember, Member, Crayford, brave, Erith, Minister, words, Box, year, my, June, when, made, attack, he, Wellbeloved, Friend, and, his, and, his, 129, ROOT, Friends]",VB_remember NNP_Member NNP_Crayford NN_brave NNP_Erith NNP_Minister NNS_words NNP_Box NN_year PRP$_my NNP_June WRB_when VBN_made NN_attack PRP_he NNP_Wellbeloved NNP_Friend CC_and PRP$_his CC_and PRP$_his CD_129 NNPS_Friends ,"[remember, Member, Crayford, brave, Erith, Minister, words, Box, year, my, June, when, made, attack, he, Wellbeloved, Friend, and, his, and, his, 129, ROOT, Friends]",VB_remember NNP_Member NNP_Crayford NN_brave NNP_Erith NNP_Minister NNS_words NNP_Box NN_year PRP$_my NNP_June WRB_when VBN_made NN_attack PRP_he NNP_Wellbeloved NNP_Friend CC_and PRP$_his CC_and PRP$_his CD_129 NNPS_Friends ,"[remember, Member, Crayford, brave, Erith, Minister, words, Box, year, my, June, when, made, attack, he, Wellbeloved, Friend, and, his, and, his, 129, ROOT, Friends]",VB_remember NNP_Member NNP_Crayford NN_brave NNP_Erith NNP_Minister NNS_words NNP_Box NN_year PRP$_my NNP_June WRB_when VBN_made NN_attack PRP_he NNP_Wellbeloved NNP_Friend CC_and PRP$_his CC_and PRP$_his CD_129 NNPS_Friends ,1,2,2,2,1,2,2,2,2,2
Is not the House owed an explanation about the Minister's failures and is not my hon. Friend owed an apology?,IsVBZ notRB theDT HouseNNP owedVBD anDT explanationNN aboutIN theDT MinisterNNP 'sPOS failuresNNS andCC isVBZ notRB myPRP$ honNN FriendNNP owedVBD anDT apologyNN ,"root(ROOT-0, owed-5) aux(owed-5, Is-1) neg(House-4, not-2) det(House-4, the-3) nsubj(owed-5, House-4) det(explanation-7, an-6) dobj(owed-5, explanation-7) case(failures-12, about-8) det(Minister-10, the-9) nmod:poss(failures-12, Minister-10) case(Minister-10, 's-11) nmod:about(explanation-7, failures-12) cc(owed-5, and-13) cop(Friend-18, is-14) neg(Friend-18, not-15) nmod:poss(Friend-18, my-16) compound(Friend-18, hon.-17) conj:and(owed-5, Friend-18) acl(Friend-18, owed-19) det(apology-21, an-20) dobj(owed-19, apology-21) punct(owed-5, ?-22)",1,0,1,"root(ROOT, owed) ax(owed, Is) neg(Hose, not) det(Hose, the) nsbj(owed, Hose) det(explanation, an) dobj(owed, explanation) case(failres, abot) det(Minister, the) nmod:poss(failres, Minister) ""case(Minister, s)"", nmod:abot(explanation, failres) cc(owed, and) cop(Friend, is) neg(Friend, not) nmod:poss(Friend, my) compond(Friend, hon.) conj:and(owed, Friend) acl(Friend, owed) det(apology, an) dobj(owed, apology) pnct(owed, ?)","root(,VBD) ax(VBD,VBZ) neg(NNP,RB) det(NNP,DT) nsbj(VBD,NNP) det(NN,DT) dobj(VBD,NN) case(NNS,IN) det(NNP,DT) nmod:poss(NNS,NNP) case(NNP,POS) nmod:abot(NN,NNS) cc(VBD,CC) cop(NNP,VBZ) neg(NNP,RB) nmod:poss(NNP,PRP$) compond(NNP,NNP) conj:and(VBD,NNP) acl(NNP,VBD) det(NN,DT) dobj(VBD,NN) pnct(VBD,VBD)","[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]","[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]",11,"[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]","[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]",CC_and NNP_Minister NNP_House NNP_Friend PRP$_my NN_explanation NN_apology VBN_owed NNS_failures VBN_owed RB_not ,"[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]","[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]",CC_and NNP_Minister NNP_House NNP_Friend PRP$_my NN_explanation NN_apology VBN_owed NNS_failures VBN_owed RB_not ,"[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]",CC_and NNP_Minister NNP_House NNP_Friend PRP$_my NN_explanation NN_apology VBN_owed NNS_failures VBN_owed RB_not ,"[and, Minister, House, Friend, my, explanation, apology, owed, failures, ROOT, owed, not]",CC_and NNP_Minister NNP_House NNP_Friend PRP$_my NN_explanation NN_apology VBN_owed NNS_failures VBN_owed RB_not ,2,2,2,2,1,2,2,2,2,2
Is it not important for the Minister to mount a clear publicity campaign to tell the sick  the unemployed  the injured  widows and those in receipt of maternity allowances that the Government will rob them in 1982  in a full year of operation  of £300 million?,IsVBZ itPRP notRB importantJJ forIN theDT MinisterNNP toTO mountVB aDT clearJJ publicityNN campaignNN toTO tellVB theDT sickJJ theDT unemployedJJ theDT injuredJJ widowsNNS andCC thoseDT inIN receiptNN ofIN maternityNN allowancesNNS thatIN theDT GovernmentNNP willMD robVB themPRP inIN 1982CD inIN aDT fullJJ yearNN ofIN operationNN ofIN £300CD millionCD ,"root(ROOT-0, important-4) cop(important-4, Is-1) nsubj(important-4, it-2) neg(important-4, not-3) mark(mount-9, for-5) det(Minister-7, the-6) nsubj(mount-9, Minister-7) mark(mount-9, to-8) advcl(important-4, mount-9) det(campaign-13, a-10) amod(campaign-13, clear-11) compound(campaign-13, publicity-12) dobj(mount-9, campaign-13) mark(tell-15, to-14) xcomp(mount-9, tell-15) det(sick-17, the-16) dobj(tell-15, sick-17) punct(important-4, ,-18) det(unemployed-20, the-19) root(,-18, unemployed-20) punct(unemployed-20, ,-21) root(,-21, the-22) appos(the-22, injured-23) punct(injured-23, ,-24) root(,-24, widows-25) cc(widows-25, and-26) root(,-24, those-27) conj:and(widows-25, those-27) case(receipt-29, in-28) nmod:in(widows-25, receipt-29) case(allowances-32, of-30) compound(allowances-32, maternity-31) nmod:of(receipt-29, allowances-32) mark(rob-37, that-33) det(Government-35, the-34) nsubj(rob-37, Government-35) aux(rob-37, will-36) ccomp(receipt-29, rob-37) dobj(rob-37, them-38) case(1982-40, in-39) nmod:in(rob-37, 1982-40) punct(widows-25, ,-41) case(year-45, in-42) det(year-45, a-43) amod(year-45, full-44) nmod:in(widows-25, year-45) case(operation-47, of-46) nmod:of(year-45, operation-47) punct(widows-25, ,-48) case(million-52, of-49) compound(million-52, #-50) compound(million-52, 300-51) nmod:of(widows-25, million-52) punct(widows-25, ?-53)",1,0,0,"root(ROOT, important) cop(important, Is) nsbj(important, it) neg(important, not) mark(mont, for) det(Minister, the) nsbj(mont, Minister) mark(mont, to) advcl(important, mont) det(campaign, a) amod(campaign, clear) compond(campaign, pblicity) dobj(mont, campaign) mark(tell, to) xcomp(mont, tell) det(sick, the) dobj(tell, sick) pnct(important, ,) det(nemployed, the) root(,, nemployed) pnct(nemployed, ,) root(,, the) appos(the, injred) pnct(injred, ,) root(,, widows) cc(widows, and) root(,, those) conj:and(widows, those) case(receipt, in) nmod:in(widows, receipt) case(allowances, of) compond(allowances, maternity) nmod:of(receipt, allowances) mark(rob, that) det(Government, the) nsbj(rob, Government) ax(rob, will) ccomp(receipt, rob) dobj(rob, them) case(1982, in) nmod:in(rob, 1982) pnct(widows, ,) case(year, in) det(year, a) amod(year, fll) nmod:in(widows, year) case(operation, of) nmod:of(year, operation) pnct(widows, ,) case(million, of) compond(million, #) compond(million, 300) nmod:of(widows, million) pnct(widows, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) mark(VB,TO) advcl(JJ,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) mark(VB,TO) xcomp(VB,VB) det(JJ,DT) dobj(VB,JJ) pnct(JJ,JJ) det(JJ,DT) root(DTDTJJ) pnct(JJ,JJ) root(JJJJDT) appos(DT,JJ) pnct(JJ,JJ) root(JJJJNNS) cc(NNS,CC) root(CCCCDT) conj:and(NNS,DT) case(NN,IN) nmod:in(NNS,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) ccomp(NN,VB) dobj(VB,PRP) case(CD,IN) nmod:in(VB,CD) pnct(NNS,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NNS,NN) case(NN,IN) nmod:of(NN,NN) pnct(NNS,NNS) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NNS,CD) pnct(NNS,NNS)","[rob, receipt, 1982, Minister, campaign, them, important, tell, mount, Government]","[rob, receipt, 1982, Minister, campaign, them, important, tell, mount, Government]",12,"[mount, tell, campaign, Minister, important]","[mount, tell, campaign, Minister, important]",VB_rob NN_receipt CD_1982 NNP_Minister NN_campaign PRP_them JJ_important VB_tell VB_mount NNP_Government ,"[rob, receipt, 1982, Minister, campaign, them, important, tell, mount, Government]","[rob, receipt, 1982, Minister, campaign, them, important, tell, mount, Government]",VB_rob NN_receipt CD_1982 NNP_Minister NN_campaign PRP_them JJ_important VB_tell VB_mount NNP_Government ,"[rob, receipt, 1982, Minister, campaign, them, important, tell, mount, Government]",VB_rob NN_receipt CD_1982 NNP_Minister NN_campaign PRP_them JJ_important VB_tell VB_mount NNP_Government ,"[rob, receipt, 1982, Minister, campaign, them, important, tell, mount, Government]",VB_rob NN_receipt CD_1982 NNP_Minister NN_campaign PRP_them JJ_important VB_tell VB_mount NNP_Government ,1,2,2,1,1,1,1,1,1,2
Will he tell them that this gang of cheats  who are denying benefits to those who have made contributions  will prevent people from having their rights and will force them on to supplementary benefit  for which he will employ a further 1 000 civil servants?,WillMD hePRP tellVB themPRP thatIN thisDT gangNN ofIN cheatsNNS whoWP areVBP denyingVBG benefitsNNS toTO thoseDT whoWP haveVBP madeVBN contributionsNNS willMD preventVB peopleNNS fromIN havingVBG theirPRP$ rightsNNS andCC willMD forceVB themPRP onIN toTO supplementaryJJ benefitNN forIN whichWDT hePRP willMD employVB aDT furtherJJ 1CD 000CD civilJJ servantsNNS ,"root(ROOT-0, tell-3) aux(tell-3, Will-1) nsubj(tell-3, he-2) dobj(tell-3, them-4) mark(prevent-23, that-5) det(gang-7, this-6) nsubj(prevent-23, gang-7) nsubj(force-31, gang-7) case(cheats-9, of-8) nmod:of(gang-7, cheats-9) punct(cheats-9, ,-10) nsubj(denying-13, who-11) aux(denying-13, are-12) acl:relcl(cheats-9, denying-13) dobj(denying-13, benefits-14) case(those-16, to-15) nmod:to(denying-13, those-16) nsubj(made-19, who-17) aux(made-19, have-18) acl:relcl(those-16, made-19) dobj(made-19, contributions-20) punct(cheats-9, ,-21) aux(prevent-23, will-22) ccomp(tell-3, prevent-23) dobj(prevent-23, people-24) mark(having-26, from-25) advcl(prevent-23, having-26) nmod:poss(rights-28, their-27) dobj(having-26, rights-28) cc(prevent-23, and-29) aux(force-31, will-30) ccomp(tell-3, force-31) conj:and(prevent-23, force-31) dobj(force-31, them-32) case(benefit-36, on-33) case(benefit-36, to-34) amod(benefit-36, supplementary-35) nmod:to(force-31, benefit-36) punct(prevent-23, ,-37) case(which-39, for-38) nmod:for(employ-42, which-39) nsubj(employ-42, he-40) aux(employ-42, will-41) ccomp(prevent-23, employ-42) det(servants-47, a-43) amod(servants-47, further-44) nummod(servants-47, 1,000-45) amod(servants-47, civil-46) dobj(employ-42, servants-47) punct(tell-3, ?-48)",1,0,0,"root(ROOT, tell) ax(tell, Will) nsbj(tell, he) dobj(tell, them) mark(prevent, that) det(gang, this) nsbj(prevent, gang) nsbj(force, gang) case(cheats, of) nmod:of(gang, cheats) pnct(cheats, ,) nsbj(denying, who) ax(denying, are) acl:relcl(cheats, denying) dobj(denying, benefits) case(those, to) nmod:to(denying, those) nsbj(made, who) ax(made, have) acl:relcl(those, made) dobj(made, contribtions) pnct(cheats, ,) ax(prevent, will) ccomp(tell, prevent) dobj(prevent, people) mark(having, from) advcl(prevent, having) nmod:poss(rights, their) dobj(having, rights) cc(prevent, and) ax(force, will) ccomp(tell, force) conj:and(prevent, force) dobj(force, them) case(benefit, on) case(benefit, to) amod(benefit, spplementary) nmod:to(force, benefit) pnct(prevent, ,) case(which, for) nmod:for(employ, which) nsbj(employ, he) ax(employ, will) ccomp(prevent, employ) det(servants, a) amod(servants, frther) nmmod(servants, 1,000) amod(servants, civil) dobj(employ, servants) pnct(tell, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) dobj(VB,PRP) mark(VB,IN) det(NN,DT) nsbj(VB,NN) nsbj(VB,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(NNS,NNS) nsbj(VBG,WP) ax(VBG,VBP) acl:relcl(NNS,VBG) dobj(VBG,NNS) case(DT,TO) nmod:to(VBG,DT) nsbj(VBN,WP) ax(VBN,VBP) acl:relcl(DT,VBN) dobj(VBN,NNS) pnct(NNS,NNS) ax(VB,MD) ccomp(VB,VB) dobj(VB,NNS) mark(VBG,IN) advcl(VB,VBG) nmod:poss(NNS,PRP$) dobj(VBG,NNS) cc(VB,CC) ax(VB,MD) ccomp(VB,VB) conj:and(VB,VB) dobj(VB,PRP) case(NN,IN) case(NN,TO) amod(NN,JJ) nmod:to(VB,NN) pnct(VB,VB) case(WDT,IN) nmod:for(VB,WDT) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,NNS) amod(NNS,JJ) dobj(VB,NNS) pnct(VB,VB)","[he, tell, servants, employ, force, prevent, he, ROOT, them, which]","[he, tell, servants, employ, force, prevent, he, ROOT, them, which]",3,[ ],[ ],PRP_he VB_tell NNS_servants VB_employ NN_force VB_prevent PRP_he PRP_them WDT_which ,"[he, tell, servants, employ, force, prevent, he, ROOT, them, which]","[he, tell, servants, employ, force, prevent, he, ROOT, them, which]",PRP_he VB_tell NNS_servants VB_employ NN_force VB_prevent PRP_he PRP_them WDT_which ,"[he, tell, servants, employ, force, prevent, he, ROOT, them, which]",PRP_he VB_tell NNS_servants VB_employ NN_force VB_prevent PRP_he PRP_them WDT_which ,"[he, tell, servants, employ, force, prevent, he, ROOT, them, which]",PRP_he VB_tell NNS_servants VB_employ NN_force VB_prevent PRP_he PRP_them WDT_which ,3,2,2,0,0,0,2,2,2,2
Will he make clear to the recipients the full entitlement that the Government are denying them?,WillMD hePRP makeVB clearJJ toTO theDT recipientsNNS theDT fullJJ entitlementNN thatIN theDT GovernmentNNP areVBP denyingVBG themPRP ,"root(ROOT-0, make-3) aux(make-3, Will-1) nsubj(make-3, he-2) xcomp(make-3, clear-4) case(recipients-7, to-5) det(recipients-7, the-6) nmod:to(clear-4, recipients-7) det(entitlement-10, the-8) amod(entitlement-10, full-9) dep(recipients-7, entitlement-10) mark(denying-15, that-11) det(Government-13, the-12) nsubj(denying-15, Government-13) aux(denying-15, are-14) acl:relcl(entitlement-10, denying-15) dobj(denying-15, them-16) punct(make-3, ?-17)",1,0,1,"root(ROOT, make) ax(make, Will) nsbj(make, he) xcomp(make, clear) case(recipients, to) det(recipients, the) nmod:to(clear, recipients) det(entitlement, the) amod(entitlement, fll) dep(recipients, entitlement) mark(denying, that) det(Government, the) nsbj(denying, Government) ax(denying, are) acl:relcl(entitlement, denying) dobj(denying, them) pnct(make, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) xcomp(VB,JJ) case(NNS,TO) det(NNS,DT) nmod:to(JJ,NNS) det(NN,DT) amod(NN,JJ) dep(NNS,NN) mark(VBG,IN) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBP) acl:relcl(NN,VBG) dobj(VBG,PRP) pnct(VB,VB)","[make, Government, clear, them, entitlement, denying, he, ROOT]","[make, Government, clear, them, entitlement, denying, he, ROOT]",3,[ ],[ ],VB_make NNP_Government JJ_clear PRP_them NN_entitlement VBG_denying PRP_he ,"[make, Government, clear, them, entitlement, denying, he, ROOT]","[make, Government, clear, them, entitlement, denying, he, ROOT]",VB_make NNP_Government JJ_clear PRP_them NN_entitlement VBG_denying PRP_he ,"[make, Government, clear, them, entitlement, denying, he, ROOT]",VB_make NNP_Government JJ_clear PRP_them NN_entitlement VBG_denying PRP_he ,"[make, Government, clear, them, entitlement, denying, he, ROOT]",VB_make NNP_Government JJ_clear PRP_them NN_entitlement VBG_denying PRP_he ,1,2,2,2,1,2,2,0,1,2
The hon. Gentleman knows that the change in the law was fully debated in the House and was approved by Parliament.,TheDT honNN GentlemanNNP knowsVBZ thatIN theDT changeNN inIN theDT lawNN wasVBD fullyRB debatedVBN inIN theDT HouseNNP andCC wasVBD approvedVBN byIN ParliamentNNP ,"root(ROOT-0, knows-4) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(knows-4, Gentleman-3) mark(debated-13, that-5) det(change-7, the-6) nsubjpass(debated-13, change-7) nsubjpass(approved-19, change-7) case(law-10, in-8) det(law-10, the-9) nmod:in(change-7, law-10) auxpass(debated-13, was-11) advmod(debated-13, fully-12) ccomp(knows-4, debated-13) case(House-16, in-14) det(House-16, the-15) nmod:in(debated-13, House-16) cc(debated-13, and-17) auxpass(approved-19, was-18) ccomp(knows-4, approved-19) conj:and(debated-13, approved-19) case(Parliament-21, by-20) nmod:agent(approved-19, Parliament-21) punct(knows-4, .-22)",1,1,0,"root(ROOT, knows) det(Gentleman, The) compond(Gentleman, hon.) nsbj(knows, Gentleman) mark(debated, that) det(change, the) nsbjpass(debated, change) nsbjpass(approved, change) case(law, in) det(law, the) nmod:in(change, law) axpass(debated, was) advmod(debated, flly) ccomp(knows, debated) case(Hose, in) det(Hose, the) nmod:in(debated, Hose) cc(debated, and) axpass(approved, was) ccomp(knows, approved) conj:and(debated, approved) case(Parliament, by) nmod:agent(approved, Parliament) pnct(knows, .)","root(,VBZ) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) nsbjpass(VBN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) axpass(VBN,VBD) advmod(VBN,RB) ccomp(VBZ,VBN) case(NNP,IN) det(NNP,DT) nmod:in(VBN,NNP) cc(VBN,CC) axpass(VBN,VBD) ccomp(VBZ,VBN) conj:and(VBN,VBN) case(NNP,IN) nmod:agent(VBN,NNP) pnct(VBZ,VBZ)","[ROOT, approved, debated, Gentleman, knows]","[ROOT, approved, debated, Gentleman, knows]",3,"[ROOT, approved, debated, Gentleman, knows]","[ROOT, approved, debated, Gentleman, knows]",VBN_approved VBN_debated NNP_Gentleman VBZ_knows ,"[ROOT, approved, debated, Gentleman, knows]","[ROOT, approved, debated, Gentleman, knows]",VBN_approved VBN_debated NNP_Gentleman VBZ_knows ,"[ROOT, approved, debated, Gentleman, knows]",VBN_approved VBN_debated NNP_Gentleman VBZ_knows ,"[ROOT, approved, debated, Gentleman, knows]",VBN_approved VBN_debated NNP_Gentleman VBZ_knows ,1,2,2,0,0,0,0,0,0,0
I do not wish to be associated with the unnecessary diatribe of the hon. Member for Keighley (Mr. Cryer)  but does my right hon. Friend accept that there is considerable grievance because of the phasing out of the supplement?,IPRP doVBP notRB wishVB toTO beVB associatedVBN withIN theDT unnecessaryJJ diatribeNN ofIN theDT honNN MemberNNP forIN KeighleyNNP (( MrNNP CryerNNP )) butCC doesVBZ myPRP$ rightJJ honNN FriendNNP acceptVBZ thatIN thereEX isVBZ considerableJJ grievanceNN becauseIN ofIN theDT phasingVBG outIN ofIN theDT supplementNN ,"root(ROOT-0, wish-4) nsubj(wish-4, I-1) aux(wish-4, do-2) neg(wish-4, not-3) mark(associated-7, to-5) auxpass(associated-7, be-6) xcomp(wish-4, associated-7) case(diatribe-11, with-8) det(diatribe-11, the-9) amod(diatribe-11, unnecessary-10) nmod:with(associated-7, diatribe-11) case(Member-15, of-12) det(Member-15, the-13) compound(Member-15, hon.-14) nmod:of(diatribe-11, Member-15) case(Keighley-17, for-16) nmod:for(Member-15, Keighley-17) punct(Cryer-20, -LRB--18) compound(Cryer-20, Mr.-19) appos(diatribe-11, Cryer-20) punct(Cryer-20, -RRB--21) punct(wish-4, ,-22) cc(wish-4, but-23) aux(accept-29, does-24) nmod:poss(Friend-28, my-25) amod(Friend-28, right-26) compound(Friend-28, hon.-27) nsubj(accept-29, Friend-28) conj:but(wish-4, accept-29) mark(is-32, that-30) expl(is-32, there-31) ccomp(accept-29, is-32) amod(grievance-34, considerable-33) nsubj(is-32, grievance-34) case(phasing-38, because-35) mwe(because-35, of-36) det(phasing-38, the-37) nmod:because_of(is-32, phasing-38) case(supplement-42, out-39) mwe(out-39, of-40) det(supplement-42, the-41) nmod:out_of(phasing-38, supplement-42) punct(wish-4, ?-43)",1,0,0,"root(ROOT, wish) nsbj(wish, I) ax(wish, do) neg(wish, not) mark(associated, to) axpass(associated, be) xcomp(wish, associated) case(diatribe, with) det(diatribe, the) amod(diatribe, nnecessary) nmod:with(associated, diatribe) case(Member, of) det(Member, the) compond(Member, hon.) nmod:of(diatribe, Member) case(Keighley, for) nmod:for(Member, Keighley) pnct(Cryer, ) compond(Cryer, Mr.) appos(diatribe, Cryer) pnct(Cryer, ) pnct(wish, ,) cc(wish, bt) ax(accept, does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(accept, Friend) conj:bt(wish, accept) mark(is, that) expl(is, there) ccomp(accept, is) amod(grievance, considerable) nsbj(is, grievance) case(phasing, becase) mwe(becase, of) det(phasing, the) nmod:becase_of(is, phasing) case(spplement, ot) mwe(ot, of) det(spplement, the) nmod:ot_of(phasing, spplement) pnct(wish, ?)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) mark(VBN,TO) axpass(VBN,VB) xcomp(VB,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(VBN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NN,NNP) pnct(NNP,) pnct(VB,VB) cc(VB,CC) ax(VBZ,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) conj:bt(VB,VBZ) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBZ,VBZ) amod(NN,JJ) nsbj(VBZ,NN) case(VBG,IN) mwe(IN,IN) det(VBG,DT) nmod:becase_of(VBZ,VBG) case(NN,IN) mwe(IN,IN) det(NN,DT) nmod:ot_of(VBG,NN) pnct(VB,VB)","[Keighley, Friend, Member, right, associated, is, diatribe, accept, Cryer, unnecessary, my]","[Keighley, Friend, Member, associated, is, diatribe, accept, Cryer, unnecessary, my]",6,"[Keighley, diatribe, Member, Cryer, unnecessary, associated]","[Keighley, diatribe, Member, Cryer, unnecessary, associated]",NNP_Keighley NNP_Friend NNP_Member VBN_associated VBZ_is NN_diatribe VBD_accept NNP_Cryer JJ_unnecessary PRP$_my ,"[Keighley, Friend, Member, associated, is, diatribe, accept, Cryer, unnecessary, my]","[Keighley, Friend, Member, associated, is, diatribe, accept, Cryer, unnecessary, my]",NNP_Keighley NNP_Friend NNP_Member VBN_associated VBZ_is NN_diatribe VBD_accept NNP_Cryer JJ_unnecessary PRP$_my ,"[Keighley, Friend, Member, associated, is, diatribe, accept, Cryer, unnecessary, my]",NNP_Keighley NNP_Friend NNP_Member VBN_associated VBZ_is NN_diatribe VBD_accept NNP_Cryer JJ_unnecessary PRP$_my ,"[Keighley, Friend, Member, associated, is, diatribe, accept, Cryer, unnecessary, my]",NNP_Keighley NNP_Friend NNP_Member VBN_associated VBZ_is NN_diatribe VBD_accept NNP_Cryer JJ_unnecessary PRP$_my ,2,2,2,2,1,2,2,2,2,2
I do not think that my hon. Friend is entitled to criticise in those terms a measure for which he voted.,IPRP doVBP notRB thinkVB thatIN myPRP$ honNN FriendNNP isVBZ entitledVBN toTO criticiseVB inIN thoseDT termsNNS aDT measureNN forIN whichWDT hePRP votedVBD ,"root(ROOT-0, think-4) nsubj(think-4, I-1) aux(think-4, do-2) neg(think-4, not-3) mark(entitled-10, that-5) nmod:poss(Friend-8, my-6) compound(Friend-8, hon.-7) nsubjpass(entitled-10, Friend-8) auxpass(entitled-10, is-9) ccomp(think-4, entitled-10) mark(criticise-12, to-11) xcomp(entitled-10, criticise-12) case(terms-15, in-13) det(terms-15, those-14) nmod:in(criticise-12, terms-15) det(measure-17, a-16) dep(terms-15, measure-17) case(which-19, for-18) nmod:for(voted-21, which-19) nsubj(voted-21, he-20) acl:relcl(measure-17, voted-21) punct(think-4, .-22)",1,1,1,"root(ROOT, think) nsbj(think, I) ax(think, do) neg(think, not) mark(entitled, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbjpass(entitled, Friend) axpass(entitled, is) ccomp(think, entitled) mark(criticise, to) xcomp(entitled, criticise) case(terms, in) det(terms, those) nmod:in(criticise, terms) det(measre, a) dep(terms, measre) case(which, for) nmod:for(voted, which) nsbj(voted, he) acl:relcl(measre, voted) pnct(think, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) mark(VBN,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbjpass(VBN,NNP) axpass(VBN,VBZ) ccomp(VB,VBN) mark(VB,TO) xcomp(VBN,VB) case(NNS,IN) det(NNS,DT) nmod:in(VB,NNS) det(NN,DT) dep(NNS,NN) case(WDT,IN) nmod:for(VBD,WDT) nsbj(VBD,PRP) acl:relcl(NN,VBD) pnct(VB,VB)","[entitled, he, which, criticise, voted, my, measure, think, Friend]","[entitled, he, which, criticise, voted, my, measure, think, Friend]",9,"[entitled, he, which, criticise, voted, my, measure, think, Friend]","[entitled, he, which, criticise, voted, my, measure, think, Friend]",JJ_entitled PRP_he WDT_which VB_criticise VBN_voted PRP$_my NN_measure VBP_think NNP_Friend ,"[entitled, he, which, criticise, voted, my, measure, think, Friend]","[entitled, he, which, criticise, voted, my, measure, think, Friend]",JJ_entitled PRP_he WDT_which VB_criticise VBN_voted PRP$_my NN_measure VBP_think NNP_Friend ,"[entitled, he, which, criticise, voted, my, measure, think, Friend]",JJ_entitled PRP_he WDT_which VB_criticise VBN_voted PRP$_my NN_measure VBP_think NNP_Friend ,"[entitled, he, which, criticise, voted, my, measure, think, Friend]",JJ_entitled PRP_he WDT_which VB_criticise VBN_voted PRP$_my NN_measure VBP_think NNP_Friend ,2,2,2,2,1,2,2,2,2,2
If my right hon. Friend the Secretary of State makes comments of that sort  he will not be able to rely on my support in future.,IfIN myPRP$ rightJJ honNN FriendNNP theDT SecretaryNNP ofIN StateNNP makesVBZ commentsNNS ofIN thatDT sortNN hePRP willMD notRB beVB ableJJ toTO relyVB onIN myPRP$ supportNN inIN futureJJ ,"root(ROOT-0, able-20) mark(makes-10, If-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(makes-10, Friend-5) det(Secretary-7, the-6) nsubj(makes-10, Secretary-7) case(State-9, of-8) nmod:of(Secretary-7, State-9) advcl(able-20, makes-10) dobj(makes-10, comments-11) case(sort-14, of-12) det(sort-14, that-13) nmod:of(comments-11, sort-14) punct(able-20, ,-15) nsubj(able-20, he-16) aux(able-20, will-17) neg(able-20, not-18) cop(able-20, be-19) mark(rely-22, to-21) xcomp(able-20, rely-22) case(support-25, on-23) nmod:poss(support-25, my-24) nmod:on(rely-22, support-25) case(future-27, in-26) nmod:in(support-25, future-27) punct(able-20, .-28)",1,0,0,"root(ROOT, able) mark(makes, If) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(makes, Friend) det(Secretary, the) nsbj(makes, Secretary) case(State, of) nmod:of(Secretary, State) advcl(able, makes) dobj(makes, comments) case(sort, of) det(sort, that) nmod:of(comments, sort) pnct(able, ,) nsbj(able, he) ax(able, will) neg(able, not) cop(able, be) mark(rely, to) xcomp(able, rely) case(spport, on) nmod:poss(spport, my) nmod:on(rely, spport) case(ftre, in) nmod:in(spport, ftre) pnct(able, .)","root(,JJ) mark(VBZ,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) det(NNP,DT) nsbj(VBZ,NNP) case(NNP,IN) nmod:of(NNP,NNP) advcl(JJ,VBZ) dobj(VBZ,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(JJ,JJ) nsbj(JJ,PRP) ax(JJ,MD) neg(JJ,RB) cop(JJ,VB) mark(VB,TO) xcomp(JJ,VB) case(NN,IN) nmod:poss(NN,PRP$) nmod:on(VB,NN) case(JJ,IN) nmod:in(NN,JJ) pnct(JJ,JJ)","[support, State, makes, right, he, able, not, Friend, my, rely, ROOT, Secretary, comments]","[State, Secretary, he, able, not, Friend, my, makes, ROOT, support, comments, rely]",10,"[State, makes, able, Secretary, Friend, my, support, comments]","[State, makes, able, Secretary, Friend, my, support, comments]",NNP_State NNP_Secretary PRP_he JJ_able RB_not NNP_Friend PRP$_my VBZ_makes NN_support NNS_comments VB_rely ,"[State, Secretary, he, able, not, Friend, my, makes, ROOT, support, comments, rely]","[State, Secretary, he, able, not, Friend, my, makes, ROOT, support, comments, rely]",NNP_State NNP_Secretary PRP_he JJ_able RB_not NNP_Friend PRP$_my VBZ_makes NN_support NNS_comments VB_rely ,"[State, Secretary, he, able, not, Friend, my, makes, ROOT, support, comments, rely]",NNP_State NNP_Secretary PRP_he JJ_able RB_not NNP_Friend PRP$_my VBZ_makes NN_support NNS_comments VB_rely ,"[State, Secretary, he, able, not, Friend, my, makes, ROOT, support, comments, rely]",NNP_State NNP_Secretary PRP_he JJ_able RB_not NNP_Friend PRP$_my VBZ_makes NN_support NNS_comments VB_rely ,1,2,1,2,1,2,2,0,1,1
If  as is reported today  the Secretary of State proposes to charge for nursery school education  does he realise that that would be a disgraceful decision and that there would be total opposition to it from Labour Members?,IfIN asRB isVBZ reportedVBN todayNN theDT SecretaryNNP ofIN StateNNP proposesNNS toTO chargeVB forIN nurseryJJ schoolNN educationNN doesVBZ hePRP realiseVB thatIN thatDT wouldMD beVB aDT disgracefulJJ decisionNN andCC thatIN thereEX wouldMD beVB totalJJ oppositionNN toTO itPRP fromIN LabourNNP MembersNNS ,"root(ROOT-0, proposes-12) advmod(reported-5, If-1) punct(reported-5, ,-2) mark(reported-5, as-3) auxpass(reported-5, is-4) advcl(proposes-12, reported-5) nmod:tmod(reported-5, today-6) punct(proposes-12, ,-7) det(Secretary-9, the-8) nsubj(proposes-12, Secretary-9) case(State-11, of-10) nmod:of(Secretary-9, State-11) mark(charge-14, to-13) xcomp(proposes-12, charge-14) case(education-18, for-15) compound(education-18, nursery-16) compound(education-18, school-17) nmod:for(charge-14, education-18) punct(proposes-12, ,-19) aux(realise-22, does-20) nsubj(realise-22, he-21) parataxis(proposes-12, realise-22) mark(decision-29, that-23) nsubj(decision-29, that-24) aux(decision-29, would-25) cop(decision-29, be-26) det(decision-29, a-27) amod(decision-29, disgraceful-28) ccomp(realise-22, decision-29) cc(decision-29, and-30) mark(opposition-36, that-31) expl(opposition-36, there-32) aux(opposition-36, would-33) cop(opposition-36, be-34) amod(opposition-36, total-35) ccomp(realise-22, opposition-36) conj:and(decision-29, opposition-36) case(it-38, to-37) nmod:to(opposition-36, it-38) case(Members-41, from-39) compound(Members-41, Labour-40) nmod:from(opposition-36, Members-41) punct(proposes-12, ?-42)",1,0,0,"root(ROOT, proposes) advmod(reported, If) pnct(reported, ,) mark(reported, as) axpass(reported, is) advcl(proposes, reported) nmod:tmod(reported, today) pnct(proposes, ,) det(Secretary, the) nsbj(proposes, Secretary) case(State, of) nmod:of(Secretary, State) mark(charge, to) xcomp(proposes, charge) case(edcation, for) compond(edcation, nrsery) compond(edcation, school) nmod:for(charge, edcation) pnct(proposes, ,) ax(realise, does) nsbj(realise, he) parataxis(proposes, realise) mark(decision, that) nsbj(decision, that) ax(decision, wold) cop(decision, be) det(decision, a) amod(decision, disgracefl) ccomp(realise, decision) cc(decision, and) mark(opposition, that) expl(opposition, there) ax(opposition, wold) cop(opposition, be) amod(opposition, total) ccomp(realise, opposition) conj:and(decision, opposition) case(it, to) nmod:to(opposition, it) case(Members, from) compond(Members, Labor) nmod:from(opposition, Members) pnct(proposes, ?)","root(,NNS) advmod(VBN,IN) pnct(VBN,VBN) mark(VBN,RB) axpass(VBN,VBZ) advcl(NNS,VBN) nmod:tmod(VBN,NN) pnct(NNS,NNS) det(NNP,DT) nsbj(NNS,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(VB,TO) xcomp(NNS,VB) case(NN,IN) compond(NN,JJ) compond(NN,NN) nmod:for(VB,NN) pnct(NNS,NNS) ax(VB,VBZ) nsbj(VB,PRP) parataxis(NNS,VB) mark(NN,IN) nsbj(NN,IN) ax(NN,MD) cop(NN,VB) det(NN,DT) amod(NN,JJ) ccomp(VB,NN) cc(NN,CC) mark(NN,IN) expl(NN,EX) ax(NN,MD) cop(NN,VB) amod(NN,JJ) ccomp(VB,NN) conj:and(NN,NN) case(PRP,TO) nmod:to(NN,PRP) case(NNS,IN) compond(NNS,NNP) nmod:from(NN,NNS) pnct(NNS,NNS)","[he, realise, State, decision, reported, proposes, Members, opposition, ROOT, charge, Secretary]","[he, realise, State, decision, reported, proposes, Members, opposition, ROOT, charge, Secretary]",11,"[State, reported, proposes, Members, opposition, ROOT, charge, Secretary]","[State, reported, proposes, Members, opposition, ROOT, charge, Secretary]",PRP_he VBP_realise NNP_State NN_decision VBN_reported VBZ_proposes NNS_Members NN_opposition VB_charge NNP_Secretary ,"[he, realise, State, decision, reported, proposes, Members, opposition, ROOT, charge, Secretary]","[he, realise, State, decision, reported, proposes, Members, opposition, ROOT, charge, Secretary]",PRP_he VBP_realise NNP_State NN_decision VBN_reported VBZ_proposes NNS_Members NN_opposition VB_charge NNP_Secretary ,"[he, realise, State, decision, reported, proposes, Members, opposition, ROOT, charge, Secretary]",PRP_he VBP_realise NNP_State NN_decision VBN_reported VBZ_proposes NNS_Members NN_opposition VB_charge NNP_Secretary ,"[he, realise, State, decision, reported, proposes, Members, opposition, ROOT, charge, Secretary]",PRP_he VBP_realise NNP_State NN_decision VBN_reported VBZ_proposes NNS_Members NN_opposition VB_charge NNP_Secretary ,2,2,2,2,1,2,2,2,2,2
The Government and local authorities have given priority to such areas.,TheDT GovernmentNNP andCC localJJ authoritiesNNS haveVBP givenVBN priorityNN toTO suchJJ areasNNS ,"root(ROOT-0, given-7) det(Government-2, The-1) nsubj(given-7, Government-2) cc(Government-2, and-3) amod(authorities-5, local-4) conj:and(Government-2, authorities-5) nsubj(given-7, authorities-5) aux(given-7, have-6) dobj(given-7, priority-8) case(areas-11, to-9) amod(areas-11, such-10) nmod:to(priority-8, areas-11) punct(given-7, .-12)",0,0,0,"root(ROOT, given) det(Government, The) nsbj(given, Government) cc(Government, and) amod(athorities, local) conj:and(Government, athorities) nsbj(given, athorities) ax(given, have) dobj(given, priority) case(areas, to) amod(areas, sch) nmod:to(priority, areas) pnct(given, .)","root(,VBN) det(NNP,DT) nsbj(VBN,NNP) cc(NNP,CC) amod(NNS,JJ) conj:and(NNP,NNS) nsbj(VBN,NNS) ax(VBN,VBP) dobj(VBN,NN) case(NNS,TO) amod(NNS,JJ) nmod:to(NN,NNS) pnct(VBN,VBN)","[Government, local, authorities, given, ROOT, and, priority]","[Government, local, authorities, given, ROOT, and, priority]",3,[ ],[ ],NNP_Government JJ_local NNS_authorities VBN_given CC_and NN_priority ,"[Government, local, authorities, given, ROOT, and, priority]","[Government, local, authorities, given, ROOT, and, priority]",NNP_Government JJ_local NNS_authorities VBN_given CC_and NN_priority ,"[Government, local, authorities, given, ROOT, and, priority]",NNP_Government JJ_local NNS_authorities VBN_given CC_and NN_priority ,"[Government, local, authorities, given, ROOT, and, priority]",NNP_Government JJ_local NNS_authorities VBN_given CC_and NN_priority ,-3,0,2,0,0,0,0,0,0,0
Is my hon. Friend aware that the first answer that he gave will be welcome to many Conservative Members?,IsVBZ myPRP$ honJJ FriendNNP awareNN thatIN theDT firstJJ answerNN thatIN hePRP gaveVBD willMD beVB welcomeJJ toTO manyJJ ConservativeJJ MembersNNS ,"root(ROOT-0, aware-5) cop(aware-5, Is-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(aware-5, Friend-4) mark(welcome-15, that-6) det(answer-9, the-7) amod(answer-9, first-8) nsubj(welcome-15, answer-9) dobj(gave-12, that-10) nsubj(gave-12, he-11) acl:relcl(answer-9, gave-12) aux(welcome-15, will-13) cop(welcome-15, be-14) ccomp(aware-5, welcome-15) case(Members-19, to-16) amod(Members-19, many-17) amod(Members-19, Conservative-18) nmod:to(welcome-15, Members-19) punct(aware-5, ?-20)",1,1,0,"root(ROOT, aware) cop(aware, Is) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(aware, Friend) mark(welcome, that) det(answer, the) amod(answer, first) nsbj(welcome, answer) dobj(gave, that) nsbj(gave, he) acl:relcl(answer, gave) ax(welcome, will) cop(welcome, be) ccomp(aware, welcome) case(Members, to) amod(Members, many) amod(Members, Conservative) nmod:to(welcome, Members) pnct(aware, ?)","root(,NN) cop(NN,VBZ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(NN,NNP) mark(JJ,IN) det(NN,DT) amod(NN,JJ) nsbj(JJ,NN) dobj(VBD,IN) nsbj(VBD,PRP) acl:relcl(NN,VBD) ax(JJ,MD) cop(JJ,VB) ccomp(NN,JJ) case(NNS,TO) amod(NNS,JJ) amod(NNS,JJ) nmod:to(JJ,NNS) pnct(NN,NN)","[that, welcome, Conservative, he, aware, Members, Friend, answer, ROOT, gave, my, many]","[that, welcome, Conservative, he, aware, Members, Friend, answer, ROOT, gave, my, many]",4,"[that, welcome, Conservative, he, aware, Members, Friend, answer, ROOT, gave, my, many]","[that, Conservative, welcome, he, Members, answer, gave, many]",IN_that JJ_welcome JJ_Conservative PRP_he JJ_aware NNS_Members NNP_Friend NN_answer VBD_gave PRP$_my JJ_many ,"[that, welcome, Conservative, he, aware, Members, Friend, answer, ROOT, gave, my, many]","[that, welcome, Conservative, he, aware, Members, Friend, answer, ROOT, gave, my, many]",IN_that JJ_welcome JJ_Conservative PRP_he JJ_aware NNS_Members NNP_Friend NN_answer VBD_gave PRP$_my JJ_many ,"[that, welcome, Conservative, he, aware, Members, Friend, answer, ROOT, gave, my, many]",IN_that JJ_welcome JJ_Conservative PRP_he JJ_aware NNS_Members NNP_Friend NN_answer VBD_gave PRP$_my JJ_many ,"[that, welcome, Conservative, he, aware, Members, Friend, answer, ROOT, gave, my, many]",IN_that JJ_welcome JJ_Conservative PRP_he JJ_aware NNS_Members NNP_Friend NN_answer VBD_gave PRP$_my JJ_many ,1,1,1,1,1,1,1,1,1,1
Is he aware that such fantasies on the part of the Secretary of State or his Department have been firmly and totally rejected by the women and families of this country?,IsVBZ hePRP awareJJ thatIN suchJJ fantasiesNNS onIN theDT partNN ofIN theDT SecretaryNNP ofIN StateNNP orCC hisPRP$ DepartmentNNP haveVBP beenVBN firmlyRB andCC totallyRB rejectedVBN byIN theDT womenNNS andCC familiesNNS ofIN thisDT countryNN ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) mark(rejected-23, that-4) amod(fantasies-6, such-5) nsubjpass(rejected-23, fantasies-6) case(part-9, on-7) det(part-9, the-8) nmod:on(fantasies-6, part-9) case(Secretary-12, of-10) det(Secretary-12, the-11) nmod:of(part-9, Secretary-12) case(State-14, of-13) nmod:of(Secretary-12, State-14) cc(State-14, or-15) nmod:poss(Department-17, his-16) nmod:of(Secretary-12, Department-17) conj:or(State-14, Department-17) aux(rejected-23, have-18) auxpass(rejected-23, been-19) advmod(rejected-23, firmly-20) cc(firmly-20, and-21) advmod(rejected-23, totally-22) ccomp(aware-3, rejected-23) case(women-26, by-24) det(women-26, the-25) nmod:agent(rejected-23, women-26) cc(women-26, and-27) nmod:agent(rejected-23, families-28) conj:and(women-26, families-28) case(country-31, of-29) det(country-31, this-30) nmod:of(women-26, country-31) punct(aware-3, ?-32)",1,0,1,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) mark(rejected, that) amod(fantasies, sch) nsbjpass(rejected, fantasies) case(part, on) det(part, the) nmod:on(fantasies, part) case(Secretary, of) det(Secretary, the) nmod:of(part, Secretary) case(State, of) nmod:of(Secretary, State) cc(State, or) nmod:poss(Department, his) nmod:of(Secretary, Department) conj:or(State, Department) ax(rejected, have) axpass(rejected, been) advmod(rejected, firmly) cc(firmly, and) advmod(rejected, totally) ccomp(aware, rejected) case(women, by) det(women, the) nmod:agent(rejected, women) cc(women, and) nmod:agent(rejected, families) conj:and(women, families) case(contry, of) det(contry, this) nmod:of(women, contry) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) mark(VBN,IN) amod(NNS,JJ) nsbjpass(VBN,NNS) case(NN,IN) det(NN,DT) nmod:on(NNS,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) cc(NNP,CC) nmod:poss(NNP,PRP$) nmod:of(NNP,NNP) conj:or(NNP,NNP) ax(VBN,VBP) axpass(VBN,VBN) advmod(VBN,RB) cc(RB,CC) advmod(VBN,RB) ccomp(JJ,VBN) case(NNS,IN) det(NNS,DT) nmod:agent(VBN,NNS) cc(NNS,CC) nmod:agent(VBN,NNS) conj:and(NNS,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(JJ,JJ)","[part, Secretary, State, aware, fantasies, his, or, rejected, he, ROOT, Department]","[part, Secretary, State, aware, fantasies, his, or, rejected, he, ROOT, Department]",5,"[part, Secretary, State, aware, fantasies, his, or, rejected, he, ROOT, Department]","[fantasies, his, or, State, Secretary, part, Department]",NN_part NNP_Secretary NNP_State JJ_aware NNS_fantasies PRP$_his CC_or VBN_rejected PRP_he NNP_Department ,"[part, Secretary, State, aware, fantasies, his, or, rejected, he, ROOT, Department]","[part, Secretary, State, aware, fantasies, his, or, rejected, he, ROOT, Department]",NN_part NNP_Secretary NNP_State JJ_aware NNS_fantasies PRP$_his CC_or VBN_rejected PRP_he NNP_Department ,"[part, Secretary, State, aware, fantasies, his, or, rejected, he, ROOT, Department]",NN_part NNP_Secretary NNP_State JJ_aware NNS_fantasies PRP$_his CC_or VBN_rejected PRP_he NNP_Department ,"[part, Secretary, State, aware, fantasies, his, or, rejected, he, ROOT, Department]",NN_part NNP_Secretary NNP_State JJ_aware NNS_fantasies PRP$_his CC_or VBN_rejected PRP_he NNP_Department ,3,2,2,2,1,2,2,2,2,2
The hon. Lady is a member of a party which in 1975 and 1976 cut back heavily on education in many areas  probably with few shouts from Labour Members.,TheDT honNN LadyNNP isVBZ aDT memberNN ofIN aDT partyNN whichWDT inIN 1975CD andCC 1976CD cutNN backRB heavilyRB onIN educationNN inIN manyJJ areasNNS probablyRB withIN fewJJ shoutsNNS fromIN LabourNNP MembersNNS ,"root(ROOT-0, member-6) det(Lady-3, The-1) compound(Lady-3, hon.-2) nsubj(member-6, Lady-3) cop(member-6, is-4) det(member-6, a-5) case(party-9, of-7) det(party-9, a-8) nmod:of(member-6, party-9) nsubj(cut-15, which-10) case(1975-12, in-11) nmod:in(cut-15, 1975-12) cc(1975-12, and-13) conj:and(1975-12, 1976-14) nmod:in(cut-15, 1976-14) acl:relcl(party-9, cut-15) compound:prt(cut-15, back-16) advmod(cut-15, heavily-17) case(education-19, on-18) nmod:on(cut-15, education-19) case(areas-22, in-20) amod(areas-22, many-21) nmod:in(education-19, areas-22) punct(member-6, ,-23) advmod(shouts-27, probably-24) case(shouts-27, with-25) amod(shouts-27, few-26) nmod:with(member-6, shouts-27) case(Members-30, from-28) compound(Members-30, Labour-29) nmod:from(shouts-27, Members-30) punct(member-6, .-31)",1,0,0,"root(ROOT, member) det(Lady, The) compond(Lady, hon.) nsbj(member, Lady) cop(member, is) det(member, a) case(party, of) det(party, a) nmod:of(member, party) nsbj(ct, which) case(1975, in) nmod:in(ct, 1975) cc(1975, and) conj:and(1975, 1976) nmod:in(ct, 1976) acl:relcl(party, ct) compond:prt(ct, back) advmod(ct, heavily) case(edcation, on) nmod:on(ct, edcation) case(areas, in) amod(areas, many) nmod:in(edcation, areas) pnct(member, ,) advmod(shots, probably) case(shots, with) amod(shots, few) nmod:with(member, shots) case(Members, from) compond(Members, Labor) nmod:from(shots, Members) pnct(member, .)","root(,NN) det(NNP,DT) compond(NNP,NNP) nsbj(NN,NNP) cop(NN,VBZ) det(NN,DT) case(NN,IN) det(NN,DT) nmod:of(NN,NN) nsbj(NN,WDT) case(CD,IN) nmod:in(NN,CD) cc(CD,CC) conj:and(CD,CD) nmod:in(NN,CD) acl:relcl(NN,NN) compond:prt(NN,RB) advmod(NN,RB) case(NN,IN) nmod:on(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(NN,NNS) pnct(NN,NN) advmod(NNS,RB) case(NNS,IN) amod(NNS,JJ) nmod:with(NN,NNS) case(NNS,IN) compond(NNS,NNP) nmod:from(NNS,NNS) pnct(NN,NN)","[Members, shouts, party, ROOT, member, Lady]","[Members, shouts, party, ROOT, member, Lady]",7,"[Members, shouts, party, ROOT, member, Lady]","[Members, shouts]",NNS_Members NNS_shouts NN_party NN_member NNP_Lady ,"[Members, shouts, party, ROOT, member, Lady]","[Members, shouts, party, ROOT, member, Lady]",NNS_Members NNS_shouts NN_party NN_member NNP_Lady ,"[Members, shouts, party, ROOT, member, Lady]",NNS_Members NNS_shouts NN_party NN_member NNP_Lady ,"[Members, shouts, party, ROOT, member, Lady]",NNS_Members NNS_shouts NN_party NN_member NNP_Lady ,1,2,2,0,0,0,0,0,0,0
I remind the hon. Member that over the last year 6 500 more children entered nursery education  under the present Government than in the previous year  and in the first year in which we were in office the number was 5 200.,IPRP remindVBP theDT honNN MemberNNP thatWDT overIN theDT lastJJ yearNN 6CD 500CD moreJJR childrenNNS enteredVBD nurseryJJ educationNN underIN theDT presentJJ GovernmentNNP thanIN inIN theDT previousJJ yearNN andCC inIN theDT firstJJ yearNN inIN whichWDT wePRP wereVBD inIN officeNN theDT numberNN wasVBD 5CD 200CD ,"root(ROOT-0, remind-2) nsubj(remind-2, I-1) det(Member-5, the-3) compound(Member-5, hon.-4) dobj(remind-2, Member-5) dep(entered-14, that-6) case(year-10, over-7) det(year-10, the-8) amod(year-10, last-9) nmod:over(entered-14, year-10) nummod(children-13, 6,500-11) amod(children-13, more-12) nsubj(entered-14, children-13) acl:relcl(Member-5, entered-14) compound(education-16, nursery-15) dobj(entered-14, education-16) punct(entered-14, ,-17) case(Government-21, under-18) det(Government-21, the-19) amod(Government-21, present-20) nmod:under(entered-14, Government-21) case(year-26, than-22) case(year-26, in-23) det(year-26, the-24) amod(year-26, previous-25) acl:in(Government-21, year-26) punct(entered-14, ,-27) cc(entered-14, and-28) case(year-32, in-29) det(year-32, the-30) amod(year-32, first-31) nmod:in(5,200-42, year-32) case(which-34, in-33) nmod:in(office-38, which-34) nsubj(office-38, we-35) cop(office-38, were-36) case(office-38, in-37) acl:relcl(year-32, office-38) det(number-40, the-39) dobj(office-38, number-40) cop(5,200-42, was-41) acl:relcl(Member-5, 5,200-42) conj:and(entered-14, 5,200-42) punct(remind-2, .-43)",1,0,0,"root(ROOT, remind) nsbj(remind, I) det(Member, the) compond(Member, hon.) dobj(remind, Member) dep(entered, that) case(year, over) det(year, the) amod(year, last) nmod:over(entered, year) nmmod(children, 6,500) amod(children, more) nsbj(entered, children) acl:relcl(Member, entered) compond(edcation, nrsery) dobj(entered, edcation) pnct(entered, ,) case(Government, nder) det(Government, the) amod(Government, present) nmod:nder(entered, Government) case(year, than) case(year, in) det(year, the) amod(year, previos) acl:in(Government, year) pnct(entered, ,) cc(entered, and) case(year, in) det(year, the) amod(year, first) nmod:in(5,200, year) case(which, in) nmod:in(office, which) nsbj(office, we) cop(office, were) case(office, in) acl:relcl(year, office) det(nmber, the) dobj(office, nmber) cop(5,200, was) acl:relcl(Member, 5,200) conj:and(entered, 5,200) pnct(remind, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) compond(NNP,NNP) dobj(VBP,NNP) dep(VBD,WDT) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:over(VBD,NN) nmmod(NNS,NNS) amod(NNS,JJR) nsbj(VBD,NNS) acl:relcl(NNP,VBD) compond(NN,JJ) dobj(VBD,NN) pnct(VBD,VBD) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:nder(VBD,NNP) case(NN,IN) case(NN,IN) det(NN,DT) amod(NN,JJ) acl:in(NNP,NN) pnct(VBD,VBD) cc(VBD,CC) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(JJ,NN) case(WDT,IN) nmod:in(NN,WDT) nsbj(NN,PRP) cop(NN,VBD) case(NN,IN) acl:relcl(NN,NN) det(NN,DT) dobj(NN,NN) cop(NN,VBD) acl:relcl(NNP,NNP) conj:and(VBD,VBD) pnct(VBP,VBP)","[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]","[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]",9,"[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]","[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]",VBN_entered NN_office NN_year NNP_Government NN_education NN_year IN_that JJ_previous PRP_I VBP_remind CC_and CD_200 NNS_children NNP_Member CD_5 JJ_present ,"[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]","[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]",VBN_entered NN_office NN_year NNP_Government NN_education NN_year IN_that JJ_previous PRP_I VBP_remind CC_and CD_200 NNS_children NNP_Member CD_5 JJ_present ,"[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]",VBN_entered NN_office NN_year NNP_Government NN_education NN_year IN_that JJ_previous PRP_I VBP_remind CC_and CD_200 NNS_children NNP_Member CD_5 JJ_present ,"[entered, office, year, Government, education, year, that, previous, I, remind, and, 200, children, Member, 5 , ROOT, present]",VBN_entered NN_office NN_year NNP_Government NN_education NN_year IN_that JJ_previous PRP_I VBP_remind CC_and CD_200 NNS_children NNP_Member CD_5 JJ_present ,3,1,2,0,0,0,0,0,0,0
The tractor ouput of this country is no thanks to Her Majesty's Government or the Minister.,TheDT tractorNN ouputNN ofIN thisDT countryNN isVBZ noDT thanksNNS toTO HerNNP MajestyNNP 'sPOS GovernmentNNP orCC theDT MinisterNNP ,"root(ROOT-0, thanks-9) det(ouput-3, The-1) compound(ouput-3, tractor-2) nsubj(thanks-9, ouput-3) case(country-6, of-4) det(country-6, this-5) nmod:of(ouput-3, country-6) cop(thanks-9, is-7) neg(thanks-9, no-8) case(Government-14, to-10) nmod:poss(Government-14, Her-11) nmod:poss(Government-14, Majesty-12) case(Majesty-12, 's-13) nmod:to(thanks-9, Government-14) cc(Government-14, or-15) det(Minister-17, the-16) nmod:to(thanks-9, Minister-17) conj:or(Government-14, Minister-17) punct(thanks-9, .-18)",1,1,0,"root(ROOT, thanks) det(opt, The) compond(opt, tractor) nsbj(thanks, opt) case(contry, of) det(contry, this) nmod:of(opt, contry) cop(thanks, is) neg(thanks, no) case(Government, to) nmod:poss(Government, Her) nmod:poss(Government, Majesty) ""case(Majesty, s)"", nmod:to(thanks, Government) cc(Government, or) det(Minister, the) nmod:to(thanks, Minister) conj:or(Government, Minister) pnct(thanks, .)","root(,NNS) det(NN,DT) compond(NN,NN) nsbj(NNS,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) cop(NNS,VBZ) neg(NNS,DT) case(NNP,TO) nmod:poss(NNP,NNP) nmod:poss(NNP,NNP) case(NNP,POS) nmod:to(NNS,NNP) cc(NNP,CC) det(NNP,DT) nmod:to(NNS,NNP) conj:or(NNP,NNP) pnct(NNS,NNS)","[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]","[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]",10,"[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]","[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]",NNP_Minister NNP_Majesty NNS_thanks PRP$_Her CC_or NNP_Government NN_ouput DT_no ,"[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]","[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]",NNP_Minister NNP_Majesty NNS_thanks PRP$_Her CC_or NNP_Government NN_ouput DT_no ,"[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]",NNP_Minister NNP_Majesty NNS_thanks PRP$_Her CC_or NNP_Government NN_ouput DT_no ,"[Minister, Majesty, thanks, Her, or, Government, ouput, ROOT, no]",NNP_Minister NNP_Majesty NNS_thanks PRP$_Her CC_or NNP_Government NN_ouput DT_no ,1,2,2,1,1,1,1,1,1,2
After what happened in Leyland and Massey Ferguson  was it not the height of stupidity to allow the machinery and plant at Talbot to be shifted when it could have been used for tractor manufacture?,AfterIN whatWP happenedVBD inIN LeylandNNP andCC MasseyNNP FergusonNNP wasVBD itPRP notRB theDT heightNN ofIN stupidityNN toTO allowVB theDT machineryNN andCC plantNN atIN TalbotNNP toTO beVB shiftedVBN whenWRB itPRP couldMD haveVB beenVBN usedVBN forIN tractorNN manufactureNN ,"root(ROOT-0, height-14) mark(happened-3, After-1) nsubj(happened-3, what-2) advcl(height-14, happened-3) case(Leyland-5, in-4) nmod:in(happened-3, Leyland-5) cc(Leyland-5, and-6) compound(Ferguson-8, Massey-7) nmod:in(happened-3, Ferguson-8) conj:and(Leyland-5, Ferguson-8) punct(height-14, ,-9) cop(height-14, was-10) nsubj(height-14, it-11) neg(height-14, not-12) det(height-14, the-13) case(stupidity-16, of-15) nmod:of(height-14, stupidity-16) mark(allow-18, to-17) acl(height-14, allow-18) det(machinery-20, the-19) dobj(allow-18, machinery-20) cc(machinery-20, and-21) dobj(allow-18, plant-22) conj:and(machinery-20, plant-22) case(Talbot-24, at-23) nmod:at(allow-18, Talbot-24) mark(shifted-27, to-25) auxpass(shifted-27, be-26) xcomp(allow-18, shifted-27) advmod(used-33, when-28) nsubjpass(used-33, it-29) aux(used-33, could-30) aux(used-33, have-31) auxpass(used-33, been-32) advcl(shifted-27, used-33) case(manufacture-36, for-34) compound(manufacture-36, tractor-35) nmod:for(used-33, manufacture-36) punct(height-14, ?-37)",0,0,0,"root(ROOT, height) mark(happened, After) nsbj(happened, what) advcl(height, happened) case(Leyland, in) nmod:in(happened, Leyland) cc(Leyland, and) compond(Fergson, Massey) nmod:in(happened, Fergson) conj:and(Leyland, Fergson) pnct(height, ,) cop(height, was) nsbj(height, it) neg(height, not) det(height, the) case(stpidity, of) nmod:of(height, stpidity) mark(allow, to) acl(height, allow) det(machinery, the) dobj(allow, machinery) cc(machinery, and) dobj(allow, plant) conj:and(machinery, plant) case(Talbot, at) nmod:at(allow, Talbot) mark(shifted, to) axpass(shifted, be) xcomp(allow, shifted) advmod(sed, when) nsbjpass(sed, it) ax(sed, cold) ax(sed, have) axpass(sed, been) advcl(shifted, sed) case(manfactre, for) compond(manfactre, tractor) nmod:for(sed, manfactre) pnct(height, ?)","root(,NN) mark(VBD,IN) nsbj(VBD,WP) advcl(NN,VBD) case(NNP,IN) nmod:in(VBD,NNP) cc(NNP,CC) compond(NNP,NNP) nmod:in(VBD,NNP) conj:and(NNP,NNP) pnct(NN,NN) cop(NN,VBD) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) case(NN,IN) nmod:of(NN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) cc(NN,CC) dobj(VB,NN) conj:and(NN,NN) case(NNP,IN) nmod:at(VB,NNP) mark(VBN,TO) axpass(VBN,VB) xcomp(VB,VBN) advmod(VBN,WRB) nsbjpass(VBN,PRP) ax(VBN,MD) ax(VBN,VB) axpass(VBN,VBN) advcl(VBN,VBN) case(NN,IN) compond(NN,NN) nmod:for(VBN,NN) pnct(NN,NN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,2,2,0,0,0,0,0,0,0
How much money was gained from that sale  and will the Minister ensure that it comes back to the community that his actions have devastated?,HowWRB muchJJ moneyNN wasVBD gainedVBN fromIN thatDT saleNN andCC willMD theDT MinisterNNP ensureVB thatIN itPRP comesVBZ backRB toTO theDT communityNN thatIN hisPRP$ actionsNNS haveVBP devastatedVBN ,"root(ROOT-0, gained-5) advmod(much-2, How-1) amod(money-3, much-2) nsubjpass(gained-5, money-3) auxpass(gained-5, was-4) case(sale-8, from-6) det(sale-8, that-7) nmod:from(gained-5, sale-8) punct(gained-5, ,-9) cc(gained-5, and-10) aux(ensure-14, will-11) det(Minister-13, the-12) nsubj(ensure-14, Minister-13) conj:and(gained-5, ensure-14) mark(comes-17, that-15) nsubj(comes-17, it-16) ccomp(ensure-14, comes-17) advmod(comes-17, back-18) case(community-21, to-19) det(community-21, the-20) nmod:to(back-18, community-21) mark(devastated-26, that-22) nmod:poss(actions-24, his-23) nsubj(devastated-26, actions-24) aux(devastated-26, have-25) ccomp(comes-17, devastated-26) punct(gained-5, ?-27)",1,0,0,"root(ROOT, gained) advmod(mch, How) amod(money, mch) nsbjpass(gained, money) axpass(gained, was) case(sale, from) det(sale, that) nmod:from(gained, sale) pnct(gained, ,) cc(gained, and) ax(ensre, will) det(Minister, the) nsbj(ensre, Minister) conj:and(gained, ensre) mark(comes, that) nsbj(comes, it) ccomp(ensre, comes) advmod(comes, back) case(commnity, to) det(commnity, the) nmod:to(back, commnity) mark(devastated, that) nmod:poss(actions, his) nsbj(devastated, actions) ax(devastated, have) ccomp(comes, devastated) pnct(gained, ?)","root(,VBN) advmod(JJ,WRB) amod(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBD) case(NN,IN) det(NN,IN) nmod:from(VBN,NN) pnct(VBN,VBN) cc(VBN,CC) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) conj:and(VBN,VB) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VB,VBZ) advmod(VBZ,RB) case(NN,TO) det(NN,DT) nmod:to(RB,NN) mark(VBN,IN) nmod:poss(NNS,PRP$) nsbj(VBN,NNS) ax(VBN,VBP) ccomp(VBZ,VBN) pnct(VBN,VBN)","[comes, Minister, ensure]","[comes, devastated, Minister, his, ensure, actions]",7,"[devastated, his, actions]","[devastated, his, actions]",VBZ_comes VBN_devastated NNP_Minister PRP$_his VB_ensure NNS_actions ,"[comes, devastated, Minister, his, ensure, actions]","[comes, devastated, Minister, his, ensure, actions]",VBZ_comes VBN_devastated NNP_Minister PRP$_his VB_ensure NNS_actions ,"[comes, devastated, Minister, his, ensure, actions]",VBZ_comes VBN_devastated NNP_Minister PRP$_his VB_ensure NNS_actions ,"[comes, devastated, Minister, his, ensure, actions]",VBZ_comes VBN_devastated NNP_Minister PRP$_his VB_ensure NNS_actions ,2,2,2,2,1,2,2,2,2,2
The hon. Gentleman is wrong to suggest that there was any deliberate sale of equipment to South Africa.,TheDT honNN GentlemanNNP isVBZ wrongJJ toTO suggestVB thatIN thereEX wasVBD anyDT deliberateJJ saleNN ofIN equipmentNN toTO SouthNNP AfricaNNP ,"root(ROOT-0, wrong-5) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(wrong-5, Gentleman-3) cop(wrong-5, is-4) mark(suggest-7, to-6) xcomp(wrong-5, suggest-7) mark(was-10, that-8) expl(was-10, there-9) ccomp(suggest-7, was-10) det(sale-13, any-11) amod(sale-13, deliberate-12) nsubj(was-10, sale-13) case(equipment-15, of-14) nmod:of(sale-13, equipment-15) case(Africa-18, to-16) compound(Africa-18, South-17) nmod:to(equipment-15, Africa-18) punct(wrong-5, .-19)",1,1,0,"root(ROOT, wrong) det(Gentleman, The) compond(Gentleman, hon.) nsbj(wrong, Gentleman) cop(wrong, is) mark(sggest, to) xcomp(wrong, sggest) mark(was, that) expl(was, there) ccomp(sggest, was) det(sale, any) amod(sale, deliberate) nsbj(was, sale) case(eqipment, of) nmod:of(sale, eqipment) case(Africa, to) compond(Africa, Soth) nmod:to(eqipment, Africa) pnct(wrong, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) mark(VBD,IN) expl(VBD,EX) ccomp(VB,VBD) det(NN,DT) amod(NN,JJ) nsbj(VBD,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,TO) compond(NNP,NNP) nmod:to(NN,NNP) pnct(JJ,JJ)","[ROOT, wrong, suggest, Gentleman]","[ROOT, wrong, suggest, Gentleman]",7,"[ROOT, wrong, suggest, Gentleman]",[ ],JJ_wrong VBP_suggest NNP_Gentleman ,"[ROOT, wrong, suggest, Gentleman]","[ROOT, wrong, suggest, Gentleman]",JJ_wrong VBP_suggest NNP_Gentleman ,"[ROOT, wrong, suggest, Gentleman]",JJ_wrong VBP_suggest NNP_Gentleman ,"[ROOT, wrong, suggest, Gentleman]",JJ_wrong VBP_suggest NNP_Gentleman ,2,2,2,2,1,2,2,2,2,2
Does he not now bitterly regret that the Government stood by and allowed the entire Massey Ferguson plant to be shipped to France?,DoesNNS hePRP notRB nowRB bitterlyRB regretVB thatIN theDT GovernmentNNP stoodNN byIN andCC allowedVBD theDT entireJJ MasseyNNP FergusonNNP plantNN toTO beVB shippedVBN toTO FranceNNP ,"root(ROOT-0, regret-6) aux(regret-6, Does-1) nsubj(regret-6, he-2) neg(regret-6, not-3) advmod(regret-6, now-4) advmod(regret-6, bitterly-5) mark(stood-10, that-7) det(Government-9, the-8) nsubj(stood-10, Government-9) nsubj(stood-10'', Government-9) ccomp(regret-6, stood-10) ccomp(regret-6, stood-10'') conj:and(stood-10, stood-10'') case(plant-18, by-11) cc(by-11, and-12) conj:and(by-11, allowed-13) det(plant-18, the-14) amod(plant-18, entire-15) compound(plant-18, Massey-16) compound(plant-18, Ferguson-17) nmod:by(stood-10, plant-18) nmod:allowed(stood-10'', plant-18) mark(shipped-21, to-19) auxpass(shipped-21, be-20) xcomp(stood-10, shipped-21) case(France-23, to-22) nmod:to(shipped-21, France-23) punct(regret-6, ?-24)",1,0,1,"root(ROOT, regret) ax(regret, Does) nsbj(regret, he) neg(regret, not) advmod(regret, now) advmod(regret, bitterly) mark(stood, that) det(Government, the) nsbj(stood, Government) nsbj(stood, Government) ccomp(regret, stood) ccomp(regret, stood) conj:and(stood, stood) case(plant, by) cc(by, and) conj:and(by, allowed) det(plant, the) amod(plant, entire) compond(plant, Massey) compond(plant, Fergson) nmod:by(stood, plant) nmod:allowed(stood, plant) mark(shipped, to) axpass(shipped, be) xcomp(stood, shipped) case(France, to) nmod:to(shipped, France) pnct(regret, ?)","root(,VB) ax(VB,NNS) nsbj(VB,PRP) neg(VB,RB) advmod(VB,RB) advmod(VB,RB) mark(NN,IN) det(NNP,DT) nsbj(NN,NNP) nsbj(NN,NNP) ccomp(VB,NN) ccomp(VB,NN) conj:and(NN,NN) case(NN,IN) cc(IN,CC) conj:and(IN,VBD) det(NN,DT) amod(NN,JJ) compond(NN,NNP) compond(NN,NNP) nmod:by(NN,NN) nmod:allowed(NN,NN) mark(VBN,TO) axpass(VBN,VB) xcomp(NN,VBN) case(NNP,TO) nmod:to(VBN,NNP) pnct(VB,VB)","[stood, not, stood, Government, bitterly, regret, shipped, he, ROOT, plant, now]","[stood, not, stood, Government, bitterly, regret, shipped, he, ROOT, plant, now]",8,"[stood, regret, plant, shipped, stood, Government]","[stood, regret, plant, shipped, stood, Government]",VBN_stood RB_not VBN_stood NNP_Government RB_bitterly VBP_regret VBN_shipped PRP_he NN_plant RB_now ,"[stood, not, stood, Government, bitterly, regret, shipped, he, ROOT, plant, now]","[stood, not, stood, Government, bitterly, regret, shipped, he, ROOT, plant, now]",VBN_stood RB_not VBN_stood NNP_Government RB_bitterly VBP_regret VBN_shipped PRP_he NN_plant RB_now ,"[stood, not, stood, Government, bitterly, regret, shipped, he, ROOT, plant, now]",VBN_stood RB_not VBN_stood NNP_Government RB_bitterly VBP_regret VBN_shipped PRP_he NN_plant RB_now ,"[stood, not, stood, Government, bitterly, regret, shipped, he, ROOT, plant, now]",VBN_stood RB_not VBN_stood NNP_Government RB_bitterly VBP_regret VBN_shipped PRP_he NN_plant RB_now ,1,2,2,2,1,2,2,2,2,2
Of course I regret the closure of Massey Ferguson at Kilmarnock  but I know of no remedy that the hon. Gentleman would offer.,OfIN courseNN IPRP regretVBP theDT closureNN ofIN MasseyNNP FergusonNNP atIN KilmarnockNNP butCC IPRP knowVBP ofIN noDT remedyNN thatIN theDT honNN GentlemanNNP wouldMD offerVB ,"root(ROOT-0, regret-4) case(course-2, Of-1) nmod:of(regret-4, course-2) nsubj(regret-4, I-3) det(closure-6, the-5) dobj(regret-4, closure-6) case(Ferguson-9, of-7) compound(Ferguson-9, Massey-8) nmod:of(closure-6, Ferguson-9) case(Kilmarnock-11, at-10) nmod:at(closure-6, Kilmarnock-11) punct(regret-4, ,-12) cc(regret-4, but-13) nsubj(know-15, I-14) conj:but(regret-4, know-15) case(remedy-18, of-16) neg(remedy-18, no-17) nmod:of(know-15, remedy-18) mark(offer-24, that-19) det(Gentleman-22, the-20) compound(Gentleman-22, hon.-21) nsubj(offer-24, Gentleman-22) aux(offer-24, would-23) ccomp(remedy-18, offer-24) punct(regret-4, .-25)",1,0,0,"root(ROOT, regret) case(corse, Of) nmod:of(regret, corse) nsbj(regret, I) det(closre, the) dobj(regret, closre) case(Fergson, of) compond(Fergson, Massey) nmod:of(closre, Fergson) case(Kilmarnock, at) nmod:at(closre, Kilmarnock) pnct(regret, ,) cc(regret, bt) nsbj(know, I) conj:bt(regret, know) case(remedy, of) neg(remedy, no) nmod:of(know, remedy) mark(offer, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(offer, Gentleman) ax(offer, wold) ccomp(remedy, offer) pnct(regret, .)","root(,VBP) case(NN,IN) nmod:of(VBP,NN) nsbj(VBP,PRP) det(NN,DT) dobj(VBP,NN) case(NNP,IN) compond(NNP,NNP) nmod:of(NN,NNP) case(NNP,IN) nmod:at(NN,NNP) pnct(VBP,VBP) cc(VBP,CC) nsbj(VBP,PRP) conj:bt(VBP,VBP) case(NN,IN) neg(NN,DT) nmod:of(VBP,NN) mark(VB,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(NN,VB) pnct(VBP,VBP)","[Gentleman, offer, remedy]","[Gentleman, offer, remedy]",11,[ ],[ ],NNP_Gentleman VB_offer NN_remedy ,"[Gentleman, offer, remedy]","[Gentleman, offer, remedy]",NNP_Gentleman VB_offer NN_remedy ,"[Gentleman, offer, remedy]",NNP_Gentleman VB_offer NN_remedy ,"[Gentleman, offer, remedy]",NNP_Gentleman VB_offer NN_remedy ,2,2,2,1,1,1,2,0,1,2
I do not think that even he  knowing his political views  would have suggested that the plant should have been nationalised  and that it should have inherited the same difficulties as other nationalised industries in Britain.,IPRP doVBP notRB thinkVB thatIN evenRB hePRP knowingVBG hisPRP$ politicalJJ viewsNNS wouldMD haveVB suggestedVBN thatIN theDT plantNN shouldMD haveVB beenVBN nationalisedVBN andCC thatIN itPRP shouldMD haveVB inheritedVBN theDT sameJJ difficultiesNNS asIN otherJJ nationalisedJJ industriesNNS inIN BritainNNP ,"root(ROOT-0, think-4) nsubj(think-4, I-1) aux(think-4, do-2) neg(think-4, not-3) mark(suggested-16, that-5) advmod(he-7, even-6) nsubj(suggested-16, he-7) punct(suggested-16, ,-8) advcl(suggested-16, knowing-9) nmod:poss(views-12, his-10) amod(views-12, political-11) dobj(knowing-9, views-12) punct(suggested-16, ,-13) aux(suggested-16, would-14) aux(suggested-16, have-15) ccomp(think-4, suggested-16) mark(nationalised-23, that-17) det(plant-19, the-18) nsubjpass(nationalised-23, plant-19) aux(nationalised-23, should-20) aux(nationalised-23, have-21) auxpass(nationalised-23, been-22) ccomp(suggested-16, nationalised-23) punct(nationalised-23, ,-24) cc(nationalised-23, and-25) mark(inherited-30, that-26) nsubj(inherited-30, it-27) aux(inherited-30, should-28) aux(inherited-30, have-29) ccomp(suggested-16, inherited-30) conj:and(nationalised-23, inherited-30) det(difficulties-33, the-31) amod(difficulties-33, same-32) dobj(inherited-30, difficulties-33) case(industries-37, as-34) amod(industries-37, other-35) amod(industries-37, nationalised-36) nmod:as(inherited-30, industries-37) case(Britain-39, in-38) nmod:in(industries-37, Britain-39) punct(think-4, .-40)",1,0,0,"root(ROOT, think) nsbj(think, I) ax(think, do) neg(think, not) mark(sggested, that) advmod(he, even) nsbj(sggested, he) pnct(sggested, ,) advcl(sggested, knowing) nmod:poss(views, his) amod(views, political) dobj(knowing, views) pnct(sggested, ,) ax(sggested, wold) ax(sggested, have) ccomp(think, sggested) mark(nationalised, that) det(plant, the) nsbjpass(nationalised, plant) ax(nationalised, shold) ax(nationalised, have) axpass(nationalised, been) ccomp(sggested, nationalised) pnct(nationalised, ,) cc(nationalised, and) mark(inherited, that) nsbj(inherited, it) ax(inherited, shold) ax(inherited, have) ccomp(sggested, inherited) conj:and(nationalised, inherited) det(difficlties, the) amod(difficlties, same) dobj(inherited, difficlties) case(indstries, as) amod(indstries, other) amod(indstries, nationalised) nmod:as(inherited, indstries) case(Britain, in) nmod:in(indstries, Britain) pnct(think, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) mark(VBN,IN) advmod(PRP,RB) nsbj(VBN,PRP) pnct(VBN,VBN) advcl(VBN,VBG) nmod:poss(NNS,PRP$) amod(NNS,JJ) dobj(VBG,NNS) pnct(VBN,VBN) ax(VBN,MD) ax(VBN,VB) ccomp(VB,VBN) mark(JJ,IN) det(NN,DT) nsbjpass(JJ,NN) ax(JJ,MD) ax(JJ,VB) axpass(JJ,VBN) ccomp(VBN,JJ) pnct(JJ,JJ) cc(JJ,CC) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,MD) ax(VBN,VB) ccomp(VBN,VBN) conj:and(JJ,VBN) det(NNS,DT) amod(NNS,JJ) dobj(VBN,NNS) case(NNS,IN) amod(NNS,JJ) amod(NNS,JJ) nmod:as(VBN,NNS) case(NNP,IN) nmod:in(NNS,NNP) pnct(VB,VB)","[suggested, even, knowing, nationalised, think, he, inherited]","[suggested, nationalised, views, knowing, even, his, political, think, he, inherited]",12,"[political, knowing, views, his]","[political, knowing, views, his]",VBD_suggested JJ_nationalised NNS_views VBG_knowing RB_even PRP$_his JJ_political VBP_think PRP_he VBD_inherited ,"[suggested, nationalised, views, knowing, even, his, political, think, he, inherited]","[suggested, nationalised, views, knowing, even, his, political, think, he, inherited]",VBD_suggested JJ_nationalised NNS_views VBG_knowing RB_even PRP$_his JJ_political VBP_think PRP_he VBD_inherited ,"[suggested, nationalised, views, knowing, even, his, political, think, he, inherited]",VBD_suggested JJ_nationalised NNS_views VBG_knowing RB_even PRP$_his JJ_political VBP_think PRP_he VBD_inherited ,"[suggested, nationalised, views, knowing, even, his, political, think, he, inherited]",VBD_suggested JJ_nationalised NNS_views VBG_knowing RB_even PRP$_his JJ_political VBP_think PRP_he VBD_inherited ,2,2,2,2,1,2,2,2,2,2
My hon. Friend is absolutely right.,MyPRP$ honNN FriendNNP isVBZ absolutelyRB rightJJ ,"root(ROOT-0, right-6) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(right-6, Friend-3) cop(right-6, is-4) advmod(right-6, absolutely-5) punct(right-6, .-7)",1,1,0,"root(ROOT, right) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(right, Friend) cop(right, is) advmod(right, absoltely) pnct(right, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) advmod(JJ,RB) pnct(JJ,JJ)","[My, ROOT, absolutely, right, Friend]","[My, ROOT, absolutely, right, Friend]",12,"[My, ROOT, absolutely, right, Friend]",[ ],PRP$_My RB_absolutely JJ_right NNP_Friend ,"[My, ROOT, absolutely, right, Friend]","[My, ROOT, absolutely, right, Friend]",PRP$_My RB_absolutely JJ_right NNP_Friend ,"[My, ROOT, absolutely, right, Friend]",PRP$_My RB_absolutely JJ_right NNP_Friend ,"[My, ROOT, absolutely, right, Friend]",PRP$_My RB_absolutely JJ_right NNP_Friend ,1,1,1,1,1,1,1,1,1,1
He should stay there.,HePRP shouldMD stayVB thereRB ,"root(ROOT-0, stay-3) nsubj(stay-3, He-1) aux(stay-3, should-2) advmod(stay-3, there-4) punct(stay-3, .-5)",1,1,1,"root(ROOT, stay) nsbj(stay, He) ax(stay, shold) advmod(stay, there) pnct(stay, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) pnct(VB,VB)","[ROOT, He, there, stay]","[ROOT, He, there, stay]",14,[ ],[ ],PRP_He EX_there VB_stay ,"[ROOT, He, there, stay]","[ROOT, He, there, stay]",PRP_He EX_there VB_stay ,"[ROOT, He, there, stay]",PRP_He EX_there VB_stay ,"[ROOT, He, there, stay]",PRP_He EX_there VB_stay ,1,2,2,0,0,0,0,0,0,0
He is the best ally that we Tories have.,HePRP isVBZ theDT bestJJS allyRB thatIN wePRP ToriesNNS haveVBP ,"root(ROOT-0, ally-5) nsubj(ally-5, He-1) cop(ally-5, is-2) det(ally-5, the-3) amod(ally-5, best-4) dobj(have-9, that-6) dobj(have-9, we-7) nsubj(have-9, Tories-8) acl:relcl(ally-5, have-9) punct(ally-5, .-10)",1,0,0,"root(ROOT, ally) nsbj(ally, He) cop(ally, is) det(ally, the) amod(ally, best) dobj(have, that) dobj(have, we) nsbj(have, Tories) acl:relcl(ally, have) pnct(ally, .)","root(,RB) nsbj(RB,PRP) cop(RB,VBZ) det(RB,DT) amod(RB,JJS) dobj(VBP,IN) dobj(VBP,PRP) nsbj(VBP,NNS) acl:relcl(RB,VBP) pnct(RB,RB)","[ROOT, ally, He, best, have]","[ROOT, ally, He, best, have]",5,"[ROOT, ally, He, best, have]",[ ],RB_ally PRP_He JJS_best VBP_have ,"[ROOT, ally, He, best, have]","[ROOT, ally, He, best, have]",RB_ally PRP_He JJS_best VBP_have ,"[ROOT, ally, He, best, have]",RB_ally PRP_He JJS_best VBP_have ,"[ROOT, ally, He, best, have]",RB_ally PRP_He JJS_best VBP_have ,1,1,2,1,1,1,2,0,1,2
When Mr. Scargill returns  will my hon. Friend inquire whether the visit was political or whether he was trying  for once  to help the British coal mining industry?,WhenWRB MrNNP ScargillNNP returnsNNS willMD myPRP$ honNN FriendNNP inquireNN whetherIN theDT visitNN wasVBD politicalJJ orCC whetherIN hePRP wasVBD tryingVBG forIN onceRB toTO helpVB theDT BritishJJ coalNN miningNN industryNN ,"root(ROOT-0, inquire-10) advmod(returns-4, When-1) compound(Scargill-3, Mr.-2) nsubj(returns-4, Scargill-3) advcl(inquire-10, returns-4) punct(inquire-10, ,-5) aux(inquire-10, will-6) nmod:poss(inquire-10, my-7) compound(inquire-10, hon.-8) compound(inquire-10, Friend-9) mark(political-15, whether-11) det(visit-13, the-12) nsubj(political-15, visit-13) cop(political-15, was-14) ccomp(inquire-10, political-15) cc(political-15, or-16) mark(trying-20, whether-17) nsubj(trying-20, he-18) aux(trying-20, was-19) ccomp(inquire-10, trying-20) conj:or(political-15, trying-20) punct(political-15, ,-21) case(once-23, for-22) nmod:for(political-15, once-23) punct(political-15, ,-24) mark(help-26, to-25) xcomp(political-15, help-26) det(industry-31, the-27) amod(industry-31, British-28) compound(industry-31, coal-29) compound(industry-31, mining-30) dobj(help-26, industry-31) punct(inquire-10, ?-32)",0,0,0,"root(ROOT, inqire) advmod(retrns, When) compond(Scargill, Mr.) nsbj(retrns, Scargill) advcl(inqire, retrns) pnct(inqire, ,) ax(inqire, will) nmod:poss(inqire, my) compond(inqire, hon.) compond(inqire, Friend) mark(political, whether) det(visit, the) nsbj(political, visit) cop(political, was) ccomp(inqire, political) cc(political, or) mark(trying, whether) nsbj(trying, he) ax(trying, was) ccomp(inqire, trying) conj:or(political, trying) pnct(political, ,) case(once, for) nmod:for(political, once) pnct(political, ,) mark(help, to) xcomp(political, help) det(indstry, the) amod(indstry, British) compond(indstry, coal) compond(indstry, mining) dobj(help, indstry) pnct(inqire, ?)","root(,NN) advmod(NNS,WRB) compond(NNP,NNP) nsbj(NNS,NNP) advcl(NN,NNS) pnct(NN,NN) ax(NN,MD) nmod:poss(NN,PRP$) compond(NN,NN) compond(NN,NNP) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) cop(JJ,VBD) ccomp(NN,JJ) cc(JJ,CC) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBD) ccomp(NN,VBG) conj:or(JJ,VBG) pnct(JJ,JJ) case(RB,IN) nmod:for(JJ,RB) pnct(JJ,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) compond(NN,NN) dobj(VB,NN) pnct(NN,NN)","[he, my, ROOT, inquire, returns, political, trying]","[he, my, ROOT, inquire, returns, political, trying]",5,"[my, ROOT, inquire, returns, political, trying]","[my, ROOT, inquire, returns, political, trying]",PRP_he PRP$_my NN_inquire NNS_returns JJ_political VBG_trying ,"[he, my, ROOT, inquire, returns, political, trying]","[he, my, ROOT, inquire, returns, political, trying]",PRP_he PRP$_my NN_inquire NNS_returns JJ_political VBG_trying ,"[he, my, ROOT, inquire, returns, political, trying]",PRP_he PRP$_my NN_inquire NNS_returns JJ_political VBG_trying ,"[he, my, ROOT, inquire, returns, political, trying]",PRP_he PRP$_my NN_inquire NNS_returns JJ_political VBG_trying ,0,0,2,0,0,0,0,0,0,0
Does he agree that the miners should  therefore  ignore the militant calls of Mr. Scargill and continue the expansion of their industry by opening new pits and closing old  uneconomic ones?,DoesVBZ hePRP agreeVB thatIN theDT minersNNS shouldMD thereforeRB ignoreVB theDT militantJJ callsNNS ofIN MrNNP ScargillNNP andCC continueVB theDT expansionNN ofIN theirPRP$ industryNN byIN openingVBG newJJ pitsNNS andCC closingVBG oldJJ uneconomicJJ onesNNS ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(ignore-11, that-4) det(miners-6, the-5) nsubj(ignore-11, miners-6) nsubj(continue-19, miners-6) aux(ignore-11, should-7) punct(ignore-11, ,-8) advmod(ignore-11, therefore-9) punct(ignore-11, ,-10) ccomp(agree-3, ignore-11) det(calls-14, the-12) amod(calls-14, militant-13) dobj(ignore-11, calls-14) case(Scargill-17, of-15) compound(Scargill-17, Mr.-16) nmod:of(calls-14, Scargill-17) cc(ignore-11, and-18) ccomp(agree-3, continue-19) conj:and(ignore-11, continue-19) det(expansion-21, the-20) dobj(continue-19, expansion-21) case(industry-24, of-22) nmod:poss(industry-24, their-23) nmod:of(expansion-21, industry-24) mark(opening-26, by-25) advcl(continue-19, opening-26) amod(pits-28, new-27) dobj(opening-26, pits-28) cc(opening-26, and-29) amod(ones-34, closing-30) amod(ones-34, old-31) punct(ones-34, ,-32) amod(ones-34, uneconomic-33) advcl(continue-19, ones-34) conj:and(opening-26, ones-34) punct(agree-3, ?-35)",0,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(ignore, that) det(miners, the) nsbj(ignore, miners) nsbj(contine, miners) ax(ignore, shold) pnct(ignore, ,) advmod(ignore, therefore) pnct(ignore, ,) ccomp(agree, ignore) det(calls, the) amod(calls, militant) dobj(ignore, calls) case(Scargill, of) compond(Scargill, Mr.) nmod:of(calls, Scargill) cc(ignore, and) ccomp(agree, contine) conj:and(ignore, contine) det(expansion, the) dobj(contine, expansion) case(indstry, of) nmod:poss(indstry, their) nmod:of(expansion, indstry) mark(opening, by) advcl(contine, opening) amod(pits, new) dobj(opening, pits) cc(opening, and) amod(ones, closing) amod(ones, old) pnct(ones, ,) amod(ones, neconomic) advcl(contine, ones) conj:and(opening, ones) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VB,IN) det(NNS,DT) nsbj(VB,NNS) nsbj(VB,NNS) ax(VB,MD) pnct(VB,VB) advmod(VB,RB) pnct(VB,VB) ccomp(VB,VB) det(NNS,DT) amod(NNS,JJ) dobj(VB,NNS) case(NNP,IN) compond(NNP,NNP) nmod:of(NNS,NNP) cc(VB,CC) ccomp(VB,VB) conj:and(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) mark(VBG,IN) advcl(VB,VBG) amod(NNS,JJ) dobj(VBG,NNS) cc(VBG,CC) amod(NNS,VBG) amod(NNS,JJ) pnct(NNS,NNS) amod(NNS,JJ) advcl(VB,NNS) conj:and(VBG,NNS) pnct(VB,VB)","[he, ROOT, agree, ignore, continue]","[he, ROOT, agree, ignore, continue]",7,[ ],[ ],PRP_he VB_agree VB_ignore VB_continue ,"[he, ROOT, agree, ignore, continue]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he understand that unemployed construction workers look to the scheme to help provide them with work?,DoesVBZ hePRP understandVB thatIN unemployedJJ constructionNN workersNNS lookVBP toTO theDT schemeNN toTO helpVB provideVB themPRP withIN workNN ,"root(ROOT-0, understand-3) aux(understand-3, Does-1) nsubj(understand-3, he-2) mark(look-8, that-4) amod(workers-7, unemployed-5) compound(workers-7, construction-6) nsubj(look-8, workers-7) ccomp(understand-3, look-8) case(scheme-11, to-9) det(scheme-11, the-10) nmod:to(look-8, scheme-11) mark(help-13, to-12) xcomp(look-8, help-13) ccomp(help-13, provide-14) dobj(provide-14, them-15) case(work-17, with-16) nmod:with(provide-14, work-17) punct(understand-3, ?-18)",0,0,1,"root(ROOT, nderstand) ax(nderstand, Does) nsbj(nderstand, he) mark(look, that) amod(workers, nemployed) compond(workers, constrction) nsbj(look, workers) ccomp(nderstand, look) case(scheme, to) det(scheme, the) nmod:to(look, scheme) mark(help, to) xcomp(look, help) ccomp(help, provide) dobj(provide, them) case(work, with) nmod:with(provide, work) pnct(nderstand, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBP,IN) amod(NNS,JJ) compond(NNS,NN) nsbj(VBP,NNS) ccomp(VB,VBP) case(NN,TO) det(NN,DT) nmod:to(VBP,NN) mark(VB,TO) xcomp(VBP,VB) ccomp(VB,VB) dobj(VB,PRP) case(NN,IN) nmod:with(VB,NN) pnct(VB,VB)","[he, ROOT, understand, look]","[he, ROOT, understand, look]",9,[ ],[ ],PRP_he VBP_understand NN_look ,"[he, ROOT, understand, look]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
My hon. Friend is assiduously pursuing his constituents' interests.,MyPRP$ honNN FriendNNP isVBZ assiduouslyRB pursuingVBG hisPRP$ constituentsNNS 'POS interestsNNS ,"root(ROOT-0, pursuing-6) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(pursuing-6, Friend-3) aux(pursuing-6, is-4) advmod(pursuing-6, assiduously-5) nmod:poss(constituents-8, his-7) nmod:poss(interests-10, constituents-8) case(constituents-8, '-9) dobj(pursuing-6, interests-10) punct(pursuing-6, .-11)",1,1,0,"root(ROOT, prsing) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(prsing, Friend) ax(prsing, is) advmod(prsing, assidosly) nmod:poss(constitents, his) nmod:poss(interests, constitents) ""case(constitents, )"", dobj(prsing, interests) pnct(prsing, .)","root(,VBG) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBG,NNP) ax(VBG,VBZ) advmod(VBG,RB) nmod:poss(NNS,PRP$) nmod:poss(NNS,NNS) case(NNS,POS) dobj(VBG,NNS) pnct(VBG,VBG)","[My, Friend, interests, ROOT, pursuing, assiduously]","[My, interests, pursuing, assiduously, constituents, Friend, his, ROOT]",12,"[constituents, his, interests]","[constituents, his, interests]",PRP$_My NNS_interests VBG_pursuing RB_assiduously NNS_constituents NNP_Friend PRP$_his ,"[My, interests, pursuing, assiduously, constituents, Friend, his, ROOT]","[My, interests, pursuing, assiduously, constituents, Friend, his, ROOT]",PRP$_My NNS_interests VBG_pursuing RB_assiduously NNS_constituents NNP_Friend PRP$_his ,"[My, interests, pursuing, assiduously, constituents, Friend, his, ROOT]",PRP$_My NNS_interests VBG_pursuing RB_assiduously NNS_constituents NNP_Friend PRP$_his ,"[My, interests, pursuing, assiduously, constituents, Friend, his, ROOT]",PRP$_My NNS_interests VBG_pursuing RB_assiduously NNS_constituents NNP_Friend PRP$_his ,3,1,1,1,1,1,1,1,1,1
Does the Minister still not accept that the damaging allegations  apparently made by someone in his Department  that appeared in The Sunday Times will not be corrected by an inquiry into the very different issue of saving money?,DoesVBZ theDT MinisterNNP stillRB notRB acceptVB thatIN theDT damagingJJ allegationsNNS apparentlyRB madeVBN byIN someoneNN inIN hisPRP$ DepartmentNNP thatWDT appearedVBD inIN TheDT SundayNNP TimesNNPS willMD notRB beVB correctedVBN byIN anDT inquiryNN intoIN theDT veryRB differentJJ issueNN ofIN savingVBG moneyNN ,"root(ROOT-0, accept-6) aux(accept-6, Does-1) det(Minister-3, the-2) nsubj(accept-6, Minister-3) advmod(accept-6, still-4) neg(accept-6, not-5) mark(made-13, that-7) det(allegations-10, the-8) amod(allegations-10, damaging-9) nsubjpass(made-13, allegations-10) punct(made-13, ,-11) advmod(made-13, apparently-12) ccomp(accept-6, made-13) case(someone-15, by-14) nmod:by(made-13, someone-15) case(Department-18, in-16) nmod:poss(Department-18, his-17) nmod:in(someone-15, Department-18) punct(made-13, ,-19) nsubj(appeared-21, that-20) ccomp(made-13, appeared-21) case(Times-25, in-22) det(Times-25, The-23) compound(Times-25, Sunday-24) nmod:in(appeared-21, Times-25) aux(corrected-29, will-26) neg(corrected-29, not-27) auxpass(corrected-29, be-28) dep(appeared-21, corrected-29) case(inquiry-32, by-30) det(inquiry-32, an-31) nmod:agent(corrected-29, inquiry-32) case(issue-37, into-33) det(issue-37, the-34) advmod(different-36, very-35) amod(issue-37, different-36) nmod:into(inquiry-32, issue-37) mark(saving-39, of-38) acl(issue-37, saving-39) dobj(saving-39, money-40) punct(accept-6, ?-41)",1,0,0,"root(ROOT, accept) ax(accept, Does) det(Minister, the) nsbj(accept, Minister) advmod(accept, still) neg(accept, not) mark(made, that) det(allegations, the) amod(allegations, damaging) nsbjpass(made, allegations) pnct(made, ,) advmod(made, apparently) ccomp(accept, made) case(someone, by) nmod:by(made, someone) case(Department, in) nmod:poss(Department, his) nmod:in(someone, Department) pnct(made, ,) nsbj(appeared, that) ccomp(made, appeared) case(Times, in) det(Times, The) compond(Times, Snday) nmod:in(appeared, Times) ax(corrected, will) neg(corrected, not) axpass(corrected, be) dep(appeared, corrected) case(inqiry, by) det(inqiry, an) nmod:agent(corrected, inqiry) case(isse, into) det(isse, the) advmod(different, very) amod(isse, different) nmod:into(inqiry, isse) mark(saving, of) acl(isse, saving) dobj(saving, money) pnct(accept, ?)","root(,VB) ax(VB,VBZ) det(NNP,DT) nsbj(VB,NNP) advmod(VB,RB) neg(VB,RB) mark(VBN,WDT) det(NNS,DT) amod(NNS,JJ) nsbjpass(VBN,NNS) pnct(VBN,VBN) advmod(VBN,RB) ccomp(VB,VBN) case(NN,IN) nmod:by(VBN,NN) case(NNP,IN) nmod:poss(NNP,PRP$) nmod:in(NN,NNP) pnct(VBN,VBN) nsbj(VBD,WDT) ccomp(VBN,VBD) case(NNPS,IN) det(NNPS,DT) compond(NNPS,NNP) nmod:in(VBD,NNPS) ax(VBN,MD) neg(VBN,RB) axpass(VBN,VB) dep(VBD,VBN) case(NN,IN) det(NN,DT) nmod:agent(VBN,NN) case(NN,IN) det(NN,DT) advmod(JJ,RB) amod(NN,JJ) nmod:into(NN,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,NN) pnct(VB,VB)","[accept, not, still, Minister, ROOT, made]","[accept, not, someone, his, Department, still, Minister, ROOT, made]",15,"[someone, his, Department]","[someone, his, Department]",VBD_accept RB_not NN_someone PRP$_his NNP_Department RB_still NNP_Minister VBN_made ,"[accept, not, someone, his, Department, still, Minister, ROOT, made]","[accept, not, someone, his, Department, still, Minister, ROOT, made]",VBD_accept RB_not NN_someone PRP$_his NNP_Department RB_still NNP_Minister VBN_made ,"[accept, not, someone, his, Department, still, Minister, ROOT, made]",VBD_accept RB_not NN_someone PRP$_his NNP_Department RB_still NNP_Minister VBN_made ,"[accept, not, someone, his, Department, still, Minister, ROOT, made]",VBD_accept RB_not NN_someone PRP$_his NNP_Department RB_still NNP_Minister VBN_made ,1,2,2,2,1,2,0,0,0,2
Does he not appreciate that those who have to budget on behalf of NACAB are entitled to know whether they will have the funds to enable them to continue their activity before the bills arise for payment?,DoesNNS hePRP notRB appreciateVB thatIN thoseDT whoWP haveVBP toTO budgetNN onIN behalfNN ofIN NACABNNP areVBP entitledVBN toTO knowVB whetherIN theyPRP willMD haveVB theDT fundsNNS toTO enableVB themPRP toTO continueVB theirPRP$ activityNN beforeIN theDT billsNNS ariseVBP forIN paymentNN ,"root(ROOT-0, appreciate-4) aux(appreciate-4, Does-1) nsubj(appreciate-4, he-2) neg(appreciate-4, not-3) mark(entitled-16, that-5) nsubjpass(entitled-16, those-6) nsubj(have-8, who-7) acl:relcl(those-6, have-8) case(budget-10, to-9) nmod:to(have-8, budget-10) case(behalf-12, on-11) nmod:on(budget-10, behalf-12) case(NACAB-14, of-13) nmod:of(behalf-12, NACAB-14) auxpass(entitled-16, are-15) ccomp(appreciate-4, entitled-16) mark(know-18, to-17) xcomp(entitled-16, know-18) mark(have-22, whether-19) nsubj(have-22, they-20) aux(have-22, will-21) ccomp(know-18, have-22) det(funds-24, the-23) dobj(have-22, funds-24) mark(enable-26, to-25) acl(funds-24, enable-26) dobj(enable-26, them-27) mark(continue-29, to-28) xcomp(enable-26, continue-29) nmod:poss(activity-31, their-30) dobj(continue-29, activity-31) mark(arise-35, before-32) det(bills-34, the-33) nsubj(arise-35, bills-34) advcl(continue-29, arise-35) case(payment-37, for-36) nmod:for(arise-35, payment-37) punct(appreciate-4, ?-38)",0,0,0,"root(ROOT, appreciate) ax(appreciate, Does) nsbj(appreciate, he) neg(appreciate, not) mark(entitled, that) nsbjpass(entitled, those) nsbj(have, who) acl:relcl(those, have) case(bdget, to) nmod:to(have, bdget) case(behalf, on) nmod:on(bdget, behalf) case(NACAB, of) nmod:of(behalf, NACAB) axpass(entitled, are) ccomp(appreciate, entitled) mark(know, to) xcomp(entitled, know) mark(have, whether) nsbj(have, they) ax(have, will) ccomp(know, have) det(fnds, the) dobj(have, fnds) mark(enable, to) acl(fnds, enable) dobj(enable, them) mark(contine, to) xcomp(enable, contine) nmod:poss(activity, their) dobj(contine, activity) mark(arise, before) det(bills, the) nsbj(arise, bills) advcl(contine, arise) case(payment, for) nmod:for(arise, payment) pnct(appreciate, ?)","root(,VB) ax(VB,NNS) nsbj(VB,PRP) neg(VB,RB) mark(VBN,IN) nsbjpass(VBN,DT) nsbj(VB,WP) acl:relcl(DT,VB) case(NN,TO) nmod:to(VB,NN) case(NN,IN) nmod:on(NN,NN) case(NNP,IN) nmod:of(NN,NNP) axpass(VBN,VBP) ccomp(VB,VBN) mark(VB,TO) xcomp(VBN,VB) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) det(NNS,DT) dobj(VB,NNS) mark(VB,TO) acl(NNS,VB) dobj(VB,PRP) mark(VB,TO) xcomp(VB,VB) nmod:poss(NN,PRP$) dobj(VB,NN) mark(VBP,IN) det(NNS,DT) nsbj(VBP,NNS) advcl(VB,VBP) case(NN,IN) nmod:for(VBP,NN) pnct(VB,VB)","[he, ROOT, not, appreciate, entitled]","[he, ROOT, not, appreciate, entitled]",3,[ ],[ ],PRP_he RB_not VB_appreciate JJ_entitled ,"[he, ROOT, not, appreciate, entitled]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he recognise that budgeting on a hand to mouth basis is an impossible way of proceeding for NACAB?,DoesVBZ hePRP recogniseVB thatIN budgetingVBG onIN aDT handNN toTO mouthVB basisNN isVBZ anDT impossibleJJ wayNN ofIN proceedingVBG forIN NACABNNP ,"root(ROOT-0, way-15) aux(recognise-3, Does-1) nsubj(recognise-3, he-2) csubj(way-15, recognise-3) det(budgeting-5, that-4) dobj(recognise-3, budgeting-5) case(hand-8, on-6) det(hand-8, a-7) nmod:on(recognise-3, hand-8) case(basis-11, to-9) compound(basis-11, mouth-10) nmod:to(hand-8, basis-11) cop(way-15, is-12) det(way-15, an-13) amod(way-15, impossible-14) mark(proceeding-17, of-16) acl(way-15, proceeding-17) case(NACAB-19, for-18) nmod:for(proceeding-17, NACAB-19) punct(way-15, ?-20)",0,0,1,"root(ROOT, way) ax(recognise, Does) nsbj(recognise, he) csbj(way, recognise) det(bdgeting, that) dobj(recognise, bdgeting) case(hand, on) det(hand, a) nmod:on(recognise, hand) case(basis, to) compond(basis, moth) nmod:to(hand, basis) cop(way, is) det(way, an) amod(way, impossible) mark(proceeding, of) acl(way, proceeding) case(NACAB, for) nmod:for(proceeding, NACAB) pnct(way, ?)","root(,NN) ax(VB,VBZ) nsbj(VB,PRP) csbj(NN,VB) det(VBG,IN) dobj(VB,VBG) case(NN,IN) det(NN,DT) nmod:on(VB,NN) case(NN,TO) compond(NN,VB) nmod:to(NN,NN) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) mark(VBG,IN) acl(NN,VBG) case(NNP,IN) nmod:for(VBG,NNP) pnct(NN,NN)","[he, recognise, hand, budgeting, way]","[he, recognise, hand, budgeting, way]",3,[ ],[ ],PRP_he VBP_recognise NN_hand VBG_budgeting NN_way ,"[he, recognise, hand, budgeting, way]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is he aware that if he intends to do that he will have the support of the whole House?,IsVBZ hePRP awareJJ thatIN ifIN hePRP intendsVBZ toTO doVB thatIN hePRP willMD haveVB theDT supportNN ofIN theDT wholeJJ HouseNNP ,"root(ROOT-0, aware-3) cop(aware-3, Is-1) nsubj(aware-3, he-2) dep(aware-3, that-4) mark(intends-7, if-5) nsubj(intends-7, he-6) dep(that-4, intends-7) mark(do-9, to-8) xcomp(intends-7, do-9) mark(have-13, that-10) nsubj(have-13, he-11) aux(have-13, will-12) ccomp(do-9, have-13) det(support-15, the-14) dobj(have-13, support-15) case(House-19, of-16) det(House-19, the-17) amod(House-19, whole-18) nmod:of(support-15, House-19) punct(intends-7, ?-20)",1,0,1,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) dep(aware, that) mark(intends, if) nsbj(intends, he) dep(that, intends) mark(do, to) xcomp(intends, do) mark(have, that) nsbj(have, he) ax(have, will) ccomp(do, have) det(spport, the) dobj(have, spport) case(Hose, of) det(Hose, the) amod(Hose, whole) nmod:of(spport, Hose) pnct(intends, ?)","root(,JJ) cop(JJ,VBZ) nsbj(JJ,PRP) dep(JJ,IN) mark(VBZ,IN) nsbj(VBZ,PRP) dep(IN,VBZ) mark(VB,TO) xcomp(VBZ,VB) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VB,VB) det(NN,DT) dobj(VB,NN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NN,NNP) pnct(VBZ,VBZ)","[intends, he, aware, do, support, have, he, ROOT, he, that]","[intends, he, aware, do, support, have, he, ROOT, he, that]",3,"[do, he, intends, ROOT, he, aware, that]","[intends, do, he, that]",VBZ_intends PRP_he JJ_aware VB_do NN_support VBP_have PRP_he PRP_he IN_that ,"[intends, he, aware, do, support, have, he, ROOT, he, that]","[intends, he, aware, do, support, have, he, ROOT, he, that]",VBZ_intends PRP_he JJ_aware VB_do NN_support VBP_have PRP_he PRP_he IN_that ,"[intends, he, aware, do, support, have, he, ROOT, he, that]",VBZ_intends PRP_he JJ_aware VB_do NN_support VBP_have PRP_he PRP_he IN_that ,"[intends, he, aware, do, support, have, he, ROOT, he, that]",VBZ_intends PRP_he JJ_aware VB_do NN_support VBP_have PRP_he PRP_he IN_that ,3,1,2,1,1,1,1,1,1,2
I share my hon. Friend's views on that.,IPRP shareNN myPRP$ honNN FriendNNP 'sPOS viewsNNS onIN thatDT ,"root(ROOT-0, share-2) nsubj(share-2, I-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) nmod:poss(views-7, Friend-5) case(Friend-5, 's-6) dobj(share-2, views-7) case(that-9, on-8) nmod:on(views-7, that-9) punct(share-2, .-10)",1,0,0,"root(ROOT, share) nsbj(share, I) nmod:poss(Friend, my) compond(Friend, hon.) nmod:poss(views, Friend) ""case(Friend, s)"", dobj(share, views) case(that, on) nmod:on(views, that) pnct(share, .)","root(,NN) nsbj(NN,PRP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) dobj(NN,NNS) case(DT,IN) nmod:on(NNS,DT) pnct(NN,NN)","[views, Friend, that, my, share]","[views, Friend, that, my, share]",5,"[views, Friend, that, my, share]","[views, Friend, that, my, share]",NNS_views NNP_Friend IN_that PRP$_my NN_share ,"[views, Friend, that, my, share]","[views, Friend, that, my, share]",NNS_views NNP_Friend IN_that PRP$_my NN_share ,"[views, Friend, that, my, share]",NNS_views NNP_Friend IN_that PRP$_my NN_share ,"[views, Friend, that, my, share]",NNS_views NNP_Friend IN_that PRP$_my NN_share ,2,1,1,0,0,0,0,0,0,0
Is not the whole affair yet another disgraceful but unsuccessfull attempt to smear the CAB and Joan Ruddock and is it not similar to the attack made by his colleague the Secretary of State for Defence at the weekend?,IsVBZ notRB theDT wholeJJ affairNN yetRB anotherDT disgracefulNN butCC unsuccessfullJJ attemptNN toTO smearVB theDT CABNNP andCC JoanNNP RuddockNNP andCC isVBZ itPRP notRB similarJJ toTO theDT attackNN madeVBN byIN hisPRP$ colleagueNN theDT SecretaryNNP ofIN StateNNP forIN DefenceNNP atIN theDT weekendNN ,"root(ROOT-0, affair-5) cop(affair-5, Is-1) neg(affair-5, not-2) det(affair-5, the-3) amod(affair-5, whole-4) advmod(attempt-11, yet-6) det(attempt-11, another-7) amod(attempt-11, disgraceful-8) cc(disgraceful-8, but-9) conj:but(disgraceful-8, unsuccessfull-10) amod(attempt-11, unsuccessfull-10) dobj(affair-5, attempt-11) mark(smear-13, to-12) acl(attempt-11, smear-13) det(CAB-15, the-14) dobj(smear-13, CAB-15) cc(CAB-15, and-16) compound(Ruddock-18, Joan-17) dobj(smear-13, Ruddock-18) conj:and(CAB-15, Ruddock-18) cc(affair-5, and-19) cop(similar-23, is-20) nsubj(similar-23, it-21) neg(similar-23, not-22) conj:and(affair-5, similar-23) case(attack-26, to-24) det(attack-26, the-25) nmod:to(similar-23, attack-26) acl(attack-26, made-27) case(colleague-30, by-28) nmod:poss(colleague-30, his-29) nmod:by(made-27, colleague-30) det(Secretary-32, the-31) dep(colleague-30, Secretary-32) case(State-34, of-33) nmod:of(Secretary-32, State-34) case(Defence-36, for-35) nmod:for(Secretary-32, Defence-36) case(weekend-39, at-37) det(weekend-39, the-38) nmod:at(Secretary-32, weekend-39) punct(affair-5, ?-40)",1,1,0,"root(ROOT, affair) cop(affair, Is) neg(affair, not) det(affair, the) amod(affair, whole) advmod(attempt, yet) det(attempt, another) amod(attempt, disgracefl) cc(disgracefl, bt) conj:bt(disgracefl, nsccessfll) amod(attempt, nsccessfll) dobj(affair, attempt) mark(smear, to) acl(attempt, smear) det(CAB, the) dobj(smear, CAB) cc(CAB, and) compond(Rddock, Joan) dobj(smear, Rddock) conj:and(CAB, Rddock) cc(affair, and) cop(similar, is) nsbj(similar, it) neg(similar, not) conj:and(affair, similar) case(attack, to) det(attack, the) nmod:to(similar, attack) acl(attack, made) case(colleage, by) nmod:poss(colleage, his) nmod:by(made, colleage) det(Secretary, the) dep(colleage, Secretary) case(State, of) nmod:of(Secretary, State) case(Defence, for) nmod:for(Secretary, Defence) case(weekend, at) det(weekend, the) nmod:at(Secretary, weekend) pnct(affair, ?)","root(,NN) cop(NN,VBZ) neg(NN,RB) det(NN,DT) amod(NN,JJ) advmod(NN,RB) det(NN,DT) amod(NN,NN) cc(NN,CC) conj:bt(NN,JJ) amod(NN,JJ) dobj(NN,NN) mark(VB,TO) acl(NN,VB) det(NNP,DT) dobj(VB,NNP) cc(NNP,CC) compond(NNP,NNP) dobj(VB,NNP) conj:and(NNP,NNP) cc(NN,CC) cop(JJ,VBZ) nsbj(JJ,PRP) neg(JJ,RB) conj:and(NN,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) acl(NN,VBN) case(NN,IN) nmod:poss(NN,PRP$) nmod:by(VBN,NN) det(NNP,DT) dep(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) case(NN,IN) det(NN,DT) nmod:at(NNP,NN) pnct(NN,NN)","[his, Secretary, weekend, Defence, State, made, colleague]","[his, Secretary, weekend, Defence, State, made, colleague]",6,"[his, Secretary, weekend, Defence, State, made, colleague]","[his, Secretary, weekend, Defence, State, made, colleague]",PRP$_his NNP_Secretary NN_weekend NNP_Defence NNP_State VBN_made NN_colleague ,"[his, Secretary, weekend, Defence, State, made, colleague]","[his, Secretary, weekend, Defence, State, made, colleague]",PRP$_his NNP_Secretary NN_weekend NNP_Defence NNP_State VBN_made NN_colleague ,"[his, Secretary, weekend, Defence, State, made, colleague]",PRP$_his NNP_Secretary NN_weekend NNP_Defence NNP_State VBN_made NN_colleague ,"[his, Secretary, weekend, Defence, State, made, colleague]",PRP$_his NNP_Secretary NN_weekend NNP_Defence NNP_State VBN_made NN_colleague ,1,2,2,0,0,0,0,0,0,0
Mrs. Ruddock is a scrupulous worker for CAB who would not dream of committing the misdemeanours alleged.,MrsNNP RuddockNNP isVBZ aDT scrupulousJJ workerNN forIN CABNNP whoWP wouldMD notRB dreamVB ofIN committingVBG theDT misdemeanoursNNS allegedVBD ,"root(ROOT-0, worker-6) compound(Ruddock-2, Mrs.-1) nsubj(worker-6, Ruddock-2) cop(worker-6, is-3) det(worker-6, a-4) amod(worker-6, scrupulous-5) case(CAB-8, for-7) nmod:for(worker-6, CAB-8) nsubj(dream-12, who-9) aux(dream-12, would-10) neg(dream-12, not-11) acl:relcl(CAB-8, dream-12) mark(committing-14, of-13) advcl(dream-12, committing-14) det(misdemeanours-16, the-15) dobj(committing-14, misdemeanours-16) acl(misdemeanours-16, alleged-17) punct(worker-6, .-18)",0,0,0,"root(ROOT, worker) compond(Rddock, Mrs.) nsbj(worker, Rddock) cop(worker, is) det(worker, a) amod(worker, scrplos) case(CAB, for) nmod:for(worker, CAB) nsbj(dream, who) ax(dream, wold) neg(dream, not) acl:relcl(CAB, dream) mark(committing, of) advcl(dream, committing) det(misdemeanors, the) dobj(committing, misdemeanors) acl(misdemeanors, alleged) pnct(worker, .)","root(,NN) compond(NNP,NNP) nsbj(NN,NNP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) case(NNP,IN) nmod:for(NN,NNP) nsbj(VB,WP) ax(VB,MD) neg(VB,RB) acl:relcl(NNP,VB) mark(VBG,IN) advcl(VB,VBG) det(NNS,DT) dobj(VBG,NNS) acl(NNS,VBD) pnct(NN,NN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As this is  in my view  a libellous statement  should not the Minister resign?,AsIN thisDT isVBZ inIN myPRP$ viewNN aDT libellousJJ statementNN shouldMD notRB theDT MinisterNNP resignNN ,"root(ROOT-0, resign-17) mark(is-3, As-1) nsubj(is-3, this-2) advcl(resign-17, is-3) punct(resign-17, ,-4) case(view-7, in-5) nmod:poss(view-7, my-6) nmod:in(resign-17, view-7) punct(resign-17, ,-8) det(statement-11, a-9) amod(statement-11, libellous-10) nsubj(resign-17, statement-11) punct(resign-17, ,-12) aux(resign-17, should-13) neg(resign-17, not-14) det(Minister-16, the-15) nsubj(resign-17, Minister-16) punct(resign-17, ?-18)",1,0,0,"root(ROOT, resign) mark(is, As) nsbj(is, this) advcl(resign, is) pnct(resign, ,) case(view, in) nmod:poss(view, my) nmod:in(resign, view) pnct(resign, ,) det(statement, a) amod(statement, libellos) nsbj(resign, statement) pnct(resign, ,) ax(resign, shold) neg(resign, not) det(Minister, the) nsbj(resign, Minister) pnct(resign, ?)","root(,NN) mark(VBZ,IN) nsbj(VBZ,DT) advcl(NN,VBZ) pnct(NN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) pnct(NN,NN) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) pnct(NN,NN) ax(NN,MD) neg(NN,RB) det(NNP,DT) nsbj(NN,NNP) pnct(NN,NN)","[Minister, resign, view, is, ROOT, not, statement]","[Minister, resign, view, is, ROOT, not, statement]",7,[ ],[ ],NNP_Minister VB_resign NN_view VBZ_is RB_not NN_statement ,"[Minister, resign, view, is, ROOT, not, statement]","[Minister, resign, view, is, ROOT, not, statement]",NNP_Minister VB_resign NN_view VBZ_is RB_not NN_statement ,"[Minister, resign, view, is, ROOT, not, statement]",NNP_Minister VB_resign NN_view VBZ_is RB_not NN_statement ,"[Minister, resign, view, is, ROOT, not, statement]",NNP_Minister VB_resign NN_view VBZ_is RB_not NN_statement ,1,2,2,2,1,2,2,2,2,2
If there is any question of smears and slurs  it seems that they have been directed much more at me and the Government.,IfIN thereEX isVBZ anyDT questionNN ofIN smearsNNS andCC slursVBZ itPRP seemsVBZ thatIN theyPRP haveVBP beenVBN directedVBN muchRB moreRBR atIN mePRP andCC theDT GovernmentNNP ,"root(ROOT-0, seems-12) mark(is-3, If-1) expl(is-3, there-2) advcl(seems-12, is-3) det(question-5, any-4) nsubj(is-3, question-5) case(smears-7, of-6) nmod:of(question-5, smears-7) cc(smears-7, and-8) nmod:of(question-5, slurs-9) conj:and(smears-7, slurs-9) punct(seems-12, ,-10) nsubj(seems-12, it-11) mark(directed-17, that-13) nsubjpass(directed-17, they-14) aux(directed-17, have-15) auxpass(directed-17, been-16) ccomp(seems-12, directed-17) advmod(more-19, much-18) dobj(directed-17, more-19) case(me-21, at-20) nmod:at(more-19, me-21) cc(more-19, and-22) det(Government-24, the-23) dobj(directed-17, Government-24) conj:and(more-19, Government-24) punct(seems-12, .-25)",1,0,0,"root(ROOT, seems) mark(is, If) expl(is, there) advcl(seems, is) det(qestion, any) nsbj(is, qestion) case(smears, of) nmod:of(qestion, smears) cc(smears, and) nmod:of(qestion, slrs) conj:and(smears, slrs) pnct(seems, ,) nsbj(seems, it) mark(directed, that) nsbjpass(directed, they) ax(directed, have) axpass(directed, been) ccomp(seems, directed) advmod(more, mch) dobj(directed, more) case(me, at) nmod:at(more, me) cc(more, and) det(Government, the) dobj(directed, Government) conj:and(more, Government) pnct(seems, .)","root(,VBZ) mark(VBZ,IN) expl(VBZ,EX) advcl(VBZ,VBZ) det(NN,DT) nsbj(VBZ,NN) case(NNS,IN) nmod:of(NN,NNS) cc(NNS,CC) nmod:of(NN,VBZ) conj:and(NNS,VBZ) pnct(VBZ,VBZ) nsbj(VBZ,PRP) mark(VBN,IN) nsbjpass(VBN,PRP) ax(VBN,VBP) axpass(VBN,VBN) ccomp(VBZ,VBN) advmod(RBR,RB) dobj(VBN,RBR) case(PRP,IN) nmod:at(RBR,PRP) cc(RBR,CC) det(NNP,DT) dobj(VBN,NNP) conj:and(RBR,NNP) pnct(VBZ,VBZ)","[seems, much, me, and, more, they, directed, Government]","[seems, much, me, and, more, they, directed, Government]",8,"[seems, much, me, and, more, they, directed, Government]","[seems, much, me, and, more, they, directed, Government]",VBZ_seems RB_much PRP_me CC_and RBR_more PRP_they VBN_directed NNP_Government ,"[seems, much, me, and, more, they, directed, Government]","[seems, much, me, and, more, they, directed, Government]",VBZ_seems RB_much PRP_me CC_and RBR_more PRP_they VBN_directed NNP_Government ,"[seems, much, me, and, more, they, directed, Government]",VBZ_seems RB_much PRP_me CC_and RBR_more PRP_they VBN_directed NNP_Government ,"[seems, much, me, and, more, they, directed, Government]",VBZ_seems RB_much PRP_me CC_and RBR_more PRP_they VBN_directed NNP_Government ,1,2,2,0,0,0,0,0,0,0
Is that not a sign of how badly the Government are running the economy?,IsVBZ thatIN notRB aDT signNN ofIN howWRB badlyRB theDT GovernmentNNP areVBP runningVBG theDT economyNN ,"root(ROOT-0, Is-1) nsubj(Is-1, that-2) neg(sign-5, not-3) det(sign-5, a-4) dep(that-2, sign-5) mark(running-12, of-6) advmod(badly-8, how-7) advmod(running-12, badly-8) det(Government-10, the-9) nsubj(running-12, Government-10) aux(running-12, are-11) acl(sign-5, running-12) det(economy-14, the-13) dobj(running-12, economy-14) punct(Is-1, ?-15)",1,0,0,"root(ROOT, Is) nsbj(Is, that) neg(sign, not) det(sign, a) dep(that, sign) mark(rnning, of) advmod(badly, how) advmod(rnning, badly) det(Government, the) nsbj(rnning, Government) ax(rnning, are) acl(sign, rnning) det(economy, the) dobj(rnning, economy) pnct(Is, ?)","root(,VBZ) nsbj(VBZ,IN) neg(NN,RB) det(NN,DT) dep(IN,NN) mark(VBG,IN) advmod(RB,WRB) advmod(VBG,RB) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBP) acl(NN,VBG) det(NN,DT) dobj(VBG,NN) pnct(VBZ,VBZ)","[Government, badly, economy, running, sign]","[Government, badly, economy, running, sign]",8,[ ],[ ],NNP_Government RB_badly NN_economy VBG_running VB_sign ,"[Government, badly, economy, running, sign]","[Government, badly, economy, running, sign]",NNP_Government RB_badly NN_economy VBG_running VB_sign ,"[Government, badly, economy, running, sign]",NNP_Government RB_badly NN_economy VBG_running VB_sign ,"[Government, badly, economy, running, sign]",NNP_Government RB_badly NN_economy VBG_running VB_sign ,2,2,2,2,1,2,2,2,2,2
Is it not time that they made way for a Government who could do better?,IsVBZ itPRP notRB timeNN thatIN theyPRP madeVBD wayNN forIN aDT GovernmentNNP whoWP couldMD doVB betterJJR ,"root(ROOT-0, time-4) cop(time-4, Is-1) nsubj(time-4, it-2) neg(time-4, not-3) mark(made-7, that-5) nsubj(made-7, they-6) ccomp(time-4, made-7) dobj(made-7, way-8) case(Government-11, for-9) det(Government-11, a-10) nmod:for(way-8, Government-11) nsubj(do-14, who-12) aux(do-14, could-13) acl:relcl(Government-11, do-14) dobj(do-14, better-15) punct(time-4, ?-16)",0,0,1,"root(ROOT, time) cop(time, Is) nsbj(time, it) neg(time, not) mark(made, that) nsbj(made, they) ccomp(time, made) dobj(made, way) case(Government, for) det(Government, a) nmod:for(way, Government) nsbj(do, who) ax(do, cold) acl:relcl(Government, do) dobj(do, better) pnct(time, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) mark(VBD,IN) nsbj(VBD,PRP) ccomp(NN,VBD) dobj(VBD,NN) case(NNP,IN) det(NNP,DT) nmod:for(NN,NNP) nsbj(VB,WP) ax(VB,MD) acl:relcl(NNP,VB) VBbj(VB,JJR) pnct(NN,NN)","[Government, do, better, made, way, who]",[ ],3,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It is difficult to understand the statements of the new Leader of the Opposition when he argues that unproductive labour includes those employed in financial activities  insurance  banking and business services  as those concerns employ 1.3 million British people in extremely productive work.,ItPRP isVBZ difficultJJ toTO understandVB theDT statementsNNS ofIN theDT newJJ LeaderNNP ofIN theDT OppositionNN whenWRB hePRP arguesVBZ thatIN unproductiveJJ labourNN includesVBZ thoseDT employedVBN inIN financialJJ activitiesNNS insuranceNN bankingNN andCC businessNN servicesNNS asIN thoseDT concernsNNS employVBP 13CD millionCD BritishJJ peopleNNS inIN extremelyRB productiveJJ workNN ,"root(ROOT-0, difficult-3) nsubj(difficult-3, It-1) cop(difficult-3, is-2) mark(understand-5, to-4) xcomp(difficult-3, understand-5) det(statements-7, the-6) dobj(understand-5, statements-7) case(Leader-11, of-8) det(Leader-11, the-9) amod(Leader-11, new-10) nmod:of(statements-7, Leader-11) case(Opposition-14, of-12) det(Opposition-14, the-13) nmod:of(Leader-11, Opposition-14) advmod(argues-17, when-15) nsubj(argues-17, he-16) advcl(difficult-3, argues-17) mark(includes-21, that-18) amod(labour-20, unproductive-19) nsubj(includes-21, labour-20) ccomp(argues-17, includes-21) dobj(includes-21, those-22) acl(those-22, employed-23) case(activities-26, in-24) amod(activities-26, financial-25) nmod:in(employed-23, activities-26) punct(activities-26, ,-27) compound(services-33, insurance-28) punct(insurance-28, ,-29) conj:and(insurance-28, banking-30) compound(services-33, banking-30) cc(insurance-28, and-31) conj:and(insurance-28, business-32) compound(services-33, business-32) conj(activities-26, services-33) punct(activities-26, ,-34) mark(employ-38, as-35) det(concerns-37, those-36) nsubj(employ-38, concerns-37) advcl(includes-21, employ-38) compound(million-40, 1.3-39) nummod(people-42, million-40) amod(people-42, British-41) dobj(employ-38, people-42) case(work-46, in-43) advmod(productive-45, extremely-44) amod(work-46, productive-45) nmod:in(employ-38, work-46) punct(difficult-3, .-47)",1,0,0,"root(ROOT, difficlt) nsbj(difficlt, It) cop(difficlt, is) mark(nderstand, to) xcomp(difficlt, nderstand) det(statements, the) dobj(nderstand, statements) case(Leader, of) det(Leader, the) amod(Leader, new) nmod:of(statements, Leader) case(Opposition, of) det(Opposition, the) nmod:of(Leader, Opposition) advmod(arges, when) nsbj(arges, he) advcl(difficlt, arges) mark(incldes, that) amod(labor, nprodctive) nsbj(incldes, labor) ccomp(arges, incldes) dobj(incldes, those) acl(those, employed) case(activities, in) amod(activities, financial) nmod:in(employed, activities) pnct(activities, ,) compond(services, insrance) pnct(insrance, ,) conj:and(insrance, banking) compond(services, banking) cc(insrance, and) conj:and(insrance, bsiness) compond(services, bsiness) conj(activities, services) pnct(activities, ,) mark(employ, as) det(concerns, those) nsbj(employ, concerns) advcl(incldes, employ) compond(million, 1.3) nmmod(people, million) amod(people, British) dobj(employ, people) case(work, in) advmod(prodctive, extremely) amod(work, prodctive) nmod:in(employ, work) pnct(difficlt, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) det(NNS,DT) dobj(VB,NNS) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NNS,NNP) case(NN,IN) det(NN,DT) nmod:of(NNP,NN) advmod(VBZ,WRB) nsbj(VBZ,PRP) advcl(JJ,VBZ) mark(VBZ,IN) amod(NN,JJ) nsbj(VBZ,NN) ccomp(VBZ,VBZ) dobj(VBZ,DT) acl(DT,VBN) case(NNS,IN) amod(NNS,JJ) nmod:in(VBN,NNS) pnct(NNS,NNS) compond(NNS,NN) pnct(NN,NN) conj:and(NN,NN) compond(NNS,NN) cc(NN,CC) conj:and(NN,NN) compond(NNS,NN) conj(NNS,NNS) pnct(NNS,NNS) mark(VBP,IN) det(NNS,DT) nsbj(VBP,NNS) advcl(VBZ,VBP) compond(CD,CD) nmmod(NNS,CD) amod(NNS,JJ) dobj(VBP,NNS) case(NN,IN) advmod(JJ,RB) amod(NN,JJ) nmod:in(VBP,NN) pnct(JJ,JJ)","[argues, Opposition, statements, includes, he, Leader, when, new, difficult]","[argues, Opposition, statements, includes, he, Leader, when, new, difficult]",3,"[argues, Opposition, statements, includes, he, Leader, when, new, difficult]","[argues, Opposition, statements, includes, he, Leader, when, new, difficult]",VBZ_argues NNP_Opposition NNS_statements VBZ_includes PRP_he NNP_Leader WRB_when JJ_new JJ_difficult ,"[argues, Opposition, statements, includes, he, Leader, when, new, difficult]","[argues, Opposition, statements, includes, he, Leader, when, new, difficult]",VBZ_argues NNP_Opposition NNS_statements VBZ_includes PRP_he NNP_Leader WRB_when JJ_new JJ_difficult ,"[argues, Opposition, statements, includes, he, Leader, when, new, difficult]",VBZ_argues NNP_Opposition NNS_statements VBZ_includes PRP_he NNP_Leader WRB_when JJ_new JJ_difficult ,"[argues, Opposition, statements, includes, he, Leader, when, new, difficult]",VBZ_argues NNP_Opposition NNS_statements VBZ_includes PRP_he NNP_Leader WRB_when JJ_new JJ_difficult ,3,2,2,2,1,2,2,2,2,2
My hon. Friend is quite right.,MyPRP$ honNN FriendNNP isVBZ quiteRB rightJJ ,"root(ROOT-0, right-6) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(right-6, Friend-3) cop(right-6, is-4) advmod(right-6, quite-5) punct(right-6, .-7)",1,1,0,"root(ROOT, right) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(right, Friend) cop(right, is) advmod(right, qite) pnct(right, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) advmod(JJ,RB) pnct(JJ,JJ)","[My, ROOT, quite, Friend, right]","[My, ROOT, quite, Friend, right]",6,"[My, ROOT, quite, Friend, right]",[ ],PRP$_My RB_quite NNP_Friend JJ_right ,"[My, ROOT, quite, Friend, right]","[My, ROOT, quite, Friend, right]",PRP$_My RB_quite NNP_Friend JJ_right ,"[My, ROOT, quite, Friend, right]",PRP$_My RB_quite NNP_Friend JJ_right ,"[My, ROOT, quite, Friend, right]",PRP$_My RB_quite NNP_Friend JJ_right ,1,1,1,1,1,1,1,1,1,1
To that extent I endorse what my hon. Friend says.,ToTO thatDT extentNN IPRP endorseVBP whatWP myPRP$ honNN FriendNNP saysVBZ ,"root(ROOT-0, endorse-5) case(extent-3, To-1) det(extent-3, that-2) nmod:to(endorse-5, extent-3) nsubj(endorse-5, I-4) dobj(says-10, what-6) nmod:poss(Friend-9, my-7) compound(Friend-9, hon.-8) nsubj(says-10, Friend-9) ccomp(endorse-5, says-10) punct(endorse-5, .-11)",1,0,1,"root(ROOT, endorse) case(extent, To) det(extent, that) nmod:to(endorse, extent) nsbj(endorse, I) dobj(says, what) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(says, Friend) ccomp(endorse, says) pnct(endorse, .)","root(,VBP) case(NN,TO) det(NN,DT) nmod:to(VBP,NN) nsbj(VBP,PRP) dobj(VBZ,WP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(VBP,VBZ) pnct(VBP,VBP)","[Friend, endorse, says, my, what]","[Friend, endorse, says, my, what]",8,"[Friend, endorse, says, my, what]","[Friend, endorse, says, my, what]",NNP_Friend VB_endorse VBZ_says PRP$_my WP_what ,"[Friend, endorse, says, my, what]","[Friend, endorse, says, my, what]",NNP_Friend VB_endorse VBZ_says PRP$_my WP_what ,"[Friend, endorse, says, my, what]",NNP_Friend VB_endorse VBZ_says PRP$_my WP_what ,"[Friend, endorse, says, my, what]",NNP_Friend VB_endorse VBZ_says PRP$_my WP_what ,1,1,1,1,1,1,1,1,1,1
It is always interesting to find ways in which the new party seems not to wish to embrace economic market freedom.,ItPRP isVBZ alwaysRB interestingVBG toTO findVB waysNNS inIN whichWDT theDT newJJ partyNN seemsVBZ notRB toTO wishVB toTO embraceVB economicJJ marketNN freedomNN ,"root(ROOT-0, interesting-4) nsubj(interesting-4, It-1) cop(interesting-4, is-2) advmod(interesting-4, always-3) mark(find-6, to-5) xcomp(interesting-4, find-6) dobj(find-6, ways-7) case(which-9, in-8) nmod:in(seems-13, which-9) det(party-12, the-10) amod(party-12, new-11) nsubj(seems-13, party-12) acl:relcl(ways-7, seems-13) neg(wish-16, not-14) mark(wish-16, to-15) xcomp(seems-13, wish-16) mark(embrace-18, to-17) xcomp(wish-16, embrace-18) amod(freedom-21, economic-19) compound(freedom-21, market-20) dobj(embrace-18, freedom-21) punct(interesting-4, .-22)",0,1,0,"root(ROOT, interesting) nsbj(interesting, It) cop(interesting, is) advmod(interesting, always) mark(find, to) xcomp(interesting, find) dobj(find, ways) case(which, in) nmod:in(seems, which) det(party, the) amod(party, new) nsbj(seems, party) acl:relcl(ways, seems) neg(wish, not) mark(wish, to) xcomp(seems, wish) mark(embrace, to) xcomp(wish, embrace) amod(freedom, economic) compond(freedom, market) dobj(embrace, freedom) pnct(interesting, .)","root(,VBG) nsbj(VBG,PRP) cop(VBG,VBZ) advmod(VBG,RB) mark(VB,TO) xcomp(VBG,VB) dobj(VB,NNS) case(WDT,IN) nmod:in(VBZ,WDT) det(NN,DT) amod(NN,JJ) nsbj(VBZ,NN) acl:relcl(NNS,VBZ) neg(VB,RB) mark(VB,TO) xcomp(VBZ,VB) mark(VB,TO) xcomp(VB,VB) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) pnct(VBG,VBG)",[ ],[ ],8,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will he reconsider his policy of not commenting on the targeting of missiles?,WillMD hePRP reconsiderVB hisPRP$ policyNN ofIN notRB commentingVBG onIN theDT targetingNN ofIN missilesNNS ,"root(ROOT-0, reconsider-3) aux(reconsider-3, Will-1) nsubj(reconsider-3, he-2) nmod:poss(policy-5, his-4) dobj(reconsider-3, policy-5) mark(commenting-8, of-6) neg(commenting-8, not-7) acl(policy-5, commenting-8) case(targeting-11, on-9) det(targeting-11, the-10) nmod:on(commenting-8, targeting-11) case(missiles-13, of-12) nmod:of(targeting-11, missiles-13) punct(reconsider-3, ?-14)",1,0,0,"root(ROOT, reconsider) ax(reconsider, Will) nsbj(reconsider, he) nmod:poss(policy, his) dobj(reconsider, policy) mark(commenting, of) neg(commenting, not) acl(policy, commenting) case(targeting, on) det(targeting, the) nmod:on(commenting, targeting) case(missiles, of) nmod:of(targeting, missiles) pnct(reconsider, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) nmod:poss(NN,PRP$) dobj(VB,NN) mark(VBG,IN) neg(VBG,RB) acl(NN,VBG) case(NN,IN) det(NN,DT) nmod:on(VBG,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(VB,VB)","[he, ROOT, reconsider, policy]","[he, commenting, his, policy, ROOT, reconsider]",12,"[policy, reconsider, his, commenting]","[policy, reconsider, his, commenting]",PRP_he VBG_commenting PRP$_his NN_policy VB_reconsider ,"[he, commenting, his, policy, ROOT, reconsider]","[he, commenting, his, policy, ROOT, reconsider]",PRP_he VBG_commenting PRP$_his NN_policy VB_reconsider ,"[he, commenting, his, policy, ROOT, reconsider]",PRP_he VBG_commenting PRP$_his NN_policy VB_reconsider ,"[he, commenting, his, policy, ROOT, reconsider]",PRP_he VBG_commenting PRP$_his NN_policy VB_reconsider ,3,2,2,2,1,2,2,2,2,2
If  after reconsidering the policy  he still declines to comment  will he urge the controlling power to consider the matter and to make a statement on it?,IfIN afterIN reconsideringVBG theDT policyNN hePRP stillRB declinesVBZ toTO commentVB willMD hePRP urgeVB theDT controllingVBG powerNN toTO considerVB theDT matterNN andCC toTO makeVB aDT statementNN onIN itPRP ,"root(ROOT-0, urge-16) mark(declines-10, If-1) punct(declines-10, ,-2) mark(reconsidering-4, after-3) advcl(declines-10, reconsidering-4) det(policy-6, the-5) dobj(reconsidering-4, policy-6) punct(declines-10, ,-7) nsubj(declines-10, he-8) advmod(declines-10, still-9) advcl(urge-16, declines-10) mark(comment-12, to-11) xcomp(declines-10, comment-12) punct(urge-16, ,-13) aux(urge-16, will-14) nsubj(urge-16, he-15) det(power-19, the-17) amod(power-19, controlling-18) dobj(urge-16, power-19) mark(consider-21, to-20) advcl(urge-16, consider-21) det(matter-23, the-22) dobj(consider-21, matter-23) cc(consider-21, and-24) mark(make-26, to-25) advcl(urge-16, make-26) conj:and(consider-21, make-26) det(statement-28, a-27) dobj(make-26, statement-28) case(it-30, on-29) nmod:on(statement-28, it-30) punct(urge-16, ?-31)",1,0,0,"root(ROOT, rge) mark(declines, If) pnct(declines, ,) mark(reconsidering, after) advcl(declines, reconsidering) det(policy, the) dobj(reconsidering, policy) pnct(declines, ,) nsbj(declines, he) advmod(declines, still) advcl(rge, declines) mark(comment, to) xcomp(declines, comment) pnct(rge, ,) ax(rge, will) nsbj(rge, he) det(power, the) amod(power, controlling) dobj(rge, power) mark(consider, to) advcl(rge, consider) det(matter, the) dobj(consider, matter) cc(consider, and) mark(make, to) advcl(rge, make) conj:and(consider, make) det(statement, a) dobj(make, statement) case(it, on) nmod:on(statement, it) pnct(rge, ?)","root(,VB) mark(VBZ,IN) pnct(VBZ,VBZ) mark(VBG,IN) advcl(VBZ,VBG) det(NN,DT) dobj(VBG,NN) pnct(VBZ,VBZ) nsbj(VBZ,PRP) advmod(VBZ,RB) advcl(VB,VBZ) mark(VB,TO) xcomp(VBZ,VB) pnct(VB,VB) ax(VB,MD) nsbj(VB,PRP) det(NN,DT) amod(NN,VBG) dobj(VB,NN) mark(VB,TO) advcl(VB,VB) det(NN,DT) dobj(VB,NN) cc(VB,CC) mark(VB,TO) advcl(VB,VB) conj:and(VB,VB) det(NN,DT) dobj(VB,NN) case(PRP,IN) nmod:on(NN,PRP) pnct(VB,VB)","[make, power, reconsidering, he, he, comment, urge, ROOT, still, declines, consider]","[make, power, reconsidering, he, he, comment, urge, ROOT, still, declines, consider]",3,"[he, comment, urge, reconsidering, still, declines]","[he, comment, urge, reconsidering, still, declines]",VB_make NN_power VBG_reconsidering PRP_he PRP_he VB_comment VBP_urge RB_still VBZ_declines VBP_consider ,"[make, power, reconsidering, he, he, comment, urge, ROOT, still, declines, consider]","[make, power, reconsidering, he, he, comment, urge, ROOT, still, declines, consider]",VB_make NN_power VBG_reconsidering PRP_he PRP_he VB_comment VBP_urge RB_still VBZ_declines VBP_consider ,"[make, power, reconsidering, he, he, comment, urge, ROOT, still, declines, consider]",VB_make NN_power VBG_reconsidering PRP_he PRP_he VB_comment VBP_urge RB_still VBZ_declines VBP_consider ,"[make, power, reconsidering, he, he, comment, urge, ROOT, still, declines, consider]",VB_make NN_power VBG_reconsidering PRP_he PRP_he VB_comment VBP_urge RB_still VBZ_declines VBP_consider ,3,2,2,2,1,2,2,2,2,2
The hon. Gentleman has already raised this with my right hon. Friend the Prime Minister and I cannot and would not wish to add to her reply.,TheDT honNN GentlemanNNP hasVBZ alreadyRB raisedVBN thisDT withIN myPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP andCC IPRP canMD notRB andCC wouldMD notRB wishVB toTO addVB toTO herPRP$ replyNN ,"root(ROOT-0, raised-6) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(raised-6, Gentleman-3) aux(raised-6, has-4) advmod(raised-6, already-5) dobj(raised-6, this-7) case(Friend-12, with-8) nmod:poss(Friend-12, my-9) amod(Friend-12, right-10) compound(Friend-12, hon.-11) nmod:with(raised-6, Friend-12) det(Minister-15, the-13) compound(Minister-15, Prime-14) nsubj(wish-23, Minister-15) cc(Minister-15, and-16) conj:and(Minister-15, I-17) nsubj(wish-23, I-17) aux(wish-23, can-18) neg(wish-23, not-19) cc(not-19, and-20) aux(wish-23, would-21) neg(wish-23, not-22) acl:relcl(Friend-12, wish-23) mark(add-25, to-24) xcomp(wish-23, add-25) case(reply-28, to-26) nmod:poss(reply-28, her-27) nmod:to(add-25, reply-28) punct(raised-6, .-29)",1,1,0,"root(ROOT, raised) det(Gentleman, The) compond(Gentleman, hon.) nsbj(raised, Gentleman) ax(raised, has) advmod(raised, already) dobj(raised, this) case(Friend, with) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:with(raised, Friend) det(Minister, the) compond(Minister, Prime) nsbj(wish, Minister) cc(Minister, and) conj:and(Minister, I) nsbj(wish, I) ax(wish, can) neg(wish, not) cc(not, and) ax(wish, wold) neg(wish, not) acl:relcl(Friend, wish) mark(add, to) xcomp(wish, add) case(reply, to) nmod:poss(reply, her) nmod:to(add, reply) pnct(raised, .)","root(,VBN) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) advmod(VBN,RB) dobj(VBN,DT) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:with(VBN,NNP) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) cc(NNP,CC) conj:and(NNP,PRP) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) cc(RB,CC) ax(VB,MD) neg(VB,RB) acl:relcl(NNP,VB) mark(VB,TO) xcomp(VB,VB) case(NN,TO) nmod:poss(NN,PRP$) nmod:to(VB,NN) pnct(VBN,VBN)","[Friend, Minister, not, and, right, I, add, raised, not, my, ROOT, wish, this, Gentleman, already]","[Minister, I, wish, reply, raised, Gentleman, already, Friend, not, and, add, her, not, my, ROOT, this]",3,"[Friend, not, I, add, her, raised, not, my, ROOT, reply, wish, this, already]","[Friend, not, I, add, her, raised, not, my, ROOT, reply, wish, this, already]",NNP_Minister PRP_I VBP_wish NN_reply VBN_raised NNP_Gentleman RB_already NNP_Friend RB_not CC_and VB_add PRP$_her RB_not PRP$_my DT_this ,"[Minister, I, wish, reply, raised, Gentleman, already, Friend, not, and, add, her, not, my, ROOT, this]","[Minister, I, wish, reply, raised, Gentleman, already, Friend, not, and, add, her, not, my, ROOT, this]",NNP_Minister PRP_I VBP_wish NN_reply VBN_raised NNP_Gentleman RB_already NNP_Friend RB_not CC_and VB_add PRP$_her RB_not PRP$_my DT_this ,"[Minister, I, wish, reply, raised, Gentleman, already, Friend, not, and, add, her, not, my, ROOT, this]",NNP_Minister PRP_I VBP_wish NN_reply VBN_raised NNP_Gentleman RB_already NNP_Friend RB_not CC_and VB_add PRP$_her RB_not PRP$_my DT_this ,"[Minister, I, wish, reply, raised, Gentleman, already, Friend, not, and, add, her, not, my, ROOT, this]",NNP_Minister PRP_I VBP_wish NN_reply VBN_raised NNP_Gentleman RB_already NNP_Friend RB_not CC_and VB_add PRP$_her RB_not PRP$_my DT_this ,3,1,2,2,1,2,0,0,0,2
I would not be as sure as the hon. Member for Bexleyheath (Mr. Townsend).,IPRP wouldMD notRB beVB asRB sureJJ asIN theDT honNN MemberNNP forIN BexleyheathNNP (( MrNNP TownsendNNP )) ,"root(ROOT-0, sure-6) nsubj(sure-6, I-1) aux(sure-6, would-2) neg(sure-6, not-3) cop(sure-6, be-4) case(sure-6, as-5) case(Member-10, as-7) det(Member-10, the-8) compound(Member-10, hon.-9) nmod:as(sure-6, Member-10) case(Bexleyheath-12, for-11) nmod:for(Member-10, Bexleyheath-12) punct(Townsend-15, -LRB--13) compound(Townsend-15, Mr.-14) dep(sure-6, Townsend-15) punct(Townsend-15, -RRB--16) punct(sure-6, .-17)",1,1,0,"root(ROOT, sre) nsbj(sre, I) ax(sre, wold) neg(sre, not) cop(sre, be) case(sre, as) case(Member, as) det(Member, the) compond(Member, hon.) nmod:as(sre, Member) case(Bexleyheath, for) nmod:for(Member, Bexleyheath) pnct(Townsend, ) compond(Townsend, Mr.) dep(sre, Townsend) pnct(Townsend, ) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) neg(JJ,RB) cop(JJ,VB) case(JJ,IN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:as(JJ,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) dep(JJ,NNP) pnct(NNP,) pnct(JJ,JJ)","[I, not, sure, ROOT, Townsend, Member, Bexleyheath]","[I, not, sure, ROOT, Townsend, Member, Bexleyheath]",6,"[I, not, sure, ROOT, Townsend, Member, Bexleyheath]","[I, not, sure, ROOT, Townsend, Member, Bexleyheath]",PRP_I RB_not RB_sure NNP_Townsend NNP_Member NNP_Bexleyheath ,"[I, not, sure, ROOT, Townsend, Member, Bexleyheath]","[I, not, sure, ROOT, Townsend, Member, Bexleyheath]",PRP_I RB_not RB_sure NNP_Townsend NNP_Member NNP_Bexleyheath ,"[I, not, sure, ROOT, Townsend, Member, Bexleyheath]",PRP_I RB_not RB_sure NNP_Townsend NNP_Member NNP_Bexleyheath ,"[I, not, sure, ROOT, Townsend, Member, Bexleyheath]",PRP_I RB_not RB_sure NNP_Townsend NNP_Member NNP_Bexleyheath ,1,2,2,2,1,2,0,0,0,2
He will also be aware that it is the same procedure as that which existed under the previous Labour Government.,HePRP willMD alsoRB beVB awareJJ thatIN itPRP isVBZ theDT sameJJ procedureNN asIN thatDT whichWDT existedVBD underIN theDT previousJJ LabourJJ GovernmentNN ,"root(ROOT-0, aware-5) nsubj(aware-5, He-1) aux(aware-5, will-2) advmod(aware-5, also-3) cop(aware-5, be-4) mark(procedure-11, that-6) nsubj(procedure-11, it-7) cop(procedure-11, is-8) det(procedure-11, the-9) amod(procedure-11, same-10) ccomp(aware-5, procedure-11) case(that-13, as-12) nmod:as(procedure-11, that-13) nsubj(existed-15, which-14) acl:relcl(that-13, existed-15) case(Government-20, under-16) det(Government-20, the-17) amod(Government-20, previous-18) compound(Government-20, Labour-19) nmod:under(existed-15, Government-20) punct(aware-5, .-21)",1,0,1,"root(ROOT, aware) nsbj(aware, He) ax(aware, will) advmod(aware, also) cop(aware, be) mark(procedre, that) nsbj(procedre, it) cop(procedre, is) det(procedre, the) amod(procedre, same) ccomp(aware, procedre) case(that, as) nmod:as(procedre, that) nsbj(existed, which) acl:relcl(that, existed) case(Government, nder) det(Government, the) amod(Government, previos) compond(Government, Labor) nmod:nder(existed, Government) pnct(aware, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) advmod(JJ,RB) cop(JJ,VB) mark(NN,DT) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(JJ,NN) case(DT,IN) nmod:as(NN,DT) nsbj(VBD,WDT) acl:relcl(DT,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,JJ) nmod:nder(VBD,NN) pnct(JJ,JJ)","[also, He, procedure, previous, aware, that, Government, ROOT, which, existed]","[also, He, procedure, previous, aware, that, Government, ROOT, which, existed]",7,"[previous, Government, which, existed, that]","[previous, Government, which, existed, that]",RB_also PRP_He NN_procedure JJ_previous JJ_aware IN_that NNP_Government WDT_which VBD_existed ,"[also, He, procedure, previous, aware, that, Government, ROOT, which, existed]","[also, He, procedure, previous, aware, that, Government, ROOT, which, existed]",RB_also PRP_He NN_procedure JJ_previous JJ_aware IN_that NNP_Government WDT_which VBD_existed ,"[also, He, procedure, previous, aware, that, Government, ROOT, which, existed]",RB_also PRP_He NN_procedure JJ_previous JJ_aware IN_that NNP_Government WDT_which VBD_existed ,"[also, He, procedure, previous, aware, that, Government, ROOT, which, existed]",RB_also PRP_He NN_procedure JJ_previous JJ_aware IN_that NNP_Government WDT_which VBD_existed ,1,2,2,0,0,0,0,0,0,0
The right hon. Gentleman is as obsessed with cruise missiles as other people are.,TheDT rightJJ honNN GentlemanNNP isVBZ asIN obsessedVBN withIN cruiseNN missilesNNS asIN otherJJ peopleNNS areVBP ,"root(ROOT-0, Gentleman-4) det(Gentleman-4, The-1) amod(Gentleman-4, right-2) compound(Gentleman-4, hon.-3) dep(Gentleman-4, is-5) mark(obsessed-7, as-6) dep(is-5, obsessed-7) case(missiles-10, with-8) compound(missiles-10, cruise-9) nmod:with(obsessed-7, missiles-10) mark(are-14, as-11) amod(people-13, other-12) nsubj(are-14, people-13) advcl(obsessed-7, are-14) punct(Gentleman-4, .-15)",1,0,0,"root(ROOT, Gentleman) det(Gentleman, The) amod(Gentleman, right) compond(Gentleman, hon.) dep(Gentleman, is) mark(obsessed, as) dep(is, obsessed) case(missiles, with) compond(missiles, crise) nmod:with(obsessed, missiles) mark(are, as) amod(people, other) nsbj(are, people) advcl(obsessed, are) pnct(Gentleman, .)","root(,NNP) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) dep(NNP,VBZ) mark(VBN,IN) dep(VBZ,VBN) case(NNS,IN) compond(NNS,NN) nmod:with(VBN,NNS) mark(VBP,IN) amod(NNS,JJ) nsbj(VBP,NNS) advcl(VBN,VBP) pnct(NNP,NNP)","[right, Gentleman, ROOT, is, obsessed]","[obsessed, Gentleman, is, ROOT]",8,"[obsessed, Gentleman, is, ROOT]","[obsessed, Gentleman, is, ROOT]",VBN_obsessed NNP_Gentleman VBZ_is ,"[obsessed, Gentleman, is, ROOT]","[obsessed, Gentleman, is, ROOT]",VBN_obsessed NNP_Gentleman VBZ_is ,"[obsessed, Gentleman, is, ROOT]",VBN_obsessed NNP_Gentleman VBZ_is ,"[obsessed, Gentleman, is, ROOT]",VBN_obsessed NNP_Gentleman VBZ_is ,2,2,1,0,0,0,0,0,0,0
That is one of our condemnations of his defence policy.,ThatDT isVBZ oneCD ofIN ourPRP$ condemnationsNNS ofIN hisPRP$ defenceNN policyNN ,"root(ROOT-0, one-3) nsubj(one-3, That-1) cop(one-3, is-2) case(condemnations-6, of-4) nmod:poss(condemnations-6, our-5) nmod:of(one-3, condemnations-6) case(policy-10, of-7) nmod:poss(policy-10, his-8) compound(policy-10, defence-9) nmod:of(condemnations-6, policy-10) punct(one-3, .-11)",1,0,0,"root(ROOT, one) nsbj(one, That) cop(one, is) case(condemnations, of) nmod:poss(condemnations, or) nmod:of(one, condemnations) case(policy, of) nmod:poss(policy, his) compond(policy, defence) nmod:of(condemnations, policy) pnct(one, .)","root(,CD) nsbj(CD,DT) cop(CD,VBZ) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:of(CD,NNS) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NN) nmod:of(NNS,NN) pnct(CD,CD)",[ ],"[his, condemnations, policy]",11,"[his, condemnations, policy]","[his, condemnations, policy]",PRP$_his NNS_condemnations NN_policy ,"[his, condemnations, policy]","[his, condemnations, policy]",PRP$_his NNS_condemnations NN_policy ,"[his, condemnations, policy]",PRP$_his NNS_condemnations NN_policy ,"[his, condemnations, policy]",PRP$_his NNS_condemnations NN_policy ,1,2,2,0,0,0,0,0,0,0
Should he not move away from his obsession and realise that cruise missiles  like battlefield nuclear weapons  are a product of NATO's out of date concept of fighting a limited nuclear war?,ShouldMD hePRP notRB moveVB awayRB fromIN hisPRP$ obsessionNN andCC realiseNN thatWDT cruiseVBP missilesNNS likeIN battlefieldJJ nuclearJJ weaponsNNS areVBP aDT productNN ofIN NATONNP 'sPOS outNN ofIN dateNN conceptNN ofIN fightingVBG aDT limitedJJ nuclearJJ warNN ,"root(ROOT-0, move-4) aux(move-4, Should-1) nsubj(move-4, he-2) nsubj(realise-10, he-2) neg(move-4, not-3) case(obsession-8, away-5) mwe(away-5, from-6) nmod:poss(obsession-8, his-7) nmod:away_from(move-4, obsession-8) cc(move-4, and-9) conj:and(move-4, realise-10) mark(product-22, that-11) compound(missiles-13, cruise-12) nsubj(product-22, missiles-13) punct(missiles-13, ,-14) case(weapons-18, like-15) compound(weapons-18, battlefield-16) amod(weapons-18, nuclear-17) nmod:like(missiles-13, weapons-18) punct(missiles-13, ,-19) cop(product-22, are-20) det(product-22, a-21) ccomp(realise-10, product-22) acl(product-22, of-23) dobj(of-23, NATO-24) case(NATO-24, 's-25) case(concept-29, out-26) mwe(out-26, of-27) compound(concept-29, date-28) nmod:out_of(NATO-24, concept-29) mark(fighting-31, of-30) acl(concept-29, fighting-31) det(war-35, a-32) amod(war-35, limited-33) amod(war-35, nuclear-34) dobj(fighting-31, war-35) punct(move-4, ?-36)",1,0,0,"root(ROOT, move) ax(move, Shold) nsbj(move, he) nsbj(realise, he) neg(move, not) case(obsession, away) mwe(away, from) nmod:poss(obsession, his) nmod:away_from(move, obsession) cc(move, and) conj:and(move, realise) mark(prodct, that) compond(missiles, crise) nsbj(prodct, missiles) pnct(missiles, ,) case(weapons, like) compond(weapons, battlefield) amod(weapons, nclear) nmod:like(missiles, weapons) pnct(missiles, ,) cop(prodct, are) det(prodct, a) ccomp(realise, prodct) acl(prodct, of) dobj(of, NATO) ""case(NATO, s)"", case(concept, ot) mwe(ot, of) compond(concept, date) nmod:ot_of(NATO, concept) mark(fighting, of) acl(concept, fighting) det(war, a) amod(war, limited) amod(war, nclear) dobj(fighting, war) pnct(move, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) nsbj(NN,PRP) neg(VB,RB) case(NN,RB) mwe(RB,IN) nmod:poss(NN,PRP$) nmod:away_from(VB,NN) cc(VB,CC) conj:and(VB,NN) mark(NN,WDT) compond(NNS,VBP) nsbj(NN,NNS) pnct(NNS,NNS) case(NNS,IN) compond(NNS,JJ) amod(NNS,JJ) nmod:like(NNS,NNS) pnct(NNS,NNS) cop(NN,VBP) det(NN,DT) ccomp(NN,NN) acl(NN,IN) dobj(IN,NNP) case(NNP,POS) case(NN,NN) mwe(NN,IN) compond(NN,NN) nmod:ot_of(NNP,NN) mark(VBG,IN) acl(NN,VBG) det(NN,DT) amod(NN,JJ) amod(NN,JJ) dobj(VBG,NN) pnct(VB,VB)","[not, product, obsession, and, move, he, ROOT, realise]","[not, product, obsession, and, move, his, he, ROOT, realise]",11,"[move, his, obsession]","[move, his, obsession]",RB_not NN_product NN_obsession CC_and VB_move PRP$_his PRP_he VBP_realise ,"[not, product, obsession, and, move, his, he, ROOT, realise]","[not, product, obsession, and, move, his, he, ROOT, realise]",RB_not NN_product NN_obsession CC_and VB_move PRP$_his PRP_he VBP_realise ,"[not, product, obsession, and, move, his, he, ROOT, realise]",RB_not NN_product NN_obsession CC_and VB_move PRP$_his PRP_he VBP_realise ,"[not, product, obsession, and, move, his, he, ROOT, realise]",RB_not NN_product NN_obsession CC_and VB_move PRP$_his PRP_he VBP_realise ,2,2,2,2,1,2,2,0,1,2
I think that on reflection the right hon. Gentleman might feel that the obsession is his.,IPRP thinkVBP thatIN onIN reflectionNN theDT rightJJ honNN GentlemanNNP mightMD feelVB thatIN theDT obsessionNN isVBZ hisPRP$ ,"root(ROOT-0, think-2) nsubj(think-2, I-1) mark(feel-11, that-3) case(reflection-5, on-4) nmod:on(feel-11, reflection-5) det(Gentleman-9, the-6) amod(Gentleman-9, right-7) compound(Gentleman-9, hon.-8) nsubj(feel-11, Gentleman-9) aux(feel-11, might-10) ccomp(think-2, feel-11) mark(his-16, that-12) det(obsession-14, the-13) nsubj(his-16, obsession-14) cop(his-16, is-15) ccomp(feel-11, his-16) punct(think-2, .-17)",1,1,0,"root(ROOT, think) nsbj(think, I) mark(feel, that) case(reflection, on) nmod:on(feel, reflection) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(feel, Gentleman) ax(feel, might) ccomp(think, feel) mark(his, that) det(obsession, the) nsbj(his, obsession) cop(his, is) ccomp(feel, his) pnct(think, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,IN) case(NN,IN) nmod:on(VB,NN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(VBP,VB) mark(PRP$,IN) det(NN,DT) nsbj(PRP$,NN) cop(PRP$,VBZ) ccomp(VB,PRP$) pnct(VBP,VBP)","[his, Gentleman, feel, reflection, think, right]","[his, Gentleman, feel, reflection, think, obsession]",11,"[feel, reflection, his, obsession, think]","[feel, reflection, his, obsession, think]",PRP$_his NNP_Gentleman VBP_feel NN_reflection VBP_think NN_obsession ,"[his, Gentleman, feel, reflection, think, obsession]","[his, Gentleman, feel, reflection, think, obsession]",PRP$_his NNP_Gentleman VBP_feel NN_reflection VBP_think NN_obsession ,"[his, Gentleman, feel, reflection, think, obsession]",PRP$_his NNP_Gentleman VBP_feel NN_reflection VBP_think NN_obsession ,"[his, Gentleman, feel, reflection, think, obsession]",PRP$_his NNP_Gentleman VBP_feel NN_reflection VBP_think NN_obsession ,1,2,1,1,1,1,2,0,1,1
The trouble with his obsession is that he talks only about the NATO cruise deployment.,TheDT troubleNN WithIN hisPRP$ obsessionNN isVBZ thatIN hePRP talksVBZ onlyRB aboutIN theDT NATONNP cruiseNN deploymentNN ,"root(ROOT-0, is-6) det(trouble-2, The-1) nsubj(is-6, trouble-2) case(obsession-5, With-3) nmod:poss(obsession-5, his-4) nmod:with(trouble-2, obsession-5) mark(talks-9, that-7) nsubj(talks-9, he-8) ccomp(is-6, talks-9) advmod(deployment-15, only-10) case(deployment-15, about-11) det(deployment-15, the-12) compound(deployment-15, NATO-13) compound(deployment-15, cruise-14) nmod:about(talks-9, deployment-15) punct(is-6, .-16)",1,0,0,"root(ROOT, is) det(troble, The) nsbj(is, troble) case(obsession, With) nmod:poss(obsession, his) nmod:with(troble, obsession) mark(talks, that) nsbj(talks, he) ccomp(is, talks) advmod(deployment, only) case(deployment, abot) det(deployment, the) compond(deployment, NATO) compond(deployment, crise) nmod:abot(talks, deployment) pnct(is, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:with(NN,NN) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VBZ,VBZ) advmod(NN,RB) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NN) nmod:abot(VBZ,NN) pnct(VBZ,VBZ)","[talks, he, is, deployment]","[talks, he, deployment, his, obsession, is, trouble]",12,"[talks, he, deployment, his, obsession, is, trouble]","[talks, he, deployment, his, obsession, is, trouble]",NNS_talks PRP_he NN_deployment PRP$_his NN_obsession VBZ_is NN_trouble ,"[talks, he, deployment, his, obsession, is, trouble]","[talks, he, deployment, his, obsession, is, trouble]",NNS_talks PRP_he NN_deployment PRP$_his NN_obsession VBZ_is NN_trouble ,"[talks, he, deployment, his, obsession, is, trouble]",NNS_talks PRP_he NN_deployment PRP$_his NN_obsession VBZ_is NN_trouble ,"[talks, he, deployment, his, obsession, is, trouble]",NNS_talks PRP_he NN_deployment PRP$_his NN_obsession VBZ_is NN_trouble ,1,2,2,2,1,2,2,2,2,2
He seems to be completely oblivious to the fact that over the last decade the Soviet Union has developed a range of cruise missiles capable of being launched from ground  sea or air.,HePRP seemsVBZ toTO beVB completelyRB obliviousJJ toTO theDT factNN thatIN overIN theDT lastJJ decadeNN theDT SovietNNP UnionNNP hasVBZ developedVBN aDT rangeNN ofIN cruiseNN missilesNNS capableJJ ofIN beingVBG launchedVBN fromIN groundNN seaNN orCC airNN ,"root(ROOT-0, seems-2) nsubj(seems-2, He-1) mark(oblivious-6, to-3) cop(oblivious-6, be-4) advmod(oblivious-6, completely-5) xcomp(seems-2, oblivious-6) case(fact-9, to-7) det(fact-9, the-8) nmod:to(oblivious-6, fact-9) mark(developed-19, that-10) case(decade-14, over-11) det(decade-14, the-12) amod(decade-14, last-13) nmod:over(developed-19, decade-14) det(Union-17, the-15) compound(Union-17, Soviet-16) nsubj(developed-19, Union-17) aux(developed-19, has-18) ccomp(fact-9, developed-19) det(range-21, a-20) dobj(developed-19, range-21) case(missiles-24, of-22) compound(missiles-24, cruise-23) nmod:of(range-21, missiles-24) amod(missiles-24, capable-25) mark(launched-28, of-26) auxpass(launched-28, being-27) advcl(capable-25, launched-28) case(ground-30, from-29) nmod:from(launched-28, ground-30) punct(ground-30, ,-31) nmod:from(launched-28, sea-32) conj:or(ground-30, sea-32) cc(ground-30, or-33) nmod:from(launched-28, air-34) conj:or(ground-30, air-34) punct(seems-2, .-35)",1,0,0,"root(ROOT, seems) nsbj(seems, He) mark(oblivios, to) cop(oblivios, be) advmod(oblivios, completely) xcomp(seems, oblivios) case(fact, to) det(fact, the) nmod:to(oblivios, fact) mark(developed, that) case(decade, over) det(decade, the) amod(decade, last) nmod:over(developed, decade) det(Union, the) compond(Union, Soviet) nsbj(developed, Union) ax(developed, has) ccomp(fact, developed) det(range, a) dobj(developed, range) case(missiles, of) compond(missiles, crise) nmod:of(range, missiles) amod(missiles, capable) mark(lanched, of) axpass(lanched, being) advcl(capable, lanched) case(grond, from) nmod:from(lanched, grond) pnct(grond, ,) nmod:from(lanched, sea) conj:or(grond, sea) cc(grond, or) nmod:from(lanched, air) conj:or(grond, air) pnct(seems, .)","root(,VBZ) nsbj(VBZ,PRP) mark(JJ,TO) cop(JJ,VB) advmod(JJ,RB) xcomp(VBZ,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) mark(VBN,IN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:over(VBN,NN) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) ccomp(NN,VBN) det(NN,DT) dobj(VBN,NN) case(NNS,IN) compond(NNS,NN) nmod:of(NN,NNS) amod(NNS,JJ) mark(VBN,IN) axpass(VBN,VBG) advcl(JJ,VBN) case(NN,IN) nmod:from(VBN,NN) pnct(NN,NN) nmod:from(VBN,NN) conj:or(NN,NN) cc(NN,CC) nmod:from(VBN,NN) conj:or(NN,NN) pnct(VBZ,VBZ)","[ROOT, oblivious, He, seems]","[ROOT, oblivious, He, seems]",12,"[ROOT, oblivious, He, seems]","[ROOT, oblivious, He, seems]",JJ_oblivious PRP_He VBZ_seems ,"[ROOT, oblivious, He, seems]","[ROOT, oblivious, He, seems]",JJ_oblivious PRP_He VBZ_seems ,"[ROOT, oblivious, He, seems]",JJ_oblivious PRP_He VBZ_seems ,"[ROOT, oblivious, He, seems]",JJ_oblivious PRP_He VBZ_seems ,2,2,2,2,1,2,2,2,2,2
He never seems to have any complaints about that.,HePRP neverRB seemsVBZ toTO haveVB anyDT complaintsNNS aboutIN thatDT ,"root(ROOT-0, seems-3) nsubj(seems-3, He-1) neg(seems-3, never-2) mark(have-5, to-4) xcomp(seems-3, have-5) det(complaints-7, any-6) dobj(have-5, complaints-7) case(that-9, about-8) nmod:about(complaints-7, that-9) punct(seems-3, .-10)",1,0,1,"root(ROOT, seems) nsbj(seems, He) neg(seems, never) mark(have, to) xcomp(seems, have) det(complaints, any) dobj(have, complaints) case(that, abot) nmod:abot(complaints, that) pnct(seems, .)","root(,VBZ) nsbj(VBZ,PRP) neg(VBZ,RB) mark(VB,TO) xcomp(VBZ,VB) det(NNS,DT) dobj(VB,NNS) case(DT,IN) nmod:abot(NNS,DT) pnct(VBZ,VBZ)","[never, ROOT, have, He, seems]","[never, ROOT, have, He, seems]",12,"[never, ROOT, have, He, seems]","[never, ROOT, have, He, seems]",RB_never VBP_have PRP_He VBZ_seems ,"[never, ROOT, have, He, seems]","[never, ROOT, have, He, seems]",RB_never VBP_have PRP_He VBZ_seems ,"[never, ROOT, have, He, seems]",RB_never VBP_have PRP_He VBZ_seems ,"[never, ROOT, have, He, seems]",RB_never VBP_have PRP_He VBZ_seems ,3,2,2,0,0,0,0,0,0,0
That is why the right hon. Gentleman has no control over them.,ThatDT isVBZ whyWRB theDT rightNN honNN GentlemanNNP hasVBZ noDT controlNN overIN themPRP ,"root(ROOT-0, is-2) nsubj(is-2, That-1) advmod(has-8, why-3) det(Gentleman-7, the-4) amod(Gentleman-7, right-5) compound(Gentleman-7, hon.-6) nsubj(has-8, Gentleman-7) advcl(is-2, has-8) neg(control-10, no-9) dobj(has-8, control-10) case(them-12, over-11) nmod:over(control-10, them-12) punct(is-2, .-13)",1,1,1,"root(ROOT, is) nsbj(is, That) advmod(has, why) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(has, Gentleman) advcl(is, has) neg(control, no) dobj(has, control) case(them, over) nmod:over(control, them) pnct(is, .)","root(,VBZ) nsbj(VBZ,DT) advmod(VBZ,WRB) det(NNP,DT) amod(NNP,NN) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(VBZ,VBZ) neg(NN,DT) dobj(VBZ,NN) case(PRP,IN) nmod:over(NN,PRP) pnct(VBZ,VBZ)","[control, has, why, is, Gentleman, right]","[is, has, why, Gentleman, control]",12,"[is, has, why, Gentleman, control]","[is, has, why, Gentleman, control]",VBZ_is VBZ_has WRB_why NNP_Gentleman NN_control ,"[is, has, why, Gentleman, control]","[is, has, why, Gentleman, control]",VBZ_is VBZ_has WRB_why NNP_Gentleman NN_control ,"[is, has, why, Gentleman, control]",VBZ_is VBZ_has WRB_why NNP_Gentleman NN_control ,"[is, has, why, Gentleman, control]",VBZ_is VBZ_has WRB_why NNP_Gentleman NN_control ,1,2,2,0,0,0,0,0,0,0
I anticipated that complacent attitude in the usual reply of the Secretary of State for Wales.,IPRP anticipatedVBD thatIN complacentJJ attitudeNN inIN theDT usualJJ replyNN ofIN theDT SecretaryNNP ofIN StateNNP forIN WalesNNP ,"root(ROOT-0, anticipated-2) nsubj(anticipated-2, I-1) dobj(anticipated-2, that-3) amod(attitude-5, complacent-4) dep(that-3, attitude-5) case(reply-9, in-6) det(reply-9, the-7) amod(reply-9, usual-8) nmod:in(attitude-5, reply-9) case(Secretary-12, of-10) det(Secretary-12, the-11) nmod:of(reply-9, Secretary-12) case(State-14, of-13) nmod:of(Secretary-12, State-14) case(Wales-16, for-15) nmod:for(Secretary-12, Wales-16) punct(anticipated-2, .-17)",1,1,0,"root(ROOT, anticipated) nsbj(anticipated, I) dobj(anticipated, that) amod(attitde, complacent) dep(that, attitde) case(reply, in) det(reply, the) amod(reply, sal) nmod:in(attitde, reply) case(Secretary, of) det(Secretary, the) nmod:of(reply, Secretary) case(State, of) nmod:of(Secretary, State) case(Wales, for) nmod:for(Secretary, Wales) pnct(anticipated, .)","root(,VBD) nsbj(VBD,PRP) dobj(VBD,IN) amod(NN,JJ) dep(IN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(NN,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(VBD,VBD)","[Wales, attitude, reply, usual, State, Secretary]","[Wales, attitude, reply, usual, State, Secretary]",17,"[Wales, attitude, reply, usual, State, Secretary]","[Wales, attitude, reply, usual, State, Secretary]",NNP_Wales NN_attitude NN_reply JJ_usual NNP_State NNP_Secretary ,"[Wales, attitude, reply, usual, State, Secretary]","[Wales, attitude, reply, usual, State, Secretary]",NNP_Wales NN_attitude NN_reply JJ_usual NNP_State NNP_Secretary ,"[Wales, attitude, reply, usual, State, Secretary]",NNP_Wales NN_attitude NN_reply JJ_usual NNP_State NNP_Secretary ,"[Wales, attitude, reply, usual, State, Secretary]",NNP_Wales NN_attitude NN_reply JJ_usual NNP_State NNP_Secretary ,2,2,2,0,0,0,0,0,0,0
Will he be less spineless in the Cabinet and do the same as the miners and Arthur Scargill in trying to get and save jobs in Wales and the rest of the country?,WillMD hePRP beVB lessJJR spinelessNN inIN theDT CabinetNNP andCC doVBP theDT sameJJ asIN theDT minersNNS andCC ArthurNNP ScargillNNP inIN tryingVBG toTO getVB andCC saveVB jobsNNS inIN WalesNNP andCC theDT restNN ofIN theDT countryNN ,"root(ROOT-0, spineless-5) aux(spineless-5, Will-1) nsubj(spineless-5, he-2) nsubj(do-10, he-2) cop(spineless-5, be-3) advmod(spineless-5, less-4) case(Cabinet-8, in-6) det(Cabinet-8, the-7) nmod:in(spineless-5, Cabinet-8) cc(spineless-5, and-9) conj:and(spineless-5, do-10) det(same-12, the-11) dobj(do-10, same-12) case(miners-15, as-13) det(miners-15, the-14) nmod:as(same-12, miners-15) cc(miners-15, and-16) compound(Scargill-18, Arthur-17) nmod:as(same-12, Scargill-18) conj:and(miners-15, Scargill-18) mark(trying-20, in-19) acl(same-12, trying-20) mark(get-22, to-21) xcomp(trying-20, get-22) cc(get-22, and-23) xcomp(trying-20, save-24) conj:and(get-22, save-24) dobj(get-22, jobs-25) case(Wales-27, in-26) nmod:in(jobs-25, Wales-27) cc(jobs-25, and-28) det(rest-30, the-29) dobj(get-22, rest-30) conj:and(jobs-25, rest-30) case(country-33, of-31) det(country-33, the-32) nmod:of(rest-30, country-33) punct(spineless-5, ?-34)",1,0,1,"root(ROOT, spineless) ax(spineless, Will) nsbj(spineless, he) nsbj(do, he) cop(spineless, be) advmod(spineless, less) case(Cabinet, in) det(Cabinet, the) nmod:in(spineless, Cabinet) cc(spineless, and) conj:and(spineless, do) det(same, the) dobj(do, same) case(miners, as) det(miners, the) nmod:as(same, miners) cc(miners, and) compond(Scargill, Arthr) nmod:as(same, Scargill) conj:and(miners, Scargill) mark(trying, in) acl(same, trying) mark(get, to) xcomp(trying, get) cc(get, and) xcomp(trying, save) conj:and(get, save) dobj(get, jobs) case(Wales, in) nmod:in(jobs, Wales) cc(jobs, and) det(rest, the) dobj(get, rest) conj:and(jobs, rest) case(contry, of) det(contry, the) nmod:of(rest, contry) pnct(spineless, ?)","root(,NN) ax(NN,MD) nsbj(NN,PRP) nsbj(VBP,PRP) cop(NN,VB) advmod(NN,JJR) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) cc(NN,CC) conj:and(NN,VBP) det(JJ,DT) VBPbj(VBP,JJ) case(NNS,IN) det(NNS,DT) nmod:as(JJ,NNS) cc(NNS,CC) compond(NNP,NNP) nmod:as(JJ,NNP) conj:and(NNS,NNP) mark(VBG,IN) acl(JJ,VBG) mark(VB,TO) xcomp(VBG,VB) cc(VB,CC) xcomp(VBG,VB) conj:and(VB,VB) dobj(VB,NNS) case(NNP,IN) nmod:in(NNS,NNP) cc(NNS,CC) det(NN,DT) dobj(VB,NN) conj:and(NNS,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(NN,NN)","[do, spineless, same, Cabinet, and, he, ROOT, less]","[do, spineless, same, Cabinet, and, he, ROOT, less]",3,[ ],[ ],VB_do NN_spineless JJ_same NNP_Cabinet CC_and PRP_he JJR_less ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],1,2,2,0,0,0,0,0,0,0
Is the Minister aware that some people in the mining industry  and outside it  say that the only time that the Secretary of State for Wales begins to shake himself about anything is when the Prime Minister's husband sends him a letter?,IsVBZ theDT MinisterNNP awareNN thatIN someDT peopleNNS inIN theDT miningNN industryNN andCC outsideIN itPRP sayVBP thatIN theDT onlyJJ timeNN thatIN theDT SecretaryNNP ofIN StateNNP forIN WalesNNP beginsVBZ toTO shakeVB himselfPRP aboutIN anythingNN isVBZ whenWRB theDT PrimeNNP MinisterNNP 'sPOS husbandNN sendsVBZ himPRP aDT letterNN ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) det(Minister-3, the-2) nsubj(aware-4, Minister-3) mark(say-17, that-5) det(people-7, some-6) nsubj(say-17, people-7) case(industry-11, in-8) det(industry-11, the-9) compound(industry-11, mining-10) nmod:in(people-7, industry-11) punct(people-7, ,-12) cc(people-7, and-13) case(it-15, outside-14) conj:and(people-7, it-15) nsubj(say-17, it-15) punct(people-7, ,-16) ccomp(aware-4, say-17) dobj(say-17, that-18) det(time-21, the-19) amod(time-21, only-20) root(that-18, time-21) dobj(begins-29, that-22) det(Secretary-24, the-23) nsubj(begins-29, Secretary-24) case(State-26, of-25) nmod:of(Secretary-24, State-26) case(Wales-28, for-27) nmod:for(Secretary-24, Wales-28) acl:relcl(time-21, begins-29) mark(shake-31, to-30) xcomp(begins-29, shake-31) dobj(shake-31, himself-32) case(anything-34, about-33) nmod:about(shake-31, anything-34) dep(time-21, is-35) advmod(sends-42, when-36) det(Minister-39, the-37) compound(Minister-39, Prime-38) nmod:poss(husband-41, Minister-39) case(Minister-39, 's-40) nsubj(sends-42, husband-41) advcl(is-35, sends-42) iobj(sends-42, him-43) det(letter-45, a-44) dobj(sends-42, letter-45) punct(time-21, ?-46)",1,0,0,"root(ROOT, aware) cop(aware, Is) det(Minister, the) nsbj(aware, Minister) mark(say, that) det(people, some) nsbj(say, people) case(indstry, in) det(indstry, the) compond(indstry, mining) nmod:in(people, indstry) pnct(people, ,) cc(people, and) case(it, otside) conj:and(people, it) nsbj(say, it) pnct(people, ,) ccomp(aware, say) dobj(say, that) det(time, the) amod(time, only) root(that, time) dobj(begins, that) det(Secretary, the) nsbj(begins, Secretary) case(State, of) nmod:of(Secretary, State) case(Wales, for) nmod:for(Secretary, Wales) acl:relcl(time, begins) mark(shake, to) xcomp(begins, shake) dobj(shake, himself) case(anything, abot) nmod:abot(shake, anything) dep(time, is) advmod(sends, when) det(Minister, the) compond(Minister, Prime) nmod:poss(hsband, Minister) ""case(Minister, s)"", nsbj(sends, hsband) advcl(is, sends) iobj(sends, him) det(letter, a) dobj(sends, letter) pnct(time, ?)","root(,NN) cop(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) mark(VBP,IN) det(NNS,DT) nsbj(VBP,NNS) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(NNS,NN) pnct(NNS,NNS) cc(NNS,CC) case(PRP,IN) conj:and(NNS,PRP) nsbj(VBP,PRP) pnct(NNS,NNS) ccomp(NN,VBP) dobj(VBP,IN) det(NN,DT) amod(NN,JJ) root(IN,NN) dobj(VBZ,IN) det(NNP,DT) nsbj(VBZ,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) acl:relcl(NN,VBZ) mark(VB,TO) xcomp(VBZ,VB) dobj(VB,PRP) case(NN,IN) nmod:abot(VB,NN) dep(NN,VBZ) advmod(VBZ,WRB) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nsbj(VBZ,NN) advcl(VBZ,VBZ) iobj(VBZ,PRP) det(NN,DT) dobj(VBZ,NN) pnct(NN,NN)","[State, sends, Secretary, husband, aware, that, say, Minister, ROOT, shake, Wales, time, begins, Minister]","[State, sends, Secretary, husband, aware, that, say, Minister, ROOT, shake, Wales, time, begins, Minister]",5,"[State, sends, Secretary, husband, aware, that, say, Minister, ROOT, shake, Wales, time, begins, Minister]","[State, Secretary, shake, Wales, time, begins, that]",NNP_State VBZ_sends NNP_Secretary NN_husband JJ_aware IN_that VB_say NNP_Minister VB_shake NNP_Wales NN_time VBZ_begins NNP_Minister ,"[State, sends, Secretary, husband, aware, that, say, Minister, ROOT, shake, Wales, time, begins, Minister]","[State, sends, Secretary, husband, aware, that, say, Minister, ROOT, shake, Wales, time, begins, Minister]",NNP_State VBZ_sends NNP_Secretary NN_husband JJ_aware IN_that VB_say NNP_Minister VB_shake NNP_Wales NN_time VBZ_begins NNP_Minister ,"[State, sends, Secretary, husband, aware, that, say, Minister, ROOT, shake, Wales, time, begins, Minister]",NNP_State VBZ_sends NNP_Secretary NN_husband JJ_aware IN_that VB_say NNP_Minister VB_shake NNP_Wales NN_time VBZ_begins NNP_Minister ,"[State, sends, Secretary, husband, aware, that, say, Minister, ROOT, shake, Wales, time, begins, Minister]",NNP_State VBZ_sends NNP_Secretary NN_husband JJ_aware IN_that VB_say NNP_Minister VB_shake NNP_Wales NN_time VBZ_begins NNP_Minister ,3,2,2,2,1,2,2,2,2,2
Is he also aware that we do not expect other than complacent answers from him  because it is well known that the miners are on the road to a historic victory  especially now that the chairman of the coal board has been put on the substitutes' bench  and that he  the Prime Minister and the rest of the Cabinet are due to get the biggest political and industrial good hiding that they have had in their lives?,IsVBZ hePRP alsoRB awareVBP thatIN wePRP doVBP notRB expectVB otherJJ thanIN complacentJJ answersNNS fromIN himPRP becauseIN itPRP isVBZ wellRB knownVBN thatIN theDT minersNNS areVBP onIN theDT roadNN toTO aDT historicJJ victoryNN especiallyRB nowRB thatIN theDT chairmanNN ofIN theDT coalNN boardNN hasVBZ beenVBN putVBN onIN theDT substitutesNNS 'POS benchNN andCC thatIN hePRP theDT PrimeNNP MinisterNNP andCC theDT restNN ofIN theDT CabinetNNP areVBP dueJJ toTO getVB theDT biggestJJS politicalJJ andCC industrialJJ goodJJ hidingNN thatIN theyPRP haveVBP hadVBN inIN theirPRP$ livesNNS ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) nsubj(aware-4, he-2) advmod(aware-4, also-3) mark(expect-9, that-5) nsubj(expect-9, we-6) aux(expect-9, do-7) neg(expect-9, not-8) ccomp(aware-4, expect-9) dobj(expect-9, other-10) case(answers-13, than-11) amod(answers-13, complacent-12) nmod:than(other-10, answers-13) case(him-15, from-14) nmod:from(answers-13, him-15) punct(aware-4, ,-16) mark(known-21, because-17) nsubjpass(known-21, it-18) auxpass(known-21, is-19) advmod(known-21, well-20) advcl(aware-4, known-21) mark(road-28, that-22) det(miners-24, the-23) nsubj(road-28, miners-24) cop(road-28, are-25) case(road-28, on-26) det(road-28, the-27) ccomp(known-21, road-28) case(victory-32, to-29) det(victory-32, a-30) amod(victory-32, historic-31) nmod:to(road-28, victory-32) punct(road-28, ,-33) advmod(now-35, especially-34) advmod(road-28, now-35) mark(put-45, that-36) det(chairman-38, the-37) nsubjpass(put-45, chairman-38) case(board-42, of-39) det(board-42, the-40) compound(board-42, coal-41) nmod:of(chairman-38, board-42) aux(put-45, has-43) auxpass(put-45, been-44) ccomp(now-35, put-45) case(bench-50, on-46) det(substitutes-48, the-47) nmod:poss(bench-50, substitutes-48) case(substitutes-48, '-49) nmod:on(put-45, bench-50) punct(put-45, ,-51) cc(put-45, and-52) mark(due-66, that-53) nsubj(due-66, he-54) punct(due-66, ,-55) det(Minister-58, the-56) compound(Minister-58, Prime-57) nsubj(due-66, Minister-58) cc(Minister-58, and-59) det(rest-61, the-60) conj:and(Minister-58, rest-61) nsubj(due-66, rest-61) case(Cabinet-64, of-62) det(Cabinet-64, the-63) nmod:of(rest-61, Cabinet-64) cop(due-66, are-65) ccomp(now-35, due-66) conj:and(put-45, due-66) mark(get-68, to-67) xcomp(due-66, get-68) det(hiding-75, the-69) amod(hiding-75, biggest-70) amod(hiding-75, political-71) cc(political-71, and-72) conj:and(political-71, industrial-73) amod(hiding-75, industrial-73) amod(hiding-75, good-74) dobj(get-68, hiding-75) dobj(had-79, that-76) nsubj(had-79, they-77) aux(had-79, have-78) acl:relcl(hiding-75, had-79) case(lives-82, in-80) nmod:poss(lives-82, their-81) nmod:in(had-79, lives-82) punct(aware-4, ?-83)",1,0,0,"root(ROOT, aware) cop(aware, Is) nsbj(aware, he) advmod(aware, also) mark(expect, that) nsbj(expect, we) ax(expect, do) neg(expect, not) ccomp(aware, expect) dobj(expect, other) case(answers, than) amod(answers, complacent) nmod:than(other, answers) case(him, from) nmod:from(answers, him) pnct(aware, ,) mark(known, becase) nsbjpass(known, it) axpass(known, is) advmod(known, well) advcl(aware, known) mark(road, that) det(miners, the) nsbj(road, miners) cop(road, are) case(road, on) det(road, the) ccomp(known, road) case(victory, to) det(victory, a) amod(victory, historic) nmod:to(road, victory) pnct(road, ,) advmod(now, especially) advmod(road, now) mark(pt, that) det(chairman, the) nsbjpass(pt, chairman) case(board, of) det(board, the) compond(board, coal) nmod:of(chairman, board) ax(pt, has) axpass(pt, been) ccomp(now, pt) case(bench, on) det(sbstittes, the) nmod:poss(bench, sbstittes) ""case(sbstittes, )"", nmod:on(pt, bench) pnct(pt, ,) cc(pt, and) mark(de, that) nsbj(de, he) pnct(de, ,) det(Minister, the) compond(Minister, Prime) nsbj(de, Minister) cc(Minister, and) det(rest, the) conj:and(Minister, rest) nsbj(de, rest) case(Cabinet, of) det(Cabinet, the) nmod:of(rest, Cabinet) cop(de, are) ccomp(now, de) conj:and(pt, de) mark(get, to) xcomp(de, get) det(hiding, the) amod(hiding, biggest) amod(hiding, political) cc(political, and) conj:and(political, indstrial) amod(hiding, indstrial) amod(hiding, good) dobj(get, hiding) dobj(had, that) nsbj(had, they) ax(had, have) acl:relcl(hiding, had) case(lives, in) nmod:poss(lives, their) nmod:in(had, lives) pnct(aware, ?)","root(,VBP) cop(VBP,VBZ) nsbj(VBP,PRP) advmod(VBP,RB) mark(VB,IN) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) ccomp(VBP,VB) dobj(VB,JJ) case(NNS,IN) amod(NNS,JJ) nmod:than(JJ,NNS) case(PRP,IN) nmod:from(NNS,PRP) pnct(VBP,VBP) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) advmod(VBN,RB) advcl(VBP,VBN) mark(NN,IN) det(NNS,DT) nsbj(NN,NNS) cop(NN,VBP) case(NN,IN) det(NN,DT) ccomp(VBN,NN) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(NN,NN) pnct(NN,NN) advmod(RB,RB) advmod(NN,RB) mark(VBN,IN) det(NN,DT) nsbjpass(VBN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) ax(VBN,VBZ) axpass(VBN,VBN) ccomp(RB,VBN) case(NN,IN) det(NNS,DT) nmod:poss(NN,NNS) case(NNS,POS) nmod:on(VBN,NN) pnct(VBN,VBN) cc(VBN,CC) mark(JJ,IN) nsbj(JJ,PRP) pnct(JJ,JJ) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cc(NNP,CC) det(NN,DT) conj:and(NNP,NN) nsbj(JJ,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) cop(JJ,VBP) ccomp(RB,JJ) conj:and(VBN,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) amod(NN,JJS) amod(NN,JJ) cc(JJ,CC) conj:and(JJ,JJ) amod(NN,JJ) amod(NN,JJ) dobj(VB,NN) dobj(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) acl:relcl(NN,VBN) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:in(VBN,NNS) pnct(VBP,VBP)","[he, get, Minister, also, Cabinet, now, aware, expect, known, and, ROOT, he, due, rest]","[he, get, Minister, also, Cabinet, now, aware, expect, known, and, ROOT, he, due, rest]",11,"[he, get, Minister, also, Cabinet, now, aware, expect, known, and, ROOT, he, due, rest]",[ ],PRP_he VBP_get NNP_Minister RB_also NNP_Cabinet RB_now JJ_aware VB_expect VBN_known CC_and PRP_he JJ_due NN_rest ,"[he, get, Minister, also, Cabinet, now, aware, expect, known, and, ROOT, he, due, rest]","[he, get, Minister, also, Cabinet, now, aware, expect, known, and, ROOT, he, due, rest]",PRP_he VBP_get NNP_Minister RB_also NNP_Cabinet RB_now JJ_aware VB_expect VBN_known CC_and PRP_he JJ_due NN_rest ,"[he, get, Minister, also, Cabinet, now, aware, expect, known, and, ROOT, he, due, rest]",PRP_he VBP_get NNP_Minister RB_also NNP_Cabinet RB_now JJ_aware VB_expect VBN_known CC_and PRP_he JJ_due NN_rest ,"[he, get, Minister, also, Cabinet, now, aware, expect, known, and, ROOT, he, due, rest]",PRP_he VBP_get NNP_Minister RB_also NNP_Cabinet RB_now JJ_aware VB_expect VBN_known CC_and PRP_he JJ_due NN_rest ,1,2,2,0,0,0,0,0,0,0
I hope that negotiations will lead to a successful conclusion and that we shall return to a situation in which the industry can have a future based on the substantial investment being made by the Government.,IPRP hopeVBP thatIN negotiationsNNS willMD leadVB toTO aDT successfulJJ conclusionNN andCC thatIN wePRP shallMD returnVB toTO aDT situationNN inIN whichWDT theDT industryNN canMD haveVB aDT futureNN basedVBN onIN theDT substantialJJ investmentNN beingVBG madeVBN byIN theDT GovernmentNNP ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(lead-6, that-3) nsubj(lead-6, negotiations-4) aux(lead-6, will-5) ccomp(hope-2, lead-6) case(conclusion-10, to-7) det(conclusion-10, a-8) amod(conclusion-10, successful-9) nmod:to(lead-6, conclusion-10) cc(lead-6, and-11) mark(return-15, that-12) nsubj(return-15, we-13) aux(return-15, shall-14) ccomp(hope-2, return-15) conj:and(lead-6, return-15) case(situation-18, to-16) det(situation-18, a-17) nmod:to(return-15, situation-18) case(which-20, in-19) nmod:in(have-24, which-20) det(industry-22, the-21) nsubj(have-24, industry-22) aux(have-24, can-23) acl:relcl(situation-18, have-24) det(future-26, a-25) dobj(have-24, future-26) acl(future-26, based-27) case(investment-31, on-28) det(investment-31, the-29) amod(investment-31, substantial-30) nmod:on(based-27, investment-31) auxpass(made-33, being-32) acl(investment-31, made-33) case(Government-36, by-34) det(Government-36, the-35) nmod:agent(made-33, Government-36) punct(hope-2, .-37)",1,0,1,"root(ROOT, hope) nsbj(hope, I) mark(lead, that) nsbj(lead, negotiations) ax(lead, will) ccomp(hope, lead) case(conclsion, to) det(conclsion, a) amod(conclsion, sccessfl) nmod:to(lead, conclsion) cc(lead, and) mark(retrn, that) nsbj(retrn, we) ax(retrn, shall) ccomp(hope, retrn) conj:and(lead, retrn) case(sitation, to) det(sitation, a) nmod:to(retrn, sitation) case(which, in) nmod:in(have, which) det(indstry, the) nsbj(have, indstry) ax(have, can) acl:relcl(sitation, have) det(ftre, a) dobj(have, ftre) acl(ftre, based) case(investment, on) det(investment, the) amod(investment, sbstantial) nmod:on(based, investment) axpass(made, being) acl(investment, made) case(Government, by) det(Government, the) nmod:agent(made, Government) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VB,IN) nsbj(VB,NNS) ax(VB,MD) ccomp(VBP,VB) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VB,NN) cc(VB,CC) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBP,VB) conj:and(VB,VB) case(NN,TO) det(NN,DT) nmod:to(VB,NN) case(WDT,IN) nmod:in(VB,WDT) det(NN,DT) nsbj(VB,NN) ax(VB,MD) acl:relcl(NN,VB) det(NN,DT) dobj(VB,NN) acl(NN,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VBN,NN) axpass(VBN,VBG) acl(NN,VBN) case(NNP,IN) det(NNP,DT) nmod:agent(VBN,NNP) pnct(VBP,VBP)","[Government, investment, made]","[Government, investment, made]",11,"[Government, investment, made]","[Government, investment, made]",NNP_Government NN_investment VBN_made ,"[Government, investment, made]","[Government, investment, made]",NNP_Government NN_investment VBN_made ,"[Government, investment, made]",NNP_Government NN_investment VBN_made ,"[Government, investment, made]",NNP_Government NN_investment VBN_made ,2,1,1,0,0,0,0,0,0,0
I congratulate my right hon. Friend on the stand that he has already taken in Europe on penalties  but will he bear in mind that the fear of those in British agriculture is justified and that there must be the most rigorous inspection and checking to see that people do not cheat  and particularly to see that next time the Irish do not get away with it?,IPRP congratulateVBP myPRP$ rightJJ honNN FriendNNP onIN theDT standNN thatIN hePRP hasVBZ alreadyRB takenVBN inIN EuropeNNP onIN penaltiesNNS butCC willMD hePRP bearVB inIN mindNN thatIN theDT fearNN ofIN thoseDT inIN BritishJJ agricultureNN isVBZ justifiedJJ andCC thatIN thereEX mustMD beVB theDT mostRBS rigorousJJ inspectionNN andCC checkingNN toTO seeVB thatIN peopleNNS doVBP notRB cheatVB andCC particularlyRB toTO seeVB thatIN nextJJ timeNN theDT IrishNNP doVBP notRB getVB awayRB withIN itPRP ,"root(ROOT-0, congratulate-2) nsubj(congratulate-2, I-1) nmod:poss(Friend-6, my-3) amod(Friend-6, right-4) compound(Friend-6, hon.-5) dobj(congratulate-2, Friend-6) case(stand-9, on-7) det(stand-9, the-8) nmod:on(congratulate-2, stand-9) dobj(taken-14, that-10) nsubj(taken-14, he-11) aux(taken-14, has-12) advmod(taken-14, already-13) acl:relcl(stand-9, taken-14) case(Europe-16, in-15) nmod:in(taken-14, Europe-16) case(penalties-18, on-17) nmod:on(taken-14, penalties-18) punct(congratulate-2, ,-19) cc(congratulate-2, but-20) aux(bear-23, will-21) nsubj(bear-23, he-22) conj:but(congratulate-2, bear-23) case(mind-25, in-24) nmod:in(bear-23, mind-25) mark(justified-35, that-26) det(fear-28, the-27) nsubj(justified-35, fear-28) case(those-30, of-29) nmod:of(fear-28, those-30) case(agriculture-33, in-31) amod(agriculture-33, British-32) nmod:in(those-30, agriculture-33) cop(justified-35, is-34) ccomp(mind-25, justified-35) cc(justified-35, and-36) mark(inspection-44, that-37) expl(inspection-44, there-38) aux(inspection-44, must-39) cop(inspection-44, be-40) det(inspection-44, the-41) advmod(rigorous-43, most-42) amod(inspection-44, rigorous-43) ccomp(mind-25, inspection-44) conj:and(justified-35, inspection-44) cc(inspection-44, and-45) conj:and(justified-35, checking-46) conj:and(inspection-44, checking-46) mark(see-48, to-47) xcomp(checking-46, see-48) mark(cheat-53, that-49) nsubj(cheat-53, people-50) nsubj(see-58, people-50) aux(cheat-53, do-51) neg(cheat-53, not-52) ccomp(see-48, cheat-53) punct(cheat-53, ,-54) cc(cheat-53, and-55) advmod(see-58, particularly-56) mark(see-58, to-57) ccomp(see-48, see-58) conj:and(cheat-53, see-58) det(time-61, that-59) amod(time-61, next-60) dobj(see-58, time-61) det(Irish-63, the-62) nsubj(get-66, Irish-63) aux(get-66, do-64) neg(get-66, not-65) acl:relcl(time-61, get-66) advmod(get-66, away-67) case(it-69, with-68) nmod:with(get-66, it-69) punct(congratulate-2, ?-70)",1,0,0,"root(ROOT, congratlate) nsbj(congratlate, I) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) dobj(congratlate, Friend) case(stand, on) det(stand, the) nmod:on(congratlate, stand) dobj(taken, that) nsbj(taken, he) ax(taken, has) advmod(taken, already) acl:relcl(stand, taken) case(Erope, in) nmod:in(taken, Erope) case(penalties, on) nmod:on(taken, penalties) pnct(congratlate, ,) cc(congratlate, bt) ax(bear, will) nsbj(bear, he) conj:bt(congratlate, bear) case(mind, in) nmod:in(bear, mind) mark(jstified, that) det(fear, the) nsbj(jstified, fear) case(those, of) nmod:of(fear, those) case(agricltre, in) amod(agricltre, British) nmod:in(those, agricltre) cop(jstified, is) ccomp(mind, jstified) cc(jstified, and) mark(inspection, that) expl(inspection, there) ax(inspection, mst) cop(inspection, be) det(inspection, the) advmod(rigoros, most) amod(inspection, rigoros) ccomp(mind, inspection) conj:and(jstified, inspection) cc(inspection, and) conj:and(jstified, checking) conj:and(inspection, checking) mark(see, to) xcomp(checking, see) mark(cheat, that) nsbj(cheat, people) nsbj(see, people) ax(cheat, do) neg(cheat, not) ccomp(see, cheat) pnct(cheat, ,) cc(cheat, and) advmod(see, particlarly) mark(see, to) ccomp(see, see) conj:and(cheat, see) det(time, that) amod(time, next) dobj(see, time) det(Irish, the) nsbj(get, Irish) ax(get, do) neg(get, not) acl:relcl(time, get) advmod(get, away) case(it, with) nmod:with(get, it) pnct(congratlate, ?)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dobj(VBP,NNP) case(NN,IN) det(NN,DT) nmod:on(VBP,NN) dobj(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBZ) advmod(VBN,RB) acl:relcl(NN,VBN) case(NNP,IN) nmod:in(VBN,NNP) case(NNS,IN) nmod:on(VBN,NNS) pnct(VBP,VBP) cc(VBP,CC) ax(VB,MD) nsbj(VB,PRP) conj:bt(VBP,VB) case(NN,IN) nmod:in(VB,NN) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) case(DT,IN) nmod:of(NN,DT) case(NN,IN) amod(NN,JJ) nmod:in(DT,NN) cop(JJ,VBZ) ccomp(NN,JJ) cc(JJ,CC) mark(NN,IN) expl(NN,EX) ax(NN,MD) cop(NN,VB) det(NN,DT) advmod(JJ,RBS) amod(NN,JJ) ccomp(NN,NN) conj:and(JJ,NN) cc(NN,CC) conj:and(JJ,NN) conj:and(NN,NN) mark(VB,TO) xcomp(NN,VB) mark(VB,IN) nsbj(VB,NNS) nsbj(VB,NNS) ax(VB,VBP) neg(VB,RB) ccomp(VB,VB) pnct(VB,VB) cc(VB,CC) advmod(VB,RB) mark(VB,TO) ccomp(VB,VB) conj:and(VB,VB) det(NN,IN) amod(NN,JJ) dobj(VB,NN) det(NNP,DT) nsbj(VB,NNP) ax(VB,VBP) neg(VB,RB) acl:relcl(NN,VB) advmod(VB,RB) case(PRP,IN) nmod:with(VB,PRP) pnct(VBP,VBP)","[taken, congratulate, stand, right, already, I, Friend, he, that, penalties, he, my, but, bear, ROOT, Europe, mind]","[taken, congratulate, stand, already, I, Friend, he, that, penalties, he, my, but, bear, ROOT, Europe, mind]",3,"[I, Friend, congratulate, ROOT, stand, my, but]","[I, Friend, congratulate, ROOT, stand, my, but]",VBN_taken VBP_congratulate VBP_stand RB_already PRP_I NNP_Friend PRP_he IN_that NNS_penalties PRP_he PRP$_my CC_but NN_bear NNP_Europe NN_mind ,"[taken, congratulate, stand, already, I, Friend, he, that, penalties, he, my, but, bear, ROOT, Europe, mind]","[taken, congratulate, stand, already, I, Friend, he, that, penalties, he, my, but, bear, ROOT, Europe, mind]",VBN_taken VBP_congratulate VBP_stand RB_already PRP_I NNP_Friend PRP_he IN_that NNS_penalties PRP_he PRP$_my CC_but NN_bear NNP_Europe NN_mind ,"[taken, congratulate, stand, already, I, Friend, he, that, penalties, he, my, but, bear, ROOT, Europe, mind]",VBN_taken VBP_congratulate VBP_stand RB_already PRP_I NNP_Friend PRP_he IN_that NNS_penalties PRP_he PRP$_my CC_but NN_bear NNP_Europe NN_mind ,"[taken, congratulate, stand, already, I, Friend, he, that, penalties, he, my, but, bear, ROOT, Europe, mind]",VBN_taken VBP_congratulate VBP_stand RB_already PRP_I NNP_Friend PRP_he IN_that NNS_penalties PRP_he PRP$_my CC_but NN_bear NNP_Europe NN_mind ,1,1,2,2,1,2,2,2,2,2
I am sure that the Minister is well aware of the fact that the milk quotas have had a disastrous effect on the Welsh economy.,IPRP amVBP sureJJ thatIN theDT MinisterNNP isVBZ wellRB awareJJ ofIN theDT factNN thatIN theDT milkNN quotasNNS haveVBP hadVBD aDT disastrousJJ effectNN onIN theDT WelshNNP economyNN ,"root(ROOT-0, sure-3) nsubj(sure-3, I-1) cop(sure-3, am-2) mark(aware-9, that-4) det(Minister-6, the-5) nsubj(aware-9, Minister-6) cop(aware-9, is-7) advmod(aware-9, well-8) ccomp(sure-3, aware-9) case(fact-12, of-10) det(fact-12, the-11) nmod:of(aware-9, fact-12) mark(had-18, that-13) det(quotas-16, the-14) compound(quotas-16, milk-15) nsubj(had-18, quotas-16) aux(had-18, have-17) ccomp(fact-12, had-18) det(effect-21, a-19) amod(effect-21, disastrous-20) dobj(had-18, effect-21) case(economy-25, on-22) det(economy-25, the-23) compound(economy-25, Welsh-24) nmod:on(effect-21, economy-25) punct(sure-3, .-26)",1,1,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) mark(aware, that) det(Minister, the) nsbj(aware, Minister) cop(aware, is) advmod(aware, well) ccomp(sre, aware) case(fact, of) det(fact, the) nmod:of(aware, fact) mark(had, that) det(qotas, the) compond(qotas, milk) nsbj(had, qotas) ax(had, have) ccomp(fact, had) det(effect, a) amod(effect, disastros) dobj(had, effect) case(economy, on) det(economy, the) compond(economy, Welsh) nmod:on(effect, economy) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(JJ,IN) det(NNP,DT) nsbj(JJ,NNP) cop(JJ,VBZ) advmod(JJ,RB) ccomp(JJ,JJ) case(NN,IN) det(NN,DT) nmod:of(JJ,NN) mark(VBD,IN) det(NNS,DT) compond(NNS,NN) nsbj(VBD,NNS) ax(VBD,VBP) ccomp(NN,VBD) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:on(NN,NN) pnct(JJ,JJ)","[well, Minister, aware, fact, sure]","[well, Minister, aware, fact, sure]",7,"[well, Minister, aware, fact, sure]",[ ],RB_well NNP_Minister JJ_aware NN_fact RB_sure ,"[well, Minister, aware, fact, sure]","[well, Minister, aware, fact, sure]",RB_well NNP_Minister JJ_aware NN_fact RB_sure ,"[well, Minister, aware, fact, sure]",RB_well NNP_Minister JJ_aware NN_fact RB_sure ,"[well, Minister, aware, fact, sure]",RB_well NNP_Minister JJ_aware NN_fact RB_sure ,2,2,2,1,1,1,2,1,1,2
Is the Minister aware of the serious damage that this will do to Northern Ireland  agriculture and does he regard it as fair in view of the absolute failure of the buy out scheme in Northern Ireland which has not come up to his expectations?,IsVBZ theDT MinisterNNP awareNN ofIN theDT seriousJJ damageNN thatIN thisDT willMD doVB toTO NorthernNNP IrelandNNP agricultureNN andCC doesVBZ hePRP regardVB itPRP asIN fairJJ inIN viewNN ofIN theDT absoluteJJ failureNN ofIN theDT buyNN outRP schemeNN inIN NorthernNNP IrelandNNP whichWDT hasVBZ notRB comeVBN upRP toTO hisPRP$ expectationsNNS ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) det(Minister-3, the-2) nsubj(aware-4, Minister-3) case(damage-8, of-5) det(damage-8, the-6) amod(damage-8, serious-7) nmod:of(aware-4, damage-8) mark(do-12, that-9) nsubj(do-12, this-10) aux(do-12, will-11) ccomp(damage-8, do-12) case(Ireland-15, to-13) amod(Ireland-15, Northern-14) nmod:to(do-12, Ireland-15) punct(Ireland-15, ,-16) nmod:to(do-12, agriculture-17) conj:and(Ireland-15, agriculture-17) cc(Ireland-15, and-18) aux(regard-21, does-19) nsubj(regard-21, he-20) nmod:to(do-12, regard-21) conj:and(Ireland-15, regard-21) dobj(regard-21, it-22) case(fair-24, as-23) nmod:as(regard-21, fair-24) case(view-26, in-25) nmod:in(fair-24, view-26) case(failure-30, of-27) det(failure-30, the-28) amod(failure-30, absolute-29) nmod:of(view-26, failure-30) case(buy-33, of-31) det(buy-33, the-32) nmod:of(failure-30, buy-33) case(scheme-35, out-34) nmod:out(failure-30, scheme-35) case(Ireland-38, in-36) amod(Ireland-38, Northern-37) nmod:in(scheme-35, Ireland-38) nsubj(come-42, which-39) aux(come-42, has-40) neg(come-42, not-41) acl:relcl(scheme-35, come-42) compound:prt(come-42, up-43) case(expectations-46, to-44) nmod:poss(expectations-46, his-45) nmod:to(come-42, expectations-46) punct(aware-4, ?-47)",1,0,0,"root(ROOT, aware) cop(aware, Is) det(Minister, the) nsbj(aware, Minister) case(damage, of) det(damage, the) amod(damage, serios) nmod:of(aware, damage) mark(do, that) nsbj(do, this) ax(do, will) ccomp(damage, do) case(Ireland, to) amod(Ireland, Northern) nmod:to(do, Ireland) pnct(Ireland, ,) nmod:to(do, agricltre) conj:and(Ireland, agricltre) cc(Ireland, and) ax(regard, does) nsbj(regard, he) nmod:to(do, regard) conj:and(Ireland, regard) dobj(regard, it) case(fair, as) nmod:as(regard, fair) case(view, in) nmod:in(fair, view) case(failre, of) det(failre, the) amod(failre, absolte) nmod:of(view, failre) case(by, of) det(by, the) nmod:of(failre, by) case(scheme, ot) nmod:ot(failre, scheme) case(Ireland, in) amod(Ireland, Northern) nmod:in(scheme, Ireland) nsbj(come, which) ax(come, has) neg(come, not) acl:relcl(scheme, come) compond:prt(come, p) case(expectations, to) nmod:poss(expectations, his) nmod:to(come, expectations) pnct(aware, ?)","root(,NN) cop(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) mark(VB,IN) nsbj(VB,DT) ax(VB,MD) ccomp(NN,VB) case(NNP,TO) amod(NNP,NNP) nmod:to(VB,NNP) pnct(NNP,NNP) nmod:to(VB,NN) conj:and(NNP,NN) cc(NNP,CC) ax(VB,VBZ) nsbj(VB,PRP) nmod:to(VB,VB) conj:and(NNP,VB) dobj(VB,PRP) case(JJ,IN) nmod:as(VB,JJ) case(NN,IN) nmod:in(JJ,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,RP) nmod:ot(NN,NN) case(NNP,IN) amod(NNP,NNP) nmod:in(NN,NNP) nsbj(VBN,WDT) ax(VBN,VBZ) neg(VBN,RB) acl:relcl(NN,VBN) compond:prt(VBN,RP) case(NNS,TO) nmod:poss(NNS,PRP$) nmod:to(VBN,NNS) pnct(NN,NN)","[do, he, it, aware, damage, Minister, ROOT, regard, fair]","[do, he, expectations, come, it, aware, damage, Minister, ROOT, fair, regard, his]",11,"[expectations, come, Minister, damage, aware, his, ROOT]","[his, expectations, come]",VB_do PRP_he NNS_expectations NN_come PRP_it JJ_aware VB_damage NNP_Minister JJ_fair NN_regard PRP$_his ,"[do, he, expectations, come, it, aware, damage, Minister, ROOT, fair, regard, his]","[do, he, expectations, come, it, aware, damage, Minister, ROOT, fair, regard, his]",VB_do PRP_he NNS_expectations NN_come PRP_it JJ_aware VB_damage NNP_Minister JJ_fair NN_regard PRP$_his ,"[do, he, expectations, come, it, aware, damage, Minister, ROOT, fair, regard, his]",VB_do PRP_he NNS_expectations NN_come PRP_it JJ_aware VB_damage NNP_Minister JJ_fair NN_regard PRP$_his ,"[do, he, expectations, come, it, aware, damage, Minister, ROOT, fair, regard, his]",VB_do PRP_he NNS_expectations NN_come PRP_it JJ_aware VB_damage NNP_Minister JJ_fair NN_regard PRP$_his ,2,2,2,1,1,1,2,2,2,2
If the hon. Gentleman cares to put down a question on this I shall do my best to answer it in the detail that he might prefer.,IfIN theDT honNN GentlemanNNP caresVBZ toTO putVB downRP aDT questionNN onIN thisDT IPRP shallMD doVB myPRP$ bestJJS toTO answerVB itPRP inIN theDT detailNN thatIN hePRP mightMD preferVB ,"root(ROOT-0, cares-5) mark(cares-5, If-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(cares-5, Gentleman-4) mark(put-7, to-6) xcomp(cares-5, put-7) compound:prt(put-7, down-8) det(question-10, a-9) dobj(put-7, question-10) case(I-13, on-11) det(I-13, this-12) nmod:on(question-10, I-13) aux(do-15, shall-14) xcomp(put-7, do-15) nmod:poss(best-17, my-16) dobj(do-15, best-17) mark(answer-19, to-18) xcomp(do-15, answer-19) dobj(answer-19, it-20) case(detail-23, in-21) det(detail-23, the-22) nmod:in(answer-19, detail-23) dobj(prefer-27, that-24) nsubj(prefer-27, he-25) aux(prefer-27, might-26) acl:relcl(detail-23, prefer-27) punct(cares-5, .-28)",1,1,0,"root(ROOT, cares) mark(cares, If) det(Gentleman, the) compond(Gentleman, hon.) nsbj(cares, Gentleman) mark(pt, to) xcomp(cares, pt) compond:prt(pt, down) det(qestion, a) dobj(pt, qestion) case(I, on) det(I, this) nmod:on(qestion, I) ax(do, shall) xcomp(pt, do) nmod:poss(best, my) dobj(do, best) mark(answer, to) xcomp(do, answer) dobj(answer, it) case(detail, in) det(detail, the) nmod:in(answer, detail) dobj(prefer, that) nsbj(prefer, he) ax(prefer, might) acl:relcl(detail, prefer) pnct(cares, .)","root(,VBZ) mark(VBZ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) mark(VB,TO) xcomp(VBZ,VB) compond:prt(VB,RP) det(NN,DT) dobj(VB,NN) case(PRP,IN) det(PRP,DT) nmod:on(NN,PRP) ax(VB,MD) xcomp(VB,VB) nmod:poss(JJS,PRP$) VBbj(VB,JJS) mark(VB,TO) xcomp(VB,VB) dobj(VB,PRP) case(NN,IN) det(NN,DT) nmod:in(VB,NN) dobj(VB,IN) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) pnct(VBZ,VBZ)","[cares, he, put, Gentleman, that, prefer, ROOT]","[cares, he, put, Gentleman, that, prefer, ROOT]",21,"[ROOT, cares, put, Gentleman]","[ROOT, cares, put, Gentleman]",VBZ_cares PRP_he VBN_put NNP_Gentleman IN_that VB_prefer ,"[cares, he, put, Gentleman, that, prefer, ROOT]","[cares, he, put, Gentleman, that, prefer, ROOT]",VBZ_cares PRP_he VBN_put NNP_Gentleman IN_that VB_prefer ,"[cares, he, put, Gentleman, that, prefer, ROOT]",VBZ_cares PRP_he VBN_put NNP_Gentleman IN_that VB_prefer ,"[cares, he, put, Gentleman, that, prefer, ROOT]",VBZ_cares PRP_he VBN_put NNP_Gentleman IN_that VB_prefer ,1,2,1,1,1,1,1,1,1,1
I welcome the Minister's firm declaration in support of the beef variable premium scheme.,IPRP welcomeVBP theDT MinisterNNP 'sPOS firmNN declarationNN inIN supportNN ofIN theDT beefNN variableJJ premiumNN schemeNN ,"root(ROOT-0, welcome-2) nsubj(welcome-2, I-1) det(Minister-4, the-3) nmod:poss(declaration-7, Minister-4) case(Minister-4, 's-5) compound(declaration-7, firm-6) dobj(welcome-2, declaration-7) case(support-9, in-8) nmod:in(declaration-7, support-9) case(scheme-15, of-10) det(scheme-15, the-11) compound(scheme-15, beef-12) amod(scheme-15, variable-13) compound(scheme-15, premium-14) nmod:of(support-9, scheme-15) punct(welcome-2, .-16)",1,1,0,"root(ROOT, welcome) nsbj(welcome, I) det(Minister, the) nmod:poss(declaration, Minister) ""case(Minister, s)"", compond(declaration, firm) dobj(welcome, declaration) case(spport, in) nmod:in(declaration, spport) case(scheme, of) det(scheme, the) compond(scheme, beef) amod(scheme, variable) compond(scheme, premim) nmod:of(spport, scheme) pnct(welcome, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,NN) dobj(VBP,NN) case(NN,IN) nmod:in(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) pnct(VBP,VBP)","[Minister, declaration, support, welcome]","[Minister, declaration, support, welcome]",22,"[Minister, declaration, support, welcome]","[Minister, declaration, support, welcome]",NNP_Minister NN_declaration NN_support JJ_welcome ,"[Minister, declaration, support, welcome]","[Minister, declaration, support, welcome]",NNP_Minister NN_declaration NN_support JJ_welcome ,"[Minister, declaration, support, welcome]",NNP_Minister NN_declaration NN_support JJ_welcome ,"[Minister, declaration, support, welcome]",NNP_Minister NN_declaration NN_support JJ_welcome ,1,1,1,1,1,1,1,1,1,1
I assure him that it has the support of farmers in Northern Ireland  who recognise the great need for it.,IPRP assureVBP himPRP thatIN itPRP hasVBZ theDT supportNN ofIN farmersNNS inIN NorthernNNP IrelandNNP whoWP recogniseVBP theDT greatJJ needNN forIN itPRP ,"root(ROOT-0, assure-2) nsubj(assure-2, I-1) dobj(assure-2, him-3) mark(has-6, that-4) nsubj(has-6, it-5) ccomp(assure-2, has-6) det(support-8, the-7) dobj(has-6, support-8) case(farmers-10, of-9) nmod:of(support-8, farmers-10) case(Ireland-13, in-11) amod(Ireland-13, Northern-12) nmod:in(support-8, Ireland-13) punct(Ireland-13, ,-14) nsubj(recognise-16, who-15) acl:relcl(Ireland-13, recognise-16) det(need-19, the-17) amod(need-19, great-18) dobj(recognise-16, need-19) case(it-21, for-20) nmod:for(need-19, it-21) punct(assure-2, .-22)",0,0,0,"root(ROOT, assre) nsbj(assre, I) dobj(assre, him) mark(has, that) nsbj(has, it) ccomp(assre, has) det(spport, the) dobj(has, spport) case(farmers, of) nmod:of(spport, farmers) case(Ireland, in) amod(Ireland, Northern) nmod:in(spport, Ireland) pnct(Ireland, ,) nsbj(recognise, who) acl:relcl(Ireland, recognise) det(need, the) amod(need, great) dobj(recognise, need) case(it, for) nmod:for(need, it) pnct(assre, .)","root(,VBP) nsbj(VBP,PRP) dobj(VBP,PRP) mark(VBZ,IN) nsbj(VBZ,PRP) ccomp(VBP,VBZ) det(NN,DT) dobj(VBZ,NN) case(NNS,IN) nmod:of(NN,NNS) case(NNP,IN) amod(NNP,NNP) nmod:in(NN,NNP) pnct(NNP,NNP) nsbj(VBP,WP) acl:relcl(NNP,VBP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) case(PRP,IN) nmod:for(NN,PRP) pnct(VBP,VBP)",[ ],[ ],5,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
I welcome the hon. Gentleman's comments on the schemes.,IPRP welcomeVBP theDT honNN GentlemanNNP 'sPOS commentsNNS onIN theDT schemesNNS ,"root(ROOT-0, welcome-2) nsubj(welcome-2, I-1) det(Gentleman-5, the-3) compound(Gentleman-5, hon.-4) nmod:poss(comments-7, Gentleman-5) case(Gentleman-5, 's-6) dobj(welcome-2, comments-7) case(schemes-10, on-8) det(schemes-10, the-9) nmod:on(comments-7, schemes-10) punct(welcome-2, .-11)",1,1,0,"root(ROOT, welcome) nsbj(welcome, I) det(Gentleman, the) compond(Gentleman, hon.) nmod:poss(comments, Gentleman) ""case(Gentleman, s)"", dobj(welcome, comments) case(schemes, on) det(schemes, the) nmod:on(comments, schemes) pnct(welcome, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) dobj(VBP,NNS) case(NNS,IN) det(NNS,DT) nmod:on(NNS,NNS) pnct(VBP,VBP)","[Gentleman, comments, schemes, welcome]","[Gentleman, comments, schemes, welcome]",5,"[Gentleman, comments, schemes, welcome]","[Gentleman, comments, schemes, welcome]",NNP_Gentleman NNS_comments NNS_schemes JJ_welcome ,"[Gentleman, comments, schemes, welcome]","[Gentleman, comments, schemes, welcome]",NNP_Gentleman NNS_comments NNS_schemes JJ_welcome ,"[Gentleman, comments, schemes, welcome]",NNP_Gentleman NNS_comments NNS_schemes JJ_welcome ,"[Gentleman, comments, schemes, welcome]",NNP_Gentleman NNS_comments NNS_schemes JJ_welcome ,1,1,2,1,1,1,1,1,1,2
The problem is that the scheme is not permanent and it was not this Government who negotiated the position of not making it a permanent scheme.,TheDT problemNN isVBZ thatIN theDT schemeNN isVBZ notRB permanentJJ andCC itPRP wasVBD notRB thisDT GovernmentNN whoWP negotiatedVBD theDT positionNN ofIN notRB makingVBG itPRP aDT permanentJJ schemeNN ,"root(ROOT-0, is-3) det(problem-2, The-1) nsubj(is-3, problem-2) mark(permanent-9, that-4) det(scheme-6, the-5) nsubj(permanent-9, scheme-6) cop(permanent-9, is-7) neg(permanent-9, not-8) ccomp(is-3, permanent-9) cc(permanent-9, and-10) nsubj(Government-15, it-11) cop(Government-15, was-12) neg(Government-15, not-13) det(Government-15, this-14) ccomp(is-3, Government-15) conj:and(permanent-9, Government-15) nsubj(negotiated-17, who-16) acl:relcl(Government-15, negotiated-17) det(position-19, the-18) dobj(negotiated-17, position-19) mark(making-22, of-20) neg(making-22, not-21) acl(position-19, making-22) nsubj(scheme-26, it-23) det(scheme-26, a-24) amod(scheme-26, permanent-25) xcomp(making-22, scheme-26) punct(is-3, .-27)",0,1,0,"root(ROOT, is) det(problem, The) nsbj(is, problem) mark(permanent, that) det(scheme, the) nsbj(permanent, scheme) cop(permanent, is) neg(permanent, not) ccomp(is, permanent) cc(permanent, and) nsbj(Government, it) cop(Government, was) neg(Government, not) det(Government, this) ccomp(is, Government) conj:and(permanent, Government) nsbj(negotiated, who) acl:relcl(Government, negotiated) det(position, the) dobj(negotiated, position) mark(making, of) neg(making, not) acl(position, making) nsbj(scheme, it) det(scheme, a) amod(scheme, permanent) xcomp(making, scheme) pnct(is, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) mark(JJ,IN) det(NN,DT) nsbj(JJ,NN) cop(JJ,VBZ) neg(JJ,RB) ccomp(VBZ,JJ) cc(JJ,CC) nsbj(NN,PRP) cop(NN,VBD) neg(NN,RB) det(NN,DT) ccomp(VBZ,NN) conj:and(JJ,NN) nsbj(VBD,WP) acl:relcl(NN,VBD) det(NN,DT) dobj(VBD,NN) mark(VBG,IN) neg(VBG,RB) acl(NN,VBG) nsbj(NN,PRP) det(NN,DT) amod(NN,JJ) xcomp(VBG,NN) pnct(VBZ,VBZ)","[and, Government, it, is, not, negotiated, position, problem, ROOT, not, permanent, who, scheme]",[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
It was entirely due to the efforts of my right hon. Friend the Minister  whom I was pleased to assist  and not to anyone else  that we managed to retain the beef variable premium scheme.,ItPRP wasVBD entirelyRB dueJJ toTO theDT effortsNNS ofIN myPRP$ rightJJ honNN FriendNNP theDT MinisterNNP whomWP IPRP wasVBD pleasedJJ toTO assistVB andCC notRB toTO anyoneNN elseRB thatIN wePRP managedVBD toTO retainVB theDT beefNN variableJJ premiumNN schemeNN ,"root(ROOT-0, managed-31) nsubj(due-4, It-1) cop(due-4, was-2) advmod(due-4, entirely-3) ccomp(managed-31, due-4) case(efforts-7, to-5) det(efforts-7, the-6) nmod:to(due-4, efforts-7) case(Friend-12, of-8) nmod:poss(Friend-12, my-9) amod(Friend-12, right-10) compound(Friend-12, hon.-11) nmod:of(efforts-7, Friend-12) det(Minister-14, the-13) dep(Friend-12, Minister-14) punct(Minister-14, ,-15) dobj(pleased-19, whom-16) nsubjpass(pleased-19, I-17) auxpass(pleased-19, was-18) acl:relcl(Minister-14, pleased-19) mark(assist-21, to-20) xcomp(pleased-19, assist-21) punct(Minister-14, ,-22) cc(Minister-14, and-23) neg(anyone-26, not-24) case(anyone-26, to-25) dep(Friend-12, anyone-26) conj:and(Minister-14, anyone-26) amod(anyone-26, else-27) punct(managed-31, ,-28) mark(managed-31, that-29) nsubj(managed-31, we-30) mark(retain-33, to-32) xcomp(managed-31, retain-33) det(scheme-38, the-34) compound(scheme-38, beef-35) amod(scheme-38, variable-36) compound(scheme-38, premium-37) dobj(retain-33, scheme-38) punct(managed-31, .-39)",1,0,0,"root(ROOT, managed) nsbj(de, It) cop(de, was) advmod(de, entirely) ccomp(managed, de) case(efforts, to) det(efforts, the) nmod:to(de, efforts) case(Friend, of) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:of(efforts, Friend) det(Minister, the) dep(Friend, Minister) pnct(Minister, ,) dobj(pleased, whom) nsbjpass(pleased, I) axpass(pleased, was) acl:relcl(Minister, pleased) mark(assist, to) xcomp(pleased, assist) pnct(Minister, ,) cc(Minister, and) neg(anyone, not) case(anyone, to) dep(Friend, anyone) conj:and(Minister, anyone) amod(anyone, else) pnct(managed, ,) mark(managed, that) nsbj(managed, we) mark(retain, to) xcomp(managed, retain) det(scheme, the) compond(scheme, beef) amod(scheme, variable) compond(scheme, premim) dobj(retain, scheme) pnct(managed, .)","root(,VBD) nsbj(JJ,PRP) cop(JJ,VBD) advmod(JJ,RB) ccomp(VBD,JJ) case(NNS,TO) det(NNS,DT) nmod:to(JJ,NNS) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:of(NNS,NNP) det(NNP,DT) dep(NNP,NNP) pnct(NNP,NNP) dobj(JJ,WP) nsbjpass(JJ,PRP) axpass(JJ,VBD) acl:relcl(NNP,JJ) mark(VB,TO) xcomp(JJ,VB) pnct(NNP,NNP) cc(NNP,CC) neg(NN,RB) case(NN,TO) dep(NNP,NN) conj:and(NNP,NN) amod(NN,RB) pnct(VBD,VBD) mark(VBD,IN) nsbj(VBD,PRP) mark(VB,TO) xcomp(VBD,VB) det(NN,DT) compond(NN,NN) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) pnct(VBD,VBD)","[ , Minister, due, scheme, I, whom, right, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]","[ , Minister, due, scheme, I, whom, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]",10,"[ , Minister, due, scheme, I, whom, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]","[ , Minister, due, scheme, I, whom, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]",NNP_Minister JJ_due NN_scheme PRP_I WP_whom RB_not NNP_Friend NN_anyone VBN_managed CC_and NNS_efforts RB_else VB_retain PRP$_my VBN_pleased VB_assist ,"[ , Minister, due, scheme, I, whom, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]","[ , Minister, due, scheme, I, whom, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]",NNP_Minister JJ_due NN_scheme PRP_I WP_whom RB_not NNP_Friend NN_anyone VBN_managed CC_and NNS_efforts RB_else VB_retain PRP$_my VBN_pleased VB_assist ,"[ , Minister, due, scheme, I, whom, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]",NNP_Minister JJ_due NN_scheme PRP_I WP_whom RB_not NNP_Friend NN_anyone VBN_managed CC_and NNS_efforts RB_else VB_retain PRP$_my VBN_pleased VB_assist ,"[ , Minister, due, scheme, I, whom, not, Friend, anyone, managed, and, efforts, else, retain, my, ROOT, pleased, assist]",NNP_Minister JJ_due NN_scheme PRP_I WP_whom RB_not NNP_Friend NN_anyone VBN_managed CC_and NNS_efforts RB_else VB_retain PRP$_my VBN_pleased VB_assist ,1,1,1,1,1,1,1,1,1,1
They will no doubt be delighted to hear that the Government will continue their support for Mr. Mandela's release  but would be more cheered if the Government would take some action.,TheyPRP willMD noDT doubtNN beVB delightedVBN toTO hearVB thatIN theDT GovernmentNNP willMD continueVB theirPRP$ supportNN forIN MrNNP MandelaNNP 'sPOS releaseNN butCC wouldMD beVB moreRBR cheeredJJ ifIN theDT GovernmentNNP wouldMD takeVB someDT actionNN ,"root(ROOT-0, delighted-6) nsubjpass(delighted-6, They-1) nsubjpass(cheered-26, They-1) aux(delighted-6, will-2) neg(doubt-4, no-3) nsubjpass(delighted-6, doubt-4) auxpass(delighted-6, be-5) mark(hear-8, to-7) xcomp(delighted-6, hear-8) mark(continue-13, that-9) det(Government-11, the-10) nsubj(continue-13, Government-11) aux(continue-13, will-12) ccomp(hear-8, continue-13) nmod:poss(support-15, their-14) dobj(continue-13, support-15) case(release-20, for-16) compound(Mandela-18, Mr.-17) nmod:poss(release-20, Mandela-18) case(Mandela-18, 's-19) nmod:for(support-15, release-20) punct(delighted-6, ,-21) cc(delighted-6, but-22) aux(cheered-26, would-23) auxpass(cheered-26, be-24) advmod(cheered-26, more-25) conj:but(delighted-6, cheered-26) mark(take-31, if-27) det(Government-29, the-28) nsubj(take-31, Government-29) aux(take-31, would-30) advcl(cheered-26, take-31) det(action-33, some-32) dobj(take-31, action-33) punct(delighted-6, .-34)",1,0,0,"root(ROOT, delighted) nsbjpass(delighted, They) nsbjpass(cheered, They) ax(delighted, will) neg(dobt, no) nsbjpass(delighted, dobt) axpass(delighted, be) mark(hear, to) xcomp(delighted, hear) mark(contine, that) det(Government, the) nsbj(contine, Government) ax(contine, will) ccomp(hear, contine) nmod:poss(spport, their) dobj(contine, spport) case(release, for) compond(Mandela, Mr.) nmod:poss(release, Mandela) ""case(Mandela, s)"", nmod:for(spport, release) pnct(delighted, ,) cc(delighted, bt) ax(cheered, wold) axpass(cheered, be) advmod(cheered, more) conj:bt(delighted, cheered) mark(take, if) det(Government, the) nsbj(take, Government) ax(take, wold) advcl(cheered, take) det(action, some) dobj(take, action) pnct(delighted, .)","root(,VBN) nsbjpass(VBN,PRP) nsbjpass(JJ,PRP) ax(VBN,MD) neg(NN,DT) nsbjpass(VBN,NN) axpass(VBN,VB) mark(VB,TO) xcomp(VBN,VB) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) ccomp(VB,VB) nmod:poss(NN,PRP$) dobj(VB,NN) case(NN,IN) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:for(NN,NN) pnct(VBN,VBN) cc(VBN,CC) ax(JJ,MD) axpass(JJ,VB) advmod(JJ,RBR) conj:bt(VBN,JJ) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,MD) advcl(JJ,VB) det(NN,DT) dobj(VB,NN) pnct(VBN,VBN)","[hear, take, cheered, Government, Government, support, continue, action]","[hear, take, cheered, Government, Government, support, continue, action]",18,[ ],[ ],VB_hear VB_take JJ_cheered NNP_Government NNP_Government NN_support VB_continue NN_action ,"[hear, take, cheered, Government, Government, support, continue, action]","[hear, take, cheered, Government, Government, support, continue, action]",VB_hear VB_take JJ_cheered NNP_Government NNP_Government NN_support VB_continue NN_action ,"[hear, take, cheered, Government, Government, support, continue, action]",VB_hear VB_take JJ_cheered NNP_Government NNP_Government NN_support VB_continue NN_action ,"[hear, take, cheered, Government, Government, support, continue, action]",VB_hear VB_take JJ_cheered NNP_Government NNP_Government NN_support VB_continue NN_action ,1,1,2,1,1,1,1,1,1,2
As to action by Her Majesty's Government  I remind the hon. Gentleman that my right hon. Friend the Prime Minister raised this issue with Mr. P. W. Botha when he was in the United Kingdom last year.,AsIN toTO actionNN byIN HerNNP MajestyNNP 'sPOS GovernmentNNP IPRP remindVBP theDT honNN GentlemanNNP thatIN myPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP raisedVBD thisDT issueNN withIN MrNNP PNNP WNNP BothaNNP whenWRB hePRP wasVBD inIN theDT UnitedNNP KingdomNNP lastJJ yearNN ,"root(ROOT-0, remind-11) case(action-3, As-1) mwe(As-1, to-2) nmod:as_to(remind-11, action-3) case(Government-8, by-4) nmod:poss(Government-8, Her-5) nmod:poss(Government-8, Majesty-6) case(Majesty-6, 's-7) nmod:by(action-3, Government-8) punct(remind-11, ,-9) nsubj(remind-11, I-10) det(Gentleman-14, the-12) compound(Gentleman-14, hon.-13) dobj(remind-11, Gentleman-14) dep(Gentleman-14, that-15) nmod:poss(Friend-19, my-16) amod(Friend-19, right-17) compound(Friend-19, hon.-18) dep(that-15, Friend-19) det(Minister-22, the-20) compound(Minister-22, Prime-21) nsubj(raised-23, Minister-22) acl:relcl(Friend-19, raised-23) det(issue-25, this-24) dobj(raised-23, issue-25) case(Botha-30, with-26) compound(Botha-30, Mr.-27) compound(Botha-30, P.-28) compound(Botha-30, W.-29) nmod:with(raised-23, Botha-30) advmod(Kingdom-37, when-31) nsubj(Kingdom-37, he-32) cop(Kingdom-37, was-33) case(Kingdom-37, in-34) det(Kingdom-37, the-35) compound(Kingdom-37, United-36) advcl:in(raised-23, Kingdom-37) amod(year-39, last-38) nmod:tmod(Kingdom-37, year-39) punct(remind-11, .-40)",1,0,0,"root(ROOT, remind) case(action, As) mwe(As, to) nmod:as_to(remind, action) case(Government, by) nmod:poss(Government, Her) nmod:poss(Government, Majesty) ""case(Majesty, s)"", nmod:by(action, Government) pnct(remind, ,) nsbj(remind, I) det(Gentleman, the) compond(Gentleman, hon.) dobj(remind, Gentleman) dep(Gentleman, that) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) dep(that, Friend) det(Minister, the) compond(Minister, Prime) nsbj(raised, Minister) acl:relcl(Friend, raised) det(isse, this) dobj(raised, isse) case(Botha, with) compond(Botha, Mr.) compond(Botha, P.) compond(Botha, W.) nmod:with(raised, Botha) advmod(Kingdom, when) nsbj(Kingdom, he) cop(Kingdom, was) case(Kingdom, in) det(Kingdom, the) compond(Kingdom, United) advcl:in(raised, Kingdom) amod(year, last) nmod:tmod(Kingdom, year) pnct(remind, .)","root(,VBP) case(NN,IN) mwe(IN,TO) nmod:as_to(VBP,NN) case(NNP,IN) nmod:poss(NNP,NNP) nmod:poss(NNP,NNP) case(NNP,POS) nmod:by(NN,NNP) pnct(VBP,VBP) nsbj(VBP,PRP) det(NNP,DT) compond(NNP,NNP) dobj(VBP,NNP) dep(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dep(IN,NNP) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) acl:relcl(NNP,VBD) det(NN,DT) dobj(VBD,NN) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) compond(NNP,NNP) nmod:with(VBD,NNP) advmod(NNP,WRB) nsbj(NNP,PRP) cop(NNP,VBD) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) advcl:in(VBD,NNP) amod(NN,JJ) nmod:tmod(NNP,NN) pnct(VBP,VBP)","[remind, Gentleman, raised, Government, Kingdom, I, Minister, when, year, Majesty, Her, right, issue, he, that, Friend, my, ROOT, Botha, action]","[remind, Gentleman, raised, Government, Kingdom, I, Minister, when, year, Majesty, Her, issue, he, that, Friend, my, ROOT, Botha, action]",3,"[remind, Gentleman, raised, Government, Kingdom, I, Minister, when, year, Majesty, Her, issue, he, that, Friend, my, ROOT, Botha, action]","[remind, Gentleman, raised, Government, Kingdom, I, Minister, Majesty, Her, issue, that, Friend, my, ROOT, Botha, action]",VBP_remind NNP_Gentleman VBN_raised NNP_Government NNP_Kingdom PRP_I NNP_Minister WRB_when NN_year NNP_Majesty PRP$_Her NN_issue PRP_he IN_that NNP_Friend PRP$_my NNP_Botha NN_action ,"[remind, Gentleman, raised, Government, Kingdom, I, Minister, when, year, Majesty, Her, issue, he, that, Friend, my, ROOT, Botha, action]","[remind, Gentleman, raised, Government, Kingdom, I, Minister, when, year, Majesty, Her, issue, he, that, Friend, my, ROOT, Botha, action]",VBP_remind NNP_Gentleman VBN_raised NNP_Government NNP_Kingdom PRP_I NNP_Minister WRB_when NN_year NNP_Majesty PRP$_Her NN_issue PRP_he IN_that NNP_Friend PRP$_my NNP_Botha NN_action ,"[remind, Gentleman, raised, Government, Kingdom, I, Minister, when, year, Majesty, Her, issue, he, that, Friend, my, ROOT, Botha, action]",VBP_remind NNP_Gentleman VBN_raised NNP_Government NNP_Kingdom PRP_I NNP_Minister WRB_when NN_year NNP_Majesty PRP$_Her NN_issue PRP_he IN_that NNP_Friend PRP$_my NNP_Botha NN_action ,"[remind, Gentleman, raised, Government, Kingdom, I, Minister, when, year, Majesty, Her, issue, he, that, Friend, my, ROOT, Botha, action]",VBP_remind NNP_Gentleman VBN_raised NNP_Government NNP_Kingdom PRP_I NNP_Minister WRB_when NN_year NNP_Majesty PRP$_Her NN_issue PRP_he IN_that NNP_Friend PRP$_my NNP_Botha NN_action ,1,1,1,2,1,2,2,0,1,1
Is it not unfortunate that there are Conservative Back Benchers who are far more concerned to see Hess released from prison than Nelson Mandela  who all his life fought against the principles on which Hess was convicted at Nuremberg?,IsVBZ itPRP notRB unfortunateVB thatIN thereEX areVBP ConservativeNNP BackNNP BenchersNNP whoWP areVBP farRB moreRBR concernedJJ toTO seeVB HessNNP releasedVBN fromIN prisonNN thanIN NelsonNNP MandelaNNP whoWP allDT hisPRP$ lifeNN foughtNN againstIN theDT principlesNNS onIN whichWDT HessNNP wasVBD convictedVBN atIN NurembergNNP ,"root(ROOT-0, unfortunate-4) cop(unfortunate-4, Is-1) nsubj(unfortunate-4, it-2) neg(unfortunate-4, not-3) mark(are-7, that-5) expl(are-7, there-6) ccomp(unfortunate-4, are-7) amod(Benchers-10, Conservative-8) amod(Benchers-10, Back-9) nsubj(are-7, Benchers-10) nsubj(concerned-15, who-11) cop(concerned-15, are-12) advmod(more-14, far-13) advmod(concerned-15, more-14) acl:relcl(Benchers-10, concerned-15) mark(see-17, to-16) xcomp(concerned-15, see-17) nsubj(released-19, Hess-18) ccomp(see-17, released-19) case(prison-21, from-20) nmod:from(released-19, prison-21) case(Mandela-24, than-22) compound(Mandela-24, Nelson-23) nmod:than(prison-21, Mandela-24) punct(Mandela-24, ,-25) dobj(fought-30, who-26) det:predet(life-29, all-27) nmod:poss(life-29, his-28) nsubj(fought-30, life-29) acl:relcl(Mandela-24, fought-30) case(principles-33, against-31) det(principles-33, the-32) nmod:against(fought-30, principles-33) case(which-35, on-34) nmod:on(convicted-38, which-35) nsubjpass(convicted-38, Hess-36) auxpass(convicted-38, was-37) acl:relcl(principles-33, convicted-38) case(Nuremberg-40, at-39) nmod:at(convicted-38, Nuremberg-40) punct(unfortunate-4, ?-41)",1,0,0,"root(ROOT, nfortnate) cop(nfortnate, Is) nsbj(nfortnate, it) neg(nfortnate, not) mark(are, that) expl(are, there) ccomp(nfortnate, are) amod(Benchers, Conservative) amod(Benchers, Back) nsbj(are, Benchers) nsbj(concerned, who) cop(concerned, are) advmod(more, far) advmod(concerned, more) acl:relcl(Benchers, concerned) mark(see, to) xcomp(concerned, see) nsbj(released, Hess) ccomp(see, released) case(prison, from) nmod:from(released, prison) case(Mandela, than) compond(Mandela, Nelson) nmod:than(prison, Mandela) pnct(Mandela, ,) dobj(foght, who) det:predet(life, all) nmod:poss(life, his) nsbj(foght, life) acl:relcl(Mandela, foght) case(principles, against) det(principles, the) nmod:against(foght, principles) case(which, on) nmod:on(convicted, which) nsbjpass(convicted, Hess) axpass(convicted, was) acl:relcl(principles, convicted) case(Nremberg, at) nmod:at(convicted, Nremberg) pnct(nfortnate, ?)","root(,VB) cop(VB,VBZ) nsbj(VB,PRP) neg(VB,RB) mark(VBP,IN) expl(VBP,EX) ccomp(VB,VBP) amod(NNP,NNP) amod(NNP,NNP) nsbj(VBP,NNP) nsbj(JJ,WP) cop(JJ,VBP) advmod(RBR,RB) advmod(JJ,RBR) acl:relcl(NNP,JJ) mark(VB,TO) xcomp(JJ,VB) nsbj(VBN,NNP) ccomp(VB,VBN) case(NN,IN) nmod:from(VBN,NN) case(NNP,IN) compond(NNP,NNP) nmod:than(NN,NNP) pnct(NNP,NNP) dobj(NN,WP) det:predet(NN,DT) nmod:poss(NN,PRP$) nsbj(NN,NN) acl:relcl(NNP,NN) case(NNS,IN) det(NNS,DT) nmod:against(NN,NNS) case(WDT,IN) nmod:on(VBN,WDT) nsbjpass(VBN,NNP) axpass(VBN,VBD) acl:relcl(NNS,VBN) case(NNP,IN) nmod:at(VBN,NNP) pnct(VB,VB)","[Conservative, Benchers, Back, concerned, are]","[his, concerned, Benchers, fought, Conservative, Back, life, are]",4,"[his, concerned, Benchers, fought, Conservative, Back, life, are]","[his, concerned, Benchers, fought, Conservative, Back, life, are]",PRP$_his JJ_concerned NNP_Benchers VBD_fought JJ_Conservative NNP_Back NN_life VBP_are ,"[his, concerned, Benchers, fought, Conservative, Back, life, are]","[his, concerned, Benchers, fought, Conservative, Back, life, are]",PRP$_his JJ_concerned NNP_Benchers VBD_fought JJ_Conservative NNP_Back NN_life VBP_are ,"[his, concerned, Benchers, fought, Conservative, Back, life, are]",PRP$_his JJ_concerned NNP_Benchers VBD_fought JJ_Conservative NNP_Back NN_life VBP_are ,"[his, concerned, Benchers, fought, Conservative, Back, life, are]",PRP$_his JJ_concerned NNP_Benchers VBD_fought JJ_Conservative NNP_Back NN_life VBP_are ,1,2,2,2,1,2,2,2,2,2
Is the Minister aware that we require from this Government and the United Nations  not simply words but determined action and pressure on the South African authorities  to ensure that Nelson Mandela  after 20 years of imprisonment  is allowed  without any conditions  to be released and to become a free man again?,IsVBZ theDT MinisterNNP awareNN thatIN wePRP requireVBP fromIN thisDT GovernmentNNP andCC theDT UnitedNNP NationsNNPS notRB simplyRB wordsNNS butCC determinedJJ actionNN andCC pressureNN onIN theDT SouthJJ AfricanJJ authoritiesNNS toTO ensureVB thatIN NelsonNNP MandelaNNP afterIN 20CD yearsNNS ofIN imprisonmentNN isVBZ allowedVBN withoutIN anyDT conditionsNNS toTO beVB releasedVBN andCC toTO becomeVB aDT freeJJ manNN againRB ,"root(ROOT-0, aware-4) cop(aware-4, Is-1) det(Minister-3, the-2) nsubj(aware-4, Minister-3) mark(require-7, that-5) nsubj(require-7, we-6) ccomp(aware-4, require-7) case(Government-10, from-8) det(Government-10, this-9) nmod:from(require-7, Government-10) cc(Government-10, and-11) det(Nations-14, the-12) compound(Nations-14, United-13) nmod:from(require-7, Nations-14) conj:and(Government-10, Nations-14) punct(aware-4, ,-15) neg(words-18, not-16) advmod(words-18, simply-17) dep(aware-4, words-18) cc(words-18, but-19) dep(aware-4, determined-20) conj:but(words-18, determined-20) dobj(determined-20, action-21) cc(action-21, and-22) dobj(determined-20, pressure-23) conj:and(action-21, pressure-23) case(authorities-28, on-24) det(authorities-28, the-25) amod(African-27, South-26) amod(authorities-28, African-27) nmod:on(action-21, authorities-28) punct(aware-4, ,-29) mark(ensure-31, to-30) xcomp(aware-4, ensure-31) mark(allowed-43, that-32) compound(Mandela-34, Nelson-33) nsubjpass(allowed-43, Mandela-34) punct(Mandela-34, ,-35) case(years-38, after-36) nummod(years-38, 20-37) nmod:after(Mandela-34, years-38) case(imprisonment-40, of-39) nmod:of(years-38, imprisonment-40) punct(Mandela-34, ,-41) auxpass(allowed-43, is-42) ccomp(ensure-31, allowed-43) punct(allowed-43, ,-44) case(conditions-47, without-45) det(conditions-47, any-46) nmod:without(allowed-43, conditions-47) punct(allowed-43, ,-48) mark(released-51, to-49) auxpass(released-51, be-50) xcomp(allowed-43, released-51) cc(released-51, and-52) mark(become-54, to-53) xcomp(allowed-43, become-54) conj:and(released-51, become-54) det(man-57, a-55) amod(man-57, free-56) xcomp(become-54, man-57) advmod(man-57, again-58) punct(aware-4, ?-59)",0,0,0,"root(ROOT, aware) cop(aware, Is) det(Minister, the) nsbj(aware, Minister) mark(reqire, that) nsbj(reqire, we) ccomp(aware, reqire) case(Government, from) det(Government, this) nmod:from(reqire, Government) cc(Government, and) det(Nations, the) compond(Nations, United) nmod:from(reqire, Nations) conj:and(Government, Nations) pnct(aware, ,) neg(words, not) advmod(words, simply) dep(aware, words) cc(words, bt) dep(aware, determined) conj:bt(words, determined) dobj(determined, action) cc(action, and) dobj(determined, pressre) conj:and(action, pressre) case(athorities, on) det(athorities, the) amod(African, Soth) amod(athorities, African) nmod:on(action, athorities) pnct(aware, ,) mark(ensre, to) xcomp(aware, ensre) mark(allowed, that) compond(Mandela, Nelson) nsbjpass(allowed, Mandela) pnct(Mandela, ,) case(years, after) nmmod(years, 20) nmod:after(Mandela, years) case(imprisonment, of) nmod:of(years, imprisonment) pnct(Mandela, ,) axpass(allowed, is) ccomp(ensre, allowed) pnct(allowed, ,) case(conditions, withot) det(conditions, any) nmod:withot(allowed, conditions) pnct(allowed, ,) mark(released, to) axpass(released, be) xcomp(allowed, released) cc(released, and) mark(become, to) xcomp(allowed, become) conj:and(released, become) det(man, a) amod(man, free) xcomp(become, man) advmod(man, again) pnct(aware, ?)","root(,NN) cop(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) mark(VBP,IN) nsbj(VBP,PRP) ccomp(NN,VBP) case(NNP,IN) det(NNP,DT) nmod:from(VBP,NNP) cc(NNP,CC) det(NNPS,DT) compond(NNPS,NNP) nmod:from(VBP,NNPS) conj:and(NNP,NNPS) pnct(NN,NN) neg(NNS,RB) advmod(NNS,RB) dep(NN,NNS) cc(NNS,CC) dep(NN,JJ) conj:bt(NNS,JJ) dobj(JJ,NN) cc(NN,CC) dobj(JJ,NN) conj:and(NN,NN) case(NNS,IN) det(NNS,DT) amod(JJ,JJ) amod(NNS,JJ) nmod:on(NN,NNS) pnct(NN,NN) mark(VB,TO) xcomp(NN,VB) mark(VBN,IN) compond(NNP,NNP) nsbjpass(VBN,NNP) pnct(NNP,NNP) case(NNS,IN) nmmod(NNS,CD) nmod:after(NNP,NNS) case(NN,IN) nmod:of(NNS,NN) pnct(NNP,NNP) axpass(VBN,VBZ) ccomp(VB,VBN) pnct(VBN,VBN) case(NNS,IN) det(NNS,DT) nmod:withot(VBN,NNS) pnct(VBN,VBN) mark(VBN,TO) axpass(VBN,VB) xcomp(VBN,VBN) cc(VBN,CC) mark(VB,TO) xcomp(VBN,VB) conj:and(VBN,VB) det(NN,DT) amod(NN,JJ) xcomp(VB,NN) advmod(NN,RB) pnct(NN,NN)","[require, and, aware, words, Government, Nations, we, Minister, ROOT, ensure]","[require, and, aware, words, Government, Nations, we, Minister, ROOT, ensure]",7,"[require, and, aware, words, Government, Nations, we, Minister, ROOT, ensure]","[require, and, Nations, we, aware, Government]",VBP_require CC_and JJ_aware NNS_words NNP_Government NNP_Nations PRP_we NNP_Minister VB_ensure ,"[require, and, aware, words, Government, Nations, we, Minister, ROOT, ensure]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
As to his first question  that is a most unworthy comparison  which is both irrelevant to the questions under consideration and also  I am afraid to say  rather typical of the hon. Gentleman.,AsIN toTO hisPRP$ firstJJ questionNN thatWDT isVBZ aDT mostRBS unworthyJJ comparisonNN whichWDT isVBZ bothDT irrelevantJJ toTO theDT questionsNNS underIN considerationNN andCC alsoRB IPRP amVBP afraidJJ toTO sayVB ratherRB typicalJJ ofIN theDT honNN GentlemanNNP ,"root(ROOT-0, comparison-12) case(question-5, As-1) mwe(As-1, to-2) nmod:poss(question-5, his-3) amod(question-5, first-4) nmod:as_to(comparison-12, question-5) punct(comparison-12, ,-6) nsubj(comparison-12, that-7) cop(comparison-12, is-8) det(comparison-12, a-9) advmod(unworthy-11, most-10) amod(comparison-12, unworthy-11) punct(comparison-12, ,-13) nsubj(irrelevant-17, which-14) cop(irrelevant-17, is-15) nsubj(irrelevant-17, both-16) acl:relcl(comparison-12, irrelevant-17) case(questions-20, to-18) det(questions-20, the-19) nmod:to(irrelevant-17, questions-20) case(consideration-22, under-21) nmod:under(questions-20, consideration-22) cc(consideration-22, and-23) nmod:under(questions-20, also-24) conj:and(consideration-22, also-24) punct(comparison-12, ,-25) nsubj(afraid-28, I-26) cop(afraid-28, am-27) acl:relcl(comparison-12, afraid-28) mark(say-30, to-29) xcomp(afraid-28, say-30) punct(comparison-12, ,-31) advmod(typical-33, rather-32) amod(comparison-12, typical-33) case(Gentleman-37, of-34) det(Gentleman-37, the-35) compound(Gentleman-37, hon.-36) nmod:of(typical-33, Gentleman-37) punct(comparison-12, .-38)",1,0,0,"root(ROOT, comparison) case(qestion, As) mwe(As, to) nmod:poss(qestion, his) amod(qestion, first) nmod:as_to(comparison, qestion) pnct(comparison, ,) nsbj(comparison, that) cop(comparison, is) det(comparison, a) advmod(nworthy, most) amod(comparison, nworthy) pnct(comparison, ,) nsbj(irrelevant, which) cop(irrelevant, is) nsbj(irrelevant, both) acl:relcl(comparison, irrelevant) case(qestions, to) det(qestions, the) nmod:to(irrelevant, qestions) case(consideration, nder) nmod:nder(qestions, consideration) cc(consideration, and) nmod:nder(qestions, also) conj:and(consideration, also) pnct(comparison, ,) nsbj(afraid, I) cop(afraid, am) acl:relcl(comparison, afraid) mark(say, to) xcomp(afraid, say) pnct(comparison, ,) advmod(typical, rather) amod(comparison, typical) case(Gentleman, of) det(Gentleman, the) compond(Gentleman, hon.) nmod:of(typical, Gentleman) pnct(comparison, .)","root(,NN) case(NN,IN) mwe(IN,TO) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:as_to(NN,NN) pnct(NN,NN) nsbj(NN,WDT) cop(NN,VBZ) det(NN,DT) advmod(JJ,RBS) amod(NN,JJ) pnct(NN,NN) nsbj(JJ,WDT) cop(JJ,VBZ) nsbj(JJ,DT) acl:relcl(NN,JJ) case(NNS,TO) det(NNS,DT) nmod:to(JJ,NNS) case(NN,IN) nmod:nder(NNS,NN) cc(NN,CC) nmod:nder(NNS,RB) conj:and(NN,RB) pnct(NN,NN) nsbj(JJ,PRP) cop(JJ,VBP) acl:relcl(NN,JJ) mark(VB,TO) xcomp(JJ,VB) pnct(NN,NN) advmod(JJ,RB) amod(NN,JJ) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(JJ,NNP) pnct(NN,NN)","[comparison, rather, Gentleman, typical]","[comparison, his, Gentleman, rather, first, question, typical]",7,"[comparison, his, Gentleman, rather, first, question, typical]","[comparison, his, Gentleman, rather, first, question, typical]",NN_comparison PRP$_his NNP_Gentleman RB_rather JJ_first NN_question JJ_typical ,"[comparison, his, Gentleman, rather, first, question, typical]","[comparison, his, Gentleman, rather, first, question, typical]",NN_comparison PRP$_his NNP_Gentleman RB_rather JJ_first NN_question JJ_typical ,"[comparison, his, Gentleman, rather, first, question, typical]",NN_comparison PRP$_his NNP_Gentleman RB_rather JJ_first NN_question JJ_typical ,"[comparison, his, Gentleman, rather, first, question, typical]",NN_comparison PRP$_his NNP_Gentleman RB_rather JJ_first NN_question JJ_typical ,1,2,2,0,0,0,0,0,0,0
Why do the Government not meet leaders of the ANC  who are denied any political role in their own country?,WhyWRB doVBP theDT GovernmentNNP notRB meetVB leadersNNS ofIN theDT ANCNNP whoWP areVBP deniedVBN anyDT politicalJJ roleNN inIN theirPRP$ ownJJ countryNN ,"root(ROOT-0, meet-6) advmod(meet-6, Why-1) aux(meet-6, do-2) det(Government-4, the-3) nsubj(meet-6, Government-4) neg(meet-6, not-5) dobj(meet-6, leaders-7) case(ANC-10, of-8) det(ANC-10, the-9) nmod:of(leaders-7, ANC-10) punct(ANC-10, ,-11) nsubjpass(denied-14, who-12) auxpass(denied-14, are-13) acl:relcl(ANC-10, denied-14) det(role-17, any-15) amod(role-17, political-16) dobj(denied-14, role-17) case(country-21, in-18) nmod:poss(country-21, their-19) amod(country-21, own-20) nmod:in(role-17, country-21) punct(meet-6, ?-22)",1,0,0,"root(ROOT, meet) advmod(meet, Why) ax(meet, do) det(Government, the) nsbj(meet, Government) neg(meet, not) dobj(meet, leaders) case(ANC, of) det(ANC, the) nmod:of(leaders, ANC) pnct(ANC, ,) nsbjpass(denied, who) axpass(denied, are) acl:relcl(ANC, denied) det(role, any) amod(role, political) dobj(denied, role) case(contry, in) nmod:poss(contry, their) amod(contry, own) nmod:in(role, contry) pnct(meet, ?)","root(,VB) advmod(VB,WRB) ax(VB,VBP) det(NNP,DT) nsbj(VB,NNP) neg(VB,RB) dobj(VB,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) pnct(NNP,NNP) nsbjpass(VBN,WP) axpass(VBN,VBP) acl:relcl(NNP,VBN) det(NN,DT) amod(NN,JJ) dobj(VBN,NN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:in(NN,NN) pnct(VB,VB)","[Why, not, Government, ROOT, meet, leaders]","[Why, not, Government, ROOT, meet, leaders]",8,[ ],[ ],WRB_Why RB_not NNP_Government VBP_meet NNS_leaders ,"[Why, not, Government, ROOT, meet, leaders]","[Why, not, Government, ROOT, meet, leaders]",WRB_Why RB_not NNP_Government VBP_meet NNS_leaders ,"[Why, not, Government, ROOT, meet, leaders]",WRB_Why RB_not NNP_Government VBP_meet NNS_leaders ,"[Why, not, Government, ROOT, meet, leaders]",WRB_Why RB_not NNP_Government VBP_meet NNS_leaders ,1,2,2,2,1,2,0,0,0,2
Since the Government are embarking on a brainwashing national exercise to persuade us that we are on the brink of a marvellous  prosperous era  does the Secretary of State not think it appropriate to allow the teachers of Scotland a share of that prosperity by setting up an independent review board?,SinceIN theDT GovernmentNNP areVBP embarkingVBG onIN aDT brainwashingJJ nationalJJ exerciseNN toTO persuadeVB usPRP thatIN wePRP areVBP onIN theDT brinkNN ofIN aDT marvellousJJ prosperousJJ eraNN doesVBZ theDT SecretaryNNP ofIN StateNNP notRB thinkVB itPRP appropriateJJ toTO allowVB theDT teachersNNS ofIN ScotlandNNP aDT shareNN ofIN thatDT prosperityNN byIN settingVBG upRP anDT independentJJ reviewNN boardNN ,"root(ROOT-0, does-27) mark(embarking-5, Since-1) det(Government-3, the-2) nsubj(embarking-5, Government-3) aux(embarking-5, are-4) advcl(does-27, embarking-5) case(exercise-10, on-6) det(exercise-10, a-7) compound(exercise-10, brainwashing-8) amod(exercise-10, national-9) nmod:on(embarking-5, exercise-10) mark(persuade-12, to-11) acl(exercise-10, persuade-12) dobj(persuade-12, us-13) mark(brink-19, that-14) nsubj(brink-19, we-15) cop(brink-19, are-16) case(brink-19, on-17) det(brink-19, the-18) ccomp(persuade-12, brink-19) case(era-25, of-20) det(era-25, a-21) amod(era-25, marvellous-22) punct(era-25, ,-23) amod(era-25, prosperous-24) nmod:of(brink-19, era-25) punct(does-27, ,-26) det(Secretary-29, the-28) nsubj(think-33, Secretary-29) case(State-31, of-30) nmod:of(Secretary-29, State-31) neg(think-33, not-32) ccomp(does-27, think-33) nsubj(allow-37, it-34) dep(allow-37, appropriate-35) mark(allow-37, to-36) ccomp(think-33, allow-37) det(teachers-39, the-38) nsubj(share-43, teachers-39) case(Scotland-41, of-40) nmod:of(teachers-39, Scotland-41) det(share-43, a-42) dobj(allow-37, share-43) case(prosperity-46, of-44) det(prosperity-46, that-45) nmod:of(share-43, prosperity-46) mark(setting-48, by-47) advcl(allow-37, setting-48) compound:prt(setting-48, up-49) det(board-53, an-50) amod(board-53, independent-51) compound(board-53, review-52) dobj(setting-48, board-53) punct(does-27, ?-54)",1,0,0,"root(ROOT, does) mark(embarking, Since) det(Government, the) nsbj(embarking, Government) ax(embarking, are) advcl(does, embarking) case(exercise, on) det(exercise, a) compond(exercise, brainwashing) amod(exercise, national) nmod:on(embarking, exercise) mark(persade, to) acl(exercise, persade) dobj(persade, s) mark(brink, that) nsbj(brink, we) cop(brink, are) case(brink, on) det(brink, the) ccomp(persade, brink) case(era, of) det(era, a) amod(era, marvellos) pnct(era, ,) amod(era, prosperos) nmod:of(brink, era) pnct(does, ,) det(Secretary, the) nsbj(think, Secretary) case(State, of) nmod:of(Secretary, State) neg(think, not) ccomp(does, think) nsbj(allow, it) dep(allow, appropriate) mark(allow, to) ccomp(think, allow) det(teachers, the) nsbj(share, teachers) case(Scotland, of) nmod:of(teachers, Scotland) det(share, a) dobj(allow, share) case(prosperity, of) det(prosperity, that) nmod:of(share, prosperity) mark(setting, by) advcl(allow, setting) compond:prt(setting, p) det(board, an) amod(board, independent) compond(board, review) dobj(setting, board) pnct(does, ?)","root(,VBZ) mark(VBG,IN) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBP) advcl(VBZ,VBG) case(NN,IN) det(NN,DT) compond(NN,JJ) amod(NN,JJ) nmod:on(VBG,NN) mark(VB,TO) acl(NN,VB) dobj(VB,PRP) mark(NN,DT) nsbj(NN,PRP) cop(NN,VBP) case(NN,IN) det(NN,DT) ccomp(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) pnct(NN,NN) amod(NN,JJ) nmod:of(NN,NN) pnct(VBZ,VBZ) det(NNP,DT) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) neg(VB,RB) ccomp(VBZ,VB) nsbj(VB,PRP) dep(VB,JJ) mark(VB,TO) ccomp(VB,VB) det(NNS,DT) nsbj(NN,NNS) case(NNP,IN) nmod:of(NNS,NNP) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) mark(VBG,IN) advcl(VB,VBG) compond:prt(VBG,RP) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VBG,NN) pnct(VBZ,VBZ)","[Government, not, Secretary, embarking, does, think, allow, State, exercise]","[Government, not, Secretary, embarking, does, think, allow, State, exercise]",11,"[not, allow, Secretary, State, does, think]","[not, allow, Secretary, State, does, think]",NNP_Government RB_not NNP_Secretary VBG_embarking VBZ_does VBP_think VB_allow NNP_State NN_exercise ,"[Government, not, Secretary, embarking, does, think, allow, State, exercise]","[Government, not, Secretary, embarking, does, think, allow, State, exercise]",NNP_Government RB_not NNP_Secretary VBG_embarking VBZ_does VBP_think VB_allow NNP_State NN_exercise ,"[Government, not, Secretary, embarking, does, think, allow, State, exercise]",NNP_Government RB_not NNP_Secretary VBG_embarking VBZ_does VBP_think VB_allow NNP_State NN_exercise ,"[Government, not, Secretary, embarking, does, think, allow, State, exercise]",NNP_Government RB_not NNP_Secretary VBG_embarking VBZ_does VBP_think VB_allow NNP_State NN_exercise ,1,2,2,2,1,2,0,0,0,2
With the impending Christmas season  would it not be a nice Christmas present for parents  teachers  children and Scottish education generally if he were to concede that request?,WithIN theDT impendingVBG ChristmasNNP seasonNN wouldMD itPRP notRB beVB aDT niceJJ ChristmasNNP presentNN forIN parentsNNS teachersNNS childrenNNS andCC ScottishJJ educationNN generallyRB ifIN hePRP wereVBD toTO concedeVB thatIN requestNN ,"root(ROOT-0, Christmas-13) case(season-5, With-1) det(season-5, the-2) amod(season-5, impending-3) compound(season-5, Christmas-4) nmod:with(Christmas-13, season-5) punct(Christmas-13, ,-6) aux(Christmas-13, would-7) nsubj(Christmas-13, it-8) neg(Christmas-13, not-9) cop(Christmas-13, be-10) det(Christmas-13, a-11) amod(Christmas-13, nice-12) dep(Christmas-13, present-14) case(parents-16, for-15) nmod:for(present-14, parents-16) punct(parents-16, ,-17) nmod:for(present-14, teachers-18) conj:and(parents-16, teachers-18) punct(parents-16, ,-19) nmod:for(present-14, children-20) conj:and(parents-16, children-20) cc(parents-16, and-21) amod(education-23, Scottish-22) nmod:for(present-14, education-23) conj:and(parents-16, education-23) advmod(were-27, generally-24) mark(were-27, if-25) nsubj(were-27, he-26) dep(present-14, were-27) mark(concede-29, to-28) xcomp(were-27, concede-29) det(request-31, that-30) dobj(concede-29, request-31) punct(Christmas-13, ?-32)",1,0,0,"root(ROOT, Christmas) case(season, With) det(season, the) amod(season, impending) compond(season, Christmas) nmod:with(Christmas, season) pnct(Christmas, ,) ax(Christmas, wold) nsbj(Christmas, it) neg(Christmas, not) cop(Christmas, be) det(Christmas, a) amod(Christmas, nice) dep(Christmas, present) case(parents, for) nmod:for(present, parents) pnct(parents, ,) nmod:for(present, teachers) conj:and(parents, teachers) pnct(parents, ,) nmod:for(present, children) conj:and(parents, children) cc(parents, and) amod(edcation, Scottish) nmod:for(present, edcation) conj:and(parents, edcation) advmod(were, generally) mark(were, if) nsbj(were, he) dep(present, were) mark(concede, to) xcomp(were, concede) det(reqest, that) dobj(concede, reqest) pnct(Christmas, ?)","root(,NNP) case(NN,IN) det(NN,DT) amod(NN,VBG) compond(NN,NNP) nmod:with(NNP,NN) pnct(NNP,NNP) ax(NNP,MD) nsbj(NNP,PRP) neg(NNP,RB) cop(NNP,VB) det(NNP,DT) amod(NNP,JJ) dep(NNP,NN) case(NNS,IN) nmod:for(NN,NNS) pnct(NNS,NNS) nmod:for(NN,NNS) conj:and(NNS,NNS) pnct(NNS,NNS) nmod:for(NN,NNS) conj:and(NNS,NNS) cc(NNS,CC) amod(NN,JJ) nmod:for(NN,NN) conj:and(NNS,NN) advmod(VBD,RB) mark(VBD,IN) nsbj(VBD,PRP) dep(NN,VBD) mark(VB,TO) xcomp(VBD,VB) det(NN,IN) dobj(VB,NN) pnct(NNP,NNP)","[were, concede, generally, he, present]","[were, concede, generally, he, present]",3,"[were, concede, generally, he, present]","[were, concede, generally, he, present]",VBD_were VB_concede RB_generally PRP_he JJ_present ,"[were, concede, generally, he, present]","[were, concede, generally, he, present]",VBD_were VB_concede RB_generally PRP_he JJ_present ,"[were, concede, generally, he, present]",VBD_were VB_concede RB_generally PRP_he JJ_present ,"[were, concede, generally, he, present]",VBD_were VB_concede RB_generally PRP_he JJ_present ,1,2,2,2,1,2,2,2,2,2
Is the Secretary of State aware that at the all party meeting held last week in the House of Commons during the teachers' lobby of Parliament  the spokespersons of all parties got a fair hearing  with the exception of the Tory party spokesperson  the hon. Member for Edinburgh  Central (Mr. Fletcher) who got such a belting from the teachers that I  as the neutral chairperson  had to come to his rescue to allow him to be heard?,IsVBZ theDT SecretaryNNP ofIN StateNNP awareJJ thatWDT atIN theDT allDT partyNN meetingNN heldVBD lastJJ weekNN inIN theDT HouseNNP ofIN CommonsNNPS duringIN theDT teachersNNS 'POS lobbyNN ofIN ParliamentNNP theDT spokespersonsNNS ofIN allDT partiesNNS gotVBD aDT fairJJ hearingNN withIN theDT exceptionNN ofIN theDT ToryNNP partyNN spokespersonVBD theDT honNN MemberNNP forIN EdinburghNNP CentralNNP (( MrNNP FletcherNNP )) whoWP gotVBD suchPDT aDT beltingNN fromIN theDT teachersNNS thatWDT IPRP asIN theDT neutralJJ chairpersonNN hadVBD toTO comeVB toTO hisPRP$ rescueNN toTO allowVB himPRP toTO beVB heardVBN ,"root(ROOT-0, got-34) cop(aware-6, Is-1) det(Secretary-3, the-2) nsubj(aware-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) advcl(got-34, aware-6) mark(held-13, that-7) case(meeting-12, at-8) det(meeting-12, the-9) det(meeting-12, all-10) compound(meeting-12, party-11) nmod:at(held-13, meeting-12) ccomp(aware-6, held-13) amod(week-15, last-14) nmod:tmod(held-13, week-15) case(House-18, in-16) det(House-18, the-17) nmod:in(held-13, House-18) case(Commons-20, of-19) nmod:of(House-18, Commons-20) case(lobby-25, during-21) det(teachers-23, the-22) nmod:poss(lobby-25, teachers-23) case(teachers-23, '-24) nmod:during(held-13, lobby-25) case(Parliament-27, of-26) nmod:of(lobby-25, Parliament-27) punct(got-34, ,-28) det(spokespersons-30, the-29) nsubj(got-34, spokespersons-30) case(parties-33, of-31) det(parties-33, all-32) nmod:of(spokespersons-30, parties-33) det(hearing-37, a-35) amod(hearing-37, fair-36) dobj(got-34, hearing-37) punct(got-34, ,-38) case(exception-41, with-39) det(exception-41, the-40) nmod:with(got-34, exception-41) case(spokesperson-46, of-42) det(spokesperson-46, the-43) compound(spokesperson-46, Tory-44) compound(spokesperson-46, party-45) nmod:of(exception-41, spokesperson-46) punct(got-34, ,-47) det(Member-50, the-48) compound(Member-50, hon.-49) dobj(got-34, Member-50) case(Edinburgh-52, for-51) nmod:for(Member-50, Edinburgh-52) punct(Edinburgh-52, ,-53) appos(Edinburgh-52, Central-54) punct(Fletcher-57, -LRB--55) compound(Fletcher-57, Mr.-56) appos(Central-54, Fletcher-57) punct(Fletcher-57, -RRB--58) nsubj(got-60, who-59) acl:relcl(Central-54, got-60) det:predet(belting-63, such-61) det(belting-63, a-62) dobj(got-60, belting-63) case(teachers-66, from-64) det(teachers-66, the-65) nmod:from(belting-63, teachers-66) dobj(had-75, that-67) nsubj(had-75, I-68) punct(had-75, ,-69) case(chairperson-73, as-70) det(chairperson-73, the-71) amod(chairperson-73, neutral-72) nmod:as(had-75, chairperson-73) punct(had-75, ,-74) acl:relcl(teachers-66, had-75) mark(come-77, to-76) xcomp(had-75, come-77) case(rescue-80, to-78) nmod:poss(rescue-80, his-79) nmod:to(come-77, rescue-80) mark(allow-82, to-81) xcomp(come-77, allow-82) dobj(allow-82, him-83) mark(heard-86, to-84) auxpass(heard-86, be-85) xcomp(allow-82, heard-86) punct(got-34, ?-87)",1,0,0,"root(ROOT, got) cop(aware, Is) det(Secretary, the) nsbj(aware, Secretary) case(State, of) nmod:of(Secretary, State) advcl(got, aware) mark(held, that) case(meeting, at) det(meeting, the) det(meeting, all) compond(meeting, party) nmod:at(held, meeting) ccomp(aware, held) amod(week, last) nmod:tmod(held, week) case(Hose, in) det(Hose, the) nmod:in(held, Hose) case(Commons, of) nmod:of(Hose, Commons) case(lobby, dring) det(teachers, the) nmod:poss(lobby, teachers) ""case(teachers, )"", nmod:dring(held, lobby) case(Parliament, of) nmod:of(lobby, Parliament) pnct(got, ,) det(spokespersons, the) nsbj(got, spokespersons) case(parties, of) det(parties, all) nmod:of(spokespersons, parties) det(hearing, a) amod(hearing, fair) dobj(got, hearing) pnct(got, ,) case(exception, with) det(exception, the) nmod:with(got, exception) case(spokesperson, of) det(spokesperson, the) compond(spokesperson, Tory) compond(spokesperson, party) nmod:of(exception, spokesperson) pnct(got, ,) det(Member, the) compond(Member, hon.) dobj(got, Member) case(Edinbrgh, for) nmod:for(Member, Edinbrgh) pnct(Edinbrgh, ,) appos(Edinbrgh, Central) pnct(Fletcher, ) compond(Fletcher, Mr.) appos(Central, Fletcher) pnct(Fletcher, ) nsbj(got, who) acl:relcl(Central, got) det:predet(belting, sch) det(belting, a) dobj(got, belting) case(teachers, from) det(teachers, the) nmod:from(belting, teachers) dobj(had, that) nsbj(had, I) pnct(had, ,) case(chairperson, as) det(chairperson, the) amod(chairperson, netral) nmod:as(had, chairperson) pnct(had, ,) acl:relcl(teachers, had) mark(come, to) xcomp(had, come) case(resce, to) nmod:poss(resce, his) nmod:to(come, resce) mark(allow, to) xcomp(come, allow) dobj(allow, him) mark(heard, to) axpass(heard, be) xcomp(allow, heard) pnct(got, ?)","root(,VBD) cop(JJ,VBZ) det(NNP,DT) nsbj(JJ,NNP) case(NNP,IN) nmod:of(NNP,NNP) advcl(VBD,JJ) mark(VBD,WDT) case(NN,IN) det(NN,DT) det(NN,DT) compond(NN,NN) nmod:at(VBD,NN) ccomp(JJ,VBD) amod(NN,JJ) nmod:tmod(VBD,NN) case(NNP,IN) det(NNP,DT) nmod:in(VBD,NNP) case(NNPS,IN) nmod:of(NNP,NNPS) case(NN,IN) det(NNS,DT) nmod:poss(NN,NNS) case(NNS,POS) nmod:dring(VBD,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(VBD,VBD) det(NNS,DT) nsbj(VBD,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) pnct(VBD,VBD) case(NN,IN) det(NN,DT) nmod:with(VBD,NN) case(VBD,IN) det(VBD,DT) compond(VBD,NNP) compond(VBD,NN) nmod:of(NN,VBD) pnct(VBD,VBD) det(NNP,DT) compond(NNP,NNP) dobj(VBD,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,NNP) appos(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) nsbj(VBD,WP) acl:relcl(NNP,VBD) det:predet(NN,PDT) det(NN,DT) dobj(VBD,NN) case(NNS,IN) det(NNS,DT) nmod:from(NN,NNS) dobj(VBD,WDT) nsbj(VBD,PRP) pnct(VBD,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:as(VBD,NN) pnct(VBD,VBD) acl:relcl(NNS,VBD) mark(VB,TO) xcomp(VBD,VB) case(NN,TO) nmod:poss(NN,PRP$) nmod:to(VB,NN) mark(VB,TO) xcomp(VB,VB) dobj(VB,PRP) mark(VBN,TO) axpass(VBN,VB) xcomp(VB,VBN) pnct(VBD,VBD)","[Edinburgh, held, got, aware, spokespersons, State, exception, Member, Secretary, ROOT, hearing, spokesperson, Central]","[rescue, spokespersons, State, Member, ROOT, spokesperson, Edinburgh, held, aware, got, exception, his, Secretary, come, hearing, Central]",3,"[rescue, spokespersons, State, Member, ROOT, spokesperson, Edinburgh, held, aware, got, exception, his, Secretary, come, hearing, Central]","[Edinburgh, rescue, aware, spokespersons, exception, his, Member, Central, spokesperson, ROOT, come, hearing, got]",NN_rescue NNS_spokespersons NNP_State NNP_Member VBD_spokesperson NNP_Edinburgh VBN_held JJ_aware VBD_got NN_exception PRP$_his NNP_Secretary NN_come NN_hearing NNP_Central ,"[rescue, spokespersons, State, Member, ROOT, spokesperson, Edinburgh, held, aware, got, exception, his, Secretary, come, hearing, Central]","[rescue, spokespersons, State, Member, ROOT, spokesperson, Edinburgh, held, aware, got, exception, his, Secretary, come, hearing, Central]",NN_rescue NNS_spokespersons NNP_State NNP_Member VBD_spokesperson NNP_Edinburgh VBN_held JJ_aware VBD_got NN_exception PRP$_his NNP_Secretary NN_come NN_hearing NNP_Central ,"[rescue, spokespersons, State, Member, ROOT, spokesperson, Edinburgh, held, aware, got, exception, his, Secretary, come, hearing, Central]",NN_rescue NNS_spokespersons NNP_State NNP_Member VBD_spokesperson NNP_Edinburgh VBN_held JJ_aware VBD_got NN_exception PRP$_his NNP_Secretary NN_come NN_hearing NNP_Central ,"[rescue, spokespersons, State, Member, ROOT, spokesperson, Edinburgh, held, aware, got, exception, his, Secretary, come, hearing, Central]",NN_rescue NNS_spokespersons NNP_State NNP_Member VBD_spokesperson NNP_Edinburgh VBN_held JJ_aware VBD_got NN_exception PRP$_his NNP_Secretary NN_come NN_hearing NNP_Central ,1,2,2,0,0,0,0,0,0,0
Is that not indicative of how much the Tory party is isolated and completely out of touch with the opinion of teachers  parents and the general public in Scotland?,IsVBZ thatIN notRB indicativeVB ofIN howWRB muchJJ theDT ToryNNP partyNN isVBZ isolatedVBN andCC completelyRB outIN ofIN touchNN withIN theDT opinionNN ofIN teachersNNS parentsNNS andCC theDT generalJJ publicNN inIN ScotlandNNP ,"root(ROOT-0, Is-1) nsubj(Is-1, that-2) neg(indicative-4, not-3) dep(that-2, indicative-4) mark(isolated-12, of-5) advmod(much-7, how-6) advmod(isolated-12, much-7) det(party-10, the-8) compound(party-10, Tory-9) nsubjpass(isolated-12, party-10) auxpass(isolated-12, is-11) dep(indicative-4, isolated-12) cc(isolated-12, and-13) advmod(touch-17, completely-14) case(touch-17, out-15) mwe(out-15, of-16) dep(indicative-4, touch-17) conj:and(isolated-12, touch-17) case(opinion-20, with-18) det(opinion-20, the-19) nmod:with(touch-17, opinion-20) case(teachers-22, of-21) nmod:of(opinion-20, teachers-22) punct(teachers-22, ,-23) nmod:of(opinion-20, parents-24) conj:and(teachers-22, parents-24) cc(teachers-22, and-25) det(public-28, the-26) amod(public-28, general-27) nmod:of(opinion-20, public-28) conj:and(teachers-22, public-28) case(Scotland-30, in-29) nmod:in(public-28, Scotland-30) punct(Is-1, ?-31)",1,0,0,"root(ROOT, Is) nsbj(Is, that) neg(indicative, not) dep(that, indicative) mark(isolated, of) advmod(mch, how) advmod(isolated, mch) det(party, the) compond(party, Tory) nsbjpass(isolated, party) axpass(isolated, is) dep(indicative, isolated) cc(isolated, and) advmod(toch, completely) case(toch, ot) mwe(ot, of) dep(indicative, toch) conj:and(isolated, toch) case(opinion, with) det(opinion, the) nmod:with(toch, opinion) case(teachers, of) nmod:of(opinion, teachers) pnct(teachers, ,) nmod:of(opinion, parents) conj:and(teachers, parents) cc(teachers, and) det(pblic, the) amod(pblic, general) nmod:of(opinion, pblic) conj:and(teachers, pblic) case(Scotland, in) nmod:in(pblic, Scotland) pnct(Is, ?)","root(,VBZ) nsbj(VBZ,IN) neg(VB,RB) dep(IN,VB) mark(VBN,IN) advmod(JJ,WRB) advmod(VBN,JJ) det(NN,DT) compond(NN,NNP) nsbjpass(VBN,NN) axpass(VBN,VBZ) dep(VB,VBN) cc(VBN,CC) advmod(NN,RB) case(NN,IN) mwe(IN,IN) dep(VB,NN) conj:and(VBN,NN) case(NN,IN) det(NN,DT) nmod:with(NN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(NNS,NNS) nmod:of(NN,NNS) conj:and(NNS,NNS) cc(NNS,CC) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) conj:and(NNS,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(VBZ,VBZ)","[isolated, party]","[isolated, party]",7,"[isolated, party]","[isolated, party]",JJ_isolated NN_party ,"[isolated, party]","[isolated, party]",JJ_isolated NN_party ,"[isolated, party]",JJ_isolated NN_party ,"[isolated, party]",JJ_isolated NN_party ,1,2,2,2,1,2,2,2,2,2
Will the Secretary of State now face up to his responsibilities and set up an independent pay review to bring about an end to the damaging dispute  which has been dragging on for well over a year?,WillMD theDT SecretaryNNP ofIN StateNNP nowRB faceVBP upRP toTO hisPRP$ responsibilitiesNNS andCC setVB upRP anDT independentJJ payNN reviewNN toTO bringVB aboutRP anDT endNN toTO theDT damagingVBG disputeNN whichWDT hasVBZ beenVBN draggingVBG onIN forIN wellRB overIN aDT yearNN ,"root(ROOT-0, face-7) aux(face-7, Will-1) det(Secretary-3, the-2) nsubj(face-7, Secretary-3) nsubj(set-13, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) advmod(face-7, now-6) compound:prt(face-7, up-8) case(responsibilities-11, to-9) nmod:poss(responsibilities-11, his-10) nmod:to(face-7, responsibilities-11) cc(face-7, and-12) conj:and(face-7, set-13) compound:prt(set-13, up-14) det(review-18, an-15) amod(review-18, independent-16) compound(review-18, pay-17) dobj(set-13, review-18) mark(bring-20, to-19) acl(review-18, bring-20) compound:prt(bring-20, about-21) det(end-23, an-22) dobj(bring-20, end-23) case(dispute-27, to-24) det(dispute-27, the-25) amod(dispute-27, damaging-26) nmod:to(bring-20, dispute-27) punct(dispute-27, ,-28) nsubj(dragging-32, which-29) aux(dragging-32, has-30) aux(dragging-32, been-31) acl:relcl(dispute-27, dragging-32) case(well-35, on-33) case(well-35, for-34) nmod:for(dragging-32, well-35) case(year-38, over-36) det(year-38, a-37) nmod:over(dragging-32, year-38) punct(face-7, ?-39)",1,0,0,"root(ROOT, face) ax(face, Will) det(Secretary, the) nsbj(face, Secretary) nsbj(set, Secretary) case(State, of) nmod:of(Secretary, State) advmod(face, now) compond:prt(face, p) case(responsibilities, to) nmod:poss(responsibilities, his) nmod:to(face, responsibilities) cc(face, and) conj:and(face, set) compond:prt(set, p) det(review, an) amod(review, independent) compond(review, pay) dobj(set, review) mark(bring, to) acl(review, bring) compond:prt(bring, abot) det(end, an) dobj(bring, end) case(dispte, to) det(dispte, the) amod(dispte, damaging) nmod:to(bring, dispte) pnct(dispte, ,) nsbj(dragging, which) ax(dragging, has) ax(dragging, been) acl:relcl(dispte, dragging) case(well, on) case(well, for) nmod:for(dragging, well) case(year, over) det(year, a) nmod:over(dragging, year) pnct(face, ?)","root(,VBP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) nsbj(VB,NNP) case(NNP,IN) nmod:of(NNP,NNP) advmod(VBP,RB) compond:prt(VBP,RP) case(NNS,TO) nmod:poss(NNS,PRP$) nmod:to(VBP,NNS) cc(VBP,CC) conj:and(VBP,VB) compond:prt(VB,RP) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) mark(VB,TO) acl(NN,VB) compond:prt(VB,RP) det(NN,DT) dobj(VB,NN) case(NN,TO) det(NN,DT) amod(NN,VBG) nmod:to(VB,NN) pnct(NN,NN) nsbj(VBG,WDT) ax(VBG,VBZ) ax(VBG,VBN) acl:relcl(NN,VBG) case(RB,IN) case(RB,IN) nmod:for(VBG,RB) case(NN,IN) det(NN,DT) nmod:over(VBG,NN) pnct(VBP,VBP)","[and, State, review, responsibilities, face, set, ROOT, now, Secretary]","[and, State, review, responsibilities, his, face, set, ROOT, now, Secretary]",7,"[responsibilities, his, face]","[responsibilities, his, face]",CC_and NNP_State NN_review NNS_responsibilities PRP$_his VB_face VB_set RB_now NNP_Secretary ,"[and, State, review, responsibilities, his, face, set, ROOT, now, Secretary]","[and, State, review, responsibilities, his, face, set, ROOT, now, Secretary]",CC_and NNP_State NN_review NNS_responsibilities PRP$_his VB_face VB_set RB_now NNP_Secretary ,"[and, State, review, responsibilities, his, face, set, ROOT, now, Secretary]",CC_and NNP_State NN_review NNS_responsibilities PRP$_his VB_face VB_set RB_now NNP_Secretary ,"[and, State, review, responsibilities, his, face, set, ROOT, now, Secretary]",CC_and NNP_State NN_review NNS_responsibilities PRP$_his VB_face VB_set RB_now NNP_Secretary ,1,2,2,0,0,0,2,2,2,2
If I were the hon. Gentleman and had been in the chair at the meeting  I would be ashamed to admit that everyone had a fair hearing except my hon. Friend.,IfIN IPRP wereVBD theDT honNN GentlemanNNP andCC hadVBD beenVBN inIN theDT chairNN atIN theDT meetingNN IPRP wouldMD beVB ashamedVBN toTO admitVB thatIN everyoneNN hadVBD aDT fairJJ hearingNN exceptIN myPRP$ honNN FriendNN ,"root(ROOT-0, ashamed-20) mark(Gentleman-6, If-1) nsubj(Gentleman-6, I-2) cop(Gentleman-6, were-3) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) advcl(ashamed-20, Gentleman-6) cc(Gentleman-6, and-7) aux(chair-12, had-8) cop(chair-12, been-9) case(chair-12, in-10) det(chair-12, the-11) conj:and(Gentleman-6, chair-12) advcl(ashamed-20, chair-12) case(meeting-15, at-13) det(meeting-15, the-14) nmod:at(chair-12, meeting-15) punct(ashamed-20, ,-16) nsubj(ashamed-20, I-17) aux(ashamed-20, would-18) cop(ashamed-20, be-19) mark(admit-22, to-21) xcomp(ashamed-20, admit-22) mark(had-25, that-23) nsubj(had-25, everyone-24) ccomp(admit-22, had-25) det(hearing-28, a-26) amod(hearing-28, fair-27) dobj(had-25, hearing-28) case(Friend-32, except-29) nmod:poss(Friend-32, my-30) compound(Friend-32, hon.-31) nmod:except(had-25, Friend-32) punct(ashamed-20, .-33)",1,0,0,"root(ROOT, ashamed) mark(Gentleman, If) nsbj(Gentleman, I) cop(Gentleman, were) det(Gentleman, the) compond(Gentleman, hon.) advcl(ashamed, Gentleman) cc(Gentleman, and) ax(chair, had) cop(chair, been) case(chair, in) det(chair, the) conj:and(Gentleman, chair) advcl(ashamed, chair) case(meeting, at) det(meeting, the) nmod:at(chair, meeting) pnct(ashamed, ,) nsbj(ashamed, I) ax(ashamed, wold) cop(ashamed, be) mark(admit, to) xcomp(ashamed, admit) mark(had, that) nsbj(had, everyone) ccomp(admit, had) det(hearing, a) amod(hearing, fair) dobj(had, hearing) case(Friend, except) nmod:poss(Friend, my) compond(Friend, hon.) nmod:except(had, Friend) pnct(ashamed, .)","root(,VBN) mark(NNP,IN) nsbj(NNP,PRP) cop(NNP,VBD) det(NNP,DT) compond(NNP,NNP) advcl(VBN,NNP) cc(NNP,CC) ax(NN,VBD) cop(NN,VBN) case(NN,IN) det(NN,DT) conj:and(NNP,NN) advcl(VBN,NN) case(NN,IN) det(NN,DT) nmod:at(NN,NN) pnct(VBN,VBN) nsbj(VBN,PRP) ax(VBN,MD) cop(VBN,VB) mark(VB,TO) xcomp(VBN,VB) mark(VBD,IN) nsbj(VBD,NN) ccomp(VB,VBD) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NN,IN) nmod:poss(NN,PRP$) compond(NN,NN) nmod:except(VBD,NN) pnct(VBN,VBN)","[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]","[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]",7,"[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]","[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]",VBN_ashamed NN_admit VBN_had PRP_I NNP_Friend NN_meeting PRP_I NN_hearing PRP$_my NN_chair NNP_Gentleman NN_everyone CC_and ,"[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]","[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]",VBN_ashamed NN_admit VBN_had PRP_I NNP_Friend NN_meeting PRP_I NN_hearing PRP$_my NN_chair NNP_Gentleman NN_everyone CC_and ,"[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]",VBN_ashamed NN_admit VBN_had PRP_I NNP_Friend NN_meeting PRP_I NN_hearing PRP$_my NN_chair NNP_Gentleman NN_everyone CC_and ,"[ashamed, admit, had, I, ROOT, Friend, meeting, I, hearing, my, chair, Gentleman, everyone, and]",VBN_ashamed NN_admit VBN_had PRP_I NNP_Friend NN_meeting PRP_I NN_hearing PRP$_my NN_chair NNP_Gentleman NN_everyone CC_and ,1,2,2,2,1,2,2,2,2,2
As chairman  the hon. Gentleman had an obligation to ensure that my hon. Friend had better treatment than that.,AsIN chairmanNN theDT honNN GentlemanNNP hadVBD anDT obligationNN toTO ensureVB thatIN myPRP$ honNN FriendNNP hadVBD betterRBR treatmentNN thanIN thatDT ,"root(ROOT-0, had-7) case(chairman-2, As-1) nmod:as(had-7, chairman-2) punct(had-7, ,-3) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) nsubj(had-7, Gentleman-6) det(obligation-9, an-8) dobj(had-7, obligation-9) mark(ensure-11, to-10) acl(obligation-9, ensure-11) mark(had-16, that-12) nmod:poss(Friend-15, my-13) compound(Friend-15, hon.-14) nsubj(had-16, Friend-15) ccomp(ensure-11, had-16) amod(treatment-18, better-17) dobj(had-16, treatment-18) case(that-20, than-19) nmod:than(treatment-18, that-20) punct(had-7, .-21)",1,0,0,"root(ROOT, had) case(chairman, As) nmod:as(had, chairman) pnct(had, ,) det(Gentleman, the) compond(Gentleman, hon.) nsbj(had, Gentleman) det(obligation, an) dobj(had, obligation) mark(ensre, to) acl(obligation, ensre) mark(had, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(had, Friend) ccomp(ensre, had) amod(treatment, better) dobj(had, treatment) case(that, than) nmod:than(treatment, that) pnct(had, .)","root(,VBD) case(NN,IN) nmod:as(VBD,NN) pnct(VBD,VBD) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) det(NN,DT) dobj(VBD,NN) mark(VB,TO) acl(NN,VB) mark(VBD,DT) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBD,NNP) ccomp(VB,VBD) amod(NN,RBR) dobj(VBD,NN) case(DT,IN) nmod:than(NN,DT) pnct(VBD,VBD)","[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]","[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]",8,"[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]","[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]",NN_obligation VBN_had NNP_Friend PRP$_my VBN_had NN_chairman VB_ensure NN_treatment NNP_Gentleman ,"[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]","[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]",NN_obligation VBN_had NNP_Friend PRP$_my VBN_had NN_chairman VB_ensure NN_treatment NNP_Gentleman ,"[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]",NN_obligation VBN_had NNP_Friend PRP$_my VBN_had NN_chairman VB_ensure NN_treatment NNP_Gentleman ,"[obligation, had, Friend, my, had, chairman, ensure, ROOT, treatment, Gentleman]",NN_obligation VBN_had NNP_Friend PRP$_my VBN_had NN_chairman VB_ensure NN_treatment NNP_Gentleman ,1,2,1,0,0,0,0,0,0,0
I hope that the hon. Gentleman will have told his former colleagues in teaching and his constituents who are in teaching to look very hard at the offer made to them.,IPRP hopeVBP thatIN theDT honNN GentlemanNNP willMD haveVB toldVBN hisPRP$ formerJJ colleaguesNNS inIN teachingVBG andCC hisPRP$ constituentsNNS whoWP areVBP inIN teachingVBG toTO lookVB veryRB hardRB atIN theDT offerNN madeVBD toTO themPRP ,"root(ROOT-0, hope-2) nsubj(hope-2, I-1) mark(told-9, that-3) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) nsubj(told-9, Gentleman-6) aux(told-9, will-7) aux(told-9, have-8) ccomp(hope-2, told-9) nmod:poss(colleagues-12, his-10) amod(colleagues-12, former-11) dobj(told-9, colleagues-12) case(teaching-14, in-13) nmod:in(told-9, teaching-14) cc(teaching-14, and-15) nmod:poss(constituents-17, his-16) nmod:in(told-9, constituents-17) conj:and(teaching-14, constituents-17) nsubj(teaching-21, who-18) cop(teaching-21, are-19) case(teaching-21, in-20) acl:relcl(teaching-14, teaching-21) mark(look-23, to-22) acl(teaching-21, look-23) advmod(hard-25, very-24) advmod(look-23, hard-25) case(offer-28, at-26) det(offer-28, the-27) nmod:at(look-23, offer-28) acl(offer-28, made-29) case(them-31, to-30) nmod:to(made-29, them-31) punct(hope-2, .-32)",1,0,0,"root(ROOT, hope) nsbj(hope, I) mark(told, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(told, Gentleman) ax(told, will) ax(told, have) ccomp(hope, told) nmod:poss(colleages, his) amod(colleages, former) dobj(told, colleages) case(teaching, in) nmod:in(told, teaching) cc(teaching, and) nmod:poss(constitents, his) nmod:in(told, constitents) conj:and(teaching, constitents) nsbj(teaching, who) cop(teaching, are) case(teaching, in) acl:relcl(teaching, teaching) mark(look, to) acl(teaching, look) advmod(hard, very) advmod(look, hard) case(offer, at) det(offer, the) nmod:at(look, offer) acl(offer, made) case(them, to) nmod:to(made, them) pnct(hope, .)","root(,VBP) nsbj(VBP,PRP) mark(VBN,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,MD) ax(VBN,VB) ccomp(VBP,VBN) nmod:poss(NNS,PRP$) amod(NNS,JJ) dobj(VBN,NNS) case(VBG,IN) nmod:in(VBN,VBG) cc(VBG,CC) nmod:poss(NNS,PRP$) nmod:in(VBN,NNS) conj:and(VBG,NNS) nsbj(VBG,WP) cop(VBG,VBP) case(VBG,IN) acl:relcl(VBG,VBG) mark(VB,TO) acl(VBG,VB) advmod(RB,RB) advmod(VB,RB) case(NN,IN) det(NN,DT) nmod:at(VB,NN) acl(NN,VBD) case(PRP,TO) nmod:to(VBD,PRP) pnct(VBP,VBP)","[Gentleman, colleagues, told, hope, teaching, constituents]","[told, constituents, his, his, colleagues, former, Gentleman, hope, teaching]",8,"[his, his, colleagues, former, told, constituents]","[his, his, colleagues, former, told, constituents]",VBN_told NNS_constituents PRP$_his PRP$_his NNS_colleagues JJ_former NNP_Gentleman VBP_hope VBG_teaching ,"[told, constituents, his, his, colleagues, former, Gentleman, hope, teaching]","[told, constituents, his, his, colleagues, former, Gentleman, hope, teaching]",VBN_told NNS_constituents PRP$_his PRP$_his NNS_colleagues JJ_former NNP_Gentleman VBP_hope VBG_teaching ,"[told, constituents, his, his, colleagues, former, Gentleman, hope, teaching]",VBN_told NNS_constituents PRP$_his PRP$_his NNS_colleagues JJ_former NNP_Gentleman VBP_hope VBG_teaching ,"[told, constituents, his, his, colleagues, former, Gentleman, hope, teaching]",VBN_told NNS_constituents PRP$_his PRP$_his NNS_colleagues JJ_former NNP_Gentleman VBP_hope VBG_teaching ,1,2,2,0,0,0,0,0,0,0
My hon. Friend is correct.,MyPRP$ honNN FriendNNP isVBZ correctJJ ,"root(ROOT-0, correct-5) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(correct-5, Friend-3) cop(correct-5, is-4) punct(correct-5, .-6)",1,1,0,"root(ROOT, correct) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(correct, Friend) cop(correct, is) pnct(correct, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) pnct(JJ,JJ)","[My, ROOT, Friend, correct]","[My, ROOT, Friend, correct]",8,"[My, ROOT, Friend, correct]",[ ],PRP$_My NNP_Friend JJ_correct ,"[My, ROOT, Friend, correct]","[My, ROOT, Friend, correct]",PRP$_My NNP_Friend JJ_correct ,"[My, ROOT, Friend, correct]",PRP$_My NNP_Friend JJ_correct ,"[My, ROOT, Friend, correct]",PRP$_My NNP_Friend JJ_correct ,1,1,1,1,1,1,1,1,1,1
Will the Secretary of State acknowledge that there is real concern in Scotland among parents and teachers that he is no longer able to maintain an adequate education system?,WillMD theDT SecretaryNNP ofIN StateNNP acknowledgeVBP thatIN thereEX isVBZ realJJ concernNN inIN ScotlandNNP amongIN parentsNNS andCC teachersNNS thatIN hePRP isVBZ noRB longerRBR ableJJ toTO maintainVB anDT adequateJJ educationNN systemNN ,"root(ROOT-0, acknowledge-6) aux(acknowledge-6, Will-1) det(Secretary-3, the-2) nsubj(acknowledge-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(is-9, that-7) expl(is-9, there-8) ccomp(acknowledge-6, is-9) amod(concern-11, real-10) nsubj(is-9, concern-11) case(Scotland-13, in-12) nmod:in(concern-11, Scotland-13) case(parents-15, among-14) nmod:among(concern-11, parents-15) cc(parents-15, and-16) nmod:among(concern-11, teachers-17) conj:and(parents-15, teachers-17) mark(able-23, that-18) nsubj(able-23, he-19) cop(able-23, is-20) neg(longer-22, no-21) advmod(able-23, longer-22) ccomp(is-9, able-23) mark(maintain-25, to-24) xcomp(able-23, maintain-25) det(system-29, an-26) amod(system-29, adequate-27) compound(system-29, education-28) dobj(maintain-25, system-29) punct(acknowledge-6, ?-30)",1,1,0,"root(ROOT, acknowledge) ax(acknowledge, Will) det(Secretary, the) nsbj(acknowledge, Secretary) case(State, of) nmod:of(Secretary, State) mark(is, that) expl(is, there) ccomp(acknowledge, is) amod(concern, real) nsbj(is, concern) case(Scotland, in) nmod:in(concern, Scotland) case(parents, among) nmod:among(concern, parents) cc(parents, and) nmod:among(concern, teachers) conj:and(parents, teachers) mark(able, that) nsbj(able, he) cop(able, is) neg(longer, no) advmod(able, longer) ccomp(is, able) mark(maintain, to) xcomp(able, maintain) det(system, an) amod(system, adeqate) compond(system, edcation) dobj(maintain, system) pnct(acknowledge, ?)","root(,VBP) ax(VBP,MD) det(NNP,DT) nsbj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBP,VBZ) amod(NN,JJ) nsbj(VBZ,NN) case(NNP,IN) nmod:in(NN,NNP) case(NNS,IN) nmod:among(NN,NNS) cc(NNS,CC) nmod:among(NN,NNS) conj:and(NNS,NNS) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBZ) neg(RBR,RB) advmod(JJ,RBR) ccomp(VBZ,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) amod(NN,JJ) compond(NN,NN) dobj(VB,NN) pnct(VBP,VBP)","[acknowledge, he, is, longer, State, maintain, able, Secretary, ROOT]","[acknowledge, he, is, longer, State, maintain, able, Secretary, ROOT]",10,"[he, is, able, maintain, longer]",[ ],VBP_acknowledge PRP_he VBZ_is JJR_longer NNP_State VB_maintain JJ_able NNP_Secretary ,"[acknowledge, he, is, longer, State, maintain, able, Secretary, ROOT]","[acknowledge, he, is, longer, State, maintain, able, Secretary, ROOT]",VBP_acknowledge PRP_he VBZ_is JJR_longer NNP_State VB_maintain JJ_able NNP_Secretary ,"[acknowledge, he, is, longer, State, maintain, able, Secretary, ROOT]",VBP_acknowledge PRP_he VBZ_is JJR_longer NNP_State VB_maintain JJ_able NNP_Secretary ,"[acknowledge, he, is, longer, State, maintain, able, Secretary, ROOT]",VBP_acknowledge PRP_he VBZ_is JJR_longer NNP_State VB_maintain JJ_able NNP_Secretary ,2,2,2,0,0,0,2,2,2,2
There is particular concern that he will not be able to ensure that there is proper provision for pupils not only to take examinations but to be fairly assessed and marked.,ThereEX isVBZ particularJJ concernNN thatIN hePRP willMD notRB beVB ableJJ toTO ensureVB thatIN thereEX isVBZ properJJ provisionNN forIN pupilsNNS notRB onlyRB toTO takeVB examinationsNNS butCC toTO beVB fairlyRB assessedVBN andCC markedVBN ,"root(ROOT-0, is-2) expl(is-2, There-1) amod(concern-4, particular-3) nsubj(is-2, concern-4) mark(able-10, that-5) nsubj(able-10, he-6) aux(able-10, will-7) neg(able-10, not-8) cop(able-10, be-9) ccomp(concern-4, able-10) mark(ensure-12, to-11) xcomp(able-10, ensure-12) mark(is-15, that-13) expl(is-15, there-14) ccomp(ensure-12, is-15) amod(provision-17, proper-16) nsubj(is-15, provision-17) case(pupils-19, for-18) nmod:for(provision-17, pupils-19) neg(only-21, not-20) advmod(provision-17, only-21) mark(take-23, to-22) dep(only-21, take-23) dobj(take-23, examinations-24) cc(take-23, but-25) mark(assessed-29, to-26) auxpass(assessed-29, be-27) advmod(assessed-29, fairly-28) dep(only-21, assessed-29) conj:but(take-23, assessed-29) cc(assessed-29, and-30) conj:but(take-23, marked-31) conj:and(assessed-29, marked-31) punct(is-2, .-32)",1,0,0,"root(ROOT, is) expl(is, There) amod(concern, particlar) nsbj(is, concern) mark(able, that) nsbj(able, he) ax(able, will) neg(able, not) cop(able, be) ccomp(concern, able) mark(ensre, to) xcomp(able, ensre) mark(is, that) expl(is, there) ccomp(ensre, is) amod(provision, proper) nsbj(is, provision) case(ppils, for) nmod:for(provision, ppils) neg(only, not) advmod(provision, only) mark(take, to) dep(only, take) dobj(take, examinations) cc(take, bt) mark(assessed, to) axpass(assessed, be) advmod(assessed, fairly) dep(only, assessed) conj:bt(take, assessed) cc(assessed, and) conj:bt(take, marked) conj:and(assessed, marked) pnct(is, .)","root(,VBZ) expl(VBZ,EX) amod(NN,JJ) nsbj(VBZ,NN) mark(JJ,IN) nsbj(JJ,PRP) ax(JJ,MD) neg(JJ,RB) cop(JJ,VB) ccomp(NN,JJ) mark(VB,TO) xcomp(JJ,VB) mark(VBZ,IN) expl(VBZ,EX) ccomp(VB,VBZ) amod(NN,JJ) nsbj(VBZ,NN) case(NNS,IN) nmod:for(NN,NNS) neg(RB,RB) advmod(NN,RB) mark(VB,TO) dep(RB,VB) dobj(VB,NNS) cc(VB,CC) mark(VBN,TO) axpass(VBN,VB) advmod(VBN,RB) dep(RB,VBN) conj:bt(VB,VBN) cc(VBN,CC) conj:bt(VB,VBN) conj:and(VBN,VBN) pnct(VBZ,VBZ)","[not, concern, ensure, he, able]","[not, concern, ensure, he, able]",11,[ ],[ ],RB_not NN_concern VB_ensure PRP_he JJ_able ,"[not, concern, ensure, he, able]","[not, concern, ensure, he, able]",RB_not NN_concern VB_ensure PRP_he JJ_able ,"[not, concern, ensure, he, able]",RB_not NN_concern VB_ensure PRP_he JJ_able ,"[not, concern, ensure, he, able]",RB_not NN_concern VB_ensure PRP_he JJ_able ,2,2,2,2,1,2,2,2,2,2
Will he acknowledge that the statement he has just made and the one that he made last week at the Scottish Council are a misrepresentation of the Government's position  and that the offer he has mentioned would not even guarantee teachers a cost of living increase for the next four years?,WillMD hePRP acknowledgeVB thatIN theDT statementNN hePRP hasVBZ justRB madeVBN andCC theDT oneNN thatWDT hePRP madeVBD lastJJ weekNN atIN theDT ScottishJJ CouncilNNP areVBP aDT misrepresentationNN ofIN theDT GovernmentNNP 'sPOS positionNN andCC thatIN theDT offerNN hePRP hasVBZ mentionedVBN wouldMD notRB evenRB guaranteeNN teachersNNS aDT costNN ofIN livingVBG increaseNN forIN theDT nextJJ fourCD yearsNNS ,"root(ROOT-0, acknowledge-3) aux(acknowledge-3, Will-1) nsubj(acknowledge-3, he-2) dobj(acknowledge-3, that-4) det(statement-6, the-5) dep(that-4, statement-6) nsubj(made-10, he-7) aux(made-10, has-8) advmod(made-10, just-9) acl:relcl(statement-6, made-10) cc(made-10, and-11) det(one-13, the-12) nsubj(misrepresentation-25, one-13) dobj(made-16, that-14) nsubj(made-16, he-15) acl:relcl(one-13, made-16) amod(week-18, last-17) nmod:tmod(made-16, week-18) case(Council-22, at-19) det(Council-22, the-20) compound(Council-22, Scottish-21) nmod:at(made-16, Council-22) cop(misrepresentation-25, are-23) det(misrepresentation-25, a-24) acl:relcl(statement-6, misrepresentation-25) conj:and(made-10, misrepresentation-25) case(position-30, of-26) det(Government-28, the-27) nmod:poss(position-30, Government-28) case(Government-28, 's-29) nmod:of(misrepresentation-25, position-30) punct(statement-6, ,-31) cc(statement-6, and-32) mark(guarantee-42, that-33) det(offer-35, the-34) nsubj(guarantee-42, offer-35) nsubj(mentioned-38, he-36) aux(mentioned-38, has-37) acl:relcl(offer-35, mentioned-38) aux(guarantee-42, would-39) neg(guarantee-42, not-40) advmod(guarantee-42, even-41) dep(that-4, guarantee-42) conj:and(statement-6, guarantee-42) dobj(guarantee-42, teachers-43) det(cost-45, a-44) dobj(teachers-43, cost-45) case(increase-48, of-46) amod(increase-48, living-47) nmod:of(cost-45, increase-48) case(years-53, for-49) det(years-53, the-50) amod(years-53, next-51) nummod(years-53, four-52) nmod:for(cost-45, years-53) punct(acknowledge-3, ?-54)",1,0,0,"root(ROOT, acknowledge) ax(acknowledge, Will) nsbj(acknowledge, he) dobj(acknowledge, that) det(statement, the) dep(that, statement) nsbj(made, he) ax(made, has) advmod(made, jst) acl:relcl(statement, made) cc(made, and) det(one, the) nsbj(misrepresentation, one) dobj(made, that) nsbj(made, he) acl:relcl(one, made) amod(week, last) nmod:tmod(made, week) case(Concil, at) det(Concil, the) compond(Concil, Scottish) nmod:at(made, Concil) cop(misrepresentation, are) det(misrepresentation, a) acl:relcl(statement, misrepresentation) conj:and(made, misrepresentation) case(position, of) det(Government, the) nmod:poss(position, Government) ""case(Government, s)"", nmod:of(misrepresentation, position) pnct(statement, ,) cc(statement, and) mark(garantee, that) det(offer, the) nsbj(garantee, offer) nsbj(mentioned, he) ax(mentioned, has) acl:relcl(offer, mentioned) ax(garantee, wold) neg(garantee, not) advmod(garantee, even) dep(that, garantee) conj:and(statement, garantee) dobj(garantee, teachers) det(cost, a) dobj(teachers, cost) case(increase, of) amod(increase, living) nmod:of(cost, increase) case(years, for) det(years, the) amod(years, next) nmmod(years, for) nmod:for(cost, years) pnct(acknowledge, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) dobj(VB,IN) det(NN,DT) dep(IN,NN) nsbj(VBD,PRP) ax(VBD,VBZ) advmod(VBD,RB) acl:relcl(NN,VBD) cc(VBD,CC) det(NN,DT) nsbj(NN,NN) dobj(VBD,IN) nsbj(VBD,PRP) acl:relcl(NN,VBD) amod(NN,JJ) nmod:tmod(VBD,NN) case(NNP,IN) det(NNP,DT) compond(NNP,JJ) nmod:at(VBD,NNP) cop(NN,VBP) det(NN,DT) acl:relcl(NN,NN) conj:and(VBD,NN) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) pnct(NN,NN) cc(NN,CC) mark(NN,IN) det(NN,DT) nsbj(NN,NN) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NN,VBN) ax(NN,MD) neg(NN,RB) advmod(NN,RB) dep(IN,NN) conj:and(NN,NN) dobj(NN,NNS) det(NN,DT) dobj(NNS,NN) case(NN,IN) amod(NN,VBG) nmod:of(NN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:for(NN,NNS) pnct(VB,VB)","[Council, acknowledge, week, position, one, statement, mentioned, Government, he, he, made, made, he, that, and, that, misrepresentation, offer, he, ROOT, just]","[Council, acknowledge, week, position, one, statement, mentioned, Government, he, he, made, made, he, that, and, that, misrepresentation, offer, he, ROOT, just]",11,"[Council, position, that, misrepresentation, week, one, he, Government, made]","[Council, position, that, misrepresentation, week, one, he, Government, made]",NNP_Council VBP_acknowledge NN_week NN_position CD_one NN_statement VBD_mentioned NNP_Government PRP_he PRP_he VBN_made VBN_made PRP_he IN_that CC_and IN_that NN_misrepresentation VB_offer PRP_he RB_just ,"[Council, acknowledge, week, position, one, statement, mentioned, Government, he, he, made, made, he, that, and, that, misrepresentation, offer, he, ROOT, just]","[Council, acknowledge, week, position, one, statement, mentioned, Government, he, he, made, made, he, that, and, that, misrepresentation, offer, he, ROOT, just]",NNP_Council VBP_acknowledge NN_week NN_position CD_one NN_statement VBD_mentioned NNP_Government PRP_he PRP_he VBN_made VBN_made PRP_he IN_that CC_and IN_that NN_misrepresentation VB_offer PRP_he RB_just ,"[Council, acknowledge, week, position, one, statement, mentioned, Government, he, he, made, made, he, that, and, that, misrepresentation, offer, he, ROOT, just]",NNP_Council VBP_acknowledge NN_week NN_position CD_one NN_statement VBD_mentioned NNP_Government PRP_he PRP_he VBN_made VBN_made PRP_he IN_that CC_and IN_that NN_misrepresentation VB_offer PRP_he RB_just ,"[Council, acknowledge, week, position, one, statement, mentioned, Government, he, he, made, made, he, that, and, that, misrepresentation, offer, he, ROOT, just]",NNP_Council VBP_acknowledge NN_week NN_position CD_one NN_statement VBD_mentioned NNP_Government PRP_he PRP_he VBN_made VBN_made PRP_he IN_that CC_and IN_that NN_misrepresentation VB_offer PRP_he RB_just ,1,2,2,2,1,2,2,2,2,2
If the hon. Gentleman  as a Member of Parliament with every access to information  thinks that that is a proper description of the offer  we are indeed in a bad position.,IfIN theDT honNN GentlemanNNP asIN aDT MemberNNP ofIN ParliamentNNP withIN everyDT accessNN toTO informationNN thinksNNS thatIN thatDT isVBZ aDT properJJ descriptionNN ofIN theDT offerNN wePRP areVBP indeedRB inIN aDT badJJ positionNN ,"root(ROOT-0, position-34) mark(thinks-17, If-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(thinks-17, Gentleman-4) punct(thinks-17, ,-5) case(Member-8, as-6) det(Member-8, a-7) nmod:as(thinks-17, Member-8) case(Parliament-10, of-9) nmod:of(Member-8, Parliament-10) case(access-13, with-11) det(access-13, every-12) nmod:with(Member-8, access-13) case(information-15, to-14) nmod:to(access-13, information-15) punct(thinks-17, ,-16) advcl(position-34, thinks-17) mark(description-23, that-18) nsubj(description-23, that-19) cop(description-23, is-20) det(description-23, a-21) amod(description-23, proper-22) ccomp(thinks-17, description-23) case(offer-26, of-24) det(offer-26, the-25) nmod:of(description-23, offer-26) punct(position-34, ,-27) nsubj(position-34, we-28) cop(position-34, are-29) advmod(position-34, indeed-30) case(position-34, in-31) det(position-34, a-32) amod(position-34, bad-33) punct(position-34, .-35)",1,0,0,"root(ROOT, position) mark(thinks, If) det(Gentleman, the) compond(Gentleman, hon.) nsbj(thinks, Gentleman) pnct(thinks, ,) case(Member, as) det(Member, a) nmod:as(thinks, Member) case(Parliament, of) nmod:of(Member, Parliament) case(access, with) det(access, every) nmod:with(Member, access) case(information, to) nmod:to(access, information) pnct(thinks, ,) advcl(position, thinks) mark(description, that) nsbj(description, that) cop(description, is) det(description, a) amod(description, proper) ccomp(thinks, description) case(offer, of) det(offer, the) nmod:of(description, offer) pnct(position, ,) nsbj(position, we) cop(position, are) advmod(position, indeed) case(position, in) det(position, a) amod(position, bad) pnct(position, .)","root(,NN) mark(NNS,IN) det(NNP,DT) compond(NNP,NNP) nsbj(NNS,NNP) pnct(NNS,NNS) case(NNP,IN) det(NNP,DT) nmod:as(NNS,NNP) case(NNP,IN) nmod:of(NNP,NNP) case(NN,IN) det(NN,DT) nmod:with(NNP,NN) case(NN,TO) nmod:to(NN,NN) pnct(NNS,NNS) advcl(NN,NNS) mark(NN,DT) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(NNS,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(NN,NN) nsbj(NN,PRP) cop(NN,VBP) advmod(NN,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) pnct(NN,NN)","[information, position, description, access, thinks, Gentleman, Parliament, Member]","[information, position, description, access, thinks, Gentleman, Parliament, Member]",11,"[information, position, description, access, thinks, Gentleman, Parliament, Member]","[information, position, description, access, thinks, Gentleman, Parliament, Member]",NN_information NN_position NN_description NN_access NNS_thinks NNP_Gentleman NNP_Parliament NNP_Member ,"[information, position, description, access, thinks, Gentleman, Parliament, Member]","[information, position, description, access, thinks, Gentleman, Parliament, Member]",NN_information NN_position NN_description NN_access NNS_thinks NNP_Gentleman NNP_Parliament NNP_Member ,"[information, position, description, access, thinks, Gentleman, Parliament, Member]",NN_information NN_position NN_description NN_access NNS_thinks NNP_Gentleman NNP_Parliament NNP_Member ,"[information, position, description, access, thinks, Gentleman, Parliament, Member]",NN_information NN_position NN_description NN_access NNS_thinks NNP_Gentleman NNP_Parliament NNP_Member ,1,2,1,0,0,0,0,0,0,0
The hon. Gentleman's description of it is totally incorrect.,TheDT honNN GentlemanNNP 'sPOS descriptionNN ofIN itPRP isVBZ totallyRB incorrectJJ ,"root(ROOT-0, incorrect-10) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nmod:poss(description-5, Gentleman-3) case(Gentleman-3, 's-4) nsubj(incorrect-10, description-5) case(it-7, of-6) nmod:of(description-5, it-7) cop(incorrect-10, is-8) advmod(incorrect-10, totally-9) punct(incorrect-10, .-11)",1,0,0,"root(ROOT, incorrect) det(Gentleman, The) compond(Gentleman, hon.) nmod:poss(description, Gentleman) ""case(Gentleman, s)"", nsbj(incorrect, description) case(it, of) nmod:of(description, it) cop(incorrect, is) advmod(incorrect, totally) pnct(incorrect, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nsbj(JJ,NN) case(PRP,IN) nmod:of(NN,PRP) cop(JJ,VBZ) advmod(JJ,RB) pnct(JJ,JJ)","[it, description, Gentleman, incorrect]","[it, description, Gentleman, incorrect]",12,"[it, description, Gentleman, incorrect]","[it, description, Gentleman, incorrect]",PRP_it NN_description NNP_Gentleman JJ_incorrect ,"[it, description, Gentleman, incorrect]","[it, description, Gentleman, incorrect]",PRP_it NN_description NNP_Gentleman JJ_incorrect ,"[it, description, Gentleman, incorrect]",PRP_it NN_description NNP_Gentleman JJ_incorrect ,"[it, description, Gentleman, incorrect]",PRP_it NN_description NNP_Gentleman JJ_incorrect ,1,2,2,2,1,2,2,2,2,2
That has no relation whatever to the description given by the hon. Gentleman.,ThatDT hasVBZ noDT relationNN whateverWDT toTO theDT descriptionNN givenVBN byIN theDT honNN GentlemanNNP ,"root(ROOT-0, has-2) nsubj(has-2, That-1) neg(relation-4, no-3) dobj(has-2, relation-4) dep(relation-4, whatever-5) case(description-8, to-6) det(description-8, the-7) nmod:to(whatever-5, description-8) acl(description-8, given-9) case(Gentleman-13, by-10) det(Gentleman-13, the-11) compound(Gentleman-13, hon.-12) nmod:by(given-9, Gentleman-13) punct(has-2, .-14)",1,0,1,"root(ROOT, has) nsbj(has, That) neg(relation, no) dobj(has, relation) dep(relation, whatever) case(description, to) det(description, the) nmod:to(whatever, description) acl(description, given) case(Gentleman, by) det(Gentleman, the) compond(Gentleman, hon.) nmod:by(given, Gentleman) pnct(has, .)","root(,VBZ) nsbj(VBZ,DT) neg(NN,DT) dobj(VBZ,NN) dep(NN,WDT) case(NN,TO) det(NN,DT) nmod:to(WDT,NN) acl(NN,VBN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:by(VBN,NNP) pnct(VBZ,VBZ)","[description, Gentleman, given]","[description, Gentleman, given]",12,"[description, Gentleman, given]","[description, Gentleman, given]",NN_description NNP_Gentleman VBN_given ,"[description, Gentleman, given]","[description, Gentleman, given]",NN_description NNP_Gentleman VBN_given ,"[description, Gentleman, given]",NN_description NNP_Gentleman VBN_given ,"[description, Gentleman, given]",NN_description NNP_Gentleman VBN_given ,1,2,2,0,0,0,0,0,0,0
When will the Government recognise the determination of the teachers in the campaign and come forward with a new initiative to settle the dispute?,WhenWRB willMD theDT GovernmentNNP recogniseVB theDT determinationNN ofIN theDT teachersNNS inIN theDT campaignNN andCC comeVB forwardRB withIN aDT newJJ initiativeNN toTO settleVB theDT disputeNN ,"root(ROOT-0, recognise-5) advmod(recognise-5, When-1) aux(recognise-5, will-2) det(Government-4, the-3) nsubj(recognise-5, Government-4) nsubj(come-15, Government-4) det(determination-7, the-6) dobj(recognise-5, determination-7) case(teachers-10, of-8) det(teachers-10, the-9) nmod:of(determination-7, teachers-10) case(campaign-13, in-11) det(campaign-13, the-12) nmod:in(determination-7, campaign-13) cc(recognise-5, and-14) conj:and(recognise-5, come-15) advmod(come-15, forward-16) case(initiative-20, with-17) det(initiative-20, a-18) amod(initiative-20, new-19) nmod:with(come-15, initiative-20) mark(settle-22, to-21) acl(initiative-20, settle-22) det(dispute-24, the-23) dobj(settle-22, dispute-24) punct(recognise-5, ?-25)",0,0,1,"root(ROOT, recognise) advmod(recognise, When) ax(recognise, will) det(Government, the) nsbj(recognise, Government) nsbj(come, Government) det(determination, the) dobj(recognise, determination) case(teachers, of) det(teachers, the) nmod:of(determination, teachers) case(campaign, in) det(campaign, the) nmod:in(determination, campaign) cc(recognise, and) conj:and(recognise, come) advmod(come, forward) case(initiative, with) det(initiative, a) amod(initiative, new) nmod:with(come, initiative) mark(settle, to) acl(initiative, settle) det(dispte, the) dobj(settle, dispte) pnct(recognise, ?)","root(,VB) advmod(VB,WRB) ax(VB,MD) det(NNP,DT) nsbj(VB,NNP) nsbj(VB,NNP) det(NN,DT) dobj(VB,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NN,NN) cc(VB,CC) conj:and(VB,VB) advmod(VB,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(VB,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) pnct(VB,VB)","[and, Government, When, recognise, come, initiative, ROOT, forward]","[and, Government, When, recognise, come, initiative, ROOT, forward]",12,[ ],[ ],CC_and NNP_Government WRB_When VBP_recognise NN_come NN_initiative NN_forward ,"[and, Government, When, recognise, come, initiative, ROOT, forward]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does my right hon. Friend agree that the teachers are in their present position because they were treated so badly under the Labour Government?,DoesNNP myPRP$ rightJJ honNN FriendNNP agreeVBZ thatIN theDT teachersNNS areVBP inIN theirPRP$ presentJJ positionNN becauseIN theyPRP wereVBD treatedVBN soRB badlyRB underIN theDT LabourJJ GovernmentNN ,"root(ROOT-0, agree-6) aux(agree-6, Does-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(agree-6, Friend-5) mark(position-14, that-7) det(teachers-9, the-8) nsubj(position-14, teachers-9) cop(position-14, are-10) case(position-14, in-11) nmod:poss(position-14, their-12) amod(position-14, present-13) ccomp(agree-6, position-14) mark(treated-18, because-15) nsubjpass(treated-18, they-16) auxpass(treated-18, were-17) advcl(position-14, treated-18) advmod(badly-20, so-19) advmod(treated-18, badly-20) case(Government-24, under-21) det(Government-24, the-22) compound(Government-24, Labour-23) nmod:under(treated-18, Government-24) punct(agree-6, ?-25)",1,1,1,"root(ROOT, agree) ax(agree, Does) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(agree, Friend) mark(position, that) det(teachers, the) nsbj(position, teachers) cop(position, are) case(position, in) nmod:poss(position, their) amod(position, present) ccomp(agree, position) mark(treated, becase) nsbjpass(treated, they) axpass(treated, were) advcl(position, treated) advmod(badly, so) advmod(treated, badly) case(Government, nder) det(Government, the) compond(Government, Labor) nmod:nder(treated, Government) pnct(agree, ?)","root(,VBZ) ax(VBZ,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) mark(NN,IN) det(NNS,DT) nsbj(NN,NNS) cop(NN,VBP) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) ccomp(VBZ,NN) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBD) advcl(NN,VBN) advmod(RB,RB) advmod(VBN,RB) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:nder(VBN,NN) pnct(VBZ,VBZ)","[right, badly, treated, they, Friend, my, position, ROOT, Government, agree]","[badly, treated, they, Friend, my, position, ROOT, Government, agree]",13,"[they, badly, treated, position, Government]","[they, badly, treated, position, Government]",RB_badly VBD_treated PRP_they NNP_Friend PRP$_my NN_position NNP_Government VB_agree ,"[badly, treated, they, Friend, my, position, ROOT, Government, agree]","[badly, treated, they, Friend, my, position, ROOT, Government, agree]",RB_badly VBD_treated PRP_they NNP_Friend PRP$_my NN_position NNP_Government VB_agree ,"[badly, treated, they, Friend, my, position, ROOT, Government, agree]",RB_badly VBD_treated PRP_they NNP_Friend PRP$_my NN_position NNP_Government VB_agree ,"[badly, treated, they, Friend, my, position, ROOT, Government, agree]",RB_badly VBD_treated PRP_they NNP_Friend PRP$_my NN_position NNP_Government VB_agree ,1,2,2,2,1,2,2,2,2,2
As I pointed out to the deputation last week  if the teachers are concerned about the erosion of their position since the Houghton awards  more than half of the erosion happened under the Labour Government.,AsIN IPRP pointedVBD outRP toTO theDT deputationNN lastJJ weekNN ifIN theDT teachersNNS areVBP concernedVBN aboutIN theDT erosionNN ofIN theirPRP$ positionNN sinceIN theDT HoughtonNNP awardsNNS moreJJR thanIN halfNN ofIN theDT erosionNN happenedVBD underIN theDT LabourJJ GovernmentNN ,"root(ROOT-0, happened-33) mark(pointed-3, As-1) nsubj(pointed-3, I-2) advcl(happened-33, pointed-3) compound:prt(pointed-3, out-4) case(deputation-7, to-5) det(deputation-7, the-6) nmod:to(pointed-3, deputation-7) amod(week-9, last-8) nmod:tmod(pointed-3, week-9) punct(happened-33, ,-10) mark(concerned-15, if-11) det(teachers-13, the-12) nsubjpass(concerned-15, teachers-13) auxpass(concerned-15, are-14) advcl(happened-33, concerned-15) case(erosion-18, about-16) det(erosion-18, the-17) nmod:about(concerned-15, erosion-18) case(position-21, of-19) nmod:poss(position-21, their-20) nmod:of(erosion-18, position-21) case(awards-25, since-22) det(awards-25, the-23) compound(awards-25, Houghton-24) nmod:since(concerned-15, awards-25) punct(happened-33, ,-26) advmod(half-29, more-27) mwe(more-27, than-28) nsubj(happened-33, half-29) case(erosion-32, of-30) det(erosion-32, the-31) nmod:of(half-29, erosion-32) case(Government-37, under-34) det(Government-37, the-35) compound(Government-37, Labour-36) nmod:under(happened-33, Government-37) punct(happened-33, .-38)",1,0,0,"root(ROOT, happened) mark(pointed, As) nsbj(pointed, I) advcl(happened, pointed) compond:prt(pointed, ot) case(deptation, to) det(deptation, the) nmod:to(pointed, deptation) amod(week, last) nmod:tmod(pointed, week) pnct(happened, ,) mark(concerned, if) det(teachers, the) nsbjpass(concerned, teachers) axpass(concerned, are) advcl(happened, concerned) case(erosion, abot) det(erosion, the) nmod:abot(concerned, erosion) case(position, of) nmod:poss(position, their) nmod:of(erosion, position) case(awards, since) det(awards, the) compond(awards, Hoghton) nmod:since(concerned, awards) pnct(happened, ,) advmod(half, more) mwe(more, than) nsbj(happened, half) case(erosion, of) det(erosion, the) nmod:of(half, erosion) case(Government, nder) det(Government, the) compond(Government, Labor) nmod:nder(happened, Government) pnct(happened, .)","root(,VBD) mark(VBD,IN) nsbj(VBD,PRP) advcl(VBD,VBD) compond:prt(VBD,RP) case(NN,TO) det(NN,DT) nmod:to(VBD,NN) amod(NN,JJ) nmod:tmod(VBD,NN) pnct(VBD,VBD) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) axpass(VBN,VBP) advcl(VBD,VBN) case(NN,IN) det(NN,DT) nmod:abot(VBN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(NN,NN) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:since(VBN,NNS) pnct(VBD,VBD) advmod(NN,JJR) mwe(JJR,IN) nsbj(VBD,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:nder(VBD,NN) pnct(VBD,VBD)","[pointed, happened, half, Government, concerned, ROOT]","[pointed, happened, half, Government, concerned, ROOT]",15,"[pointed, happened, half, Government, concerned, ROOT]","[pointed, happened, half, Government, concerned, ROOT]",VBD_pointed VBD_happened NN_half NNP_Government JJ_concerned ,"[pointed, happened, half, Government, concerned, ROOT]","[pointed, happened, half, Government, concerned, ROOT]",VBD_pointed VBD_happened NN_half NNP_Government JJ_concerned ,"[pointed, happened, half, Government, concerned, ROOT]",VBD_pointed VBD_happened NN_half NNP_Government JJ_concerned ,"[pointed, happened, half, Government, concerned, ROOT]",VBD_pointed VBD_happened NN_half NNP_Government JJ_concerned ,1,2,2,2,1,2,2,2,2,2
If he sits down and does nothing  as he has been doing over these past months  the promise and commitment that has has given on his own behalf and on behalf of the Scottish Examination Board  that the examinations next year will go ahead  will simply be incapable of fulfilment.,IfIN hePRP sitsVBZ downRB andCC doesVBZ nothingNN asIN hePRP hasVBZ beenVBN doingVBG overIN theseDT pastJJ monthsNNS theDT promiseNN andCC commitmentNN thatWDT hasVBZ hasVBZ givenVBN onIN hisPRP$ ownJJ behalfNN andCC onIN behalfNN ofIN theDT ScottishNNP ExaminationNNP BoardNNP thatIN theDT examinationsNNS nextIN yearNN willMD goVB aheadRB willMD simplyRB beVB incapableJJ ofIN fulfilmentNN ,"root(ROOT-0, sits-3) mark(sits-3, If-1) nsubj(sits-3, he-2) nsubj(does-6, he-2) advmod(sits-3, down-4) cc(sits-3, and-5) conj:and(sits-3, does-6) dobj(does-6, nothing-7) punct(sits-3, ,-8) mark(doing-13, as-9) nsubj(doing-13, he-10) aux(doing-13, has-11) aux(doing-13, been-12) root(,-8, doing-13) case(months-17, over-14) det(months-17, these-15) amod(months-17, past-16) nmod:over(doing-13, months-17) punct(doing-13, ,-18) det(promise-20, the-19) root(,-18, promise-20) cc(promise-20, and-21) root(,-18, commitment-22) conj:and(promise-20, commitment-22) nsubj(given-26, that-23) nsubj(given-26'', that-23) aux(given-26, has-24) aux(given-26, has-25) acl:relcl(promise-20, given-26) acl:relcl(promise-20, given-26'') conj:and(given-26, given-26'') case(behalf-30, on-27) nmod:poss(behalf-30, his-28) amod(behalf-30, own-29) nmod:on(given-26, behalf-30) cc(given-26, and-31) case(behalf-33, on-32) nmod:on(given-26'', behalf-33) case(Board-38, of-34) det(Board-38, the-35) amod(Board-38, Scottish-36) compound(Board-38, Examination-37) nmod:of(behalf-33, Board-38) punct(promise-20, ,-39) mark(go-46, that-40) det(examinations-42, the-41) nsubj(go-46, examinations-42) amod(year-44, next-43) nmod:tmod(examinations-42, year-44) aux(go-46, will-45) ccomp(promise-20, go-46) advmod(go-46, ahead-47) punct(go-46, ,-48) aux(incapable-52, will-49) advmod(incapable-52, simply-50) cop(incapable-52, be-51) xcomp(go-46, incapable-52) case(fulfilment-54, of-53) nmod:of(incapable-52, fulfilment-54) punct(promise-20, .-55)",1,0,0,"root(ROOT, sits) mark(sits, If) nsbj(sits, he) nsbj(does, he) advmod(sits, down) cc(sits, and) conj:and(sits, does) dobj(does, nothing) pnct(sits, ,) mark(doing, as) nsbj(doing, he) ax(doing, has) ax(doing, been) root(,, doing) case(months, over) det(months, these) amod(months, past) nmod:over(doing, months) pnct(doing, ,) det(promise, the) root(,, promise) cc(promise, and) root(,, commitment) conj:and(promise, commitment) nsbj(given, that) nsbj(given, that) ax(given, has) ax(given, has) acl:relcl(promise, given) acl:relcl(promise, given) conj:and(given, given) case(behalf, on) nmod:poss(behalf, his) amod(behalf, own) nmod:on(given, behalf) cc(given, and) case(behalf, on) nmod:on(given, behalf) case(Board, of) det(Board, the) amod(Board, Scottish) compond(Board, Examination) nmod:of(behalf, Board) pnct(promise, ,) mark(go, that) det(examinations, the) nsbj(go, examinations) amod(year, next) nmod:tmod(examinations, year) ax(go, will) ccomp(promise, go) advmod(go, ahead) pnct(go, ,) ax(incapable, will) advmod(incapable, simply) cop(incapable, be) xcomp(go, incapable) case(flfilment, of) nmod:of(incapable, flfilment) pnct(promise, .)","root(,VBZ) mark(VBZ,IN) nsbj(VBZ,PRP) nsbj(VBZ,PRP) advmod(VBZ,RB) cc(VBZ,CC) conj:and(VBZ,VBZ) dobj(VBZ,NN) pnct(VBZ,VBZ) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBZ) ax(VBG,VBN) root(VBNVBNVBG) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:over(VBG,NNS) pnct(VBG,VBG) det(NN,DT) root(DTDTNN) cc(NN,CC) root(CCCCNN) conj:and(NN,NN) nsbj(VBN,IN) nsbj(VBN,IN) ax(VBN,VBZ) ax(VBN,VBZ) acl:relcl(NN,VBN) acl:relcl(NN,VBN) conj:and(VBN,VBN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:on(VBN,NN) cc(VBN,CC) case(NN,IN) nmod:on(VBN,NN) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) compond(NNP,NNP) nmod:of(NN,NNP) pnct(NN,NN) mark(VB,IN) det(NNS,DT) nsbj(VB,NNS) amod(NN,IN) nmod:tmod(NNS,NN) ax(VB,MD) ccomp(NN,VB) advmod(VB,RB) pnct(VB,VB) ax(JJ,MD) advmod(JJ,RB) cop(JJ,VB) xcomp(VB,JJ) case(NN,IN) nmod:of(JJ,NN) pnct(NN,NN)","[ , down, sits, does, nothing, he, months, doing, he, ROOT, and]","[ , down, sits, his, does, behalf, nothing, given, he, months, doing, own, he, ROOT, and]",16,"[own, down, sits, his, does, behalf, nothing, given, he, ROOT, and]","[own, down, sits, his, does, behalf, nothing, given, he, ROOT, and]",RB_down VBZ_sits PRP$_his VBZ_does NN_behalf NN_nothing VBN_given PRP_he NNS_months VBG_doing JJ_own PRP_he CC_and ,"[ , down, sits, his, does, behalf, nothing, given, he, months, doing, own, he, ROOT, and]","[ , down, sits, his, does, behalf, nothing, given, he, months, doing, own, he, ROOT, and]",RB_down VBZ_sits PRP$_his VBZ_does NN_behalf NN_nothing VBN_given PRP_he NNS_months VBG_doing JJ_own PRP_he CC_and ,"[ , down, sits, his, does, behalf, nothing, given, he, months, doing, own, he, ROOT, and]",RB_down VBZ_sits PRP$_his VBZ_does NN_behalf NN_nothing VBN_given PRP_he NNS_months VBG_doing JJ_own PRP_he CC_and ,"[ , down, sits, his, does, behalf, nothing, given, he, months, doing, own, he, ROOT, and]",RB_down VBZ_sits PRP$_his VBZ_does NN_behalf NN_nothing VBN_given PRP_he NNS_months VBG_doing JJ_own PRP_he CC_and ,2,2,2,0,0,0,0,0,0,0
No amount of fancy arithmetic alters the fact that the extra money offered from the Government is £125 million over and above the annual increases that will be negotiated year on year by the normal machinery.,NoDT amountNN ofIN fancyJJ arithmeticJJ altersNNS theDT factNN thatIN theDT extraJJ moneyNN offeredVBN fromIN theDT GovernmentNNP isVBZ £125CD millionCD overIN andCC aboveIN theDT annualJJ increasesNNS thatWDT willMD beVB negotiatedVBN yearNN onIN yearNN byIN theDT normalJJ machineryNN ,"root(ROOT-0, alters-6) neg(amount-2, No-1) nsubj(alters-6, amount-2) case(arithmetic-5, of-3) amod(arithmetic-5, fancy-4) nmod:of(amount-2, arithmetic-5) det(fact-8, the-7) dobj(alters-6, fact-8) mark(million-20, that-9) det(money-12, the-10) amod(money-12, extra-11) nsubj(million-20, money-12) acl(money-12, offered-13) case(Government-16, from-14) det(Government-16, the-15) nmod:from(offered-13, Government-16) cop(million-20, is-17) compound(million-20, #-18) compound(million-20, 125-19) ccomp(fact-8, million-20) advmod(million-20, over-21) cc(over-21, and-22) case(increases-26, above-23) det(increases-26, the-24) amod(increases-26, annual-25) advmod(million-20, increases-26) conj:and(over-21, increases-26) nsubjpass(negotiated-30, that-27) aux(negotiated-30, will-28) auxpass(negotiated-30, be-29) acl:relcl(increases-26, negotiated-30) nmod:tmod(negotiated-30, year-31) case(year-33, on-32) nmod:on(year-31, year-33) case(machinery-37, by-34) det(machinery-37, the-35) amod(machinery-37, normal-36) nmod:agent(negotiated-30, machinery-37) punct(alters-6, .-38)",1,0,0,"root(ROOT, alters) neg(amont, No) nsbj(alters, amont) case(arithmetic, of) amod(arithmetic, fancy) nmod:of(amont, arithmetic) det(fact, the) dobj(alters, fact) mark(million, that) det(money, the) amod(money, extra) nsbj(million, money) acl(money, offered) case(Government, from) det(Government, the) nmod:from(offered, Government) cop(million, is) compond(million, #) compond(million, 125) ccomp(fact, million) advmod(million, over) cc(over, and) case(increases, above) det(increases, the) amod(increases, annal) advmod(million, increases) conj:and(over, increases) nsbjpass(negotiated, that) ax(negotiated, will) axpass(negotiated, be) acl:relcl(increases, negotiated) nmod:tmod(negotiated, year) case(year, on) nmod:on(year, year) case(machinery, by) det(machinery, the) amod(machinery, normal) nmod:agent(negotiated, machinery) pnct(alters, .)","root(,NNS) neg(NN,DT) nsbj(NNS,NN) case(JJ,IN) amod(JJ,JJ) nmod:of(NN,JJ) det(NN,DT) dobj(NNS,NN) mark(CD,WDT) det(NN,DT) amod(NN,JJ) nsbj(CD,NN) acl(NN,VBN) case(NNP,IN) det(NNP,DT) nmod:from(VBN,NNP) cop(CD,VBZ) compond(CD,CD) compond(CD,CD) ccomp(NN,CD) advmod(CD,IN) cc(IN,CC) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) advmod(CD,NNS) conj:and(IN,NNS) nsbjpass(VBN,WDT) ax(VBN,MD) axpass(VBN,VB) acl:relcl(NNS,VBN) nmod:tmod(VBN,NN) case(NN,IN) nmod:on(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:agent(VBN,NN) pnct(NNS,NNS)","[money, offered, Government]","[money, offered, Government]",17,"[money, offered, Government]","[money, offered, Government]",NN_money VBN_offered NNP_Government ,"[money, offered, Government]","[money, offered, Government]",NN_money VBN_offered NNP_Government ,"[money, offered, Government]",NN_money VBN_offered NNP_Government ,"[money, offered, Government]",NN_money VBN_offered NNP_Government ,1,2,2,0,0,0,0,0,0,0
As regards the examinations  I go a long way with the hon. Gentleman in what he says.,AsIN regardsNNS theDT examinationsNNS IPRP goVBP aDT longJJ wayNN withIN theDT honNN GentlemanNNP inIN whatWP hePRP saysVBZ ,"root(ROOT-0, go-7) mark(regards-2, As-1) advcl(go-7, regards-2) det(examinations-4, the-3) dobj(regards-2, examinations-4) punct(go-7, ,-5) nsubj(go-7, I-6) det(way-10, a-8) amod(way-10, long-9) dobj(go-7, way-10) case(Gentleman-14, with-11) det(Gentleman-14, the-12) compound(Gentleman-14, hon.-13) nmod:with(way-10, Gentleman-14) mark(says-18, in-15) dobj(says-18, what-16) nsubj(says-18, he-17) acl(way-10, says-18) punct(go-7, .-19)",1,0,0,"root(ROOT, go) mark(regards, As) advcl(go, regards) det(examinations, the) dobj(regards, examinations) pnct(go, ,) nsbj(go, I) det(way, a) amod(way, long) dobj(go, way) case(Gentleman, with) det(Gentleman, the) compond(Gentleman, hon.) nmod:with(way, Gentleman) mark(says, in) dobj(says, what) nsbj(says, he) acl(way, says) pnct(go, .)","root(,VBP) mark(NNS,IN) advcl(VBP,NNS) det(NNS,DT) dobj(NNS,NNS) pnct(VBP,VBP) nsbj(VBP,PRP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:with(NN,NNP) mark(VBZ,IN) dobj(VBZ,WP) nsbj(VBZ,PRP) acl(NN,VBZ) pnct(VBP,VBP)","[way, what, long, go, Gentleman, says, he]","[way, what, long, go, Gentleman, says, he]",18,"[way, what, long, go, Gentleman, says, he]","[way, what, long, go, Gentleman, says, he]",NN_way WP_what JJ_long VB_go NNP_Gentleman VBZ_says PRP_he ,"[way, what, long, go, Gentleman, says, he]","[way, what, long, go, Gentleman, says, he]",NN_way WP_what JJ_long VB_go NNP_Gentleman VBZ_says PRP_he ,"[way, what, long, go, Gentleman, says, he]",NN_way WP_what JJ_long VB_go NNP_Gentleman VBZ_says PRP_he ,"[way, what, long, go, Gentleman, says, he]",NN_way WP_what JJ_long VB_go NNP_Gentleman VBZ_says PRP_he ,1,1,2,0,0,0,0,0,0,0
When will my right hon. Friend look to the wellbeing of British Airways  as he always does for the British Airports Authority?,WhenWRB willMD myPRP$ rightJJ honNN FriendNNP lookNN toTO theDT wellbeingNN ofIN BritishJJ AirwaysNNS asIN hePRP alwaysRB doesVBZ forIN theDT BritishJJ AirportsNNP AuthorityNN ,"root(ROOT-0, look-7) advmod(look-7, When-1) aux(look-7, will-2) nmod:poss(look-7, my-3) amod(look-7, right-4) compound(look-7, hon.-5) compound(look-7, Friend-6) case(wellbeing-10, to-8) det(wellbeing-10, the-9) nmod:to(look-7, wellbeing-10) case(Airways-13, of-11) compound(Airways-13, British-12) nmod:of(wellbeing-10, Airways-13) punct(look-7, ,-14) mark(does-18, as-15) nsubj(does-18, he-16) advmod(does-18, always-17) advcl(look-7, does-18) case(Authority-23, for-19) det(Authority-23, the-20) amod(Authority-23, British-21) compound(Authority-23, Airports-22) nmod:for(does-18, Authority-23) punct(look-7, ?-24)",1,0,0,"root(ROOT, look) advmod(look, When) ax(look, will) nmod:poss(look, my) amod(look, right) compond(look, hon.) compond(look, Friend) case(wellbeing, to) det(wellbeing, the) nmod:to(look, wellbeing) case(Airways, of) compond(Airways, British) nmod:of(wellbeing, Airways) pnct(look, ,) mark(does, as) nsbj(does, he) advmod(does, always) advcl(look, does) case(Athority, for) det(Athority, the) amod(Athority, British) compond(Athority, Airports) nmod:for(does, Athority) pnct(look, ?)","root(,NN) advmod(NN,WRB) ax(NN,MD) nmod:poss(NN,PRP$) amod(NN,JJ) compond(NN,NN) compond(NN,NNP) case(NN,TO) det(NN,DT) nmod:to(NN,NN) case(NNS,IN) compond(NNS,JJ) nmod:of(NN,NNS) pnct(NN,NN) mark(VBZ,IN) nsbj(VBZ,PRP) advmod(VBZ,RB) advcl(NN,VBZ) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NNP) nmod:for(VBZ,NN) pnct(NN,NN)","[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]","[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]",18,"[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]","[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]",VBZ_does WRB_When RB_always JJ_right NNP_Authority PRP$_my PRP_he NN_wellbeing NN_look ,"[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]","[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]",VBZ_does WRB_When RB_always JJ_right NNP_Authority PRP$_my PRP_he NN_wellbeing NN_look ,"[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]",VBZ_does WRB_When RB_always JJ_right NNP_Authority PRP$_my PRP_he NN_wellbeing NN_look ,"[does, When, always, right, Authority, my, he, ROOT, wellbeing, look]",VBZ_does WRB_When RB_always JJ_right NNP_Authority PRP$_my PRP_he NN_wellbeing NN_look ,2,2,1,1,1,1,1,1,1,1
Is the Secretary of State aware that we are grateful to the hon. Member for Harlow (Mr. Hayes) for revealing that Lord King of Wartnaby invited 140 Tory Members of Parliament to a gargantuan beanfeast in the Savoy?,IsVBZ theDT SecretaryNNP ofIN StateNNP awareJJ thatIN wePRP areVBP gratefulJJ toTO theDT honNN MemberNNP forIN HarlowNNP (( MrNNP HayesNNP )) forIN revealingVBG thatDT LordNNP KingNNP ofIN WartnabyNNP invitedVBD 140CD ToryNNP MembersNNS ofIN ParliamentNNP toTO aDT gargantuanJJ beanfeastNN inIN theDT SavoyNNP ,"root(ROOT-0, aware-6) cop(aware-6, Is-1) det(Secretary-3, the-2) nsubj(aware-6, Secretary-3) case(State-5, of-4) nmod:of(Secretary-3, State-5) mark(grateful-10, that-7) nsubj(grateful-10, we-8) cop(grateful-10, are-9) ccomp(aware-6, grateful-10) case(Member-14, to-11) det(Member-14, the-12) compound(Member-14, hon.-13) nmod:to(grateful-10, Member-14) case(Harlow-16, for-15) nmod:for(Member-14, Harlow-16) punct(Hayes-19, -LRB--17) compound(Hayes-19, Mr.-18) appos(Member-14, Hayes-19) punct(Hayes-19, -RRB--20) mark(revealing-22, for-21) advcl(grateful-10, revealing-22) mark(invited-28, that-23) compound(King-25, Lord-24) nsubj(invited-28, King-25) case(Wartnaby-27, of-26) nmod:of(King-25, Wartnaby-27) ccomp(revealing-22, invited-28) nummod(Members-31, 140-29) compound(Members-31, Tory-30) dobj(invited-28, Members-31) case(Parliament-33, of-32) nmod:of(Members-31, Parliament-33) case(beanfeast-37, to-34) det(beanfeast-37, a-35) amod(beanfeast-37, gargantuan-36) nmod:to(invited-28, beanfeast-37) case(Savoy-40, in-38) det(Savoy-40, the-39) nmod:in(beanfeast-37, Savoy-40) punct(aware-6, ?-41)",1,1,0,"root(ROOT, aware) cop(aware, Is) det(Secretary, the) nsbj(aware, Secretary) case(State, of) nmod:of(Secretary, State) mark(gratefl, that) nsbj(gratefl, we) cop(gratefl, are) ccomp(aware, gratefl) case(Member, to) det(Member, the) compond(Member, hon.) nmod:to(gratefl, Member) case(Harlow, for) nmod:for(Member, Harlow) pnct(Hayes, ) compond(Hayes, Mr.) appos(Member, Hayes) pnct(Hayes, ) mark(revealing, for) advcl(gratefl, revealing) mark(invited, that) compond(King, Lord) nsbj(invited, King) case(Wartnaby, of) nmod:of(King, Wartnaby) ccomp(revealing, invited) nmmod(Members, 140) compond(Members, Tory) dobj(invited, Members) case(Parliament, of) nmod:of(Members, Parliament) case(beanfeast, to) det(beanfeast, a) amod(beanfeast, gargantan) nmod:to(invited, beanfeast) case(Savoy, in) det(Savoy, the) nmod:in(beanfeast, Savoy) pnct(aware, ?)","root(,JJ) cop(JJ,VBZ) det(NNP,DT) nsbj(JJ,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(JJ,DT) nsbj(JJ,PRP) cop(JJ,VBP) ccomp(JJ,JJ) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(JJ,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) mark(VBG,IN) advcl(JJ,VBG) mark(VBD,DT) compond(NNP,NNP) nsbj(VBD,NNP) case(NNP,IN) nmod:of(NNP,NNP) ccomp(VBG,VBD) nmmod(NNS,CD) compond(NNS,NNP) dobj(VBD,NNS) case(NNP,IN) nmod:of(NNS,NNP) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VBD,NN) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) pnct(JJ,JJ)","[Members, 140, Harlow, grateful, aware, Member, State, Parliament, revealing, Secretary, invited, Hayes, ROOT, we]","[Members, 140, Harlow, grateful, aware, Member, State, Parliament, revealing, Secretary, invited, Hayes, ROOT, we]",7,"[Members, 140, Harlow, grateful, aware, Member, State, Parliament, revealing, Secretary, invited, Hayes, ROOT, we]","[Members, 140, Harlow, grateful, aware, Member, Parliament, revealing, invited, Hayes, we]",NNS_Members CD_140 NNP_Harlow JJ_grateful JJ_aware NNP_Member NNP_State NNP_Parliament VBG_revealing NNP_Secretary VBD_invited NNP_Hayes PRP_we ,"[Members, 140, Harlow, grateful, aware, Member, State, Parliament, revealing, Secretary, invited, Hayes, ROOT, we]","[Members, 140, Harlow, grateful, aware, Member, State, Parliament, revealing, Secretary, invited, Hayes, ROOT, we]",NNS_Members CD_140 NNP_Harlow JJ_grateful JJ_aware NNP_Member NNP_State NNP_Parliament VBG_revealing NNP_Secretary VBD_invited NNP_Hayes PRP_we ,"[Members, 140, Harlow, grateful, aware, Member, State, Parliament, revealing, Secretary, invited, Hayes, ROOT, we]",NNS_Members CD_140 NNP_Harlow JJ_grateful JJ_aware NNP_Member NNP_State NNP_Parliament VBG_revealing NNP_Secretary VBD_invited NNP_Hayes PRP_we ,"[Members, 140, Harlow, grateful, aware, Member, State, Parliament, revealing, Secretary, invited, Hayes, ROOT, we]",NNS_Members CD_140 NNP_Harlow JJ_grateful JJ_aware NNP_Member NNP_State NNP_Parliament VBG_revealing NNP_Secretary VBD_invited NNP_Hayes PRP_we ,1,2,2,1,1,0,2,2,2,2
Now that we have reached a position where all the pressure in the House and in the media is to criticise the Government for not proceeding more speedily with the privatisation of British Airways  the hon. Gentleman might find a way of getting himself a hot  free lunch.,NowRB thatIN wePRP haveVBP reachedVBN aDT positionNN whereWRB allPDT theDT pressureNN inIN theDT HouseNNP andCC inIN theDT mediaNNS isVBZ toTO criticiseVB theDT GovernmentNNP forIN notRB proceedingVBG moreRBR speedilyRB withIN theDT privatisationNN ofIN BritishNNP AirwaysNNP theDT honNN GentlemanNNP mightMD findVB aDT wayNN ofIN gettingVBG himselfPRP aDT hotJJ freeJJ lunchNN ,"root(ROOT-0, find-40) advmod(reached-5, Now-1) mark(reached-5, that-2) nsubj(reached-5, we-3) aux(reached-5, have-4) advcl(find-40, reached-5) det(position-7, a-6) dobj(reached-5, position-7) advmod(is-19, where-8) det:predet(pressure-11, all-9) det(pressure-11, the-10) nsubj(is-19, pressure-11) case(House-14, in-12) det(House-14, the-13) nmod:in(pressure-11, House-14) cc(pressure-11, and-15) case(media-18, in-16) det(media-18, the-17) conj:and(pressure-11, media-18) nsubj(is-19, media-18) acl:relcl(position-7, is-19) mark(criticise-21, to-20) xcomp(is-19, criticise-21) det(Government-23, the-22) dobj(criticise-21, Government-23) mark(proceeding-26, for-24) neg(proceeding-26, not-25) advcl(criticise-21, proceeding-26) advmod(speedily-28, more-27) advmod(proceeding-26, speedily-28) case(privatisation-31, with-29) det(privatisation-31, the-30) nmod:with(speedily-28, privatisation-31) case(Airways-34, of-32) compound(Airways-34, British-33) nmod:of(privatisation-31, Airways-34) punct(find-40, ,-35) det(Gentleman-38, the-36) compound(Gentleman-38, hon.-37) nsubj(find-40, Gentleman-38) aux(find-40, might-39) det(way-42, a-41) dobj(find-40, way-42) mark(getting-44, of-43) acl(way-42, getting-44) nsubj(lunch-50, himself-45) det(lunch-50, a-46) amod(lunch-50, hot-47) punct(lunch-50, ,-48) amod(lunch-50, free-49) xcomp(getting-44, lunch-50) punct(find-40, .-51)",1,0,0,"root(ROOT, find) advmod(reached, Now) mark(reached, that) nsbj(reached, we) ax(reached, have) advcl(find, reached) det(position, a) dobj(reached, position) advmod(is, where) det:predet(pressre, all) det(pressre, the) nsbj(is, pressre) case(Hose, in) det(Hose, the) nmod:in(pressre, Hose) cc(pressre, and) case(media, in) det(media, the) conj:and(pressre, media) nsbj(is, media) acl:relcl(position, is) mark(criticise, to) xcomp(is, criticise) det(Government, the) dobj(criticise, Government) mark(proceeding, for) neg(proceeding, not) advcl(criticise, proceeding) advmod(speedily, more) advmod(proceeding, speedily) case(privatisation, with) det(privatisation, the) nmod:with(speedily, privatisation) case(Airways, of) compond(Airways, British) nmod:of(privatisation, Airways) pnct(find, ,) det(Gentleman, the) compond(Gentleman, hon.) nsbj(find, Gentleman) ax(find, might) det(way, a) dobj(find, way) mark(getting, of) acl(way, getting) nsbj(lnch, himself) det(lnch, a) amod(lnch, hot) pnct(lnch, ,) amod(lnch, free) xcomp(getting, lnch) pnct(find, .)","root(,VB) advmod(VBN,RB) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBP) advcl(VB,VBN) det(NN,DT) dobj(VBN,NN) advmod(VBZ,WRB) det:predet(NN,PDT) det(NN,DT) nsbj(VBZ,NN) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) cc(NN,CC) case(NNS,IN) det(NNS,DT) conj:and(NN,NNS) nsbj(VBZ,NNS) acl:relcl(NN,VBZ) mark(VB,TO) xcomp(VBZ,VB) det(NNP,DT) dobj(VB,NNP) mark(VBG,IN) neg(VBG,RB) advcl(VB,VBG) advmod(RB,RBR) advmod(VBG,RB) case(NN,IN) det(NN,DT) nmod:with(RB,NN) case(NNP,IN) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VB,VB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) det(NN,DT) dobj(VB,NN) mark(VBG,IN) acl(NN,VBG) nsbj(NN,PRP) det(NN,DT) amod(NN,JJ) pnct(NN,NN) amod(NN,JJ) xcomp(VBG,NN) pnct(VB,VB)","[find, Gentleman, proceeding, way, criticise, is, ROOT, reached, Government]","[find, Gentleman, proceeding, way, criticise, is, ROOT, reached, Government]",9,"[is, Government, criticise, proceeding]","[is, Government, criticise, proceeding]",VB_find NNP_Gentleman VBG_proceeding NN_way VB_criticise VBZ_is VBN_reached NNP_Government ,"[find, Gentleman, proceeding, way, criticise, is, ROOT, reached, Government]","[find, Gentleman, proceeding, way, criticise, is, ROOT, reached, Government]",VB_find NNP_Gentleman VBG_proceeding NN_way VB_criticise VBZ_is VBN_reached NNP_Government ,"[find, Gentleman, proceeding, way, criticise, is, ROOT, reached, Government]",VB_find NNP_Gentleman VBG_proceeding NN_way VB_criticise VBZ_is VBN_reached NNP_Government ,"[find, Gentleman, proceeding, way, criticise, is, ROOT, reached, Government]",VB_find NNP_Gentleman VBG_proceeding NN_way VB_criticise VBZ_is VBN_reached NNP_Government ,1,2,1,2,1,2,2,2,2,1
Although we understand the Secretary of State's embarrassment in not coming to the House last week to tell us that  yet again  he had had to postpone BA's flotation  can he be a bit more forthcoming now?,AlthoughIN wePRP understandVBP theDT SecretaryNNP ofIN StateNNP 'sPOS embarrassmentNN inIN notRB comingVBG toTO theDT HouseNNP lastJJ weekNN toTO tellVB usPRP thatWDT yetRB againRB hePRP hadVBD hadVBN toTO postponeVB BANNP 'sPOS flotationNN canMD hePRP beVB aDT bitNN moreRBR forthcomingNN nowRB ,"root(ROOT-0, bit-39) mark(understand-3, Although-1) nsubj(understand-3, we-2) advcl(bit-39, understand-3) det(Secretary-5, the-4) dobj(understand-3, Secretary-5) case(embarrassment-9, of-6) nmod:poss(embarrassment-9, State-7) case(State-7, 's-8) nmod:of(Secretary-5, embarrassment-9) mark(coming-12, in-10) neg(coming-12, not-11) acl(Secretary-5, coming-12) case(House-15, to-13) det(House-15, the-14) nmod:to(coming-12, House-15) amod(week-17, last-16) nmod:tmod(coming-12, week-17) mark(tell-19, to-18) advcl(coming-12, tell-19) dobj(tell-19, us-20) mark(had-28, that-21) punct(had-28, ,-22) advmod(again-24, yet-23) advmod(had-28, again-24) punct(had-28, ,-25) nsubj(had-28, he-26) aux(had-28, had-27) ccomp(tell-19, had-28) mark(postpone-30, to-29) xcomp(had-28, postpone-30) nmod:poss(flotation-33, BA-31) case(BA-31, 's-32) dobj(postpone-30, flotation-33) punct(bit-39, ,-34) aux(bit-39, can-35) nsubj(bit-39, he-36) cop(bit-39, be-37) det(bit-39, a-38) advmod(forthcoming-41, more-40) advmod(now-42, forthcoming-41) advmod(bit-39, now-42) punct(bit-39, ?-43)",1,0,0,"root(ROOT, bit) mark(nderstand, Althogh) nsbj(nderstand, we) advcl(bit, nderstand) det(Secretary, the) dobj(nderstand, Secretary) case(embarrassment, of) nmod:poss(embarrassment, State) ""case(State, s)"", nmod:of(Secretary, embarrassment) mark(coming, in) neg(coming, not) acl(Secretary, coming) case(Hose, to) det(Hose, the) nmod:to(coming, Hose) amod(week, last) nmod:tmod(coming, week) mark(tell, to) advcl(coming, tell) dobj(tell, s) mark(had, that) pnct(had, ,) advmod(again, yet) advmod(had, again) pnct(had, ,) nsbj(had, he) ax(had, had) ccomp(tell, had) mark(postpone, to) xcomp(had, postpone) nmod:poss(flotation, BA) ""case(BA, s)"", dobj(postpone, flotation) pnct(bit, ,) ax(bit, can) nsbj(bit, he) cop(bit, be) det(bit, a) advmod(forthcoming, more) advmod(now, forthcoming) advmod(bit, now) pnct(bit, ?)","root(,NN) mark(VBP,IN) nsbj(VBP,PRP) advcl(NN,VBP) det(NNP,DT) dobj(VBP,NNP) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NNP,NN) mark(VBG,IN) neg(VBG,RB) acl(NNP,VBG) case(NNP,TO) det(NNP,DT) nmod:to(VBG,NNP) amod(NN,JJ) nmod:tmod(VBG,NN) mark(VB,TO) advcl(VBG,VB) dobj(VB,PRP) mark(VBN,WDT) pnct(VBN,VBN) advmod(RB,RB) advmod(VBN,RB) pnct(VBN,VBN) nsbj(VBN,PRP) ax(VBN,VBN) ccomp(VB,VBN) mark(VB,TO) xcomp(VBN,VB) nmod:poss(NN,NNP) case(NNP,POS) dobj(VB,NN) pnct(NN,NN) ax(NN,MD) nsbj(NN,PRP) cop(NN,VB) det(NN,DT) advmod(NN,RBR) advmod(RB,NN) advmod(NN,RB) pnct(NN,NN)","[week, State, tell, understand, embarrassment, House, he, now, he, again, we, had, Secretary, not, ROOT, coming, bit, postpone]","[week, State, tell, understand, embarrassment, House, he, now, he, again, we, had, Secretary, not, ROOT, coming, bit, postpone]",10,"[House, week, State, embarrassment, we, Secretary, tell, not, coming, bit, understand]","[House, week, State, embarrassment, we, Secretary, tell, not, coming, bit, understand]",NN_week NNP_State VB_tell VBP_understand NN_embarrassment NNP_House PRP_he RB_now PRP_he RB_again PRP_we VBN_had NNP_Secretary RB_not VBG_coming NN_bit VB_postpone ,"[week, State, tell, understand, embarrassment, House, he, now, he, again, we, had, Secretary, not, ROOT, coming, bit, postpone]","[week, State, tell, understand, embarrassment, House, he, now, he, again, we, had, Secretary, not, ROOT, coming, bit, postpone]",NN_week NNP_State VB_tell VBP_understand NN_embarrassment NNP_House PRP_he RB_now PRP_he RB_again PRP_we VBN_had NNP_Secretary RB_not VBG_coming NN_bit VB_postpone ,"[week, State, tell, understand, embarrassment, House, he, now, he, again, we, had, Secretary, not, ROOT, coming, bit, postpone]",NN_week NNP_State VB_tell VBP_understand NN_embarrassment NNP_House PRP_he RB_now PRP_he RB_again PRP_we VBN_had NNP_Secretary RB_not VBG_coming NN_bit VB_postpone ,"[week, State, tell, understand, embarrassment, House, he, now, he, again, we, had, Secretary, not, ROOT, coming, bit, postpone]",NN_week NNP_State VB_tell VBP_understand NN_embarrassment NNP_House PRP_he RB_now PRP_he RB_again PRP_we VBN_had NNP_Secretary RB_not VBG_coming NN_bit VB_postpone ,3,2,2,2,1,2,2,2,2,2
According to Shelter figures  which are better than his Department's  there are 4 400 homeless families in bed and breakfast accommodation in London.,AccordingVBG toTO ShelterNNP figuresNNS whichWDT areVBP betterJJR thanIN hisPRP$ DepartmentNNP 'sPOS thereEX areVBP 4CD 400CD homelessNN familiesNNS inIN bedNN andCC breakfastNN accommodationNN inIN LondonNNP ,"root(ROOT-0, figures-4) case(figures-4, According-1) mwe(According-1, to-2) compound(figures-4, Shelter-3) punct(figures-4, ,-5) nsubj(better-8, which-6) cop(better-8, are-7) acl:relcl(figures-4, better-8) dep(better-8, than-9) nmod:poss(Department-11, his-10) dep(than-9, Department-11) case(Department-11, 's-12) punct(are-15, ,-13) expl(are-15, there-14) acl:relcl(Department-11, are-15) nummod(families-18, 4,400-16) amod(families-18, homeless-17) nsubj(are-15, families-18) case(bed-20, in-19) nmod:in(are-15, bed-20) cc(bed-20, and-21) compound(accommodation-23, breakfast-22) nmod:in(are-15, accommodation-23) conj:and(bed-20, accommodation-23) case(London-25, in-24) nmod:in(bed-20, London-25) punct(figures-4, .-26)",1,0,0,"root(ROOT, figres) case(figres, According) mwe(According, to) compond(figres, Shelter) pnct(figres, ,) nsbj(better, which) cop(better, are) acl:relcl(figres, better) dep(better, than) nmod:poss(Department, his) dep(than, Department) ""case(Department, s)"", pnct(are, ,) expl(are, there) acl:relcl(Department, are) nmmod(families, 4,400) amod(families, homeless) nsbj(are, families) case(bed, in) nmod:in(are, bed) cc(bed, and) compond(accommodation, breakfast) nmod:in(are, accommodation) conj:and(bed, accommodation) case(London, in) nmod:in(bed, London) pnct(figres, .)","root(,NNS) case(NNS,VBG) mwe(VBG,TO) compond(NNS,NNP) pnct(NNS,NNS) nsbj(JJR,WDT) cop(JJR,VBP) acl:relcl(NNS,JJR) dep(JJR,IN) nmod:poss(NNP,PRP$) dep(IN,NNP) case(NNP,POS) pnct(VBP,VBP) expl(VBP,EX) acl:relcl(NNP,VBP) nmmod(NNS,NNS) amod(NNS,NN) nsbj(VBP,NNS) case(NN,IN) nmod:in(VBP,NN) cc(NN,CC) compond(NN,NN) nmod:in(VBP,NN) conj:and(NN,NN) case(NNP,IN) nmod:in(NN,NNP) pnct(NNS,NNS)",[ ],"[his, Department, than, are]",14,"[his, Department, than, are]","[his, Department, than, are]",PRP$_his NNP_Department IN_than VBP_are ,"[his, Department, than, are]","[his, Department, than, are]",PRP$_his NNP_Department IN_than VBP_are ,"[his, Department, than, are]",PRP$_his NNP_Department IN_than VBP_are ,"[his, Department, than, are]",PRP$_his NNP_Department IN_than VBP_are ,2,2,1,0,0,0,0,0,0,0
Does the Minister recognise that probably the Government's greatest social crime is that since 1979 housing expenditure has been slashed by very nearly half?,DoesVBZ theDT MinisterNNP recogniseNN thatWDT probablyRB theDT GovernmentNNP 'sPOS greatestJJS socialJJ crimeNN isVBZ thatIN sinceIN 1979CD housingNN expenditureNN hasVBZ beenVBN slashedVBN byIN veryRB nearlyRB halfNN ,"root(ROOT-0, recognise-4) aux(recognise-4, Does-1) det(Minister-3, the-2) nsubj(recognise-4, Minister-3) mark(is-13, that-5) advmod(is-13, probably-6) det(Government-8, the-7) nmod:poss(crime-12, Government-8) case(Government-8, 's-9) amod(crime-12, greatest-10) amod(crime-12, social-11) nsubj(is-13, crime-12) ccomp(recognise-4, is-13) nsubj(is-13, that-14) mark(slashed-21, since-15) nummod(expenditure-18, 1979-16) compound(expenditure-18, housing-17) nsubjpass(slashed-21, expenditure-18) aux(slashed-21, has-19) auxpass(slashed-21, been-20) dep(that-14, slashed-21) case(half-25, by-22) advmod(nearly-24, very-23) advmod(half-25, nearly-24) nmod:agent(slashed-21, half-25) punct(slashed-21, ?-26)",1,1,0,"root(ROOT, recognise) ax(recognise, Does) det(Minister, the) nsbj(recognise, Minister) mark(is, that) advmod(is, probably) det(Government, the) nmod:poss(crime, Government) ""case(Government, s)"", amod(crime, greatest) amod(crime, social) nsbj(is, crime) ccomp(recognise, is) nsbj(is, that) mark(slashed, since) nmmod(expenditre, 1979) compond(expenditre, hosing) nsbjpass(slashed, expenditre) ax(slashed, has) axpass(slashed, been) dep(that, slashed) case(half, by) advmod(nearly, very) advmod(half, nearly) nmod:agent(slashed, half) pnct(slashed, ?)","root(,NN) ax(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) mark(VBZ,IN) advmod(VBZ,RB) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJS) amod(NN,JJ) nsbj(VBZ,NN) ccomp(NN,VBZ) nsbj(VBZ,IN) mark(VBN,IN) nmmod(NN,CD) compond(NN,NN) nsbjpass(VBN,NN) ax(VBN,VBZ) axpass(VBN,VBN) dep(IN,VBN) case(NN,IN) advmod(RB,RB) advmod(NN,RB) nmod:agent(VBN,NN) pnct(VBN,VBN)","[crime, greatest, Government, ROOT, recognise, Minister, social, is]","[crime, greatest, Government, ROOT, recognise, Minister, social, is]",4,"[social, Government, is, crime, greatest]","[social, Government, is, crime, greatest]",NN_crime JJS_greatest NNP_Government VBP_recognise NNP_Minister JJ_social VBZ_is ,"[crime, greatest, Government, ROOT, recognise, Minister, social, is]","[crime, greatest, Government, ROOT, recognise, Minister, social, is]",NN_crime JJS_greatest NNP_Government VBP_recognise NNP_Minister JJ_social VBZ_is ,"[crime, greatest, Government, ROOT, recognise, Minister, social, is]",NN_crime JJS_greatest NNP_Government VBP_recognise NNP_Minister JJ_social VBZ_is ,"[crime, greatest, Government, ROOT, recognise, Minister, social, is]",NN_crime JJS_greatest NNP_Government VBP_recognise NNP_Minister JJ_social VBZ_is ,1,2,2,2,1,2,2,2,2,2
The major reduction in public investment in housing took place under a Labour  not a Conservative Government  and the hon. Gentleman's statistics ignore the recovery in the private housebuilding sector  which meets real housing needs.,TheDT majorJJ reductionNN inIN publicJJ investmentNN inIN housingNN tookVBD placeNN underIN aDT LabourNNP notRB aDT ConservativeJJ GovernmentNN andCC theDT honNN GentlemanNNP 'sPOS statisticsNNS ignoreVBP theDT recoveryNN inIN theDT privateJJ housebuildingNN sectorNN whichWDT meetsVBZ realJJ housingNN needsNNS ,"root(ROOT-0, took-9) det(reduction-3, The-1) amod(reduction-3, major-2) nsubj(took-9, reduction-3) case(investment-6, in-4) amod(investment-6, public-5) nmod:in(reduction-3, investment-6) case(housing-8, in-7) nmod:in(investment-6, housing-8) dobj(took-9, place-10) case(Labour-13, under-11) det(Labour-13, a-12) nmod:under(took-9, Labour-13) punct(took-9, ,-14) neg(Government-18, not-15) det(Government-18, a-16) amod(Government-18, Conservative-17) nsubj(ignore-26, Government-18) punct(Government-18, ,-19) cc(Government-18, and-20) det(Gentleman-23, the-21) compound(Gentleman-23, hon.-22) nmod:poss(statistics-25, Gentleman-23) case(Gentleman-23, 's-24) conj:and(Government-18, statistics-25) nsubj(ignore-26, statistics-25) ccomp(took-9, ignore-26) det(recovery-28, the-27) dobj(ignore-26, recovery-28) case(sector-33, in-29) det(sector-33, the-30) amod(sector-33, private-31) compound(sector-33, housebuilding-32) nmod:in(recovery-28, sector-33) punct(recovery-28, ,-34) nsubj(meets-36, which-35) acl:relcl(recovery-28, meets-36) amod(needs-39, real-37) compound(needs-39, housing-38) dobj(meets-36, needs-39) punct(took-9, .-40)",1,0,0,"root(ROOT, took) det(redction, The) amod(redction, major) nsbj(took, redction) case(investment, in) amod(investment, pblic) nmod:in(redction, investment) case(hosing, in) nmod:in(investment, hosing) dobj(took, place) case(Labor, nder) det(Labor, a) nmod:nder(took, Labor) pnct(took, ,) neg(Government, not) det(Government, a) amod(Government, Conservative) nsbj(ignore, Government) pnct(Government, ,) cc(Government, and) det(Gentleman, the) compond(Gentleman, hon.) nmod:poss(statistics, Gentleman) ""case(Gentleman, s)"", conj:and(Government, statistics) nsbj(ignore, statistics) ccomp(took, ignore) det(recovery, the) dobj(ignore, recovery) case(sector, in) det(sector, the) amod(sector, private) compond(sector, hosebilding) nmod:in(recovery, sector) pnct(recovery, ,) nsbj(meets, which) acl:relcl(recovery, meets) amod(needs, real) compond(needs, hosing) dobj(meets, needs) pnct(took, .)","root(,VBD) det(NN,DT) amod(NN,JJ) nsbj(VBD,NN) case(NN,IN) amod(NN,JJ) nmod:in(NN,NN) case(NN,IN) nmod:in(NN,NN) dobj(VBD,NN) case(NNP,IN) det(NNP,DT) nmod:nder(VBD,NNP) pnct(VBD,VBD) neg(NN,RB) det(NN,DT) amod(NN,JJ) nsbj(VBP,NN) pnct(NN,NN) cc(NN,CC) det(NNP,DT) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) conj:and(NN,NNS) nsbj(VBP,NNS) ccomp(VBD,VBP) det(NN,DT) dobj(VBP,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:in(NN,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) amod(NNS,JJ) compond(NNS,NN) dobj(VBZ,NNS) pnct(VBD,VBD)","[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]","[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]",5,"[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]","[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]",NNS_needs NN_investment NNP_Gentleman NN_reduction VBZ_meets NN_sector NN_recovery NNP_Government NN_place JJ_Conservative VBD_took VB_ignore NNS_statistics CC_and JJ_Labour RB_not ,"[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]","[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]",NNS_needs NN_investment NNP_Gentleman NN_reduction VBZ_meets NN_sector NN_recovery NNP_Government NN_place JJ_Conservative VBD_took VB_ignore NNS_statistics CC_and JJ_Labour RB_not ,"[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]",NNS_needs NN_investment NNP_Gentleman NN_reduction VBZ_meets NN_sector NN_recovery NNP_Government NN_place JJ_Conservative VBD_took VB_ignore NNS_statistics CC_and JJ_Labour RB_not ,"[ , needs, investment, Gentleman, reduction, meets, sector, recovery, Government, place, Conservative, took, ignore, statistics, and, Labour, ROOT, not]",NNS_needs NN_investment NNP_Gentleman NN_reduction VBZ_meets NN_sector NN_recovery NNP_Government NN_place JJ_Conservative VBD_took VB_ignore NNS_statistics CC_and JJ_Labour RB_not ,3,2,2,2,1,2,2,2,2,2
Will my hon. Friend say to the House that the way that Labour Members  especially in the way they make references to members of the Royal Family  seek to distort the facts and mislead our nation is shameful?,WillMD myPRP$ honNN FriendNNP sayVBP toTO theDT HouseNNP thatIN theDT wayNN thatIN LabourNNP MembersNNPS especiallyRB inIN theDT wayNN theyPRP makeVBP referencesNNS toTO membersNNS ofIN theDT RoyalNNP FamilyNNP seekNN toTO distortVB theDT factsNNS andCC misleadVB ourPRP$ nationNN isVBZ shamefulJJ ,"root(ROOT-0, say-5) aux(say-5, Will-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(say-5, Friend-4) case(House-8, to-6) det(House-8, the-7) nmod:to(say-5, House-8) root(House-8, that-9) det(way-11, the-10) root(that-9, way-11) mark(seek-30, that-12) compound(Members-14, Labour-13) nsubj(seek-30, Members-14) punct(Members-14, ,-15) advmod(way-19, especially-16) case(way-19, in-17) det(way-19, the-18) nmod:in(Members-14, way-19) nsubj(make-21, they-20) acl:relcl(way-19, make-21) dobj(make-21, references-22) case(members-24, to-23) nmod:to(references-22, members-24) case(Family-28, of-25) det(Family-28, the-26) compound(Family-28, Royal-27) nmod:of(members-24, Family-28) punct(Members-14, ,-29) ccomp(way-11, seek-30) mark(distort-32, to-31) xcomp(seek-30, distort-32) det(facts-34, the-33) dobj(distort-32, facts-34) cc(distort-32, and-35) xcomp(seek-30, mislead-36) conj:and(distort-32, mislead-36) nmod:poss(nation-38, our-37) nsubj(shameful-40, nation-38) cop(shameful-40, is-39) ccomp(mislead-36, shameful-40) punct(way-11, ?-41)",1,0,0,"root(ROOT, say) ax(say, Will) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(say, Friend) case(Hose, to) det(Hose, the) nmod:to(say, Hose) root(Hose, that) det(way, the) root(that, way) mark(seek, that) compond(Members, Labor) nsbj(seek, Members) pnct(Members, ,) advmod(way, especially) case(way, in) det(way, the) nmod:in(Members, way) nsbj(make, they) acl:relcl(way, make) dobj(make, references) case(members, to) nmod:to(references, members) case(Family, of) det(Family, the) compond(Family, Royal) nmod:of(members, Family) pnct(Members, ,) ccomp(way, seek) mark(distort, to) xcomp(seek, distort) det(facts, the) dobj(distort, facts) cc(distort, and) xcomp(seek, mislead) conj:and(distort, mislead) nmod:poss(nation, or) nsbj(shamefl, nation) cop(shamefl, is) ccomp(mislead, shamefl) pnct(way, ?)","root(,VBP) ax(VBP,MD) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBP,NNP) case(NNP,TO) det(NNP,DT) nmod:to(VBP,NNP) root(NNP,IN) det(NN,DT) root(IN,NN) mark(NN,IN) compond(NNPS,NNP) nsbj(NN,NNPS) pnct(NNPS,NNPS) advmod(NN,RB) case(NN,IN) det(NN,DT) nmod:in(NNPS,NN) nsbj(VBP,PRP) acl:relcl(NN,VBP) dobj(VBP,NNS) case(NNS,TO) nmod:to(NNS,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NNS,NNP) pnct(NNPS,NNPS) ccomp(NN,NN) mark(VB,TO) xcomp(NN,VB) det(NNS,DT) dobj(VB,NNS) cc(VB,CC) xcomp(NN,VB) conj:and(VB,VB) nmod:poss(NN,PRP$) nsbj(JJ,NN) cop(JJ,VBZ) ccomp(VB,JJ) pnct(NN,NN)","[seek, House, say, Friend, ROOT, my, way, Members]","[seek, House, say, Friend, ROOT, my, way, Members]",7,"[way, seek, Members]","[way, seek, Members]",VB_seek NNP_House VB_say NNP_Friend PRP$_my NN_way NNS_Members ,"[seek, House, say, Friend, ROOT, my, way, Members]","[seek, House, say, Friend, ROOT, my, way, Members]",VB_seek NNP_House VB_say NNP_Friend PRP$_my NN_way NNS_Members ,"[seek, House, say, Friend, ROOT, my, way, Members]",VB_seek NNP_House VB_say NNP_Friend PRP$_my NN_way NNS_Members ,"[seek, House, say, Friend, ROOT, my, way, Members]",VB_seek NNP_House VB_say NNP_Friend PRP$_my NN_way NNS_Members ,1,2,2,0,0,0,0,0,0,0
Shut up  you old windbag.,ShutNNP upRP youPRP oldJJ windbagNN ,"root(ROOT-0, windbag-6) advcl(windbag-6, Shut-1) compound:prt(Shut-1, up-2) punct(windbag-6, ,-3) nsubj(windbag-6, you-4) amod(windbag-6, old-5) punct(windbag-6, .-7)",0,0,0,"root(ROOT, windbag) advcl(windbag, Sht) compond:prt(Sht, p) pnct(windbag, ,) nsbj(windbag, yo) amod(windbag, old) pnct(windbag, .)","root(,NN) advcl(NN,NNP) compond:prt(NNP,RP) pnct(NN,NN) nsbj(NN,PRP) amod(NN,JJ) pnct(NN,NN)",[ ],[ ],10,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Well  that is the pot calling the kettle black.,WellRB thatDT isVBZ theDT potNN callingVBG theDT kettleNN blackJJ ,"root(ROOT-0, pot-6) advmod(pot-6, Well-1) punct(pot-6, ,-2) nsubj(pot-6, that-3) cop(pot-6, is-4) det(pot-6, the-5) acl(pot-6, calling-7) det(kettle-9, the-8) nsubj(black-10, kettle-9) xcomp(calling-7, black-10) punct(pot-6, .-11)",0,0,0,"root(ROOT, pot) advmod(pot, Well) pnct(pot, ,) nsbj(pot, that) cop(pot, is) det(pot, the) acl(pot, calling) det(kettle, the) nsbj(black, kettle) xcomp(calling, black) pnct(pot, .)","root(,NN) advmod(NN,RB) pnct(NN,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) acl(NN,VBG) det(NN,DT) nsbj(JJ,NN) xcomp(VBG,JJ) pnct(NN,NN)",[ ],[ ],11,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,1,0,0,0,0,0,0,0
Is it not shameful how the hon. Gentleman will seek to use our royal family.,IsVBZ itPRP notRB shamefulVB howWRB theDT honNN GentlemanNNP willMD seekVB toTO useVB ourPRP$ royalNNS familyNN ,"root(ROOT-0, shameful-4) cop(shameful-4, Is-1) nsubj(shameful-4, it-2) neg(shameful-4, not-3) advmod(seek-10, how-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nsubj(seek-10, Gentleman-8) aux(seek-10, will-9) ccomp(shameful-4, seek-10) mark(use-12, to-11) xcomp(seek-10, use-12) nmod:poss(family-15, our-13) amod(family-15, royal-14) dobj(use-12, family-15) punct(shameful-4, .-16)",1,0,1,"root(ROOT, shamefl) cop(shamefl, Is) nsbj(shamefl, it) neg(shamefl, not) advmod(seek, how) det(Gentleman, the) compond(Gentleman, hon.) nsbj(seek, Gentleman) ax(seek, will) ccomp(shamefl, seek) mark(se, to) xcomp(seek, se) nmod:poss(family, or) amod(family, royal) dobj(se, family) pnct(shamefl, .)","root(,VB) cop(VB,VBZ) nsbj(VB,PRP) neg(VB,RB) advmod(VB,WRB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(VB,VB) mark(VB,TO) xcomp(VB,VB) nmod:poss(NN,PRP$) amod(NN,NNS) dobj(VB,NN) pnct(VB,VB)","[shameful, how, Gentleman, seek, use]","[shameful, how, Gentleman, seek, use]",12,[ ],[ ],JJ_shameful WRB_how NNP_Gentleman VB_seek NN_use ,"[shameful, how, Gentleman, seek, use]","[shameful, how, Gentleman, seek, use]",JJ_shameful WRB_how NNP_Gentleman VB_seek NN_use ,"[shameful, how, Gentleman, seek, use]",JJ_shameful WRB_how NNP_Gentleman VB_seek NN_use ,"[shameful, how, Gentleman, seek, use]",JJ_shameful WRB_how NNP_Gentleman VB_seek NN_use ,1,2,2,2,1,2,2,2,2,2
Arithmetically  my hon. Friend is correct.,ArithmeticallyRB myPRP$ honNN FriendNNP isVBZ correctJJ ,"root(ROOT-0, correct-7) advmod(correct-7, Arithmetically-1) punct(correct-7, ,-2) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) nsubj(correct-7, Friend-5) cop(correct-7, is-6) punct(correct-7, .-8)",1,0,0,"root(ROOT, correct) advmod(correct, Arithmetically) pnct(correct, ,) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(correct, Friend) cop(correct, is) pnct(correct, .)","root(,JJ) advmod(JJ,RB) pnct(JJ,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) pnct(JJ,JJ)","[ROOT, Friend, Arithmetically, my, correct]","[ROOT, Friend, Arithmetically, my, correct]",12,"[ROOT, Friend, Arithmetically, my, correct]",[ ],NNP_Friend RB_Arithmetically PRP$_my JJ_correct ,"[ROOT, Friend, Arithmetically, my, correct]","[ROOT, Friend, Arithmetically, my, correct]",NNP_Friend RB_Arithmetically PRP$_my JJ_correct ,"[ROOT, Friend, Arithmetically, my, correct]",NNP_Friend RB_Arithmetically PRP$_my JJ_correct ,"[ROOT, Friend, Arithmetically, my, correct]",NNP_Friend RB_Arithmetically PRP$_my JJ_correct ,1,1,1,1,1,1,1,1,1,1
Does the Minister accept  notwithstanding the figures that he used earlier  that in the best year of the national housebuilding programme under this Government there were 50 000 fewer new dwellings than in the worst year under the Labour Government?,DoesVBZ theDT MinisterNNP acceptNN notwithstandingVBG theDT figuresNNS thatIN hePRP usedVBD earlierRBR thatIN inIN theDT bestJJS yearNN ofIN theDT nationalJJ housebuildingNN programmeNN underIN thisDT GovernmentNNP thereEX wereVBD 50CD 000CD fewerJJR newJJ dwellingsNNS thanIN inIN theDT worstJJS yearNN underIN theDT LabourJJ GovernmentNN ,"root(ROOT-0, accept-4) aux(accept-4, Does-1) det(Minister-3, the-2) nsubj(accept-4, Minister-3) punct(accept-4, ,-5) case(figures-8, notwithstanding-6) det(figures-8, the-7) nmod:notwithstanding(accept-4, figures-8) mark(used-11, that-9) nsubj(used-11, he-10) ccomp(figures-8, used-11) advmod(used-11, earlier-12) punct(used-11, ,-13) mark(were-28, that-14) case(year-18, in-15) det(year-18, the-16) amod(year-18, best-17) nmod:in(were-28, year-18) case(programme-23, of-19) det(programme-23, the-20) amod(programme-23, national-21) compound(programme-23, housebuilding-22) nmod:of(year-18, programme-23) case(Government-26, under-24) det(Government-26, this-25) nmod:under(year-18, Government-26) expl(were-28, there-27) ccomp(used-11, were-28) nummod(dwellings-32, 50,000-29) amod(dwellings-32, fewer-30) amod(dwellings-32, new-31) nsubj(were-28, dwellings-32) case(year-37, than-33) case(year-37, in-34) det(year-37, the-35) amod(year-37, worst-36) acl:in(dwellings-32, year-37) case(Government-41, under-38) det(Government-41, the-39) compound(Government-41, Labour-40) nmod:under(dwellings-32, Government-41) punct(accept-4, ?-42)",1,0,0,"root(ROOT, accept) ax(accept, Does) det(Minister, the) nsbj(accept, Minister) pnct(accept, ,) case(figres, notwithstanding) det(figres, the) nmod:notwithstanding(accept, figres) mark(sed, that) nsbj(sed, he) ccomp(figres, sed) advmod(sed, earlier) pnct(sed, ,) mark(were, that) case(year, in) det(year, the) amod(year, best) nmod:in(were, year) case(programme, of) det(programme, the) amod(programme, national) compond(programme, hosebilding) nmod:of(year, programme) case(Government, nder) det(Government, this) nmod:nder(year, Government) expl(were, there) ccomp(sed, were) nmmod(dwellings, 50,000) amod(dwellings, fewer) amod(dwellings, new) nsbj(were, dwellings) case(year, than) case(year, in) det(year, the) amod(year, worst) acl:in(dwellings, year) case(Government, nder) det(Government, the) compond(Government, Labor) nmod:nder(dwellings, Government) pnct(accept, ?)","root(,NN) ax(NN,VBZ) det(NNP,DT) nsbj(NN,NNP) pnct(NN,NN) case(NNS,VBG) det(NNS,DT) nmod:notwithstanding(NN,NNS) mark(VBD,IN) nsbj(VBD,PRP) ccomp(NNS,VBD) advmod(VBD,RBR) pnct(VBD,VBD) mark(VBD,IN) case(NN,IN) det(NN,DT) amod(NN,JJS) nmod:in(VBD,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:nder(NN,NN) expl(VBD,EX) ccomp(VBD,VBD) nmmod(NNS,NNS) amod(NNS,JJR) amod(NNS,JJ) nsbj(VBD,NNS) case(NN,IN) case(NN,IN) det(NN,DT) amod(NN,JJS) acl:in(NNS,NN) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:nder(NNS,NN) pnct(NN,NN)","[earlier, Government, 50 , year, new, fewer, dwellings, programme, accept, he, figures, year, were, Minister, best, ROOT, Government, used]","[earlier, Government, 50 , year, new, fewer, dwellings, programme, accept, he, figures, year, were, Minister, best, ROOT, Government, used]",14,"[programme, earlier, he, used, figures, 50 , best, Government, year, were, year, new, Government, fewer, dwellings]","[programme, earlier, he, used, figures, 50 , best, Government, year, were, year, new, Government, fewer, dwellings]",RBR_earlier NNP_Government CD_50 NN_year JJ_new JJR_fewer NNS_dwellings NN_programme VBD_accept PRP_he NNS_figures NN_year VBD_were NNP_Minister JJS_best NNP_Government VBN_used ,"[earlier, Government, 50 , year, new, fewer, dwellings, programme, accept, he, figures, year, were, Minister, best, ROOT, Government, used]","[earlier, Government, 50 , year, new, fewer, dwellings, programme, accept, he, figures, year, were, Minister, best, ROOT, Government, used]",RBR_earlier NNP_Government CD_50 NN_year JJ_new JJR_fewer NNS_dwellings NN_programme VBD_accept PRP_he NNS_figures NN_year VBD_were NNP_Minister JJS_best NNP_Government VBN_used ,"[earlier, Government, 50 , year, new, fewer, dwellings, programme, accept, he, figures, year, were, Minister, best, ROOT, Government, used]",RBR_earlier NNP_Government CD_50 NN_year JJ_new JJR_fewer NNS_dwellings NN_programme VBD_accept PRP_he NNS_figures NN_year VBD_were NNP_Minister JJS_best NNP_Government VBN_used ,"[earlier, Government, 50 , year, new, fewer, dwellings, programme, accept, he, figures, year, were, Minister, best, ROOT, Government, used]",RBR_earlier NNP_Government CD_50 NN_year JJ_new JJR_fewer NNS_dwellings NN_programme VBD_accept PRP_he NNS_figures NN_year VBD_were NNP_Minister JJS_best NNP_Government VBN_used ,2,2,2,1,1,1,2,0,1,2
I suspect that the figure that the hon. Gentleman gave was just for the public sector.,IPRP suspectVBP thatIN theDT figureNN thatIN theDT honNN GentlemanNNP gaveVBD wasVBD justRB forIN theDT publicNN sectorNN ,"root(ROOT-0, suspect-2) nsubj(suspect-2, I-1) mark(sector-16, that-3) det(figure-5, the-4) nsubj(sector-16, figure-5) dobj(gave-10, that-6) det(Gentleman-9, the-7) compound(Gentleman-9, hon.-8) nsubj(gave-10, Gentleman-9) acl:relcl(figure-5, gave-10) cop(sector-16, was-11) advmod(sector-16, just-12) case(sector-16, for-13) det(sector-16, the-14) amod(sector-16, public-15) ccomp(suspect-2, sector-16) punct(suspect-2, .-17)",1,0,1,"root(ROOT, sspect) nsbj(sspect, I) mark(sector, that) det(figre, the) nsbj(sector, figre) dobj(gave, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(gave, Gentleman) acl:relcl(figre, gave) cop(sector, was) advmod(sector, jst) case(sector, for) det(sector, the) amod(sector, pblic) ccomp(sspect, sector) pnct(sspect, .)","root(,VBP) nsbj(VBP,PRP) mark(NN,IN) det(NN,DT) nsbj(NN,NN) dobj(VBD,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) acl:relcl(NN,VBD) cop(NN,VBD) advmod(NN,RB) case(NN,IN) det(NN,DT) amod(NN,NN) ccomp(VBP,NN) pnct(VBP,VBP)","[gave, that, figure, Gentleman]","[gave, that, figure, Gentleman]",17,"[gave, that, figure, Gentleman]","[gave, that, figure, Gentleman]",VBD_gave IN_that NN_figure NNP_Gentleman ,"[gave, that, figure, Gentleman]","[gave, that, figure, Gentleman]",VBD_gave IN_that NN_figure NNP_Gentleman ,"[gave, that, figure, Gentleman]",VBD_gave IN_that NN_figure NNP_Gentleman ,"[gave, that, figure, Gentleman]",VBD_gave IN_that NN_figure NNP_Gentleman ,2,2,2,0,0,0,0,0,0,0
Does my right hon. and learned Friend agree that the concerns and attitudes of our European allies  including the Socialist Governments of Spain and France  show that the policies of the Labour party are out of touch with European as well as United States opinion and will undermine rather than assist arms control?,DoesNNP myPRP$ rightNN honNN andCC learnedVBD FriendNNP agreeVBP thatIN theDT concernsNNS andCC attitudesNNS ofIN ourPRP$ EuropeanJJ alliesNNS includingVBG theDT SocialistJJ GovernmentsNNP ofIN SpainNNP andCC FranceNNP showVBP thatIN theDT policiesNNS ofIN theDT LabourNNP partyNN areVBP outIN ofIN touchNN withIN EuropeanJJ asRB wellRB asIN UnitedNNP StatesNNPS opinionNN andCC willMD undermineVB ratherRB thanIN assistVB armsNNS controlNN ,"root(ROOT-0, Does-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) dobj(Does-1, hon.-4) cc(Does-1, and-5) dep(agree-8, learned-6) nsubj(agree-8, Friend-7) conj:and(Does-1, agree-8) mark(show-28, that-9) det(concerns-11, the-10) nsubj(show-28, concerns-11) cc(concerns-11, and-12) conj:and(concerns-11, attitudes-13) nsubj(show-28, attitudes-13) case(allies-17, of-14) nmod:poss(allies-17, our-15) amod(allies-17, European-16) nmod:of(concerns-11, allies-17) punct(allies-17, ,-18) case(Governments-22, including-19) det(Governments-22, the-20) compound(Governments-22, Socialist-21) nmod:including(allies-17, Governments-22) case(Spain-24, of-23) nmod:of(Governments-22, Spain-24) cc(Spain-24, and-25) nmod:of(Governments-22, France-26) conj:and(Spain-24, France-26) punct(concerns-11, ,-27) ccomp(agree-8, show-28) mark(touch-39, that-29) det(policies-31, the-30) nsubj(touch-39, policies-31) nsubj(undermine-50, policies-31) case(party-35, of-32) det(party-35, the-33) compound(party-35, Labour-34) nmod:of(policies-31, party-35) cop(touch-39, are-36) case(touch-39, out-37) mwe(out-37, of-38) ccomp(show-28, touch-39) case(European-41, with-40) nmod:with(touch-39, European-41) cc(European-41, as-42) mwe(as-42, well-43) mwe(as-42, as-44) compound(opinion-47, United-45) compound(opinion-47, States-46) nmod:with(touch-39, opinion-47) conj:and(European-41, opinion-47) cc(touch-39, and-48) aux(undermine-50, will-49) ccomp(show-28, undermine-50) conj:and(touch-39, undermine-50) mark(assist-53, rather-51) mwe(rather-51, than-52) xcomp(undermine-50, assist-53) compound(control-55, arms-54) dobj(assist-53, control-55) punct(Does-1, ?-56)",1,0,0,"root(ROOT, Does) nmod:poss(hon., my) amod(hon., right) dobj(Does, hon.) cc(Does, and) dep(agree, learned) nsbj(agree, Friend) conj:and(Does, agree) mark(show, that) det(concerns, the) nsbj(show, concerns) cc(concerns, and) conj:and(concerns, attitdes) nsbj(show, attitdes) case(allies, of) nmod:poss(allies, or) amod(allies, Eropean) nmod:of(concerns, allies) pnct(allies, ,) case(Governments, inclding) det(Governments, the) compond(Governments, Socialist) nmod:inclding(allies, Governments) case(Spain, of) nmod:of(Governments, Spain) cc(Spain, and) nmod:of(Governments, France) conj:and(Spain, France) pnct(concerns, ,) ccomp(agree, show) mark(toch, that) det(policies, the) nsbj(toch, policies) nsbj(ndermine, policies) case(party, of) det(party, the) compond(party, Labor) nmod:of(policies, party) cop(toch, are) case(toch, ot) mwe(ot, of) ccomp(show, toch) case(Eropean, with) nmod:with(toch, Eropean) cc(Eropean, as) mwe(as, well) mwe(as, as) compond(opinion, United) compond(opinion, States) nmod:with(toch, opinion) conj:and(Eropean, opinion) cc(toch, and) ax(ndermine, will) ccomp(show, ndermine) conj:and(toch, ndermine) mark(assist, rather) mwe(rather, than) xcomp(ndermine, assist) compond(control, arms) dobj(assist, control) pnct(Does, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(PRP$,NN) dobj(NNP,NNP) cc(NNP,CC) dep(VBP,VBD) nsbj(VBP,NNP) conj:and(NNP,VBP) mark(VBP,IN) det(NNS,DT) nsbj(VBP,NNS) cc(NNS,CC) conj:and(NNS,NNS) nsbj(VBP,NNS) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:of(NNS,NNS) pnct(NNS,NNS) case(NNP,VBG) det(NNP,DT) compond(NNP,JJ) nmod:inclding(NNS,NNP) case(NNP,IN) nmod:of(NNP,NNP) cc(NNP,CC) nmod:of(NNP,NNP) conj:and(NNP,NNP) pnct(NNS,NNS) ccomp(VBP,VBP) mark(NN,IN) det(NNS,DT) nsbj(NN,NNS) nsbj(VB,NNS) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:of(NNS,NN) cop(NN,VBP) case(NN,IN) mwe(IN,IN) ccomp(VBP,NN) case(JJ,IN) nmod:with(NN,JJ) cc(JJ,IN) mwe(IN,RB) mwe(IN,IN) compond(NN,NNP) compond(NN,NNPS) nmod:with(NN,NN) conj:and(JJ,NN) cc(NN,CC) ax(VB,MD) ccomp(VBP,VB) conj:and(NN,VB) mark(VB,RB) mwe(RB,IN) xcomp(VB,VB) compond(NN,NNS) dobj(VB,NN) pnct(NNP,NNP)","[Friend, agree, show, learned, policies, party]","[Friend, agree, show, learned, policies, party]",18,"[Friend, agree, show, learned, policies, party]","[Friend, agree, show, learned, policies, party]",NNP_Friend VB_agree VBP_show VBD_learned NNS_policies NN_party ,"[Friend, agree, show, learned, policies, party]","[Friend, agree, show, learned, policies, party]",NNP_Friend VB_agree VBP_show VBD_learned NNS_policies NN_party ,"[Friend, agree, show, learned, policies, party]",NNP_Friend VB_agree VBP_show VBD_learned NNS_policies NN_party ,"[Friend, agree, show, learned, policies, party]",NNP_Friend VB_agree VBP_show VBD_learned NNS_policies NN_party ,3,2,2,0,0,0,0,0,0,0
The attitude of Socialist Governments throughout Europe shows how far from reality the Labour party now finds itself.,TheDT attitudeNN ofIN SocialistJJ GovernmentsNNS throughoutIN EuropeNNP showsVBZ howWRB farRB fromIN realityNN theDT LabourNNP partyNN nowRB findsVBZ itselfPRP ,"root(ROOT-0, shows-8) det(attitude-2, The-1) nsubj(shows-8, attitude-2) case(Governments-5, of-3) compound(Governments-5, Socialist-4) nmod:of(attitude-2, Governments-5) case(Europe-7, throughout-6) nmod:throughout(attitude-2, Europe-7) advmod(far-10, how-9) advmod(shows-8, far-10) case(reality-12, from-11) nmod:from(far-10, reality-12) det(party-15, the-13) compound(party-15, Labour-14) nsubj(finds-17, party-15) advmod(finds-17, now-16) acl:relcl(reality-12, finds-17) dobj(finds-17, itself-18) punct(shows-8, .-19)",1,0,1,"root(ROOT, shows) det(attitde, The) nsbj(shows, attitde) case(Governments, of) compond(Governments, Socialist) nmod:of(attitde, Governments) case(Erope, throghot) nmod:throghot(attitde, Erope) advmod(far, how) advmod(shows, far) case(reality, from) nmod:from(far, reality) det(party, the) compond(party, Labor) nsbj(finds, party) advmod(finds, now) acl:relcl(reality, finds) dobj(finds, itself) pnct(shows, .)","root(,VBZ) det(NN,DT) nsbj(VBZ,NN) case(NNS,IN) compond(NNS,JJ) nmod:of(NN,NNS) case(NNP,IN) nmod:throghot(NN,NNP) advmod(RB,WRB) advmod(VBZ,RB) case(NN,IN) nmod:from(RB,NN) det(NN,DT) compond(NN,NNP) nsbj(VBZ,NN) advmod(VBZ,RB) acl:relcl(NN,VBZ) dobj(VBZ,PRP) pnct(VBZ,VBZ)","[party, finds]","[party, finds]",3,"[party, finds]","[party, finds]",NN_party VBZ_finds ,"[party, finds]","[party, finds]",NN_party VBZ_finds ,"[party, finds]",NN_party VBZ_finds ,"[party, finds]",NN_party VBZ_finds ,3,2,2,0,0,0,0,0,0,0
Are the Government now going back on their oft repeated statements that cruise and Pershing deployment could be halted  reduced or totally eliminated if the Soviet Union was prepared to remove its SS20 missiles?,AreIN theDT GovernmentNNP nowRB goingVBG backRB onIN theirPRP$ oftJJ repeatedVBN statementsNNS thatWDT cruiseVBP andCC PershingNNP deploymentNN couldMD beVB haltedVBN reducedJJ orCC totallyRB eliminatedVBN ifIN theDT SovietNNP UnionNNP wasVBD preparedVBN toTO removeVB itsPRP$ SS20NNP missilesNNS ,"root(ROOT-0, going-5) aux(going-5, Are-1) det(Government-3, the-2) nsubj(going-5, Government-3) advmod(going-5, now-4) advmod(going-5, back-6) case(oft-9, on-7) nmod:poss(oft-9, their-8) nmod:on(going-5, oft-9) xcomp(going-5, repeated-10) dobj(repeated-10, statements-11) mark(halted-19, that-12) nsubjpass(halted-19, cruise-13) nsubjpass(reduced-21, cruise-13) nsubjpass(eliminated-24, cruise-13) cc(cruise-13, and-14) compound(deployment-16, Pershing-15) conj:and(cruise-13, deployment-16) nsubjpass(halted-19, deployment-16) aux(halted-19, could-17) auxpass(halted-19, be-18) ccomp(statements-11, halted-19) punct(halted-19, ,-20) ccomp(statements-11, reduced-21) conj:or(halted-19, reduced-21) cc(halted-19, or-22) advmod(eliminated-24, totally-23) ccomp(statements-11, eliminated-24) conj:or(halted-19, eliminated-24) mark(prepared-30, if-25) det(Union-28, the-26) compound(Union-28, Soviet-27) nsubjpass(prepared-30, Union-28) auxpass(prepared-30, was-29) advcl(halted-19, prepared-30) mark(remove-32, to-31) xcomp(prepared-30, remove-32) nmod:poss(missiles-35, its-33) compound(missiles-35, SS20-34) dobj(remove-32, missiles-35) punct(going-5, ?-36)",1,0,0,"root(ROOT, going) ax(going, Are) det(Government, the) nsbj(going, Government) advmod(going, now) advmod(going, back) case(oft, on) nmod:poss(oft, their) nmod:on(going, oft) xcomp(going, repeated) dobj(repeated, statements) mark(halted, that) nsbjpass(halted, crise) nsbjpass(redced, crise) nsbjpass(eliminated, crise) cc(crise, and) compond(deployment, Pershing) conj:and(crise, deployment) nsbjpass(halted, deployment) ax(halted, cold) axpass(halted, be) ccomp(statements, halted) pnct(halted, ,) ccomp(statements, redced) conj:or(halted, redced) cc(halted, or) advmod(eliminated, totally) ccomp(statements, eliminated) conj:or(halted, eliminated) mark(prepared, if) det(Union, the) compond(Union, Soviet) nsbjpass(prepared, Union) axpass(prepared, was) advcl(halted, prepared) mark(remove, to) xcomp(prepared, remove) nmod:poss(missiles, its) compond(missiles, SS20) dobj(remove, missiles) pnct(going, ?)","root(,VBG) ax(VBG,IN) det(NNP,DT) nsbj(VBG,NNP) advmod(VBG,RB) advmod(VBG,RB) case(JJ,IN) nmod:poss(JJ,PRP$) nmod:on(VBG,JJ) xcomp(VBG,VBN) dobj(VBN,NNS) mark(VBN,WDT) nsbjpass(VBN,VBP) nsbjpass(JJ,VBP) nsbjpass(VBN,VBP) cc(VBP,CC) compond(NN,NNP) conj:and(VBP,NN) nsbjpass(VBN,NN) ax(VBN,MD) axpass(VBN,VB) ccomp(NNS,VBN) pnct(VBN,VBN) ccomp(NNS,JJ) conj:or(VBN,JJ) cc(VBN,CC) advmod(VBN,RB) ccomp(NNS,VBN) conj:or(VBN,VBN) mark(VBN,IN) det(NNP,DT) compond(NNP,NNP) nsbjpass(VBN,NNP) axpass(VBN,VBD) advcl(VBN,VBN) mark(VB,TO) xcomp(VBN,VB) nmod:poss(NNS,PRP$) compond(NNS,NNP) dobj(VB,NNS) pnct(VBG,VBG)","[Government, back, repeated, ROOT, oft, now, going]","[Government, back, repeated, ROOT, oft, now, going]",4,[ ],[ ],NNP_Government JJ_back VBN_repeated JJ_oft RB_now VBG_going ,"[Government, back, repeated, ROOT, oft, now, going]","[Government, back, repeated, ROOT, oft, now, going]",NNP_Government JJ_back VBN_repeated JJ_oft RB_now VBG_going ,"[Government, back, repeated, ROOT, oft, now, going]",NNP_Government JJ_back VBN_repeated JJ_oft RB_now VBG_going ,"[Government, back, repeated, ROOT, oft, now, going]",NNP_Government JJ_back VBN_repeated JJ_oft RB_now VBG_going ,2,2,2,0,0,0,0,0,0,0
I am only disappointed that the hon. Gentleman  careful student that he is of the observations of the Secretary General of NATO  had not studied so closely my own observations in the debate on 14 November  when I stated plainly that the Government have no doubt about the legitimacy of going for the zero zero agreement on the basis discussed at Reykjavik.,IPRP amVBP onlyRB disappointedJJ thatIN theDT honNN GentlemanNNP carefulJJ studentNN thatIN hePRP isVBZ ofIN theDT observationsNNS ofIN theDT SecretaryNNP GeneralNNP ofIN NATONNP hadVBD notRB studiedVBN soRB closelyRB myPRP$ ownJJ observationsNNS inIN theDT debateNN onIN 14CD NovemberNNP whenWRB IPRP statedVBD plainlyRB thatIN theDT GovernmentNNP haveVBP noDT doubtNN aboutIN theDT legitimacyNN ofIN goingVBG forIN theDT zeroNN zeroCD agreementNN onIN theDT basisNN discussedVBD atIN ReykjavikNNP ,"root(ROOT-0, disappointed-4) nsubj(disappointed-4, I-1) cop(disappointed-4, am-2) advmod(disappointed-4, only-3) dep(disappointed-4, that-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) dep(that-5, Gentleman-8) punct(Gentleman-8, ,-9) amod(student-11, careful-10) appos(Gentleman-8, student-11) mark(observations-17, that-12) nsubj(observations-17, he-13) cop(observations-17, is-14) case(observations-17, of-15) det(observations-17, the-16) dep(student-11, observations-17) case(General-21, of-18) det(General-21, the-19) compound(General-21, Secretary-20) nmod:of(observations-17, General-21) case(NATO-23, of-22) nmod:of(General-21, NATO-23) punct(observations-17, ,-24) aux(studied-27, had-25) neg(studied-27, not-26) dep(observations-17, studied-27) advmod(closely-29, so-28) advmod(observations-32, closely-29) nmod:poss(observations-32, my-30) amod(observations-32, own-31) dobj(studied-27, observations-32) case(debate-35, in-33) det(debate-35, the-34) nmod:in(observations-32, debate-35) case(November-38, on-36) nummod(November-38, 14-37) nmod:on(debate-35, November-38) punct(observations-32, ,-39) advmod(stated-42, when-40) nsubj(stated-42, I-41) acl:relcl(observations-32, stated-42) advmod(stated-42, plainly-43) mark(have-47, that-44) det(Government-46, the-45) nsubj(have-47, Government-46) ccomp(stated-42, have-47) neg(doubt-49, no-48) dobj(have-47, doubt-49) case(legitimacy-52, about-50) det(legitimacy-52, the-51) nmod:about(doubt-49, legitimacy-52) mark(going-54, of-53) acl(legitimacy-52, going-54) case(agreement-59, for-55) det(agreement-59, the-56) nummod(agreement-59, zero-57) nummod(agreement-59, zero-58) nmod:for(going-54, agreement-59) case(basis-62, on-60) det(basis-62, the-61) nmod:on(agreement-59, basis-62) acl(basis-62, discussed-63) case(Reykjavik-65, at-64) nmod:at(discussed-63, Reykjavik-65) punct(disappointed-4, .-66)",1,0,0,"root(ROOT, disappointed) nsbj(disappointed, I) cop(disappointed, am) advmod(disappointed, only) dep(disappointed, that) det(Gentleman, the) compond(Gentleman, hon.) dep(that, Gentleman) pnct(Gentleman, ,) amod(stdent, carefl) appos(Gentleman, stdent) mark(observations, that) nsbj(observations, he) cop(observations, is) case(observations, of) det(observations, the) dep(stdent, observations) case(General, of) det(General, the) compond(General, Secretary) nmod:of(observations, General) case(NATO, of) nmod:of(General, NATO) pnct(observations, ,) ax(stdied, had) neg(stdied, not) dep(observations, stdied) advmod(closely, so) advmod(observations, closely) nmod:poss(observations, my) amod(observations, own) dobj(stdied, observations) case(debate, in) det(debate, the) nmod:in(observations, debate) case(November, on) nmmod(November, 14) nmod:on(debate, November) pnct(observations, ,) advmod(stated, when) nsbj(stated, I) acl:relcl(observations, stated) advmod(stated, plainly) mark(have, that) det(Government, the) nsbj(have, Government) ccomp(stated, have) neg(dobt, no) dobj(have, dobt) case(legitimacy, abot) det(legitimacy, the) nmod:abot(dobt, legitimacy) mark(going, of) acl(legitimacy, going) case(agreement, for) det(agreement, the) nmmod(agreement, zero) nmmod(agreement, zero) nmod:for(going, agreement) case(basis, on) det(basis, the) nmod:on(agreement, basis) acl(basis, discssed) case(Reykjavik, at) nmod:at(discssed, Reykjavik) pnct(disappointed, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) advmod(JJ,RB) dep(JJ,IN) det(NNP,DT) compond(NNP,NNP) dep(IN,NNP) pnct(NNP,NNP) amod(NN,JJ) appos(NNP,NN) mark(NNS,IN) nsbj(NNS,PRP) cop(NNS,VBZ) case(NNS,IN) det(NNS,DT) dep(NN,NNS) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NNS,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NNS,NNS) ax(VBN,VBD) neg(VBN,RB) dep(NNS,VBN) advmod(RB,RB) advmod(NNS,RB) nmod:poss(NNS,PRP$) amod(NNS,JJ) dobj(VBN,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) case(NNP,IN) nmmod(NNP,CD) nmod:on(NN,NNP) pnct(NNS,NNS) advmod(VBD,WRB) nsbj(VBD,PRP) acl:relcl(NNS,VBD) advmod(VBD,RB) mark(VBP,IN) det(NNP,DT) nsbj(VBP,NNP) ccomp(VBD,VBP) neg(NN,DT) dobj(VBP,NN) case(NN,IN) det(NN,DT) nmod:abot(NN,NN) mark(VBG,IN) acl(NN,VBG) case(NN,IN) det(NN,DT) nmmod(NN,CD) nmmod(NN,CD) nmod:for(VBG,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) acl(NN,VBD) case(NNP,IN) nmod:at(VBD,NNP) pnct(JJ,JJ)","[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, he, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]","[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, he, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]",5,"[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, he, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]","[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]",VBN_stated RB_closely NNS_observations NNP_Gentleman NNP_General NN_doubt NNS_observations VBP_have NN_legitimacy NNP_Government VBN_studied NN_debate PRP_he JJ_disappointed VBN_discussed JJ_careful NNP_November NN_agreement VBG_going NN_student NNP_NATO IN_that NN_basis ,"[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, he, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]","[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, he, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]",VBN_stated RB_closely NNS_observations NNP_Gentleman NNP_General NN_doubt NNS_observations VBP_have NN_legitimacy NNP_Government VBN_studied NN_debate PRP_he JJ_disappointed VBN_discussed JJ_careful NNP_November NN_agreement VBG_going NN_student NNP_NATO IN_that NN_basis ,"[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, he, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]",VBN_stated RB_closely NNS_observations NNP_Gentleman NNP_General NN_doubt NNS_observations VBP_have NN_legitimacy NNP_Government VBN_studied NN_debate PRP_he JJ_disappointed VBN_discussed JJ_careful NNP_November NN_agreement VBG_going NN_student NNP_NATO IN_that NN_basis ,"[ , stated, closely, observations, Gentleman, ROOT, General, doubt, observations, have, legitimacy, Government, studied, debate, he, disappointed, discussed, careful, November, agreement, going, student, NATO, that, basis]",VBN_stated RB_closely NNS_observations NNP_Gentleman NNP_General NN_doubt NNS_observations VBP_have NN_legitimacy NNP_Government VBN_studied NN_debate PRP_he JJ_disappointed VBN_discussed JJ_careful NNP_November NN_agreement VBG_going NN_student NNP_NATO IN_that NN_basis ,2,2,2,2,1,2,2,2,2,2
The hon. Gentleman is right in that that has been the policy of the Alliance at least since 1979 and it has been our consistent objective since then on the right terms  including dealing with Soviet shorter range weapons.,TheDT honNN GentlemanNNP isVBZ rightJJ inIN thatDT thatWDT hasVBZ beenVBN theDT policyNN ofIN theDT AllianceNNP atIN leastJJS sinceIN 1979CD andCC itPRP hasVBZ beenVBN ourPRP$ consistentJJ objectiveNN sinceIN thenRB onIN theDT rightJJ termsNNS includingVBG dealingVBG withIN SovietJJ shorterNN rangeNN weaponsNNS ,"root(ROOT-0, right-5) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nsubj(right-5, Gentleman-3) cop(right-5, is-4) case(that-7, in-6) nmod:in(policy-12, that-7) nsubj(policy-12, that-8) aux(policy-12, has-9) cop(policy-12, been-10) det(policy-12, the-11) nmod(right-5, policy-12) case(Alliance-15, of-13) det(Alliance-15, the-14) nmod:of(policy-12, Alliance-15) case(least-17, at-16) nmod:at(policy-12, least-17) case(1979-19, since-18) nmod:since(least-17, 1979-19) cc(policy-12, and-20) nsubj(objective-26, it-21) aux(objective-26, has-22) cop(objective-26, been-23) nmod:poss(objective-26, our-24) amod(objective-26, consistent-25) nmod(right-5, objective-26) conj:and(policy-12, objective-26) case(terms-32, since-27) advmod(terms-32, then-28) case(terms-32, on-29) det(terms-32, the-30) amod(terms-32, right-31) nmod:on(objective-26, terms-32) punct(terms-32, ,-33) case(dealing-35, including-34) acl:including(terms-32, dealing-35) case(weapons-40, with-36) amod(weapons-40, Soviet-37) amod(weapons-40, shorter-38) compound(weapons-40, range-39) nmod:with(dealing-35, weapons-40) punct(right-5, .-41)",1,0,0,"root(ROOT, right) det(Gentleman, The) compond(Gentleman, hon.) nsbj(right, Gentleman) cop(right, is) case(that, in) nmod:in(policy, that) nsbj(policy, that) ax(policy, has) cop(policy, been) det(policy, the) nmod(right, policy) case(Alliance, of) det(Alliance, the) nmod:of(policy, Alliance) case(least, at) nmod:at(policy, least) case(1979, since) nmod:since(least, 1979) cc(policy, and) nsbj(objective, it) ax(objective, has) cop(objective, been) nmod:poss(objective, or) amod(objective, consistent) nmod(right, objective) conj:and(policy, objective) case(terms, since) advmod(terms, then) case(terms, on) det(terms, the) amod(terms, right) nmod:on(objective, terms) pnct(terms, ,) case(dealing, inclding) acl:inclding(terms, dealing) case(weapons, with) amod(weapons, Soviet) amod(weapons, shorter) compond(weapons, range) nmod:with(dealing, weapons) pnct(right, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) case(WDT,IN) nmod:in(NN,WDT) nsbj(NN,WDT) ax(NN,VBZ) cop(NN,VBN) det(NN,DT) nmod(JJ,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) case(JJS,IN) nmod:at(NN,JJS) case(CD,IN) nmod:since(JJS,CD) cc(NN,CC) nsbj(NN,PRP) ax(NN,VBZ) cop(NN,VBN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod(JJ,NN) conj:and(NN,NN) case(NNS,IN) advmod(NNS,RB) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:on(NN,NNS) pnct(NNS,NNS) case(VBG,VBG) acl:inclding(NNS,VBG) case(NNS,IN) amod(NNS,JJ) amod(NNS,NN) compond(NNS,NN) nmod:with(VBG,NNS) pnct(JJ,JJ)","[ROOT, objective, right, Gentleman, policy]","[ROOT, objective, right, Gentleman, policy]",6,"[ROOT, objective, right, Gentleman, policy]",[ ],NN_objective JJ_right NNP_Gentleman NN_policy ,"[ROOT, objective, right, Gentleman, policy]","[ROOT, objective, right, Gentleman, policy]",NN_objective JJ_right NNP_Gentleman NN_policy ,"[ROOT, objective, right, Gentleman, policy]",NN_objective JJ_right NNP_Gentleman NN_policy ,"[ROOT, objective, right, Gentleman, policy]",NN_objective JJ_right NNP_Gentleman NN_policy ,1,1,1,1,1,1,1,1,1,1
Will the Foreign Secretary confirm that the Prime Minister is in favour of the zero zero option only after the next general election and that she went to Camp David to persuade the United States President not to follow up the Reykjavik negotiations before the general election as it would jeopardise her campaign to keep the bomb and Britain's independent nuclear deterrent and prevent the Tories from running a scaremongering campaign against the Labour party on that issue?,WillMD theDT ForeignNNP SecretaryNNP confirmNN thatIN theDT PrimeNNP MinisterNNP isVBZ inIN favourNN ofIN theDT zeroNN zeroNN optionNN onlyRB afterIN theDT nextJJ generalJJ electionNN andCC thatIN shePRP wentVBD toTO CampNNP DavidNNP toTO persuadeVB theDT UnitedNNP StatesNNPS PresidentNNP notRB toTO followVB upRP theDT ReykjavikNNP negotiationsNNS beforeIN theDT generalJJ electionNN asIN itPRP wouldMD jeopardiseVB herPRP$ campaignNN toTO keepVB theDT bombNN andCC BritainNNP 'sPOS independentJJ nuclearJJ deterrentNN andCC preventVB theDT ToriesNNPS fromIN runningVBG aDT scaremongeringVBG campaignNN againstIN theDT LabourNNP partyNN onIN thatDT issueNN ,"root(ROOT-0, confirm-5) aux(confirm-5, Will-1) det(Secretary-4, the-2) compound(Secretary-4, Foreign-3) nsubj(confirm-5, Secretary-4) mark(favour-12, that-6) det(Minister-9, the-7) compound(Minister-9, Prime-8) nsubj(favour-12, Minister-9) cop(favour-12, is-10) case(favour-12, in-11) ccomp(confirm-5, favour-12) case(option-17, of-13) det(option-17, the-14) compound(zero-16, zero-15) nummod(option-17, zero-16) nmod:of(favour-12, option-17) advmod(election-23, only-18) case(election-23, after-19) det(election-23, the-20) amod(election-23, next-21) amod(election-23, general-22) nmod:after(favour-12, election-23) cc(election-23, and-24) mark(went-27, that-25) nsubj(went-27, she-26) nmod:after(favour-12, went-27) conj:and(election-23, went-27) case(David-30, to-28) compound(David-30, Camp-29) nmod:to(went-27, David-30) mark(persuade-32, to-31) xcomp(went-27, persuade-32) det(President-36, the-33) compound(President-36, United-34) compound(President-36, States-35) dobj(persuade-32, President-36) neg(follow-39, not-37) mark(follow-39, to-38) xcomp(persuade-32, follow-39) compound:prt(follow-39, up-40) det(negotiations-43, the-41) compound(negotiations-43, Reykjavik-42) dobj(follow-39, negotiations-43) case(election-47, before-44) det(election-47, the-45) amod(election-47, general-46) nmod:before(follow-39, election-47) mark(jeopardise-51, as-48) nsubj(jeopardise-51, it-49) aux(jeopardise-51, would-50) advcl(follow-39, jeopardise-51) nmod:poss(campaign-53, her-52) dobj(jeopardise-51, campaign-53) mark(keep-55, to-54) advcl(jeopardise-51, keep-55) det(bomb-57, the-56) dobj(keep-55, bomb-57) cc(bomb-57, and-58) nmod:poss(deterrent-63, Britain-59) case(Britain-59, 's-60) amod(deterrent-63, independent-61) amod(deterrent-63, nuclear-62) dobj(keep-55, deterrent-63) conj:and(bomb-57, deterrent-63) cc(keep-55, and-64) advcl(jeopardise-51, prevent-65) conj:and(keep-55, prevent-65) det(Tories-67, the-66) dobj(prevent-65, Tories-67) mark(running-69, from-68) advcl(prevent-65, running-69) det(campaign-72, a-70) compound(campaign-72, scaremongering-71) dobj(running-69, campaign-72) case(party-76, against-73) det(party-76, the-74) compound(party-76, Labour-75) nmod:against(campaign-72, party-76) case(issue-79, on-77) det(issue-79, that-78) nmod:on(running-69, issue-79) punct(confirm-5, ?-80)",1,1,0,"root(ROOT, confirm) ax(confirm, Will) det(Secretary, the) compond(Secretary, Foreign) nsbj(confirm, Secretary) mark(favor, that) det(Minister, the) compond(Minister, Prime) nsbj(favor, Minister) cop(favor, is) case(favor, in) ccomp(confirm, favor) case(option, of) det(option, the) compond(zero, zero) nmmod(option, zero) nmod:of(favor, option) advmod(election, only) case(election, after) det(election, the) amod(election, next) amod(election, general) nmod:after(favor, election) cc(election, and) mark(went, that) nsbj(went, she) nmod:after(favor, went) conj:and(election, went) case(David, to) compond(David, Camp) nmod:to(went, David) mark(persade, to) xcomp(went, persade) det(President, the) compond(President, United) compond(President, States) dobj(persade, President) neg(follow, not) mark(follow, to) xcomp(persade, follow) compond:prt(follow, p) det(negotiations, the) compond(negotiations, Reykjavik) dobj(follow, negotiations) case(election, before) det(election, the) amod(election, general) nmod:before(follow, election) mark(jeopardise, as) nsbj(jeopardise, it) ax(jeopardise, wold) advcl(follow, jeopardise) nmod:poss(campaign, her) dobj(jeopardise, campaign) mark(keep, to) advcl(jeopardise, keep) det(bomb, the) dobj(keep, bomb) cc(bomb, and) nmod:poss(deterrent, Britain) ""case(Britain, s)"", amod(deterrent, independent) amod(deterrent, nclear) dobj(keep, deterrent) conj:and(bomb, deterrent) cc(keep, and) advcl(jeopardise, prevent) conj:and(keep, prevent) det(Tories, the) dobj(prevent, Tories) mark(rnning, from) advcl(prevent, rnning) det(campaign, a) compond(campaign, scaremongering) dobj(rnning, campaign) case(party, against) det(party, the) compond(party, Labor) nmod:against(campaign, party) case(isse, on) det(isse, that) nmod:on(rnning, isse) pnct(confirm, ?)","root(,NN) ax(NN,MD) det(NNP,DT) compond(NNP,NNP) nsbj(NN,NNP) mark(NN,DT) det(NNP,DT) compond(NNP,NNP) nsbj(NN,NNP) cop(NN,VBZ) case(NN,IN) ccomp(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmmod(NN,NN) nmod:of(NN,NN) advmod(NN,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:after(NN,NN) cc(NN,CC) mark(VBD,DT) nsbj(VBD,PRP) nmod:after(NN,VBD) conj:and(NN,VBD) case(NNP,TO) compond(NNP,NNP) nmod:to(VBD,NNP) mark(VB,TO) xcomp(VBD,VB) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNPS) dobj(VB,NNP) neg(VB,RB) mark(VB,TO) xcomp(VB,VB) compond:prt(VB,RP) det(NNS,DT) compond(NNS,NNP) dobj(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:before(VB,NN) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VB,VB) nmod:poss(NN,PRP$) dobj(VB,NN) mark(VB,TO) advcl(VB,VB) det(NN,DT) dobj(VB,NN) cc(NN,CC) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) amod(NN,JJ) dobj(VB,NN) conj:and(NN,NN) cc(VB,CC) advcl(VB,VB) conj:and(VB,VB) det(NNPS,DT) dobj(VB,NNPS) mark(VBG,IN) advcl(VB,VBG) det(NN,DT) compond(NN,VBG) dobj(VBG,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) nmod:against(NN,NN) case(NN,IN) det(NN,DT) nmod:on(VBG,NN) pnct(NN,NN)","[favour, David, option, party, election, she, Secretary, went, persuade, ROOT, confirm, Minister, campaign]","[David, persuade, party, her, went, campaign, confirm, campaign, favour, option, election, she, Secretary, jeopardise, ROOT, Minister]",6,"[persuade, favour, David, option, party, election, she, her, jeopardise, went, campaign, confirm, Minister, campaign]","[favour, David, party, persuade, her, she, campaign, went, jeopardise, campaign]",NNP_David VB_persuade NN_party PRP$_her VBD_went NN_campaign NN_confirm NN_campaign NN_favour NN_option NN_election PRP_she NNP_Secretary VB_jeopardise NNP_Minister ,"[David, persuade, party, her, went, campaign, confirm, campaign, favour, option, election, she, Secretary, jeopardise, ROOT, Minister]","[David, persuade, party, her, went, campaign, confirm, campaign, favour, option, election, she, Secretary, jeopardise, ROOT, Minister]",NNP_David VB_persuade NN_party PRP$_her VBD_went NN_campaign NN_confirm NN_campaign NN_favour NN_option NN_election PRP_she NNP_Secretary VB_jeopardise NNP_Minister ,"[David, persuade, party, her, went, campaign, confirm, campaign, favour, option, election, she, Secretary, jeopardise, ROOT, Minister]",NNP_David VB_persuade NN_party PRP$_her VBD_went NN_campaign NN_confirm NN_campaign NN_favour NN_option NN_election PRP_she NNP_Secretary VB_jeopardise NNP_Minister ,"[David, persuade, party, her, went, campaign, confirm, campaign, favour, option, election, she, Secretary, jeopardise, ROOT, Minister]",NNP_David VB_persuade NN_party PRP$_her VBD_went NN_campaign NN_confirm NN_campaign NN_favour NN_option NN_election PRP_she NNP_Secretary VB_jeopardise NNP_Minister ,1,2,2,1,1,2,2,0,1,2
The hon. Gentleman compounds a series of absurd propositions.,TheDT honNN GentlemanNNP compoundsVBZ aDT seriesNN ofIN absurdJJ propositionsNNS ,"root(ROOT-0, compounds-4) det(compounds-4, The-1) compound(compounds-4, hon.-2) compound(compounds-4, Gentleman-3) det(series-6, a-5) dep(compounds-4, series-6) case(propositions-9, of-7) amod(propositions-9, absurd-8) nmod:of(series-6, propositions-9) punct(compounds-4, .-10)",1,1,0,"root(ROOT, componds) det(componds, The) compond(componds, hon.) compond(componds, Gentleman) det(series, a) dep(componds, series) case(propositions, of) amod(propositions, absrd) nmod:of(series, propositions) pnct(componds, .)","root(,VBZ) det(VBZ,DT) compond(VBZ,VBZ) compond(VBZ,NNP) det(NN,DT) dep(VBZ,NN) case(NNS,IN) amod(NNS,JJ) nmod:of(NN,NNS) pnct(VBZ,VBZ)",[ ],[ ],9,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],2,2,2,0,0,0,0,0,0,0
The Government have been  and are; committed to further progress in the direction of arms control on the basis of the clear priorities set out after the Camp David meeting.,TheDT GovernmentNNP haveVBP beenVBN andCC areVBP ;: committedVBN toTO furtherJJ progressNN inIN theDT directionNN ofIN armsNNS controlNN onIN theDT basisNN ofIN theDT clearJJ prioritiesNNS setVBN outRP afterIN theDT CampNNP DavidNNP meetingNN ,"root(ROOT-0, been-4) det(Government-2, The-1) nsubj(been-4, Government-2) nsubj(are-7, Government-2) aux(been-4, have-3) punct(been-4, ,-5) cc(been-4, and-6) conj:and(been-4, are-7) punct(are-7, ;-8) conj(are-7, committed-9) case(progress-12, to-10) amod(progress-12, further-11) nmod:to(committed-9, progress-12) case(direction-15, in-13) det(direction-15, the-14) nmod:in(progress-12, direction-15) case(control-18, of-16) compound(control-18, arms-17) nmod:of(direction-15, control-18) case(basis-21, on-19) det(basis-21, the-20) nmod:on(committed-9, basis-21) case(priorities-25, of-22) det(priorities-25, the-23) amod(priorities-25, clear-24) nmod:of(basis-21, priorities-25) acl(priorities-25, set-26) compound:prt(set-26, out-27) case(meeting-32, after-28) det(meeting-32, the-29) compound(meeting-32, Camp-30) compound(meeting-32, David-31) nmod:after(set-26, meeting-32) punct(been-4, .-33)",1,0,0,"root(ROOT, been) det(Government, The) nsbj(been, Government) nsbj(are, Government) ax(been, have) pnct(been, ,) cc(been, and) conj:and(been, are) pnct(are, ;) conj(are, committed) case(progress, to) amod(progress, frther) nmod:to(committed, progress) case(direction, in) det(direction, the) nmod:in(progress, direction) case(control, of) compond(control, arms) nmod:of(direction, control) case(basis, on) det(basis, the) nmod:on(committed, basis) case(priorities, of) det(priorities, the) amod(priorities, clear) nmod:of(basis, priorities) acl(priorities, set) compond:prt(set, ot) case(meeting, after) det(meeting, the) compond(meeting, Camp) compond(meeting, David) nmod:after(set, meeting) pnct(been, .)","root(,VBN) det(NNP,DT) nsbj(VBN,NNP) nsbj(VBP,NNP) ax(VBN,VBP) pnct(VBN,VBN) cc(VBN,CC) conj:and(VBN,VBP) pnct(VBP,:) conj(VBP,VBN) case(NN,TO) amod(NN,JJ) nmod:to(VBN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NN,IN) compond(NN,NNS) nmod:of(NN,NN) case(NN,IN) det(NN,DT) nmod:on(VBN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(NN,NNS) acl(NNS,VBN) compond:prt(VBN,RP) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) nmod:after(VBN,NN) pnct(VBN,VBN)","[Government, ROOT, been, and, are]","[Government, ROOT, been, and, are]",10,[ ],[ ],NNP_Government VBN_been CC_and VBP_are ,"[Government, ROOT, been, and, are]","[Government, ROOT, been, and, are]",NNP_Government VBN_been CC_and VBP_are ,"[Government, ROOT, been, and, are]",NNP_Government VBN_been CC_and VBP_are ,"[Government, ROOT, been, and, are]",NNP_Government VBN_been CC_and VBP_are ,2,1,2,0,0,0,0,0,0,0
That is recognised by virtually every Government and party in the Alliance  save that to which the hon. Gentleman has the misfortune to belong.,ThatDT isVBZ recognisedVBN byIN virtuallyRB everyDT GovernmentNNP andCC partyNN inIN theDT AllianceNNP saveVBP thatDT toTO whichWDT theDT honNN GentlemanNNP hasVBZ theDT misfortuneNN toTO belongVB ,"root(ROOT-0, recognised-3) nsubjpass(recognised-3, That-1) auxpass(recognised-3, is-2) case(Government-7, by-4) advmod(Government-7, virtually-5) det(Government-7, every-6) nmod:agent(recognised-3, Government-7) cc(Government-7, and-8) nmod:agent(recognised-3, party-9) conj:and(Government-7, party-9) case(Alliance-12, in-10) det(Alliance-12, the-11) nmod:in(recognised-3, Alliance-12) punct(recognised-3, ,-13) xcomp(recognised-3, save-14) mark(has-21, that-15) case(which-17, to-16) nmod:to(has-21, which-17) det(Gentleman-20, the-18) compound(Gentleman-20, hon.-19) nsubj(has-21, Gentleman-20) ccomp(save-14, has-21) det(misfortune-23, the-22) dobj(has-21, misfortune-23) mark(belong-25, to-24) acl(misfortune-23, belong-25) punct(recognised-3, .-26)",1,0,0,"root(ROOT, recognised) nsbjpass(recognised, That) axpass(recognised, is) case(Government, by) advmod(Government, virtally) det(Government, every) nmod:agent(recognised, Government) cc(Government, and) nmod:agent(recognised, party) conj:and(Government, party) case(Alliance, in) det(Alliance, the) nmod:in(recognised, Alliance) pnct(recognised, ,) xcomp(recognised, save) mark(has, that) case(which, to) nmod:to(has, which) det(Gentleman, the) compond(Gentleman, hon.) nsbj(has, Gentleman) ccomp(save, has) det(misfortne, the) dobj(has, misfortne) mark(belong, to) acl(misfortne, belong) pnct(recognised, .)","root(,VBN) nsbjpass(VBN,DT) axpass(VBN,VBZ) case(NNP,IN) advmod(NNP,RB) det(NNP,DT) nmod:agent(VBN,NNP) cc(NNP,CC) nmod:agent(VBN,NN) conj:and(NNP,NN) case(NNP,IN) det(NNP,DT) nmod:in(VBN,NNP) pnct(VBN,VBN) xcomp(VBN,VBP) mark(VBZ,DT) case(WDT,TO) nmod:to(VBZ,WDT) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) ccomp(VBP,VBZ) det(NN,DT) dobj(VBZ,NN) mark(VB,TO) acl(NN,VB) pnct(VBN,VBN)","[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]","[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]",10,"[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]","[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]",VBZ_has NNP_Gentleman NNP_Government NNP_Alliance VBN_recognised VB_save CC_and NN_party WDT_which NN_misfortune DT_That RB_virtually ,"[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]","[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]",VBZ_has NNP_Gentleman NNP_Government NNP_Alliance VBN_recognised VB_save CC_and NN_party WDT_which NN_misfortune DT_That RB_virtually ,"[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]",VBZ_has NNP_Gentleman NNP_Government NNP_Alliance VBN_recognised VB_save CC_and NN_party WDT_which NN_misfortune DT_That RB_virtually ,"[has, Gentleman, Government, Alliance, recognised, save, and, party, ROOT, which, misfortune, That, virtually]",VBZ_has NNP_Gentleman NNP_Government NNP_Alliance VBN_recognised VB_save CC_and NN_party WDT_which NN_misfortune DT_That RB_virtually ,1,2,2,2,1,2,2,2,2,2
Does my right hon. and learned Friend agree that there is some irony which compounds the absurd position to which my right hon. and learned Friend referred in the Leader of the Opposition cavorting around the United States advocating a policy that was denied even by General Secretary Gorbachev when he conceded that we should have the nuclear deterrent?,DoesNNP myPRP$ rightNN honNN andCC learnedVBD FriendNNP agreeVBP thatIN thereEX isVBZ someDT ironyNN whichWDT compoundsVBZ theDT absurdJJ positionNN toTO whichWDT myPRP$ rightNN honNN andCC learnedVBD FriendNNP referredVBD inIN theDT LeaderNNP ofIN theDT OppositionNNP cavortingVBG aroundIN theDT UnitedNNP StatesNNPS advocatingVBG aDT policyNN thatWDT wasVBD deniedVBN evenRB byIN GeneralNNP SecretaryNNP GorbachevNNP whenWRB hePRP concededVBD thatIN wePRP shouldMD haveVB theDT nuclearJJ deterrentNN ,"root(ROOT-0, Does-1) nmod:poss(hon.-4, my-2) amod(hon.-4, right-3) dobj(Does-1, hon.-4) cc(Does-1, and-5) dep(agree-8, learned-6) nsubj(agree-8, Friend-7) conj:and(Does-1, agree-8) mark(is-11, that-9) expl(is-11, there-10) ccomp(agree-8, is-11) det(irony-13, some-12) nsubj(is-11, irony-13) dep(irony-13, which-14) dep(which-14, compounds-15) det(position-18, the-16) amod(position-18, absurd-17) dobj(compounds-15, position-18) case(which-20, to-19) nmod:to(position-18, which-20) nmod:poss(hon.-23, my-21) amod(hon.-23, right-22) dep(which-20, hon.-23) cc(hon.-23, and-24) dep(which-20, learned-25) conj:and(hon.-23, learned-25) dobj(learned-25, Friend-26) acl(Friend-26, referred-27) case(Leader-30, in-28) det(Leader-30, the-29) nmod:in(referred-27, Leader-30) case(Opposition-33, of-31) det(Opposition-33, the-32) nmod:of(Leader-30, Opposition-33) acl(Opposition-33, cavorting-34) case(States-38, around-35) det(States-38, the-36) compound(States-38, United-37) nmod:around(cavorting-34, States-38) acl(States-38, advocating-39) det(policy-41, a-40) dobj(advocating-39, policy-41) nsubjpass(denied-44, that-42) auxpass(denied-44, was-43) acl:relcl(policy-41, denied-44) advmod(Gorbachev-49, even-45) case(Gorbachev-49, by-46) compound(Gorbachev-49, General-47) compound(Gorbachev-49, Secretary-48) nmod:agent(denied-44, Gorbachev-49) advmod(conceded-52, when-50) nsubj(conceded-52, he-51) advcl(denied-44, conceded-52) mark(have-56, that-53) nsubj(have-56, we-54) aux(have-56, should-55) ccomp(conceded-52, have-56) det(deterrent-59, the-57) amod(deterrent-59, nuclear-58) dobj(have-56, deterrent-59) punct(Does-1, ?-60)",1,1,0,"root(ROOT, Does) nmod:poss(hon., my) amod(hon., right) dobj(Does, hon.) cc(Does, and) dep(agree, learned) nsbj(agree, Friend) conj:and(Does, agree) mark(is, that) expl(is, there) ccomp(agree, is) det(irony, some) nsbj(is, irony) dep(irony, which) dep(which, componds) det(position, the) amod(position, absrd) dobj(componds, position) case(which, to) nmod:to(position, which) nmod:poss(hon., my) amod(hon., right) dep(which, hon.) cc(hon., and) dep(which, learned) conj:and(hon., learned) dobj(learned, Friend) acl(Friend, referred) case(Leader, in) det(Leader, the) nmod:in(referred, Leader) case(Opposition, of) det(Opposition, the) nmod:of(Leader, Opposition) acl(Opposition, cavorting) case(States, arond) det(States, the) compond(States, United) nmod:arond(cavorting, States) acl(States, advocating) det(policy, a) dobj(advocating, policy) nsbjpass(denied, that) axpass(denied, was) acl:relcl(policy, denied) advmod(Gorbachev, even) case(Gorbachev, by) compond(Gorbachev, General) compond(Gorbachev, Secretary) nmod:agent(denied, Gorbachev) advmod(conceded, when) nsbj(conceded, he) advcl(denied, conceded) mark(have, that) nsbj(have, we) ax(have, shold) ccomp(conceded, have) det(deterrent, the) amod(deterrent, nclear) dobj(have, deterrent) pnct(Does, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(PRP$,NN) dobj(NNP,NNP) cc(NNP,CC) dep(VBP,VBD) nsbj(VBP,NNP) conj:and(NNP,VBP) mark(VBZ,IN) expl(VBZ,EX) ccomp(VBP,VBZ) det(NN,DT) nsbj(VBZ,NN) dep(NN,WDT) dep(WDT,VBZ) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) case(WDT,TO) nmod:to(NN,WDT) nmod:poss(WDT,PRP$) amod(PRP$,NN) dep(WDT,WDT) cc(WDT,CC) dep(WDT,VBD) conj:and(VBD,VBD) dobj(VBD,NNP) acl(NNP,VBD) case(NNP,IN) det(NNP,DT) nmod:in(VBD,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) acl(NNP,VBG) case(NNPS,IN) det(NNPS,DT) compond(NNPS,NNP) nmod:arond(VBG,NNPS) acl(NNPS,VBG) det(NN,DT) dobj(VBG,NN) nsbjpass(VBN,IN) axpass(VBN,VBD) acl:relcl(NN,VBN) advmod(NNP,RB) case(NNP,IN) compond(NNP,NNP) compond(NNP,NNP) nmod:agent(VBN,NNP) advmod(VBD,WRB) nsbj(VBD,PRP) advcl(VBN,VBD) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) ccomp(VBD,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) pnct(NNP,NNP)","[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]","[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]",10,"[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]","[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]",VBD_referred NNP_Opposition VBD_learned NNP_Friend VBD_conceded RB_even VBP_have VBG_cavorting PRP_he NNP_Friend WRB_when NNPS_States NNP_Leader VB_agree VBD_learned WDT_which VBN_denied NNP_Gorbachev VBZ_is ,"[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]","[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]",VBD_referred NNP_Opposition VBD_learned NNP_Friend VBD_conceded RB_even VBP_have VBG_cavorting PRP_he NNP_Friend WRB_when NNPS_States NNP_Leader VB_agree VBD_learned WDT_which VBN_denied NNP_Gorbachev VBZ_is ,"[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]",VBD_referred NNP_Opposition VBD_learned NNP_Friend VBD_conceded RB_even VBP_have VBG_cavorting PRP_he NNP_Friend WRB_when NNPS_States NNP_Leader VB_agree VBD_learned WDT_which VBN_denied NNP_Gorbachev VBZ_is ,"[referred, Opposition, learned, Friend, conceded, even, have, cavorting, he, Friend, when, States, Leader, agree, learned, which, denied, Gorbachev, is]",VBD_referred NNP_Opposition VBD_learned NNP_Friend VBD_conceded RB_even VBP_have VBG_cavorting PRP_he NNP_Friend WRB_when NNPS_States NNP_Leader VB_agree VBD_learned WDT_which VBN_denied NNP_Gorbachev VBZ_is ,2,2,2,2,1,2,2,2,2,2
Yes  that is one of the most astonishing aspects of the various propositions to which the Leader of the Opposition has been committing himself.,YesUH thatDT isVBZ oneCD ofIN theDT mostRBS astonishingJJ aspectsNNS ofIN theDT variousJJ propositionsNNS toTO whichWDT theDT LeaderNNP ofIN theDT OppositionNNP hasVBZ beenVBN committingVBG himselfPRP ,"root(ROOT-0, one-5) advmod(one-5, Yes-1) punct(one-5, ,-2) nsubj(one-5, that-3) cop(one-5, is-4) case(aspects-10, of-6) det(aspects-10, the-7) advmod(astonishing-9, most-8) amod(aspects-10, astonishing-9) nmod:of(one-5, aspects-10) case(propositions-14, of-11) det(propositions-14, the-12) amod(propositions-14, various-13) nmod:of(aspects-10, propositions-14) case(which-16, to-15) nmod:to(committing-24, which-16) det(Leader-18, the-17) nsubj(committing-24, Leader-18) case(Opposition-21, of-19) det(Opposition-21, the-20) nmod:of(Leader-18, Opposition-21) aux(committing-24, has-22) aux(committing-24, been-23) acl:relcl(propositions-14, committing-24) dobj(committing-24, himself-25) punct(one-5, .-26)",1,0,0,"root(ROOT, one) advmod(one, Yes) pnct(one, ,) nsbj(one, that) cop(one, is) case(aspects, of) det(aspects, the) advmod(astonishing, most) amod(aspects, astonishing) nmod:of(one, aspects) case(propositions, of) det(propositions, the) amod(propositions, varios) nmod:of(aspects, propositions) case(which, to) nmod:to(committing, which) det(Leader, the) nsbj(committing, Leader) case(Opposition, of) det(Opposition, the) nmod:of(Leader, Opposition) ax(committing, has) ax(committing, been) acl:relcl(propositions, committing) dobj(committing, himself) pnct(one, .)","root(,CD) advmod(CD,UH) pnct(CD,CD) nsbj(CD,DT) cop(CD,VBZ) case(NNS,IN) det(NNS,DT) advmod(JJ,RBS) amod(NNS,JJ) nmod:of(CD,NNS) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(NNS,NNS) case(WDT,TO) nmod:to(VBG,WDT) det(NNP,DT) nsbj(VBG,NNP) case(NNP,IN) det(NNP,DT) nmod:of(NNP,NNP) ax(VBG,VBZ) ax(VBG,VBN) acl:relcl(NNS,VBG) dobj(VBG,PRP) pnct(CD,CD)","[committing, Leader, Opposition]","[committing, Leader, Opposition]",11,"[committing, Leader, Opposition]","[committing, Leader, Opposition]",VBG_committing NNP_Leader NNP_Opposition ,"[committing, Leader, Opposition]","[committing, Leader, Opposition]",VBG_committing NNP_Leader NNP_Opposition ,"[committing, Leader, Opposition]",VBG_committing NNP_Leader NNP_Opposition ,"[committing, Leader, Opposition]",VBG_committing NNP_Leader NNP_Opposition ,2,2,2,2,1,2,2,2,2,2
The way in which he is arguing in favour of a ban of United States nuclear forces from this country gravely jeopardises the presence of United States conventional forces in defence of NATO  gravely jeopardises the Alliance  and gravely jeopardises the security of this country.,TheDT wayNN inIN whichWDT hePRP isVBZ arguingVBG inIN favourNN ofIN aDT banNN ofIN UnitedNNP StatesNNPS nuclearJJ forcesNNS fromIN thisDT countryNN gravelyRB jeopardisesVBZ theDT presenceNN ofIN UnitedNNP StatesNNPS conventionalJJ forcesNNS inIN defenceNN ofIN NATONNP gravelyRB jeopardisesVBZ theDT AllianceNNP andCC gravelyRB jeopardisesVBZ theDT securityNN ofIN thisDT countryNN ,"root(ROOT-0, way-2) det(way-2, The-1) case(which-4, in-3) nmod:in(arguing-7, which-4) nsubj(arguing-7, he-5) aux(arguing-7, is-6) acl:relcl(way-2, arguing-7) case(favour-9, in-8) nmod:in(jeopardises-22, favour-9) case(ban-12, of-10) det(ban-12, a-11) nmod:of(jeopardises-22, ban-12) case(States-15, of-13) compound(States-15, United-14) nmod:of(jeopardises-22, States-15) amod(forces-17, nuclear-16) nsubj(jeopardises-22, forces-17) case(country-20, from-18) det(country-20, this-19) nmod:from(forces-17, country-20) advmod(jeopardises-22, gravely-21) ccomp(arguing-7, jeopardises-22) det(presence-24, the-23) dobj(jeopardises-22, presence-24) case(States-27, of-25) compound(States-27, United-26) nmod:of(presence-24, States-27) amod(forces-29, conventional-28) dep(States-27, forces-29) case(defence-31, in-30) nmod:in(forces-29, defence-31) case(NATO-33, of-32) nmod:of(defence-31, NATO-33) punct(forces-29, ,-34) advmod(jeopardises-36, gravely-35) dep(States-27, jeopardises-36) conj:and(forces-29, jeopardises-36) det(Alliance-38, the-37) dobj(jeopardises-36, Alliance-38) punct(forces-29, ,-39) cc(forces-29, and-40) advmod(jeopardises-42, gravely-41) dep(States-27, jeopardises-42) conj:and(forces-29, jeopardises-42) det(security-44, the-43) dobj(jeopardises-42, security-44) case(country-47, of-45) det(country-47, this-46) nmod:of(security-44, country-47) punct(way-2, .-48)",1,0,0,"root(ROOT, way) det(way, The) case(which, in) nmod:in(arging, which) nsbj(arging, he) ax(arging, is) acl:relcl(way, arging) case(favor, in) nmod:in(jeopardises, favor) case(ban, of) det(ban, a) nmod:of(jeopardises, ban) case(States, of) compond(States, United) nmod:of(jeopardises, States) amod(forces, nclear) nsbj(jeopardises, forces) case(contry, from) det(contry, this) nmod:from(forces, contry) advmod(jeopardises, gravely) ccomp(arging, jeopardises) det(presence, the) dobj(jeopardises, presence) case(States, of) compond(States, United) nmod:of(presence, States) amod(forces, conventional) dep(States, forces) case(defence, in) nmod:in(forces, defence) case(NATO, of) nmod:of(defence, NATO) pnct(forces, ,) advmod(jeopardises, gravely) dep(States, jeopardises) conj:and(forces, jeopardises) det(Alliance, the) dobj(jeopardises, Alliance) pnct(forces, ,) cc(forces, and) advmod(jeopardises, gravely) dep(States, jeopardises) conj:and(forces, jeopardises) det(secrity, the) dobj(jeopardises, secrity) case(contry, of) det(contry, this) nmod:of(secrity, contry) pnct(way, .)","root(,NN) det(NN,DT) case(WDT,IN) nmod:in(VBG,WDT) nsbj(VBG,PRP) ax(VBG,VBZ) acl:relcl(NN,VBG) case(NN,IN) nmod:in(VBZ,NN) case(NN,IN) det(NN,DT) nmod:of(VBZ,NN) case(NNPS,IN) compond(NNPS,NNP) nmod:of(VBZ,NNPS) amod(NNS,JJ) nsbj(VBZ,NNS) case(NN,IN) det(NN,DT) nmod:from(NNS,NN) advmod(VBZ,RB) ccomp(VBG,VBZ) det(NN,DT) dobj(VBZ,NN) case(NNPS,IN) compond(NNPS,NNP) nmod:of(NN,NNPS) amod(NNS,JJ) dep(NNPS,NNS) case(NN,IN) nmod:in(NNS,NN) case(NNP,IN) nmod:of(NN,NNP) pnct(NNS,NNS) advmod(VBZ,RB) dep(NNPS,VBZ) conj:and(NNS,VBZ) det(NNP,DT) dobj(VBZ,NNP) pnct(NNS,NNS) cc(NNS,CC) advmod(VBZ,RB) dep(NNPS,VBZ) conj:and(NNS,VBZ) det(NN,DT) dobj(VBZ,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(NN,NN)","[jeopardises, way, which, arguing, he]","[jeopardises, way, which, arguing, he]",12,[ ],[ ],VBZ_jeopardises NN_way WDT_which VBG_arguing PRP_he ,"[jeopardises, way, which, arguing, he]","[jeopardises, way, which, arguing, he]",VBZ_jeopardises NN_way WDT_which VBG_arguing PRP_he ,"[jeopardises, way, which, arguing, he]",VBZ_jeopardises NN_way WDT_which VBG_arguing PRP_he ,"[jeopardises, way, which, arguing, he]",VBZ_jeopardises NN_way WDT_which VBG_arguing PRP_he ,2,2,2,0,0,0,0,0,0,0
Will the right hon. and learned Gentleman confirm that his unwillingness and inability to answer my earlier question was due to the fact that the Government are so frightened that President Reagan will cancel Trident  as Skybolt was cancelled some years ago  that  according to the Daily Telegraph  they are investigating the possibility of reviewing Britain's deterrent to some sort of cruise programme?,WillMD theDT rightJJ honNN andCC learnedVBD GentlemanNNP confirmNN thatIN hisPRP$ unwillingnessNN andCC inabilityNN toTO answerVB myPRP$ earlierJJR questionNN wasVBD dueJJ toTO theDT factNN thatIN theDT GovernmentNNP areVBP soRB frightenedJJ thatIN PresidentNNP ReaganNNP willMD cancelVB TridentNNP asIN SkyboltNNP wasVBD cancelledVBN someDT yearsNNS agoIN thatDT accordingVBG toTO theDT DailyNNP TelegraphNNP theyPRP areVBP investigatingVBG theDT possibilityNN ofIN reviewingVBG BritainNNP 'sPOS deterrentNN toTO someDT sortNN ofIN cruiseNN programmeNN ,"root(ROOT-0, confirm-8) aux(confirm-8, Will-1) det(hon.-4, the-2) amod(hon.-4, right-3) nsubj(confirm-8, hon.-4) cc(hon.-4, and-5) amod(Gentleman-7, learned-6) conj:and(hon.-4, Gentleman-7) nsubj(confirm-8, Gentleman-7) mark(answer-15, that-9) nmod:poss(unwillingness-11, his-10) nsubj(answer-15, unwillingness-11) cc(unwillingness-11, and-12) conj:and(unwillingness-11, inability-13) nsubj(answer-15, inability-13) mark(answer-15, to-14) csubj(due-20, answer-15) nmod:poss(question-18, my-16) amod(question-18, earlier-17) dobj(answer-15, question-18) cop(due-20, was-19) ccomp(confirm-8, due-20) case(fact-23, to-21) det(fact-23, the-22) nmod:to(due-20, fact-23) mark(frightened-29, that-24) det(Government-26, the-25) nsubj(frightened-29, Government-26) cop(frightened-29, are-27) advmod(frightened-29, so-28) ccomp(fact-23, frightened-29) mark(cancel-34, that-30) compound(Reagan-32, President-31) nsubj(cancel-34, Reagan-32) aux(cancel-34, will-33) ccomp(frightened-29, cancel-34) dobj(cancel-34, Trident-35) punct(fact-23, ,-36) mark(cancelled-40, as-37) nsubjpass(cancelled-40, Skybolt-38) auxpass(cancelled-40, was-39) dep(fact-23, cancelled-40) det(years-42, some-41) nmod:npmod(ago-43, years-42) advmod(cancelled-40, ago-43) punct(fact-23, ,-44) dep(fact-23, that-45) punct(fact-23, ,-46) case(Telegraph-51, according-47) mwe(according-47, to-48) det(Telegraph-51, the-49) compound(Telegraph-51, Daily-50) nmod:according_to(fact-23, Telegraph-51) punct(fact-23, ,-52) nsubj(investigating-55, they-53) aux(investigating-55, are-54) acl:relcl(fact-23, investigating-55) det(possibility-57, the-56) dobj(investigating-55, possibility-57) mark(reviewing-59, of-58) acl(possibility-57, reviewing-59) nmod:poss(deterrent-62, Britain-60) case(Britain-60, 's-61) dobj(reviewing-59, deterrent-62) case(sort-65, to-63) det(sort-65, some-64) nmod:to(reviewing-59, sort-65) case(programme-68, of-66) compound(programme-68, cruise-67) nmod:of(sort-65, programme-68) punct(confirm-8, ?-69)",1,0,0,"root(ROOT, confirm) ax(confirm, Will) det(hon., the) amod(hon., right) nsbj(confirm, hon.) cc(hon., and) amod(Gentleman, learned) conj:and(hon., Gentleman) nsbj(confirm, Gentleman) mark(answer, that) nmod:poss(nwillingness, his) nsbj(answer, nwillingness) cc(nwillingness, and) conj:and(nwillingness, inability) nsbj(answer, inability) mark(answer, to) csbj(de, answer) nmod:poss(qestion, my) amod(qestion, earlier) dobj(answer, qestion) cop(de, was) ccomp(confirm, de) case(fact, to) det(fact, the) nmod:to(de, fact) mark(frightened, that) det(Government, the) nsbj(frightened, Government) cop(frightened, are) advmod(frightened, so) ccomp(fact, frightened) mark(cancel, that) compond(Reagan, President) nsbj(cancel, Reagan) ax(cancel, will) ccomp(frightened, cancel) dobj(cancel, Trident) pnct(fact, ,) mark(cancelled, as) nsbjpass(cancelled, Skybolt) axpass(cancelled, was) dep(fact, cancelled) det(years, some) nmod:npmod(ago, years) advmod(cancelled, ago) pnct(fact, ,) dep(fact, that) pnct(fact, ,) case(Telegraph, according) mwe(according, to) det(Telegraph, the) compond(Telegraph, Daily) nmod:according_to(fact, Telegraph) pnct(fact, ,) nsbj(investigating, they) ax(investigating, are) acl:relcl(fact, investigating) det(possibility, the) dobj(investigating, possibility) mark(reviewing, of) acl(possibility, reviewing) nmod:poss(deterrent, Britain) ""case(Britain, s)"", dobj(reviewing, deterrent) case(sort, to) det(sort, some) nmod:to(reviewing, sort) case(programme, of) compond(programme, crise) nmod:of(sort, programme) pnct(confirm, ?)","root(,NN) ax(NN,MD) det(MD,DT) amod(DT,JJ) nsbj(NN,NN) cc(NN,CC) amod(NNP,VBD) conj:and(VBD,NNP) nsbj(NN,NNP) mark(VB,DT) nmod:poss(NN,PRP$) nsbj(VB,NN) cc(NN,CC) conj:and(NN,NN) nsbj(VB,NN) mark(VB,TO) csbj(JJ,VB) nmod:poss(NN,PRP$) amod(NN,JJR) dobj(VB,NN) cop(JJ,VBD) ccomp(NN,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) mark(JJ,DT) det(NNP,DT) nsbj(JJ,NNP) cop(JJ,VBP) advmod(JJ,RB) ccomp(NN,JJ) mark(VB,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) ccomp(JJ,VB) dobj(VB,NNP) pnct(NN,NN) mark(VBN,IN) nsbjpass(VBN,NNP) axpass(VBN,VBD) dep(NN,VBN) det(NNS,DT) nmod:npmod(IN,NNS) advmod(VBN,IN) pnct(NN,NN) dep(NN,DT) pnct(NN,NN) case(NNP,VBG) mwe(VBG,TO) det(NNP,DT) compond(NNP,NNP) nmod:according_to(NN,NNP) pnct(NN,NN) nsbj(VBG,PRP) ax(VBG,VBP) acl:relcl(NN,VBG) det(NN,DT) dobj(VBG,NN) mark(VBG,IN) acl(NN,VBG) nmod:poss(NN,NNP) case(NNP,POS) dobj(VBG,NN) case(NN,TO) det(NN,DT) nmod:to(VBG,NN) case(NN,IN) compond(NN,NN) nmod:of(NN,NN) pnct(NN,NN)","[so, due, fact, right, learned, hon., confirm, frightened, ROOT, Gentleman, Government, and, cancel]","[so, fact, frightened, hon., and, his, confirm, ROOT, Gentleman, and, Government, answer, due, learned, right, unwillingness, cancel]",12,"[answer, so, and, fact, frightened, his, unwillingness, Government, cancel]","[answer, unwillingness, and, his]",RB_so NN_fact JJ_frightened CC_and PRP$_his NN_confirm NNP_Gentleman CC_and NNP_Government NN_answer JJ_due VBD_learned JJ_right NN_unwillingness VB_cancel ,"[so, fact, frightened, hon., and, his, confirm, ROOT, Gentleman, and, Government, answer, due, learned, right, unwillingness, cancel]","[so, fact, frightened, hon., and, his, confirm, ROOT, Gentleman, and, Government, answer, due, learned, right, unwillingness, cancel]",RB_so NN_fact JJ_frightened CC_and PRP$_his NN_confirm NNP_Gentleman CC_and NNP_Government NN_answer JJ_due VBD_learned JJ_right NN_unwillingness VB_cancel ,"[so, fact, frightened, hon., and, his, confirm, ROOT, Gentleman, and, Government, answer, due, learned, right, unwillingness, cancel]",RB_so NN_fact JJ_frightened CC_and PRP$_his NN_confirm NNP_Gentleman CC_and NNP_Government NN_answer JJ_due VBD_learned JJ_right NN_unwillingness VB_cancel ,"[so, fact, frightened, hon., and, his, confirm, ROOT, Gentleman, and, Government, answer, due, learned, right, unwillingness, cancel]",RB_so NN_fact JJ_frightened CC_and PRP$_his NN_confirm NNP_Gentleman CC_and NNP_Government NN_answer JJ_due VBD_learned JJ_right NN_unwillingness VB_cancel ,1,2,2,1,1,2,2,2,2,2
It is encouraging to have the confirmation of the right hon. Gentleman  with his distinguished expert knowledge of the matter  of the wisdom of the United Kingdom remaining committed to the Trident programme with the full support of the President of the United States.,ItPRP isVBZ encouragingVBG toTO haveVB theDT confirmationNN ofIN theDT rightJJ honNN GentlemanNNP withIN hisPRP$ distinguishedJJ expertNN knowledgeNN ofIN theDT matterNN ofIN theDT wisdomNN ofIN theDT UnitedNNP KingdomNNP remainingVBG committedVBN toTO theDT TridentNNP programmeNN withIN theDT fullJJ supportNN ofIN theDT PresidentNNP ofIN theDT UnitedNNP StatesNNPS ,"root(ROOT-0, encouraging-3) nsubj(encouraging-3, It-1) aux(encouraging-3, is-2) mark(have-5, to-4) xcomp(encouraging-3, have-5) det(confirmation-7, the-6) dobj(have-5, confirmation-7) case(Gentleman-12, of-8) det(Gentleman-12, the-9) amod(Gentleman-12, right-10) compound(Gentleman-12, hon.-11) nmod:of(confirmation-7, Gentleman-12) punct(encouraging-3, ,-13) case(knowledge-18, with-14) nmod:poss(knowledge-18, his-15) amod(knowledge-18, distinguished-16) compound(knowledge-18, expert-17) nmod:with(encouraging-3, knowledge-18) case(matter-21, of-19) det(matter-21, the-20) nmod:of(knowledge-18, matter-21) punct(knowledge-18, ,-22) case(wisdom-25, of-23) det(wisdom-25, the-24) nmod:of(knowledge-18, wisdom-25) case(Kingdom-29, of-26) det(Kingdom-29, the-27) compound(Kingdom-29, United-28) nmod:of(wisdom-25, Kingdom-29) acl(wisdom-25, remaining-30) xcomp(remaining-30, committed-31) case(programme-35, to-32) det(programme-35, the-33) compound(programme-35, Trident-34) nmod:to(committed-31, programme-35) case(support-39, with-36) det(support-39, the-37) amod(support-39, full-38) nmod:with(committed-31, support-39) case(President-42, of-40) det(President-42, the-41) nmod:of(support-39, President-42) case(States-46, of-43) det(States-46, the-44) compound(States-46, United-45) nmod:of(President-42, States-46) punct(encouraging-3, .-47)",1,0,0,"root(ROOT, encoraging) nsbj(encoraging, It) ax(encoraging, is) mark(have, to) xcomp(encoraging, have) det(confirmation, the) dobj(have, confirmation) case(Gentleman, of) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nmod:of(confirmation, Gentleman) pnct(encoraging, ,) case(knowledge, with) nmod:poss(knowledge, his) amod(knowledge, distingished) compond(knowledge, expert) nmod:with(encoraging, knowledge) case(matter, of) det(matter, the) nmod:of(knowledge, matter) pnct(knowledge, ,) case(wisdom, of) det(wisdom, the) nmod:of(knowledge, wisdom) case(Kingdom, of) det(Kingdom, the) compond(Kingdom, United) nmod:of(wisdom, Kingdom) acl(wisdom, remaining) xcomp(remaining, committed) case(programme, to) det(programme, the) compond(programme, Trident) nmod:to(committed, programme) case(spport, with) det(spport, the) amod(spport, fll) nmod:with(committed, spport) case(President, of) det(President, the) nmod:of(spport, President) case(States, of) det(States, the) compond(States, United) nmod:of(President, States) pnct(encoraging, .)","root(,VBG) nsbj(VBG,PRP) ax(VBG,VBZ) mark(VB,TO) xcomp(VBG,VB) det(NN,DT) dobj(VB,NN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VBG,VBG) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) compond(NN,NN) nmod:with(VBG,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) pnct(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) acl(NN,VBG) xcomp(VBG,VBN) case(NN,TO) det(NN,DT) compond(NN,NNP) nmod:to(VBN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(VBN,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) case(NNPS,IN) det(NNPS,DT) compond(NNPS,NNP) nmod:of(NNP,NNPS) pnct(VBG,VBG)","[confirmation, have, Gentleman, right]","[have, encouraging, matter, knowledge, wisdom, his, distinguished, confirmation, Gentleman]",13,"[have, encouraging, matter, knowledge, wisdom, his, distinguished, confirmation, Gentleman]","[have, encouraging, matter, knowledge, wisdom, his, distinguished, confirmation, Gentleman]",VBP_have JJ_encouraging NN_matter NN_knowledge NN_wisdom PRP$_his JJ_distinguished NN_confirmation NNP_Gentleman ,"[have, encouraging, matter, knowledge, wisdom, his, distinguished, confirmation, Gentleman]","[have, encouraging, matter, knowledge, wisdom, his, distinguished, confirmation, Gentleman]",VBP_have JJ_encouraging NN_matter NN_knowledge NN_wisdom PRP$_his JJ_distinguished NN_confirmation NNP_Gentleman ,"[have, encouraging, matter, knowledge, wisdom, his, distinguished, confirmation, Gentleman]",VBP_have JJ_encouraging NN_matter NN_knowledge NN_wisdom PRP$_his JJ_distinguished NN_confirmation NNP_Gentleman ,"[have, encouraging, matter, knowledge, wisdom, his, distinguished, confirmation, Gentleman]",VBP_have JJ_encouraging NN_matter NN_knowledge NN_wisdom PRP$_his JJ_distinguished NN_confirmation NNP_Gentleman ,2,1,1,1,1,1,1,1,1,1
Is it not the case that the figures for the whole of the past seven years show that the level of output in Scotland is running below that which the Government inherited from the last Labour Government?,IsVBZ itPRP notRB theDT caseNN thatIN theDT figuresNNS forIN theDT wholeNN ofIN theDT pastJJ sevenCD yearsNNS showVBP thatIN theDT levelNN ofIN outputNN inIN ScotlandNNP isVBZ runningVBG belowIN thatDT whichWDT theDT GovernmentNNP inheritedVBD fromIN theDT lastJJ LabourJJ GovernmentNN ,"root(ROOT-0, case-5) cop(case-5, Is-1) nsubj(case-5, it-2) neg(case-5, not-3) det(case-5, the-4) mark(show-17, that-6) det(figures-8, the-7) nsubj(show-17, figures-8) case(whole-11, for-9) det(whole-11, the-10) nmod:for(figures-8, whole-11) case(years-16, of-12) det(years-16, the-13) amod(years-16, past-14) nummod(years-16, seven-15) nmod:of(whole-11, years-16) ccomp(case-5, show-17) mark(running-26, that-18) det(level-20, the-19) nsubj(running-26, level-20) case(output-22, of-21) nmod:of(level-20, output-22) case(Scotland-24, in-23) nmod:in(level-20, Scotland-24) aux(running-26, is-25) ccomp(show-17, running-26) advmod(running-26, below-27) dep(below-27, that-28) dobj(inherited-32, which-29) det(Government-31, the-30) nsubj(inherited-32, Government-31) acl:relcl(that-28, inherited-32) case(Government-37, from-33) det(Government-37, the-34) amod(Government-37, last-35) compound(Government-37, Labour-36) nmod:from(inherited-32, Government-37) punct(case-5, ?-38)",1,1,0,"root(ROOT, case) cop(case, Is) nsbj(case, it) neg(case, not) det(case, the) mark(show, that) det(figres, the) nsbj(show, figres) case(whole, for) det(whole, the) nmod:for(figres, whole) case(years, of) det(years, the) amod(years, past) nmmod(years, seven) nmod:of(whole, years) ccomp(case, show) mark(rnning, that) det(level, the) nsbj(rnning, level) case(otpt, of) nmod:of(level, otpt) case(Scotland, in) nmod:in(level, Scotland) ax(rnning, is) ccomp(show, rnning) advmod(rnning, below) dep(below, that) dobj(inherited, which) det(Government, the) nsbj(inherited, Government) acl:relcl(that, inherited) case(Government, from) det(Government, the) amod(Government, last) compond(Government, Labor) nmod:from(inherited, Government) pnct(case, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) mark(VBP,DT) det(NNS,DT) nsbj(VBP,NNS) case(NN,IN) det(NN,DT) nmod:for(NNS,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmmod(NNS,CD) nmod:of(NN,NNS) ccomp(NN,VBP) mark(VBG,DT) det(NN,DT) nsbj(VBG,NN) case(NN,IN) nmod:of(NN,NN) case(NNP,IN) nmod:in(NN,NNP) ax(VBG,VBZ) ccomp(VBP,VBG) advmod(VBG,IN) dep(IN,DT) dobj(VBD,WDT) det(NN,DT) nsbj(VBD,NN) acl:relcl(DT,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,JJ) nmod:from(VBD,NN) pnct(NN,NN)","[which, that, Government, inherited, Government, last]","[which, that, Government, inherited, Government, last]",14,"[which, that, Government, inherited, Government, last]","[which, that, Government, inherited, Government, last]",WDT_which IN_that NNP_Government VBD_inherited NNP_Government JJ_last ,"[which, that, Government, inherited, Government, last]","[which, that, Government, inherited, Government, last]",WDT_which IN_that NNP_Government VBD_inherited NNP_Government JJ_last ,"[which, that, Government, inherited, Government, last]",WDT_which IN_that NNP_Government VBD_inherited NNP_Government JJ_last ,"[which, that, Government, inherited, Government, last]",WDT_which IN_that NNP_Government VBD_inherited NNP_Government JJ_last ,2,2,2,2,1,2,2,2,2,2
Is it not further the case that the Government are cutting by £100 million the Scottish Office budget?,IsVBZ itPRP notRB furtherRBR theDT caseNN thatIN theDT GovernmentNNP areVBP cuttingVBG byIN £100NNP millionCD theDT ScottishJJ OfficeNNP budgetNN ,"root(ROOT-0, case-6) cop(case-6, Is-1) nsubj(case-6, it-2) neg(case-6, not-3) advmod(case-6, further-4) det(case-6, the-5) mark(cutting-11, that-7) det(Government-9, the-8) nsubj(cutting-11, Government-9) aux(cutting-11, are-10) ccomp(case-6, cutting-11) case(million-15, by-12) compound(million-15, #-13) compound(million-15, 100-14) nmod:by(cutting-11, million-15) det(budget-19, the-16) amod(budget-19, Scottish-17) compound(budget-19, Office-18) dep(million-15, budget-19) punct(case-6, ?-20)",1,0,0,"root(ROOT, case) cop(case, Is) nsbj(case, it) neg(case, not) advmod(case, frther) det(case, the) mark(ctting, that) det(Government, the) nsbj(ctting, Government) ax(ctting, are) ccomp(case, ctting) case(million, by) compond(million, #) compond(million, 100) nmod:by(ctting, million) det(bdget, the) amod(bdget, Scottish) compond(bdget, Office) dep(million, bdget) pnct(case, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) advmod(NN,RBR) det(NN,DT) mark(VBG,IN) det(NNP,DT) nsbj(VBG,NNP) ax(VBG,VBP) ccomp(NN,VBG) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:by(VBG,CD) det(NN,DT) amod(NN,JJ) compond(NN,NNP) dep(CD,NN) pnct(NN,NN)","[million, Government, cutting]","[million, Government, cutting]",3,[ ],[ ],CD_million NNP_Government VBG_cutting ,"[million, Government, cutting]","[million, Government, cutting]",CD_million NNP_Government VBG_cutting ,"[million, Government, cutting]",CD_million NNP_Government VBG_cutting ,"[million, Government, cutting]",CD_million NNP_Government VBG_cutting ,2,2,2,2,1,2,2,2,2,2
Has my hon. Friend noticed how the Opposition used to talk about the non oil economy and are now less inclined to do so?,HasNNP myPRP$ honNN FriendNNP noticedVBD howWRB theDT OppositionNNP usedVBD toTO talkVB aboutIN theDT nonJJ oilNN economyNN andCC areVBP nowRB lessRBR inclinedJJ toTO doVB soRB ,"root(ROOT-0, noticed-5) aux(noticed-5, Has-1) nmod:poss(Friend-4, my-2) compound(Friend-4, hon.-3) nsubj(noticed-5, Friend-4) advmod(used-9, how-6) det(Opposition-8, the-7) nsubj(used-9, Opposition-8) nsubj(inclined-21, Opposition-8) ccomp(noticed-5, used-9) mark(talk-11, to-10) xcomp(used-9, talk-11) case(economy-16, about-12) det(economy-16, the-13) amod(economy-16, non-14) compound(economy-16, oil-15) nmod:about(talk-11, economy-16) cc(used-9, and-17) cop(inclined-21, are-18) advmod(inclined-21, now-19) advmod(inclined-21, less-20) ccomp(noticed-5, inclined-21) conj:and(used-9, inclined-21) mark(do-23, to-22) xcomp(inclined-21, do-23) advmod(do-23, so-24) punct(noticed-5, ?-25)",1,1,0,"root(ROOT, noticed) ax(noticed, Has) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(noticed, Friend) advmod(sed, how) det(Opposition, the) nsbj(sed, Opposition) nsbj(inclined, Opposition) ccomp(noticed, sed) mark(talk, to) xcomp(sed, talk) case(economy, abot) det(economy, the) amod(economy, non) compond(economy, oil) nmod:abot(talk, economy) cc(sed, and) cop(inclined, are) advmod(inclined, now) advmod(inclined, less) ccomp(noticed, inclined) conj:and(sed, inclined) mark(do, to) xcomp(inclined, do) advmod(do, so) pnct(noticed, ?)","root(,VBD) ax(VBD,NNP) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBD,NNP) advmod(VBD,WRB) det(NNP,DT) nsbj(VBD,NNP) nsbj(JJ,NNP) ccomp(VBD,VBD) mark(VB,TO) xcomp(VBD,VB) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:abot(VB,NN) cc(VBD,CC) cop(JJ,VBP) advmod(JJ,RB) advmod(JJ,RBR) ccomp(VBD,JJ) conj:and(VBD,JJ) mark(VB,TO) xcomp(JJ,VB) advmod(VB,RB) pnct(VBD,VBD)","[how, noticed, now, and, inclined, do, less, Friend, used, ROOT, my, talk, Opposition]","[how, noticed, now, and, inclined, do, less, Friend, used, ROOT, my, talk, Opposition]",3,"[how, noticed, now, and, do, less, inclined, used, talk, Opposition]",[ ],WRB_how VBD_noticed RB_now CC_and JJ_inclined VB_do JJR_less NNP_Friend VBN_used PRP$_my VB_talk NNP_Opposition ,"[how, noticed, now, and, inclined, do, less, Friend, used, ROOT, my, talk, Opposition]","[how, noticed, now, and, inclined, do, less, Friend, used, ROOT, my, talk, Opposition]",WRB_how VBD_noticed RB_now CC_and JJ_inclined VB_do JJR_less NNP_Friend VBN_used PRP$_my VB_talk NNP_Opposition ,"[how, noticed, now, and, inclined, do, less, Friend, used, ROOT, my, talk, Opposition]",WRB_how VBD_noticed RB_now CC_and JJ_inclined VB_do JJR_less NNP_Friend VBN_used PRP$_my VB_talk NNP_Opposition ,"[how, noticed, now, and, inclined, do, less, Friend, used, ROOT, my, talk, Opposition]",WRB_how VBD_noticed RB_now CC_and JJ_inclined VB_do JJR_less NNP_Friend VBN_used PRP$_my VB_talk NNP_Opposition ,2,2,2,2,1,2,2,2,2,2
I am sorry that Labour Members do not seem to be interested in unemployment in the Highlands of Scotland.,IPRP amVBP sorryJJ thatIN LabourNNP MembersNNPS doVBP notRB seemVB toTO beVB interestedJJ inIN unemploymentNN inIN theDT HighlandsNNP ofIN ScotlandNNP ,"root(ROOT-0, sorry-3) nsubj(sorry-3, I-1) cop(sorry-3, am-2) mark(seem-9, that-4) compound(Members-6, Labour-5) nsubj(seem-9, Members-6) aux(seem-9, do-7) neg(seem-9, not-8) ccomp(sorry-3, seem-9) mark(interested-12, to-10) cop(interested-12, be-11) xcomp(seem-9, interested-12) case(unemployment-14, in-13) nmod:in(interested-12, unemployment-14) case(Highlands-17, in-15) det(Highlands-17, the-16) nmod:in(unemployment-14, Highlands-17) case(Scotland-19, of-18) nmod:of(Highlands-17, Scotland-19) punct(sorry-3, .-20)",1,0,0,"root(ROOT, sorry) nsbj(sorry, I) cop(sorry, am) mark(seem, that) compond(Members, Labor) nsbj(seem, Members) ax(seem, do) neg(seem, not) ccomp(sorry, seem) mark(interested, to) cop(interested, be) xcomp(seem, interested) case(nemployment, in) nmod:in(interested, nemployment) case(Highlands, in) det(Highlands, the) nmod:in(nemployment, Highlands) case(Scotland, of) nmod:of(Highlands, Scotland) pnct(sorry, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VB,IN) compond(NNPS,NNP) nsbj(VB,NNPS) ax(VB,VBP) neg(VB,RB) ccomp(JJ,VB) mark(JJ,TO) cop(JJ,VB) xcomp(VB,JJ) case(NN,IN) nmod:in(JJ,NN) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(JJ,JJ)","[seem, Members]","[seem, Members]",7,"[seem, Members]","[seem, Members]",VB_seem NNS_Members ,"[seem, Members]","[seem, Members]",VB_seem NNS_Members ,"[seem, Members]",VB_seem NNS_Members ,"[seem, Members]",VB_seem NNS_Members ,3,2,2,0,0,0,0,0,0,0
A recent survey showed that  because of that important industry  about 3 700 American jobs are coming to Scotland   unless a Labour Government are returned.,ADT recentJJ surveyNN showedVBD thatIN becauseIN ofIN thatDT importantJJ industryNN aboutIN 3CD 700CD AmericanJJ jobsNNS areVBP comingVBG toTO ScotlandNNP unlessIN aDT LabourJJ GovernmentNN areVBP returnedVBN ,"root(ROOT-0, showed-4) det(survey-3, A-1) amod(survey-3, recent-2) nsubj(showed-4, survey-3) mark(coming-18, that-5) punct(coming-18, ,-6) case(industry-11, because-7) mwe(because-7, of-8) det(industry-11, that-9) amod(industry-11, important-10) nmod:because_of(coming-18, industry-11) punct(coming-18, ,-12) advmod(3,700-14, about-13) nummod(jobs-16, 3,700-14) amod(jobs-16, American-15) nsubj(coming-18, jobs-16) aux(coming-18, are-17) ccomp(showed-4, coming-18) case(Scotland-20, to-19) nmod:to(coming-18, Scotland-20) mark(returned-26, unless-21) det(Government-24, a-22) compound(Government-24, Labour-23) nsubjpass(returned-26, Government-24) auxpass(returned-26, are-25) advcl(coming-18, returned-26) punct(showed-4, .-27)",1,0,0,"root(ROOT, showed) det(srvey, A) amod(srvey, recent) nsbj(showed, srvey) mark(coming, that) pnct(coming, ,) case(indstry, becase) mwe(becase, of) det(indstry, that) amod(indstry, important) nmod:becase_of(coming, indstry) pnct(coming, ,) advmod(3,700, abot) nmmod(jobs, 3,700) amod(jobs, American) nsbj(coming, jobs) ax(coming, are) ccomp(showed, coming) case(Scotland, to) nmod:to(coming, Scotland) mark(retrned, nless) det(Government, a) compond(Government, Labor) nsbjpass(retrned, Government) axpass(retrned, are) advcl(coming, retrned) pnct(showed, .)","root(,VBD) det(NN,DT) amod(NN,JJ) nsbj(VBD,NN) mark(VBG,DT) pnct(VBG,VBG) case(NN,IN) mwe(IN,IN) det(NN,DT) amod(NN,JJ) nmod:becase_of(VBG,NN) pnct(VBG,VBG) advmod(VBG,IN) nmmod(NNS,NNS) amod(NNS,JJ) nsbj(VBG,NNS) ax(VBG,VBP) ccomp(VBD,VBG) case(NNP,TO) nmod:to(VBG,NNP) mark(VBN,IN) det(NN,DT) compond(NN,JJ) nsbjpass(VBN,NN) axpass(VBN,VBP) advcl(VBG,VBN) pnct(VBD,VBD)","[coming, returned, Government]","[coming, returned, Government]",9,"[coming, returned, Government]","[coming, returned, Government]",VBG_coming VBN_returned NNP_Government ,"[coming, returned, Government]","[coming, returned, Government]",VBG_coming VBN_returned NNP_Government ,"[coming, returned, Government]",VBG_coming VBN_returned NNP_Government ,"[coming, returned, Government]",VBG_coming VBN_returned NNP_Government ,3,2,2,0,0,0,0,0,0,0
I thought that that was a splendid example of the Minister's logical thought processes.,IPRP thoughtVBD thatIN thatDT wasVBD aDT splendidJJ exampleNN ofIN theDT MinisterNNP 'sPOS logicalJJ thoughtNN processesNNS ,"root(ROOT-0, thought-2) nsubj(thought-2, I-1) mark(example-8, that-3) nsubj(example-8, that-4) cop(example-8, was-5) det(example-8, a-6) amod(example-8, splendid-7) ccomp(thought-2, example-8) case(processes-15, of-9) det(Minister-11, the-10) nmod:poss(processes-15, Minister-11) case(Minister-11, 's-12) amod(processes-15, logical-13) compound(processes-15, thought-14) nmod:of(example-8, processes-15) punct(thought-2, .-16)",1,1,0,"root(ROOT, thoght) nsbj(thoght, I) mark(example, that) nsbj(example, that) cop(example, was) det(example, a) amod(example, splendid) ccomp(thoght, example) case(processes, of) det(Minister, the) nmod:poss(processes, Minister) ""case(Minister, s)"", amod(processes, logical) compond(processes, thoght) nmod:of(example, processes) pnct(thoght, .)","root(,NN) nsbj(NN,PRP) mark(NN,DT) nsbj(NN,DT) cop(NN,VBD) det(NN,DT) amod(NN,JJ) ccomp(NN,NN) case(NNS,IN) det(NNP,DT) nmod:poss(NNS,NNP) case(NNP,POS) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) pnct(NN,NN)","[logical, example, processes, Minister]","[logical, example, processes, Minister]",14,"[logical, example, processes, Minister]","[logical, example, processes, Minister]",JJ_logical NN_example NNS_processes NNP_Minister ,"[logical, example, processes, Minister]","[logical, example, processes, Minister]",JJ_logical NN_example NNS_processes NNP_Minister ,"[logical, example, processes, Minister]",JJ_logical NN_example NNS_processes NNP_Minister ,"[logical, example, processes, Minister]",JJ_logical NN_example NNS_processes NNP_Minister ,2,2,2,1,1,1,1,1,1,2
Why does he maintain the charade of a successful index of industrial productivity when between the third quarter of 1979 and the third quarter of 1986 it has dropped by 5.8 per cent.,WhyWRB doesVBZ hePRP maintainVB theDT charadeNN ofIN aDT successfulJJ indexNN ofIN industrialJJ productivityNN whenWRB betweenIN theDT thirdJJ quarterNN ofIN 1979CD andCC theDT thirdJJ quarterNN ofIN 1986CD itPRP hasVBZ droppedVBN byIN 58CD perIN centNN ,"root(ROOT-0, maintain-4) advmod(maintain-4, Why-1) aux(maintain-4, does-2) nsubj(maintain-4, he-3) det(charade-6, the-5) dobj(maintain-4, charade-6) case(index-10, of-7) det(index-10, a-8) amod(index-10, successful-9) nmod:of(charade-6, index-10) case(productivity-13, of-11) amod(productivity-13, industrial-12) nmod:of(index-10, productivity-13) advmod(maintain-4, when-14) case(quarter-18, between-15) det(quarter-18, the-16) amod(quarter-18, third-17) nmod:between(when-14, quarter-18) case(1979-20, of-19) nmod:of(quarter-18, 1979-20) cc(quarter-18, and-21) det(quarter-24, the-22) amod(quarter-24, third-23) nmod:between(when-14, quarter-24) conj:and(quarter-18, quarter-24) case(1986-26, of-25) nmod:of(quarter-24, 1986-26) nsubj(dropped-29, it-27) aux(dropped-29, has-28) acl:relcl(quarter-24, dropped-29) case(5.8-31, by-30) nmod:by(dropped-29, 5.8-31) case(cent-33, per-32) nmod:per(5.8-31, cent-33) punct(maintain-4, .-34)",1,0,0,"root(ROOT, maintain) advmod(maintain, Why) ax(maintain, does) nsbj(maintain, he) det(charade, the) dobj(maintain, charade) case(index, of) det(index, a) amod(index, sccessfl) nmod:of(charade, index) case(prodctivity, of) amod(prodctivity, indstrial) nmod:of(index, prodctivity) advmod(maintain, when) case(qarter, between) det(qarter, the) amod(qarter, third) nmod:between(when, qarter) case(1979, of) nmod:of(qarter, 1979) cc(qarter, and) det(qarter, the) amod(qarter, third) nmod:between(when, qarter) conj:and(qarter, qarter) case(1986, of) nmod:of(qarter, 1986) nsbj(dropped, it) ax(dropped, has) acl:relcl(qarter, dropped) case(5.8, by) nmod:by(dropped, 5.8) case(cent, per) nmod:per(5.8, cent) pnct(maintain, .)","root(,VB) advmod(VB,WRB) ax(VB,VBZ) nsbj(VB,PRP) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) advmod(VB,WRB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:between(WRB,NN) case(CD,IN) nmod:of(NN,CD) cc(NN,CC) det(NN,DT) amod(NN,JJ) nmod:between(WRB,NN) conj:and(NN,NN) case(CD,IN) nmod:of(NN,CD) nsbj(VBN,PRP) ax(VBN,VBZ) acl:relcl(NN,VBN) case(VBN,IN) nmod:by(VBN,VBN) case(NN,IN) nmod:per(IN,NN) pnct(VB,VB)","[Why, charade, when, ROOT, he, maintain]","[Why, charade, when, ROOT, he, maintain]",15,[ ],[ ],WRB_Why NN_charade WRB_when PRP_he VB_maintain ,"[Why, charade, when, ROOT, he, maintain]",[ ],[ ],"[Why, charade, when, ROOT, he, maintain]",WRB_Why NN_charade WRB_when PRP_he VB_maintain ,"[Why, charade, when, ROOT, he, maintain]",WRB_Why NN_charade WRB_when PRP_he VB_maintain ,1,2,2,0,0,0,0,0,0,0
Why does he not address himself to the fair point made by my hon. Friend the Member for Cumbernauld and Kilsyth (Mr. Hogg)?,WhyWRB doesVBZ hePRP notRB addressVB himselfPRP toTO theDT fairJJ pointNN madeVBN byIN myPRP$ honNN FriendNNP theDT MemberNNP forIN CumbernauldNNP andCC KilsythNNP (( MrNNP HoggNNP )) ,"root(ROOT-0, address-5) advmod(address-5, Why-1) aux(address-5, does-2) nsubj(address-5, he-3) neg(address-5, not-4) dobj(address-5, himself-6) case(point-10, to-7) det(point-10, the-8) amod(point-10, fair-9) nmod:to(address-5, point-10) acl(point-10, made-11) case(Friend-15, by-12) nmod:poss(Friend-15, my-13) compound(Friend-15, hon.-14) nmod:by(made-11, Friend-15) det(Member-17, the-16) dep(Friend-15, Member-17) case(Cumbernauld-19, for-18) nmod:for(Member-17, Cumbernauld-19) cc(Cumbernauld-19, and-20) nmod:for(Member-17, Kilsyth-21) conj:and(Cumbernauld-19, Kilsyth-21) punct(Hogg-24, -LRB--22) compound(Hogg-24, Mr.-23) appos(Member-17, Hogg-24) punct(Hogg-24, -RRB--25) punct(address-5, ?-26)",1,0,0,"root(ROOT, address) advmod(address, Why) ax(address, does) nsbj(address, he) neg(address, not) dobj(address, himself) case(point, to) det(point, the) amod(point, fair) nmod:to(address, point) acl(point, made) case(Friend, by) nmod:poss(Friend, my) compond(Friend, hon.) nmod:by(made, Friend) det(Member, the) dep(Friend, Member) case(Cmbernald, for) nmod:for(Member, Cmbernald) cc(Cmbernald, and) nmod:for(Member, Kilsyth) conj:and(Cmbernald, Kilsyth) pnct(Hogg, ) compond(Hogg, Mr.) appos(Member, Hogg) pnct(Hogg, ) pnct(address, ?)","root(,VB) advmod(VB,WRB) ax(VB,VBZ) nsbj(VB,PRP) neg(VB,RB) dobj(VB,PRP) case(NN,TO) det(NN,DT) amod(NN,JJ) nmod:to(VB,NN) acl(NN,VBN) case(NNP,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:by(VBN,NNP) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(VB,VB)","[not, Friend, point, Cumbernauld, my, address, and, made, Why, Kilsyth, ROOT, he, Hogg, himself, Member]","[not, Friend, point, Cumbernauld, my, address, and, made, Why, Kilsyth, ROOT, he, Hogg, himself, Member]",15,"[Friend, point, Cumbernauld, Member, and, my, Kilsyth, Hogg, made]","[Friend, point, Cumbernauld, Member, and, my, Kilsyth, Hogg, made]",RB_not NNP_Friend VB_point NNP_Cumbernauld PRP$_my VB_address CC_and VBN_made WRB_Why NNP_Kilsyth PRP_he NNP_Hogg PRP_himself NNP_Member ,"[not, Friend, point, Cumbernauld, my, address, and, made, Why, Kilsyth, ROOT, he, Hogg, himself, Member]","[not, Friend, point, Cumbernauld, my, address, and, made, Why, Kilsyth, ROOT, he, Hogg, himself, Member]",RB_not NNP_Friend VB_point NNP_Cumbernauld PRP$_my VB_address CC_and VBN_made WRB_Why NNP_Kilsyth PRP_he NNP_Hogg PRP_himself NNP_Member ,"[not, Friend, point, Cumbernauld, my, address, and, made, Why, Kilsyth, ROOT, he, Hogg, himself, Member]",RB_not NNP_Friend VB_point NNP_Cumbernauld PRP$_my VB_address CC_and VBN_made WRB_Why NNP_Kilsyth PRP_he NNP_Hogg PRP_himself NNP_Member ,"[not, Friend, point, Cumbernauld, my, address, and, made, Why, Kilsyth, ROOT, he, Hogg, himself, Member]",RB_not NNP_Friend VB_point NNP_Cumbernauld PRP$_my VB_address CC_and VBN_made WRB_Why NNP_Kilsyth PRP_he NNP_Hogg PRP_himself NNP_Member ,2,2,2,2,1,2,0,0,0,2
Does he defend that cut  and does it give him satisfaction?,DoesVBZ hePRP defendVB thatIN cutNN andCC doesVBZ itPRP giveVB himPRP satisfactionNN ,"root(ROOT-0, defend-3) aux(defend-3, Does-1) nsubj(defend-3, he-2) det(cut-5, that-4) dobj(defend-3, cut-5) punct(defend-3, ,-6) cc(defend-3, and-7) aux(give-10, does-8) nsubj(give-10, it-9) conj:and(defend-3, give-10) iobj(give-10, him-11) dobj(give-10, satisfaction-12) punct(defend-3, ?-13)",0,0,0,"root(ROOT, defend) ax(defend, Does) nsbj(defend, he) det(ct, that) dobj(defend, ct) pnct(defend, ,) cc(defend, and) ax(give, does) nsbj(give, it) conj:and(defend, give) iobj(give, him) dobj(give, satisfaction) pnct(defend, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) det(NN,IN) dobj(VB,NN) pnct(VB,VB) cc(VB,CC) ax(VB,VBZ) nsbj(VB,PRP) conj:and(VB,VB) iobj(VB,PRP) dobj(VB,NN) pnct(VB,VB)","[defend, ROOT, he, and, cut]","[defend, ROOT, he, and, cut]",15,[ ],[ ],VB_defend PRP_he CC_and NN_cut ,"[defend, ROOT, he, and, cut]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The hon. Gentleman's premise is surprising  particularly as he comes from a part of Scotland that voted overwhelmingly against the Scottish Assembly when the referendum took place.,TheDT honNN GentlemanNNP 'sPOS premiseNN isVBZ surprisingJJ particularlyRB asIN hePRP comesVBZ fromIN aDT partNN ofIN ScotlandNNP thatWDT votedVBD overwhelminglyRB againstIN theDT ScottishJJ AssemblyNN whenWRB theDT referendumNN tookVBD placeNN ,"root(ROOT-0, surprising-7) det(Gentleman-3, The-1) compound(Gentleman-3, hon.-2) nmod:poss(premise-5, Gentleman-3) case(Gentleman-3, 's-4) nsubj(surprising-7, premise-5) cop(surprising-7, is-6) punct(surprising-7, ,-8) advmod(comes-12, particularly-9) mark(comes-12, as-10) nsubj(comes-12, he-11) advcl(surprising-7, comes-12) case(part-15, from-13) det(part-15, a-14) nmod:from(comes-12, part-15) case(Scotland-17, of-16) nmod:of(part-15, Scotland-17) nsubj(voted-19, that-18) acl:relcl(part-15, voted-19) advmod(voted-19, overwhelmingly-20) case(Assembly-24, against-21) det(Assembly-24, the-22) amod(Assembly-24, Scottish-23) nmod:against(voted-19, Assembly-24) advmod(took-28, when-25) det(referendum-27, the-26) nsubj(took-28, referendum-27) advcl(voted-19, took-28) dobj(took-28, place-29) punct(surprising-7, .-30)",1,0,0,"root(ROOT, srprising) det(Gentleman, The) compond(Gentleman, hon.) nmod:poss(premise, Gentleman) ""case(Gentleman, s)"", nsbj(srprising, premise) cop(srprising, is) pnct(srprising, ,) advmod(comes, particlarly) mark(comes, as) nsbj(comes, he) advcl(srprising, comes) case(part, from) det(part, a) nmod:from(comes, part) case(Scotland, of) nmod:of(part, Scotland) nsbj(voted, that) acl:relcl(part, voted) advmod(voted, overwhelmingly) case(Assembly, against) det(Assembly, the) amod(Assembly, Scottish) nmod:against(voted, Assembly) advmod(took, when) det(referendm, the) nsbj(took, referendm) advcl(voted, took) dobj(took, place) pnct(srprising, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nsbj(JJ,NN) cop(JJ,VBZ) pnct(JJ,JJ) advmod(VBZ,RB) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(JJ,VBZ) case(NN,IN) det(NN,DT) nmod:from(VBZ,NN) case(NNP,IN) nmod:of(NN,NNP) nsbj(VBD,WDT) acl:relcl(NN,VBD) advmod(VBD,RB) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:against(VBD,NN) advmod(VBD,WRB) det(NN,DT) nsbj(VBD,NN) advcl(VBD,VBD) dobj(VBD,NN) pnct(JJ,JJ)","[surprising, comes, premise, part, particularly, he, Gentleman]","[surprising, comes, premise, part, particularly, he, Gentleman]",15,"[surprising, comes, premise, part, particularly, he, Gentleman]","[surprising, comes, premise, part, particularly, he, Gentleman]",JJ_surprising VBZ_comes NN_premise NN_part RB_particularly PRP_he NNP_Gentleman ,"[surprising, comes, premise, part, particularly, he, Gentleman]","[surprising, comes, premise, part, particularly, he, Gentleman]",JJ_surprising VBZ_comes NN_premise NN_part RB_particularly PRP_he NNP_Gentleman ,"[surprising, comes, premise, part, particularly, he, Gentleman]",JJ_surprising VBZ_comes NN_premise NN_part RB_particularly PRP_he NNP_Gentleman ,"[surprising, comes, premise, part, particularly, he, Gentleman]",JJ_surprising VBZ_comes NN_premise NN_part RB_particularly PRP_he NNP_Gentleman ,2,2,2,0,0,0,0,0,0,0
He should be more aware than most people that in the Grampian region  from which he comes  feelings have always been expressed in a manner adverse to the concept of a Scottish Assembly because of the damaging consequences that it is perceived it would have on Aberdeen and on the north east region of Scotland as a whole.,HePRP shouldMD beVB moreJJR awareJJ thanIN mostJJS peopleNNS thatWDT inIN theDT GrampianJJ regionNN fromIN whichWDT hePRP comesVBZ feelingsNNS haveVBP alwaysRB beenVBN expressedVBN inIN aDT mannerNN adverseJJ toTO theDT conceptNN ofIN aDT ScottishJJ AssemblyNNP becauseIN ofIN theDT damagingNN consequencesNNS thatIN itPRP isVBZ perceivedVBN itPRP wouldMD haveVB onIN AberdeenNNP andCC onIN theDT northJJ eastJJ regionNN ofIN ScotlandNNP asIN aDT wholeNN ,"root(ROOT-0, aware-5) nsubj(aware-5, He-1) aux(aware-5, should-2) cop(aware-5, be-3) advmod(aware-5, more-4) case(people-8, than-6) amod(people-8, most-7) nmod:than(aware-5, people-8) nsubjpass(expressed-24, that-9) case(region-13, in-10) det(region-13, the-11) compound(region-13, Grampian-12) nmod:in(expressed-24, region-13) punct(region-13, ,-14) case(which-16, from-15) nmod:from(comes-18, which-16) nsubj(comes-18, he-17) acl:relcl(region-13, comes-18) punct(region-13, ,-19) nsubjpass(expressed-24, feelings-20) aux(expressed-24, have-21) advmod(expressed-24, always-22) auxpass(expressed-24, been-23) acl:relcl(people-8, expressed-24) case(manner-27, in-25) det(manner-27, a-26) nmod:in(expressed-24, manner-27) amod(manner-27, adverse-28) case(concept-31, to-29) det(concept-31, the-30) nmod:to(adverse-28, concept-31) case(Assembly-35, of-32) det(Assembly-35, a-33) amod(Assembly-35, Scottish-34) nmod:of(concept-31, Assembly-35) case(consequences-40, because-36) mwe(because-36, of-37) det(consequences-40, the-38) amod(consequences-40, damaging-39) nmod:because_of(expressed-24, consequences-40) mark(perceived-44, that-41) nsubjpass(perceived-44, it-42) auxpass(perceived-44, is-43) ccomp(consequences-40, perceived-44) nsubj(have-47, it-45) nsubj(have-47'', it-45) aux(have-47, would-46) ccomp(perceived-44, have-47) ccomp(perceived-44, have-47'') conj:and(have-47, have-47'') case(Aberdeen-49, on-48) nmod:on(have-47, Aberdeen-49) cc(have-47, and-50) case(region-55, on-51) det(region-55, the-52) compound(region-55, north-53) amod(region-55, east-54) nmod:on(have-47'', region-55) case(Scotland-57, of-56) nmod:of(region-55, Scotland-57) case(whole-60, as-58) det(whole-60, a-59) nmod:as(have-47, whole-60) punct(aware-5, .-61)",1,0,0,"root(ROOT, aware) nsbj(aware, He) ax(aware, shold) cop(aware, be) advmod(aware, more) case(people, than) amod(people, most) nmod:than(aware, people) nsbjpass(expressed, that) case(region, in) det(region, the) compond(region, Grampian) nmod:in(expressed, region) pnct(region, ,) case(which, from) nmod:from(comes, which) nsbj(comes, he) acl:relcl(region, comes) pnct(region, ,) nsbjpass(expressed, feelings) ax(expressed, have) advmod(expressed, always) axpass(expressed, been) acl:relcl(people, expressed) case(manner, in) det(manner, a) nmod:in(expressed, manner) amod(manner, adverse) case(concept, to) det(concept, the) nmod:to(adverse, concept) case(Assembly, of) det(Assembly, a) amod(Assembly, Scottish) nmod:of(concept, Assembly) case(conseqences, becase) mwe(becase, of) det(conseqences, the) amod(conseqences, damaging) nmod:becase_of(expressed, conseqences) mark(perceived, that) nsbjpass(perceived, it) axpass(perceived, is) ccomp(conseqences, perceived) nsbj(have, it) nsbj(have, it) ax(have, wold) ccomp(perceived, have) ccomp(perceived, have) conj:and(have, have) case(Aberdeen, on) nmod:on(have, Aberdeen) cc(have, and) case(region, on) det(region, the) compond(region, north) amod(region, east) nmod:on(have, region) case(Scotland, of) nmod:of(region, Scotland) case(whole, as) det(whole, a) nmod:as(have, whole) pnct(aware, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) advmod(JJ,JJR) case(NNS,IN) amod(NNS,JJS) nmod:than(JJ,NNS) nsbjpass(VBN,IN) case(NN,IN) det(NN,DT) compond(NN,JJ) nmod:in(VBN,NN) pnct(NN,NN) case(WDT,IN) nmod:from(VBZ,WDT) nsbj(VBZ,PRP) acl:relcl(NN,VBZ) pnct(NN,NN) nsbjpass(VBN,NNS) ax(VBN,VB) advmod(VBN,RB) axpass(VBN,VBN) acl:relcl(NNS,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) amod(NN,JJ) case(NN,TO) det(NN,DT) nmod:to(JJ,NN) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NN,NNP) case(NNS,IN) mwe(IN,IN) det(NNS,DT) amod(NNS,NN) nmod:becase_of(VBN,NNS) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) ccomp(NNS,VBN) nsbj(VB,PRP) nsbj(VB,PRP) ax(VB,MD) ccomp(VBN,VB) ccomp(VBN,VB) conj:and(VB,VB) case(NNP,IN) nmod:on(VB,NNP) cc(VB,CC) case(NN,IN) det(NN,DT) compond(NN,JJ) amod(NN,JJ) nmod:on(VB,NN) case(NNP,IN) nmod:of(NN,NNP) case(NN,IN) det(NN,DT) nmod:as(VB,NN) pnct(JJ,JJ)","[region, more, aware, he, ROOT, which, people, He, comes]","[region, more, aware, he, ROOT, which, people, He, comes]",4,"[which, comes, region, he]","[which, comes, region, he]",NN_region RBR_more JJ_aware PRP_he WDT_which NNS_people PRP_He VBZ_comes ,"[region, more, aware, he, ROOT, which, people, He, comes]","[region, more, aware, he, ROOT, which, people, He, comes]",NN_region RBR_more JJ_aware PRP_he WDT_which NNS_people PRP_He VBZ_comes ,"[region, more, aware, he, ROOT, which, people, He, comes]",NN_region RBR_more JJ_aware PRP_he WDT_which NNS_people PRP_He VBZ_comes ,"[region, more, aware, he, ROOT, which, people, He, comes]",NN_region RBR_more JJ_aware PRP_he WDT_which NNS_people PRP_He VBZ_comes ,2,2,2,0,0,0,0,0,0,0
Why does the Secretary of State not adhere to his personal views on these matters?,WhyWRB doesVBZ theDT SecretaryNNP ofIN StateNNP notRB adhereRB toTO hisPRP$ personalJJ viewsNNS onIN theseDT mattersNNS ,"root(ROOT-0, adhere-8) advmod(adhere-8, Why-1) aux(adhere-8, does-2) det(Secretary-4, the-3) nsubj(adhere-8, Secretary-4) case(State-6, of-5) nmod:of(Secretary-4, State-6) neg(adhere-8, not-7) case(views-12, to-9) nmod:poss(views-12, his-10) amod(views-12, personal-11) nmod:to(adhere-8, views-12) case(matters-15, on-13) det(matters-15, these-14) nmod:on(views-12, matters-15) punct(adhere-8, ?-16)",1,0,0,"root(ROOT, adhere) advmod(adhere, Why) ax(adhere, does) det(Secretary, the) nsbj(adhere, Secretary) case(State, of) nmod:of(Secretary, State) neg(adhere, not) case(views, to) nmod:poss(views, his) amod(views, personal) nmod:to(adhere, views) case(matters, on) det(matters, these) nmod:on(views, matters) pnct(adhere, ?)","root(,RB) advmod(RB,WRB) ax(RB,VBZ) det(NNP,DT) nsbj(RB,NNP) case(NNP,IN) nmod:of(NNP,NNP) neg(RB,RB) case(NNS,TO) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:to(RB,NNS) case(NNS,IN) det(NNS,DT) nmod:on(NNS,NNS) pnct(RB,RB)","[Why, Secretary, not, ROOT, State, views, adhere]","[not, State, views, matters, adhere, Why, Secretary, his, personal, ROOT]",4,"[personal, views, matters, his, adhere]","[personal, views, matters, his, adhere]",RB_not NNP_State NNS_views NNS_matters RB_adhere WRB_Why NNP_Secretary PRP$_his JJ_personal ,"[not, State, views, matters, adhere, Why, Secretary, his, personal, ROOT]","[not, State, views, matters, adhere, Why, Secretary, his, personal, ROOT]",RB_not NNP_State NNS_views NNS_matters RB_adhere WRB_Why NNP_Secretary PRP$_his JJ_personal ,"[not, State, views, matters, adhere, Why, Secretary, his, personal, ROOT]",RB_not NNP_State NNS_views NNS_matters RB_adhere WRB_Why NNP_Secretary PRP$_his JJ_personal ,"[not, State, views, matters, adhere, Why, Secretary, his, personal, ROOT]",RB_not NNP_State NNS_views NNS_matters RB_adhere WRB_Why NNP_Secretary PRP$_his JJ_personal ,1,2,2,2,1,2,0,0,0,2
Why does he not honour Lord Home's intervention in the referendum and  above all  why does he not respect the overwhelming view of the people of Scotland as expressed on 11 June?,WhyWRB doesVBZ hePRP notRB honourVB LordNNP HomeNNP 'sPOS interventionNN inIN theDT referendumNN andCC aboveIN allDT whyWRB doesVBZ hePRP notRB respectVB theDT overwhelmingJJ viewNN ofIN theDT peopleNNS ofIN ScotlandNNP asIN expressedVBN onIN 11CD JuneNNP ,"root(ROOT-0, honour-5) advmod(honour-5, Why-1) aux(honour-5, does-2) nsubj(honour-5, he-3) neg(honour-5, not-4) compound(Home-7, Lord-6) nmod:poss(intervention-9, Home-7) case(Home-7, 's-8) dobj(honour-5, intervention-9) case(referendum-12, in-10) det(referendum-12, the-11) nmod:in(intervention-9, referendum-12) cc(honour-5, and-13) punct(respect-22, ,-14) case(all-16, above-15) nmod:above(respect-22, all-16) punct(respect-22, ,-17) advmod(respect-22, why-18) aux(respect-22, does-19) nsubj(respect-22, he-20) neg(respect-22, not-21) conj:and(honour-5, respect-22) det(view-25, the-23) amod(view-25, overwhelming-24) dobj(respect-22, view-25) case(people-28, of-26) det(people-28, the-27) nmod:of(view-25, people-28) case(Scotland-30, of-29) nmod:of(people-28, Scotland-30) advmod(expressed-32, as-31) advcl(respect-22, expressed-32) case(June-35, on-33) nummod(June-35, 11-34) nmod:on(expressed-32, June-35) punct(honour-5, ?-36)",1,0,0,"root(ROOT, honor) advmod(honor, Why) ax(honor, does) nsbj(honor, he) neg(honor, not) compond(Home, Lord) nmod:poss(intervention, Home) ""case(Home, s)"", dobj(honor, intervention) case(referendm, in) det(referendm, the) nmod:in(intervention, referendm) cc(honor, and) pnct(respect, ,) case(all, above) nmod:above(respect, all) pnct(respect, ,) advmod(respect, why) ax(respect, does) nsbj(respect, he) neg(respect, not) conj:and(honor, respect) det(view, the) amod(view, overwhelming) dobj(respect, view) case(people, of) det(people, the) nmod:of(view, people) case(Scotland, of) nmod:of(people, Scotland) advmod(expressed, as) advcl(respect, expressed) case(Jne, on) nmmod(Jne, 11) nmod:on(expressed, Jne) pnct(honor, ?)","root(,VB) advmod(VB,WRB) ax(VB,VBZ) nsbj(VB,PRP) neg(VB,RB) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) cc(VB,CC) pnct(VB,VB) case(DT,IN) nmod:above(VB,DT) pnct(VB,VB) advmod(VB,WRB) ax(VB,VBZ) nsbj(VB,PRP) neg(VB,RB) conj:and(VB,VB) det(NN,DT) amod(NN,JJ) dobj(VB,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) case(NNP,IN) nmod:of(NNS,NNP) advmod(VBN,IN) advcl(VB,VBN) case(NNP,IN) nmmod(NNP,CD) nmod:on(VBN,NNP) pnct(VB,VB)","[view, all, and, honour, not, he, intervention, why, expressed, Why, ROOT, he, respect, not]","[view, all, and, honour, not, he, intervention, why, expressed, Why, ROOT, he, respect, not]",5,[ ],[ ],NN_view DT_all CC_and VB_honour RB_not PRP_he NN_intervention WRB_why VBN_expressed WRB_Why PRP_he NN_respect RB_not ,"[view, all, and, honour, not, he, intervention, why, expressed, Why, ROOT, he, respect, not]",[ ],[ ],"[view, all, and, honour, not, he, intervention, why, expressed, Why, ROOT, he, respect, not]",NN_view DT_all CC_and VB_honour RB_not PRP_he NN_intervention WRB_why VBN_expressed WRB_Why PRP_he NN_respect RB_not ,"[view, all, and, honour, not, he, intervention, why, expressed, Why, ROOT, he, respect, not]",NN_view DT_all CC_and VB_honour RB_not PRP_he NN_intervention WRB_why VBN_expressed WRB_Why PRP_he NN_respect RB_not ,3,2,2,2,1,2,2,2,2,2
Why the hon. Gentleman should conclude that this is an unsatisfactory amount of time in respect of Scotland but not in respect of the rest of the United Kingdom I find difficult to comprehend.,WhyWRB theDT honNN GentlemanNNP shouldMD concludeVB thatIN thisDT isVBZ anDT unsatisfactoryJJ amountNN ofIN timeNN inIN respectNN ofIN ScotlandNNP butCC notRB inIN respectNN ofIN theDT restNN ofIN theDT UnitedNNP KingdomNNP IPRP findVBP difficultJJ toTO comprehendVB ,"root(ROOT-0, conclude-6) advmod(conclude-6, Why-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(conclude-6, Gentleman-4) aux(conclude-6, should-5) mark(amount-12, that-7) nsubj(amount-12, this-8) cop(amount-12, is-9) det(amount-12, an-10) amod(amount-12, unsatisfactory-11) ccomp(conclude-6, amount-12) case(time-14, of-13) nmod:of(amount-12, time-14) case(respect-16, in-15) nmod:in(amount-12, respect-16) case(Scotland-18, of-17) nmod:of(respect-16, Scotland-18) cc(respect-16, but-19) neg(respect-22, not-20) case(respect-22, in-21) dep(find-31, respect-22) case(rest-25, of-23) det(rest-25, the-24) nmod:of(respect-22, rest-25) case(Kingdom-29, of-26) det(Kingdom-29, the-27) compound(Kingdom-29, United-28) nmod:of(rest-25, Kingdom-29) nsubj(find-31, I-30) nmod:in(amount-12, find-31) conj:but(respect-16, find-31) xcomp(find-31, difficult-32) mark(comprehend-34, to-33) xcomp(difficult-32, comprehend-34) punct(conclude-6, .-35)",1,0,1,"root(ROOT, conclde) advmod(conclde, Why) det(Gentleman, the) compond(Gentleman, hon.) nsbj(conclde, Gentleman) ax(conclde, shold) mark(amont, that) nsbj(amont, this) cop(amont, is) det(amont, an) amod(amont, nsatisfactory) ccomp(conclde, amont) case(time, of) nmod:of(amont, time) case(respect, in) nmod:in(amont, respect) case(Scotland, of) nmod:of(respect, Scotland) cc(respect, bt) neg(respect, not) case(respect, in) dep(find, respect) case(rest, of) det(rest, the) nmod:of(respect, rest) case(Kingdom, of) det(Kingdom, the) compond(Kingdom, United) nmod:of(rest, Kingdom) nsbj(find, I) nmod:in(amont, find) conj:bt(respect, find) xcomp(find, difficlt) mark(comprehend, to) xcomp(difficlt, comprehend) pnct(conclde, .)","root(,VB) advmod(VB,WRB) det(NNP,DT) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) mark(NN,IN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) ccomp(VB,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) nmod:in(NN,NN) case(NNP,IN) nmod:of(NN,NNP) cc(NN,CC) neg(NN,RB) case(NN,IN) dep(VBP,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) nsbj(VBP,PRP) nmod:in(NN,VBP) conj:bt(NN,VBP) xcomp(VBP,JJ) mark(VB,TO) xcomp(JJ,VB) pnct(VB,VB)","[ROOT, conclude, amount, Why, Gentleman]","[ROOT, conclude, amount, Why, Gentleman]",6,[ ],[ ],VB_conclude NN_amount WRB_Why NNP_Gentleman ,"[ROOT, conclude, amount, Why, Gentleman]","[ROOT, conclude, amount, Why, Gentleman]",VB_conclude NN_amount WRB_Why NNP_Gentleman ,"[ROOT, conclude, amount, Why, Gentleman]",VB_conclude NN_amount WRB_Why NNP_Gentleman ,"[ROOT, conclude, amount, Why, Gentleman]",VB_conclude NN_amount WRB_Why NNP_Gentleman ,1,2,2,0,0,0,0,0,0,0
Therefore  will he now show that he has some conviction  some guts and some sincerity and give some indication that at the very least he will set up some sort of group to examine the possibility of a Scottish Assembly in accordance with the wishes of the people of Scotland?,ThereforeRB willMD hePRP nowRB showVBP thatIN hePRP hasVBZ someDT convictionNN someDT gutsNNS andCC someDT sincerityNN andCC giveVB someDT indicationNN thatWDT atIN theDT veryRB leastJJS hePRP willMD setVB upRP someDT sortNN ofIN groupNN toTO examineVB theDT possibilityNN ofIN aDT ScottishJJ AssemblyNN inIN accordanceNN withIN theDT wishesNNS ofIN theDT peopleNNS ofIN ScotlandNNP ,"root(ROOT-0, show-6) advmod(show-6, Therefore-1) punct(show-6, ,-2) aux(show-6, will-3) nsubj(show-6, he-4) advmod(show-6, now-5) mark(has-9, that-7) nsubj(has-9, he-8) ccomp(show-6, has-9) det(conviction-11, some-10) dobj(has-9, conviction-11) punct(has-9, ,-12) det(guts-14, some-13) root(,-12, guts-14) cc(guts-14, and-15) det(sincerity-17, some-16) root(,-12, sincerity-17) conj:and(guts-14, sincerity-17) cc(guts-14, and-18) root(,-12, give-19) conj:and(guts-14, give-19) det(indication-21, some-20) dobj(give-19, indication-21) dobj(set-29, that-22) case(least-26, at-23) det(least-26, the-24) advmod(least-26, very-25) nmod:at(set-29, least-26) nsubj(set-29, he-27) aux(set-29, will-28) acl:relcl(indication-21, set-29) compound:prt(set-29, up-30) det(sort-32, some-31) dobj(set-29, sort-32) case(group-34, of-33) nmod:of(sort-32, group-34) mark(examine-36, to-35) advcl(set-29, examine-36) det(possibility-38, the-37) dobj(examine-36, possibility-38) case(Assembly-42, of-39) det(Assembly-42, a-40) amod(Assembly-42, Scottish-41) nmod:of(possibility-38, Assembly-42) case(accordance-44, in-43) nmod:in(Assembly-42, accordance-44) case(wishes-47, with-45) det(wishes-47, the-46) nmod:with(accordance-44, wishes-47) case(people-50, of-48) det(people-50, the-49) nmod:of(wishes-47, people-50) case(Scotland-52, of-51) nmod:of(people-50, Scotland-52) punct(guts-14, ?-53)",1,0,0,"root(ROOT, show) advmod(show, Therefore) pnct(show, ,) ax(show, will) nsbj(show, he) advmod(show, now) mark(has, that) nsbj(has, he) ccomp(show, has) det(conviction, some) dobj(has, conviction) pnct(has, ,) det(gts, some) root(,, gts) cc(gts, and) det(sincerity, some) root(,, sincerity) conj:and(gts, sincerity) cc(gts, and) root(,, give) conj:and(gts, give) det(indication, some) dobj(give, indication) dobj(set, that) case(least, at) det(least, the) advmod(least, very) nmod:at(set, least) nsbj(set, he) ax(set, will) acl:relcl(indication, set) compond:prt(set, p) det(sort, some) dobj(set, sort) case(grop, of) nmod:of(sort, grop) mark(examine, to) advcl(set, examine) det(possibility, the) dobj(examine, possibility) case(Assembly, of) det(Assembly, a) amod(Assembly, Scottish) nmod:of(possibility, Assembly) case(accordance, in) nmod:in(Assembly, accordance) case(wishes, with) det(wishes, the) nmod:with(accordance, wishes) case(people, of) det(people, the) nmod:of(wishes, people) case(Scotland, of) nmod:of(people, Scotland) pnct(gts, ?)","root(,VBP) advmod(VBP,RB) pnct(VBP,VBP) ax(VBP,MD) nsbj(VBP,PRP) advmod(VBP,RB) mark(VBZ,WDT) nsbj(VBZ,PRP) ccomp(VBP,VBZ) det(NN,DT) dobj(VBZ,NN) pnct(VBZ,VBZ) det(NNS,DT) root(DTDTNNS) cc(NNS,CC) det(NN,DT) root(DTDTNN) conj:and(NNS,NN) cc(NNS,CC) root(CCCCVB) conj:and(NNS,VB) det(NN,DT) dobj(VB,NN) dobj(VB,WDT) case(JJS,IN) det(JJS,DT) advmod(JJS,RB) nmod:at(VB,JJS) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) compond:prt(VB,RP) det(NN,DT) dobj(VB,NN) case(NN,IN) nmod:of(NN,NN) mark(VB,TO) advcl(VB,VB) det(NN,DT) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) nmod:in(NN,NN) case(NNS,IN) det(NNS,DT) nmod:with(NN,NNS) case(NNS,IN) det(NNS,DT) nmod:of(NNS,NNS) case(NNP,IN) nmod:of(NNS,NNP) pnct(NNS,NNS)","[set, conviction, sort, he, has, show, that, Therefore, he, examine, ROOT, indication, least, he, now]","[set, conviction, sort, he, has, show, that, Therefore, he, examine, ROOT, indication, least, he, now]",9,"[he, has, show, conviction]","[he, has, show, conviction]",VB_set NN_conviction NN_sort PRP_he VBZ_has VBP_show IN_that RB_Therefore PRP_he VB_examine NN_indication RBR_least PRP_he RB_now ,"[set, conviction, sort, he, has, show, that, Therefore, he, examine, ROOT, indication, least, he, now]","[set, conviction, sort, he, has, show, that, Therefore, he, examine, ROOT, indication, least, he, now]",VB_set NN_conviction NN_sort PRP_he VBZ_has VBP_show IN_that RB_Therefore PRP_he VB_examine NN_indication RBR_least PRP_he RB_now ,"[set, conviction, sort, he, has, show, that, Therefore, he, examine, ROOT, indication, least, he, now]",VB_set NN_conviction NN_sort PRP_he VBZ_has VBP_show IN_that RB_Therefore PRP_he VB_examine NN_indication RBR_least PRP_he RB_now ,"[set, conviction, sort, he, has, show, that, Therefore, he, examine, ROOT, indication, least, he, now]",VB_set NN_conviction NN_sort PRP_he VBZ_has VBP_show IN_that RB_Therefore PRP_he VB_examine NN_indication RBR_least PRP_he RB_now ,1,2,2,0,0,0,0,0,0,0
I recall that almost 750 000 people in Scotland voted for the Conservative party.,IPRP recallVBP thatDT almostRB 750CD 000CD peopleNNS inIN ScotlandNNP votedVBD forIN theDT ConservativeNNP partyNN ,"root(ROOT-0, recall-2) nsubj(recall-2, I-1) mark(voted-9, that-3) advmod(750,000-5, almost-4) nummod(people-6, 750,000-5) nsubj(voted-9, people-6) case(Scotland-8, in-7) nmod:in(people-6, Scotland-8) ccomp(recall-2, voted-9) case(party-13, for-10) det(party-13, the-11) amod(party-13, Conservative-12) nmod:for(voted-9, party-13) punct(recall-2, .-14)",1,0,0,"root(ROOT, recall) nsbj(recall, I) mark(voted, that) advmod(750,000, almost) nmmod(people, 750,000) nsbj(voted, people) case(Scotland, in) nmod:in(people, Scotland) ccomp(recall, voted) case(party, for) det(party, the) amod(party, Conservative) nmod:for(voted, party) pnct(recall, .)","root(,VBP) nsbj(VBP,PRP) mark(VBD,DT) advmod(DT,RB) nmmod(NNS,NNS) nsbj(VBD,NNS) case(NNP,IN) nmod:in(NNS,NNP) ccomp(VBP,VBD) case(NN,IN) det(NN,DT) amod(NN,NNP) nmod:for(VBD,NN) pnct(VBP,VBP)","[voted, Conservative, party]","[voted, Conservative, party]",9,"[voted, Conservative, party]","[voted, Conservative, party]",VBN_voted JJ_Conservative NN_party ,"[voted, Conservative, party]","[voted, Conservative, party]",VBN_voted JJ_Conservative NN_party ,"[voted, Conservative, party]",VBN_voted JJ_Conservative NN_party ,"[voted, Conservative, party]",VBN_voted JJ_Conservative NN_party ,3,1,2,2,1,2,0,0,0,0
The fact that the hon. Gentleman is able to identify three people who share his views on devolution is unlikely to persuade me of his argument.,TheDT factNN thatIN theDT honNN GentlemanNNP isVBZ ableJJ toTO identifyVB threeCD peopleNNS whoWP shareNN hisPRP$ viewsNNS onIN devolutionNN isVBZ unlikelyJJ toTO persuadeVB mePRP ofIN hisPRP$ argumentNN ,"root(ROOT-0, unlikely-20) det(fact-2, The-1) nsubj(unlikely-20, fact-2) mark(able-8, that-3) det(Gentleman-6, the-4) compound(Gentleman-6, hon.-5) nsubj(able-8, Gentleman-6) cop(able-8, is-7) ccomp(fact-2, able-8) mark(identify-10, to-9) xcomp(able-8, identify-10) nummod(people-12, three-11) dobj(identify-10, people-12) nsubj(share-14, who-13) acl:relcl(people-12, share-14) nmod:poss(views-16, his-15) dobj(share-14, views-16) case(devolution-18, on-17) nmod:on(share-14, devolution-18) cop(unlikely-20, is-19) mark(persuade-22, to-21) xcomp(unlikely-20, persuade-22) dobj(persuade-22, me-23) case(argument-26, of-24) nmod:poss(argument-26, his-25) nmod:of(me-23, argument-26) punct(unlikely-20, .-27)",1,0,1,"root(ROOT, nlikely) det(fact, The) nsbj(nlikely, fact) mark(able, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(able, Gentleman) cop(able, is) ccomp(fact, able) mark(identify, to) xcomp(able, identify) nmmod(people, three) dobj(identify, people) nsbj(share, who) acl:relcl(people, share) nmod:poss(views, his) dobj(share, views) case(devoltion, on) nmod:on(share, devoltion) cop(nlikely, is) mark(persade, to) xcomp(nlikely, persade) dobj(persade, me) case(argment, of) nmod:poss(argment, his) nmod:of(me, argment) pnct(nlikely, .)","root(,JJ) det(NN,DT) nsbj(JJ,NN) mark(JJ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) ccomp(NN,JJ) mark(VB,TO) xcomp(JJ,VB) nmmod(NNS,CD) dobj(VB,NNS) nsbj(NN,WP) acl:relcl(NNS,NN) nmod:poss(NNS,PRP$) dobj(NN,NNS) case(NN,IN) nmod:on(NN,NN) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,PRP) case(NN,IN) nmod:poss(NN,PRP$) nmod:of(PRP,NN) pnct(JJ,JJ)","[able, Gentleman, fact, identify]","[able, share, argument, his, views, me, his, identify, Gentleman, fact]",10,"[able, share, argument, his, views, me, his, identify, Gentleman, fact]","[argument, share, his, his, views, me]",JJ_able NN_share NN_argument PRP$_his NNS_views PRP_me PRP$_his VB_identify NNP_Gentleman NN_fact ,"[able, share, argument, his, views, me, his, identify, Gentleman, fact]","[able, share, argument, his, views, me, his, identify, Gentleman, fact]",JJ_able NN_share NN_argument PRP$_his NNS_views PRP_me PRP$_his VB_identify NNP_Gentleman NN_fact ,"[able, share, argument, his, views, me, his, identify, Gentleman, fact]",JJ_able NN_share NN_argument PRP$_his NNS_views PRP_me PRP$_his VB_identify NNP_Gentleman NN_fact ,"[able, share, argument, his, views, me, his, identify, Gentleman, fact]",JJ_able NN_share NN_argument PRP$_his NNS_views PRP_me PRP$_his VB_identify NNP_Gentleman NN_fact ,3,2,2,0,0,0,2,2,2,2
Given that the Conservative party in Scotland stood on a separate manifesto  which was separately tested and separately rejected  how can he possibly maintain that the Government have a mandate to impose their policies on an unwilling country?,GivenVBN thatIN theDT ConservativeNNP partyNN inIN ScotlandNNP stoodVBD onIN aDT separateJJ manifestoNN whichWDT wasVBD separatelyRB testedVBN andCC separatelyRB rejectedVBD howWRB canMD hePRP possiblyRB maintainVBP thatIN theDT GovernmentNNP haveVBP aDT mandateNN toTO imposeVB theirPRP$ policiesNNS onIN anDT unwillingJJ countryNN ,"root(ROOT-0, stood-8) mark(stood-8, Given-1) mark(stood-8, that-2) det(party-5, the-3) amod(party-5, Conservative-4) nsubj(stood-8, party-5) case(Scotland-7, in-6) nmod:in(party-5, Scotland-7) case(manifesto-12, on-9) det(manifesto-12, a-10) amod(manifesto-12, separate-11) nmod:on(stood-8, manifesto-12) punct(manifesto-12, ,-13) nsubjpass(tested-17, which-14) nsubjpass(rejected-20, which-14) auxpass(tested-17, was-15) advmod(tested-17, separately-16) acl:relcl(manifesto-12, tested-17) cc(tested-17, and-18) advmod(rejected-20, separately-19) acl:relcl(manifesto-12, rejected-20) conj:and(tested-17, rejected-20) punct(manifesto-12, ,-21) advmod(maintain-26, how-22) aux(maintain-26, can-23) nsubj(maintain-26, he-24) advmod(maintain-26, possibly-25) ccomp(stood-8, maintain-26) mark(have-30, that-27) det(Government-29, the-28) nsubj(have-30, Government-29) ccomp(maintain-26, have-30) det(mandate-32, a-31) dobj(have-30, mandate-32) mark(impose-34, to-33) acl(mandate-32, impose-34) nmod:poss(policies-36, their-35) dobj(impose-34, policies-36) case(country-40, on-37) det(country-40, an-38) amod(country-40, unwilling-39) nmod:on(impose-34, country-40) punct(stood-8, ?-41)",1,0,0,"root(ROOT, stood) mark(stood, Given) mark(stood, that) det(party, the) amod(party, Conservative) nsbj(stood, party) case(Scotland, in) nmod:in(party, Scotland) case(manifesto, on) det(manifesto, a) amod(manifesto, separate) nmod:on(stood, manifesto) pnct(manifesto, ,) nsbjpass(tested, which) nsbjpass(rejected, which) axpass(tested, was) advmod(tested, separately) acl:relcl(manifesto, tested) cc(tested, and) advmod(rejected, separately) acl:relcl(manifesto, rejected) conj:and(tested, rejected) pnct(manifesto, ,) advmod(maintain, how) ax(maintain, can) nsbj(maintain, he) advmod(maintain, possibly) ccomp(stood, maintain) mark(have, that) det(Government, the) nsbj(have, Government) ccomp(maintain, have) det(mandate, a) dobj(have, mandate) mark(impose, to) acl(mandate, impose) nmod:poss(policies, their) dobj(impose, policies) case(contry, on) det(contry, an) amod(contry, nwilling) nmod:on(impose, contry) pnct(stood, ?)","root(,VBD) mark(VBD,VBN) mark(VBD,IN) det(NN,DT) amod(NN,NNP) nsbj(VBD,NN) case(NNP,IN) nmod:in(NN,NNP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VBD,NN) pnct(NN,NN) nsbjpass(VBN,WDT) nsbjpass(VBD,WDT) axpass(VBN,VBD) advmod(VBN,RB) acl:relcl(NN,VBN) cc(VBN,CC) advmod(VBD,RB) acl:relcl(NN,VBD) conj:and(VBN,VBD) pnct(NN,NN) advmod(VBP,WRB) ax(VBP,MD) nsbj(VBP,PRP) advmod(VBP,RB) ccomp(VBD,VBP) mark(VBP,IN) det(NNP,DT) nsbj(VBP,NNP) ccomp(VBP,VBP) det(NN,DT) dobj(VBP,NN) mark(VB,TO) acl(NN,VB) nmod:poss(NNS,PRP$) dobj(VB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:on(VB,NN) pnct(VBD,VBD)","[he, maintain, Government, have, mandate, stood, Conservative, party, how, Scotland, possibly]","[he, maintain, Government, have, mandate, stood, Conservative, party, how, Scotland, possibly]",11,"[maintain, Government, have, mandate, stood, Conservative, party, Scotland]","[maintain, Government, have, mandate, stood, Conservative, party, Scotland]",PRP_he VB_maintain NNP_Government VBP_have NN_mandate VBN_stood JJ_Conservative NN_party WRB_how NNP_Scotland RB_possibly ,"[he, maintain, Government, have, mandate, stood, Conservative, party, how, Scotland, possibly]","[he, maintain, Government, have, mandate, stood, Conservative, party, how, Scotland, possibly]",PRP_he VB_maintain NNP_Government VBP_have NN_mandate VBN_stood JJ_Conservative NN_party WRB_how NNP_Scotland RB_possibly ,"[he, maintain, Government, have, mandate, stood, Conservative, party, how, Scotland, possibly]",PRP_he VB_maintain NNP_Government VBP_have NN_mandate VBN_stood JJ_Conservative NN_party WRB_how NNP_Scotland RB_possibly ,"[he, maintain, Government, have, mandate, stood, Conservative, party, how, Scotland, possibly]",PRP_he VB_maintain NNP_Government VBP_have NN_mandate VBN_stood JJ_Conservative NN_party WRB_how NNP_Scotland RB_possibly ,1,2,2,2,1,2,0,0,0,0
Does he believe that if the Labour party were less confused on the mandate issue he would have more difficulty in sustaining what is in truth an untenable position?,DoesVBZ hePRP believeVB thatIN ifIN theDT LabourNNP partyNN wereVBD lessJJR confusedVBN onIN theDT mandateNN issueNN hePRP wouldMD haveVB moreJJR difficultyNN inIN sustainingVBG whatWP isVBZ inIN truthNN anDT untenableJJ positionNN ,"root(ROOT-0, believe-3) aux(believe-3, Does-1) nsubj(believe-3, he-2) xcomp(believe-3, that-4) mark(confused-11, if-5) det(party-8, the-6) compound(party-8, Labour-7) nsubjpass(confused-11, party-8) auxpass(confused-11, were-9) advmod(confused-11, less-10) dep(that-4, confused-11) case(issue-15, on-12) det(issue-15, the-13) compound(issue-15, mandate-14) nmod:on(confused-11, issue-15) nsubj(have-18, he-16) aux(have-18, would-17) acl:relcl(issue-15, have-18) advmod(difficulty-20, more-19) dobj(have-18, difficulty-20) mark(sustaining-22, in-21) acl(difficulty-20, sustaining-22) dobj(sustaining-22, what-23) acl(what-23, is-24) case(truth-26, in-25) nmod:in(is-24, truth-26) det(position-29, an-27) amod(position-29, untenable-28) dep(truth-26, position-29) punct(believe-3, ?-30)",1,0,1,"root(ROOT, believe) ax(believe, Does) nsbj(believe, he) xcomp(believe, that) mark(confsed, if) det(party, the) compond(party, Labor) nsbjpass(confsed, party) axpass(confsed, were) advmod(confsed, less) dep(that, confsed) case(isse, on) det(isse, the) compond(isse, mandate) nmod:on(confsed, isse) nsbj(have, he) ax(have, wold) acl:relcl(isse, have) advmod(difficlty, more) dobj(have, difficlty) mark(sstaining, in) acl(difficlty, sstaining) dobj(sstaining, what) acl(what, is) case(trth, in) nmod:in(is, trth) det(position, an) amod(position, ntenable) dep(trth, position) pnct(believe, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) xcomp(VB,IN) mark(VBN,IN) det(NN,DT) compond(NN,NNP) nsbjpass(VBN,NN) axpass(VBN,VBD) advmod(VBN,JJR) dep(IN,VBN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:on(VBN,NN) nsbj(VB,PRP) ax(VB,MD) acl:relcl(NN,VB) advmod(NN,JJR) dobj(VB,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,WP) acl(WP,VBZ) case(NN,IN) nmod:in(VBZ,NN) det(NN,DT) amod(NN,JJ) dep(NN,NN) pnct(VB,VB)","[he, difficulty, believe, issue, ROOT, he, party, confused, that, have]","[he, difficulty, believe, issue, ROOT, he, party, confused, that, have]",11,"[party, confused]","[party, confused]",PRP_he NN_difficulty VBP_believe NN_issue PRP_he NN_party VBN_confused IN_that VBP_have ,"[he, difficulty, believe, issue, ROOT, he, party, confused, that, have]","[he, difficulty, believe, issue, ROOT, he, party, confused, that, have]",PRP_he NN_difficulty VBP_believe NN_issue PRP_he NN_party VBN_confused IN_that VBP_have ,"[he, difficulty, believe, issue, ROOT, he, party, confused, that, have]",PRP_he NN_difficulty VBP_believe NN_issue PRP_he NN_party VBN_confused IN_that VBP_have ,"[he, difficulty, believe, issue, ROOT, he, party, confused, that, have]",PRP_he NN_difficulty VBP_believe NN_issue PRP_he NN_party VBN_confused IN_that VBP_have ,2,2,2,2,1,2,2,2,2,2
I remind the hon. Gentleman  first  that the Conservative party received more votes in Grampian region than any other Scottish party  and  secondly  that the Conservative party in Scotland fought and won the general election on a United Kingdom manifesto.,IPRP remindVBP theDT honNN GentlemanNNP firstRB thatIN theDT ConservativeNNP partyNN receivedVBD moreJJR votesNNS inIN GrampianJJ regionNN thanIN anyDT otherJJ ScottishNNP partyNN andCC secondlyRB thatIN theDT ConservativeNNP partyNN inIN ScotlandNNP foughtNN andCC wonVBD theDT generalJJ electionNN onIN aDT UnitedNNP KingdomNNP manifestoNN ,"root(ROOT-0, remind-2) nsubj(remind-2, I-1) det(Gentleman-5, the-3) compound(Gentleman-5, hon.-4) dobj(remind-2, Gentleman-5) punct(Gentleman-5, ,-6) advmod(Gentleman-5, first-7) punct(Gentleman-5, ,-8) mark(received-13, that-9) det(party-12, the-10) amod(party-12, Conservative-11) nsubj(received-13, party-12) acl:relcl(Gentleman-5, received-13) amod(votes-15, more-14) dobj(received-13, votes-15) case(region-18, in-16) compound(region-18, Grampian-17) nmod:in(votes-15, region-18) case(party-23, than-19) det(party-23, any-20) amod(party-23, other-21) amod(party-23, Scottish-22) nmod:than(votes-15, party-23) punct(received-13, ,-24) cc(received-13, and-25) punct(received-13, ,-26) acl:relcl(Gentleman-5, secondly-27) conj:and(received-13, secondly-27) punct(received-13, ,-28) mark(fought-35, that-29) det(party-32, the-30) amod(party-32, Conservative-31) nsubj(fought-35, party-32) nsubj(won-37, party-32) case(Scotland-34, in-33) nmod:in(party-32, Scotland-34) ccomp(received-13, fought-35) cc(fought-35, and-36) ccomp(received-13, won-37) conj:and(fought-35, won-37) det(election-40, the-38) amod(election-40, general-39) dobj(won-37, election-40) case(manifesto-45, on-41) det(manifesto-45, a-42) compound(manifesto-45, United-43) compound(manifesto-45, Kingdom-44) nmod:on(won-37, manifesto-45) punct(remind-2, .-46)",1,0,0,"root(ROOT, remind) nsbj(remind, I) det(Gentleman, the) compond(Gentleman, hon.) dobj(remind, Gentleman) pnct(Gentleman, ,) advmod(Gentleman, first) pnct(Gentleman, ,) mark(received, that) det(party, the) amod(party, Conservative) nsbj(received, party) acl:relcl(Gentleman, received) amod(votes, more) dobj(received, votes) case(region, in) compond(region, Grampian) nmod:in(votes, region) case(party, than) det(party, any) amod(party, other) amod(party, Scottish) nmod:than(votes, party) pnct(received, ,) cc(received, and) pnct(received, ,) acl:relcl(Gentleman, secondly) conj:and(received, secondly) pnct(received, ,) mark(foght, that) det(party, the) amod(party, Conservative) nsbj(foght, party) nsbj(won, party) case(Scotland, in) nmod:in(party, Scotland) ccomp(received, foght) cc(foght, and) ccomp(received, won) conj:and(foght, won) det(election, the) amod(election, general) dobj(won, election) case(manifesto, on) det(manifesto, a) compond(manifesto, United) compond(manifesto, Kingdom) nmod:on(won, manifesto) pnct(remind, .)","root(,VBP) nsbj(VBP,PRP) det(NNP,DT) compond(NNP,NNP) dobj(VBP,NNP) pnct(NNP,NNP) advmod(NNP,RB) pnct(NNP,NNP) mark(VBD,IN) det(NN,DT) amod(NN,NNP) nsbj(VBD,NN) acl:relcl(NNP,VBD) amod(NNS,JJR) dobj(VBD,NNS) case(NN,IN) compond(NN,JJ) nmod:in(NNS,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,NNP) nmod:than(NNS,NN) pnct(VBD,VBD) cc(VBD,CC) pnct(VBD,VBD) acl:relcl(NNP,RB) conj:and(VBD,RB) pnct(VBD,VBD) mark(NN,IN) det(NN,DT) amod(NN,NNP) nsbj(NN,NN) nsbj(VBD,NN) case(NNP,IN) nmod:in(NN,NNP) ccomp(VBD,NN) cc(NN,CC) ccomp(VBD,VBD) conj:and(NN,VBD) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) nmod:on(VBD,NN) pnct(VBP,VBP)","[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]","[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]",11,"[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]","[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]",RB_secondly NNP_Scotland PRP_I NN_party VBD_fought NN_party NNS_votes NNP_Gentleman VBN_received VBP_remind JJ_Conservative JJ_Conservative NN_election CC_and NN_party JJ_first VBD_won ,"[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]","[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]",RB_secondly NNP_Scotland PRP_I NN_party VBD_fought NN_party NNS_votes NNP_Gentleman VBN_received VBP_remind JJ_Conservative JJ_Conservative NN_election CC_and NN_party JJ_first VBD_won ,"[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]",RB_secondly NNP_Scotland PRP_I NN_party VBD_fought NN_party NNS_votes NNP_Gentleman VBN_received VBP_remind JJ_Conservative JJ_Conservative NN_election CC_and NN_party JJ_first VBD_won ,"[ , secondly, Scotland, I, party, fought, party, votes, ROOT, Gentleman, received, remind, Conservative, Conservative, election, and, party, first, won]",RB_secondly NNP_Scotland PRP_I NN_party VBD_fought NN_party NNS_votes NNP_Gentleman VBN_received VBP_remind JJ_Conservative JJ_Conservative NN_election CC_and NN_party JJ_first VBD_won ,3,1,2,2,1,2,1,1,1,2
Opposition Members express puzzlement about that.,OppositionNN MembersNNP expressCC puzzlementNN aboutIN thatDT ,"root(ROOT-0, express-3) compound(Members-2, Opposition-1) nsubj(express-3, Members-2) dobj(express-3, puzzlement-4) case(that-6, about-5) nmod:about(puzzlement-4, that-6) punct(express-3, .-7)",0,0,0,"root(ROOT, express) compond(Members, Opposition) nsbj(express, Members) dobj(express, pzzlement) case(that, abot) nmod:abot(pzzlement, that) pnct(express, .)","root(,CC) compond(NNP,NN) nsbj(CC,NNP) dobj(CC,NN) case(DT,IN) nmod:abot(NN,DT) pnct(CC,CC)","[express, Members]",[ ],13,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Will the right hon. and learned Gentleman accept that I am genuinely puzzled by his reference to his personal position and the fact that he has always thought it wrong to have a one off Scottish solution for devolution?,WillMD theDT rightJJ honNN andCC learnedVBD GentlemanNNP acceptIN thatDT IPRP amVBP genuinelyRB puzzledVBN byIN hisPRP$ referenceNN toTO hisPRP$ personalJJ positionNN andCC theDT factNN thatIN hePRP hasVBZ alwaysRB thoughtVBN itPRP wrongJJ toTO haveVB aDT oneCD offIN ScottishJJ solutionNN forIN devolutionNN ,"root(ROOT-0, Will-1) det(hon.-4, the-2) amod(hon.-4, right-3) dobj(Will-1, hon.-4) cc(hon.-4, and-5) dobj(Will-1, learned-6) conj:and(hon.-4, learned-6) nsubj(accept-8, Gentleman-7) ccomp(learned-6, accept-8) mark(puzzled-13, that-9) nsubjpass(puzzled-13, I-10) auxpass(puzzled-13, am-11) advmod(puzzled-13, genuinely-12) ccomp(accept-8, puzzled-13) case(reference-16, by-14) nmod:poss(reference-16, his-15) nmod:agent(puzzled-13, reference-16) case(position-20, to-17) nmod:poss(position-20, his-18) amod(position-20, personal-19) nmod:to(reference-16, position-20) cc(position-20, and-21) det(fact-23, the-22) nmod:to(reference-16, fact-23) conj:and(position-20, fact-23) mark(thought-28, that-24) nsubj(thought-28, he-25) aux(thought-28, has-26) advmod(thought-28, always-27) ccomp(fact-23, thought-28) nsubj(wrong-30, it-29) xcomp(thought-28, wrong-30) mark(have-32, to-31) xcomp(wrong-30, have-32) det(one-34, a-33) dobj(have-32, one-34) case(solution-37, off-35) amod(solution-37, Scottish-36) nmod:off(one-34, solution-37) case(devolution-39, for-38) nmod:for(solution-37, devolution-39) punct(Will-1, ?-40)",1,1,0,"root(ROOT, Will) det(hon., the) amod(hon., right) dobj(Will, hon.) cc(hon., and) dobj(Will, learned) conj:and(hon., learned) nsbj(accept, Gentleman) ccomp(learned, accept) mark(pzzled, that) nsbjpass(pzzled, I) axpass(pzzled, am) advmod(pzzled, geninely) ccomp(accept, pzzled) case(reference, by) nmod:poss(reference, his) nmod:agent(pzzled, reference) case(position, to) nmod:poss(position, his) amod(position, personal) nmod:to(reference, position) cc(position, and) det(fact, the) nmod:to(reference, fact) conj:and(position, fact) mark(thoght, that) nsbj(thoght, he) ax(thoght, has) advmod(thoght, always) ccomp(fact, thoght) nsbj(wrong, it) xcomp(thoght, wrong) mark(have, to) xcomp(wrong, have) det(one, a) dobj(have, one) case(soltion, off) amod(soltion, Scottish) nmod:off(one, soltion) case(devoltion, for) nmod:for(soltion, devoltion) pnct(Will, ?)","root(,MD) det(MD,DT) amod(DT,JJ) dobj(MD,MD) cc(MD,CC) dobj(MD,VBD) conj:and(VBD,VBD) nsbj(IN,NNP) ccomp(VBD,IN) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBP) advmod(VBN,RB) ccomp(IN,VBN) case(NN,IN) nmod:poss(NN,PRP$) nmod:agent(VBN,NN) case(NN,TO) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:to(NN,NN) cc(NN,CC) det(NN,DT) nmod:to(NN,NN) conj:and(NN,NN) mark(VBN,IN) nsbj(VBN,PRP) ax(VBN,VBZ) advmod(VBN,RB) ccomp(NN,VBN) nsbj(JJ,PRP) xcomp(VBN,JJ) mark(VB,TO) xcomp(JJ,VB) det(CD,DT) dobj(VB,CD) case(NN,IN) amod(NN,JJ) nmod:off(CD,NN) case(NN,IN) nmod:for(NN,NN) pnct(MD,MD)","[he, fact, always, thought, accept, learned, wrong, Gentleman, puzzled]","[position, he, fact, learned, always, reference, thought, and, accept, personal, his, wrong, Gentleman, puzzled, his]",14,"[position, fact, learned, reference, and, accept, personal, his, Gentleman, puzzled, his]","[position, fact, learned, reference, and, accept, personal, his, Gentleman, puzzled, his]",NN_position PRP_he NN_fact VBD_learned RB_always NN_reference VBN_thought CC_and VBD_accept JJ_personal PRP$_his JJ_wrong NNP_Gentleman VBN_puzzled PRP$_his ,"[position, he, fact, learned, always, reference, thought, and, accept, personal, his, wrong, Gentleman, puzzled, his]","[position, he, fact, learned, always, reference, thought, and, accept, personal, his, wrong, Gentleman, puzzled, his]",NN_position PRP_he NN_fact VBD_learned RB_always NN_reference VBN_thought CC_and VBD_accept JJ_personal PRP$_his JJ_wrong NNP_Gentleman VBN_puzzled PRP$_his ,"[position, he, fact, learned, always, reference, thought, and, accept, personal, his, wrong, Gentleman, puzzled, his]",NN_position PRP_he NN_fact VBD_learned RB_always NN_reference VBN_thought CC_and VBD_accept JJ_personal PRP$_his JJ_wrong NNP_Gentleman VBN_puzzled PRP$_his ,"[position, he, fact, learned, always, reference, thought, and, accept, personal, his, wrong, Gentleman, puzzled, his]",NN_position PRP_he NN_fact VBD_learned RB_always NN_reference VBN_thought CC_and VBD_accept JJ_personal PRP$_his JJ_wrong NNP_Gentleman VBN_puzzled PRP$_his ,2,2,2,2,1,2,2,2,2,2
I also understand that the right hon. and learned Gentleman largely jusified his retreat on devolution on the ground that it was unwanted in Scotland.,IPRP alsoRB understandVBP thatIN theDT rightJJ honNN andCC learnedVBD GentlemanNNP largelyRB jusifiedVBD hisPRP$ retreatNN onIN devolutionNN onIN theDT groundNN thatIN itPRP wasVBD unwantedVBN inIN ScotlandNNP ,"root(ROOT-0, understand-3) nsubj(understand-3, I-1) advmod(understand-3, also-2) dobj(understand-3, that-4) det(hon.-7, the-5) amod(hon.-7, right-6) dep(that-4, hon.-7) cc(hon.-7, and-8) dep(that-4, learned-9) conj:and(hon.-7, learned-9) nsubj(jusified-12, Gentleman-10) advmod(jusified-12, largely-11) ccomp(learned-9, jusified-12) nmod:poss(retreat-14, his-13) dobj(jusified-12, retreat-14) case(devolution-16, on-15) nmod:on(retreat-14, devolution-16) case(ground-19, on-17) det(ground-19, the-18) nmod:on(retreat-14, ground-19) mark(unwanted-23, that-20) nsubj(unwanted-23, it-21) cop(unwanted-23, was-22) ccomp(retreat-14, unwanted-23) case(Scotland-25, in-24) nmod:in(unwanted-23, Scotland-25) punct(understand-3, .-26)",1,0,0,"root(ROOT, nderstand) nsbj(nderstand, I) advmod(nderstand, also) dobj(nderstand, that) det(hon., the) amod(hon., right) dep(that, hon.) cc(hon., and) dep(that, learned) conj:and(hon., learned) nsbj(jsified, Gentleman) advmod(jsified, largely) ccomp(learned, jsified) nmod:poss(retreat, his) dobj(jsified, retreat) case(devoltion, on) nmod:on(retreat, devoltion) case(grond, on) det(grond, the) nmod:on(retreat, grond) mark(nwanted, that) nsbj(nwanted, it) cop(nwanted, was) ccomp(retreat, nwanted) case(Scotland, in) nmod:in(nwanted, Scotland) pnct(nderstand, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) dobj(VBP,IN) det(IN,DT) amod(DT,JJ) dep(IN,IN) cc(IN,CC) dep(IN,VBD) conj:and(VBD,VBD) nsbj(VBD,NNP) advmod(VBD,RB) ccomp(VBD,VBD) nmod:poss(NN,PRP$) dobj(VBD,NN) case(NN,IN) nmod:on(NN,NN) case(NN,IN) det(NN,DT) nmod:on(NN,NN) mark(VBN,IN) nsbj(VBN,PRP) cop(VBN,VBD) ccomp(NN,VBN) case(NNP,IN) nmod:in(VBN,NNP) pnct(VBP,VBP)","[Gentleman, largely, jusified, learned, retreat]","[his, Gentleman, jusified, devolution, unwanted, ground, retreat, largely, learned]",15,"[his, Gentleman, jusified, devolution, unwanted, ground, retreat, largely, learned]","[his, Gentleman, jusified, devolution, unwanted, ground, retreat, largely, learned]",PRP$_his NNP_Gentleman VBD_jusified NN_devolution VBN_unwanted NN_ground NN_retreat RB_largely VBD_learned ,"[his, Gentleman, jusified, devolution, unwanted, ground, retreat, largely, learned]","[his, Gentleman, jusified, devolution, unwanted, ground, retreat, largely, learned]",PRP$_his NNP_Gentleman VBD_jusified NN_devolution VBN_unwanted NN_ground NN_retreat RB_largely VBD_learned ,"[his, Gentleman, jusified, devolution, unwanted, ground, retreat, largely, learned]",PRP$_his NNP_Gentleman VBD_jusified NN_devolution VBN_unwanted NN_ground NN_retreat RB_largely VBD_learned ,"[his, Gentleman, jusified, devolution, unwanted, ground, retreat, largely, learned]",PRP$_his NNP_Gentleman VBD_jusified NN_devolution VBN_unwanted NN_ground NN_retreat RB_largely VBD_learned ,2,2,2,2,1,2,2,2,2,2
If he is not convinced  as I understand that he is not by the results of the general election  what evidence is he prepared to accept of Scotland's wish for reform in the structure of government?,IfIN hePRP isVBZ notRB convincedVBN asIN IPRP understandVBP thatIN hePRP isVBZ notRB byIN theDT resultsNNS ofIN theDT generalJJ electionNN whatWP evidenceNN isVBZ hePRP preparedVBD toTO acceptVB ofIN ScotlandNNP 'sPOS wishNN forIN reformNN inIN theDT structureNN ofIN governmentNN ,"root(ROOT-0, convinced-5) mark(convinced-5, If-1) nsubjpass(convinced-5, he-2) auxpass(convinced-5, is-3) neg(convinced-5, not-4) mark(understand-8, as-6) nsubj(understand-8, I-7) advcl(convinced-5, understand-8) mark(results-15, that-9) nsubj(results-15, he-10) cop(results-15, is-11) neg(results-15, not-12) case(results-15, by-13) det(results-15, the-14) ccomp(understand-8, results-15) case(election-19, of-16) det(election-19, the-17) amod(election-19, general-18) nmod:of(results-15, election-19) punct(results-15, ,-20) det(evidence-22, what-21) dep(prepared-25, evidence-22) aux(prepared-25, is-23) nsubj(prepared-25, he-24) dep(results-15, prepared-25) mark(accept-27, to-26) xcomp(prepared-25, accept-27) case(wish-31, of-28) nmod:poss(wish-31, Scotland-29) case(Scotland-29, 's-30) nmod:of(accept-27, wish-31) case(reform-33, for-32) nmod:for(wish-31, reform-33) case(structure-36, in-34) det(structure-36, the-35) nmod:in(wish-31, structure-36) case(government-38, of-37) nmod:of(structure-36, government-38) punct(convinced-5, ?-39)",1,0,0,"root(ROOT, convinced) mark(convinced, If) nsbjpass(convinced, he) axpass(convinced, is) neg(convinced, not) mark(nderstand, as) nsbj(nderstand, I) advcl(convinced, nderstand) mark(reslts, that) nsbj(reslts, he) cop(reslts, is) neg(reslts, not) case(reslts, by) det(reslts, the) ccomp(nderstand, reslts) case(election, of) det(election, the) amod(election, general) nmod:of(reslts, election) pnct(reslts, ,) det(evidence, what) dep(prepared, evidence) ax(prepared, is) nsbj(prepared, he) dep(reslts, prepared) mark(accept, to) xcomp(prepared, accept) case(wish, of) nmod:poss(wish, Scotland) ""case(Scotland, s)"", nmod:of(accept, wish) case(reform, for) nmod:for(wish, reform) case(strctre, in) det(strctre, the) nmod:in(wish, strctre) case(government, of) nmod:of(strctre, government) pnct(convinced, ?)","root(,VBN) mark(VBN,IN) nsbjpass(VBN,PRP) axpass(VBN,VBZ) neg(VBN,RB) mark(VBP,IN) nsbj(VBP,PRP) advcl(VBN,VBP) mark(NNS,IN) nsbj(NNS,PRP) cop(NNS,VBZ) neg(NNS,RB) case(NNS,IN) det(NNS,DT) ccomp(VBP,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) pnct(NNS,NNS) det(NN,WP) dep(VBD,NN) ax(VBD,VBZ) nsbj(VBD,PRP) dep(NNS,VBD) mark(VB,TO) xcomp(VBD,VB) case(NN,IN) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(VB,NN) case(NN,IN) nmod:for(NN,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBN,VBN)","[not, results, convinced, evidence, ROOT, election, prepared, understand, accept, he, he, not, he]","[not, results, convinced, evidence, ROOT, election, prepared, understand, accept, he, he, not, he]",15,"[not, results, convinced, election, prepared, understand, ROOT, he, he, not]","[convinced, ROOT, he, not, understand]",RB_not NNS_results VBN_convinced NN_evidence NN_election VBN_prepared VBP_understand VBD_accept PRP_he PRP_he RB_not PRP_he ,"[not, results, convinced, evidence, ROOT, election, prepared, understand, accept, he, he, not, he]","[not, results, convinced, evidence, ROOT, election, prepared, understand, accept, he, he, not, he]",RB_not NNS_results VBN_convinced NN_evidence NN_election VBN_prepared VBP_understand VBD_accept PRP_he PRP_he RB_not PRP_he ,"[not, results, convinced, evidence, ROOT, election, prepared, understand, accept, he, he, not, he]",RB_not NNS_results VBN_convinced NN_evidence NN_election VBN_prepared VBP_understand VBD_accept PRP_he PRP_he RB_not PRP_he ,"[not, results, convinced, evidence, ROOT, election, prepared, understand, accept, he, he, not, he]",RB_not NNS_results VBN_convinced NN_evidence NN_election VBN_prepared VBP_understand VBD_accept PRP_he PRP_he RB_not PRP_he ,2,2,2,2,1,2,0,0,0,2
Does he agree that his presence at the Dispatch Box  blandly denying the reality of Scottish opinion and blandly defying what Scotland wants  is bad for the House and for the country?,DoesVBZ hePRP agreeVB thatIN hisPRP$ presenceNN atIN theDT DispatchNNP BoxNNP blandlyRB denyingVBG theDT realityNN ofIN ScottishJJ opinionNN andCC blandlyRB defyingVBG whatWP ScotlandNNP wantsVBZ isVBZ badJJ forIN theDT HouseNNP andCC forIN theDT countryNN ,"root(ROOT-0, agree-3) aux(agree-3, Does-1) nsubj(agree-3, he-2) mark(denying-13, that-4) nmod:poss(presence-6, his-5) nsubj(denying-13, presence-6) nsubj(defying-21, presence-6) case(Box-10, at-7) det(Box-10, the-8) compound(Box-10, Dispatch-9) nmod:at(presence-6, Box-10) punct(presence-6, ,-11) advmod(denying-13, blandly-12) ccomp(agree-3, denying-13) det(reality-15, the-14) dobj(denying-13, reality-15) case(opinion-18, of-16) amod(opinion-18, Scottish-17) nmod:of(reality-15, opinion-18) cc(denying-13, and-19) advmod(defying-21, blandly-20) ccomp(agree-3, defying-21) conj:and(denying-13, defying-21) dobj(wants-24, what-22) nsubj(wants-24, Scotland-23) parataxis(bad-27, wants-24) punct(wants-24, ,-25) cop(bad-27, is-26) ccomp(defying-21, bad-27) case(House-30, for-28) det(House-30, the-29) nmod:for(bad-27, House-30) cc(bad-27, and-31) case(country-34, for-32) det(country-34, the-33) ccomp(defying-21, country-34) conj:and(bad-27, country-34) punct(agree-3, ?-35)",1,0,0,"root(ROOT, agree) ax(agree, Does) nsbj(agree, he) mark(denying, that) nmod:poss(presence, his) nsbj(denying, presence) nsbj(defying, presence) case(Box, at) det(Box, the) compond(Box, Dispatch) nmod:at(presence, Box) pnct(presence, ,) advmod(denying, blandly) ccomp(agree, denying) det(reality, the) dobj(denying, reality) case(opinion, of) amod(opinion, Scottish) nmod:of(reality, opinion) cc(denying, and) advmod(defying, blandly) ccomp(agree, defying) conj:and(denying, defying) dobj(wants, what) nsbj(wants, Scotland) parataxis(bad, wants) pnct(wants, ,) cop(bad, is) ccomp(defying, bad) case(Hose, for) det(Hose, the) nmod:for(bad, Hose) cc(bad, and) case(contry, for) det(contry, the) ccomp(defying, contry) conj:and(bad, contry) pnct(agree, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBG,IN) nmod:poss(NN,PRP$) nsbj(VBG,NN) nsbj(VBG,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:at(NN,NNP) pnct(NN,NN) advmod(VBG,RB) ccomp(VB,VBG) det(NN,DT) dobj(VBG,NN) case(NN,IN) amod(NN,JJ) nmod:of(NN,NN) cc(VBG,CC) advmod(VBG,RB) ccomp(VB,VBG) conj:and(VBG,VBG) dobj(VBZ,WP) nsbj(VBZ,NNP) parataxis(JJ,VBZ) pnct(VBZ,VBZ) cop(JJ,VBZ) ccomp(VBG,JJ) case(NNP,IN) det(NNP,DT) nmod:for(JJ,NNP) cc(JJ,CC) case(NN,IN) det(NN,DT) ccomp(VBG,NN) conj:and(JJ,NN) pnct(VB,VB)","[he, ROOT, defying, agree, denying]","[Box, denying, defying, his, he, ROOT, agree, presence]",15,"[denying, defying, his, presence, Box]","[denying, defying, his, presence, Box]",NNP_Box VBG_denying VBG_defying PRP$_his PRP_he VB_agree NN_presence ,"[Box, denying, defying, his, he, ROOT, agree, presence]","[Box, denying, defying, his, he, ROOT, agree, presence]",NNP_Box VBG_denying VBG_defying PRP$_his PRP_he VB_agree NN_presence ,"[Box, denying, defying, his, he, ROOT, agree, presence]",NNP_Box VBG_denying VBG_defying PRP$_his PRP_he VB_agree NN_presence ,"[Box, denying, defying, his, he, ROOT, agree, presence]",NNP_Box VBG_denying VBG_defying PRP$_his PRP_he VB_agree NN_presence ,1,2,2,2,1,2,2,2,2,2
Is the hon. Gentleman suggesting that a Labour Government  if it had been elected  would have had no mandate in the South of England?,IsVBZ theDT honNN GentlemanNNP suggestingVBG thatIN aDT LabourJJ GovernmentNN ifIN itPRP hadVBD beenVBN electedVBN wouldMD haveVB hadVBN noDT mandateNN inIN theDT SouthNNP ofIN EnglandNNP ,"root(ROOT-0, suggesting-5) aux(suggesting-5, Is-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nsubj(suggesting-5, Gentleman-4) mark(had-19, that-6) det(Government-9, a-7) compound(Government-9, Labour-8) nsubj(had-19, Government-9) punct(had-19, ,-10) mark(elected-15, if-11) nsubjpass(elected-15, it-12) aux(elected-15, had-13) auxpass(elected-15, been-14) advcl(had-19, elected-15) punct(had-19, ,-16) aux(had-19, would-17) aux(had-19, have-18) ccomp(suggesting-5, had-19) neg(mandate-21, no-20) dobj(had-19, mandate-21) case(South-24, in-22) det(South-24, the-23) nmod:in(had-19, South-24) case(England-26, of-25) nmod:of(South-24, England-26) punct(suggesting-5, ?-27)",1,0,0,"root(ROOT, sggesting) ax(sggesting, Is) det(Gentleman, the) compond(Gentleman, hon.) nsbj(sggesting, Gentleman) mark(had, that) det(Government, a) compond(Government, Labor) nsbj(had, Government) pnct(had, ,) mark(elected, if) nsbjpass(elected, it) ax(elected, had) axpass(elected, been) advcl(had, elected) pnct(had, ,) ax(had, wold) ax(had, have) ccomp(sggesting, had) neg(mandate, no) dobj(had, mandate) case(Soth, in) det(Soth, the) nmod:in(had, Soth) case(England, of) nmod:of(Soth, England) pnct(sggesting, ?)","root(,VBG) ax(VBG,VBZ) det(NNP,DT) compond(NNP,NNP) nsbj(VBG,NNP) mark(VBN,IN) det(NN,DT) compond(NN,JJ) nsbj(VBN,NN) pnct(VBN,VBN) mark(VBN,IN) nsbjpass(VBN,PRP) ax(VBN,VBN) axpass(VBN,VBN) advcl(VBN,VBN) pnct(VBN,VBN) ax(VBN,MD) ax(VBN,VB) ccomp(VBG,VBN) neg(NN,DT) dobj(VBN,NN) case(NNP,IN) det(NNP,DT) nmod:in(VBN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(VBG,VBG)","[Government, suggesting, elected, had, South, mandate, ROOT, Gentleman]","[Government, suggesting, elected, had, South, mandate, ROOT, Gentleman]",16,[ ],[ ],NNP_Government VBG_suggesting VBN_elected VBN_had NNP_South NN_mandate NNP_Gentleman ,"[Government, suggesting, elected, had, South, mandate, ROOT, Gentleman]","[Government, suggesting, elected, had, South, mandate, ROOT, Gentleman]",NNP_Government VBG_suggesting VBN_elected VBN_had NNP_South NN_mandate NNP_Gentleman ,"[Government, suggesting, elected, had, South, mandate, ROOT, Gentleman]",NNP_Government VBG_suggesting VBN_elected VBN_had NNP_South NN_mandate NNP_Gentleman ,"[Government, suggesting, elected, had, South, mandate, ROOT, Gentleman]",NNP_Government VBG_suggesting VBN_elected VBN_had NNP_South NN_mandate NNP_Gentleman ,2,2,2,0,0,0,0,0,0,0
I remember also that when these matters were last discussed  the hon. Gentleman admitted that if devolution ever took place he assumed that there would indeed be consequences for the rest of the United Kingdom.,IPRP rememberVBP alsoRB thatIN whenWRB theseDT mattersNNS wereVBD lastJJ discussedVBD theDT honNN GentlemanNNP admittedVBD thatIN ifIN devolutionNN everRB tookVBD placeNN hePRP assumedVBD thatIN thereEX wouldMD indeedRB beVB consequencesNNS forIN theDT restNN ofIN theDT UnitedNNP KingdomNNP ,"root(ROOT-0, remember-2) nsubj(remember-2, I-1) advmod(remember-2, also-3) mark(admitted-15, that-4) advmod(discussed-10, when-5) det(matters-7, these-6) nsubjpass(discussed-10, matters-7) auxpass(discussed-10, were-8) advmod(discussed-10, last-9) advcl(admitted-15, discussed-10) punct(admitted-15, ,-11) det(Gentleman-14, the-12) compound(Gentleman-14, hon.-13) nsubj(admitted-15, Gentleman-14) ccomp(remember-2, admitted-15) mark(assumed-23, that-16) mark(took-20, if-17) nsubj(took-20, devolution-18) advmod(took-20, ever-19) advcl(assumed-23, took-20) dobj(took-20, place-21) nsubj(assumed-23, he-22) ccomp(admitted-15, assumed-23) mark(consequences-29, that-24) expl(consequences-29, there-25) aux(consequences-29, would-26) advmod(consequences-29, indeed-27) cop(consequences-29, be-28) ccomp(assumed-23, consequences-29) case(rest-32, for-30) det(rest-32, the-31) nmod:for(consequences-29, rest-32) case(Kingdom-36, of-33) det(Kingdom-36, the-34) compound(Kingdom-36, United-35) nmod:of(rest-32, Kingdom-36) punct(remember-2, .-37)",1,0,0,"root(ROOT, remember) nsbj(remember, I) advmod(remember, also) mark(admitted, that) advmod(discssed, when) det(matters, these) nsbjpass(discssed, matters) axpass(discssed, were) advmod(discssed, last) advcl(admitted, discssed) pnct(admitted, ,) det(Gentleman, the) compond(Gentleman, hon.) nsbj(admitted, Gentleman) ccomp(remember, admitted) mark(assmed, that) mark(took, if) nsbj(took, devoltion) advmod(took, ever) advcl(assmed, took) dobj(took, place) nsbj(assmed, he) ccomp(admitted, assmed) mark(conseqences, that) expl(conseqences, there) ax(conseqences, wold) advmod(conseqences, indeed) cop(conseqences, be) ccomp(assmed, conseqences) case(rest, for) det(rest, the) nmod:for(conseqences, rest) case(Kingdom, of) det(Kingdom, the) compond(Kingdom, United) nmod:of(rest, Kingdom) pnct(remember, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) mark(VBD,IN) advmod(VBD,WRB) det(NNS,DT) nsbjpass(VBD,NNS) axpass(VBD,VBD) advmod(VBD,JJ) advcl(VBD,VBD) pnct(VBD,VBD) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) ccomp(VBP,VBD) mark(VBD,IN) mark(VBD,IN) nsbj(VBD,NN) advmod(VBD,RB) advcl(VBD,VBD) dobj(VBD,NN) nsbj(VBD,PRP) ccomp(VBD,VBD) mark(NNS,IN) expl(NNS,EX) ax(NNS,MD) advmod(NNS,RB) cop(NNS,VB) ccomp(VBD,NNS) case(NN,IN) det(NN,DT) nmod:for(NNS,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VBP,VBP)","[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]","[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]",16,"[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]","[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]",PRP_he VB_remember VBD_took VBD_assumed NNS_consequences VBN_discussed VBN_admitted NNP_Gentleman ,"[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]","[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]",PRP_he VB_remember VBD_took VBD_assumed NNS_consequences VBN_discussed VBN_admitted NNP_Gentleman ,"[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]",PRP_he VB_remember VBD_took VBD_assumed NNS_consequences VBN_discussed VBN_admitted NNP_Gentleman ,"[he, remember, took, assumed, consequences, discussed, admitted, Gentleman]",PRP_he VB_remember VBD_took VBD_assumed NNS_consequences VBN_discussed VBN_admitted NNP_Gentleman ,1,2,2,0,0,0,0,0,0,0
He will want to look at the figures with care  and I explained them with care.,HePRP willMD wantVB toTO lookVB atIN theDT figuresNNS withIN careNN andCC IPRP explainedVBD themPRP withIN careNN ,"root(ROOT-0, want-3) nsubj(want-3, He-1) aux(want-3, will-2) mark(look-5, to-4) xcomp(want-3, look-5) case(figures-8, at-6) det(figures-8, the-7) nmod:at(look-5, figures-8) case(care-10, with-9) nmod:with(figures-8, care-10) punct(want-3, ,-11) cc(want-3, and-12) nsubj(explained-14, I-13) conj:and(want-3, explained-14) dobj(explained-14, them-15) case(care-17, with-16) nmod:with(explained-14, care-17) punct(want-3, .-18)",0,0,0,"root(ROOT, want) nsbj(want, He) ax(want, will) mark(look, to) xcomp(want, look) case(figres, at) det(figres, the) nmod:at(look, figres) case(care, with) nmod:with(figres, care) pnct(want, ,) cc(want, and) nsbj(explained, I) conj:and(want, explained) dobj(explained, them) case(care, with) nmod:with(explained, care) pnct(want, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) mark(VB,TO) xcomp(VB,VB) case(NNS,IN) det(NNS,DT) nmod:at(VB,NNS) case(NN,IN) nmod:with(NNS,NN) pnct(VB,VB) cc(VB,CC) nsbj(VBD,PRP) conj:and(VB,VBD) dobj(VBD,PRP) case(NN,IN) nmod:with(VBD,NN) pnct(VB,VB)","[ROOT, He, want, and, look]","[ROOT, He, want, and, look]",18,[ ],[ ],PRP_He VB_want CC_and NN_look ,"[ROOT, He, want, and, look]","[ROOT, He, want, and, look]",PRP_He VB_want CC_and NN_look ,"[ROOT, He, want, and, look]",PRP_He VB_want CC_and NN_look ,"[ROOT, He, want, and, look]",PRP_He VB_want CC_and NN_look ,0,0,2,0,0,0,0,0,0,0
Secondly  he will not want to deny what his right hon. Friend the Member for Plymouth  Devonport (Dr. Owen) did when he was involved in government  which was agreed by all parts of the House  when the RAWP process was introduced in 1977.,SecondlyRB hePRP willMD notRB wantVB toTO denyVB whatWP hisPRP$ rightJJ honNN FriendNNP theDT MemberNNP forIN PlymouthNNP DevonportNNP (( DrNNP OwenNNP )) didVBD whenWRB hePRP wasVBD involvedVBN inIN governmentNN whichWDT wasVBD agreedVBN byIN allDT partsNNS ofIN theDT HouseNNP whenWRB theDT RAWPNNP processNN wasVBD introducedVBN inIN 1977CD ,"root(ROOT-0, want-6) advmod(want-6, Secondly-1) punct(want-6, ,-2) nsubj(want-6, he-3) aux(want-6, will-4) neg(want-6, not-5) mark(deny-8, to-7) xcomp(want-6, deny-8) dobj(deny-8, what-9) nmod:poss(Friend-13, his-10) amod(Friend-13, right-11) compound(Friend-13, hon.-12) nsubj(what-9, Friend-13) det(Member-15, the-14) dep(Friend-13, Member-15) case(Plymouth-17, for-16) nmod:for(Member-15, Plymouth-17) punct(Member-15, ,-18) compound(did-24, Devonport-19) punct(Owen-22, -LRB--20) compound(Owen-22, Dr.-21) appos(Devonport-19, Owen-22) punct(Owen-22, -RRB--23) appos(Member-15, did-24) advmod(involved-28, when-25) nsubjpass(involved-28, he-26) auxpass(involved-28, was-27) advcl(did-24, involved-28) case(government-30, in-29) nmod:in(involved-28, government-30) punct(government-30, ,-31) nsubjpass(agreed-34, which-32) auxpass(agreed-34, was-33) acl:relcl(government-30, agreed-34) case(parts-37, by-35) det(parts-37, all-36) nmod:agent(agreed-34, parts-37) case(House-40, of-38) det(House-40, the-39) nmod:of(parts-37, House-40) punct(government-30, ,-41) advmod(introduced-47, when-42) det(process-45, the-43) compound(process-45, RAWP-44) nsubjpass(introduced-47, process-45) auxpass(introduced-47, was-46) advcl(involved-28, introduced-47) case(1977-49, in-48) nmod:in(introduced-47, 1977-49) punct(want-6, .-50)",1,0,0,"root(ROOT, want) advmod(want, Secondly) pnct(want, ,) nsbj(want, he) ax(want, will) neg(want, not) mark(deny, to) xcomp(want, deny) dobj(deny, what) nmod:poss(Friend, his) amod(Friend, right) compond(Friend, hon.) nsbj(what, Friend) det(Member, the) dep(Friend, Member) case(Plymoth, for) nmod:for(Member, Plymoth) pnct(Member, ,) compond(did, Devonport) pnct(Owen, ) compond(Owen, Dr.) appos(Devonport, Owen) pnct(Owen, ) appos(Member, did) advmod(involved, when) nsbjpass(involved, he) axpass(involved, was) advcl(did, involved) case(government, in) nmod:in(involved, government) pnct(government, ,) nsbjpass(agreed, which) axpass(agreed, was) acl:relcl(government, agreed) case(parts, by) det(parts, all) nmod:agent(agreed, parts) case(Hose, of) det(Hose, the) nmod:of(parts, Hose) pnct(government, ,) advmod(introdced, when) det(process, the) compond(process, RAWP) nsbjpass(introdced, process) axpass(introdced, was) advcl(involved, introdced) case(1977, in) nmod:in(introdced, 1977) pnct(want, .)","root(,VB) advmod(VB,RB) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) mark(VB,TO) xcomp(VB,VB) dobj(VB,WP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(WP,NNP) det(NNP,DT) dep(NNP,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,NNP) compond(VBD,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) appos(NNP,VBD) advmod(VBN,WRB) nsbjpass(VBN,PRP) axpass(VBN,VBD) advcl(VBD,VBN) case(NN,IN) nmod:in(VBN,NN) pnct(NN,NN) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(NN,VBN) case(NNS,IN) det(NNS,DT) nmod:agent(VBN,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) pnct(NN,NN) advmod(VBN,WRB) det(NN,DT) compond(NN,NNP) nsbjpass(VBN,NN) axpass(VBN,VBD) advcl(VBN,VBN) case(CD,IN) nmod:in(VBN,CD) pnct(VB,VB)","[ , not, agreed, Member, did, his, when, Devonport, ROOT, he, introduced, right, Friend, want, what, deny, parts, he, Plymouth, Secondly, government, involved]","[ , not, agreed, Member, did, his, when, Devonport, ROOT, he, introduced, Friend, want, what, deny, parts, he, Plymouth, Secondly, government, involved]",4,"[ , agreed, Member, did, his, when, Devonport, introduced, Friend, want, what, deny, parts, he, Plymouth, ROOT, government, involved]","[ , agreed, Member, did, his, when, Devonport, introduced, Friend, want, what, deny, parts, he, Plymouth, ROOT, government, involved]",RB_not VBD_agreed NNP_Member VBD_did PRP$_his WRB_when NNP_Devonport PRP_he VBN_introduced NNP_Friend VB_want WP_what VB_deny NNS_parts PRP_he NNP_Plymouth RB_Secondly NN_government VBN_involved ,"[ , not, agreed, Member, did, his, when, Devonport, ROOT, he, introduced, Friend, want, what, deny, parts, he, Plymouth, Secondly, government, involved]","[ , not, agreed, Member, did, his, when, Devonport, ROOT, he, introduced, Friend, want, what, deny, parts, he, Plymouth, Secondly, government, involved]",RB_not VBD_agreed NNP_Member VBD_did PRP$_his WRB_when NNP_Devonport PRP_he VBN_introduced NNP_Friend VB_want WP_what VB_deny NNS_parts PRP_he NNP_Plymouth RB_Secondly NN_government VBN_involved ,"[ , not, agreed, Member, did, his, when, Devonport, ROOT, he, introduced, Friend, want, what, deny, parts, he, Plymouth, Secondly, government, involved]",RB_not VBD_agreed NNP_Member VBD_did PRP$_his WRB_when NNP_Devonport PRP_he VBN_introduced NNP_Friend VB_want WP_what VB_deny NNS_parts PRP_he NNP_Plymouth RB_Secondly NN_government VBN_involved ,"[ , not, agreed, Member, did, his, when, Devonport, ROOT, he, introduced, Friend, want, what, deny, parts, he, Plymouth, Secondly, government, involved]",RB_not VBD_agreed NNP_Member VBD_did PRP$_his WRB_when NNP_Devonport PRP_he VBN_introduced NNP_Friend VB_want WP_what VB_deny NNS_parts PRP_he NNP_Plymouth RB_Secondly NN_government VBN_involved ,2,2,1,2,1,2,2,2,2,1
The reality for 10 years has been that  despite the increase to which I referred  and despite the happy increase in patient activity  London's population has fallen and its relative overprovision  as seen by the then Labour Government  has produced a pattern of acute bed reductions  which has continued ever since that period on roughly the same basis.,TheDT realityNN forIN 10CD yearsNNS hasVBZ beenVBN thatIN despiteIN theDT increaseNN toTO whichWDT IPRP referredVBD andCC despiteIN theDT happyJJ increaseNN inIN patientJJ activityNN LondonNNP 'sPOS populationNN hasVBZ fallenVBN andCC itsPRP$ relativeJJ overprovisionNN asIN seenVBN byIN theDT thenRB LabourNNP GovernmentNNP hasVBZ producedVBN aDT patternNN ofIN acuteJJ bedNN reductionsNNS whichWDT hasVBZ continuedVBN everRB sinceIN thatDT periodNN onIN roughlyRB theDT sameJJ basisNN ,"root(ROOT-0, that-8) det(reality-2, The-1) nsubj(that-8, reality-2) case(years-5, for-3) nummod(years-5, 10-4) nmod:for(reality-2, years-5) aux(that-8, has-6) cop(that-8, been-7) punct(fallen-31, ,-9) case(increase-12, despite-10) det(increase-12, the-11) nmod:despite(fallen-31, increase-12) case(which-14, to-13) nmod:to(referred-16, which-14) nsubj(referred-16, I-15) acl:relcl(increase-12, referred-16) punct(increase-12, ,-17) cc(fallen-31, and-18) case(increase-22, despite-19) det(increase-22, the-20) amod(increase-22, happy-21) nmod:despite(fallen-31'', increase-22) case(activity-25, in-23) compound(activity-25, patient-24) nmod:in(increase-22, activity-25) punct(fallen-31, ,-26) nmod:poss(population-29, London-27) case(London-27, 's-28) nsubj(fallen-31, population-29) nsubj(fallen-31'', population-29) aux(fallen-31, has-30) parataxis(produced-46, fallen-31) conj:and(fallen-31, fallen-31'') parataxis(produced-46, fallen-31'') cc(fallen-31, and-32) nmod:poss(overprovision-35, its-33) amod(overprovision-35, relative-34) conj:and(fallen-31, overprovision-35) parataxis(produced-46, overprovision-35) punct(fallen-31, ,-36) mark(seen-38, as-37) advcl(fallen-31, seen-38) case(Government-43, by-39) det(Government-43, the-40) advmod(Government-43, then-41) compound(Government-43, Labour-42) nmod:by(seen-38, Government-43) punct(fallen-31, ,-44) aux(produced-46, has-45) ccomp(that-8, produced-46) det(pattern-48, a-47) dobj(produced-46, pattern-48) case(reductions-52, of-49) amod(reductions-52, acute-50) compound(reductions-52, bed-51) nmod:of(pattern-48, reductions-52) punct(reductions-52, ,-53) nsubj(continued-56, which-54) aux(continued-56, has-55) acl:relcl(reductions-52, continued-56) advmod(continued-56, ever-57) case(period-60, since-58) det(period-60, that-59) nmod:since(continued-56, period-60) case(basis-65, on-61) advmod(basis-65, roughly-62) det(basis-65, the-63) amod(basis-65, same-64) nmod:on(continued-56, basis-65) punct(that-8, .-66)",1,0,0,"root(ROOT, that) det(reality, The) nsbj(that, reality) case(years, for) nmmod(years, 10) nmod:for(reality, years) ax(that, has) cop(that, been) pnct(fallen, ,) case(increase, despite) det(increase, the) nmod:despite(fallen, increase) case(which, to) nmod:to(referred, which) nsbj(referred, I) acl:relcl(increase, referred) pnct(increase, ,) cc(fallen, and) case(increase, despite) det(increase, the) amod(increase, happy) nmod:despite(fallen, increase) case(activity, in) compond(activity, patient) nmod:in(increase, activity) pnct(fallen, ,) nmod:poss(poplation, London) ""case(London, s)"", nsbj(fallen, poplation) nsbj(fallen, poplation) ax(fallen, has) parataxis(prodced, fallen) conj:and(fallen, fallen) parataxis(prodced, fallen) cc(fallen, and) nmod:poss(overprovision, its) amod(overprovision, relative) conj:and(fallen, overprovision) parataxis(prodced, overprovision) pnct(fallen, ,) mark(seen, as) advcl(fallen, seen) case(Government, by) det(Government, the) advmod(Government, then) compond(Government, Labor) nmod:by(seen, Government) pnct(fallen, ,) ax(prodced, has) ccomp(that, prodced) det(pattern, a) dobj(prodced, pattern) case(redctions, of) amod(redctions, acte) compond(redctions, bed) nmod:of(pattern, redctions) pnct(redctions, ,) nsbj(contined, which) ax(contined, has) acl:relcl(redctions, contined) advmod(contined, ever) case(period, since) det(period, that) nmod:since(contined, period) case(basis, on) advmod(basis, roghly) det(basis, the) amod(basis, same) nmod:on(contined, basis) pnct(that, .)","root(,DT) det(NN,DT) nsbj(DT,NN) case(NNS,IN) nmmod(NNS,CD) nmod:for(NN,NNS) ax(DT,VBZ) cop(DT,VBN) pnct(VBN,VBN) case(NN,IN) det(NN,DT) nmod:despite(VBN,NN) case(WDT,TO) nmod:to(VBD,WDT) nsbj(VBD,PRP) acl:relcl(NN,VBD) pnct(NN,NN) cc(VBN,CC) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:despite(VBN,NN) case(NN,IN) compond(NN,JJ) nmod:in(NN,NN) pnct(VBN,VBN) nmod:poss(NN,NNP) case(NNP,POS) nsbj(VBN,NN) nsbj(VBN,NN) ax(VBN,VBZ) parataxis(VBN,VBN) conj:and(VBN,VBN) parataxis(VBN,VBN) cc(VBN,CC) nmod:poss(NN,PRP$) amod(NN,JJ) conj:and(VBN,NN) parataxis(VBN,NN) pnct(VBN,VBN) mark(VBN,IN) advcl(VBN,VBN) case(NNP,IN) det(NNP,DT) advmod(NNP,RB) compond(NNP,NNP) nmod:by(VBN,NNP) pnct(VBN,VBN) ax(VBN,VBZ) ccomp(DT,VBN) det(NN,DT) dobj(VBN,NN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) pnct(NNS,NNS) nsbj(VBN,WDT) ax(VBN,VBZ) acl:relcl(NNS,VBN) advmod(VBN,RB) case(NN,IN) det(NN,DT) nmod:since(VBN,NN) case(NN,IN) advmod(NN,RB) det(NN,DT) amod(NN,JJ) nmod:on(VBN,NN) pnct(DT,DT)","[Government, then, seen, fallen]","[Government, then, seen, fallen]",4,"[Government, then, seen, fallen]","[Government, then, seen, fallen]",NNP_Government RB_then VBN_seen VBN_fallen ,"[Government, then, seen, fallen]","[Government, then, seen, fallen]",NNP_Government RB_then VBN_seen VBN_fallen ,"[Government, then, seen, fallen]",NNP_Government RB_then VBN_seen VBN_fallen ,"[Government, then, seen, fallen]",NNP_Government RB_then VBN_seen VBN_fallen ,2,2,2,2,1,2,2,2,2,2
I bow to my hon. Friend's distinguished past and detailed knowledge of these matters.,IPRP bowVBP toTO myPRP$ honNN FriendNNP 'sPOS distinguishedVBN pastNN andCC detailedJJ knowledgeNN ofIN theseDT mattersNNS ,"root(ROOT-0, bow-2) nsubj(bow-2, I-1) case(past-9, to-3) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) nmod:poss(past-9, Friend-6) case(Friend-6, 's-7) amod(past-9, distinguished-8) nmod:to(bow-2, past-9) cc(past-9, and-10) amod(knowledge-12, detailed-11) nmod:to(bow-2, knowledge-12) conj:and(past-9, knowledge-12) case(matters-15, of-13) det(matters-15, these-14) nmod:of(knowledge-12, matters-15) punct(bow-2, .-16)",1,1,0,"root(ROOT, bow) nsbj(bow, I) case(past, to) nmod:poss(Friend, my) compond(Friend, hon.) nmod:poss(past, Friend) ""case(Friend, s)"", amod(past, distingished) nmod:to(bow, past) cc(past, and) amod(knowledge, detailed) nmod:to(bow, knowledge) conj:and(past, knowledge) case(matters, of) det(matters, these) nmod:of(knowledge, matters) pnct(bow, .)","root(,VBP) nsbj(VBP,PRP) case(NN,TO) nmod:poss(NNP,PRP$) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,VBN) nmod:to(VBP,NN) cc(NN,CC) amod(NN,JJ) nmod:to(VBP,NN) conj:and(NN,NN) case(NNS,IN) det(NNS,DT) nmod:of(NN,NNS) pnct(VBP,VBP)","[distinguished, and, my, Friend, bow, past]","[distinguished, and, my, Friend, bow, past]",4,"[distinguished, and, my, Friend, bow, past]","[distinguished, and, my, Friend, bow, past]",JJ_distinguished CC_and PRP$_my NNP_Friend VBP_bow JJ_past ,"[distinguished, and, my, Friend, bow, past]","[distinguished, and, my, Friend, bow, past]",JJ_distinguished CC_and PRP$_my NNP_Friend VBP_bow JJ_past ,"[distinguished, and, my, Friend, bow, past]",JJ_distinguished CC_and PRP$_my NNP_Friend VBP_bow JJ_past ,"[distinguished, and, my, Friend, bow, past]",JJ_distinguished CC_and PRP$_my NNP_Friend VBP_bow JJ_past ,2,1,1,1,1,1,1,1,1,1
Is it the Government's policy to starve the National Health Service of resources to bring about a crisis so that they can introduce new proposals for other methods of funding and thus undermine the principles of the NHS?,IsVBZ itPRP theDT GovernmentNNP 'sPOS policyNN toTO starveVB theDT NationalNNP HealthNNP ServiceNNP ofIN resourcesNNS toTO bringVB aboutRP aDT crisisNN soRB thatIN theyPRP canMD introduceVB newJJ proposalsNNS forIN otherJJ methodsNNS ofIN fundingNN andCC thusRB undermineVB theDT principlesNNS ofIN theDT NHSNNP ,"root(ROOT-0, undermine-34) dep(undermine-34, Is-1) dep(undermine-34, it-2) det(Government-4, the-3) nmod:poss(policy-6, Government-4) case(Government-4, 's-5) nsubj(undermine-34, policy-6) mark(starve-8, to-7) acl(policy-6, starve-8) det(Service-12, the-9) compound(Service-12, National-10) compound(Service-12, Health-11) dobj(starve-8, Service-12) case(resources-14, of-13) nmod:of(Service-12, resources-14) mark(bring-16, to-15) xcomp(starve-8, bring-16) compound:prt(bring-16, about-17) det(crisis-19, a-18) dobj(bring-16, crisis-19) mark(introduce-24, so-20) mwe(so-20, that-21) nsubj(introduce-24, they-22) aux(introduce-24, can-23) advcl(bring-16, introduce-24) amod(proposals-26, new-25) dobj(introduce-24, proposals-26) case(methods-29, for-27) amod(methods-29, other-28) nmod:for(proposals-26, methods-29) case(funding-31, of-30) nmod:of(methods-29, funding-31) cc(policy-6, and-32) advmod(undermine-34, thus-33) det(principles-36, the-35) dobj(undermine-34, principles-36) case(NHS-39, of-37) det(NHS-39, the-38) nmod:of(principles-36, NHS-39) punct(undermine-34, ?-40)",1,1,1,"root(ROOT, ndermine) dep(ndermine, Is) dep(ndermine, it) det(Government, the) nmod:poss(policy, Government) ""case(Government, s)"", nsbj(ndermine, policy) mark(starve, to) acl(policy, starve) det(Service, the) compond(Service, National) compond(Service, Health) dobj(starve, Service) case(resorces, of) nmod:of(Service, resorces) mark(bring, to) xcomp(starve, bring) compond:prt(bring, abot) det(crisis, a) dobj(bring, crisis) mark(introdce, so) mwe(so, that) nsbj(introdce, they) ax(introdce, can) advcl(bring, introdce) amod(proposals, new) dobj(introdce, proposals) case(methods, for) amod(methods, other) nmod:for(proposals, methods) case(fnding, of) nmod:of(methods, fnding) cc(policy, and) advmod(ndermine, ths) det(principles, the) dobj(ndermine, principles) case(NHS, of) det(NHS, the) nmod:of(principles, NHS) pnct(ndermine, ?)","root(,VB) dep(VB,VBZ) dep(VB,PRP) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) nsbj(VB,NN) mark(VB,TO) acl(NN,VB) det(NNP,DT) compond(NNP,NNP) compond(NNP,NNP) dobj(VB,NNP) case(NNS,IN) nmod:of(NNP,NNS) mark(VB,TO) xcomp(VB,VB) compond:prt(VB,RP) det(NN,DT) dobj(VB,NN) mark(VB,RB) mwe(RB,IN) nsbj(VB,PRP) ax(VB,MD) advcl(VB,VB) amod(NNS,JJ) dobj(VB,NNS) case(NNS,IN) amod(NNS,JJ) nmod:for(NNS,NNS) case(NN,IN) nmod:of(NNS,NN) cc(NN,CC) advmod(VB,RB) det(NNS,DT) dobj(VB,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) pnct(VB,VB)","[starve, undermine, policy, Government, and]","[starve, undermine, policy, Government, and]",6,"[starve, undermine, policy, Government, and]","[starve, undermine, policy, Government, and]",VB_starve VB_undermine NN_policy NNP_Government CC_and ,"[starve, undermine, policy, Government, and]","[starve, undermine, policy, Government, and]",VB_starve VB_undermine NN_policy NNP_Government CC_and ,"[starve, undermine, policy, Government, and]",VB_starve VB_undermine NN_policy NNP_Government CC_and ,"[starve, undermine, policy, Government, and]",VB_starve VB_undermine NN_policy NNP_Government CC_and ,3,2,2,2,1,2,2,2,2,2
Such political partisan nonsense does the House and the country no service at all.,SuchJJ politicalJJ partisanNNS nonsenseNN doesVBZ theDT HouseNNP andCC theDT countryNN noDT serviceNN atIN allDT ,"root(ROOT-0, nonsense-4) amod(nonsense-4, Such-1) amod(nonsense-4, political-2) amod(nonsense-4, partisan-3) dep(nonsense-4, does-5) det(House-7, the-6) dobj(does-5, House-7) cc(House-7, and-8) det(country-10, the-9) dobj(does-5, country-10) conj:and(House-7, country-10) neg(service-12, no-11) dep(country-10, service-12) case(all-14, at-13) nmod:at(service-12, all-14) punct(nonsense-4, .-15)",0,1,0,"root(ROOT, nonsense) amod(nonsense, Sch) amod(nonsense, political) amod(nonsense, partisan) dep(nonsense, does) det(Hose, the) dobj(does, Hose) cc(Hose, and) det(contry, the) dobj(does, contry) conj:and(Hose, contry) neg(service, no) dep(contry, service) case(all, at) nmod:at(service, all) pnct(nonsense, .)","root(,NN) amod(NN,JJ) amod(NN,JJ) amod(NN,NNS) dep(NN,VBZ) det(NNP,DT) dobj(VBZ,NNP) cc(NNP,CC) det(NN,DT) dobj(VBZ,NN) conj:and(NNP,NN) neg(NN,DT) dep(NN,NN) case(DT,IN) nmod:at(NN,DT) pnct(NN,NN)",[ ],[ ],7,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
The Minister claims that patients are in a happy position.,TheDT MinisterNNP claimsNNS thatIN patientsNNS areVBP inIN aDT happyJJ positionNN ,"root(ROOT-0, claims-3) det(Minister-2, The-1) nsubj(claims-3, Minister-2) mark(position-10, that-4) nsubj(position-10, patients-5) cop(position-10, are-6) case(position-10, in-7) det(position-10, a-8) amod(position-10, happy-9) ccomp(claims-3, position-10) punct(claims-3, .-11)",1,1,0,"root(ROOT, claims) det(Minister, The) nsbj(claims, Minister) mark(position, that) nsbj(position, patients) cop(position, are) case(position, in) det(position, a) amod(position, happy) ccomp(claims, position) pnct(claims, .)","root(,NNS) det(NNP,DT) nsbj(NNS,NNP) mark(NN,IN) nsbj(NN,NNS) cop(NN,VBP) case(NN,IN) det(NN,DT) amod(NN,JJ) ccomp(NNS,NN) pnct(NNS,NNS)","[ROOT, position, claims, Minister]","[ROOT, position, claims, Minister]",8,"[ROOT, position, claims, Minister]","[ROOT, position, claims, Minister]",NN_position NNS_claims NNP_Minister ,"[ROOT, position, claims, Minister]","[ROOT, position, claims, Minister]",NN_position NNS_claims NNP_Minister ,"[ROOT, position, claims, Minister]",NN_position NNS_claims NNP_Minister ,"[ROOT, position, claims, Minister]",NN_position NNS_claims NNP_Minister ,3,2,2,0,0,0,0,0,0,0
Unlike the hon. Gentleman  I was in this House in the winter of 1978 79 and I shall never forget what happened in London hospitals during that winter.,UnlikeIN theDT honNN GentlemanNNP IPRP wasVBD inIN thisDT HouseNNP inIN theDT winterNN ofIN 1978CD 79CD andCC IPRP shallMD neverRB forgetVB whatWP happenedVBD inIN LondonNNP hospitalsNNS duringIN thatDT winterNN ,"root(ROOT-0, House-10) case(Gentleman-4, Unlike-1) det(Gentleman-4, the-2) compound(Gentleman-4, hon.-3) nmod:unlike(House-10, Gentleman-4) punct(House-10, ,-5) nsubj(House-10, I-6) cop(House-10, was-7) case(House-10, in-8) det(House-10, this-9) case(winter-13, in-11) det(winter-13, the-12) nmod:in(House-10, winter-13) case(79-16, of-14) nummod(79-16, 1978-15) nmod:of(winter-13, 79-16) cc(House-10, and-17) nsubj(forget-21, I-18) aux(forget-21, shall-19) neg(forget-21, never-20) conj:and(House-10, forget-21) nsubj(happened-23, what-22) ccomp(forget-21, happened-23) case(hospitals-26, in-24) compound(hospitals-26, London-25) nmod:in(happened-23, hospitals-26) case(winter-29, during-27) det(winter-29, that-28) nmod:during(happened-23, winter-29) punct(House-10, .-30)",1,0,0,"root(ROOT, Hose) case(Gentleman, Unlike) det(Gentleman, the) compond(Gentleman, hon.) nmod:nlike(Hose, Gentleman) pnct(Hose, ,) nsbj(Hose, I) cop(Hose, was) case(Hose, in) det(Hose, this) case(winter, in) det(winter, the) nmod:in(Hose, winter) case(79, of) nmmod(79, 1978) nmod:of(winter, 79) cc(Hose, and) nsbj(forget, I) ax(forget, shall) neg(forget, never) conj:and(Hose, forget) nsbj(happened, what) ccomp(forget, happened) case(hospitals, in) compond(hospitals, London) nmod:in(happened, hospitals) case(winter, dring) det(winter, that) nmod:dring(happened, winter) pnct(Hose, .)","root(,NNP) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:nlike(NNP,NNP) pnct(NNP,NNP) nsbj(NNP,PRP) cop(NNP,VBD) case(NNP,IN) det(NNP,DT) case(NN,IN) det(NN,DT) nmod:in(NNP,NN) case(CD,IN) nmmod(CD,CD) nmod:of(NN,CD) cc(NNP,CC) nsbj(VB,PRP) ax(VB,MD) neg(VB,RB) conj:and(NNP,VB) nsbj(VBD,WP) ccomp(VB,VBD) case(NNS,IN) compond(NNS,NNP) nmod:in(VBD,NNS) case(NN,IN) det(NN,DT) nmod:dring(VBD,NN) pnct(NNP,NNP)","[and, House, I, ROOT, Gentleman, winter]","[and, House, I, ROOT, Gentleman, winter]",11,"[and, House, I, ROOT, Gentleman, winter]","[and, House, I, ROOT, Gentleman, winter]",CC_and NNP_House PRP_I NNP_Gentleman NN_winter ,"[and, House, I, ROOT, Gentleman, winter]","[and, House, I, ROOT, Gentleman, winter]",CC_and NNP_House PRP_I NNP_Gentleman NN_winter ,"[and, House, I, ROOT, Gentleman, winter]",CC_and NNP_House PRP_I NNP_Gentleman NN_winter ,"[and, House, I, ROOT, Gentleman, winter]",CC_and NNP_House PRP_I NNP_Gentleman NN_winter ,2,2,2,0,0,0,0,0,0,0
Whatever Opposition Members say  that hospital has had a magnificent record of treating patients over the years.,WhateverWDT OppositionNN MembersNNS sayVBP thatIN hospitalNN hasVBZ hadVBN aDT magnificentJJ recordNN ofIN treatingVBG patientsNNS overIN theDT yearsNNS ,"root(ROOT-0, say-4) det(Members-3, Whatever-1) compound(Members-3, Opposition-2) nsubj(say-4, Members-3) punct(say-4, ,-5) mark(had-9, that-6) nsubj(had-9, hospital-7) aux(had-9, has-8) ccomp(say-4, had-9) det(record-12, a-10) amod(record-12, magnificent-11) dobj(had-9, record-12) mark(treating-14, of-13) acl(record-12, treating-14) dobj(treating-14, patients-15) case(years-18, over-16) det(years-18, the-17) nmod:over(treating-14, years-18) punct(say-4, .-19)",0,0,0,"root(ROOT, say) det(Members, Whatever) compond(Members, Opposition) nsbj(say, Members) pnct(say, ,) mark(had, that) nsbj(had, hospital) ax(had, has) ccomp(say, had) det(record, a) amod(record, magnificent) dobj(had, record) mark(treating, of) acl(record, treating) dobj(treating, patients) case(years, over) det(years, the) nmod:over(treating, years) pnct(say, .)","root(,VBP) det(NNS,WDT) compond(NNS,NN) nsbj(VBP,NNS) pnct(VBP,VBP) mark(VBN,IN) nsbj(VBN,NN) ax(VBN,VBZ) ccomp(VBP,VBN) det(NN,DT) amod(NN,JJ) dobj(VBN,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,NNS) case(NNS,IN) det(NNS,DT) nmod:over(VBG,NNS) pnct(VBP,VBP)","[Members, say]",[ ],12,[ ],[ ],[],[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
He knows Mayday hospital in his constituency very well.,HePRP knowsVBZ MaydayNNP hospitalNN inIN hisPRP$ constituencyNN veryRB wellRB ,"root(ROOT-0, knows-2) nsubj(knows-2, He-1) compound(hospital-4, Mayday-3) dobj(knows-2, hospital-4) case(constituency-7, in-5) nmod:poss(constituency-7, his-6) nmod:in(hospital-4, constituency-7) advmod(well-9, very-8) advmod(constituency-7, well-9) punct(knows-2, .-10)",1,0,0,"root(ROOT, knows) nsbj(knows, He) compond(hospital, Mayday) dobj(knows, hospital) case(constitency, in) nmod:poss(constitency, his) nmod:in(hospital, constitency) advmod(well, very) advmod(constitency, well) pnct(knows, .)","root(,VBZ) nsbj(VBZ,PRP) compond(NN,NNP) dobj(VBZ,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) advmod(RB,RB) advmod(NN,RB) pnct(VBZ,VBZ)","[ROOT, knows, He, hospital]","[well, knows, his, ROOT, constituency, He, hospital]",13,"[well, knows, his, ROOT, constituency, He, hospital]","[well, knows, his, ROOT, constituency, He, hospital]",RB_well VBZ_knows PRP$_his NN_constituency PRP_He NN_hospital ,"[well, knows, his, ROOT, constituency, He, hospital]","[well, knows, his, ROOT, constituency, He, hospital]",RB_well VBZ_knows PRP$_his NN_constituency PRP_He NN_hospital ,"[well, knows, his, ROOT, constituency, He, hospital]",RB_well VBZ_knows PRP$_his NN_constituency PRP_He NN_hospital ,"[well, knows, his, ROOT, constituency, He, hospital]",RB_well VBZ_knows PRP$_his NN_constituency PRP_He NN_hospital ,2,1,1,1,1,1,2,1,1,1
As a good constituency Member of Parliament  he is well aware of the reality of increased patient activity  which is what all of us in the House should be concerned about.,AsIN aDT goodJJ constituencyNN MemberNNP ofIN ParliamentNNP hePRP isVBZ wellRB awareJJ ofIN theDT realityNN ofIN increasedJJ patientNN activityNN whichWDT isVBZ whatWP allDT ofIN usPRP inIN theDT HouseNNP shouldMD beVB concernedVBN aboutIN ,"root(ROOT-0, aware-12) case(Member-5, As-1) det(Member-5, a-2) amod(Member-5, good-3) compound(Member-5, constituency-4) nmod:as(aware-12, Member-5) case(Parliament-7, of-6) nmod:of(Member-5, Parliament-7) punct(aware-12, ,-8) nsubj(aware-12, he-9) cop(aware-12, is-10) advmod(aware-12, well-11) case(reality-15, of-13) det(reality-15, the-14) nmod:of(aware-12, reality-15) case(activity-19, of-16) amod(activity-19, increased-17) compound(activity-19, patient-18) nmod:of(reality-15, activity-19) punct(activity-19, ,-20) nsubj(is-22, which-21) acl:relcl(activity-19, is-22) dobj(concerned-32, what-23) nsubjpass(concerned-32, all-24) case(us-26, of-25) nmod:of(all-24, us-26) case(House-29, in-27) det(House-29, the-28) nmod:in(all-24, House-29) aux(concerned-32, should-30) auxpass(concerned-32, be-31) ccomp(is-22, concerned-32) advmod(concerned-32, about-33) punct(aware-12, .-34)",1,0,0,"root(ROOT, aware) case(Member, As) det(Member, a) amod(Member, good) compond(Member, constitency) nmod:as(aware, Member) case(Parliament, of) nmod:of(Member, Parliament) pnct(aware, ,) nsbj(aware, he) cop(aware, is) advmod(aware, well) case(reality, of) det(reality, the) nmod:of(aware, reality) case(activity, of) amod(activity, increased) compond(activity, patient) nmod:of(reality, activity) pnct(activity, ,) nsbj(is, which) acl:relcl(activity, is) dobj(concerned, what) nsbjpass(concerned, all) case(s, of) nmod:of(all, s) case(Hose, in) det(Hose, the) nmod:in(all, Hose) ax(concerned, shold) axpass(concerned, be) ccomp(is, concerned) advmod(concerned, abot) pnct(aware, .)","root(,JJ) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NN) nmod:as(JJ,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(JJ,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) case(NN,IN) det(NN,DT) nmod:of(JJ,NN) case(NN,IN) amod(NN,JJ) compond(NN,NN) nmod:of(NN,NN) pnct(NN,NN) nsbj(VBZ,WDT) acl:relcl(NN,VBZ) dobj(VBN,WP) nsbjpass(VBN,DT) case(PRP,IN) nmod:of(DT,PRP) case(NNP,IN) det(NNP,DT) nmod:in(DT,NNP) ax(VBN,MD) axpass(VBN,VB) ccomp(VBZ,VBN) advmod(VBN,IN) pnct(JJ,JJ)","[aware, Member, he, reality, ROOT, Parliament, well, good]","[aware, Member, he, reality, ROOT, Parliament, well, good]",14,"[aware, Member, he, reality, ROOT, Parliament, well, good]","[Member, aware, reality, ROOT, Parliament, well, good]",JJ_aware NNP_Member PRP_he NN_reality NNP_Parliament RB_well JJ_good ,"[aware, Member, he, reality, ROOT, Parliament, well, good]","[aware, Member, he, reality, ROOT, Parliament, well, good]",JJ_aware NNP_Member PRP_he NN_reality NNP_Parliament RB_well JJ_good ,"[aware, Member, he, reality, ROOT, Parliament, well, good]",JJ_aware NNP_Member PRP_he NN_reality NNP_Parliament RB_well JJ_good ,"[aware, Member, he, reality, ROOT, Parliament, well, good]",JJ_aware NNP_Member PRP_he NN_reality NNP_Parliament RB_well JJ_good ,1,1,1,1,1,1,2,1,1,1
Can the right hon. Gentleman confirm the message on the tapes today that he is running so scared  and so frit  and is sweating so profusely with fear  that he has cancelled all his engagements and left them to the office boy?,CanMD theDT rightJJ honNN GentlemanNNP confirmVBZ theDT messageNN onIN theDT tapesNNS todayNN thatIN hePRP isVBZ runningVBG soRB scaredJJ andCC soRB fritJJ andCC isVBZ sweatingVBG soRB profuselyRB withIN fearNN thatIN hePRP hasVBZ cancelledVBN allDT hisPRP$ engagementsNNS andCC leftVBD themPRP toTO theDT officeNN boyNN ,"root(ROOT-0, confirm-6) aux(confirm-6, Can-1) det(Gentleman-5, the-2) amod(Gentleman-5, right-3) compound(Gentleman-5, hon.-4) nsubj(confirm-6, Gentleman-5) det(message-8, the-7) dobj(confirm-6, message-8) case(tapes-11, on-9) det(tapes-11, the-10) nmod:on(message-8, tapes-11) nmod:tmod(confirm-6, today-12) mark(running-16, that-13) nsubj(running-16, he-14) aux(running-16, is-15) ccomp(confirm-6, running-16) advmod(scared-18, so-17) xcomp(running-16, scared-18) punct(running-16, ,-19) cc(running-16, and-20) advmod(frit-22, so-21) ccomp(confirm-6, frit-22) conj:and(running-16, frit-22) punct(frit-22, ,-23) cc(frit-22, and-24) cop(sweating-26, is-25) conj:and(running-16, sweating-26) conj:and(frit-22, sweating-26) advmod(profusely-28, so-27) advmod(sweating-26, profusely-28) case(fear-30, with-29) nmod:with(sweating-26, fear-30) punct(running-16, ,-31) mark(cancelled-35, that-32) nsubj(cancelled-35, he-33) nsubj(left-40, he-33) aux(cancelled-35, has-34) ccomp(running-16, cancelled-35) det:predet(engagements-38, all-36) nmod:poss(engagements-38, his-37) dobj(cancelled-35, engagements-38) cc(cancelled-35, and-39) ccomp(running-16, left-40) conj:and(cancelled-35, left-40) dobj(left-40, them-41) case(boy-45, to-42) det(boy-45, the-43) compound(boy-45, office-44) nmod:to(left-40, boy-45) punct(confirm-6, ?-46)",1,0,0,"root(ROOT, confirm) ax(confirm, Can) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(confirm, Gentleman) det(message, the) dobj(confirm, message) case(tapes, on) det(tapes, the) nmod:on(message, tapes) nmod:tmod(confirm, today) mark(rnning, that) nsbj(rnning, he) ax(rnning, is) ccomp(confirm, rnning) advmod(scared, so) xcomp(rnning, scared) pnct(rnning, ,) cc(rnning, and) advmod(frit, so) ccomp(confirm, frit) conj:and(rnning, frit) pnct(frit, ,) cc(frit, and) cop(sweating, is) conj:and(rnning, sweating) conj:and(frit, sweating) advmod(profsely, so) advmod(sweating, profsely) case(fear, with) nmod:with(sweating, fear) pnct(rnning, ,) mark(cancelled, that) nsbj(cancelled, he) nsbj(left, he) ax(cancelled, has) ccomp(rnning, cancelled) det:predet(engagements, all) nmod:poss(engagements, his) dobj(cancelled, engagements) cc(cancelled, and) ccomp(rnning, left) conj:and(cancelled, left) dobj(left, them) case(boy, to) det(boy, the) compond(boy, office) nmod:to(left, boy) pnct(confirm, ?)","root(,VBZ) ax(VBZ,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) det(NN,DT) dobj(VBZ,NN) case(NNS,IN) det(NNS,DT) nmod:on(NN,NNS) nmod:tmod(VBZ,NN) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBZ) ccomp(VBZ,VBG) advmod(JJ,RB) xcomp(VBG,JJ) pnct(VBG,VBG) cc(VBG,CC) advmod(JJ,RB) ccomp(VBZ,JJ) conj:and(VBG,JJ) pnct(JJ,JJ) cc(JJ,CC) cop(VBG,VBZ) conj:and(VBG,VBG) conj:and(JJ,VBG) advmod(RB,RB) advmod(VBG,RB) case(NN,IN) nmod:with(VBG,NN) pnct(VBG,VBG) mark(VBN,IN) nsbj(VBN,PRP) nsbj(VBD,PRP) ax(VBN,VBZ) ccomp(VBG,VBN) det:predet(NNS,DT) nmod:poss(NNS,PRP$) dobj(VBN,NNS) cc(VBN,CC) ccomp(VBG,VBD) conj:and(VBN,VBD) dobj(VBD,PRP) case(NN,TO) det(NN,DT) compond(NN,NN) nmod:to(VBD,NN) pnct(VBZ,VBZ)","[right, boy, and, scared, Gentleman, today, left, confirm, engagements, message, he, cancelled, frit, running, and, them, he, ROOT]","[he, boy, and, scared, confirm, today, left, Gentleman, his, engagements, message, he, cancelled, frit, running, and, them, ROOT]",14,"[cancelled, engagements, his]","[cancelled, engagements, his]",PRP_he NN_boy CC_and JJ_scared NN_confirm NN_today VBD_left NNP_Gentleman PRP$_his NNS_engagements NN_message PRP_he VBN_cancelled JJ_frit VBG_running CC_and PRP_them ,"[he, boy, and, scared, confirm, today, left, Gentleman, his, engagements, message, he, cancelled, frit, running, and, them, ROOT]","[he, boy, and, scared, confirm, today, left, Gentleman, his, engagements, message, he, cancelled, frit, running, and, them, ROOT]",PRP_he NN_boy CC_and JJ_scared NN_confirm NN_today VBD_left NNP_Gentleman PRP$_his NNS_engagements NN_message PRP_he VBN_cancelled JJ_frit VBG_running CC_and PRP_them ,"[he, boy, and, scared, confirm, today, left, Gentleman, his, engagements, message, he, cancelled, frit, running, and, them, ROOT]",PRP_he NN_boy CC_and JJ_scared NN_confirm NN_today VBD_left NNP_Gentleman PRP$_his NNS_engagements NN_message PRP_he VBN_cancelled JJ_frit VBG_running CC_and PRP_them ,"[he, boy, and, scared, confirm, today, left, Gentleman, his, engagements, message, he, cancelled, frit, running, and, them, ROOT]",PRP_he NN_boy CC_and JJ_scared NN_confirm NN_today VBD_left NNP_Gentleman PRP$_his NNS_engagements NN_message PRP_he VBN_cancelled JJ_frit VBG_running CC_and PRP_them ,1,2,2,2,1,2,2,2,2,2
Will he also disregard the jaundiced remarks of ex Prime Ministers  however eminent they may think they are?,WillMD hePRP alsoRB disregardVBD theDT jaundicedJJ remarksNNS ofIN exJJ PrimeNNP MinistersNNP howeverRB eminentVBD theyPRP mayMD thinkVB theyPRP areVBP ,"root(ROOT-0, disregard-4) aux(disregard-4, Will-1) nsubj(disregard-4, he-2) advmod(disregard-4, also-3) det(remarks-7, the-5) amod(remarks-7, jaundiced-6) dobj(disregard-4, remarks-7) case(Ministers-11, of-8) compound(Ministers-11, ex-9) amod(Ministers-11, Prime-10) nmod:of(remarks-7, Ministers-11) punct(disregard-4, ,-12) advmod(eminent-14, however-13) dep(disregard-4, eminent-14) nsubj(think-17, they-15) aux(think-17, may-16) ccomp(eminent-14, think-17) nsubj(are-19, they-18) ccomp(think-17, are-19) punct(disregard-4, ?-20)",0,0,0,"root(ROOT, disregard) ax(disregard, Will) nsbj(disregard, he) advmod(disregard, also) det(remarks, the) amod(remarks, jandiced) dobj(disregard, remarks) case(Ministers, of) compond(Ministers, ex) amod(Ministers, Prime) nmod:of(remarks, Ministers) pnct(disregard, ,) advmod(eminent, however) dep(disregard, eminent) nsbj(think, they) ax(think, may) ccomp(eminent, think) nsbj(are, they) ccomp(think, are) pnct(disregard, ?)","root(,VBD) ax(VBD,MD) nsbj(VBD,PRP) advmod(VBD,RB) det(NNS,DT) amod(NNS,JJ) dobj(VBD,NNS) case(NNP,IN) compond(NNP,JJ) amod(NNP,NNP) nmod:of(NNS,NNP) pnct(VBD,VBD) advmod(VBD,RB) dep(VBD,VBD) nsbj(VB,PRP) ax(VB,MD) ccomp(VBD,VB) nsbj(VBP,PRP) ccomp(VB,VBP) pnct(VBD,VBD)","[he, ROOT, also, disregard, eminent]","[he, ROOT, also, disregard, eminent]",3,[ ],[ ],PRP_he RB_also VBD_disregard VBD_eminent ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Does he not pay any attention whatsoever to his right hon. Friend's wise words these days over the future of the Inner London education authority?,DoesNNS hePRP notRB payVB anyDT attentionNN whatsoeverNN toTO hisPRP$ rightJJ honNN FriendNNP 'sPOS wiseNN wordsNNS theseDT daysNNS overIN theDT futureNN ofIN theDT InnerNNP LondonNNP educationNN authorityNN ,"root(ROOT-0, pay-4) aux(pay-4, Does-1) nsubj(pay-4, he-2) neg(pay-4, not-3) det(attention-6, any-5) dobj(pay-4, attention-6) amod(attention-6, whatsoever-7) case(words-15, to-8) nmod:poss(Friend-12, his-9) amod(Friend-12, right-10) compound(Friend-12, hon.-11) nmod:poss(words-15, Friend-12) case(Friend-12, 's-13) amod(words-15, wise-14) nmod:to(whatsoever-7, words-15) det(days-17, these-16) nmod:tmod(words-15, days-17) case(future-20, over-18) det(future-20, the-19) nmod:over(words-15, future-20) case(authority-26, of-21) det(authority-26, the-22) compound(authority-26, Inner-23) compound(authority-26, London-24) compound(authority-26, education-25) nmod:of(future-20, authority-26) punct(pay-4, ?-27)",1,0,0,"root(ROOT, pay) ax(pay, Does) nsbj(pay, he) neg(pay, not) det(attention, any) dobj(pay, attention) amod(attention, whatsoever) case(words, to) nmod:poss(Friend, his) amod(Friend, right) compond(Friend, hon.) nmod:poss(words, Friend) ""case(Friend, s)"", amod(words, wise) nmod:to(whatsoever, words) det(days, these) nmod:tmod(words, days) case(ftre, over) det(ftre, the) nmod:over(words, ftre) case(athority, of) det(athority, the) compond(athority, Inner) compond(athority, London) compond(athority, edcation) nmod:of(ftre, athority) pnct(pay, ?)","root(,VB) ax(VB,NNS) nsbj(VB,PRP) neg(VB,RB) det(NN,DT) dobj(VB,NN) amod(NN,NN) case(NNS,TO) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) amod(NNS,NN) nmod:to(NN,NNS) det(NNS,DT) nmod:tmod(NNS,NNS) case(NN,IN) det(NN,DT) nmod:over(NNS,NN) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NNP) compond(NN,NN) nmod:of(NN,NN) pnct(VB,VB)","[Friend, not, pay, days, attention, whatsoever, wise, future, he, ROOT, words, his, right]","[Friend, not, pay, days, whatsoever, wise, future, he, ROOT, words, his, attention]",5,"[whatsoever, Friend, future, wise, days, words, his]","[whatsoever, Friend, future, wise, days, words, his]",NNP_Friend RB_not VBP_pay NNS_days RB_whatsoever NN_wise NN_future PRP_he NNS_words PRP$_his NN_attention ,"[Friend, not, pay, days, whatsoever, wise, future, he, ROOT, words, his, attention]","[Friend, not, pay, days, whatsoever, wise, future, he, ROOT, words, his, attention]",NNP_Friend RB_not VBP_pay NNS_days RB_whatsoever NN_wise NN_future PRP_he NNS_words PRP$_his NN_attention ,"[Friend, not, pay, days, whatsoever, wise, future, he, ROOT, words, his, attention]",NNP_Friend RB_not VBP_pay NNS_days RB_whatsoever NN_wise NN_future PRP_he NNS_words PRP$_his NN_attention ,"[Friend, not, pay, days, whatsoever, wise, future, he, ROOT, words, his, attention]",NNP_Friend RB_not VBP_pay NNS_days RB_whatsoever NN_wise NN_future PRP_he NNS_words PRP$_his NN_attention ,2,2,2,1,1,1,1,1,1,2
With regard to that parents' ballot  does the Secretary of State say that that ballot is completely invalid and was fixed?,WithIN regardNN toTO thatDT parentsNNS 'POS ballotNN doesVBZ theDT SecretaryNNP ofIN StateNNP sayVBP thatIN thatDT ballotNN isVBZ completelyRB invalidJJ andCC wasVBD fixedVBN ,"root(ROOT-0, does-9) case(regard-2, With-1) nmod:with(does-9, regard-2) case(ballot-7, to-3) det(ballot-7, that-4) nmod:poss(ballot-7, parents-5) case(parents-5, '-6) nmod:to(regard-2, ballot-7) punct(does-9, ,-8) det(Secretary-11, the-10) nsubj(say-14, Secretary-11) case(State-13, of-12) nmod:of(Secretary-11, State-13) ccomp(does-9, say-14) mark(invalid-20, that-15) det(ballot-17, that-16) nsubj(invalid-20, ballot-17) nsubjpass(fixed-23, ballot-17) cop(invalid-20, is-18) advmod(invalid-20, completely-19) ccomp(say-14, invalid-20) cc(invalid-20, and-21) auxpass(fixed-23, was-22) ccomp(say-14, fixed-23) conj:and(invalid-20, fixed-23) punct(does-9, ?-24)",0,0,0,"root(ROOT, does) case(regard, With) nmod:with(does, regard) case(ballot, to) det(ballot, that) nmod:poss(ballot, parents) ""case(parents, )"", nmod:to(regard, ballot) pnct(does, ,) det(Secretary, the) nsbj(say, Secretary) case(State, of) nmod:of(Secretary, State) ccomp(does, say) mark(invalid, that) det(ballot, that) nsbj(invalid, ballot) nsbjpass(fixed, ballot) cop(invalid, is) advmod(invalid, completely) ccomp(say, invalid) cc(invalid, and) axpass(fixed, was) ccomp(say, fixed) conj:and(invalid, fixed) pnct(does, ?)","root(,VBZ) case(NN,IN) nmod:with(VBZ,NN) case(NN,TO) det(NN,DT) nmod:poss(NN,NNS) case(NNS,POS) nmod:to(NN,NN) pnct(VBZ,VBZ) det(NNP,DT) nsbj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) ccomp(VBZ,VBP) mark(JJ,DT) det(NN,DT) nsbj(JJ,NN) nsbjpass(VBN,NN) cop(JJ,VBZ) advmod(JJ,RB) ccomp(VBP,JJ) cc(JJ,CC) axpass(VBN,VBD) ccomp(VBP,VBN) conj:and(JJ,VBN) pnct(VBZ,VBZ)","[State, Secretary, invalid, say, does]","[State, Secretary, invalid, say, does]",7,"[State, Secretary, invalid, say, does]","[State, Secretary, invalid, say, does]",NNP_State NNP_Secretary JJ_invalid VB_say VBZ_does ,"[State, Secretary, invalid, say, does]",[ ],[ ],[ ],[ ],[ ],[ ],-3,0,2,0,0,0,0,0,0,0
Is that what he is telling the House?,IsVBZ thatIN whatWP hePRP isVBZ tellingVBG theDT HouseNNP ,"root(ROOT-0, Is-1) nsubj(Is-1, that-2) dobj(telling-6, what-3) nsubj(telling-6, he-4) aux(telling-6, is-5) root(that-2, telling-6) det(House-8, the-7) dobj(telling-6, House-8) punct(telling-6, ?-9)",1,0,1,"root(ROOT, Is) nsbj(Is, that) dobj(telling, what) nsbj(telling, he) ax(telling, is) root(that, telling) det(Hose, the) dobj(telling, Hose) pnct(telling, ?)","root(,VBZ) nsbj(VBZ,IN) dobj(VBG,WP) nsbj(VBG,PRP) ax(VBG,VBZ) root(IN,VBG) det(NNP,DT) dobj(VBG,NNP) pnct(VBG,VBG)","[what, that, House, he, telling]","[what, that, House, he, telling]",7,[ ],[ ],WP_what IN_that NNP_House PRP_he VBG_telling ,"[what, that, House, he, telling]","[what, that, House, he, telling]",WP_what IN_that NNP_House PRP_he VBG_telling ,"[what, that, House, he, telling]",WP_what IN_that NNP_House PRP_he VBG_telling ,"[what, that, House, he, telling]",WP_what IN_that NNP_House PRP_he VBG_telling ,1,2,2,0,0,0,0,0,0,0
As regards the views of my right hon. Friend the Member for Old Bexley and Sidcup (Mr. Heath)  I think that he was wrong about ILEA while he was in office  and he is wrong now.,AsIN regardsNNS theDT viewsNNS ofIN myPRP$ rightJJ honNN FriendNNP theDT MemberNNP forIN OldNNP BexleyNNP andCC SidcupNNP (( MrNNP HeathNNP )) IPRP thinkVBP thatIN hePRP wasVBD wrongJJ aboutIN ILEANNP whileIN hePRP wasVBD inIN officeNN andCC hePRP isVBZ wrongJJ nowRB ,"root(ROOT-0, regards-2) mark(regards-2, As-1) det(views-4, the-3) dobj(regards-2, views-4) case(Friend-9, of-5) nmod:poss(Friend-9, my-6) amod(Friend-9, right-7) compound(Friend-9, hon.-8) nmod:of(views-4, Friend-9) det(Member-11, the-10) nsubj(wrong-39, Member-11) case(Bexley-14, for-12) amod(Bexley-14, Old-13) nmod:for(Member-11, Bexley-14) cc(Bexley-14, and-15) nmod:for(Member-11, Sidcup-16) conj:and(Bexley-14, Sidcup-16) punct(Heath-19, -LRB--17) compound(Heath-19, Mr.-18) appos(Sidcup-16, Heath-19) punct(Heath-19, -RRB--20) punct(Member-11, ,-21) nsubj(think-23, I-22) acl:relcl(Member-11, think-23) mark(wrong-27, that-24) nsubj(wrong-27, he-25) cop(wrong-27, was-26) ccomp(think-23, wrong-27) case(ILEA-29, about-28) nmod:about(wrong-27, ILEA-29) mark(office-34, while-30) nsubj(office-34, he-31) cop(office-34, was-32) case(office-34, in-33) advcl:in(wrong-27, office-34) punct(Member-11, ,-35) cc(Member-11, and-36) conj:and(Member-11, he-37) nsubj(wrong-39, he-37) cop(wrong-39, is-38) acl:relcl(Friend-9, wrong-39) advmod(wrong-39, now-40) punct(regards-2, .-41)",1,0,0,"root(ROOT, regards) mark(regards, As) det(views, the) dobj(regards, views) case(Friend, of) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:of(views, Friend) det(Member, the) nsbj(wrong, Member) case(Bexley, for) amod(Bexley, Old) nmod:for(Member, Bexley) cc(Bexley, and) nmod:for(Member, Sidcp) conj:and(Bexley, Sidcp) pnct(Heath, ) compond(Heath, Mr.) appos(Sidcp, Heath) pnct(Heath, ) pnct(Member, ,) nsbj(think, I) acl:relcl(Member, think) mark(wrong, that) nsbj(wrong, he) cop(wrong, was) ccomp(think, wrong) case(ILEA, abot) nmod:abot(wrong, ILEA) mark(office, while) nsbj(office, he) cop(office, was) case(office, in) advcl:in(wrong, office) pnct(Member, ,) cc(Member, and) conj:and(Member, he) nsbj(wrong, he) cop(wrong, is) acl:relcl(Friend, wrong) advmod(wrong, now) pnct(regards, .)","root(,NNS) mark(NNS,IN) det(NNS,DT) dobj(NNS,NNS) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:of(NNS,NNP) det(NNP,DT) nsbj(JJ,NNP) case(NNP,IN) amod(NNP,NNP) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(NNP,NNP) nsbj(VBP,PRP) acl:relcl(NNP,VBP) mark(JJ,IN) nsbj(JJ,PRP) cop(JJ,VBD) ccomp(VBP,JJ) case(NNP,IN) nmod:abot(JJ,NNP) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBD) case(NN,IN) advcl:in(JJ,NN) pnct(NNP,NNP) cc(NNP,CC) conj:and(NNP,PRP) nsbj(JJ,PRP) cop(JJ,VBZ) acl:relcl(NNP,JJ) advmod(JJ,RB) pnct(NNS,NNS)","[ , I, office, regards, Heath, Member, right, wrong, ILEA, he, Friend, wrong, he, and, he, now, and, think, views, Old, my, ROOT, Bexley, Sidcup]","[ , I, office, regards, Heath, Member, wrong, ILEA, he, Friend, wrong, he, and, he, now, and, think, views, Old, my, ROOT, Bexley, Sidcup]",7,"[ , I, office, regards, Heath, Member, wrong, ILEA, he, Friend, wrong, he, and, he, now, and, think, views, Old, my, ROOT, Bexley, Sidcup]","[wrong, views, now, regards, my, Friend]",PRP_I NN_office NNS_regards NNP_Heath NNP_Member JJ_wrong NNP_ILEA PRP_he NNP_Friend JJ_wrong PRP_he CC_and PRP_he RB_now CC_and VBP_think NNS_views NNP_Old PRP$_my NNP_Bexley NNP_Sidcup ,"[ , I, office, regards, Heath, Member, wrong, ILEA, he, Friend, wrong, he, and, he, now, and, think, views, Old, my, ROOT, Bexley, Sidcup]","[ , I, office, regards, Heath, Member, wrong, ILEA, he, Friend, wrong, he, and, he, now, and, think, views, Old, my, ROOT, Bexley, Sidcup]",PRP_I NN_office NNS_regards NNP_Heath NNP_Member JJ_wrong NNP_ILEA PRP_he NNP_Friend JJ_wrong PRP_he CC_and PRP_he RB_now CC_and VBP_think NNS_views NNP_Old PRP$_my NNP_Bexley NNP_Sidcup ,"[ , I, office, regards, Heath, Member, wrong, ILEA, he, Friend, wrong, he, and, he, now, and, think, views, Old, my, ROOT, Bexley, Sidcup]",PRP_I NN_office NNS_regards NNP_Heath NNP_Member JJ_wrong NNP_ILEA PRP_he NNP_Friend JJ_wrong PRP_he CC_and PRP_he RB_now CC_and VBP_think NNS_views NNP_Old PRP$_my NNP_Bexley NNP_Sidcup ,"[ , I, office, regards, Heath, Member, wrong, ILEA, he, Friend, wrong, he, and, he, now, and, think, views, Old, my, ROOT, Bexley, Sidcup]",PRP_I NN_office NNS_regards NNP_Heath NNP_Member JJ_wrong NNP_ILEA PRP_he NNP_Friend JJ_wrong PRP_he CC_and PRP_he RB_now CC_and VBP_think NNS_views NNP_Old PRP$_my NNP_Bexley NNP_Sidcup ,2,2,2,2,1,2,2,2,2,2
I can assure my hon. Friend that his facts are right.,IPRP canMD assureVB myPRP$ honNN FriendNN thatIN hisPRP$ factsNNS areVBP rightJJ ,"root(ROOT-0, assure-3) nsubj(assure-3, I-1) aux(assure-3, can-2) nmod:poss(Friend-6, my-4) compound(Friend-6, hon.-5) dobj(assure-3, Friend-6) mark(right-11, that-7) nmod:poss(facts-9, his-8) nsubj(right-11, facts-9) cop(right-11, are-10) dep(Friend-6, right-11) punct(assure-3, .-12)",1,1,0,"root(ROOT, assre) nsbj(assre, I) ax(assre, can) nmod:poss(Friend, my) compond(Friend, hon.) dobj(assre, Friend) mark(right, that) nmod:poss(facts, his) nsbj(right, facts) cop(right, are) dep(Friend, right) pnct(assre, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) nmod:poss(NN,PRP$) compond(NN,NN) dobj(VB,NN) mark(JJ,IN) nmod:poss(NNS,PRP$) nsbj(JJ,NNS) cop(JJ,VBP) dep(NN,JJ) pnct(VB,VB)","[facts, I, assure, my, Friend, ROOT, right]","[I, assure, facts, Friend, my, ROOT, his, right]",13,"[I, assure, facts, Friend, my, ROOT, his, right]","[I, assure, facts, Friend, my, ROOT, his, right]",PRP_I NN_assure NNS_facts NNP_Friend PRP$_my PRP$_his JJ_right ,"[I, assure, facts, Friend, my, ROOT, his, right]","[I, assure, facts, Friend, my, ROOT, his, right]",PRP_I NN_assure NNS_facts NNP_Friend PRP$_my PRP$_his JJ_right ,"[I, assure, facts, Friend, my, ROOT, his, right]",PRP_I NN_assure NNS_facts NNP_Friend PRP$_my PRP$_his JJ_right ,"[I, assure, facts, Friend, my, ROOT, his, right]",PRP_I NN_assure NNS_facts NNP_Friend PRP$_my PRP$_his JJ_right ,1,1,1,1,1,1,1,1,1,1
Has not that highly centralised authority of the emerging European union come about only because in 1986 she  on behalf of the Government  signed the Single European Act  with the active encouragement and endorsement of the Prime Minister?,HasNNP notRB thatIN highlyRB centralisedJJ authorityNN ofIN theDT emergingVBG EuropeanNNP unionNN comeVB aboutIN onlyRB becauseIN inIN 1986CD shePRP onIN behalfNN ofIN theDT GovernmentNNP signedVBD theDT SingleNNP EuropeanNNP ActNNP withIN theDT activeJJ encouragementNN andCC endorsementNN ofIN theDT PrimeNNP MinisterNNP ,"root(ROOT-0, come-12) aux(authority-6, Has-1) neg(authority-6, not-2) det(authority-6, that-3) advmod(centralised-5, highly-4) amod(authority-6, centralised-5) nsubj(come-12, authority-6) case(union-11, of-7) det(union-11, the-8) amod(union-11, emerging-9) amod(union-11, European-10) nmod:of(authority-6, union-11) case(only-14, about-13) advmod(signed-26, only-14) advmod(1986-17, because-15) case(1986-17, in-16) nmod:in(signed-26, 1986-17) nsubj(signed-26, she-18) punct(signed-26, ,-19) case(behalf-21, on-20) nmod:on(signed-26, behalf-21) case(Government-24, of-22) det(Government-24, the-23) nmod:of(behalf-21, Government-24) punct(signed-26, ,-25) ccomp(come-12, signed-26) det(Act-30, the-27) amod(Act-30, Single-28) amod(Act-30, European-29) dobj(signed-26, Act-30) punct(signed-26, ,-31) case(encouragement-35, with-32) det(encouragement-35, the-33) amod(encouragement-35, active-34) nmod:with(signed-26, encouragement-35) cc(encouragement-35, and-36) nmod:with(signed-26, endorsement-37) conj:and(encouragement-35, endorsement-37) case(Minister-41, of-38) det(Minister-41, the-39) compound(Minister-41, Prime-40) nmod:of(endorsement-37, Minister-41) punct(come-12, ?-42)",1,0,0,"root(ROOT, come) ax(athority, Has) neg(athority, not) det(athority, that) advmod(centralised, highly) amod(athority, centralised) nsbj(come, athority) case(nion, of) det(nion, the) amod(nion, emerging) amod(nion, Eropean) nmod:of(athority, nion) case(only, abot) advmod(signed, only) advmod(1986, becase) case(1986, in) nmod:in(signed, 1986) nsbj(signed, she) pnct(signed, ,) case(behalf, on) nmod:on(signed, behalf) case(Government, of) det(Government, the) nmod:of(behalf, Government) pnct(signed, ,) ccomp(come, signed) det(Act, the) amod(Act, Single) amod(Act, Eropean) dobj(signed, Act) pnct(signed, ,) case(encoragement, with) det(encoragement, the) amod(encoragement, active) nmod:with(signed, encoragement) cc(encoragement, and) nmod:with(signed, endorsement) conj:and(encoragement, endorsement) case(Minister, of) det(Minister, the) compond(Minister, Prime) nmod:of(endorsement, Minister) pnct(come, ?)","root(,VB) ax(NN,NNP) neg(NN,RB) det(NN,IN) advmod(JJ,RB) amod(NN,JJ) nsbj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,VBG) amod(NN,NNP) nmod:of(NN,NN) case(RB,IN) advmod(VBD,RB) advmod(CD,IN) case(CD,IN) nmod:in(VBD,CD) nsbj(VBD,PRP) pnct(VBD,VBD) case(NN,IN) nmod:on(VBD,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(VBD,VBD) ccomp(VB,VBD) det(NNP,DT) amod(NNP,NNP) amod(NNP,NNP) dobj(VBD,NNP) pnct(VBD,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:with(VBD,NN) cc(NN,CC) nmod:with(VBD,NN) conj:and(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:of(NN,NNP) pnct(VB,VB)","[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]","[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]",14,"[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]","[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]",CD_1986 RB_only PRP_she JJ_signed NN_behalf NN_endorsement NNP_Minister NNP_Act NN_encouragement NN_come NNP_Government ,"[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]","[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]",CD_1986 RB_only PRP_she JJ_signed NN_behalf NN_endorsement NNP_Minister NNP_Act NN_encouragement NN_come NNP_Government ,"[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]",CD_1986 RB_only PRP_she JJ_signed NN_behalf NN_endorsement NNP_Minister NNP_Act NN_encouragement NN_come NNP_Government ,"[1986, only, she, signed, behalf, endorsement, Minister, Act, encouragement, come, Government]",CD_1986 RB_only PRP_she JJ_signed NN_behalf NN_endorsement NNP_Minister NNP_Act NN_encouragement NN_come NNP_Government ,2,1,2,1,1,1,1,1,1,2
The Single European Act was the first update of the Treaty of Rome  and there is nothing in it to cause me anything like the elevated concern that the hon. Gentleman expresses  both in the House and elsewhere.,TheDT SingleNNP EuropeanNNP ActNNP wasVBD theDT firstJJ updateNN ofIN theDT TreatyNNP ofIN RomeNNP andCC thereEX isVBZ nothingNN inIN itPRP toTO causeVB mePRP anythingNN likeIN theDT elevatedJJ concernNN thatIN theDT honNN GentlemanNNP expressesVBZ bothDT inIN theDT HouseNNP andCC elsewhereRB ,"root(ROOT-0, update-8) det(Act-4, The-1) amod(Act-4, Single-2) compound(Act-4, European-3) nsubj(update-8, Act-4) cop(update-8, was-5) det(update-8, the-6) amod(update-8, first-7) case(Treaty-11, of-9) det(Treaty-11, the-10) nmod:of(update-8, Treaty-11) case(Rome-13, of-12) nmod:of(Treaty-11, Rome-13) punct(update-8, ,-14) cc(update-8, and-15) expl(is-17, there-16) conj:and(update-8, is-17) nsubj(is-17, nothing-18) case(it-20, in-19) nmod:in(nothing-18, it-20) mark(cause-22, to-21) acl(nothing-18, cause-22) nsubj(anything-24, me-23) dobj(cause-22, anything-24) case(concern-28, like-25) det(concern-28, the-26) amod(concern-28, elevated-27) nmod:like(anything-24, concern-28) dobj(expresses-33, that-29) det(Gentleman-32, the-30) compound(Gentleman-32, hon.-31) nsubj(expresses-33, Gentleman-32) acl:relcl(concern-28, expresses-33) punct(anything-24, ,-34) cc:preconj(House-38, both-35) case(House-38, in-36) det(House-38, the-37) nmod:in(anything-24, House-38) cc(House-38, and-39) nmod:in(anything-24, elsewhere-40) conj:and(House-38, elsewhere-40) punct(update-8, .-41)",1,0,0,"root(ROOT, pdate) det(Act, The) amod(Act, Single) compond(Act, Eropean) nsbj(pdate, Act) cop(pdate, was) det(pdate, the) amod(pdate, first) case(Treaty, of) det(Treaty, the) nmod:of(pdate, Treaty) case(Rome, of) nmod:of(Treaty, Rome) pnct(pdate, ,) cc(pdate, and) expl(is, there) conj:and(pdate, is) nsbj(is, nothing) case(it, in) nmod:in(nothing, it) mark(case, to) acl(nothing, case) nsbj(anything, me) dobj(case, anything) case(concern, like) det(concern, the) amod(concern, elevated) nmod:like(anything, concern) dobj(expresses, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(expresses, Gentleman) acl:relcl(concern, expresses) pnct(anything, ,) cc:preconj(Hose, both) case(Hose, in) det(Hose, the) nmod:in(anything, Hose) cc(Hose, and) nmod:in(anything, elsewhere) conj:and(Hose, elsewhere) pnct(pdate, .)","root(,NN) det(NNP,DT) amod(NNP,NNP) compond(NNP,NNP) nsbj(NN,NNP) cop(NN,VBD) det(NN,DT) amod(NN,JJ) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) case(NNP,IN) nmod:of(NNP,NNP) pnct(NN,NN) cc(NN,CC) expl(VBZ,EX) conj:and(NN,VBZ) nsbj(VBZ,NN) case(PRP,IN) nmod:in(NN,PRP) mark(VB,TO) acl(NN,VB) nsbj(NN,PRP) dobj(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:like(NN,NN) dobj(VBZ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) acl:relcl(NN,VBZ) pnct(NN,NN) cc:preconj(NNP,DT) case(NNP,IN) det(NNP,DT) nmod:in(NN,NNP) cc(NNP,CC) nmod:in(NN,RB) conj:and(NNP,RB) pnct(NN,NN)","[Gentleman, expresses, that, concern]","[Gentleman, expresses, that, concern]",3,"[Gentleman, expresses, that, concern]","[Gentleman, expresses, that, concern]",NNP_Gentleman VBZ_expresses IN_that NN_concern ,"[Gentleman, expresses, that, concern]","[Gentleman, expresses, that, concern]",NNP_Gentleman VBZ_expresses IN_that NN_concern ,"[Gentleman, expresses, that, concern]",NNP_Gentleman VBZ_expresses IN_that NN_concern ,"[Gentleman, expresses, that, concern]",NNP_Gentleman VBZ_expresses IN_that NN_concern ,2,2,2,2,1,2,2,2,2,2
Has my right hon. Friend committed to memory the excellent speech of our right hon. Friend the Prime Minister at Bruges?,HasNNP myPRP$ rightJJ honNN FriendNNP committedVBD toTO memoryVB theDT excellentJJ speechNN ofIN ourPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP atIN BrugesNNP ,"root(ROOT-0, Has-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) dobj(Has-1, Friend-5) acl(Friend-5, committed-6) case(memory-8, to-7) nmod:to(committed-6, memory-8) det(speech-11, the-9) amod(speech-11, excellent-10) dobj(committed-6, speech-11) case(Friend-16, of-12) nmod:poss(Friend-16, our-13) amod(Friend-16, right-14) compound(Friend-16, hon.-15) nmod:of(speech-11, Friend-16) det(Minister-19, the-17) compound(Minister-19, Prime-18) dep(Friend-16, Minister-19) case(Bruges-21, at-20) nmod:at(Minister-19, Bruges-21) punct(Has-1, ?-22)",1,1,0,"root(ROOT, Has) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) dobj(Has, Friend) acl(Friend, committed) case(memory, to) nmod:to(committed, memory) det(speech, the) amod(speech, excellent) dobj(committed, speech) case(Friend, of) nmod:poss(Friend, or) amod(Friend, right) compond(Friend, hon.) nmod:of(speech, Friend) det(Minister, the) compond(Minister, Prime) dep(Friend, Minister) case(Brges, at) nmod:at(Minister, Brges) pnct(Has, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dobj(NNP,NNP) acl(NNP,VBD) case(VB,TO) nmod:to(VBD,VB) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NNP,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:of(NN,NNP) det(NNP,DT) compond(NNP,NNP) dep(NNP,NNP) case(NNP,IN) nmod:at(NNP,NNP) pnct(NNP,NNP)","[excellent, committed, Friend, Bruges, right, memory, Minister, speech, Friend, my, right, ROOT, Has, our]","[excellent, Friend, Bruges, memory, Minister, committed, Friend, my, speech, ROOT, Has, our]",4,"[excellent, Friend, Bruges, memory, Minister, committed, Friend, my, speech, ROOT, Has, our]","[excellent, Friend, Bruges, memory, Minister, committed, Friend, my, speech, ROOT, Has, our]",JJ_excellent NNP_Friend NNP_Bruges VB_memory NNP_Minister VBN_committed NNP_Friend PRP$_my NN_speech NNP_Has PRP$_our ,"[excellent, Friend, Bruges, memory, Minister, committed, Friend, my, speech, ROOT, Has, our]","[excellent, Friend, Bruges, memory, Minister, committed, Friend, my, speech, ROOT, Has, our]",JJ_excellent NNP_Friend NNP_Bruges VB_memory NNP_Minister VBN_committed NNP_Friend PRP$_my NN_speech NNP_Has PRP$_our ,"[excellent, Friend, Bruges, memory, Minister, committed, Friend, my, speech, ROOT, Has, our]",JJ_excellent NNP_Friend NNP_Bruges VB_memory NNP_Minister VBN_committed NNP_Friend PRP$_my NN_speech NNP_Has PRP$_our ,"[excellent, Friend, Bruges, memory, Minister, committed, Friend, my, speech, ROOT, Has, our]",JJ_excellent NNP_Friend NNP_Bruges VB_memory NNP_Minister VBN_committed NNP_Friend PRP$_my NN_speech NNP_Has PRP$_our ,1,1,1,1,1,1,2,0,1,1
Any Prime Minister who speaks so clearly for the needs of this country  by saying that our destiny is in Europe as part of the Community  has our fullest support.,AnyDT PrimeNNP MinisterNNP whoWP speaksVBZ soRB clearlyRB forIN theDT needsNNS ofIN thisDT countryNN byIN sayingVBG thatIN ourPRP$ destinyNN isVBZ inIN EuropeNNP asIN partNN ofIN theDT CommunityNNP hasVBZ ourPRP$ fullestJJS supportNN ,"root(ROOT-0, has-29) det(Minister-3, Any-1) compound(Minister-3, Prime-2) nsubj(has-29, Minister-3) nsubj(speaks-5, who-4) acl:relcl(Minister-3, speaks-5) advmod(clearly-7, so-6) advmod(speaks-5, clearly-7) case(needs-10, for-8) det(needs-10, the-9) nmod:for(speaks-5, needs-10) case(country-13, of-11) det(country-13, this-12) nmod:of(needs-10, country-13) punct(Minister-3, ,-14) mark(saying-16, by-15) acl(Minister-3, saying-16) mark(is-20, that-17) nmod:poss(destiny-19, our-18) nsubj(is-20, destiny-19) ccomp(saying-16, is-20) case(Europe-22, in-21) nmod:in(is-20, Europe-22) case(part-24, as-23) nmod:as(is-20, part-24) case(Community-27, of-25) det(Community-27, the-26) nmod:of(part-24, Community-27) punct(Minister-3, ,-28) nmod:poss(support-32, our-30) amod(support-32, fullest-31) dobj(has-29, support-32) punct(has-29, .-33)",1,0,0,"root(ROOT, has) det(Minister, Any) compond(Minister, Prime) nsbj(has, Minister) nsbj(speaks, who) acl:relcl(Minister, speaks) advmod(clearly, so) advmod(speaks, clearly) case(needs, for) det(needs, the) nmod:for(speaks, needs) case(contry, of) det(contry, this) nmod:of(needs, contry) pnct(Minister, ,) mark(saying, by) acl(Minister, saying) mark(is, that) nmod:poss(destiny, or) nsbj(is, destiny) ccomp(saying, is) case(Erope, in) nmod:in(is, Erope) case(part, as) nmod:as(is, part) case(Commnity, of) det(Commnity, the) nmod:of(part, Commnity) pnct(Minister, ,) nmod:poss(spport, or) amod(spport, fllest) dobj(has, spport) pnct(has, .)","root(,VBZ) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) nsbj(VBZ,WP) acl:relcl(NNP,VBZ) advmod(RB,RB) advmod(VBZ,RB) case(NNS,IN) det(NNS,DT) nmod:for(VBZ,NNS) case(NN,IN) det(NN,DT) nmod:of(NNS,NN) pnct(NNP,NNP) mark(VBG,IN) acl(NNP,VBG) mark(VBZ,IN) nmod:poss(NN,PRP$) nsbj(VBZ,NN) ccomp(VBG,VBZ) case(NNP,IN) nmod:in(VBZ,NNP) case(NN,IN) nmod:as(VBZ,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) pnct(NNP,NNP) nmod:poss(NN,PRP$) amod(NN,JJS) dobj(VBZ,NN) pnct(VBZ,VBZ)","[ , speaks, destiny, has, Minister, part, who, is, needs, saying, clearly, ROOT, support]","[ , speaks, destiny, has, Minister, part, who, is, needs, saying, clearly, ROOT, support]",5,"[ , speaks, destiny, has, Minister, part, who, is, needs, saying, clearly, ROOT, support]","[ , speaks, destiny, has, Minister, part, who, is, needs, saying, clearly, ROOT, support]",VBZ_speaks NN_destiny VBZ_has NNP_Minister NN_part WP_who VBZ_is NNS_needs VBG_saying RB_clearly NN_support ,"[ , speaks, destiny, has, Minister, part, who, is, needs, saying, clearly, ROOT, support]","[ , speaks, destiny, has, Minister, part, who, is, needs, saying, clearly, ROOT, support]",VBZ_speaks NN_destiny VBZ_has NNP_Minister NN_part WP_who VBZ_is NNS_needs VBG_saying RB_clearly NN_support ,"[ , speaks, destiny, has, Minister, part, who, is, needs, saying, clearly, ROOT, support]",VBZ_speaks NN_destiny VBZ_has NNP_Minister NN_part WP_who VBZ_is NNS_needs VBG_saying RB_clearly NN_support ,[ ],[ ],3,1,1,1,1,1,1,1,1,1
Are not the Prime Minister's words at variance with the deeds of the Government?,AreNNP notRB theDT PrimeNNP MinisterNNP 'sPOS wordsNNS atIN varianceNN withIN theDT deedsNNS ofIN theDT GovernmentNNP ,"root(ROOT-0, words-7) cop(words-7, Are-1) neg(words-7, not-2) det(Minister-5, the-3) compound(Minister-5, Prime-4) nmod:poss(words-7, Minister-5) case(Minister-5, 's-6) case(variance-9, at-8) nmod:at(words-7, variance-9) case(deeds-12, with-10) det(deeds-12, the-11) nmod:with(variance-9, deeds-12) case(Government-15, of-13) det(Government-15, the-14) nmod:of(deeds-12, Government-15) punct(words-7, ?-16)",1,1,0,"root(ROOT, words) cop(words, Are) neg(words, not) det(Minister, the) compond(Minister, Prime) nmod:poss(words, Minister) ""case(Minister, s)"", case(variance, at) nmod:at(words, variance) case(deeds, with) det(deeds, the) nmod:with(variance, deeds) case(Government, of) det(Government, the) nmod:of(deeds, Government) pnct(words, ?)","root(,NNS) cop(NNS,NNP) neg(NNS,RB) det(NNP,DT) compond(NNP,NNP) nmod:poss(NNS,NNP) case(NNP,POS) case(NN,IN) nmod:at(NNS,NN) case(NNS,IN) det(NNS,DT) nmod:with(NN,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) pnct(NNS,NNS)","[Minister, not, deeds, ROOT, variance, words, Government]","[Minister, not, deeds, ROOT, variance, words, Government]",6,"[Minister, not, deeds, ROOT, variance, words, Government]","[Minister, not, deeds, ROOT, variance, words, Government]",NNP_Minister RB_not NNS_deeds NN_variance NNS_words NNP_Government ,"[Minister, not, deeds, ROOT, variance, words, Government]","[Minister, not, deeds, ROOT, variance, words, Government]",NNP_Minister RB_not NNS_deeds NN_variance NNS_words NNP_Government ,"[Minister, not, deeds, ROOT, variance, words, Government]",NNP_Minister RB_not NNS_deeds NN_variance NNS_words NNP_Government ,"[Minister, not, deeds, ROOT, variance, words, Government]",NNP_Minister RB_not NNS_deeds NN_variance NNS_words NNP_Government ,2,2,2,2,1,2,0,0,0,2
Are not the Government capitulating to every demand of the Common Market  including the payment of £4.7 billion since 1984 and the development of a trade deficit in manufactured goods of £10 billion?,AreNNP notRB theDT GovernmentNNP capitulatingNN toTO everyDT demandNN ofIN theDT CommonNNP MarketNNP includingVBG theDT paymentNN ofIN £47NNP billionCD sinceIN 1984CD andCC theDT developmentNN ofIN aDT tradeNN deficitNN inIN manufacturedJJ goodsNNS ofIN £10JJ billionCD ,"root(ROOT-0, Are-1) neg(Government-4, not-2) det(Government-4, the-3) nsubj(Are-1, Government-4) acl(Government-4, capitulating-5) case(demand-8, to-6) det(demand-8, every-7) nmod:to(capitulating-5, demand-8) case(Market-12, of-9) det(Market-12, the-10) amod(Market-12, Common-11) nmod:of(demand-8, Market-12) punct(Government-4, ,-13) case(payment-16, including-14) det(payment-16, the-15) nmod:including(Government-4, payment-16) case(billion-20, of-17) compound(billion-20, #-18) compound(billion-20, 4.7-19) nmod:of(payment-16, billion-20) case(1984-22, since-21) nmod:since(payment-16, 1984-22) cc(payment-16, and-23) det(development-25, the-24) nmod:including(Government-4, development-25) conj:and(payment-16, development-25) case(deficit-29, of-26) det(deficit-29, a-27) compound(deficit-29, trade-28) nmod:of(development-25, deficit-29) case(goods-32, in-30) amod(goods-32, manufactured-31) nmod:in(deficit-29, goods-32) case(billion-36, of-33) compound(billion-36, #-34) compound(billion-36, 10-35) nmod:of(goods-32, billion-36) punct(Are-1, ?-37)",1,0,0,"root(ROOT, Are) neg(Government, not) det(Government, the) nsbj(Are, Government) acl(Government, capitlating) case(demand, to) det(demand, every) nmod:to(capitlating, demand) case(Market, of) det(Market, the) amod(Market, Common) nmod:of(demand, Market) pnct(Government, ,) case(payment, inclding) det(payment, the) nmod:inclding(Government, payment) case(billion, of) compond(billion, #) compond(billion, 4.7) nmod:of(payment, billion) case(1984, since) nmod:since(payment, 1984) cc(payment, and) det(development, the) nmod:inclding(Government, development) conj:and(payment, development) case(deficit, of) det(deficit, a) compond(deficit, trade) nmod:of(development, deficit) case(goods, in) amod(goods, manfactred) nmod:in(deficit, goods) case(billion, of) compond(billion, #) compond(billion, 10) nmod:of(goods, billion) pnct(Are, ?)","root(,NNP) neg(NNP,RB) det(NNP,DT) nsbj(NNP,NNP) acl(NNP,NN) case(NN,TO) det(NN,DT) nmod:to(NN,NN) case(NNP,IN) det(NNP,DT) amod(NNP,NNP) nmod:of(NN,NNP) pnct(NNP,NNP) case(NN,VBG) det(NN,DT) nmod:inclding(NNP,NN) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NN,CD) case(CD,IN) nmod:since(NN,CD) cc(NN,CC) det(NN,DT) nmod:inclding(NNP,NN) conj:and(NN,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:of(NN,NN) case(NNS,IN) amod(NNS,JJ) nmod:in(NN,NNS) case(CD,IN) compond(CD,CD) compond(CD,CD) nmod:of(NNS,CD) pnct(NNP,NNP)","[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]","[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]",7,"[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]","[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]",NNP_Market RB_not NNP_Government VB_demand NN_capitulating CC_and NNS_goods NN_payment NNP_Are CD_1984 CD_billion NN_deficit NN_development ,"[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]","[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]",NNP_Market RB_not NNP_Government VB_demand NN_capitulating CC_and NNS_goods NN_payment NNP_Are CD_1984 CD_billion NN_deficit NN_development ,"[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]",NNP_Market RB_not NNP_Government VB_demand NN_capitulating CC_and NNS_goods NN_payment NNP_Are CD_1984 CD_billion NN_deficit NN_development ,"[ , Market, not, Government, demand, capitulating, ROOT, and, goods, payment, Are, 1984, billion, deficit, development]",NNP_Market RB_not NNP_Government VB_demand NN_capitulating CC_and NNS_goods NN_payment NNP_Are CD_1984 CD_billion NN_deficit NN_development ,1,2,2,2,1,2,0,0,0,2
I am sorry that the hon. Gentleman has not learnt sufficient about it to know that already.,IPRP amVBP sorryJJ thatIN theDT honNN GentlemanNNP hasVBZ notRB learntVBN sufficientJJ aboutIN itPRP toTO knowVB thatDT alreadyRB ,"root(ROOT-0, sorry-3) nsubj(sorry-3, I-1) cop(sorry-3, am-2) mark(learnt-10, that-4) det(Gentleman-7, the-5) compound(Gentleman-7, hon.-6) nsubj(learnt-10, Gentleman-7) aux(learnt-10, has-8) neg(learnt-10, not-9) ccomp(sorry-3, learnt-10) xcomp(learnt-10, sufficient-11) case(it-13, about-12) nmod:about(sufficient-11, it-13) mark(know-15, to-14) xcomp(sufficient-11, know-15) det(already-17, that-16) advmod(know-15, already-17) punct(sorry-3, .-18)",1,0,1,"root(ROOT, sorry) nsbj(sorry, I) cop(sorry, am) mark(learnt, that) det(Gentleman, the) compond(Gentleman, hon.) nsbj(learnt, Gentleman) ax(learnt, has) neg(learnt, not) ccomp(sorry, learnt) xcomp(learnt, sfficient) case(it, abot) nmod:abot(sfficient, it) mark(know, to) xcomp(sfficient, know) det(already, that) advmod(know, already) pnct(sorry, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) mark(VBN,DT) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) neg(VBN,RB) ccomp(JJ,VBN) xcomp(VBN,JJ) case(PRP,IN) nmod:abot(JJ,PRP) mark(VB,TO) xcomp(JJ,VB) det(RB,DT) advmod(VB,RB) pnct(JJ,JJ)","[not, learnt, Gentleman, sorry, sufficient]","[not, learnt, Gentleman, sorry, sufficient]",7,[ ],[ ],RB_not VBN_learnt NNP_Gentleman JJ_sorry JJ_sufficient ,"[not, learnt, Gentleman, sorry, sufficient]","[not, learnt, Gentleman, sorry, sufficient]",RB_not VBN_learnt NNP_Gentleman JJ_sorry JJ_sufficient ,"[not, learnt, Gentleman, sorry, sufficient]",RB_not VBN_learnt NNP_Gentleman JJ_sorry JJ_sufficient ,"[not, learnt, Gentleman, sorry, sufficient]",RB_not VBN_learnt NNP_Gentleman JJ_sorry JJ_sufficient ,2,2,2,2,1,2,2,0,1,2
In view of her warm endorsement of the Prime Minister's fine speech  would my right hon. Friend care to comment on today's rather puzzling report in the Daily Express?,InIN viewNN ofIN herPRP$ warmJJ endorsementNN ofIN theDT PrimeNNP MinisterNNP 'sPOS fineJJ speechNN wouldMD myPRP$ rightJJ honNN FriendNNP careNN toTO commentVB onIN todayNN 'sPOS ratherRB puzzlingVBG reportNN inIN theDT DailyNNP ExpressNNP ,"root(ROOT-0, view-2) case(view-2, In-1) case(endorsement-6, of-3) nmod:poss(endorsement-6, her-4) amod(endorsement-6, warm-5) nmod:of(view-2, endorsement-6) case(speech-13, of-7) det(Minister-10, the-8) compound(Minister-10, Prime-9) nmod:poss(speech-13, Minister-10) case(Minister-10, 's-11) amod(speech-13, fine-12) nmod:of(endorsement-6, speech-13) punct(view-2, ,-14) root(,-14, would-15) nmod:poss(care-20, my-16) amod(care-20, right-17) compound(care-20, hon.-18) compound(care-20, Friend-19) dobj(would-15, care-20) mark(comment-22, to-21) acl(care-20, comment-22) case(report-28, on-23) nmod:poss(report-28, today-24) case(today-24, 's-25) advmod(report-28, rather-26) amod(report-28, puzzling-27) nmod:on(comment-22, report-28) case(Express-32, in-29) det(Express-32, the-30) compound(Express-32, Daily-31) nmod:in(report-28, Express-32) punct(would-15, ?-33)",1,0,0,"root(ROOT, view) case(view, In) case(endorsement, of) nmod:poss(endorsement, her) amod(endorsement, warm) nmod:of(view, endorsement) case(speech, of) det(Minister, the) compond(Minister, Prime) nmod:poss(speech, Minister) ""case(Minister, s)"", amod(speech, fine) nmod:of(endorsement, speech) pnct(view, ,) root(,, wold) nmod:poss(care, my) amod(care, right) compond(care, hon.) compond(care, Friend) dobj(wold, care) mark(comment, to) acl(care, comment) case(report, on) nmod:poss(report, today) ""case(today, s)"", advmod(report, rather) amod(report, pzzling) nmod:on(comment, report) case(Express, in) det(Express, the) compond(Express, Daily) nmod:in(report, Express) pnct(wold, ?)","root(,NN) case(NN,IN) case(NN,IN) nmod:poss(NN,PRP$) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) nmod:of(NN,NN) pnct(NN,NN) root(NNNNMD) nmod:poss(NN,PRP$) amod(NN,JJ) compond(NN,NN) compond(NN,NNP) dobj(MD,NN) mark(VB,TO) acl(NN,VB) case(NN,IN) nmod:poss(NN,NN) case(NN,POS) advmod(NN,RB) amod(NN,VBG) nmod:on(VB,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:in(NN,NNP) pnct(MD,MD)","[care, Minister, would, my, endorsement, comment, speech, right, fine]","[view, my, care, Minister, would, warm, fine, endorsement, comment, her, speech, right]",8,"[view, my, care, Minister, would, warm, fine, endorsement, comment, her, speech, right]","[view, my, care, Minister, would, warm, fine, endorsement, comment, her, speech, right]",NN_view PRP$_my NN_care NNP_Minister MD_would JJ_warm JJ_fine NN_endorsement VB_comment PRP$_her NN_speech JJ_right ,"[view, my, care, Minister, would, warm, fine, endorsement, comment, her, speech, right]","[view, my, care, Minister, would, warm, fine, endorsement, comment, her, speech, right]",NN_view PRP$_my NN_care NNP_Minister MD_would JJ_warm JJ_fine NN_endorsement VB_comment PRP$_her NN_speech JJ_right ,"[view, my, care, Minister, would, warm, fine, endorsement, comment, her, speech, right]",NN_view PRP$_my NN_care NNP_Minister MD_would JJ_warm JJ_fine NN_endorsement VB_comment PRP$_her NN_speech JJ_right ,"[view, my, care, Minister, would, warm, fine, endorsement, comment, her, speech, right]",NN_view PRP$_my NN_care NNP_Minister MD_would JJ_warm JJ_fine NN_endorsement VB_comment PRP$_her NN_speech JJ_right ,1,1,1,1,1,1,1,1,1,1
I tell my hon. Friend that when any TUC speaker shows his speech in advance to the Foreign Office  I will really think that he is living in never never land.,IPRP tellVBP myPRP$ honNN FriendNNP thatIN whenWRB anyDT TUCNNP speakerNN showsVBZ hisPRP$ speechNN inIN advanceNN toTO theDT ForeignNNP OfficeNNP IPRP willMD reallyRB thinkVB thatIN hePRP isVBZ livingVBG inIN neverRB neverRB landVBP ,"root(ROOT-0, tell-2) nsubj(tell-2, I-1) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) dobj(tell-2, Friend-5) nsubj(think-24, that-6) advmod(shows-11, when-7) det(speaker-10, any-8) compound(speaker-10, TUC-9) nsubj(shows-11, speaker-10) advcl(think-24, shows-11) nmod:poss(speech-13, his-12) dobj(shows-11, speech-13) case(advance-15, in-14) nmod:in(shows-11, advance-15) case(Office-19, to-16) det(Office-19, the-17) compound(Office-19, Foreign-18) nmod:to(advance-15, Office-19) punct(think-24, ,-20) nsubj(think-24, I-21) aux(think-24, will-22) advmod(think-24, really-23) acl:relcl(Friend-5, think-24) mark(living-28, that-25) nsubj(living-28, he-26) aux(living-28, is-27) ccomp(think-24, living-28) case(land-32, in-29) neg(land-32, never-30) neg(land-32, never-31) nmod:in(living-28, land-32) punct(tell-2, .-33)",1,0,0,"root(ROOT, tell) nsbj(tell, I) nmod:poss(Friend, my) compond(Friend, hon.) dobj(tell, Friend) nsbj(think, that) advmod(shows, when) det(speaker, any) compond(speaker, TUC) nsbj(shows, speaker) advcl(think, shows) nmod:poss(speech, his) dobj(shows, speech) case(advance, in) nmod:in(shows, advance) case(Office, to) det(Office, the) compond(Office, Foreign) nmod:to(advance, Office) pnct(think, ,) nsbj(think, I) ax(think, will) advmod(think, really) acl:relcl(Friend, think) mark(living, that) nsbj(living, he) ax(living, is) ccomp(think, living) case(land, in) neg(land, never) neg(land, never) nmod:in(living, land) pnct(tell, .)","root(,VBP) nsbj(VBP,PRP) nmod:poss(NNP,PRP$) compond(NNP,NNP) dobj(VBP,NNP) nsbj(VB,IN) advmod(VBZ,WRB) det(NN,DT) compond(NN,NNP) nsbj(VBZ,NN) advcl(VB,VBZ) nmod:poss(NN,PRP$) dobj(VBZ,NN) case(NN,IN) nmod:in(VBZ,NN) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(NN,NNP) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) acl:relcl(NNP,VB) mark(VBG,IN) nsbj(VBG,PRP) ax(VBG,VBZ) ccomp(VB,VBG) case(VBP,IN) neg(VBP,RB) neg(VBP,RB) nmod:in(VBG,VBP) pnct(VBP,VBP)","[land, I, tell, he, think, Friend, I, shows, my, ROOT, really, that, living]","[land, I, tell, he, think, Friend, I, shows, my, his, ROOT, speech, that, really, living]",9,"[I, tell, think, Friend, I, shows, my, his, ROOT, speech, that, really, living]","[I, tell, think, Friend, I, shows, my, his, ROOT, speech, that, really, living]",VBP_land PRP_I VB_tell PRP_he VBP_think NNP_Friend PRP_I VBZ_shows PRP$_my PRP$_his NN_speech IN_that RB_really VBG_living ,"[land, I, tell, he, think, Friend, I, shows, my, his, ROOT, speech, that, really, living]","[land, I, tell, he, think, Friend, I, shows, my, his, ROOT, speech, that, really, living]",VBP_land PRP_I VB_tell PRP_he VBP_think NNP_Friend PRP_I VBZ_shows PRP$_my PRP$_his NN_speech IN_that RB_really VBG_living ,"[land, I, tell, he, think, Friend, I, shows, my, his, ROOT, speech, that, really, living]",VBP_land PRP_I VB_tell PRP_he VBP_think NNP_Friend PRP_I VBZ_shows PRP$_my PRP$_his NN_speech IN_that RB_really VBG_living ,"[land, I, tell, he, think, Friend, I, shows, my, his, ROOT, speech, that, really, living]",VBP_land PRP_I VB_tell PRP_he VBP_think NNP_Friend PRP_I VBZ_shows PRP$_my PRP$_his NN_speech IN_that RB_really VBG_living ,1,2,1,0,0,0,0,0,0,0
Is it not the case that  despite what the hon. Member for Eastbourne (Mr. Gow) said earlier  the Prime Minister's Bruges approach is a solitary one and is not supported by any other European leader?,IsVBZ itPRP notRB theDT caseNN thatIN despiteIN whatWP theDT honNN MemberNNP forIN EastbourneNNP (( MrNNP GowNNP )) saidVBD earlierRBR theDT PrimeNNP MinisterNNP 'sPOS BrugesNNP approachNN isVBZ aDT solitaryJJ oneCD andCC isVBZ notRB supportedVBN byIN anyDT otherJJ EuropeanJJ leaderNN ,"root(ROOT-0, case-5) cop(case-5, Is-1) nsubj(case-5, it-2) neg(case-5, not-3) det(case-5, the-4) advmod(one-31, that-6) punct(one-31, ,-7) mark(said-19, despite-8) dobj(said-19, what-9) det(Member-12, the-10) compound(Member-12, hon.-11) nsubj(said-19, Member-12) case(Eastbourne-14, for-13) nmod:for(Member-12, Eastbourne-14) punct(Gow-17, -LRB--15) compound(Gow-17, Mr.-16) appos(Member-12, Gow-17) punct(Gow-17, -RRB--18) advcl(one-31, said-19) advmod(said-19, earlier-20) punct(one-31, ,-21) det(Minister-24, the-22) compound(Minister-24, Prime-23) nmod:poss(approach-27, Minister-24) case(Minister-24, 's-25) compound(approach-27, Bruges-26) nsubj(one-31, approach-27) nsubjpass(supported-35, approach-27) cop(one-31, is-28) det(one-31, a-29) amod(one-31, solitary-30) dobj(case-5, one-31) cc(one-31, and-32) auxpass(supported-35, is-33) neg(supported-35, not-34) dobj(case-5, supported-35) conj:and(one-31, supported-35) case(leader-40, by-36) det(leader-40, any-37) amod(leader-40, other-38) amod(leader-40, European-39) nmod:by(one-31, leader-40) punct(case-5, ?-41)",1,0,0,"root(ROOT, case) cop(case, Is) nsbj(case, it) neg(case, not) det(case, the) advmod(one, that) pnct(one, ,) mark(said, despite) dobj(said, what) det(Member, the) compond(Member, hon.) nsbj(said, Member) case(Eastborne, for) nmod:for(Member, Eastborne) pnct(Gow, ) compond(Gow, Mr.) appos(Member, Gow) pnct(Gow, ) advcl(one, said) advmod(said, earlier) pnct(one, ,) det(Minister, the) compond(Minister, Prime) nmod:poss(approach, Minister) ""case(Minister, s)"", compond(approach, Brges) nsbj(one, approach) nsbjpass(spported, approach) cop(one, is) det(one, a) amod(one, solitary) dobj(case, one) cc(one, and) axpass(spported, is) neg(spported, not) dobj(case, spported) conj:and(one, spported) case(leader, by) det(leader, any) amod(leader, other) amod(leader, Eropean) nmod:by(one, leader) pnct(case, ?)","root(,NN) cop(NN,VBZ) nsbj(NN,PRP) neg(NN,RB) det(NN,DT) advmod(CD,IN) pnct(CD,CD) mark(VBD,IN) dobj(VBD,WP) det(NNP,DT) compond(NNP,NNP) nsbj(VBD,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) advcl(CD,VBD) advmod(VBD,RBR) pnct(CD,CD) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) compond(NN,NNP) nsbj(CD,NN) nsbjpass(VBN,NN) cop(CD,VBZ) det(CD,DT) amod(CD,JJ) dobj(NN,CD) cc(CD,CC) axpass(VBN,VBZ) neg(VBN,RB) dobj(NN,VBN) conj:and(CD,VBN) case(NN,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nmod:by(CD,NN) pnct(NN,NN)","[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]","[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]",10,"[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]","[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]",RBR_earlier WP_what NNP_Eastbourne NNP_Minister CD_one NNP_Member VBD_said NNP_Gow VBN_supported NN_approach ,"[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]","[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]",RBR_earlier WP_what NNP_Eastbourne NNP_Minister CD_one NNP_Member VBD_said NNP_Gow VBN_supported NN_approach ,"[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]",RBR_earlier WP_what NNP_Eastbourne NNP_Minister CD_one NNP_Member VBD_said NNP_Gow VBN_supported NN_approach ,"[earlier, what, Eastbourne, Minister, one, Member, said, Gow, supported, approach]",RBR_earlier WP_what NNP_Eastbourne NNP_Minister CD_one NNP_Member VBD_said NNP_Gow VBN_supported NN_approach ,3,2,2,1,1,1,1,1,1,2
We do not agree with every word that every other European leader says  but we certainly have more in common with our German colleagues in pursuing the right path for Europe and for our respective countries than we shall ever have with the hon. Gentleman's party or the Labour party.,WePRP doVBP notRB agreeVB withIN everyDT wordNN thatIN everyDT otherJJ EuropeanJJ leaderNN saysVBZ butCC wePRP certainlyRB haveVBP moreRBR inIN commonJJ withIN ourPRP$ GermanJJ colleaguesNNS inIN pursuingVBG theDT rightJJ pathNN forIN EuropeNNP andCC forIN ourPRP$ respectiveJJ countriesNNS thanIN wePRP shallMD everRB haveVB withIN theDT honNN GentlemanNNP 'sPOS partyNN orCC theDT LabourNNP partyNN ,"root(ROOT-0, agree-4) nsubj(agree-4, We-1) aux(agree-4, do-2) neg(agree-4, not-3) case(word-7, with-5) det(word-7, every-6) nmod:with(agree-4, word-7) dobj(says-13, that-8) det(leader-12, every-9) amod(leader-12, other-10) amod(leader-12, European-11) nsubj(says-13, leader-12) acl:relcl(word-7, says-13) punct(agree-4, ,-14) cc(agree-4, but-15) nsubj(have-18, we-16) nsubj(have-18'', we-16) advmod(have-18, certainly-17) conj:but(agree-4, have-18) conj:but(agree-4, have-18'') conj:and(have-18, have-18'') advmod(common-21, more-19) case(common-21, in-20) nmod:in(have-18, common-21) case(colleagues-25, with-22) nmod:poss(colleagues-25, our-23) amod(colleagues-25, German-24) nmod:with(common-21, colleagues-25) mark(pursuing-27, in-26) acl(colleagues-25, pursuing-27) det(path-30, the-28) amod(path-30, right-29) dobj(pursuing-27, path-30) case(Europe-32, for-31) nmod:for(path-30, Europe-32) cc(have-18, and-33) case(countries-37, for-34) nmod:poss(countries-37, our-35) amod(countries-37, respective-36) nmod:for(have-18'', countries-37) mark(have-42, than-38) nsubj(have-42, we-39) aux(have-42, shall-40) advmod(have-42, ever-41) dep(countries-37, have-42) case(party-48, with-43) det(Gentleman-46, the-44) compound(Gentleman-46, hon.-45) nmod:poss(party-48, Gentleman-46) case(Gentleman-46, 's-47) nmod:with(have-42, party-48) cc(party-48, or-49) det(party-52, the-50) compound(party-52, Labour-51) nmod:with(have-42, party-52) conj:or(party-48, party-52) punct(agree-4, .-53)",1,0,0,"root(ROOT, agree) nsbj(agree, We) ax(agree, do) neg(agree, not) case(word, with) det(word, every) nmod:with(agree, word) dobj(says, that) det(leader, every) amod(leader, other) amod(leader, Eropean) nsbj(says, leader) acl:relcl(word, says) pnct(agree, ,) cc(agree, bt) nsbj(have, we) nsbj(have, we) advmod(have, certainly) conj:bt(agree, have) conj:bt(agree, have) conj:and(have, have) advmod(common, more) case(common, in) nmod:in(have, common) case(colleages, with) nmod:poss(colleages, or) amod(colleages, German) nmod:with(common, colleages) mark(prsing, in) acl(colleages, prsing) det(path, the) amod(path, right) dobj(prsing, path) case(Erope, for) nmod:for(path, Erope) cc(have, and) case(contries, for) nmod:poss(contries, or) amod(contries, respective) nmod:for(have, contries) mark(have, than) nsbj(have, we) ax(have, shall) advmod(have, ever) dep(contries, have) case(party, with) det(Gentleman, the) compond(Gentleman, hon.) nmod:poss(party, Gentleman) ""case(Gentleman, s)"", nmod:with(have, party) cc(party, or) det(party, the) compond(party, Labor) nmod:with(have, party) conj:or(party, party) pnct(agree, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) case(NN,IN) det(NN,DT) nmod:with(VB,NN) dobj(VBZ,IN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) nsbj(VBZ,NN) acl:relcl(NN,VBZ) pnct(VB,VB) cc(VB,CC) nsbj(VB,PRP) nsbj(VB,PRP) advmod(VB,RB) conj:bt(VB,VB) conj:bt(VB,VB) conj:and(VB,VB) advmod(JJ,RBR) case(JJ,IN) nmod:in(VB,JJ) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:with(JJ,NNS) mark(VBG,IN) acl(NNS,VBG) det(NN,DT) amod(NN,JJ) dobj(VBG,NN) case(NNP,IN) nmod:for(NN,NNP) cc(VB,CC) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:for(VB,NNS) mark(VB,IN) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) dep(NNS,VB) case(NN,IN) det(NNP,DT) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:with(VB,NN) cc(NN,CC) det(NN,DT) compond(NN,NNP) nmod:with(VB,NN) conj:or(NN,NN) pnct(VB,VB)","[or, party, have, Gentleman, party]","[or, party, have, Gentleman, party]",11,"[or, party, have, Gentleman, party]","[or, party, have, Gentleman, party]",CC_or NN_party VBP_have NNP_Gentleman NN_party ,"[or, party, have, Gentleman, party]","[or, party, have, Gentleman, party]",CC_or NN_party VBP_have NNP_Gentleman NN_party ,"[or, party, have, Gentleman, party]",CC_or NN_party VBP_have NNP_Gentleman NN_party ,"[or, party, have, Gentleman, party]",CC_or NN_party VBP_have NNP_Gentleman NN_party ,1,2,2,0,0,0,0,0,0,0
Has my right hon. Friend taken note of the various measures that the Government have already introduced  which are well ahead of those of our European friends in terms of showing our Europeanness?,HasNNP myPRP$ rightJJ honNN FriendNNP takenVBN noteNN ofIN theDT variousJJ measuresNNS thatIN theDT GovernmentNNP haveVBP alreadyRB introducedVBN whichWDT areVBP wellRB aheadRB ofIN thoseDT ofIN ourPRP$ EuropeanJJ friendsNNS inIN termsNNS ofIN showingVBG ourPRP$ EuropeannessNN ,"root(ROOT-0, Has-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) dobj(Has-1, Friend-5) amod(note-7, taken-6) dep(Friend-5, note-7) case(measures-11, of-8) det(measures-11, the-9) amod(measures-11, various-10) nmod:of(note-7, measures-11) dobj(introduced-17, that-12) det(Government-14, the-13) nsubj(introduced-17, Government-14) aux(introduced-17, have-15) advmod(introduced-17, already-16) acl:relcl(measures-11, introduced-17) punct(introduced-17, ,-18) nsubj(ahead-22, which-19) cop(ahead-22, are-20) advmod(ahead-22, well-21) dep(introduced-17, ahead-22) case(those-24, of-23) nmod:of(ahead-22, those-24) case(friends-28, of-25) nmod:poss(friends-28, our-26) amod(friends-28, European-27) nmod:of(those-24, friends-28) case(terms-30, in-29) nmod:in(ahead-22, terms-30) mark(showing-32, of-31) acl(terms-30, showing-32) nmod:poss(Europeanness-34, our-33) dobj(showing-32, Europeanness-34) punct(Has-1, ?-35)",1,0,0,"root(ROOT, Has) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) dobj(Has, Friend) amod(note, taken) dep(Friend, note) case(measres, of) det(measres, the) amod(measres, varios) nmod:of(note, measres) dobj(introdced, that) det(Government, the) nsbj(introdced, Government) ax(introdced, have) advmod(introdced, already) acl:relcl(measres, introdced) pnct(introdced, ,) nsbj(ahead, which) cop(ahead, are) advmod(ahead, well) dep(introdced, ahead) case(those, of) nmod:of(ahead, those) case(friends, of) nmod:poss(friends, or) amod(friends, Eropean) nmod:of(those, friends) case(terms, in) nmod:in(ahead, terms) mark(showing, of) acl(terms, showing) nmod:poss(Eropeanness, or) dobj(showing, Eropeanness) pnct(Has, ?)","root(,NNP) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) dobj(NNP,NNP) amod(NN,VBN) dep(NNP,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:of(NN,NNS) dobj(VBN,IN) det(NNP,DT) nsbj(VBN,NNP) ax(VBN,VBP) advmod(VBN,RB) acl:relcl(NNS,VBN) pnct(VBN,VBN) nsbj(RB,WDT) cop(RB,VBP) advmod(RB,RB) dep(VBN,RB) case(DT,IN) nmod:of(RB,DT) case(NNS,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nmod:of(DT,NNS) case(NNS,IN) nmod:in(RB,NNS) mark(VBG,IN) acl(NNS,VBG) nmod:poss(NN,PRP$) dobj(VBG,NN) pnct(NNP,NNP)","[ahead, note, Has, right, already, measures, that, Friend, my, Government, ROOT, introduced, taken]","[ahead, note, Has, already, measures, that, Friend, my, Government, ROOT, introduced, taken]",12,"[note, my, Friend, ROOT, Has, measures, taken]","[note, my, Friend, ROOT, Has, measures, taken]",RB_ahead VB_note NNP_Has RB_already NNS_measures IN_that NNP_Friend PRP$_my NNP_Government VBN_introduced VBN_taken ,"[ahead, note, Has, already, measures, that, Friend, my, Government, ROOT, introduced, taken]","[ahead, note, Has, already, measures, that, Friend, my, Government, ROOT, introduced, taken]",RB_ahead VB_note NNP_Has RB_already NNS_measures IN_that NNP_Friend PRP$_my NNP_Government VBN_introduced VBN_taken ,"[ahead, note, Has, already, measures, that, Friend, my, Government, ROOT, introduced, taken]",RB_ahead VB_note NNP_Has RB_already NNS_measures IN_that NNP_Friend PRP$_my NNP_Government VBN_introduced VBN_taken ,"[ahead, note, Has, already, measures, that, Friend, my, Government, ROOT, introduced, taken]",RB_ahead VB_note NNP_Has RB_already NNS_measures IN_that NNP_Friend PRP$_my NNP_Government VBN_introduced VBN_taken ,2,1,1,0,0,0,0,0,0,0
In particular  has she congratulated the Chancellor on introducing ecu denominated debt in the summer  an issue that was so dramatically successful that other Governments are now thinking of following suit?,InIN particularNN hasVBZ shePRP congratulatedVBD theDT ChancellorNNP onIN introducingVBG ecuNN denominatedVBD debtNN inIN theDT summerNN anDT issueNN thatWDT wasVBD soRB dramaticallyRB successfulJJ thatIN otherJJ GovernmentsNNS areVBP nowRB thinkingVBG ofIN followingVBG suitNN ,"root(ROOT-0, congratulated-6) case(particular-2, In-1) nmod:in(congratulated-6, particular-2) punct(congratulated-6, ,-3) aux(congratulated-6, has-4) nsubj(congratulated-6, she-5) det(Chancellor-8, the-7) dobj(congratulated-6, Chancellor-8) mark(introducing-10, on-9) advcl(congratulated-6, introducing-10) compound(debt-13, ecu-11) amod(debt-13, denominated-12) dobj(introducing-10, debt-13) case(summer-16, in-14) det(summer-16, the-15) nmod:in(introducing-10, summer-16) punct(congratulated-6, ,-17) det(issue-19, an-18) dobj(congratulated-6, issue-19) nsubj(successful-24, that-20) cop(successful-24, was-21) advmod(dramatically-23, so-22) advmod(successful-24, dramatically-23) acl:relcl(issue-19, successful-24) mark(thinking-30, that-25) amod(Governments-27, other-26) nsubj(thinking-30, Governments-27) aux(thinking-30, are-28) advmod(thinking-30, now-29) ccomp(successful-24, thinking-30) case(suit-33, of-31) amod(suit-33, following-32) nmod:of(thinking-30, suit-33) punct(congratulated-6, ?-34)",1,0,0,"root(ROOT, congratlated) case(particlar, In) nmod:in(congratlated, particlar) pnct(congratlated, ,) ax(congratlated, has) nsbj(congratlated, she) det(Chancellor, the) dobj(congratlated, Chancellor) mark(introdcing, on) advcl(congratlated, introdcing) compond(debt, ec) amod(debt, denominated) dobj(introdcing, debt) case(smmer, in) det(smmer, the) nmod:in(introdcing, smmer) pnct(congratlated, ,) det(isse, an) dobj(congratlated, isse) nsbj(sccessfl, that) cop(sccessfl, was) advmod(dramatically, so) advmod(sccessfl, dramatically) acl:relcl(isse, sccessfl) mark(thinking, that) amod(Governments, other) nsbj(thinking, Governments) ax(thinking, are) advmod(thinking, now) ccomp(sccessfl, thinking) case(sit, of) amod(sit, following) nmod:of(thinking, sit) pnct(congratlated, ?)","root(,VBD) case(NN,IN) nmod:in(VBD,NN) pnct(VBD,VBD) ax(VBD,VBZ) nsbj(VBD,PRP) det(NNP,DT) dobj(VBD,NNP) mark(VBG,IN) advcl(VBD,VBG) compond(NN,NN) amod(NN,VBD) dobj(VBG,NN) case(NN,IN) det(NN,DT) nmod:in(VBG,NN) pnct(VBD,VBD) det(NN,DT) dobj(VBD,NN) nsbj(JJ,IN) cop(JJ,VBD) advmod(RB,RB) advmod(JJ,RB) acl:relcl(NN,JJ) mark(VBG,IN) amod(NNS,JJ) nsbj(VBG,NNS) ax(VBG,VBP) advmod(VBG,RB) ccomp(JJ,VBG) case(NN,IN) amod(NN,VBG) nmod:of(VBG,NN) pnct(VBD,VBD)","[particular, Chancellor, congratulated, introducing, issue, ROOT, she]","[particular, Chancellor, congratulated, introducing, issue, ROOT, she]",13,"[particular, Chancellor, congratulated, introducing, issue, ROOT]","[particular, Chancellor, congratulated, introducing, issue, ROOT]",JJ_particular NNP_Chancellor VBD_congratulated VBG_introducing NN_issue PRP_she ,"[particular, Chancellor, congratulated, introducing, issue, ROOT, she]","[particular, Chancellor, congratulated, introducing, issue, ROOT, she]",JJ_particular NNP_Chancellor VBD_congratulated VBG_introducing NN_issue PRP_she ,"[particular, Chancellor, congratulated, introducing, issue, ROOT, she]",JJ_particular NNP_Chancellor VBD_congratulated VBG_introducing NN_issue PRP_she ,"[particular, Chancellor, congratulated, introducing, issue, ROOT, she]",JJ_particular NNP_Chancellor VBD_congratulated VBG_introducing NN_issue PRP_she ,2,1,2,2,1,2,2,2,2,2
My hon. Friend is perfectly correct.,MyPRP$ honNN FriendNNP isVBZ perfectlyRB correctJJ ,"root(ROOT-0, correct-6) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(correct-6, Friend-3) cop(correct-6, is-4) advmod(correct-6, perfectly-5) punct(correct-6, .-7)",1,1,0,"root(ROOT, correct) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(correct, Friend) cop(correct, is) advmod(correct, perfectly) pnct(correct, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) advmod(JJ,RB) pnct(JJ,JJ)","[My, ROOT, Friend, correct, perfectly]","[My, ROOT, Friend, correct, perfectly]",13,"[My, ROOT, Friend, correct, perfectly]",[ ],PRP$_My NNP_Friend JJ_correct RB_perfectly ,"[My, ROOT, Friend, correct, perfectly]","[My, ROOT, Friend, correct, perfectly]",PRP$_My NNP_Friend JJ_correct RB_perfectly ,"[My, ROOT, Friend, correct, perfectly]",PRP$_My NNP_Friend JJ_correct RB_perfectly ,"[My, ROOT, Friend, correct, perfectly]",PRP$_My NNP_Friend JJ_correct RB_perfectly ,1,1,1,1,1,1,1,1,1,1
The Chancellor of the Exchequer's proposals last year  earlier this year  and again at the meeting in Berlin have been fundamental in persuading a change of mind in some other Governments towards solving the problems of middle income debtors.,TheDT ChancellorNNP ofIN theDT ExchequerNNP 'sPOS proposalsNNS lastJJ yearNN earlierRBR thisDT yearNN andCC againRB atIN theDT meetingNN inIN BerlinNNP haveVBP beenVBN fundamentalJJ inIN persuadingVBG aDT changeNN ofIN mindNN inIN someDT otherJJ GovernmentsNNS towardsIN solvingVBG theDT problemsNNS ofIN middleJJ incomeNN debtorsNNS ,"root(ROOT-0, fundamental-24) det(Chancellor-2, The-1) nsubj(fundamental-24, Chancellor-2) case(proposals-7, of-3) det(Exchequer-5, the-4) nmod:poss(proposals-7, Exchequer-5) case(Exchequer-5, 's-6) nmod:of(Chancellor-2, proposals-7) amod(year-9, last-8) nmod:tmod(Chancellor-2, year-9) punct(Chancellor-2, ,-10) advmod(year-13, earlier-11) det(year-13, this-12) nmod:tmod(Chancellor-2, year-13) punct(Chancellor-2, ,-14) cc(Chancellor-2, and-15) advmod(meeting-19, again-16) case(meeting-19, at-17) det(meeting-19, the-18) conj:and(Chancellor-2, meeting-19) nsubj(fundamental-24, meeting-19) case(Berlin-21, in-20) nmod:in(meeting-19, Berlin-21) aux(fundamental-24, have-22) cop(fundamental-24, been-23) mark(persuading-26, in-25) advcl(fundamental-24, persuading-26) det(change-28, a-27) dobj(persuading-26, change-28) case(mind-30, of-29) nmod:of(change-28, mind-30) case(Governments-34, in-31) det(Governments-34, some-32) amod(Governments-34, other-33) nmod:in(persuading-26, Governments-34) mark(solving-36, towards-35) advcl(persuading-26, solving-36) det(problems-38, the-37) dobj(solving-36, problems-38) case(debtors-42, of-39) amod(debtors-42, middle-40) compound(debtors-42, income-41) nmod:of(problems-38, debtors-42) punct(fundamental-24, .-43)",1,0,0,"root(ROOT, fndamental) det(Chancellor, The) nsbj(fndamental, Chancellor) case(proposals, of) det(Excheqer, the) nmod:poss(proposals, Excheqer) ""case(Excheqer, s)"", nmod:of(Chancellor, proposals) amod(year, last) nmod:tmod(Chancellor, year) pnct(Chancellor, ,) advmod(year, earlier) det(year, this) nmod:tmod(Chancellor, year) pnct(Chancellor, ,) cc(Chancellor, and) advmod(meeting, again) case(meeting, at) det(meeting, the) conj:and(Chancellor, meeting) nsbj(fndamental, meeting) case(Berlin, in) nmod:in(meeting, Berlin) ax(fndamental, have) cop(fndamental, been) mark(persading, in) advcl(fndamental, persading) det(change, a) dobj(persading, change) case(mind, of) nmod:of(change, mind) case(Governments, in) det(Governments, some) amod(Governments, other) nmod:in(persading, Governments) mark(solving, towards) advcl(persading, solving) det(problems, the) dobj(solving, problems) case(debtors, of) amod(debtors, middle) compond(debtors, income) nmod:of(problems, debtors) pnct(fndamental, .)","root(,JJ) det(NNP,DT) nsbj(JJ,NNP) case(NNS,IN) det(NNP,DT) nmod:poss(NNS,NNP) case(NNP,POS) nmod:of(NNP,NNS) amod(NN,JJ) nmod:tmod(NNP,NN) pnct(NNP,NNP) advmod(NN,RBR) det(NN,DT) nmod:tmod(NNP,NN) pnct(NNP,NNP) cc(NNP,CC) advmod(NN,RB) case(NN,IN) det(NN,DT) conj:and(NNP,NN) nsbj(JJ,NN) case(NNP,IN) nmod:in(NN,NNP) ax(JJ,VBP) cop(JJ,VBN) mark(VBG,IN) advcl(JJ,VBG) det(NN,DT) dobj(VBG,NN) case(NN,IN) nmod:of(NN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:in(VBG,NNS) mark(VBG,IN) advcl(VBG,VBG) det(NNS,DT) dobj(VBG,NNS) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:of(NNS,NNS) pnct(JJ,JJ)","[ , year, earlier, fundamental, problems, debtors, last, and, Governments, Berlin, meeting, solving, Exchequer, change, again, Chancellor, year, persuading, ROOT, proposals]","[ , year, earlier, fundamental, problems, debtors, last, and, Governments, Berlin, meeting, solving, Exchequer, change, again, Chancellor, year, persuading, ROOT, proposals]",14,[ ],[ ],NN_year RBR_earlier JJ_fundamental NNS_problems NNS_debtors JJ_last CC_and NNP_Governments NNP_Berlin NN_meeting VBG_solving NNP_Exchequer NN_change RB_again NNP_Chancellor NN_year VBG_persuading NNS_proposals ,"[ , year, earlier, fundamental, problems, debtors, last, and, Governments, Berlin, meeting, solving, Exchequer, change, again, Chancellor, year, persuading, ROOT, proposals]","[ , year, earlier, fundamental, problems, debtors, last, and, Governments, Berlin, meeting, solving, Exchequer, change, again, Chancellor, year, persuading, ROOT, proposals]",NN_year RBR_earlier JJ_fundamental NNS_problems NNS_debtors JJ_last CC_and NNP_Governments NNP_Berlin NN_meeting VBG_solving NNP_Exchequer NN_change RB_again NNP_Chancellor NN_year VBG_persuading NNS_proposals ,"[ , year, earlier, fundamental, problems, debtors, last, and, Governments, Berlin, meeting, solving, Exchequer, change, again, Chancellor, year, persuading, ROOT, proposals]",NN_year RBR_earlier JJ_fundamental NNS_problems NNS_debtors JJ_last CC_and NNP_Governments NNP_Berlin NN_meeting VBG_solving NNP_Exchequer NN_change RB_again NNP_Chancellor NN_year VBG_persuading NNS_proposals ,"[ , year, earlier, fundamental, problems, debtors, last, and, Governments, Berlin, meeting, solving, Exchequer, change, again, Chancellor, year, persuading, ROOT, proposals]",NN_year RBR_earlier JJ_fundamental NNS_problems NNS_debtors JJ_last CC_and NNP_Governments NNP_Berlin NN_meeting VBG_solving NNP_Exchequer NN_change RB_again NNP_Chancellor NN_year VBG_persuading NNS_proposals ,2,1,2,2,1,2,2,2,2,2
All that has happened thanks to a Conservative Chancellor in Britain.,AllPDT thatDT hasVBZ happenedVBN thanksNNS toTO aDT ConservativeJJ ChancellorNNP inIN BritainNNP ,"root(ROOT-0, All-1) nsubj(happened-4, that-2) aux(happened-4, has-3) acl:relcl(All-1, happened-4) xcomp(happened-4, thanks-5) case(Chancellor-9, to-6) det(Chancellor-9, a-7) amod(Chancellor-9, Conservative-8) nmod:to(thanks-5, Chancellor-9) case(Britain-11, in-10) nmod:in(Chancellor-9, Britain-11) punct(All-1, .-12)",1,0,1,"root(ROOT, All) nsbj(happened, that) ax(happened, has) acl:relcl(All, happened) xcomp(happened, thanks) case(Chancellor, to) det(Chancellor, a) amod(Chancellor, Conservative) nmod:to(thanks, Chancellor) case(Britain, in) nmod:in(Chancellor, Britain) pnct(All, .)","root(,PDT) nsbj(VBN,DT) ax(VBN,VBZ) acl:relcl(PDT,VBN) xcomp(VBN,NNS) case(NNP,TO) det(NNP,DT) amod(NNP,JJ) nmod:to(NNS,NNP) case(NNP,IN) nmod:in(NNP,NNP) pnct(PDT,PDT)","[Chancellor, Conservative, happened, Britain, thanks]","[Chancellor, Conservative, happened, Britain, thanks]",14,"[Chancellor, Conservative, happened, Britain, thanks]","[Chancellor, Conservative, happened, Britain, thanks]",NNP_Chancellor JJ_Conservative VBD_happened NNP_Britain NNS_thanks ,"[Chancellor, Conservative, happened, Britain, thanks]","[Chancellor, Conservative, happened, Britain, thanks]",NNP_Chancellor JJ_Conservative VBD_happened NNP_Britain NNS_thanks ,"[Chancellor, Conservative, happened, Britain, thanks]",NNP_Chancellor JJ_Conservative VBD_happened NNP_Britain NNS_thanks ,"[Chancellor, Conservative, happened, Britain, thanks]",NNP_Chancellor JJ_Conservative VBD_happened NNP_Britain NNS_thanks ,1,1,1,2,1,2,0,0,0,0
As every one of those changes that the Prime Minister opposes is now entrenched in United Kingdom law through the European Communities (Amendment) Act 1986  which the right hon. Lady forced through the House of Commons on a guillotine  will the right hon. Lady now apologise to the Prime Minister and introduce legislation to repeal the European Communities (Amendment) Act?,AsIN everyDT oneCD ofIN thoseDT changesNNS thatIN theDT PrimeNNP MinisterNNP opposesVBZ isVBZ nowRB entrenchedVBN inIN UnitedNNP KingdomNNP lawNN throughIN theDT EuropeanJJ 887CommunitiesNNS (( AmendmentNNP )) ActNNP 1986CD whichWDT theDT rightNN honNN LadyNNP forcedVBD throughIN theDT HouseNNP ofIN CommonsNNPS onIN aDT guillotineNN willMD theDT rightJJ honNN LadyNNP nowRB apologiseVBZ toTO theDT PrimeNNP MinisterNNP andCC introduceVB legislationNN toTO repealVB theDT EuropeanJJ CommunitiesNNP (( AmendmentNNP )) ActNNP ,"root(ROOT-0, entrenched-14) case(one-3, As-1) det(one-3, every-2) nsubjpass(entrenched-14, one-3) case(changes-6, of-4) det(changes-6, those-5) nmod:of(one-3, changes-6) dobj(opposes-11, that-7) det(Minister-10, the-8) compound(Minister-10, Prime-9) nsubj(opposes-11, Minister-10) acl:relcl(changes-6, opposes-11) auxpass(entrenched-14, is-12) advmod(entrenched-14, now-13) case(law-18, in-15) compound(law-18, United-16) compound(law-18, Kingdom-17) nmod:in(entrenched-14, law-18) case(887Communities-22, through-19) det(887Communities-22, the-20) amod(887Communities-22, European-21) nmod:through(entrenched-14, 887Communities-22) punct(Amendment-24, -LRB--23) dep(Act-26, Amendment-24) punct(Amendment-24, -RRB--25) dep(887Communities-22, Act-26) nummod(Act-26, 1986-27) punct(Act-26, ,-28) dobj(apologise-50, which-29) det(Lady-33, the-30) amod(Lady-33, right-31) compound(Lady-33, hon.-32) nsubj(apologise-50, Lady-33) acl(Lady-33, forced-34) case(House-37, through-35) det(House-37, the-36) nmod:through(forced-34, House-37) case(Commons-39, of-38) nmod:of(House-37, Commons-39) case(guillotine-42, on-40) det(guillotine-42, a-41) nmod:on(forced-34, guillotine-42) punct(Lady-33, ,-43) aux(apologise-50, will-44) det(Lady-48, the-45) amod(Lady-48, right-46) compound(Lady-48, hon.-47) nsubj(apologise-50, Lady-48) nsubj(introduce-56, Lady-48) advmod(apologise-50, now-49) acl:relcl(Act-26, apologise-50) case(Minister-54, to-51) det(Minister-54, the-52) compound(Minister-54, Prime-53) nmod:to(apologise-50, Minister-54) cc(apologise-50, and-55) acl:relcl(Act-26, introduce-56) conj:and(apologise-50, introduce-56) dobj(introduce-56, legislation-57) mark(repeal-59, to-58) advcl(introduce-56, repeal-59) det(Communities-62, the-60) amod(Communities-62, European-61) nsubj(Act-66, Communities-62) punct(Amendment-64, -LRB--63) appos(Communities-62, Amendment-64) punct(Amendment-64, -RRB--65) xcomp(repeal-59, Act-66) punct(entrenched-14, ?-67)",1,0,0,"root(ROOT, entrenched) case(one, As) det(one, every) nsbjpass(entrenched, one) case(changes, of) det(changes, those) nmod:of(one, changes) dobj(opposes, that) det(Minister, the) compond(Minister, Prime) nsbj(opposes, Minister) acl:relcl(changes, opposes) axpass(entrenched, is) advmod(entrenched, now) case(law, in) compond(law, United) compond(law, Kingdom) nmod:in(entrenched, law) case(887Commnities, throgh) det(887Commnities, the) amod(887Commnities, Eropean) nmod:throgh(entrenched, 887Commnities) pnct(Amendment, ) dep(Act, Amendment) pnct(Amendment, ) dep(887Commnities, Act) nmmod(Act, 1986) pnct(Act, ,) dobj(apologise, which) det(Lady, the) amod(Lady, right) compond(Lady, hon.) nsbj(apologise, Lady) acl(Lady, forced) case(Hose, throgh) det(Hose, the) nmod:throgh(forced, Hose) case(Commons, of) nmod:of(Hose, Commons) case(gillotine, on) det(gillotine, a) nmod:on(forced, gillotine) pnct(Lady, ,) ax(apologise, will) det(Lady, the) amod(Lady, right) compond(Lady, hon.) nsbj(apologise, Lady) nsbj(introdce, Lady) advmod(apologise, now) acl:relcl(Act, apologise) case(Minister, to) det(Minister, the) compond(Minister, Prime) nmod:to(apologise, Minister) cc(apologise, and) acl:relcl(Act, introdce) conj:and(apologise, introdce) dobj(introdce, legislation) mark(repeal, to) advcl(introdce, repeal) det(Commnities, the) amod(Commnities, Eropean) nsbj(Act, Commnities) pnct(Amendment, ) appos(Commnities, Amendment) pnct(Amendment, ) xcomp(repeal, Act) pnct(entrenched, ?)","root(,VBN) case(CD,IN) det(CD,DT) nsbjpass(VBN,CD) case(NNS,IN) det(NNS,DT) nmod:of(CD,NNS) dobj(VBZ,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBZ,NNP) acl:relcl(NNS,VBZ) axpass(VBN,VBZ) advmod(VBN,RB) case(NN,IN) compond(NN,NNP) compond(NN,NNP) nmod:in(VBN,NN) case(NNS,IN) det(NNS,DT) amod(NNS,JJ) nmod:throgh(VBN,NNS) pnct(NNP,) dep(NNP,NNP) pnct(NNP,) dep(NNS,NNP) nmmod(NNP,CD) pnct(NNP,NNP) dobj(VBZ,WDT) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) acl(NNP,VBD) case(NNP,IN) det(NNP,DT) nmod:throgh(VBD,NNP) case(NNPS,IN) nmod:of(NNP,NNPS) case(NN,IN) det(NN,DT) nmod:on(VBD,NN) pnct(NNP,NNP) ax(VBZ,MD) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) nsbj(VB,NNP) advmod(VBZ,RB) acl:relcl(NNP,VBZ) case(NNP,TO) det(NNP,DT) compond(NNP,NNP) nmod:to(VBZ,NNP) cc(VBZ,CC) acl:relcl(NNP,VB) conj:and(VBZ,VB) dobj(VB,NN) mark(VB,TO) advcl(VB,VB) det(NNP,DT) amod(NNP,JJ) nsbj(NNP,NNP) pnct(NNP,) appos(NNP,NNP) pnct(NNP,) xcomp(VB,NNP) pnct(VBN,VBN)","[ , Lady, Communities, apologise, Minister, entrenched, forced, Lady, one, guillotine, right, Minister, that, opposes, repeal, right, House, 887Communities, changes, introduce, now, Act, legislation, and, ROOT, which, Act]","[ , Lady, Communities, apologise, Minister, entrenched, forced, Lady, one, guillotine, Minister, that, opposes, repeal, House, 887Communities, changes, introduce, now, Act, legislation, and, ROOT, which, Act]",14,"[apologise, Minister, changes, now, Act, Minister, and, which, that, opposes]","[apologise, Minister, changes, now, Act, Minister, and, which, that, opposes]",NNP_Lady NNPS_Communities VBZ_apologise NNP_Minister VBN_entrenched VBN_forced NNP_Lady CD_one NN_guillotine NNP_Minister IN_that VBZ_opposes VB_repeal NNP_House NNS_887Communities NNS_changes VB_introduce RB_now NNP_Act NN_legislation CC_and WDT_which NNP_Act ,"[ , Lady, Communities, apologise, Minister, entrenched, forced, Lady, one, guillotine, Minister, that, opposes, repeal, House, 887Communities, changes, introduce, now, Act, legislation, and, ROOT, which, Act]","[ , Lady, Communities, apologise, Minister, entrenched, forced, Lady, one, guillotine, Minister, that, opposes, repeal, House, 887Communities, changes, introduce, now, Act, legislation, and, ROOT, which, Act]",NNP_Lady NNPS_Communities VBZ_apologise NNP_Minister VBN_entrenched VBN_forced NNP_Lady CD_one NN_guillotine NNP_Minister IN_that VBZ_opposes VB_repeal NNP_House NNS_887Communities NNS_changes VB_introduce RB_now NNP_Act NN_legislation CC_and WDT_which NNP_Act ,"[ , Lady, Communities, apologise, Minister, entrenched, forced, Lady, one, guillotine, Minister, that, opposes, repeal, House, 887Communities, changes, introduce, now, Act, legislation, and, ROOT, which, Act]",NNP_Lady NNPS_Communities VBZ_apologise NNP_Minister VBN_entrenched VBN_forced NNP_Lady CD_one NN_guillotine NNP_Minister IN_that VBZ_opposes VB_repeal NNP_House NNS_887Communities NNS_changes VB_introduce RB_now NNP_Act NN_legislation CC_and WDT_which NNP_Act ,"[ , Lady, Communities, apologise, Minister, entrenched, forced, Lady, one, guillotine, Minister, that, opposes, repeal, House, 887Communities, changes, introduce, now, Act, legislation, and, ROOT, which, Act]",NNP_Lady NNPS_Communities VBZ_apologise NNP_Minister VBN_entrenched VBN_forced NNP_Lady CD_one NN_guillotine NNP_Minister IN_that VBZ_opposes VB_repeal NNP_House NNS_887Communities NNS_changes VB_introduce RB_now NNP_Act NN_legislation CC_and WDT_which NNP_Act ,2,2,2,0,0,0,2,2,2,2
Will he agree that so far all the independent evidence shows that the social fund has failed to relieve the poverty which the Government said it was designed to tackle?,WillMD hePRP agreeVB thatIN soRB farRB allPDT theDT independentJJ evidenceNN showsNNS thatIN theDT socialJJ fundNN hasVBZ failedVBN toTO relieveVB theDT povertyNN whichWDT theDT GovernmentNNP saidVBD itPRP wasVBD designedVBN toTO tackleVB ,"root(ROOT-0, agree-3) aux(agree-3, Will-1) nsubj(agree-3, he-2) mark(shows-11, that-4) advmod(far-6, so-5) advmod(evidence-10, far-6) det:predet(evidence-10, all-7) det(evidence-10, the-8) amod(evidence-10, independent-9) nsubj(shows-11, evidence-10) ccomp(agree-3, shows-11) mark(failed-17, that-12) det(fund-15, the-13) amod(fund-15, social-14) nsubj(failed-17, fund-15) aux(failed-17, has-16) ccomp(shows-11, failed-17) mark(relieve-19, to-18) xcomp(failed-17, relieve-19) det(poverty-21, the-20) dobj(relieve-19, poverty-21) dobj(said-25, which-22) det(Government-24, the-23) nsubj(said-25, Government-24) acl:relcl(poverty-21, said-25) nsubjpass(designed-28, it-26) auxpass(designed-28, was-27) ccomp(said-25, designed-28) mark(tackle-30, to-29) xcomp(designed-28, tackle-30) punct(agree-3, ?-31)",1,0,1,"root(ROOT, agree) ax(agree, Will) nsbj(agree, he) mark(shows, that) advmod(far, so) advmod(evidence, far) det:predet(evidence, all) det(evidence, the) amod(evidence, independent) nsbj(shows, evidence) ccomp(agree, shows) mark(failed, that) det(fnd, the) amod(fnd, social) nsbj(failed, fnd) ax(failed, has) ccomp(shows, failed) mark(relieve, to) xcomp(failed, relieve) det(poverty, the) dobj(relieve, poverty) dobj(said, which) det(Government, the) nsbj(said, Government) acl:relcl(poverty, said) nsbjpass(designed, it) axpass(designed, was) ccomp(said, designed) mark(tackle, to) xcomp(designed, tackle) pnct(agree, ?)","root(,VB) ax(VB,MD) nsbj(VB,PRP) mark(NNS,IN) advmod(RB,RB) advmod(NN,RB) det:predet(NN,PDT) det(NN,DT) amod(NN,JJ) nsbj(NNS,NN) ccomp(VB,NNS) mark(VBN,IN) det(NN,DT) amod(NN,JJ) nsbj(VBN,NN) ax(VBN,VBZ) ccomp(NNS,VBN) mark(VB,TO) xcomp(VBN,VB) det(NN,DT) dobj(VB,NN) dobj(VBD,WDT) det(NNP,DT) nsbj(VBD,NNP) acl:relcl(NN,VBD) nsbjpass(VBN,PRP) axpass(VBN,VBD) ccomp(VBD,VBN) mark(VB,TO) xcomp(VBN,VB) pnct(VB,VB)","[designed, shows, which, poverty, he, ROOT, agree, said, Government]","[designed, shows, which, poverty, he, ROOT, agree, said, Government]",15,"[which, poverty, said, Government, designed]","[which, poverty, said, Government, designed]",VBN_designed VBZ_shows WDT_which NN_poverty PRP_he VB_agree VBD_said NNP_Government ,"[designed, shows, which, poverty, he, ROOT, agree, said, Government]","[designed, shows, which, poverty, he, ROOT, agree, said, Government]",VBN_designed VBZ_shows WDT_which NN_poverty PRP_he VB_agree VBD_said NNP_Government ,"[designed, shows, which, poverty, he, ROOT, agree, said, Government]",VBN_designed VBZ_shows WDT_which NN_poverty PRP_he VB_agree VBD_said NNP_Government ,"[designed, shows, which, poverty, he, ROOT, agree, said, Government]",VBN_designed VBZ_shows WDT_which NN_poverty PRP_he VB_agree VBD_said NNP_Government ,2,2,2,2,1,2,2,2,2,2
I had hoped that the hon. Lady would have listened to what I said before she read out her prepared question.,IPRP hadVBD hopedVBN thatIN theDT honNN LadyNNP wouldMD haveVB listenedVBN toTO whatWP IPRP saidVBD beforeIN shePRP readVBD outRP herPRP$ preparedJJ questionNN ,"root(ROOT-0, hoped-3) nsubj(hoped-3, I-1) aux(hoped-3, had-2) mark(listened-10, that-4) det(Lady-7, the-5) compound(Lady-7, hon.-6) nsubj(listened-10, Lady-7) aux(listened-10, would-8) aux(listened-10, have-9) ccomp(hoped-3, listened-10) mark(said-14, to-11) dobj(said-14, what-12) nsubj(said-14, I-13) advcl(listened-10, said-14) mark(read-17, before-15) nsubj(read-17, she-16) advcl(said-14, read-17) compound:prt(read-17, out-18) nmod:poss(question-21, her-19) amod(question-21, prepared-20) dobj(read-17, question-21) punct(hoped-3, .-22)",1,1,0,"root(ROOT, hoped) nsbj(hoped, I) ax(hoped, had) mark(listened, that) det(Lady, the) compond(Lady, hon.) nsbj(listened, Lady) ax(listened, wold) ax(listened, have) ccomp(hoped, listened) mark(said, to) dobj(said, what) nsbj(said, I) advcl(listened, said) mark(read, before) nsbj(read, she) advcl(said, read) compond:prt(read, ot) nmod:poss(qestion, her) amod(qestion, prepared) dobj(read, qestion) pnct(hoped, .)","root(,VBN) nsbj(VBN,PRP) ax(VBN,VBD) mark(VBN,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,MD) ax(VBN,VB) ccomp(VBN,VBN) mark(VBD,TO) dobj(VBD,WP) nsbj(VBD,PRP) advcl(VBN,VBD) mark(VBD,IN) nsbj(VBD,PRP) advcl(VBD,VBD) compond:prt(VBD,RP) nmod:poss(NN,PRP$) amod(NN,JJ) dobj(VBD,NN) pnct(VBN,VBN)","[she, Lady, listened, said, question, hoped, read]","[she, question, hoped, read, prepared, listened, said, her, Lady]",3,"[she, prepared, said, question, her, read]","[she, prepared, said, question, her, read]",PRP_she NN_question VBD_hoped VBD_read VBN_prepared VBN_listened VBD_said PRP$_her NNP_Lady ,"[she, question, hoped, read, prepared, listened, said, her, Lady]","[she, question, hoped, read, prepared, listened, said, her, Lady]",PRP_she NN_question VBD_hoped VBD_read VBN_prepared VBN_listened VBD_said PRP$_her NNP_Lady ,"[she, question, hoped, read, prepared, listened, said, her, Lady]",PRP_she NN_question VBD_hoped VBD_read VBN_prepared VBN_listened VBD_said PRP$_her NNP_Lady ,"[she, question, hoped, read, prepared, listened, said, her, Lady]",PRP_she NN_question VBD_hoped VBD_read VBN_prepared VBN_listened VBD_said PRP$_her NNP_Lady ,1,2,2,2,1,2,2,2,2,2
I shall continue  as the Government must and should  to monitor the situation.,IPRP shallMD continueVB asIN theDT GovernmentNNP mustMD andCC shouldMD toTO monitorVB theDT situationNN ,"root(ROOT-0, continue-3) nsubj(continue-3, I-1) aux(continue-3, shall-2) punct(continue-3, ,-4) mark(must-8, as-5) det(Government-7, the-6) nsubj(must-8, Government-7) advcl(continue-3, must-8) cc(must-8, and-9) advcl(continue-3, should-10) conj:and(must-8, should-10) punct(must-8, ,-11) mark(monitor-13, to-12) xcomp(must-8, monitor-13) det(situation-15, the-14) dobj(monitor-13, situation-15) punct(continue-3, .-16)",1,0,0,"root(ROOT, contine) nsbj(contine, I) ax(contine, shall) pnct(contine, ,) mark(mst, as) det(Government, the) nsbj(mst, Government) advcl(contine, mst) cc(mst, and) advcl(contine, shold) conj:and(mst, shold) pnct(mst, ,) mark(monitor, to) xcomp(mst, monitor) det(sitation, the) dobj(monitor, sitation) pnct(contine, .)","root(,VB) nsbj(VB,PRP) ax(VB,MD) pnct(VB,VB) mark(MD,IN) det(NNP,DT) nsbj(MD,NNP) advcl(VB,MD) cc(MD,CC) advcl(VB,MD) conj:and(MD,MD) pnct(MD,MD) mark(VB,TO) xcomp(MD,VB) det(NN,DT) dobj(VB,NN) pnct(VB,VB)","[and, monitor, must, Government, continue]","[and, monitor, must, Government, continue]",4,"[and, monitor, must, Government, continue]","[and, monitor, must, Government, continue]",CC_and VB_monitor MD_must NNP_Government VB_continue ,"[and, monitor, must, Government, continue]","[and, monitor, must, Government, continue]",CC_and VB_monitor MD_must NNP_Government VB_continue ,"[and, monitor, must, Government, continue]",CC_and VB_monitor MD_must NNP_Government VB_continue ,"[and, monitor, must, Government, continue]",CC_and VB_monitor MD_must NNP_Government VB_continue ,1,1,2,0,0,0,0,0,0,0
I welcome a large part of my right hon. Friend's reply.,IPRP welcomeVBP aDT largeJJ partNN ofIN myPRP$ rightJJ honNN FriendNNP 'sPOS replyNN ,"root(ROOT-0, welcome-2) nsubj(welcome-2, I-1) det(part-5, a-3) amod(part-5, large-4) dobj(welcome-2, part-5) case(reply-12, of-6) nmod:poss(Friend-10, my-7) amod(Friend-10, right-8) compound(Friend-10, hon.-9) nmod:poss(reply-12, Friend-10) case(Friend-10, 's-11) nmod:of(part-5, reply-12) punct(welcome-2, .-13)",1,1,0,"root(ROOT, welcome) nsbj(welcome, I) det(part, a) amod(part, large) dobj(welcome, part) case(reply, of) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nmod:poss(reply, Friend) ""case(Friend, s)"", nmod:of(part, reply) pnct(welcome, .)","root(,VBP) nsbj(VBP,PRP) det(NN,DT) amod(NN,JJ) dobj(VBP,NN) case(NN,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) pnct(VBP,VBP)","[right, Friend, reply, part, my]","[Friend, reply, part, my]",4,"[Friend, reply, part, my]","[Friend, reply, part, my]",NNP_Friend NN_reply NN_part PRP$_my ,"[Friend, reply, part, my]","[Friend, reply, part, my]",NNP_Friend NN_reply NN_part PRP$_my ,"[Friend, reply, part, my]",NNP_Friend NN_reply NN_part PRP$_my ,"[Friend, reply, part, my]",NNP_Friend NN_reply NN_part PRP$_my ,1,1,1,0,0,0,0,0,0,0
My hon. Friend is right to remind the House that we announced in the uprating statement the allocation for 1989 90  which was confirmed in the autumn statement and in the recent public expenditure White Paper.,MyPRP$ honNN FriendNNP isVBZ rightJJ toTO remindVB theDT HouseNNP thatIN wePRP announcedVBD inIN theDT upratingJJ statementNN theDT allocationNN forIN 1989CD 90CD whichWDT wasVBD confirmedVBN inIN theDT autumnNN statementNN andCC inIN theDT recentJJ publicJJ expenditureNN WhiteNNP PaperNNP ,"root(ROOT-0, right-5) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(right-5, Friend-3) cop(right-5, is-4) mark(remind-7, to-6) xcomp(right-5, remind-7) det(House-9, the-8) dobj(remind-7, House-9) mark(announced-12, that-10) nsubj(announced-12, we-11) ccomp(remind-7, announced-12) case(statement-16, in-13) det(statement-16, the-14) amod(statement-16, uprating-15) nmod:in(announced-12, statement-16) det(allocation-18, the-17) dep(statement-16, allocation-18) case(90-21, for-19) compound(90-21, 1989-20) nmod:for(allocation-18, 90-21) punct(90-21, ,-22) nsubjpass(confirmed-25, which-23) nsubjpass(confirmed-25'', which-23) auxpass(confirmed-25, was-24) acl:relcl(90-21, confirmed-25) acl:relcl(90-21, confirmed-25'') conj:and(confirmed-25, confirmed-25'') case(statement-29, in-26) det(statement-29, the-27) compound(statement-29, autumn-28) nmod:in(confirmed-25, statement-29) cc(confirmed-25, and-30) case(Paper-37, in-31) det(Paper-37, the-32) amod(Paper-37, recent-33) amod(Paper-37, public-34) compound(Paper-37, expenditure-35) compound(Paper-37, White-36) nmod:in(confirmed-25'', Paper-37) punct(right-5, .-38)",1,0,0,"root(ROOT, right) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(right, Friend) cop(right, is) mark(remind, to) xcomp(right, remind) det(Hose, the) dobj(remind, Hose) mark(annonced, that) nsbj(annonced, we) ccomp(remind, annonced) case(statement, in) det(statement, the) amod(statement, prating) nmod:in(annonced, statement) det(allocation, the) dep(statement, allocation) case(90, for) compond(90, 1989) nmod:for(allocation, 90) pnct(90, ,) nsbjpass(confirmed, which) nsbjpass(confirmed, which) axpass(confirmed, was) acl:relcl(90, confirmed) acl:relcl(90, confirmed) conj:and(confirmed, confirmed) case(statement, in) det(statement, the) compond(statement, atmn) nmod:in(confirmed, statement) cc(confirmed, and) case(Paper, in) det(Paper, the) amod(Paper, recent) amod(Paper, pblic) compond(Paper, expenditre) compond(Paper, White) nmod:in(confirmed, Paper) pnct(right, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) det(NNP,DT) dobj(VB,NNP) mark(VBD,IN) nsbj(VBD,PRP) ccomp(VB,VBD) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VBD,NN) det(NN,DT) dep(NN,NN) case(CD,IN) compond(CD,CD) nmod:for(NN,CD) pnct(CD,CD) nsbjpass(VBN,WDT) nsbjpass(VBN,WDT) axpass(VBN,VBD) acl:relcl(CD,VBN) acl:relcl(CD,VBN) conj:and(VBN,VBN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:in(VBN,NN) cc(VBN,CC) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) amod(NNP,JJ) compond(NNP,NN) compond(NNP,NNP) nmod:in(VBN,NNP) pnct(JJ,JJ)","[My, ROOT, right, Friend, remind]","[My, ROOT, right, Friend, remind]",5,"[My, ROOT, right, Friend, remind]",[ ],PRP$_My JJ_right NNP_Friend VBP_remind ,"[My, ROOT, right, Friend, remind]","[My, ROOT, right, Friend, remind]",PRP$_My JJ_right NNP_Friend VBP_remind ,"[My, ROOT, right, Friend, remind]",PRP$_My JJ_right NNP_Friend VBP_remind ,"[My, ROOT, right, Friend, remind]",PRP$_My JJ_right NNP_Friend VBP_remind ,1,1,1,1,1,1,1,1,1,1
My hon. Friend is right to remind me that  because it is a discretionary fund  there are many examples of local expenditure that all sides of the House would welcome.,MyPRP$ honNN FriendNNP isVBZ rightJJ toTO remindVB mePRP thatIN becauseIN itPRP isVBZ aDT discretionaryJJ fundNN thereEX areVBP manyJJ examplesNNS ofIN localJJ expenditureNN thatIN allDT sidesNNS ofIN theDT HouseNNP wouldMD welcomeVB ,"root(ROOT-0, right-5) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(right-5, Friend-3) cop(right-5, is-4) mark(remind-7, to-6) xcomp(right-5, remind-7) dobj(remind-7, me-8) mark(are-19, that-9) punct(are-19, ,-10) mark(fund-16, because-11) nsubj(fund-16, it-12) cop(fund-16, is-13) det(fund-16, a-14) amod(fund-16, discretionary-15) advcl(are-19, fund-16) punct(are-19, ,-17) expl(are-19, there-18) ccomp(remind-7, are-19) amod(examples-21, many-20) nsubj(are-19, examples-21) case(expenditure-24, of-22) amod(expenditure-24, local-23) nmod:of(examples-21, expenditure-24) mark(welcome-32, that-25) det(sides-27, all-26) nsubj(welcome-32, sides-27) case(House-30, of-28) det(House-30, the-29) nmod:of(sides-27, House-30) aux(welcome-32, would-31) acl:relcl(examples-21, welcome-32) punct(right-5, .-33)",1,0,0,"root(ROOT, right) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(right, Friend) cop(right, is) mark(remind, to) xcomp(right, remind) dobj(remind, me) mark(are, that) pnct(are, ,) mark(fnd, becase) nsbj(fnd, it) cop(fnd, is) det(fnd, a) amod(fnd, discretionary) advcl(are, fnd) pnct(are, ,) expl(are, there) ccomp(remind, are) amod(examples, many) nsbj(are, examples) case(expenditre, of) amod(expenditre, local) nmod:of(examples, expenditre) mark(welcome, that) det(sides, all) nsbj(welcome, sides) case(Hose, of) det(Hose, the) nmod:of(sides, Hose) ax(welcome, wold) acl:relcl(examples, welcome) pnct(right, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,PRP) mark(VBP,IN) pnct(VBP,VBP) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) det(NN,DT) amod(NN,JJ) advcl(VBP,NN) pnct(VBP,VBP) expl(VBP,EX) ccomp(VB,VBP) amod(NNS,JJ) nsbj(VBP,NNS) case(NN,IN) amod(NN,JJ) nmod:of(NNS,NN) mark(VB,IN) det(NNS,DT) nsbj(VB,NNS) case(NNP,IN) det(NNP,DT) nmod:of(NNS,NNP) ax(VB,MD) acl:relcl(NNS,VB) pnct(JJ,JJ)","[My, ROOT, right, Friend, remind]","[My, ROOT, right, Friend, remind]",6,"[My, ROOT, right, Friend, remind]",[ ],PRP$_My JJ_right NNP_Friend VBP_remind ,"[My, ROOT, right, Friend, remind]","[My, ROOT, right, Friend, remind]",PRP$_My JJ_right NNP_Friend VBP_remind ,"[My, ROOT, right, Friend, remind]",PRP$_My JJ_right NNP_Friend VBP_remind ,"[My, ROOT, right, Friend, remind]",PRP$_My JJ_right NNP_Friend VBP_remind ,1,1,1,1,1,1,1,1,1,1
Does he accept that those improvements are needed now  and by 1992 they will be essential  or will he follow the Government's usual policy of assuming that if they are in a minority of one they must be right?,DoesVBZ hePRP acceptVB thatIN thoseDT improvementsNNS areVBP neededVBN nowRB andCC byIN 1992CD theyPRP willMD beVB essentialJJ orCC willMD hePRP followVB theDT GovernmentNNP 'sPOS usualJJ policyNN ofIN assumingVBG thatIN ifIN theyPRP areVBP inIN aDT minorityNN ofIN oneCD theyPRP mustMD beVB rightJJ ,"root(ROOT-0, accept-3) aux(accept-3, Does-1) nsubj(accept-3, he-2) mark(needed-8, that-4) det(improvements-6, those-5) nsubjpass(needed-8, improvements-6) auxpass(needed-8, are-7) ccomp(accept-3, needed-8) advmod(needed-8, now-9) punct(needed-8, ,-10) cc(needed-8, and-11) case(1992-13, by-12) ccomp(accept-3, 1992-13) conj:and(needed-8, 1992-13) nsubj(essential-17, they-14) aux(essential-17, will-15) cop(essential-17, be-16) acl:relcl(1992-13, essential-17) punct(1992-13, ,-18) cc(1992-13, or-19) aux(follow-22, will-20) nsubj(follow-22, he-21) conj:and(needed-8, follow-22) conj:or(1992-13, follow-22) det(Government-24, the-23) nmod:poss(policy-27, Government-24) case(Government-24, 's-25) amod(policy-27, usual-26) dobj(follow-22, policy-27) mark(assuming-29, of-28) acl(policy-27, assuming-29) dobj(assuming-29, that-30) mark(minority-36, if-31) nsubj(minority-36, they-32) cop(minority-36, are-33) case(minority-36, in-34) det(minority-36, a-35) dep(that-30, minority-36) case(one-38, of-37) nmod:of(minority-36, one-38) nsubj(right-42, they-39) aux(right-42, must-40) cop(right-42, be-41) acl:relcl(one-38, right-42) punct(minority-36, ?-43)",1,0,0,"root(ROOT, accept) ax(accept, Does) nsbj(accept, he) mark(needed, that) det(improvements, those) nsbjpass(needed, improvements) axpass(needed, are) ccomp(accept, needed) advmod(needed, now) pnct(needed, ,) cc(needed, and) case(1992, by) ccomp(accept, 1992) conj:and(needed, 1992) nsbj(essential, they) ax(essential, will) cop(essential, be) acl:relcl(1992, essential) pnct(1992, ,) cc(1992, or) ax(follow, will) nsbj(follow, he) conj:and(needed, follow) conj:or(1992, follow) det(Government, the) nmod:poss(policy, Government) ""case(Government, s)"", amod(policy, sal) dobj(follow, policy) mark(assming, of) acl(policy, assming) dobj(assming, that) mark(minority, if) nsbj(minority, they) cop(minority, are) case(minority, in) det(minority, a) dep(that, minority) case(one, of) nmod:of(minority, one) nsbj(right, they) ax(right, mst) cop(right, be) acl:relcl(one, right) pnct(minority, ?)","root(,VB) ax(VB,VBZ) nsbj(VB,PRP) mark(VBN,IN) det(NNS,DT) nsbjpass(VBN,NNS) axpass(VBN,VBP) ccomp(VB,VBN) advmod(VBN,RB) pnct(VBN,VBN) cc(VBN,CC) case(CD,IN) ccomp(VB,CD) conj:and(VBN,CD) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) acl:relcl(CD,JJ) pnct(CD,CD) cc(CD,CC) ax(VB,MD) nsbj(VB,PRP) conj:and(VBN,VB) conj:or(CD,VB) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,JJ) dobj(VB,NN) mark(VBG,IN) acl(NN,VBG) dobj(VBG,IN) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBP) case(NN,IN) det(NN,DT) dep(IN,NN) case(CD,IN) nmod:of(NN,CD) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) acl:relcl(CD,JJ) pnct(NN,NN)","[he, accept, needed, follow, usual, assuming, he, ROOT, policy, Government, 1992]","[he, accept, needed, follow, usual, assuming, he, ROOT, policy, Government, 1992]",3,"[policy, assuming, Government, usual, follow]","[policy, assuming, Government, usual, follow]",PRP_he VBD_accept VBN_needed VBP_follow JJ_usual VBG_assuming PRP_he NN_policy NNP_Government CD_1992 ,"[he, accept, needed, follow, usual, assuming, he, ROOT, policy, Government, 1992]","[he, accept, needed, follow, usual, assuming, he, ROOT, policy, Government, 1992]",PRP_he VBD_accept VBN_needed VBP_follow JJ_usual VBG_assuming PRP_he NN_policy NNP_Government CD_1992 ,"[he, accept, needed, follow, usual, assuming, he, ROOT, policy, Government, 1992]",PRP_he VBD_accept VBN_needed VBP_follow JJ_usual VBG_assuming PRP_he NN_policy NNP_Government CD_1992 ,"[he, accept, needed, follow, usual, assuming, he, ROOT, policy, Government, 1992]",PRP_he VBD_accept VBN_needed VBP_follow JJ_usual VBG_assuming PRP_he NN_policy NNP_Government CD_1992 ,2,2,1,0,0,0,0,0,0,0
I do not know for whom Dr. Seal speaks he certainly does not speak for the British Government or the British people.,IPRP doVBP notRB knowVB forIN whomWP DrNNP SealNNP speaksVBZ hePRP certainlyRB doesVBZ notRB speakVB forIN theDT BritishJJ GovernmentNNP orCC theDT BritishJJ peopleNNS ,"root(ROOT-0, know-4) nsubj(know-4, I-1) aux(know-4, do-2) neg(know-4, not-3) mark(speaks-9, for-5) dobj(speaks-9, whom-6) compound(Seal-8, Dr.-7) nsubj(speaks-9, Seal-8) advcl(know-4, speaks-9) nsubj(speak-14, he-10) advmod(speak-14, certainly-11) aux(speak-14, does-12) neg(speak-14, not-13) ccomp(speaks-9, speak-14) case(Government-18, for-15) det(Government-18, the-16) amod(Government-18, British-17) nmod:for(speak-14, Government-18) cc(Government-18, or-19) det(people-22, the-20) amod(people-22, British-21) nmod:for(speak-14, people-22) conj:or(Government-18, people-22) punct(know-4, .-23)",1,1,1,"root(ROOT, know) nsbj(know, I) ax(know, do) neg(know, not) mark(speaks, for) dobj(speaks, whom) compond(Seal, Dr.) nsbj(speaks, Seal) advcl(know, speaks) nsbj(speak, he) advmod(speak, certainly) ax(speak, does) neg(speak, not) ccomp(speaks, speak) case(Government, for) det(Government, the) amod(Government, British) nmod:for(speak, Government) cc(Government, or) det(people, the) amod(people, British) nmod:for(speak, people) conj:or(Government, people) pnct(know, .)","root(,VB) nsbj(VB,PRP) ax(VB,VBP) neg(VB,RB) mark(VBZ,IN) dobj(VBZ,WP) compond(NNP,NNP) nsbj(VBZ,NNP) advcl(VB,VBZ) nsbj(VB,PRP) advmod(VB,RB) ax(VB,VBZ) neg(VB,RB) ccomp(VBZ,VB) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:for(VB,NNP) cc(NNP,CC) det(NNS,DT) amod(NNS,JJ) nmod:for(VB,NNS) conj:or(NNP,NNS) pnct(VB,VB)","[certainly, British, he, British, people, speak, Government, not, speaks, or]","[certainly, British, he, British, people, speak, Government, not, speaks, or]",3,"[certainly, British, British, people, speak, Government, not, speaks, or]","[certainly, British, British, people, speak, Government, not, speaks, or]",RB_certainly JJ_British PRP_he JJ_British NNS_people NN_speak NNP_Government RB_not VBZ_speaks CC_or ,"[certainly, British, he, British, people, speak, Government, not, speaks, or]","[certainly, British, he, British, people, speak, Government, not, speaks, or]",RB_certainly JJ_British PRP_he JJ_British NNS_people NN_speak NNP_Government RB_not VBZ_speaks CC_or ,"[certainly, British, he, British, people, speak, Government, not, speaks, or]",RB_certainly JJ_British PRP_he JJ_British NNS_people NN_speak NNP_Government RB_not VBZ_speaks CC_or ,"[certainly, British, he, British, people, speak, Government, not, speaks, or]",RB_certainly JJ_British PRP_he JJ_British NNS_people NN_speak NNP_Government RB_not VBZ_speaks CC_or ,3,2,2,2,1,2,0,0,0,2
Unemployment in Britain has fallen for 33 consecutive months  and the number of jobs created between June 1983 and June 1987 the last period for which records are available is larger than that in the whole of the rest of the Community put together  for exactly the reasons that my hon. Friend has given.,UnemploymentNN inIN BritainNNP hasVBZ fallenVBN forIN 33CD consecutiveJJ monthsNNS andCC theDT numberNN ofIN jobsNNS createdVBN betweenIN JuneNNP 1983CD andCC JuneNNP 1987CD theDT lastJJ periodNN forIN whichWDT recordsNNS areVBP availableJJ isVBZ largerJJR thanIN thatDT inIN theDT wholeNN ofIN theDT restNN ofIN theDT CommunityNNP putVBP togetherRB forIN exactlyRB theDT reasonsNNS thatWDT myPRP$ honNN FriendNNP hasVBZ givenVBN ,"root(ROOT-0, fallen-5) nsubj(fallen-5, Unemployment-1) case(Britain-3, in-2) nmod:in(Unemployment-1, Britain-3) aux(fallen-5, has-4) case(months-9, for-6) nummod(months-9, 33-7) amod(months-9, consecutive-8) nmod:for(fallen-5, months-9) punct(fallen-5, ,-10) cc(fallen-5, and-11) det(number-13, the-12) nsubj(larger-32, number-13) case(jobs-15, of-14) nmod:of(number-13, jobs-15) acl(jobs-15, created-16) case(June-18, between-17) nmod:between(created-16, June-18) nummod(June-18, 1983-19) cc(June-18, and-20) nmod:between(created-16, June-21) conj:and(June-18, June-21) nummod(June-21, 1987-22) det(period-25, the-23) amod(period-25, last-24) nsubj(available-30, period-25) case(records-28, for-26) det(records-28, which-27) nmod:for(period-25, records-28) cop(available-30, are-29) acl:relcl(June-21, available-30) cop(larger-32, is-31) conj:and(fallen-5, larger-32) case(that-34, than-33) nmod:than(larger-32, that-34) case(whole-37, in-35) det(whole-37, the-36) nmod:in(that-34, whole-37) case(rest-40, of-38) det(rest-40, the-39) nmod:of(whole-37, rest-40) case(Community-43, of-41) det(Community-43, the-42) nmod:of(rest-40, Community-43) acl(whole-37, put-44) advmod(put-44, together-45) punct(larger-32, ,-46) case(reasons-50, for-47) advmod(reasons-50, exactly-48) det(reasons-50, the-49) nmod:for(larger-32, reasons-50) dobj(given-56, that-51) nmod:poss(Friend-54, my-52) compound(Friend-54, hon.-53) nsubj(given-56, Friend-54) aux(given-56, has-55) acl:relcl(reasons-50, given-56) punct(fallen-5, .-57)",1,0,0,"root(ROOT, fallen) nsbj(fallen, Unemployment) case(Britain, in) nmod:in(Unemployment, Britain) ax(fallen, has) case(months, for) nmmod(months, 33) amod(months, consective) nmod:for(fallen, months) pnct(fallen, ,) cc(fallen, and) det(nmber, the) nsbj(larger, nmber) case(jobs, of) nmod:of(nmber, jobs) acl(jobs, created) case(Jne, between) nmod:between(created, Jne) nmmod(Jne, 1983) cc(Jne, and) nmod:between(created, Jne) conj:and(Jne, Jne) nmmod(Jne, 1987) det(period, the) amod(period, last) nsbj(available, period) case(records, for) det(records, which) nmod:for(period, records) cop(available, are) acl:relcl(Jne, available) cop(larger, is) conj:and(fallen, larger) case(that, than) nmod:than(larger, that) case(whole, in) det(whole, the) nmod:in(that, whole) case(rest, of) det(rest, the) nmod:of(whole, rest) case(Commnity, of) det(Commnity, the) nmod:of(rest, Commnity) acl(whole, pt) advmod(pt, together) pnct(larger, ,) case(reasons, for) advmod(reasons, exactly) det(reasons, the) nmod:for(larger, reasons) dobj(given, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(given, Friend) ax(given, has) acl:relcl(reasons, given) pnct(fallen, .)","root(,VBN) nsbj(VBN,NN) case(NNP,IN) nmod:in(NN,NNP) ax(VBN,VBZ) case(NNS,IN) nmmod(NNS,CD) amod(NNS,JJ) nmod:for(VBN,NNS) pnct(VBN,VBN) cc(VBN,CC) det(NN,DT) nsbj(JJR,NN) case(NNS,IN) nmod:of(NN,NNS) acl(NNS,VBN) case(NNP,IN) nmod:between(VBN,NNP) nmmod(NNP,CD) cc(NNP,CC) nmod:between(VBN,NNP) conj:and(NNP,NNP) nmmod(NNP,CD) det(NN,DT) amod(NN,JJ) nsbj(JJ,NN) case(NNS,IN) det(NNS,WDT) nmod:for(NN,NNS) cop(JJ,VBP) acl:relcl(NNP,JJ) cop(JJR,VBZ) conj:and(VBN,JJR) case(WDT,IN) nmod:than(JJR,WDT) case(NN,IN) det(NN,DT) nmod:in(WDT,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) acl(NN,VBP) advmod(VBP,RB) pnct(JJR,JJR) case(NNS,IN) advmod(NNS,RB) det(NNS,DT) nmod:for(JJR,NNS) dobj(VBN,WDT) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) acl:relcl(NNS,VBN) pnct(VBN,VBN)","[given, my, Friend, reasons, that]","[given, my, Friend, reasons, that]",8,[ ],[ ],VBN_given PRP$_my NNP_Friend NNS_reasons IN_that ,"[given, my, Friend, reasons, that]","[given, my, Friend, reasons, that]",VBN_given PRP$_my NNP_Friend NNS_reasons IN_that ,"[given, my, Friend, reasons, that]",VBN_given PRP$_my NNP_Friend NNS_reasons IN_that ,"[given, my, Friend, reasons, that]",VBN_given PRP$_my NNP_Friend NNS_reasons IN_that ,3,1,2,0,0,0,0,0,0,0
The right hon. Gentleman will recollect that many provisions in that document provide for substantial increases in the representation of organised trade unions on the boards of companies an object that the Labour Government were trying to escape 20 years ago.,TheDT rightJJ honNN GentlemanNNP willMD recollectVB thatIN manyJJ provisionsNNS inIN thatDT documentNN provideNN forIN substantialJJ increasesNNS inIN theDT representationNN ofIN organisedJJ tradeNN unionsNNS onIN theDT boardsNNS ofIN companiesNNS anDT objectNN thatIN theDT LabourJJ GovernmentNNP wereVBD tryingVBG toTO escapeVB 20CD yearsNNS agoRB ,"root(ROOT-0, recollect-6) det(Gentleman-4, The-1) amod(Gentleman-4, right-2) compound(Gentleman-4, hon.-3) nsubj(recollect-6, Gentleman-4) aux(recollect-6, will-5) mark(provide-13, that-7) amod(provisions-9, many-8) nsubj(provide-13, provisions-9) case(document-12, in-10) det(document-12, that-11) nmod:in(provisions-9, document-12) ccomp(recollect-6, provide-13) case(increases-16, for-14) amod(increases-16, substantial-15) nmod:for(provide-13, increases-16) case(representation-19, in-17) det(representation-19, the-18) nmod:in(increases-16, representation-19) case(unions-23, of-20) amod(unions-23, organised-21) compound(unions-23, trade-22) nmod:of(representation-19, unions-23) case(boards-26, on-24) det(boards-26, the-25) nmod:on(representation-19, boards-26) case(companies-28, of-27) nmod:of(boards-26, companies-28) det(object-30, an-29) dep(companies-28, object-30) mark(trying-36, that-31) det(Government-34, the-32) compound(Government-34, Labour-33) nsubj(trying-36, Government-34) aux(trying-36, were-35) ccomp(object-30, trying-36) mark(escape-38, to-37) xcomp(trying-36, escape-38) nummod(years-40, 20-39) nmod:npmod(ago-41, years-40) advmod(escape-38, ago-41) punct(recollect-6, .-42)",1,1,0,"root(ROOT, recollect) det(Gentleman, The) amod(Gentleman, right) compond(Gentleman, hon.) nsbj(recollect, Gentleman) ax(recollect, will) mark(provide, that) amod(provisions, many) nsbj(provide, provisions) case(docment, in) det(docment, that) nmod:in(provisions, docment) ccomp(recollect, provide) case(increases, for) amod(increases, sbstantial) nmod:for(provide, increases) case(representation, in) det(representation, the) nmod:in(increases, representation) case(nions, of) amod(nions, organised) compond(nions, trade) nmod:of(representation, nions) case(boards, on) det(boards, the) nmod:on(representation, boards) case(companies, of) nmod:of(boards, companies) det(object, an) dep(companies, object) mark(trying, that) det(Government, the) compond(Government, Labor) nsbj(trying, Government) ax(trying, were) ccomp(object, trying) mark(escape, to) xcomp(trying, escape) nmmod(years, 20) nmod:npmod(ago, years) advmod(escape, ago) pnct(recollect, .)","root(,VB) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) nsbj(VB,NNP) ax(VB,MD) mark(NN,IN) amod(NNS,JJ) nsbj(NN,NNS) case(NN,IN) det(NN,IN) nmod:in(NNS,NN) ccomp(VB,NN) case(NNS,IN) amod(NNS,JJ) nmod:for(NN,NNS) case(NN,IN) det(NN,DT) nmod:in(NNS,NN) case(NNS,IN) amod(NNS,JJ) compond(NNS,NN) nmod:of(NN,NNS) case(NNS,IN) det(NNS,DT) nmod:on(NN,NNS) case(NNS,IN) nmod:of(NNS,NNS) det(NN,DT) dep(NNS,NN) mark(VBG,IN) det(NNP,DT) compond(NNP,JJ) nsbj(VBG,NNP) ax(VBG,VBD) ccomp(NN,VBG) mark(VB,TO) xcomp(VBG,VB) nmmod(NNS,CD) nmod:npmod(RB,NNS) advmod(VB,RB) pnct(VB,VB)","[right, provide, Government, trying, recollect, Gentleman, ROOT, escape, object]","[trying, provide, Government, recollect, ROOT, Gentleman, escape, object]",14,[ ],[ ],VBG_trying VB_provide NNP_Government VB_recollect NNP_Gentleman VB_escape NN_object ,"[trying, provide, Government, recollect, ROOT, Gentleman, escape, object]","[trying, provide, Government, recollect, ROOT, Gentleman, escape, object]",VBG_trying VB_provide NNP_Government VB_recollect NNP_Gentleman VB_escape NN_object ,"[trying, provide, Government, recollect, ROOT, Gentleman, escape, object]",VBG_trying VB_provide NNP_Government VB_recollect NNP_Gentleman VB_escape NN_object ,"[trying, provide, Government, recollect, ROOT, Gentleman, escape, object]",VBG_trying VB_provide NNP_Government VB_recollect NNP_Gentleman VB_escape NN_object ,2,2,2,2,1,2,2,2,2,2
It would be entirely foolish for us to accept such prescriptions and to follow the right hon. Gentleman in the opposite direction.,ItPRP wouldMD beVB entirelyRB foolishJJ forIN usPRP toTO acceptVB suchJJ prescriptionsNNS andCC toTO followVB theDT rightNN honNN GentlemanNNP inIN theDT oppositeJJ directionNN ,"root(ROOT-0, foolish-5) nsubj(foolish-5, It-1) aux(foolish-5, would-2) cop(foolish-5, be-3) advmod(foolish-5, entirely-4) mark(accept-9, for-6) nsubj(accept-9, us-7) nsubj(follow-14, us-7) mark(accept-9, to-8) advcl(foolish-5, accept-9) amod(prescriptions-11, such-10) dobj(accept-9, prescriptions-11) cc(accept-9, and-12) mark(follow-14, to-13) advcl(foolish-5, follow-14) conj:and(accept-9, follow-14) det(Gentleman-18, the-15) amod(Gentleman-18, right-16) compound(Gentleman-18, hon.-17) dobj(follow-14, Gentleman-18) case(direction-22, in-19) det(direction-22, the-20) amod(direction-22, opposite-21) nmod:in(follow-14, direction-22) punct(foolish-5, .-23)",1,0,1,"root(ROOT, foolish) nsbj(foolish, It) ax(foolish, wold) cop(foolish, be) advmod(foolish, entirely) mark(accept, for) nsbj(accept, s) nsbj(follow, s) mark(accept, to) advcl(foolish, accept) amod(prescriptions, sch) dobj(accept, prescriptions) cc(accept, and) mark(follow, to) advcl(foolish, follow) conj:and(accept, follow) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) dobj(follow, Gentleman) case(direction, in) det(direction, the) amod(direction, opposite) nmod:in(follow, direction) pnct(foolish, .)","root(,JJ) nsbj(JJ,PRP) ax(JJ,MD) cop(JJ,VB) advmod(JJ,RB) mark(VB,IN) nsbj(VB,PRP) nsbj(VB,PRP) mark(VB,TO) advcl(JJ,VB) amod(NNS,JJ) dobj(VB,NNS) cc(VB,CC) mark(VB,TO) advcl(JJ,VB) conj:and(VB,VB) det(NNP,DT) amod(NNP,NN) compond(NNP,NNP) dobj(VB,NNP) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:in(VB,NN) pnct(JJ,JJ)","[Gentleman, foolish, us, right, direction, follow]","[us, Gentleman, direction, follow, foolish]",16,"[us, Gentleman, direction, follow, foolish]","[us, Gentleman, direction, follow, foolish]",PRP_us NNP_Gentleman NN_direction VBP_follow JJ_foolish ,"[us, Gentleman, direction, follow, foolish]","[us, Gentleman, direction, follow, foolish]",PRP_us NNP_Gentleman NN_direction VBP_follow JJ_foolish ,"[us, Gentleman, direction, follow, foolish]",PRP_us NNP_Gentleman NN_direction VBP_follow JJ_foolish ,"[us, Gentleman, direction, follow, foolish]",PRP_us NNP_Gentleman NN_direction VBP_follow JJ_foolish ,1,2,1,2,1,2,2,2,2,1
My hon. Friend is right to draw attention to our enthusiastic support for the completion of the single market  and to our pleasure that this is now broadly following a liberal approach of the sort that we can strongly support.,MyPRP$ honNN FriendNNP isVBZ rightJJ toTO drawVB attentionNN toTO ourPRP$ enthusiasticJJ supportNN forIN theDT completionNN ofIN theDT singleJJ marketNN andCC toTO ourPRP$ pleasureNN thatIN thisDT isVBZ nowRB broadlyRB followingVBG aDT liberalJJ approachNN ofIN theDT sortNN thatIN wePRP canMD stronglyVB supportVB ,"root(ROOT-0, right-5) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubj(right-5, Friend-3) cop(right-5, is-4) mark(draw-7, to-6) xcomp(right-5, draw-7) dobj(draw-7, attention-8) case(support-12, to-9) nmod:poss(support-12, our-10) amod(support-12, enthusiastic-11) nmod:to(draw-7, support-12) case(completion-15, for-13) det(completion-15, the-14) nmod:for(support-12, completion-15) case(market-19, of-16) det(market-19, the-17) amod(market-19, single-18) nmod:of(completion-15, market-19) punct(right-5, ,-20) cc(right-5, and-21) case(pleasure-24, to-22) nmod:poss(pleasure-24, our-23) conj:and(right-5, pleasure-24) mark(approach-33, that-25) nsubj(approach-33, this-26) cop(approach-33, is-27) advmod(broadly-29, now-28) advmod(approach-33, broadly-29) case(approach-33, following-30) det(approach-33, a-31) amod(approach-33, liberal-32) ccomp(pleasure-24, approach-33) case(sort-36, of-34) det(sort-36, the-35) nmod:of(approach-33, sort-36) dobj(support-41, that-37) nsubj(support-41, we-38) aux(support-41, can-39) advmod(support-41, strongly-40) ccomp(approach-33, support-41) punct(right-5, .-42)",1,0,0,"root(ROOT, right) nmod:poss(Friend, My) compond(Friend, hon.) nsbj(right, Friend) cop(right, is) mark(draw, to) xcomp(right, draw) dobj(draw, attention) case(spport, to) nmod:poss(spport, or) amod(spport, enthsiastic) nmod:to(draw, spport) case(completion, for) det(completion, the) nmod:for(spport, completion) case(market, of) det(market, the) amod(market, single) nmod:of(completion, market) pnct(right, ,) cc(right, and) case(pleasre, to) nmod:poss(pleasre, or) conj:and(right, pleasre) mark(approach, that) nsbj(approach, this) cop(approach, is) advmod(broadly, now) advmod(approach, broadly) case(approach, following) det(approach, a) amod(approach, liberal) ccomp(pleasre, approach) case(sort, of) det(sort, the) nmod:of(approach, sort) dobj(spport, that) nsbj(spport, we) ax(spport, can) advmod(spport, strongly) ccomp(approach, spport) pnct(right, .)","root(,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) cop(JJ,VBZ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,NN) case(VB,TO) nmod:poss(VB,PRP$) amod(VB,JJ) nmod:to(VB,VB) case(NN,IN) det(NN,DT) nmod:for(VB,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) pnct(JJ,JJ) cc(JJ,CC) case(NN,TO) nmod:poss(NN,PRP$) conj:and(JJ,NN) mark(NN,IN) nsbj(NN,DT) cop(NN,VBZ) advmod(RB,RB) advmod(NN,RB) case(NN,VBG) det(NN,DT) amod(NN,JJ) ccomp(NN,NN) case(NN,IN) det(NN,DT) nmod:of(NN,NN) dobj(VB,IN) nsbj(VB,PRP) ax(VB,MD) advmod(VB,VB) ccomp(NN,VB) pnct(JJ,JJ)","[My, Friend, ROOT, draw, and, right]","[My, Friend, ROOT, draw, and, right]",16,"[My, Friend, ROOT, draw, and, right]",[ ],PRP$_My NNP_Friend VB_draw CC_and JJ_right ,"[My, Friend, ROOT, draw, and, right]","[My, Friend, ROOT, draw, and, right]",PRP$_My NNP_Friend VB_draw CC_and JJ_right ,"[My, Friend, ROOT, draw, and, right]",PRP$_My NNP_Friend VB_draw CC_and JJ_right ,"[My, Friend, ROOT, draw, and, right]",PRP$_My NNP_Friend VB_draw CC_and JJ_right ,1,1,1,1,1,1,1,1,1,1
Following the Government's enlightened decision not to sell the Hawk trainer aircraft to Iraq  have they taken the opportunity to follow this issue up in the European Council  with a view to trying to ensure that the Iraqis do not get the Alpha jet as a substitute?,FollowingVBG theDT GovernmentNNP 'sPOS enlightenedVBN decisionNN notRB toTO sellVB theDT HawkNNP trainerNN aircraftNN toTO IraqNNP haveVBP theyPRP takenVBN theDT opportunityNN toTO followVB thisDT issueNN upRB inIN theDT EuropeanJJ CouncilNNP withIN aDT viewNN toTO tryingVBG toTO ensureVB thatIN theDT IraqisNNP doVBP notRB getVB theDT AlphaNNP jetNN asIN aDT substituteNN ,"root(ROOT-0, taken-19) advcl(taken-19, Following-1) det(Government-3, the-2) nmod:poss(decision-6, Government-3) case(Government-3, 's-4) amod(decision-6, enlightened-5) dobj(Following-1, decision-6) neg(sell-9, not-7) mark(sell-9, to-8) acl(decision-6, sell-9) det(aircraft-13, the-10) compound(aircraft-13, Hawk-11) compound(aircraft-13, trainer-12) dobj(sell-9, aircraft-13) case(Iraq-15, to-14) nmod:to(sell-9, Iraq-15) punct(taken-19, ,-16) aux(taken-19, have-17) nsubj(taken-19, they-18) det(opportunity-21, the-20) dobj(taken-19, opportunity-21) mark(follow-23, to-22) acl(opportunity-21, follow-23) det(issue-25, this-24) dobj(follow-23, issue-25) compound:prt(follow-23, up-26) case(Council-30, in-27) det(Council-30, the-28) amod(Council-30, European-29) nmod:in(follow-23, Council-30) punct(taken-19, ,-31) case(view-34, with-32) det(view-34, a-33) nmod:with(taken-19, view-34) mark(trying-36, to-35) acl(view-34, trying-36) mark(ensure-38, to-37) xcomp(trying-36, ensure-38) mark(get-44, that-39) det(Iraqis-41, the-40) nsubj(get-44, Iraqis-41) aux(get-44, do-42) neg(get-44, not-43) ccomp(ensure-38, get-44) det(jet-47, the-45) compound(jet-47, Alpha-46) dobj(get-44, jet-47) case(substitute-50, as-48) det(substitute-50, a-49) nmod:as(get-44, substitute-50) punct(taken-19, ?-51)",1,0,0,"root(ROOT, taken) advcl(taken, Following) det(Government, the) nmod:poss(decision, Government) ""case(Government, s)"", amod(decision, enlightened) dobj(Following, decision) neg(sell, not) mark(sell, to) acl(decision, sell) det(aircraft, the) compond(aircraft, Hawk) compond(aircraft, trainer) dobj(sell, aircraft) case(Iraq, to) nmod:to(sell, Iraq) pnct(taken, ,) ax(taken, have) nsbj(taken, they) det(opportnity, the) dobj(taken, opportnity) mark(follow, to) acl(opportnity, follow) det(isse, this) dobj(follow, isse) compond:prt(follow, p) case(Concil, in) det(Concil, the) amod(Concil, Eropean) nmod:in(follow, Concil) pnct(taken, ,) case(view, with) det(view, a) nmod:with(taken, view) mark(trying, to) acl(view, trying) mark(ensre, to) xcomp(trying, ensre) mark(get, that) det(Iraqis, the) nsbj(get, Iraqis) ax(get, do) neg(get, not) ccomp(ensre, get) det(jet, the) compond(jet, Alpha) dobj(get, jet) case(sbstitte, as) det(sbstitte, a) nmod:as(get, sbstitte) pnct(taken, ?)","root(,VBN) advcl(VBN,VBG) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) amod(NN,VBN) dobj(VBG,NN) neg(VB,RB) mark(VB,TO) acl(NN,VB) det(NN,DT) compond(NN,NNP) compond(NN,NN) dobj(VB,NN) case(NNP,TO) nmod:to(VB,NNP) pnct(VBN,VBN) ax(VBN,VBP) nsbj(VBN,PRP) det(NN,DT) dobj(VBN,NN) mark(VB,TO) acl(NN,VB) det(NN,DT) dobj(VB,NN) compond:prt(VB,RB) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:in(VB,NNP) pnct(VBN,VBN) case(NN,IN) det(NN,DT) nmod:with(VBN,NN) mark(VBG,TO) acl(NN,VBG) mark(VB,TO) xcomp(VBG,VB) mark(VB,IN) det(NNP,DT) nsbj(VB,NNP) ax(VB,VBP) neg(VB,RB) ccomp(VB,VB) det(NN,DT) compond(NN,NNP) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:as(VB,NN) pnct(VBN,VBN)","[Following, Government, enlightened, sell, decision]","[Following, Government, enlightened, sell, decision]",4,"[Following, Government, enlightened, sell, decision]","[Following, Government, enlightened, sell, decision]",VBG_Following NNP_Government VBN_enlightened VB_sell NN_decision ,"[Following, Government, enlightened, sell, decision]","[Following, Government, enlightened, sell, decision]",VBG_Following NNP_Government VBN_enlightened VB_sell NN_decision ,"[Following, Government, enlightened, sell, decision]",VBG_Following NNP_Government VBN_enlightened VB_sell NN_decision ,"[Following, Government, enlightened, sell, decision]",VBG_Following NNP_Government VBN_enlightened VB_sell NN_decision ,2,1,2,0,0,0,0,0,0,0
His predecessor  the right hon. Member for Wallasey (Mrs. Chalker)  was ditched because she showed a slight glimmer of independence of mind.,HisPRP$ predecessorNN theDT rightJJ honNN MemberNNP forIN WallaseyNNP (( MrsNNP ChalkerNNP )) wasVBD ditchedVBN becauseIN shePRP showedVBD aDT slightJJ glimmerNN ofIN independenceNN ofIN mindNN ,"root(ROOT-0, ditched-16) nmod:poss(predecessor-2, His-1) nsubjpass(ditched-16, predecessor-2) punct(predecessor-2, ,-3) det(Member-7, the-4) amod(Member-7, right-5) compound(Member-7, hon.-6) appos(predecessor-2, Member-7) case(Wallasey-9, for-8) nmod:for(Member-7, Wallasey-9) punct(Chalker-12, -LRB--10) compound(Chalker-12, Mrs.-11) appos(Member-7, Chalker-12) punct(Chalker-12, -RRB--13) punct(predecessor-2, ,-14) auxpass(ditched-16, was-15) mark(showed-19, because-17) nsubj(showed-19, she-18) advcl(ditched-16, showed-19) det(glimmer-22, a-20) amod(glimmer-22, slight-21) dobj(showed-19, glimmer-22) case(independence-24, of-23) nmod:of(glimmer-22, independence-24) case(mind-26, of-25) nmod:of(independence-24, mind-26) punct(ditched-16, .-27)",1,0,0,"root(ROOT, ditched) nmod:poss(predecessor, His) nsbjpass(ditched, predecessor) pnct(predecessor, ,) det(Member, the) amod(Member, right) compond(Member, hon.) appos(predecessor, Member) case(Wallasey, for) nmod:for(Member, Wallasey) pnct(Chalker, ) compond(Chalker, Mrs.) appos(Member, Chalker) pnct(Chalker, ) pnct(predecessor, ,) axpass(ditched, was) mark(showed, becase) nsbj(showed, she) advcl(ditched, showed) det(glimmer, a) amod(glimmer, slight) dobj(showed, glimmer) case(independence, of) nmod:of(glimmer, independence) case(mind, of) nmod:of(independence, mind) pnct(ditched, .)","root(,VBN) nmod:poss(NN,PRP$) nsbjpass(VBN,NN) pnct(NN,NN) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) appos(NN,NNP) case(NNP,IN) nmod:for(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) pnct(NN,NN) axpass(VBN,VBD) mark(VBD,IN) nsbj(VBD,PRP) advcl(VBN,VBD) det(NN,DT) amod(NN,JJ) dobj(VBD,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) nmod:of(NN,NN) pnct(VBN,VBN)","[glimmer, Wallasey, Member, right, showed, His, ditched, Chalker, predecessor, she]","[glimmer, Wallasey, Member, showed, His, ditched, Chalker, predecessor, she]",5,"[glimmer, Wallasey, Member, showed, His, ditched, Chalker, predecessor, she]","[glimmer, Wallasey, Member, showed, His, ditched, Chalker, predecessor, she]",NN_glimmer NNP_Wallasey NNP_Member VBD_showed PRP$_His VBN_ditched NNP_Chalker NN_predecessor PRP_she ,"[glimmer, Wallasey, Member, showed, His, ditched, Chalker, predecessor, she]","[glimmer, Wallasey, Member, showed, His, ditched, Chalker, predecessor, she]",NN_glimmer NNP_Wallasey NNP_Member VBD_showed PRP$_His VBN_ditched NNP_Chalker NN_predecessor PRP_she ,"[glimmer, Wallasey, Member, showed, His, ditched, Chalker, predecessor, she]",NN_glimmer NNP_Wallasey NNP_Member VBD_showed PRP$_His VBN_ditched NNP_Chalker NN_predecessor PRP_she ,"[glimmer, Wallasey, Member, showed, His, ditched, Chalker, predecessor, she]",NN_glimmer NNP_Wallasey NNP_Member VBD_showed PRP$_His VBN_ditched NNP_Chalker NN_predecessor PRP_she ,1,2,1,1,1,1,1,1,1,1
It seems clear from his career that he is in no such danger.,ItPRP seemsVBZ clearJJ fromIN hisPRP$ careerNN thatIN hePRP isVBZ inIN noDT suchJJ dangerNN ,"root(ROOT-0, seems-2) nsubj(seems-2, It-1) xcomp(seems-2, clear-3) case(career-6, from-4) nmod:poss(career-6, his-5) nmod:from(clear-3, career-6) mark(danger-13, that-7) nsubj(danger-13, he-8) cop(danger-13, is-9) case(danger-13, in-10) neg(danger-13, no-11) amod(danger-13, such-12) ccomp(seems-2, danger-13) punct(seems-2, .-14)",1,0,0,"root(ROOT, seems) nsbj(seems, It) xcomp(seems, clear) case(career, from) nmod:poss(career, his) nmod:from(clear, career) mark(danger, that) nsbj(danger, he) cop(danger, is) case(danger, in) neg(danger, no) amod(danger, sch) ccomp(seems, danger) pnct(seems, .)","root(,VBZ) nsbj(VBZ,PRP) xcomp(VBZ,JJ) case(NN,IN) nmod:poss(NN,PRP$) nmod:from(JJ,NN) mark(NN,IN) nsbj(NN,PRP) cop(NN,VBZ) case(NN,IN) neg(NN,DT) amod(NN,JJ) ccomp(VBZ,NN) pnct(VBZ,VBZ)","[such, no, he, danger, seems]","[danger, such, career, no, he, clear, seems, his]",9,"[danger, such, career, no, he, clear, seems, his]","[career, clear, his]",NN_danger JJ_such NN_career DT_no PRP_he JJ_clear VBZ_seems PRP$_his ,"[danger, such, career, no, he, clear, seems, his]","[danger, such, career, no, he, clear, seems, his]",NN_danger JJ_such NN_career DT_no PRP_he JJ_clear VBZ_seems PRP$_his ,"[danger, such, career, no, he, clear, seems, his]",NN_danger JJ_such NN_career DT_no PRP_he JJ_clear VBZ_seems PRP$_his ,"[danger, such, career, no, he, clear, seems, his]",NN_danger JJ_such NN_career DT_no PRP_he JJ_clear VBZ_seems PRP$_his ,1,2,2,2,1,2,2,2,2,2
Why is it  according to today's newspapers  that when even all the other Right wing champions of the social charter seem willing to accommodate the foot dragging views of the British Government  we will still not agree to the charter?,WhyWRB isVBZ itPRP accordingVBG toTO todayNN 'sPOS newspapersNNS thatIN whenWRB evenRB allPDT theDT otherJJ RightNNP wingVBG championsNNS ofIN theDT socialJJ charterNN seemVBP willingJJ toTO accommodateVB theDT footNN draggingVBG viewsNNS ofIN theDT BritishJJ GovernmentNNP wePRP willMD stillRB notRB agreeVB toTO theDT charterNN ,"root(ROOT-0, newspapers-9) nsubj(newspapers-9, Why-1) cop(newspapers-9, is-2) nsubj(is-2, it-3) punct(is-2, ,-4) case(newspapers-9, according-5) mwe(according-5, to-6) nmod:poss(newspapers-9, today-7) case(today-7, 's-8) punct(newspapers-9, ,-10) mark(agree-41, that-11) advmod(seem-24, when-12) advmod(champions-19, even-13) det:predet(champions-19, all-14) det(champions-19, the-15) amod(champions-19, other-16) compound(champions-19, Right-17) compound(champions-19, wing-18) nsubj(seem-24, champions-19) case(charter-23, of-20) det(charter-23, the-21) amod(charter-23, social-22) nmod:of(champions-19, charter-23) advcl(agree-41, seem-24) xcomp(seem-24, willing-25) mark(accommodate-27, to-26) xcomp(willing-25, accommodate-27) det(foot-29, the-28) dobj(accommodate-27, foot-29) acl(foot-29, dragging-30) dobj(dragging-30, views-31) case(Government-35, of-32) det(Government-35, the-33) amod(Government-35, British-34) nmod:of(views-31, Government-35) punct(agree-41, ,-36) nsubj(agree-41, we-37) aux(agree-41, will-38) advmod(agree-41, still-39) neg(agree-41, not-40) ccomp(newspapers-9, agree-41) case(charter-44, to-42) det(charter-44, the-43) nmod:to(agree-41, charter-44) punct(newspapers-9, ?-45)",1,0,0,"root(ROOT, newspapers) nsbj(newspapers, Why) cop(newspapers, is) nsbj(is, it) pnct(is, ,) case(newspapers, according) mwe(according, to) nmod:poss(newspapers, today) ""case(today, s)"", pnct(newspapers, ,) mark(agree, that) advmod(seem, when) advmod(champions, even) det:predet(champions, all) det(champions, the) amod(champions, other) compond(champions, Right) compond(champions, wing) nsbj(seem, champions) case(charter, of) det(charter, the) amod(charter, social) nmod:of(champions, charter) advcl(agree, seem) xcomp(seem, willing) mark(accommodate, to) xcomp(willing, accommodate) det(foot, the) dobj(accommodate, foot) acl(foot, dragging) dobj(dragging, views) case(Government, of) det(Government, the) amod(Government, British) nmod:of(views, Government) pnct(agree, ,) nsbj(agree, we) ax(agree, will) advmod(agree, still) neg(agree, not) ccomp(newspapers, agree) case(charter, to) det(charter, the) nmod:to(agree, charter) pnct(newspapers, ?)","root(,NNS) nsbj(NNS,WRB) cop(NNS,VBZ) nsbj(VBZ,PRP) pnct(VBZ,VBZ) case(NNS,VBG) mwe(VBG,TO) nmod:poss(NNS,NN) case(NN,POS) pnct(NNS,NNS) mark(VB,IN) advmod(VBP,WRB) advmod(NNS,RB) det:predet(NNS,PDT) det(NNS,DT) amod(NNS,JJ) compond(NNS,NNP) compond(NNS,VBG) nsbj(VBP,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) advcl(VB,VBP) xcomp(VBP,JJ) mark(VB,TO) xcomp(JJ,VB) det(NN,DT) dobj(VB,NN) acl(NN,VBG) dobj(VBG,NNS) case(NNP,IN) det(NNP,DT) amod(NNP,JJ) nmod:of(NNS,NNP) pnct(VB,VB) nsbj(VB,PRP) ax(VB,MD) advmod(VB,RB) neg(VB,RB) ccomp(NNS,VB) case(NN,TO) det(NN,DT) nmod:to(VB,NN) pnct(NNS,NNS)","[Government, British, dragging, views]","[Government, British, dragging, views]",9,"[Government, British, dragging, views]","[Government, British, dragging, views]",NNP_Government JJ_British VBG_dragging NNS_views ,"[Government, British, dragging, views]","[Government, British, dragging, views]",NNP_Government JJ_British VBG_dragging NNS_views ,"[Government, British, dragging, views]",NNP_Government JJ_British VBG_dragging NNS_views ,"[Government, British, dragging, views]",NNP_Government JJ_British VBG_dragging NNS_views ,3,2,2,2,1,2,2,2,2,2
The hon. Member must not be too fulsome in his compliments.,TheDT honJJ MemberNNP mustMD notRB beVB tooRB fulsomeJJ inIN hisPRP$ complimentsNNS ,"root(ROOT-0, fulsome-8) det(Member-3, The-1) compound(Member-3, hon.-2) nsubj(fulsome-8, Member-3) aux(fulsome-8, must-4) neg(fulsome-8, not-5) cop(fulsome-8, be-6) advmod(fulsome-8, too-7) case(compliments-11, in-9) nmod:poss(compliments-11, his-10) nmod:in(fulsome-8, compliments-11) punct(fulsome-8, .-12)",1,1,0,"root(ROOT, flsome) det(Member, The) compond(Member, hon.) nsbj(flsome, Member) ax(flsome, mst) neg(flsome, not) cop(flsome, be) advmod(flsome, too) case(compliments, in) nmod:poss(compliments, his) nmod:in(flsome, compliments) pnct(flsome, .)","root(,JJ) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) ax(JJ,MD) neg(JJ,RB) cop(JJ,VB) advmod(JJ,RB) case(NNS,IN) nmod:poss(NNS,PRP$) nmod:in(JJ,NNS) pnct(JJ,JJ)","[not, Member, ROOT, too, compliments, fulsome]","[not, Member, ROOT, his, too, compliments, fulsome]",9,"[his, compliments, fulsome]","[his, compliments, fulsome]",RB_not NNP_Member PRP$_his RB_too NNS_compliments JJ_fulsome ,"[not, Member, ROOT, his, too, compliments, fulsome]","[not, Member, ROOT, his, too, compliments, fulsome]",RB_not NNP_Member PRP$_his RB_too NNS_compliments JJ_fulsome ,"[not, Member, ROOT, his, too, compliments, fulsome]",RB_not NNP_Member PRP$_his RB_too NNS_compliments JJ_fulsome ,"[not, Member, ROOT, his, too, compliments, fulsome]",RB_not NNP_Member PRP$_his RB_too NNS_compliments JJ_fulsome ,1,2,2,2,1,2,0,0,0,2
My hon. Friend may not have read it as carefully as others have.,MyPRP$ honNN FriendNNP mayMD notRB haveVB readVBN itPRP asRB carefullyRB asIN othersNNS haveVBP ,"root(ROOT-0, read-7) nmod:poss(Friend-3, My-1) compound(Friend-3, hon.-2) nsubjpass(read-7, Friend-3) aux(read-7, may-4) neg(read-7, not-5) aux(read-7, have-6) dobj(read-7, it-8) mark(have-13, as-9) advmod(have-13, carefully-10) mark(have-13, as-11) nsubj(have-13, others-12) advcl(read-7, have-13) punct(read-7, .-14)",1,0,0,"root(ROOT, read) nmod:poss(Friend, My) compond(Friend, hon.) nsbjpass(read, Friend) ax(read, may) neg(read, not) ax(read, have) dobj(read, it) mark(have, as) advmod(have, careflly) mark(have, as) nsbj(have, others) advcl(read, have) pnct(read, .)","root(,VBN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbjpass(VBN,NNP) ax(VBN,MD) neg(VBN,RB) ax(VBN,VBP) dobj(VBN,PRP) mark(VBP,IN) advmod(VBP,RB) mark(VBP,IN) nsbj(VBP,NNS) advcl(VBN,VBP) pnct(VBN,VBN)","[My, not, ROOT, have, read, it, Friend]","[My, not, ROOT, have, read, it, Friend]",11,[ ],[ ],PRP$_My RB_not VBP_have VBD_read PRP_it NNP_Friend ,"[My, not, ROOT, have, read, it, Friend]","[My, not, ROOT, have, read, it, Friend]",PRP$_My RB_not VBP_have VBD_read PRP_it NNP_Friend ,"[My, not, ROOT, have, read, it, Friend]",PRP$_My RB_not VBP_have VBD_read PRP_it NNP_Friend ,"[My, not, ROOT, have, read, it, Friend]",PRP$_My RB_not VBP_have VBD_read PRP_it NNP_Friend ,2,2,2,2,1,2,0,0,0,2
I am not sure whether the hon. Gentleman has read the important new statement on his party's defence policy  which is accompanied by the statement that The Labour leadership is anxious to avoid supporters being stampeded into demands for deep cuts in defence.,IPRP amVBP notRB sureJJ whetherIN theDT honNN GentlemanNNP hasVBZ readVBN theDT importantJJ newJJ statementNN onIN hisPRP$ partyNN 'sPOS defenceNN policyNN whichWDT isVBZ accompaniedVBN byIN theDT statementNN thatIN TheDT LabourNNP leadershipNN isVBZ anxiousJJ toTO avoidVB supportersNNS beingVBG stampededVBN intoIN demandsNNS forIN deepJJ cutsNNS inIN defenceNN ,"root(ROOT-0, sure-4) nsubj(sure-4, I-1) cop(sure-4, am-2) neg(sure-4, not-3) mark(read-10, whether-5) det(Gentleman-8, the-6) compound(Gentleman-8, hon.-7) nsubj(read-10, Gentleman-8) aux(read-10, has-9) ccomp(sure-4, read-10) det(statement-14, the-11) amod(statement-14, important-12) amod(statement-14, new-13) dobj(read-10, statement-14) case(policy-20, on-15) nmod:poss(party-17, his-16) nmod:poss(policy-20, party-17) case(party-17, 's-18) compound(policy-20, defence-19) nmod:on(read-10, policy-20) punct(policy-20, ,-21) nsubjpass(accompanied-24, which-22) auxpass(accompanied-24, is-23) acl:relcl(policy-20, accompanied-24) case(statement-27, by-25) det(statement-27, the-26) nmod:agent(accompanied-24, statement-27) mark(anxious-33, that-28) det(leadership-31, The-29) compound(leadership-31, Labour-30) nsubj(anxious-33, leadership-31) cop(anxious-33, is-32) ccomp(statement-27, anxious-33) mark(avoid-35, to-34) xcomp(anxious-33, avoid-35) dobj(avoid-35, supporters-36) auxpass(stampeded-38, being-37) acl(supporters-36, stampeded-38) case(demands-40, into-39) nmod:into(stampeded-38, demands-40) case(cuts-43, for-41) amod(cuts-43, deep-42) nmod:for(demands-40, cuts-43) case(defence-45, in-44) nmod:in(cuts-43, defence-45) punct(sure-4, .-46)",1,0,0,"root(ROOT, sre) nsbj(sre, I) cop(sre, am) neg(sre, not) mark(read, whether) det(Gentleman, the) compond(Gentleman, hon.) nsbj(read, Gentleman) ax(read, has) ccomp(sre, read) det(statement, the) amod(statement, important) amod(statement, new) dobj(read, statement) case(policy, on) nmod:poss(party, his) nmod:poss(policy, party) ""case(party, s)"", compond(policy, defence) nmod:on(read, policy) pnct(policy, ,) nsbjpass(accompanied, which) axpass(accompanied, is) acl:relcl(policy, accompanied) case(statement, by) det(statement, the) nmod:agent(accompanied, statement) mark(anxios, that) det(leadership, The) compond(leadership, Labor) nsbj(anxios, leadership) cop(anxios, is) ccomp(statement, anxios) mark(avoid, to) xcomp(anxios, avoid) dobj(avoid, spporters) axpass(stampeded, being) acl(spporters, stampeded) case(demands, into) nmod:into(stampeded, demands) case(cts, for) amod(cts, deep) nmod:for(demands, cts) case(defence, in) nmod:in(cts, defence) pnct(sre, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBP) neg(JJ,RB) mark(VBN,IN) det(NNP,DT) compond(NNP,NNP) nsbj(VBN,NNP) ax(VBN,VBZ) ccomp(JJ,VBN) det(NN,DT) amod(NN,JJ) amod(NN,JJ) dobj(VBN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:poss(NN,NN) case(NN,POS) compond(NN,NN) nmod:on(VBN,NN) pnct(NN,NN) nsbjpass(VBN,WDT) axpass(VBN,VBZ) acl:relcl(NN,VBN) case(NN,IN) det(NN,DT) nmod:agent(VBN,NN) mark(JJ,IN) det(NN,DT) compond(NN,NNP) nsbj(JJ,NN) cop(JJ,VBZ) ccomp(NN,JJ) mark(VB,TO) xcomp(JJ,VB) dobj(VB,NNS) axpass(VBN,VBG) acl(NNS,VBN) case(NNS,IN) nmod:into(VBN,NNS) case(NNS,IN) amod(NNS,JJ) nmod:for(NNS,NNS) case(NN,IN) nmod:in(NNS,NN) pnct(JJ,JJ)","[Gentleman, anxious, read, sure, statement, policy, leadership]","[read, party, his, Gentleman, anxious, sure, statement, policy, leadership]",12,"[anxious, party, his, policy, leadership]","[anxious, party, his, policy, leadership]",VBD_read NN_party PRP$_his NNP_Gentleman JJ_anxious RB_sure NN_statement NN_policy NN_leadership ,"[read, party, his, Gentleman, anxious, sure, statement, policy, leadership]","[read, party, his, Gentleman, anxious, sure, statement, policy, leadership]",VBD_read NN_party PRP$_his NNP_Gentleman JJ_anxious RB_sure NN_statement NN_policy NN_leadership ,"[read, party, his, Gentleman, anxious, sure, statement, policy, leadership]",VBD_read NN_party PRP$_his NNP_Gentleman JJ_anxious RB_sure NN_statement NN_policy NN_leadership ,"[read, party, his, Gentleman, anxious, sure, statement, policy, leadership]",VBD_read NN_party PRP$_his NNP_Gentleman JJ_anxious RB_sure NN_statement NN_policy NN_leadership ,2,2,2,2,1,2,2,2,2,2
That is the policy of the Labour spokesmen they have decided that my right hon. Friend the Prime Minister and other Conservative Members are right.,ThatDT isVBZ theDT policyNN ofIN theDT LabourNNP spokesmenNNS theyPRP haveVBP decidedVBN thatIN myPRP$ rightJJ honNN FriendNNP theDT PrimeNNP MinisterNNP andCC otherJJ ConservativeJJ MembersNNS areVBP rightJJ ,"root(ROOT-0, policy-4) nsubj(policy-4, That-1) cop(policy-4, is-2) det(policy-4, the-3) case(spokesmen-8, of-5) det(spokesmen-8, the-6) compound(spokesmen-8, Labour-7) nmod:of(policy-4, spokesmen-8) nsubj(decided-11, they-9) aux(decided-11, have-10) acl:relcl(spokesmen-8, decided-11) mark(right-25, that-12) nmod:poss(Friend-16, my-13) amod(Friend-16, right-14) compound(Friend-16, hon.-15) nsubj(right-25, Friend-16) det(Minister-19, the-17) compound(Minister-19, Prime-18) nsubj(right-25, Minister-19) cc(Minister-19, and-20) amod(Members-23, other-21) amod(Members-23, Conservative-22) conj:and(Minister-19, Members-23) nsubj(right-25, Members-23) cop(right-25, are-24) ccomp(decided-11, right-25) punct(policy-4, .-26)",1,0,0,"root(ROOT, policy) nsbj(policy, That) cop(policy, is) det(policy, the) case(spokesmen, of) det(spokesmen, the) compond(spokesmen, Labor) nmod:of(policy, spokesmen) nsbj(decided, they) ax(decided, have) acl:relcl(spokesmen, decided) mark(right, that) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(right, Friend) det(Minister, the) compond(Minister, Prime) nsbj(right, Minister) cc(Minister, and) amod(Members, other) amod(Members, Conservative) conj:and(Minister, Members) nsbj(right, Members) cop(right, are) ccomp(decided, right) pnct(policy, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) case(NNS,IN) det(NNS,DT) compond(NNS,NNP) nmod:of(NN,NNS) nsbj(VBN,PRP) ax(VBN,VBP) acl:relcl(NNS,VBN) mark(JJ,IN) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(JJ,NNP) det(NNP,DT) compond(NNP,NNP) nsbj(JJ,NNP) cc(NNP,CC) amod(NNS,JJ) amod(NNS,JJ) conj:and(NNP,NNS) nsbj(JJ,NNS) cop(JJ,VBP) ccomp(VBN,JJ) pnct(NN,NN)","[Members, other, Friend, Conservative, my, and, Minister, right, spokesmen, right, policy, decided]","[Members, other, Friend, Conservative, my, and, Minister, right, spokesmen, policy, decided]",4,"[Members, other, Friend, Conservative, my, and, Minister, right, spokesmen, policy, decided]","[right, Members, other, spokesmen, Conservative, policy, decided]",NNS_Members JJ_other NNP_Friend JJ_Conservative PRP$_my CC_and NNP_Minister JJ_right NNS_spokesmen NN_policy VBD_decided ,"[Members, other, Friend, Conservative, my, and, Minister, right, spokesmen, policy, decided]","[Members, other, Friend, Conservative, my, and, Minister, right, spokesmen, policy, decided]",NNS_Members JJ_other NNP_Friend JJ_Conservative PRP$_my CC_and NNP_Minister JJ_right NNS_spokesmen NN_policy VBD_decided ,"[Members, other, Friend, Conservative, my, and, Minister, right, spokesmen, policy, decided]",NNS_Members JJ_other NNP_Friend JJ_Conservative PRP$_my CC_and NNP_Minister JJ_right NNS_spokesmen NN_policy VBD_decided ,"[Members, other, Friend, Conservative, my, and, Minister, right, spokesmen, policy, decided]",NNS_Members JJ_other NNP_Friend JJ_Conservative PRP$_my CC_and NNP_Minister JJ_right NNS_spokesmen NN_policy VBD_decided ,1,1,1,2,1,2,1,1,1,1
Is not there a case now for some imagination and leadership in the Government's approach  instead of their being seen  led only by the Prime Minister  as the people who are clinging desperately to the last vestiges of the cold war?,IsVBZ notRB thereRB aDT caseNN nowRB forIN someDT imaginationNN andCC leadershipNN inIN theDT GovernmentNNP 'sPOS approachNN insteadRB ofIN theirPRP$ beingVBG seenVBN ledVBN onlyRB byIN theDT PrimeNNP MinisterNNP asIN theDT peopleNNS whoWP areVBP clingingVBG desperatelyRB toTO theDT lastJJ vestigesNNS ofIN theDT coldJJ warNN ,"root(ROOT-0, Is-1) neg(there-3, not-2) advmod(Is-1, there-3) det(case-5, a-4) dep(there-3, case-5) advmod(imagination-9, now-6) case(imagination-9, for-7) det(imagination-9, some-8) nmod:for(case-5, imagination-9) cc(imagination-9, and-10) nmod:for(case-5, leadership-11) conj:and(imagination-9, leadership-11) case(approach-16, in-12) det(Government-14, the-13) nmod:poss(approach-16, Government-14) case(Government-14, 's-15) nmod:in(imagination-9, approach-16) punct(case-5, ,-17) cc(case-5, instead-18) mwe(instead-18, of-19) nsubjpass(seen-22, their-20) auxpass(seen-22, being-21) dep(there-3, seen-22) conj:negcc(case-5, seen-22) punct(Is-1, ,-23) dep(Is-1, led-24) advmod(Minister-29, only-25) case(Minister-29, by-26) det(Minister-29, the-27) compound(Minister-29, Prime-28) nmod:by(led-24, Minister-29) punct(Minister-29, ,-30) case(people-33, as-31) det(people-33, the-32) nmod:as(Minister-29, people-33) nsubj(clinging-36, who-34) cop(clinging-36, are-35) acl:relcl(people-33, clinging-36) advmod(clinging-36, desperately-37) case(vestiges-41, to-38) det(vestiges-41, the-39) amod(vestiges-41, last-40) nmod:to(desperately-37, vestiges-41) case(war-45, of-42) det(war-45, the-43) amod(war-45, cold-44) nmod:of(vestiges-41, war-45) punct(Is-1, ?-46)",1,0,0,"root(ROOT, Is) neg(there, not) advmod(Is, there) det(case, a) dep(there, case) advmod(imagination, now) case(imagination, for) det(imagination, some) nmod:for(case, imagination) cc(imagination, and) nmod:for(case, leadership) conj:and(imagination, leadership) case(approach, in) det(Government, the) nmod:poss(approach, Government) ""case(Government, s)"", nmod:in(imagination, approach) pnct(case, ,) cc(case, instead) mwe(instead, of) nsbjpass(seen, their) axpass(seen, being) dep(there, seen) conj:negcc(case, seen) pnct(Is, ,) dep(Is, led) advmod(Minister, only) case(Minister, by) det(Minister, the) compond(Minister, Prime) nmod:by(led, Minister) pnct(Minister, ,) case(people, as) det(people, the) nmod:as(Minister, people) nsbj(clinging, who) cop(clinging, are) acl:relcl(people, clinging) advmod(clinging, desperately) case(vestiges, to) det(vestiges, the) amod(vestiges, last) nmod:to(desperately, vestiges) case(war, of) det(war, the) amod(war, cold) nmod:of(vestiges, war) pnct(Is, ?)","root(,VBZ) neg(RB,RB) advmod(VBZ,RB) det(NN,DT) dep(RB,NN) advmod(NN,RB) case(NN,IN) det(NN,DT) nmod:for(NN,NN) cc(NN,CC) nmod:for(NN,NN) conj:and(NN,NN) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) nmod:in(NN,NN) pnct(NN,NN) cc(NN,RB) mwe(RB,IN) nsbjpass(VBN,PRP$) axpass(VBN,VBG) dep(RB,VBN) conj:negcc(NN,VBN) pnct(VBZ,VBZ) dep(VBZ,VBN) advmod(NNP,RB) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:by(VBN,NNP) pnct(NNP,NNP) case(NNS,IN) det(NNS,DT) nmod:as(NNP,NNS) nsbj(VBG,WP) cop(VBG,VBP) acl:relcl(NNS,VBG) advmod(VBG,RB) case(NNS,TO) det(NNS,DT) amod(NNS,JJ) nmod:to(RB,NNS) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NNS,NN) pnct(VBZ,VBZ)","[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]","[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]",4,"[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]","[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]",EX_there NNP_Minister NNS_vestiges VBZ_Is NNS_people NNP_Government NN_approach NN_imagination NN_war VBN_seen RB_desperately VBG_clinging RB_instead RB_only VBN_led ,"[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]","[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]",EX_there NNP_Minister NNS_vestiges VBZ_Is NNS_people NNP_Government NN_approach NN_imagination NN_war VBN_seen RB_desperately VBG_clinging RB_instead RB_only VBN_led ,"[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]",EX_there NNP_Minister NNS_vestiges VBZ_Is NNS_people NNP_Government NN_approach NN_imagination NN_war VBN_seen RB_desperately VBG_clinging RB_instead RB_only VBN_led ,"[ , there, Minister, vestiges, Is, people, Government, approach, imagination, war, seen, desperately, clinging, instead, only, ROOT, led]",EX_there NNP_Minister NNS_vestiges VBZ_Is NNS_people NNP_Government NN_approach NN_imagination NN_war VBN_seen RB_desperately VBG_clinging RB_instead RB_only VBN_led ,1,2,2,2,1,2,2,2,2,2
The other thing that our armed forces need is consistency of support  and on that issue no one could suggest that my hon. Friend has been guilty of any deviation from a clear policy of support for a proper provision of helicopters.,TheDT otherJJ thingNN thatIN ourPRP$ armedJJ forcesNNS needVBP isVBZ consistencyNN ofIN supportNN andCC onIN thatDT issueNN noDT oneNN couldMD suggestVB thatIN myPRP$ honNN FriendNNP hasVBZ beenVBN guiltyJJ ofIN anyDT deviationNN fromIN aDT clearJJ policyNN ofIN supportNN forIN aDT properJJ provisionNN ofIN helicoptersNNS ,"root(ROOT-0, consistency-10) det(thing-3, The-1) amod(thing-3, other-2) nsubj(consistency-10, thing-3) dobj(need-8, that-4) nmod:poss(forces-7, our-5) amod(forces-7, armed-6) nsubj(need-8, forces-7) acl:relcl(thing-3, need-8) cop(consistency-10, is-9) case(support-12, of-11) nmod:of(consistency-10, support-12) punct(consistency-10, ,-13) cc(consistency-10, and-14) case(issue-17, on-15) det(issue-17, that-16) nmod:on(suggest-21, issue-17) neg(one-19, no-18) nsubj(suggest-21, one-19) aux(suggest-21, could-20) conj:and(consistency-10, suggest-21) mark(guilty-28, that-22) nmod:poss(Friend-25, my-23) compound(Friend-25, hon.-24) nsubj(guilty-28, Friend-25) aux(guilty-28, has-26) cop(guilty-28, been-27) ccomp(suggest-21, guilty-28) case(deviation-31, of-29) det(deviation-31, any-30) nmod:of(guilty-28, deviation-31) case(policy-35, from-32) det(policy-35, a-33) amod(policy-35, clear-34) nmod:from(deviation-31, policy-35) case(support-37, of-36) nmod:of(policy-35, support-37) case(provision-41, for-38) det(provision-41, a-39) amod(provision-41, proper-40) nmod:for(support-37, provision-41) case(helicopters-43, of-42) nmod:of(provision-41, helicopters-43) punct(consistency-10, .-44)",1,0,0,"root(ROOT, consistency) det(thing, The) amod(thing, other) nsbj(consistency, thing) dobj(need, that) nmod:poss(forces, or) amod(forces, armed) nsbj(need, forces) acl:relcl(thing, need) cop(consistency, is) case(spport, of) nmod:of(consistency, spport) pnct(consistency, ,) cc(consistency, and) case(isse, on) det(isse, that) nmod:on(sggest, isse) neg(one, no) nsbj(sggest, one) ax(sggest, cold) conj:and(consistency, sggest) mark(gilty, that) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(gilty, Friend) ax(gilty, has) cop(gilty, been) ccomp(sggest, gilty) case(deviation, of) det(deviation, any) nmod:of(gilty, deviation) case(policy, from) det(policy, a) amod(policy, clear) nmod:from(deviation, policy) case(spport, of) nmod:of(policy, spport) case(provision, for) det(provision, a) amod(provision, proper) nmod:for(spport, provision) case(helicopters, of) nmod:of(provision, helicopters) pnct(consistency, .)","root(,NN) det(NN,DT) amod(NN,JJ) nsbj(NN,NN) dobj(VBP,IN) nmod:poss(NNS,PRP$) amod(NNS,JJ) nsbj(VBP,NNS) acl:relcl(NN,VBP) cop(NN,VBZ) case(NN,IN) nmod:of(NN,NN) pnct(NN,NN) cc(NN,CC) case(NN,IN) det(NN,IN) nmod:on(VB,NN) neg(NN,DT) nsbj(VB,NN) ax(VB,MD) conj:and(NN,VB) mark(JJ,IN) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(JJ,NNP) ax(JJ,VBZ) cop(JJ,VBN) ccomp(VB,JJ) case(NN,IN) det(NN,DT) nmod:of(JJ,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:from(NN,NN) case(NN,IN) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:for(NN,NN) case(NNS,IN) nmod:of(NN,NNS) pnct(NN,NN)","[guilty, my, suggest, deviation, Friend]","[guilty, my, suggest, deviation, Friend]",5,[ ],[ ],JJ_guilty PRP$_my VBP_suggest NN_deviation NNP_Friend ,"[guilty, my, suggest, deviation, Friend]","[guilty, my, suggest, deviation, Friend]",JJ_guilty PRP$_my VBP_suggest NN_deviation NNP_Friend ,"[guilty, my, suggest, deviation, Friend]",JJ_guilty PRP$_my VBP_suggest NN_deviation NNP_Friend ,"[guilty, my, suggest, deviation, Friend]",JJ_guilty PRP$_my VBP_suggest NN_deviation NNP_Friend ,1,1,1,2,1,2,2,2,2,1
He is exactly right.,HePRP isVBZ exactlyRB rightJJ ,"root(ROOT-0, right-4) nsubj(right-4, He-1) cop(right-4, is-2) advmod(right-4, exactly-3) punct(right-4, .-5)",1,0,0,"root(ROOT, right) nsbj(right, He) cop(right, is) advmod(right, exactly) pnct(right, .)","root(,JJ) nsbj(JJ,PRP) cop(JJ,VBZ) advmod(JJ,RB) pnct(JJ,JJ)","[ROOT, He, right, exactly]","[ROOT, He, right, exactly]",12,"[ROOT, He, right, exactly]",[ ],PRP_He JJ_right RB_exactly ,"[ROOT, He, right, exactly]","[ROOT, He, right, exactly]",PRP_He JJ_right RB_exactly ,"[ROOT, He, right, exactly]",PRP_He JJ_right RB_exactly ,"[ROOT, He, right, exactly]",PRP_He JJ_right RB_exactly ,1,1,1,1,1,1,1,1,1,1
That is a pretty savage attack by an hon. Member on the NATO defence strategy to which I understood that he and his colleagues were supposed to subscribe.,ThatDT isVBZ aDT prettyJJ savageNN attackNN byIN anDT honJJ MemberNNP onIN theDT NATONNP defenceNN strategyNN toTO whichWDT IPRP understoodVBD thatIN hePRP andCC hisPRP$ colleaguesNNS wereVBD supposedVBN toTO subscribeVB ,"root(ROOT-0, attack-6) nsubj(attack-6, That-1) cop(attack-6, is-2) det(attack-6, a-3) advmod(savage-5, pretty-4) amod(attack-6, savage-5) case(Member-10, by-7) det(Member-10, an-8) compound(Member-10, hon.-9) nmod:by(attack-6, Member-10) case(strategy-15, on-11) det(strategy-15, the-12) compound(strategy-15, NATO-13) compound(strategy-15, defence-14) nmod:on(Member-10, strategy-15) case(which-17, to-16) nmod:to(understood-19, which-17) nsubj(understood-19, I-18) acl:relcl(strategy-15, understood-19) mark(supposed-26, that-20) nsubjpass(supposed-26, he-21) cc(he-21, and-22) nmod:poss(colleagues-24, his-23) conj:and(he-21, colleagues-24) nsubjpass(supposed-26, colleagues-24) auxpass(supposed-26, were-25) ccomp(understood-19, supposed-26) mark(subscribe-28, to-27) xcomp(supposed-26, subscribe-28) punct(attack-6, .-29)",1,1,0,"root(ROOT, attack) nsbj(attack, That) cop(attack, is) det(attack, a) advmod(savage, pretty) amod(attack, savage) case(Member, by) det(Member, an) compond(Member, hon.) nmod:by(attack, Member) case(strategy, on) det(strategy, the) compond(strategy, NATO) compond(strategy, defence) nmod:on(Member, strategy) case(which, to) nmod:to(nderstood, which) nsbj(nderstood, I) acl:relcl(strategy, nderstood) mark(spposed, that) nsbjpass(spposed, he) cc(he, and) nmod:poss(colleages, his) conj:and(he, colleages) nsbjpass(spposed, colleages) axpass(spposed, were) ccomp(nderstood, spposed) mark(sbscribe, to) xcomp(spposed, sbscribe) pnct(attack, .)","root(,NN) nsbj(NN,DT) cop(NN,VBZ) det(NN,DT) advmod(NN,JJ) amod(NN,NN) case(NNP,IN) det(NNP,DT) compond(NNP,NNP) nmod:by(NN,NNP) case(NN,IN) det(NN,DT) compond(NN,NNP) compond(NN,NN) nmod:on(NNP,NN) case(WDT,TO) nmod:to(VBD,WDT) nsbj(VBD,PRP) acl:relcl(NN,VBD) mark(VBN,IN) nsbjpass(VBN,PRP) cc(PRP,CC) nmod:poss(NNS,PRP$) conj:and(PRP,NNS) nsbjpass(VBN,NNS) axpass(VBN,VBD) ccomp(VBD,VBN) mark(VB,TO) xcomp(VBN,VB) pnct(NN,NN)","[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]","[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]",15,"[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]","[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]",PRP_he VB_subscribe DT_That VBN_supposed PRP$_his NNP_Member CC_and NN_attack NN_strategy JJ_understood NNS_colleagues NN_savage ,"[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]","[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]",PRP_he VB_subscribe DT_That VBN_supposed PRP$_his NNP_Member CC_and NN_attack NN_strategy JJ_understood NNS_colleagues NN_savage ,"[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]",PRP_he VB_subscribe DT_That VBN_supposed PRP$_his NNP_Member CC_and NN_attack NN_strategy JJ_understood NNS_colleagues NN_savage ,"[he, subscribe, That, supposed, his, Member, and, attack, strategy, ROOT, understood, colleagues, savage]",PRP_he VB_subscribe DT_That VBN_supposed PRP$_his NNP_Member CC_and NN_attack NN_strategy JJ_understood NNS_colleagues NN_savage ,1,2,2,2,1,2,2,2,2,2
If the document that I have here is the sum total of the new Labour defence strategy there is only one paragraph that is not a criticism of the Government and contains a new policy it is wrong anyway because it talks about consultations with the Netherlands  Belgium and Britain  but there are many more countries in NATO  and if the Labour party proposes not to consult them it will be changing its policy once again.,IfIN theDT documentNN thatIN IPRP haveVBP hereRB isVBZ theDT sumJJ totalNN ofIN theDT newJJ LabourNNP defenceNN strategyNN thereEX isVBZ onlyRB oneCD paragraphNN thatWDT isVBZ notRB aDT criticismNN ofIN theDT GovernmentNNP andCC containsVBZ aDT newJJ policyNN itPRP isVBZ wrongJJ anywayRB becauseIN itPRP talksVBZ aboutIN consultationsNNS withIN theDT NetherlandsNNP BelgiumNNP andCC BritainNNP butCC thereEX areVBP manyJJ moreJJR countriesNNS inIN NATONNP andCC ifIN theDT LabourNNP partyNN proposesVBZ notRB toTO consultVB themPRP itPRP willMD beVB changingVBG itsPRP$ policyNN onceRB againRB ,"root(ROOT-0, is-19) mark(total-11, If-1) det(document-3, the-2) nsubj(total-11, document-3) dobj(have-6, that-4) nsubj(have-6, I-5) acl:relcl(document-3, have-6) advmod(have-6, here-7) cop(total-11, is-8) det(total-11, the-9) compound(total-11, sum-10) advcl(is-19, total-11) case(strategy-17, of-12) det(strategy-17, the-13) amod(strategy-17, new-14) compound(strategy-17, Labour-15) compound(strategy-17, defence-16) nmod:of(total-11, strategy-17) expl(is-19, there-18) advmod(one-21, only-20) nummod(paragraph-22, one-21) nsubj(is-19, paragraph-22) nsubj(criticism-27, that-23) nsubj(contains-32, that-23) cop(criticism-27, is-24) neg(criticism-27, not-25) det(criticism-27, a-26) acl:relcl(paragraph-22, criticism-27) case(Government-30, of-28) det(Government-30, the-29) nmod:of(criticism-27, Government-30) cc(criticism-27, and-31) acl:relcl(paragraph-22, contains-32) conj:and(criticism-27, contains-32) det(policy-35, a-33) amod(policy-35, new-34) dobj(contains-32, policy-35) nsubj(wrong-38, it-36) cop(wrong-38, is-37) acl:relcl(policy-35, wrong-38) advmod(wrong-38, anyway-39) mark(talks-42, because-40) nsubj(talks-42, it-41) advcl(wrong-38, talks-42) case(consultations-44, about-43) nmod:about(talks-42, consultations-44) case(Netherlands-47, with-45) det(Netherlands-47, the-46) nmod:with(consultations-44, Netherlands-47) punct(Netherlands-47, ,-48) nmod:with(consultations-44, Belgium-49) conj:and(Netherlands-47, Belgium-49) cc(Netherlands-47, and-50) nmod:with(consultations-44, Britain-51) conj:and(Netherlands-47, Britain-51) punct(is-19, ,-52) cc(is-19, but-53) expl(are-55, there-54) conj:but(is-19, are-55) amod(countries-58, many-56) amod(countries-58, more-57) nsubj(are-55, countries-58) case(NATO-60, in-59) nmod:in(countries-58, NATO-60) punct(is-19, ,-61) cc(is-19, and-62) mark(proposes-67, if-63) det(party-66, the-64) compound(party-66, Labour-65) nsubj(proposes-67, party-66) conj:and(is-19, proposes-67) neg(consult-70, not-68) mark(consult-70, to-69) xcomp(proposes-67, consult-70) dobj(consult-70, them-71) nsubj(changing-75, it-72) aux(changing-75, will-73) aux(changing-75, be-74) ccomp(consult-70, changing-75) nmod:poss(policy-77, its-76) dobj(changing-75, policy-77) advmod(again-79, once-78) advmod(changing-75, again-79) punct(is-19, .-80)",1,0,0,"root(ROOT, is) mark(total, If) det(docment, the) nsbj(total, docment) dobj(have, that) nsbj(have, I) acl:relcl(docment, have) advmod(have, here) cop(total, is) det(total, the) compond(total, sm) advcl(is, total) case(strategy, of) det(strategy, the) amod(strategy, new) compond(strategy, Labor) compond(strategy, defence) nmod:of(total, strategy) expl(is, there) advmod(one, only) nmmod(paragraph, one) nsbj(is, paragraph) nsbj(criticism, that) nsbj(contains, that) cop(criticism, is) neg(criticism, not) det(criticism, a) acl:relcl(paragraph, criticism) case(Government, of) det(Government, the) nmod:of(criticism, Government) cc(criticism, and) acl:relcl(paragraph, contains) conj:and(criticism, contains) det(policy, a) amod(policy, new) dobj(contains, policy) nsbj(wrong, it) cop(wrong, is) acl:relcl(policy, wrong) advmod(wrong, anyway) mark(talks, becase) nsbj(talks, it) advcl(wrong, talks) case(consltations, abot) nmod:abot(talks, consltations) case(Netherlands, with) det(Netherlands, the) nmod:with(consltations, Netherlands) pnct(Netherlands, ,) nmod:with(consltations, Belgim) conj:and(Netherlands, Belgim) cc(Netherlands, and) nmod:with(consltations, Britain) conj:and(Netherlands, Britain) pnct(is, ,) cc(is, bt) expl(are, there) conj:bt(is, are) amod(contries, many) amod(contries, more) nsbj(are, contries) case(NATO, in) nmod:in(contries, NATO) pnct(is, ,) cc(is, and) mark(proposes, if) det(party, the) compond(party, Labor) nsbj(proposes, party) conj:and(is, proposes) neg(conslt, not) mark(conslt, to) xcomp(proposes, conslt) dobj(conslt, them) nsbj(changing, it) ax(changing, will) ax(changing, be) ccomp(conslt, changing) nmod:poss(policy, its) dobj(changing, policy) advmod(again, once) advmod(changing, again) pnct(is, .)","root(,VBZ) mark(NN,IN) det(NN,DT) nsbj(NN,NN) dobj(VBP,WDT) nsbj(VBP,PRP) acl:relcl(NN,VBP) advmod(VBP,RB) cop(NN,VBZ) det(NN,DT) compond(NN,JJ) advcl(VBZ,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NNP) compond(NN,NN) nmod:of(NN,NN) expl(VBZ,EX) advmod(CD,RB) nmmod(NN,CD) nsbj(VBZ,NN) nsbj(NN,WDT) nsbj(VBZ,WDT) cop(NN,VBZ) neg(NN,RB) det(NN,DT) acl:relcl(NN,NN) case(NNP,IN) det(NNP,DT) nmod:of(NN,NNP) cc(NN,CC) acl:relcl(NN,VBZ) conj:and(NN,VBZ) det(NN,DT) amod(NN,JJ) dobj(VBZ,NN) nsbj(JJ,PRP) cop(JJ,VBZ) acl:relcl(NN,JJ) advmod(JJ,RB) mark(VBZ,IN) nsbj(VBZ,PRP) advcl(JJ,VBZ) case(NNS,IN) nmod:abot(VBZ,NNS) case(NNP,IN) det(NNP,DT) nmod:with(NNS,NNP) pnct(NNP,NNP) nmod:with(NNS,NNP) conj:and(NNP,NNP) cc(NNP,CC) nmod:with(NNS,NNP) conj:and(NNP,NNP) pnct(VBZ,VBZ) cc(VBZ,CC) expl(VBP,EX) conj:bt(VBZ,VBP) amod(NNS,JJ) amod(NNS,JJR) nsbj(VBP,NNS) case(NNP,IN) nmod:in(NNS,NNP) pnct(VBZ,VBZ) cc(VBZ,CC) mark(VBZ,IN) det(NN,DT) compond(NN,NNP) nsbj(VBZ,NN) conj:and(VBZ,VBZ) neg(VB,RB) mark(VB,TO) xcomp(VBZ,VB) dobj(VB,PRP) nsbj(VBG,PRP) ax(VBG,MD) ax(VBG,VB) ccomp(VB,VBG) nmod:poss(NN,PRP$) dobj(VBG,NN) advmod(RB,RB) advmod(VBG,RB) pnct(VBZ,VBZ)","[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]","[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]",16,"[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]","[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]",RB_not NN_total NN_party CC_and NN_criticism IN_that NN_paragraph VBZ_proposes NN_strategy JJ_new NNP_Government ,"[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]","[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]",RB_not NN_total NN_party CC_and NN_criticism IN_that NN_paragraph VBZ_proposes NN_strategy JJ_new NNP_Government ,"[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]",RB_not NN_total NN_party CC_and NN_criticism IN_that NN_paragraph VBZ_proposes NN_strategy JJ_new NNP_Government ,"[not, total, party, and, criticism, that, paragraph, proposes, strategy, new, Government]",RB_not NN_total NN_party CC_and NN_criticism IN_that NN_paragraph VBZ_proposes NN_strategy JJ_new NNP_Government ,2,2,2,2,1,2,2,2,2,2
Is my right hon. Friend aware of the widespread recognition in my constituency of the Government's record on the national health service  as seen in the renewal and upgrading of each of our four cottage or community hospitals?,IsVBZ myPRP$ rightJJ honNN FriendNNP awareNN ofIN theDT widespreadJJ recognitionNN inIN myPRP$ constituencyNN ofIN theDT GovernmentNNP 'sPOS recordNN onIN theDT nationalJJ healthNN serviceNN asIN seenVBN inIN theDT renewalNN andCC upgradingNN ofIN eachDT ofIN ourPRP$ fourCD cottageNN orCC communityNN hospitalsNNS ,"root(ROOT-0, Is-1) nmod:poss(Friend-5, my-2) amod(Friend-5, right-3) compound(Friend-5, hon.-4) nsubj(Is-1, Friend-5) amod(Friend-5, aware-6) case(recognition-10, of-7) det(recognition-10, the-8) amod(recognition-10, widespread-9) nmod:of(aware-6, recognition-10) case(constituency-13, in-11) nmod:poss(constituency-13, my-12) nmod:in(recognition-10, constituency-13) case(record-18, of-14) det(Government-16, the-15) nmod:poss(record-18, Government-16) case(Government-16, 's-17) nmod:of(constituency-13, record-18) case(service-23, on-19) det(service-23, the-20) amod(service-23, national-21) compound(service-23, health-22) nmod:on(record-18, service-23) punct(Is-1, ,-24) mark(seen-26, as-25) advcl(Is-1, seen-26) case(renewal-29, in-27) det(renewal-29, the-28) nmod:in(seen-26, renewal-29) cc(renewal-29, and-30) nmod:in(seen-26, upgrading-31) conj:and(renewal-29, upgrading-31) case(each-33, of-32) nmod:of(renewal-29, each-33) case(cottage-37, of-34) nmod:poss(cottage-37, our-35) nummod(cottage-37, four-36) nmod:of(each-33, cottage-37) cc(cottage-37, or-38) compound(hospitals-40, community-39) nmod:of(each-33, hospitals-40) conj:or(cottage-37, hospitals-40) punct(Is-1, ?-41)",1,0,0,"root(ROOT, Is) nmod:poss(Friend, my) amod(Friend, right) compond(Friend, hon.) nsbj(Is, Friend) amod(Friend, aware) case(recognition, of) det(recognition, the) amod(recognition, widespread) nmod:of(aware, recognition) case(constitency, in) nmod:poss(constitency, my) nmod:in(recognition, constitency) case(record, of) det(Government, the) nmod:poss(record, Government) ""case(Government, s)"", nmod:of(constitency, record) case(service, on) det(service, the) amod(service, national) compond(service, health) nmod:on(record, service) pnct(Is, ,) mark(seen, as) advcl(Is, seen) case(renewal, in) det(renewal, the) nmod:in(seen, renewal) cc(renewal, and) nmod:in(seen, pgrading) conj:and(renewal, pgrading) case(each, of) nmod:of(renewal, each) case(cottage, of) nmod:poss(cottage, or) nmmod(cottage, for) nmod:of(each, cottage) cc(cottage, or) compond(hospitals, commnity) nmod:of(each, hospitals) conj:or(cottage, hospitals) pnct(Is, ?)","root(,VBZ) nmod:poss(NNP,PRP$) amod(NNP,JJ) compond(NNP,NNP) nsbj(VBZ,NNP) amod(NNP,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) nmod:of(NN,NN) case(NN,IN) nmod:poss(NN,PRP$) nmod:in(NN,NN) case(NN,IN) det(NNP,DT) nmod:poss(NN,NNP) case(NNP,POS) nmod:of(NN,NN) case(NN,IN) det(NN,DT) amod(NN,JJ) compond(NN,NN) nmod:on(NN,NN) pnct(VBZ,VBZ) mark(VBN,IN) advcl(VBZ,VBN) case(NN,IN) det(NN,DT) nmod:in(VBN,NN) cc(NN,CC) nmod:in(VBN,NN) conj:and(NN,NN) case(DT,IN) nmod:of(NN,DT) case(NN,IN) nmod:poss(NN,PRP$) nmmod(NN,CD) nmod:of(DT,NN) cc(NN,CC) compond(NNS,NN) nmod:of(DT,NNS) conj:or(NN,NNS) pnct(VBZ,VBZ)","[seen, aware, right, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]","[seen, aware, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]",6,"[seen, aware, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]","[seen, aware, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]",VBN_seen JJ_aware VBZ_Is NN_recognition NN_service NNP_Friend PRP$_my NNP_Government NN_constituency NN_record ,"[seen, aware, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]","[seen, aware, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]",VBN_seen JJ_aware VBZ_Is NN_recognition NN_service NNP_Friend PRP$_my NNP_Government NN_constituency NN_record ,"[seen, aware, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]",VBN_seen JJ_aware VBZ_Is NN_recognition NN_service NNP_Friend PRP$_my NNP_Government NN_constituency NN_record ,"[seen, aware, Is, recognition, service, Friend, my, Government, ROOT, constituency, record]",VBN_seen JJ_aware VBZ_Is NN_recognition NN_service NNP_Friend PRP$_my NNP_Government NN_constituency NN_record ,3,1,1,0,0,0,0,0,0,0
People recognise just how much the Government have spent compared with the previous Government who cut slashed  indeed public expenditure on the health service.,PeopleNNS recogniseVB justRB howWRB muchJJ theDT GovernmentNNP haveVBP spentVBN comparedVBN withIN theDT previousJJ GovernmentNNP whoWP cutVBD slashedJJ indeedRB publicJJ expenditureNN onIN theDT healthNN serviceNN ,"root(ROOT-0, recognise-2) nsubj(recognise-2, People-1) advmod(much-5, just-3) advmod(much-5, how-4) advmod(spent-9, much-5) det(Government-7, the-6) nsubj(spent-9, Government-7) aux(spent-9, have-8) ccomp(recognise-2, spent-9) case(Government-14, compared-10) mwe(compared-10, with-11) det(Government-14, the-12) amod(Government-14, previous-13) nmod:compared_with(spent-9, Government-14) nsubj(cut-16, who-15) acl:relcl(Government-14, cut-16) xcomp(cut-16, slashed-17) punct(slashed-17, ,-18) advmod(expenditure-21, indeed-19) amod(expenditure-21, public-20) appos(slashed-17, expenditure-21) case(service-25, on-22) det(service-25, the-23) compound(service-25, health-24) nmod:on(expenditure-21, service-25) punct(recognise-2, .-26)",1,0,0,"root(ROOT, recognise) nsbj(recognise, People) advmod(mch, jst) advmod(mch, how) advmod(spent, mch) det(Government, the) nsbj(spent, Government) ax(spent, have) ccomp(recognise, spent) case(Government, compared) mwe(compared, with) det(Government, the) amod(Government, previos) nmod:compared_with(spent, Government) nsbj(ct, who) acl:relcl(Government, ct) xcomp(ct, slashed) pnct(slashed, ,) advmod(expenditre, indeed) amod(expenditre, pblic) appos(slashed, expenditre) case(service, on) det(service, the) compond(service, health) nmod:on(expenditre, service) pnct(recognise, .)","root(,VB) nsbj(VB,NNS) advmod(JJ,RB) advmod(JJ,WRB) advmod(VBN,JJ) det(NNP,DT) nsbj(VBN,NNP) ax(VBN,VBP) ccomp(VB,VBN) case(NNP,VBN) mwe(VBN,IN) det(NNP,DT) amod(NNP,JJ) nmod:compared_with(VBN,NNP) nsbj(VBD,WP) acl:relcl(NNP,VBD) xcomp(VBD,JJ) pnct(JJ,JJ) advmod(NN,RB) amod(NN,JJ) appos(JJ,NN) case(NN,IN) det(NN,DT) compond(NN,NN) nmod:on(NN,NN) pnct(VB,VB)","[spent, previous, compared, Government, recognise, much, with, slashed, cut, Government, who]","[spent, previous, compared, Government, recognise, much, with, slashed, cut, Government, who]",7,"[spent, previous, compared, recognise, much, with, slashed, cut, Government, who]","[spent, previous, compared, recognise, much, with, slashed, cut, Government, who]",VBN_spent JJ_previous VBN_compared NNP_Government VBP_recognise RB_much IN_with VBN_slashed NN_cut NNP_Government WP_who ,"[spent, previous, compared, Government, recognise, much, with, slashed, cut, Government, who]","[spent, previous, compared, Government, recognise, much, with, slashed, cut, Government, who]",VBN_spent JJ_previous VBN_compared NNP_Government VBP_recognise RB_much IN_with VBN_slashed NN_cut NNP_Government WP_who ,"[spent, previous, compared, Government, recognise, much, with, slashed, cut, Government, who]",VBN_spent JJ_previous VBN_compared NNP_Government VBP_recognise RB_much IN_with VBN_slashed NN_cut NNP_Government WP_who ,"[spent, previous, compared, Government, recognise, much, with, slashed, cut, Government, who]",VBN_spent JJ_previous VBN_compared NNP_Government VBP_recognise RB_much IN_with VBN_slashed NN_cut NNP_Government WP_who ,3,2,2,2,1,2,2,2,2,2
How right my hon. Friend is.,HowWRB rightJJ myPRP$ honNN FriendNNP isVBZ ,"root(ROOT-0, is-6) advmod(right-2, How-1) dep(is-6, right-2) nmod:poss(Friend-5, my-3) compound(Friend-5, hon.-4) nsubj(is-6, Friend-5) punct(is-6, .-7)",1,1,0,"root(ROOT, is) advmod(right, How) dep(is, right) nmod:poss(Friend, my) compond(Friend, hon.) nsbj(is, Friend) pnct(is, .)","root(,VBZ) advmod(JJ,WRB) dep(VBZ,JJ) nmod:poss(NNP,PRP$) compond(NNP,NNP) nsbj(VBZ,NNP) pnct(VBZ,VBZ)","[right, ROOT, Friend, my, is]","[right, ROOT, Friend, my, is]",7,"[right, ROOT, Friend, my, is]","[right, ROOT, Friend, my, is]",JJ_right NNP_Friend PRP$_my VBZ_is ,"[right, ROOT, Friend, my, is]","[right, ROOT, Friend, my, is]",JJ_right NNP_Friend PRP$_my VBZ_is ,"[right, ROOT, Friend, my, is]",JJ_right NNP_Friend PRP$_my VBZ_is ,"[right, ROOT, Friend, my, is]",JJ_right NNP_Friend PRP$_my VBZ_is ,1,1,1,1,1,1,1,1,1,1
The hon. Member for Merthyr Tydfil and Rhymney (Mr. Rowlands) should be proud of that  and not seek to make party political points out of health.,TheDT honNN MemberNNP forIN MerthyrNNP TydfilNNP andCC RhymneyNNP (( MrNNP RowlandsNNP )) shouldMD beVB proudNN ofIN thatDT andCC notRB seekVB toTO makeVB partyNN politicalJJ pointsNNS outIN ofIN healthNN ,"root(ROOT-0, proud-15) det(Member-3, The-1) compound(Member-3, hon.-2) nsubj(proud-15, Member-3) nsubj(seek-21, Member-3) case(Tydfil-6, for-4) compound(Tydfil-6, Merthyr-5) nmod:for(Member-3, Tydfil-6) cc(Tydfil-6, and-7) nmod:for(Member-3, Rhymney-8) conj:and(Tydfil-6, Rhymney-8) punct(Rowlands-11, -LRB--9) compound(Rowlands-11, Mr.-10) appos(Rhymney-8, Rowlands-11) punct(Rowlands-11, -RRB--12) aux(proud-15, should-13) cop(proud-15, be-14) case(that-17, of-16) nmod:of(proud-15, that-17) punct(proud-15, ,-18) cc(proud-15, and-19) neg(seek-21, not-20) conj:and(proud-15, seek-21) mark(make-23, to-22) xcomp(seek-21, make-23) compound(points-26, party-24) amod(points-26, political-25) dobj(make-23, points-26) case(health-29, out-27) mwe(out-27, of-28) nmod:out_of(make-23, health-29) punct(proud-15, .-30)",1,0,0,"root(ROOT, prod) det(Member, The) compond(Member, hon.) nsbj(prod, Member) nsbj(seek, Member) case(Tydfil, for) compond(Tydfil, Merthyr) nmod:for(Member, Tydfil) cc(Tydfil, and) nmod:for(Member, Rhymney) conj:and(Tydfil, Rhymney) pnct(Rowlands, ) compond(Rowlands, Mr.) appos(Rhymney, Rowlands) pnct(Rowlands, ) ax(prod, shold) cop(prod, be) case(that, of) nmod:of(prod, that) pnct(prod, ,) cc(prod, and) neg(seek, not) conj:and(prod, seek) mark(make, to) xcomp(seek, make) compond(points, party) amod(points, political) dobj(make, points) case(health, ot) mwe(ot, of) nmod:ot_of(make, health) pnct(prod, .)","root(,NN) det(NNP,DT) compond(NNP,NNP) nsbj(NN,NNP) nsbj(VB,NNP) case(NNP,IN) compond(NNP,NNP) nmod:for(NNP,NNP) cc(NNP,CC) nmod:for(NNP,NNP) conj:and(NNP,NNP) pnct(NNP,) compond(NNP,NNP) appos(NNP,NNP) pnct(NNP,) ax(NN,MD) cop(NN,VB) case(DT,IN) nmod:of(NN,DT) pnct(NN,NN) cc(NN,CC) neg(VB,RB) conj:and(NN,VB) mark(VB,TO) xcomp(VB,VB) compond(NNS,NN) amod(NNS,JJ) dobj(VB,NNS) case(NN,IN) mwe(IN,IN) nmod:ot_of(VB,NN) pnct(NN,NN)","[seek, not, Rhymney, that, and, Rowlands, proud, Member, ROOT, Tydfil, and, make]","[seek, not, Rhymney, that, and, Rowlands, proud, Member, ROOT, Tydfil, and, make]",8,[ ],[ ],VB_seek RB_not NNP_Rhymney IN_that CC_and NNP_Rowlands NN_proud NNP_Member NNP_Tydfil CC_and VB_make ,"[seek, not, Rhymney, that, and, Rowlands, proud, Member, ROOT, Tydfil, and, make]","[seek, not, Rhymney, that, and, Rowlands, proud, Member, ROOT, Tydfil, and, make]",VB_seek RB_not NNP_Rhymney IN_that CC_and NNP_Rowlands NN_proud NNP_Member NNP_Tydfil CC_and VB_make ,"[seek, not, Rhymney, that, and, Rowlands, proud, Member, ROOT, Tydfil, and, make]",VB_seek RB_not NNP_Rhymney IN_that CC_and NNP_Rowlands NN_proud NNP_Member NNP_Tydfil CC_and VB_make ,"[seek, not, Rhymney, that, and, Rowlands, proud, Member, ROOT, Tydfil, and, make]",VB_seek RB_not NNP_Rhymney IN_that CC_and NNP_Rowlands NN_proud NNP_Member NNP_Tydfil CC_and VB_make ,1,2,2,2,1,2,1,1,1,2
May I congratulate the Secretary of State on reversing his predecessor's decision on Project 2000?,MayNNP IPRP congratulateVBP theDT SecretaryNNP ofIN StateNNP onIN reversingVBG hisPRP$ predecessorNN 'sPOS decisionNN onIN ProjectNN 2000CD ,"root(ROOT-0, congratulate-3) nmod:tmod(congratulate-3, May-1) nsubj(congratulate-3, I-2) det(Secretary-5, the-4) dobj(congratulate-3, Secretary-5) case(State-7, of-6) nmod:of(Secretary-5, State-7) mark(reversing-9, on-8) advcl(congratulate-3, reversing-9) nmod:poss(predecessor-11, his-10) nmod:poss(decision-13, predecessor-11) case(predecessor-11, 's-12) dobj(reversing-9, decision-13) case(Project-15, on-14) nmod:on(decision-13, Project-15) nummod(Project-15, 2000-16) punct(congratulate-3, ?-17)",1,1,0,"root(ROOT, congratlate) nmod:tmod(congratlate, May) nsbj(congratlate, I) det(Secretary, the) dobj(congratlate, Secretary) case(State, of) nmod:of(Secretary, State) mark(reversing, on) advcl(congratlate, reversing) nmod:poss(predecessor, his) nmod:poss(decision, predecessor) ""case(predecessor, s)"", dobj(reversing, decision) case(Project, on) nmod:on(decision, Project) nmmod(Project, 2000) pnct(congratlate, ?)","root(,VBP) nmod:tmod(VBP,NNP) nsbj(VBP,PRP) det(NNP,DT) dobj(VBP,NNP) case(NNP,IN) nmod:of(NNP,NNP) mark(VBG,IN) advcl(VBP,VBG) nmod:poss(NN,PRP$) nmod:poss(NN,NN) case(NN,POS) dobj(VBG,NN) case(NN,IN) nmod:on(NN,NN) nmmod(NN,CD) pnct(VBP,VBP)","[May, congratulate, I, reversing, Secretary, State, ROOT]","[predecessor, congratulate, State, May, decision, I, his, reversing, Secretary, ROOT]",8,"[predecessor, congratulate, State, May, decision, I, his, reversing, Secretary, ROOT]","[predecessor, congratulate, State, May, decision, I, his, reversing, Secretary, ROOT]",NN_predecessor VBP_congratulate NNP_State NNP_May NN_decision PRP_I PRP$_his VBG_reversing NNP_Secretary ,"[predecessor, congratulate, State, May, decision, I, his, reversing, Secretary, ROOT]","[predecessor, congratulate, State, May, decision, I, his, reversing, Secretary, ROOT]",NN_predecessor VBP_congratulate NNP_State NNP_May NN_decision PRP_I PRP$_his VBG_reversing NNP_Secretary ,"[predecessor, congratulate, State, May, decision, I, his, reversing, Secretary, ROOT]",NN_predecessor VBP_congratulate NNP_State NNP_May NN_decision PRP_I PRP$_his VBG_reversing NNP_Secretary ,"[predecessor, congratulate, State, May, decision, I, his, reversing, Secretary, ROOT]",NN_predecessor VBP_congratulate NNP_State NNP_May NN_decision PRP_I PRP$_his VBG_reversing NNP_Secretary ,2,2,2,1,1,1,1,1,1,2
I also congratulate the right hon. Gentleman on his decision not to axe the community health councils another of his predecessor's proposals.,IPRP alsoRB congratulateVBP theDT rightJJ honNN GentlemanNNP onIN hisPRP$ decisionNN notRB toTO axeVB theDT communityNN healthNN councilsVBZ anotherDT ofIN hisPRP$ predecessorNN 'sPOS proposalsNNS ,"root(ROOT-0, congratulate-3) nsubj(congratulate-3, I-1) advmod(congratulate-3, also-2) det(Gentleman-7, the-4) amod(Gentleman-7, right-5) compound(Gentleman-7, hon.-6) dobj(congratulate-3, Gentleman-7) case(decision-10, on-8) nmod:poss(decision-10, his-9) nmod:on(congratulate-3, decision-10) neg(axe-13, not-11) mark(axe-13, to-12) acl(decision-10, axe-13) det(councils-17, the-14) compound(councils-17, community-15) compound(councils-17, health-16) dobj(axe-13, councils-17) advmod(axe-13, another-18) case(proposals-23, of-19) nmod:poss(predecessor-21, his-20) nmod:poss(proposals-23, predecessor-21) case(predecessor-21, 's-22) nmod:of(another-18, proposals-23) punct(congratulate-3, .-24)",1,0,0,"root(ROOT, congratlate) nsbj(congratlate, I) advmod(congratlate, also) det(Gentleman, the) amod(Gentleman, right) compond(Gentleman, hon.) dobj(congratlate, Gentleman) case(decision, on) nmod:poss(decision, his) nmod:on(congratlate, decision) neg(axe, not) mark(axe, to) acl(decision, axe) det(concils, the) compond(concils, commnity) compond(concils, health) dobj(axe, concils) advmod(axe, another) case(proposals, of) nmod:poss(predecessor, his) nmod:poss(proposals, predecessor) ""case(predecessor, s)"", nmod:of(another, proposals) pnct(congratlate, .)","root(,VBP) nsbj(VBP,PRP) advmod(VBP,RB) det(NNP,DT) amod(NNP,JJ) compond(NNP,NNP) dobj(VBP,NNP) case(NN,IN) nmod:poss(NN,PRP$) nmod:on(VBP,NN) neg(VB,RB) mark(VB,TO) acl(NN,VB) det(VBZ,DT) compond(VBZ,NN) compond(VBZ,NN) dobj(VB,VBZ) advmod(VB,DT) case(NNS,IN) nmod:poss(NN,PRP$) nmod:poss(NNS,NN) case(NN,POS) nmod:of(DT,NNS) pnct(VBP,VBP)","[I, also, congratulate, ROOT, Gentleman, decision, right]","[also, congratulate, his, decision, I, axe, ROOT, proposals, Gentleman, his, predecessor]",9,"[also, congratulate, his, decision, I, axe, ROOT, proposals, Gentleman, his, predecessor]","[also, congratulate, his, decision, I, axe, ROOT, proposals, Gentleman, his, predecessor]",RB_also VBP_congratulate PRP$_his NN_decision PRP_I VB_axe NNS_proposals NNP_Gentleman PRP$_his NN_predecessor ,"[also, congratulate, his, decision, I, axe, ROOT, proposals, Gentleman, his, predecessor]","[also, congratulate, his, decision, I, axe, ROOT, proposals, Gentleman, his, predecessor]",RB_also VBP_congratulate PRP$_his NN_decision PRP_I VB_axe NNS_proposals NNP_Gentleman PRP$_his NN_predecessor ,"[also, congratulate, his, decision, I, axe, ROOT, proposals, Gentleman, his, predecessor]",RB_also VBP_congratulate PRP$_his NN_decision PRP_I VB_axe NNS_proposals NNP_Gentleman PRP$_his NN_predecessor ,"[also, congratulate, his, decision, I, axe, ROOT, proposals, Gentleman, his, predecessor]",RB_also VBP_congratulate PRP$_his NN_decision PRP_I VB_axe NNS_proposals NNP_Gentleman PRP$_his NN_predecessor ,2,2,2,2,1,2,2,0,1,2
What will he do to make care in the community a reality  not a Government slogan?,WhatWP willMD hePRP doVB toTO makeVB careNN inIN theDT communityNN aDT realityNN notRB aDT GovernmentNNP sloganNN ,"root(ROOT-0, do-4) dobj(do-4, What-1) aux(do-4, will-2) nsubj(do-4, he-3) mark(make-6, to-5) xcomp(do-4, make-6) dobj(make-6, care-7) case(community-10, in-8) det(community-10, the-9) nmod:in(care-7, community-10) det(reality-12, a-11) dep(care-7, reality-12) punct(reality-12, ,-13) neg(slogan-17, not-14) det(slogan-17, a-15) compound(slogan-17, Government-16) appos(reality-12, slogan-17) punct(do-4, ?-18)",1,0,0,"root(ROOT, do) dobj(do, What) ax(do, will) nsbj(do, he) mark(make, to) xcomp(do, make) dobj(make, care) case(commnity, in) det(commnity, the) nmod:in(care, commnity) det(reality, a) dep(care, reality) pnct(reality, ,) neg(slogan, not) det(slogan, a) compond(slogan, Government) appos(reality, slogan) pnct(do, ?)","root(,VB) VBbj(VB,WP) ax(VB,MD) nsbj(VB,PRP) mark(VB,TO) xcomp(VB,VB) dobj(VB,NN) case(NN,IN) det(NN,DT) nmod:in(NN,NN) det(NN,DT) dep(NN,NN) pnct(NN,NN) neg(NN,RB) det(NN,DT) compond(NN,NNP) appos(NN,NN) pnct(VB,VB)","[make, What, slogan, reality, ROOT, he, do, not]","[make, What, slogan, reality, ROOT, he, do, not]",9,"[reality, not, slogan]","[reality, not, slogan]",VB_make WP_What NN_slogan NN_reality PRP_he VB_do RB_not ,[ ],[ ],[ ],[ ],[ ],[ ],[ ],1,2,2,0,0,0,0,0,0,0
